

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Dec  6 16:42:28 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=4,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=4,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=4,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=4,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=4,class=CODE,delta=1
   166                           	psect	text143,global,reloc=4,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=4,class=CODE,delta=1
   171                           	psect	text148,global,reloc=4,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=4,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=4,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=4,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=4,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=4,class=CODE,delta=1
   183                           	psect	text160,global,reloc=4,class=CODE,delta=1
   184                           	psect	text161,global,reloc=4,class=CODE,delta=1
   185                           	psect	text162,global,reloc=4,class=CODE,delta=1
   186                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   187                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   188                           	psect	text163,global,reloc=4,class=CODE,delta=1
   189                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   190                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   191  0000                     
   192                           ; Version 2.10
   193                           ; Generated 31/07/2019 GMT
   194                           ; 
   195                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   196                           ; All rights reserved.
   197                           ; 
   198                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   199                           ; 
   200                           ; Redistribution and use in source and binary forms, with or without modification, are
   201                           ; permitted provided that the following conditions are met:
   202                           ; 
   203                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   204                           ;        conditions and the following disclaimer.
   205                           ; 
   206                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   207                           ;        of conditions and the following disclaimer in the documentation and/or other
   208                           ;        materials provided with the distribution.
   209                           ; 
   210                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   211                           ;        software without specific prior written permission.
   212                           ; 
   213                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   214                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   215                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   216                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   217                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   218                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   219                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   220                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   221                           ; 
   222                           ; 
   223                           ; Code-generator required, PIC18F57K42 Definitions
   224                           ; 
   225                           ; SFR Addresses
   226  0000                     
   227 ;;_k	offset	0
   228 ;;_j	offset	1
   229 ;;_i	offset	2
   230 ;;_inp_index	offset	3
   231 ;;_mode	offset	4
   232 ;;_channel	offset=-1 (param)
   233 ;;_s	offset=-2 (param)
   234 ;;_cmd	offset=-1 (param)
   235 ;;_cmd	offset=-1 (param)
   236 ;;_data	offset=-1 (param)
   237 ;;__this	offset=-2 (param)
   238 ;;_cvoltage	offset=-4 (param)
   239 ;;_h	offset=-1 (param)
   240 ;;_h	offset=-1 (param)
   241 ;;_i	offset=-1 (param)
   242 ;;_cmd	offset=-1 (param)
   243 ;;_i	offset	0
   244 ;;_chan	offset=-1 (param)
   245 ;;_to_what	offset=-2 (param)
   246 ;;_u	offset	0
   247 ;;_s	offset=-2 (param)
   248 ;;_index	offset=-1 (param)
   249 ;;_arg	offset	0
   250 ;;_exp	offset	4
   251 ;;_sign	offset=-1 (param)
   252 ;;_val	offset=-5 (param)
   253 ;;_h	offset=-1 (param)
   254 ;;_flipper	offset=-1 (param)
   255 ;;_f	offset	0
   256 ;;_ap	offset	6
   257 ;;_s	offset=-3 (param)
   258 ;;_fmt	offset=-5 (param)
   259 ;;_line	offset=-1 (param)
   260 ;;_vterm	offset=-2 (param)
   261 ;;_numMilliseconds	offset=-2 (param)
   262 ;;_vterm	offset=-1 (param)
   263 ;;_r	offset=-1 (param)
   264 ;;_c	offset=-2 (param)
   265 ;;_strPtr	offset=-4 (param)
   266 ;;_strPtr	offset=-1 (param)
   267 ;;_delay	offset=-4 (param)
   268 ;;_strPtr	offset=-2 (param)
   269 ;;__this	offset=-2 (param)
   270 ;;_clearBuffer	offset=-3 (param)
   271 ;;_s	offset	0
   272 ;;_k	offset	2
   273 ;;_dest	offset=-2 (param)
   274 ;;_c	offset=-4 (param)
   275 ;;_n	offset=-6 (param)
   276 ;;_ap	offset	0
   277 ;;_fmt	offset=-3 (param)
   278 ;;_cfmt	offset	0
   279 ;;_fp	offset=-2 (param)
   280 ;;_fmt	offset=-4 (param)
   281 ;;_ap	offset=-6 (param)
   282 ;;_vfpfcnvrt$5102	offset	0
   283 ;;_vfpfcnvrt$5108	offset	2
   284 ;;_vfpfcnvrt$5101	offset	4
   285 ;;_llu	offset	6
   286 ;;_ll	offset	14
   287 ;;_f	offset	22
   288 ;;_ct	offset	26
   289 ;;_cp	offset	29
   290 ;;_c	offset	31
   291 ;;_fp	offset=-2 (param)
   292 ;;_fmt	offset=-4 (param)
   293 ;;_ap	offset=-6 (param)
   294 ;;_xtoa$5087	offset	0
   295 ;;_xtoa$5086	offset	2
   296 ;;_n	offset	4
   297 ;;_c	offset	12
   298 ;;_i	offset	14
   299 ;;_w	offset	16
   300 ;;_p	offset	18
   301 ;;_fp	offset=-2 (param)
   302 ;;_d	offset=-10 (param)
   303 ;;_x	offset=-11 (param)
   304 ;;_toupper$5862	offset	0
   305 ;;_c	offset=-2 (param)
   306 ;;_c	offset=-2 (param)
   307 ;;_c	offset=-2 (param)
   308 ;;_r	offset	0
   309 ;;_l	offset	2
   310 ;;__l	offset=-2 (param)
   311 ;;__r	offset=-4 (param)
   312 ;;_n	offset=-6 (param)
   313 ;;_nuls	offset	0
   314 ;;_l	offset	7
   315 ;;_p	offset	9
   316 ;;_cp	offset	11
   317 ;;_w	offset	13
   318 ;;_i	offset	15
   319 ;;_fp	offset=-2 (param)
   320 ;;_s	offset=-4 (param)
   321 ;;_efgtoa$5066	offset	0
   322 ;;_efgtoa$5065	offset	2
   323 ;;_efgtoa$5064	offset	4
   324 ;;_efgtoa$5060	offset	6
   325 ;;_efgtoa$5056	offset	8
   326 ;;_efgtoa$5055	offset	10
   327 ;;_u	offset	12
   328 ;;_g	offset	16
   329 ;;_l	offset	20
   330 ;;_h	offset	24
   331 ;;_ou	offset	28
   332 ;;_n	offset	32
   333 ;;_e	offset	34
   334 ;;_i	offset	36
   335 ;;_w	offset	38
   336 ;;_p	offset	40
   337 ;;_sign	offset	42
   338 ;;_d	offset	44
   339 ;;_ne	offset	46
   340 ;;_m	offset	48
   341 ;;_pp	offset	50
   342 ;;_t	offset	52
   343 ;;_mode	offset	54
   344 ;;_nmode	offset	55
   345 ;;_fp	offset=-2 (param)
   346 ;;_f	offset=-6 (param)
   347 ;;_c	offset=-7 (param)
   348 ;;_tolower$5847	offset	0
   349 ;;_c	offset=-2 (param)
   350 ;;_c	offset=-2 (param)
   351 ;;_d	offset	0
   352 ;;_s	offset	2
   353 ;;_dest	offset=-2 (param)
   354 ;;_src	offset=-4 (param)
   355 ;;_u	offset	0
   356 ;;_m	offset	4
   357 ;;_e	offset	8
   358 ;;_x	offset=-4 (param)
   359 ;;_u	offset	0
   360 ;;_e	offset	4
   361 ;;_x	offset=-4 (param)
   362 ;;_exp1	offset	0
   363 ;;_sign1	offset	1
   364 ;;_f1	offset=-4 (param)
   365 ;;_f1	offset=-4 (param)
   366 ;;_ff1	offset=-4 (param)
   367 ;;_ff2	offset=-8 (param)
   368 ;;_ff1	offset=-4 (param)
   369 ;;_ff2	offset=-8 (param)
   370 ;;_grs	offset	0
   371 ;;_rem	offset	4
   372 ;;_new_exp	offset	8
   373 ;;_aexp	offset	10
   374 ;;_bexp	offset	11
   375 ;;_sign	offset	12
   376 ;;_b	offset=-4 (param)
   377 ;;_a	offset=-8 (param)
   378 ;;_sign	offset	0
   379 ;;_counter	offset	1
   380 ;;_dividend	offset=-2 (param)
   381 ;;_divisor	offset=-4 (param)
   382 ;;_quotient	offset	0
   383 ;;_sign	offset	2
   384 ;;_counter	offset	3
   385 ;;_dividend	offset=-2 (param)
   386 ;;_divisor	offset=-4 (param)
   387 ;;_dtoa$5032	offset	0
   388 ;;_n	offset	2
   389 ;;_i	offset	10
   390 ;;_s	offset	12
   391 ;;_w	offset	14
   392 ;;_p	offset	16
   393 ;;_fp	offset=-2 (param)
   394 ;;_d	offset=-10 (param)
   395 ;;_a	offset=-2 (param)
   396 ;;_sign	offset	0
   397 ;;_counter	offset	1
   398 ;;_dividend	offset=-8 (param)
   399 ;;_divisor	offset=-16 (param)
   400 ;;_quotient	offset	0
   401 ;;_sign	offset	8
   402 ;;_counter	offset	9
   403 ;;_dividend	offset=-8 (param)
   404 ;;_divisor	offset=-16 (param)
   405 ;;_w	offset	0
   406 ;;_fp	offset=-2 (param)
   407 ;;_c	offset=-3 (param)
   408 ;;_w	offset	0
   409 ;;_i	offset	2
   410 ;;_fp	offset=-2 (param)
   411 ;;_buf	offset=-4 (param)
   412 ;;_p	offset=-6 (param)
   413 ;;_a	offset	0
   414 ;;_s	offset=-2 (param)
   415 ;;_i	offset	0
   416 ;;_c	offset	2
   417 ;;_s	offset=-2 (param)
   418 ;;_fp	offset=-4 (param)
   419 ;;_c	offset=-2 (param)
   420 ;;_fp	offset=-4 (param)
   421 ;;_c	offset=-1 (param)
   422 ;;__this	offset=-2 (param)
   423 ;;_c	offset=-3 (param)
   424 ;;_atoi$5585	offset	0
   425 ;;_atoi$5583	offset	2
   426 ;;_atoi$5584	offset	4
   427 ;;_n	offset	5
   428 ;;_neg	offset	7
   429 ;;_s	offset=-2 (param)
   430 ;;_isspace$5623	offset	0
   431 ;;_c	offset=-2 (param)
   432 ;;_c	offset=-2 (param)
   433 ;;_vterm	offset=-1 (param)
   434 ;;_new_response_info	offset=-1 (param)
   435 ;;_new_response_info	offset=-1 (param)
   436 ;;_level	offset=-2 (param)
   437 ;;_dutyValue	offset=-2 (param)
   438 ;;_timer	offset=-1 (param)
   439 ;;_timer	offset=-1 (param)
   440 ;;_count	offset=-3 (param)
   441 ;;_h	offset=-1 (param)
   442 ;;_lp_speed	offset	0
   443 ;;_new	offset=-4 (param)
   444 ;;_bn	offset=-5 (param)
   445 ;;_slow	offset=-6 (param)
   446 ;;_b	offset=-4 (param)
   447 ;;_a	offset=-8 (param)
   448 ;;_grs	offset	0
   449 ;;_bexp	offset	1
   450 ;;_aexp	offset	2
   451 ;;_signs	offset	3
   452 ;;_b	offset=-4 (param)
   453 ;;_a	offset=-8 (param)
   454 ;;_prod	offset	0
   455 ;;_grs	offset	4
   456 ;;_temp	offset	8
   457 ;;_bexp	offset	10
   458 ;;_aexp	offset	11
   459 ;;_sign	offset	12
   460 ;;_b	offset=-4 (param)
   461 ;;_a	offset=-8 (param)
   462 ;;_InterruptHandler	offset=-3 (param)
   463 ;;_InterruptHandler	offset=-3 (param)
   464 ;;_InterruptHandler	offset=-3 (param)
   465 ;;_InterruptHandler	offset=-3 (param)
   466 ;;_InterruptHandler	offset=-3 (param)
   467 ;;_InterruptHandler	offset=-3 (param)
   468 ;;_InterruptHandler	offset=-3 (param)
   469 ;;_state	offset	0
   470 ;;_InterruptHandler	offset=-3 (param)
   471 ;;_InterruptHandler	offset=-3 (param)
   472 ;;_InterruptHandler	offset=-3 (param)
   473 ;;_InterruptHandler	offset=-3 (param)
   474 ;;_i	offset	0
   475 ;;_sw_value	offset	1
   476 ;;_timerVal	offset=-2 (param)
   477 ;;_timerVal	offset=-2 (param)
   478 ;;_temp	offset	0
   479 ;;_arg	offset	0
   480 ;;_exp	offset	4
   481 ;;_sign	offset=-1 (param)
   482 ;;_val	offset=-5 (param)
   483 ;;_exp1	offset	0
   484 ;;_sign1	offset	1
   485 ;;_f1	offset=-4 (param)
   486 ;;_f1	offset=-4 (param)
   487 ;;_prod	offset	0
   488 ;;_grs	offset	4
   489 ;;_temp	offset	8
   490 ;;_bexp	offset	10
   491 ;;_aexp	offset	11
   492 ;;_sign	offset	12
   493 ;;_b	offset=-4 (param)
   494 ;;_a	offset=-8 (param)
   495 ;;_ff1	offset=-4 (param)
   496 ;;_ff2	offset=-8 (param)
   497 ;;_grs	offset	0
   498 ;;_rem	offset	4
   499 ;;_new_exp	offset	8
   500 ;;_aexp	offset	10
   501 ;;_bexp	offset	11
   502 ;;_sign	offset	12
   503 ;;_b	offset=-4 (param)
   504 ;;_a	offset=-8 (param)
   505 ;;_grs	offset	0
   506 ;;_bexp	offset	1
   507 ;;_aexp	offset	2
   508 ;;_signs	offset	3
   509 ;;_b	offset=-4 (param)
   510 ;;_a	offset=-8 (param)
   511 ;;_cvoltage	offset=-4 (param)
   512 ;;_channel	offset=-1 (param)
   513 ;;_i	offset	0
   514                           
   515                           	psect	idataBANK0
   516  018FCA                     __pidataBANK0:
   517                           	opt callstack 0
   518                           
   519                           ;initializer for _R
   520  018FCA  0000               	dw	0
   521  018FCC  0000               	dw	0
   522  018FCE  0000               	dw	0
   523  018FD0  0000               	dw	0
   524  018FD2  0000               	dw	0
   525  018FD4  0000               	dw	0
   526  018FD6  0000               	dw	0
   527  018FD8  0000               	dw	0
   528  018FDA  0000               	dw	0
   529  018FDC  0000               	dw	0
   530  018FDE  0000               	dw	0
   531  018FE0  0000               	dw	0
   532  018FE2  0000               	dw	0
   533  018FE4  0000               	dw	0
   534  018FE6  0000               	dw	0
   535  018FE8  0000               	dw	0
   536  018FEA  0F67               	dw	3943
   537  018FEC  0F8F               	dw	3983
   538  018FEE  00                 	db	0
   539  018FEF  0000               	dw	0
   540  018FF1  00                 	db	0
   541                           
   542                           ;initializer for stoa@F1166
   543  018FF2  28                 	db	40
   544  018FF3  6E                 	db	110
   545  018FF4  75                 	db	117
   546  018FF5  6C                 	db	108
   547  018FF6  6C                 	db	108
   548  018FF7  29                 	db	41
   549  018FF8  00                 	db	0
   550                           
   551                           ;initializer for _H
   552  018FF9  00                 	db	0
   553  018FFA  00                 	db	0
   554  018FFB  01                 	db	1
   555  018FFC  00                 	db	0
   556  018FFD  01                 	db	1
   557  018FFE  00                 	db	0
   558  018FFF  00                 	db	0
   559                           
   560                           	psect	idataBANK1
   561  017A54                     __pidataBANK1:
   562                           	opt callstack 0
   563                           
   564                           ;initializer for _C
   565  017A54  0000               	dw	0
   566  017A56  0000               	dw	0
   567  017A58  0000               	dw	0
   568  017A5A  0000               	dw	0
   569  017A5C  0000               	dw	0
   570  017A5E  0000               	dw	0
   571  017A60  0000               	dw	0
   572  017A62  0000               	dw	0
   573  017A64  0000               	dw	0
   574  017A66  0000               	dw	0
   575  017A68  0000               	dw	0
   576  017A6A  0000               	dw	0
   577  017A6C  0000               	dw	0
   578  017A6E  0000               	dw	0
   579  017A70  0000               	dw	0
   580  017A72  0000               	dw	0
   581  017A74  0000               	dw	0
   582  017A76  0000               	dw	0
   583  017A78  0000               	dw	0
   584  017A7A  0000               	dw	0
   585  017A7C  0000               	dw	0
   586  017A7E  0000               	dw	0
   587  017A80  0000               	dw	0
   588  017A82  0000               	dw	0
   589  017A84  0000               	dw	0
   590  017A86  0000               	dw	0
   591  017A88  0000               	dw	0
   592  017A8A  0000               	dw	0
   593  017A8C  0000               	dw	0
   594  017A8E  0000               	dw	0
   595  017A90  0000               	dw	0
   596  017A92  0000               	dw	0
   597  017A94  0000               	dw	0
   598  017A96  0000               	dw	0
   599  017A98  0000               	dw	0
   600  017A9A  0000               	dw	0
   601  017A9C  0000               	dw	0
   602  017A9E  0000               	dw	0
   603  017AA0  0000               	dw	0
   604  017AA2  0000               	dw	0
   605  017AA4  0000               	dw	0
   606  017AA6  0000               	dw	0
   607  017AA8  0000               	dw	0
   608  017AAA  0000               	dw	0
   609  017AAC  0000               	dw	0
   610  017AAE  0000               	dw	0
   611  017AB0  0000               	dw	0
   612  017AB2  0000               	dw	0
   613  017AB4  0000               	dw	0
   614  017AB6  0000               	dw	0
   615  017AB8  0000               	dw	0
   616  017ABA  0000               	dw	0
   617  017ABC  0000               	dw	0
   618  017ABE  0000               	dw	0
   619  017AC0  0000               	dw	0
   620  017AC2  0000               	dw	0
   621  017AC4  0000               	dw	0
   622  017AC6  0000               	dw	0
   623  017AC8  0000               	dw	0
   624  017ACA  0000               	dw	0
   625  017ACC  0000               	dw	0
   626  017ACE  0000               	dw	0
   627  017AD0  0000               	dw	0
   628  017AD2  42FA               	dw	17146
   629  017AD4  00                 	db	0
   630  017AD5  00                 	db	0
   631  017AD6  00                 	db	0
   632  017AD7  00                 	db	0
   633  017AD8  00                 	db	0
   634  017AD9  00                 	db	0
   635  017ADA  00                 	db	0
   636  017ADB  00                 	db	0
   637  017ADC  00                 	db	0
   638  017ADD  00                 	db	0
   639  017ADE  00                 	db	0
   640  017ADF  00                 	db	0
   641  017AE0  00                 	db	0
   642  017AE1  00                 	db	0
   643  017AE2  00                 	db	0
   644  017AE3  00                 	db	0
   645  017AE4  00                 	db	0
   646  017AE5  00                 	db	0
   647  017AE6  00                 	db	0
   648  017AE7  00                 	db	0
   649  017AE8  00                 	db	0
   650  017AE9  00                 	db	0
   651  017AEA  00                 	db	0
   652  017AEB  00                 	db	0
   653  017AEC  00                 	db	0
   654  017AED  00                 	db	0
   655  017AEE  00                 	db	0
   656  017AEF  00                 	db	0
   657  017AF0  00                 	db	0
   658  017AF1  00                 	db	0
   659  017AF2  00                 	db	0
   660  017AF3  00                 	db	0
   661  017AF4  00                 	db	0
   662  017AF5  00                 	db	0
   663  017AF6  00                 	db	0
   664  017AF7  00                 	db	0
   665  017AF8  00                 	db	0
   666  017AF9  00                 	db	0
   667  017AFA  00                 	db	0
   668  017AFB  00                 	db	0
   669  017AFC  00                 	db	0
   670  017AFD  00                 	db	0
   671  017AFE  00                 	db	0
   672  017AFF  00                 	db	0
   673  017B00  00                 	db	0
   674  017B01  00                 	db	0
   675  017B02  00                 	db	0
   676  017B03  00                 	db	0
   677  017B04  00                 	db	0
   678  017B05  00                 	db	0
   679  017B06  00                 	db	0
   680  017B07  00                 	db	0
   681  017B08  00                 	db	0
   682  017B09  00                 	db	0
   683  017B0A  00                 	db	0
   684  017B0B  00                 	db	0
   685  017B0C  00                 	db	0
   686  017B0D  00                 	db	0
   687  017B0E  00                 	db	0
   688  017B0F  00                 	db	0
   689  017B10  00                 	db	0
   690  017B11  00                 	db	0
   691  017B12  00                 	db	0
   692  017B13  00                 	db	0
   693  017B14  00                 	db	0
   694  017B15  00                 	db	0
   695  017B16  00                 	db	0
   696  017B17  00                 	db	0
   697  017B18  00                 	db	0
   698  017B19  00                 	db	0
   699  017B1A  00                 	db	0
   700  017B1B  00                 	db	0
   701  017B1C  00                 	db	0
   702  017B1D  00                 	db	0
   703  017B1E  00                 	db	0
   704  017B1F  00                 	db	0
   705  017B20  00                 	db	0
   706  017B21  00                 	db	0
   707  017B22  00                 	db	0
   708  017B23  00                 	db	0
   709  017B24  00                 	db	0
   710  017B25  00                 	db	0
   711  017B26  00                 	db	0
   712  017B27  00                 	db	0
   713  017B28  00                 	db	0
   714  017B29  00                 	db	0
   715  017B2A  00                 	db	0
   716                           
   717                           	psect	idataBANK2
   718  017C00                     __pidataBANK2:
   719                           	opt callstack 0
   720                           
   721                           ;initializer for _V
   722  017C00  00                 	db	0
   723  017C01  00                 	db	0
   724  017C02  00                 	db	0
   725  017C03  00                 	db	0
   726  017C04  00                 	db	0
   727  017C05  00                 	db	0
   728  017C06  00                 	db	0
   729  017C07  00                 	db	0
   730  017C08  00                 	db	0
   731  017C09  00                 	db	0
   732  017C0A  00                 	db	0
   733  017C0B  00                 	db	0
   734  017C0C  00                 	db	0
   735  017C0D  00                 	db	0
   736  017C0E  00                 	db	0
   737  017C0F  00                 	db	0
   738  017C10  00                 	db	0
   739  017C11  00                 	db	0
   740  017C12  00                 	db	0
   741  017C13  00                 	db	0
   742  017C14  00                 	db	0
   743  017C15  00                 	db	0
   744  017C16  00                 	db	0
   745  017C17  00                 	db	0
   746  017C18  00                 	db	0
   747  017C19  00                 	db	0
   748  017C1A  00                 	db	0
   749  017C1B  00                 	db	0
   750  017C1C  00                 	db	0
   751  017C1D  00                 	db	0
   752  017C1E  00                 	db	0
   753  017C1F  00                 	db	0
   754  017C20  00                 	db	0
   755  017C21  00                 	db	0
   756  017C22  00                 	db	0
   757  017C23  00                 	db	0
   758  017C24  00                 	db	0
   759  017C25  00                 	db	0
   760  017C26  00                 	db	0
   761  017C27  00                 	db	0
   762  017C28  00                 	db	0
   763  017C29  00                 	db	0
   764  017C2A  00                 	db	0
   765  017C2B  00                 	db	0
   766  017C2C  00                 	db	0
   767  017C2D  00                 	db	0
   768  017C2E  00                 	db	0
   769  017C2F  00                 	db	0
   770  017C30  00                 	db	0
   771  017C31  00                 	db	0
   772  017C32  00                 	db	0
   773  017C33  00                 	db	0
   774  017C34  00                 	db	0
   775  017C35  00                 	db	0
   776  017C36  00                 	db	0
   777  017C37  00                 	db	0
   778  017C38  00                 	db	0
   779  017C39  00                 	db	0
   780  017C3A  00                 	db	0
   781  017C3B  00                 	db	0
   782  017C3C  00                 	db	0
   783  017C3D  00                 	db	0
   784  017C3E  00                 	db	0
   785  017C3F  00                 	db	0
   786  017C40  00                 	db	0
   787  017C41  00                 	db	0
   788  017C42  00                 	db	0
   789  017C43  00                 	db	0
   790  017C44  00                 	db	0
   791  017C45  00                 	db	0
   792  017C46  00                 	db	0
   793  017C47  00                 	db	0
   794  017C48  00                 	db	0
   795  017C49  00                 	db	0
   796  017C4A  00                 	db	0
   797  017C4B  00                 	db	0
   798  017C4C  00                 	db	0
   799  017C4D  00                 	db	0
   800  017C4E  00                 	db	0
   801  017C4F  00                 	db	0
   802  017C50  00                 	db	0
   803  017C51  00                 	db	0
   804  017C52  00                 	db	0
   805  017C53  00                 	db	0
   806  017C54  00                 	db	0
   807  017C55  00                 	db	0
   808  017C56  00                 	db	0
   809  017C57  00                 	db	0
   810  017C58  00                 	db	0
   811  017C59  00                 	db	0
   812  017C5A  00                 	db	0
   813  017C5B  00                 	db	0
   814  017C5C  00                 	db	0
   815  017C5D  00                 	db	0
   816  017C5E  00                 	db	0
   817  017C5F  00                 	db	0
   818  017C60  00                 	db	0
   819  017C61  00                 	db	0
   820  017C62  00                 	db	0
   821  017C63  00                 	db	0
   822  017C64  00                 	db	0
   823  017C65  00                 	db	0
   824  017C66  00                 	db	0
   825  017C67  00                 	db	0
   826  017C68  00                 	db	0
   827  017C69  00                 	db	0
   828  017C6A  00                 	db	0
   829  017C6B  00                 	db	0
   830  017C6C  00                 	db	0
   831  017C6D  00                 	db	0
   832  017C6E  00                 	db	0
   833  017C6F  00                 	db	0
   834  017C70  00                 	db	0
   835  017C71  00                 	db	0
   836  017C72  00                 	db	0
   837  017C73  00                 	db	0
   838  017C74  00                 	db	0
   839  017C75  00                 	db	0
   840  017C76  00                 	db	0
   841  017C77  00                 	db	0
   842  017C78  00                 	db	0
   843  017C79  00                 	db	0
   844  017C7A  00                 	db	0
   845  017C7B  00                 	db	0
   846  017C7C  00                 	db	0
   847  017C7D  00                 	db	0
   848  017C7E  00                 	db	0
   849  017C7F  00                 	db	0
   850  017C80  00                 	db	0
   851  017C81  0000               	dw	0
   852  017C83  0000               	dw	0
   853  017C85  0000               	dw	0
   854  017C87  0000               	dw	0
   855  017C89  00                 	db	0
   856  017C8A  00                 	db	0
   857  017C8B  00                 	db	0
   858  017C8C  00                 	db	0
   859  017C8D  00                 	db	0
   860  017C8E  00                 	db	0
   861  017C8F  0000               	dw	0
   862  017C91  0000               	dw	0
   863  017C93  0000               	dw	0
   864  017C95  0000               	dw	0
   865  017C97  0000               	dw	0
   866  017C99  0000               	dw	0
   867  017C9B  00                 	db	0
   868  017C9C  00                 	db	0
   869  017C9D  00                 	db	0
   870  017C9E  00                 	db	0
   871  017C9F  00                 	db	0
   872  017CA0  00                 	db	0
   873  017CA1  00                 	db	0
   874  017CA2  00                 	db	0
   875  017CA3  00                 	db	0
   876  017CA4  00                 	db	0
   877  017CA5  0000               	dw	0
   878  017CA7  0000               	dw	0
   879  017CA9  2D                 	db	45
   880  017CAA  00                 	db	0
   881  017CAB  00                 	db	0
   882  017CAC  0000               	dw	0
   883  017CAE  0000               	dw	0
   884  017CB0  0000               	dw	0
   885  017CB2  0000               	dw	0
   886  017CB4  0000               	dw	0
   887  017CB6  0000               	dw	0
   888  017CB8  0000               	dw	0
   889  017CBA  0000               	dw	0
   890                           
   891                           ;initializer for _port_data
   892  017CBC  FF                 	db	255
   893  017CBD  00                 	db	0
   894  017CBE  FF                 	db	255
   895  017CBF  00                 	db	0
   896  017CC0  FF                 	db	255
   897  017CC1  00                 	db	0
   898  017CC2  FF                 	db	255
   899  017CC3  00                 	db	0
   900  017CC4  FF                 	db	255
   901  017CC5  00                 	db	0
   902  017CC6  FF                 	db	255
   903  017CC7  00                 	db	0
   904  017CC8  FF                 	db	255
   905  017CC9  00                 	db	0
   906  017CCA  FF                 	db	255
   907  017CCB  00                 	db	0
   908                           
   909                           	psect	mediumconst
   910  00FCCC                     __pmediumconst:
   911                           	opt callstack 0
   912  00FCCC  00                 	db	0
   913  00FCCD                     _BVSOC_TABLE:
   914                           	opt callstack 0
   915  00FCCD  59D8               	dw	23000
   916  00FCCF  0000               	dw	0
   917  00FCD1  0005               	dw	5
   918  00FCD3  0000               	dw	0
   919  00FCD5  5B68               	dw	23400
   920  00FCD7  0000               	dw	0
   921  00FCD9  000A               	dw	10
   922  00FCDB  0000               	dw	0
   923  00FCDD  5C30               	dw	23600
   924  00FCDF  0000               	dw	0
   925  00FCE1  0014               	dw	20
   926  00FCE3  0000               	dw	0
   927  00FCE5  5E38               	dw	24120
   928  00FCE7  0000               	dw	0
   929  00FCE9  0019               	dw	25
   930  00FCEB  0000               	dw	0
   931  00FCED  5E88               	dw	24200
   932  00FCEF  0000               	dw	0
   933  00FCF1  001E               	dw	30
   934  00FCF3  0000               	dw	0
   935  00FCF5  5F78               	dw	24440
   936  00FCF7  0000               	dw	0
   937  00FCF9  0028               	dw	40
   938  00FCFB  0000               	dw	0
   939  00FCFD  5FDC               	dw	24540
   940  00FCFF  0000               	dw	0
   941  00FD01  002D               	dw	45
   942  00FD03  0000               	dw	0
   943  00FD05  6018               	dw	24600
   944  00FD07  0000               	dw	0
   945  00FD09  0032               	dw	50
   946  00FD0B  0000               	dw	0
   947  00FD0D  6046               	dw	24646
   948  00FD0F  0000               	dw	0
   949  00FD11  0035               	dw	53
   950  00FD13  0000               	dw	0
   951  00FD15  607C               	dw	24700
   952  00FD17  0000               	dw	0
   953  00FD19  0037               	dw	55
   954  00FD1B  0000               	dw	0
   955  00FD1D  60AE               	dw	24750
   956  00FD1F  0000               	dw	0
   957  00FD21  0039               	dw	57
   958  00FD23  0000               	dw	0
   959  00FD25  60E0               	dw	24800
   960  00FD27  0000               	dw	0
   961  00FD29  003C               	dw	60
   962  00FD2B  0000               	dw	0
   963  00FD2D  6112               	dw	24850
   964  00FD2F  0000               	dw	0
   965  00FD31  003F               	dw	63
   966  00FD33  0000               	dw	0
   967  00FD35  6176               	dw	24950
   968  00FD37  0000               	dw	0
   969  00FD39  0043               	dw	67
   970  00FD3B  0000               	dw	0
   971  00FD3D  61A8               	dw	25000
   972  00FD3F  0000               	dw	0
   973  00FD41  0046               	dw	70
   974  00FD43  0000               	dw	0
   975  00FD45  61BC               	dw	25020
   976  00FD47  0000               	dw	0
   977  00FD49  0048               	dw	72
   978  00FD4B  0000               	dw	0
   979  00FD4D  61D0               	dw	25040
   980  00FD4F  0000               	dw	0
   981  00FD51  004B               	dw	75
   982  00FD53  0000               	dw	0
   983  00FD55  61DA               	dw	25050
   984  00FD57  0000               	dw	0
   985  00FD59  0050               	dw	80
   986  00FD5B  0000               	dw	0
   987  00FD5D  61E4               	dw	25060
   988  00FD5F  0000               	dw	0
   989  00FD61  0055               	dw	85
   990  00FD63  0000               	dw	0
   991  00FD65  61F8               	dw	25080
   992  00FD67  0000               	dw	0
   993  00FD69  005A               	dw	90
   994  00FD6B  0000               	dw	0
   995  00FD6D  6208               	dw	25096
   996  00FD6F  0000               	dw	0
   997  00FD71  005C               	dw	92
   998  00FD73  0000               	dw	0
   999  00FD75  6222               	dw	25122
  1000  00FD77  0000               	dw	0
  1001  00FD79  005D               	dw	93
  1002  00FD7B  0000               	dw	0
  1003  00FD7D  6234               	dw	25140
  1004  00FD7F  0000               	dw	0
  1005  00FD81  005F               	dw	95
  1006  00FD83  0000               	dw	0
  1007  00FD85  6248               	dw	25160
  1008  00FD87  0000               	dw	0
  1009  00FD89  0061               	dw	97
  1010  00FD8B  0000               	dw	0
  1011  00FD8D  625C               	dw	25180
  1012  00FD8F  0000               	dw	0
  1013  00FD91  0064               	dw	100
  1014  00FD93  0000               	dw	0
  1015  00FD95  6658               	dw	26200
  1016  00FD97  0000               	dw	0
  1017  00FD99  005A               	dw	90
  1018  00FD9B  0000               	dw	0
  1019  00FD9D                     __end_of_BVSOC_TABLE:
  1020                           	opt callstack 0
  1021  00FD9D                     _T:
  1022                           	opt callstack 0
  1023  00FD9D  63                 	db	99
  1024  00FD9E  6F                 	db	111
  1025  00FD9F  6D                 	db	109
  1026  00FDA0  6D                 	db	109
  1027  00FDA1  61                 	db	97
  1028  00FDA2  6E                 	db	110
  1029  00FDA3  64                 	db	100
  1030  00FDA4  73                 	db	115
  1031  00FDA5  20                 	db	32
  1032  00FDA6  31                 	db	49
  1033  00FDA7  00                 	db	0
  1034  00FDA8  00                 	db	0
  1035  00FDA9  00                 	db	0
  1036  00FDAA  00                 	db	0
  1037  00FDAB  00                 	db	0
  1038  00FDAC  00                 	db	0
  1039  00FDAD  00                 	db	0
  1040  00FDAE  00                 	db	0
  1041  00FDAF  64                 	db	100
  1042  00FDB0  69                 	db	105
  1043  00FDB1  73                 	db	115
  1044  00FDB2  70                 	db	112
  1045  00FDB3  6C                 	db	108
  1046  00FDB4  61                 	db	97
  1047  00FDB5  79                 	db	121
  1048  00FDB6  73                 	db	115
  1049  00FDB7  20                 	db	32
  1050  00FDB8  31                 	db	49
  1051  00FDB9  00                 	db	0
  1052  00FDBA  00                 	db	0
  1053  00FDBB  00                 	db	0
  1054  00FDBC  00                 	db	0
  1055  00FDBD  00                 	db	0
  1056  00FDBE  00                 	db	0
  1057  00FDBF  00                 	db	0
  1058  00FDC0  00                 	db	0
  1059  00FDC1  63                 	db	99
  1060  00FDC2  6F                 	db	111
  1061  00FDC3  6D                 	db	109
  1062  00FDC4  6D                 	db	109
  1063  00FDC5  61                 	db	97
  1064  00FDC6  6E                 	db	110
  1065  00FDC7  64                 	db	100
  1066  00FDC8  73                 	db	115
  1067  00FDC9  20                 	db	32
  1068  00FDCA  32                 	db	50
  1069  00FDCB  00                 	db	0
  1070  00FDCC  00                 	db	0
  1071  00FDCD  00                 	db	0
  1072  00FDCE  00                 	db	0
  1073  00FDCF  00                 	db	0
  1074  00FDD0  00                 	db	0
  1075  00FDD1  00                 	db	0
  1076  00FDD2  00                 	db	0
  1077  00FDD3  64                 	db	100
  1078  00FDD4  69                 	db	105
  1079  00FDD5  73                 	db	115
  1080  00FDD6  70                 	db	112
  1081  00FDD7  6C                 	db	108
  1082  00FDD8  61                 	db	97
  1083  00FDD9  79                 	db	121
  1084  00FDDA  73                 	db	115
  1085  00FDDB  20                 	db	32
  1086  00FDDC  32                 	db	50
  1087  00FDDD  00                 	db	0
  1088  00FDDE  00                 	db	0
  1089  00FDDF  00                 	db	0
  1090  00FDE0  00                 	db	0
  1091  00FDE1  00                 	db	0
  1092  00FDE2  00                 	db	0
  1093  00FDE3  00                 	db	0
  1094  00FDE4  00                 	db	0
  1095  00FDE5  63                 	db	99
  1096  00FDE6  6F                 	db	111
  1097  00FDE7  6D                 	db	109
  1098  00FDE8  6D                 	db	109
  1099  00FDE9  61                 	db	97
  1100  00FDEA  6E                 	db	110
  1101  00FDEB  64                 	db	100
  1102  00FDEC  73                 	db	115
  1103  00FDED  20                 	db	32
  1104  00FDEE  33                 	db	51
  1105  00FDEF  00                 	db	0
  1106  00FDF0  00                 	db	0
  1107  00FDF1  00                 	db	0
  1108  00FDF2  00                 	db	0
  1109  00FDF3  00                 	db	0
  1110  00FDF4  00                 	db	0
  1111  00FDF5  00                 	db	0
  1112  00FDF6  00                 	db	0
  1113  00FDF7  64                 	db	100
  1114  00FDF8  69                 	db	105
  1115  00FDF9  73                 	db	115
  1116  00FDFA  70                 	db	112
  1117  00FDFB  6C                 	db	108
  1118  00FDFC  61                 	db	97
  1119  00FDFD  79                 	db	121
  1120  00FDFE  73                 	db	115
  1121  00FDFF  20                 	db	32
  1122  00FE00  33                 	db	51
  1123  00FE01  00                 	db	0
  1124  00FE02  00                 	db	0
  1125  00FE03  00                 	db	0
  1126  00FE04  00                 	db	0
  1127  00FE05  00                 	db	0
  1128  00FE06  00                 	db	0
  1129  00FE07  00                 	db	0
  1130  00FE08  00                 	db	0
  1131  00FE09  63                 	db	99
  1132  00FE0A  6F                 	db	111
  1133  00FE0B  6D                 	db	109
  1134  00FE0C  6D                 	db	109
  1135  00FE0D  61                 	db	97
  1136  00FE0E  6E                 	db	110
  1137  00FE0F  64                 	db	100
  1138  00FE10  73                 	db	115
  1139  00FE11  20                 	db	32
  1140  00FE12  34                 	db	52
  1141  00FE13  00                 	db	0
  1142  00FE14  00                 	db	0
  1143  00FE15  00                 	db	0
  1144  00FE16  00                 	db	0
  1145  00FE17  00                 	db	0
  1146  00FE18  00                 	db	0
  1147  00FE19  00                 	db	0
  1148  00FE1A  00                 	db	0
  1149  00FE1B  64                 	db	100
  1150  00FE1C  69                 	db	105
  1151  00FE1D  73                 	db	115
  1152  00FE1E  70                 	db	112
  1153  00FE1F  6C                 	db	108
  1154  00FE20  61                 	db	97
  1155  00FE21  79                 	db	121
  1156  00FE22  73                 	db	115
  1157  00FE23  20                 	db	32
  1158  00FE24  34                 	db	52
  1159  00FE25  00                 	db	0
  1160  00FE26  00                 	db	0
  1161  00FE27  00                 	db	0
  1162  00FE28  00                 	db	0
  1163  00FE29  00                 	db	0
  1164  00FE2A  00                 	db	0
  1165  00FE2B  00                 	db	0
  1166  00FE2C  00                 	db	0
  1167  00FE2D                     __end_of_T:
  1168                           	opt callstack 0
  1169  00FE2D  0000               	dw	0
  1170  00FE2F  3F80               	dw	16256
  1171  00FE31  0000               	dw	0
  1172  00FE33  3FC0               	dw	16320
  1173  00FE35                     __end_of_bp:
  1174                           	opt callstack 0
  1175  00FE35  AA00               	dw	43520
  1176  00FE37  3FB8               	dw	16312
  1177  00FE39                     __end_of_ivln2_h:
  1178                           	opt callstack 0
  1179  00FE39  23C6               	dw	9158
  1180  00FE3B  B8F6               	dw	47350
  1181  00FE3D                     __end_of_cp_l:
  1182                           	opt callstack 0
  1183  00FE3D  4000               	dw	16384
  1184  00FE3F  3F76               	dw	16246
  1185  00FE41                     __end_of_cp_h:
  1186                           	opt callstack 0
  1187  0000                     _IVTADL	set	14493
  1188  0000                     _IVTADH	set	14494
  1189  0000                     _IVTADU	set	14495
  1190  0000                     _PIR6bits	set	14758
  1191  0000                     _PIR4bits	set	14756
  1192  0000                     _PIE8bits	set	14744
  1193  0000                     _PIR8bits	set	14760
  1194  0000                     _SCANPR	set	14839
  1195  0000                     _DMA2PR	set	14836
  1196  0000                     _DMA1PR	set	14835
  1197  0000                     _MAINPR	set	14834
  1198  0000                     _ISRPR	set	14833
  1199  0000                     _PIE2bits	set	14738
  1200  0000                     _PIR2bits	set	14754
  1201  0000                     _PIE9bits	set	14745
  1202  0000                     _PIR9bits	set	14761
  1203  0000                     _PIE6bits	set	14742
  1204  0000                     _PIE3bits	set	14739
  1205  0000                     _PMD7	set	14791
  1206  0000                     _PMD6	set	14790
  1207  0000                     _PMD5	set	14789
  1208  0000                     _PMD4	set	14788
  1209  0000                     _PMD3	set	14787
  1210  0000                     _PMD2	set	14786
  1211  0000                     _PMD1	set	14785
  1212  0000                     _PMD0	set	14784
  1213  0000                     _OSCTUNE	set	14814
  1214  0000                     _OSCFRQ	set	14815
  1215  0000                     _OSCEN	set	14813
  1216  0000                     _OSCCON3	set	14811
  1217  0000                     _OSCCON1	set	14809
  1218  0000                     _IPR8bits	set	14728
  1219  0000                     _IPR9bits	set	14729
  1220  0000                     _IPR5bits	set	14725
  1221  0000                     _IPR1bits	set	14721
  1222  0000                     _IPR3bits	set	14723
  1223  0000                     _IPR6bits	set	14726
  1224  0000                     _IPR2bits	set	14722
  1225  0000                     _PIE5bits	set	14741
  1226  0000                     _PIE1bits	set	14737
  1227  0000                     _PIR5bits	set	14757
  1228  0000                     _PIR1bits	set	14753
  1229  0000                     _PLLR	set	118496
  1230  0000                     _SPI1SDIPPS	set	15071
  1231  0000                     _U1RXPPS	set	15077
  1232  0000                     _RC6PPS	set	14870
  1233  0000                     _RC5PPS	set	14869
  1234  0000                     _INT1PPS	set	15041
  1235  0000                     _RD1PPS	set	14873
  1236  0000                     _INT0PPS	set	15040
  1237  0000                     _RC3PPS	set	14867
  1238  0000                     _RB6PPS	set	14862
  1239  0000                     _SPI1SCKPPS	set	15070
  1240  0000                     _U2RXPPS	set	15080
  1241  0000                     _SLRCONF	set	14995
  1242  0000                     _SLRCONE	set	14979
  1243  0000                     _SLRCOND	set	14963
  1244  0000                     _SLRCONC	set	14947
  1245  0000                     _SLRCONB	set	14931
  1246  0000                     _SLRCONA	set	14915
  1247  0000                     _ODCOND	set	14962
  1248  0000                     _ODCONC	set	14946
  1249  0000                     _ODCONB	set	14930
  1250  0000                     _ODCONA	set	14914
  1251  0000                     _ODCONF	set	14994
  1252  0000                     _ODCONE	set	14978
  1253  0000                     _WPUC	set	14945
  1254  0000                     _WPUA	set	14913
  1255  0000                     _WPUB	set	14929
  1256  0000                     _WPUE	set	14977
  1257  0000                     _WPUF	set	14993
  1258  0000                     _WPUD	set	14961
  1259  0000                     _ANSELA	set	14912
  1260  0000                     _ANSELF	set	14992
  1261  0000                     _ANSELE	set	14976
  1262  0000                     _ANSELB	set	14928
  1263  0000                     _ANSELC	set	14944
  1264  0000                     _ANSELD	set	14960
  1265  0000                     _DMA2SSA	set	15321
  1266  0000                     _DMA1SSA	set	15353
  1267  0000                     _DMA2DSZ	set	15310
  1268  0000                     _DMA2SSZ	set	15319
  1269  0000                     _DMA2DSA	set	15312
  1270  0000                     _DMA1DSZ	set	15342
  1271  0000                     _DMA1SSZ	set	15351
  1272  0000                     _DMA1DSA	set	15344
  1273  0000                     _DMA1CON0bits	set	15356
  1274  0000                     _DMA1CON1bits	set	15357
  1275  0000                     _DMA2CON0	set	15324
  1276  0000                     _DMA2AIRQ	set	15326
  1277  0000                     _DMA2SIRQ	set	15327
  1278  0000                     _DMA2CON1	set	15325
  1279  0000                     _DMA1CON0	set	15356
  1280  0000                     _DMA1AIRQ	set	15358
  1281  0000                     _DMA1SIRQ	set	15359
  1282  0000                     _DMA1CON1	set	15357
  1283  0000                     _CLKRCON	set	15589
  1284  0000                     _CLKRCLK	set	15590
  1285  0000                     _SPI1INTFbits	set	15642
  1286  0000                     _SPI1RXB	set	15632
  1287  0000                     _SPI1TXB	set	15633
  1288  0000                     _SPI1TCNTL	set	15634
  1289  0000                     _SPI1CON0	set	15636
  1290  0000                     _SPI1CLK	set	15644
  1291  0000                     _SPI1BAUD	set	15641
  1292  0000                     _SPI1CON2	set	15638
  1293  0000                     _SPI1CON1	set	15637
  1294  0000                     _U2RXB	set	15824
  1295  0000                     _U2TXB	set	15826
  1296  0000                     _U2ERRIE	set	15842
  1297  0000                     _U2ERRIR	set	15841
  1298  0000                     _U2UIR	set	15840
  1299  0000                     _U2FIFO	set	15839
  1300  0000                     _U2BRGH	set	15838
  1301  0000                     _U2BRGL	set	15837
  1302  0000                     _U2CON2	set	15836
  1303  0000                     _U2CON1	set	15835
  1304  0000                     _U2CON0	set	15834
  1305  0000                     _U2P3L	set	15832
  1306  0000                     _U2P2L	set	15830
  1307  0000                     _U2P1L	set	15828
  1308  0000                     _U1RXB	set	15848
  1309  0000                     _U1TXB	set	15850
  1310  0000                     _U1ERRIE	set	15866
  1311  0000                     _U1ERRIR	set	15865
  1312  0000                     _U1UIR	set	15864
  1313  0000                     _U1FIFO	set	15863
  1314  0000                     _U1BRGH	set	15862
  1315  0000                     _U1BRGL	set	15861
  1316  0000                     _U1CON2	set	15860
  1317  0000                     _U1CON1	set	15859
  1318  0000                     _U1CON0	set	15858
  1319  0000                     _U1P3H	set	15857
  1320  0000                     _U1P3L	set	15856
  1321  0000                     _U1P2H	set	15855
  1322  0000                     _U1P2L	set	15854
  1323  0000                     _U1P1H	set	15853
  1324  0000                     _U1P1L	set	15852
  1325  0000                     _FVRCON	set	16065
  1326  0000                     _ADFLTRL	set	16102
  1327  0000                     _ADFLTRH	set	16103
  1328  0000                     _ADCON0bits	set	16120
  1329  0000                     _ADCON0	set	16120
  1330  0000                     _ADCLK	set	16127
  1331  0000                     _ADACT	set	16126
  1332  0000                     _ADREF	set	16125
  1333  0000                     _ADSTAT	set	16124
  1334  0000                     _ADCON3	set	16123
  1335  0000                     _ADCON2	set	16122
  1336  0000                     _ADCON1	set	16121
  1337  0000                     _ADPREH	set	16119
  1338  0000                     _ADPREL	set	16118
  1339  0000                     _ADCAP	set	16117
  1340  0000                     _ADACQH	set	16116
  1341  0000                     _ADACQL	set	16115
  1342  0000                     _ADPCH	set	16113
  1343  0000                     _ADRPT	set	16108
  1344  0000                     _ADACCU	set	16106
  1345  0000                     _ADSTPTH	set	16101
  1346  0000                     _ADSTPTL	set	16100
  1347  0000                     _ADUTHH	set	16097
  1348  0000                     _ADUTHL	set	16096
  1349  0000                     _ADLTHH	set	16095
  1350  0000                     _ADLTHL	set	16094
  1351  0000                     _CCPTMRS1bits	set	16223
  1352  0000                     _PORTFbits	set	16335
  1353  0000                     _LATCbits	set	16316
  1354  0000                     _LATDbits	set	16317
  1355  0000                     _PORTBbits	set	16331
  1356  0000                     _T3CONbits	set	16294
  1357  0000                     _T3CON	set	16294
  1358  0000                     _TMR3L	set	16292
  1359  0000                     _TMR3H	set	16293
  1360  0000                     _T3CLK	set	16297
  1361  0000                     _T3GATE	set	16296
  1362  0000                     _T3GCON	set	16295
  1363  0000                     _T2CON	set	16300
  1364  0000                     _T2TMR	set	16298
  1365  0000                     _T2PR	set	16299
  1366  0000                     _T2RST	set	16303
  1367  0000                     _T2HLT	set	16301
  1368  0000                     _T2CLKCON	set	16302
  1369  0000                     _PWM8DCL	set	16224
  1370  0000                     _PWM8DCH	set	16225
  1371  0000                     _PWM8CON	set	16226
  1372  0000                     _LATEbits	set	16318
  1373  0000                     _T5CONbits	set	16282
  1374  0000                     _T5CON	set	16282
  1375  0000                     _TMR5L	set	16280
  1376  0000                     _TMR5H	set	16281
  1377  0000                     _T5CLK	set	16285
  1378  0000                     _T5GATE	set	16284
  1379  0000                     _T5GCON	set	16283
  1380  0000                     _T6CON	set	16276
  1381  0000                     _T6TMR	set	16274
  1382  0000                     _T6PR	set	16275
  1383  0000                     _T6RST	set	16279
  1384  0000                     _T6HLT	set	16277
  1385  0000                     _T6CLKCON	set	16278
  1386  0000                     _TRISD	set	16325
  1387  0000                     _TRISC	set	16324
  1388  0000                     _TRISB	set	16323
  1389  0000                     _TRISA	set	16322
  1390  0000                     _TRISF	set	16327
  1391  0000                     _TRISE	set	16326
  1392  0000                     _LATC	set	16316
  1393  0000                     _LATB	set	16315
  1394  0000                     _LATF	set	16319
  1395  0000                     _LATA	set	16314
  1396  0000                     _LATD	set	16317
  1397  0000                     _LATE	set	16318
  1398  0000                     _IVTLOCKbits	set	16340
  1399  0000                     _IVTLOCK	set	16340
  1400  0000                     _INTCON0bits	set	16338
  1401  0000                     _GIE	set	130711
  1402  00FE41                     
  1403                           ; BSR set to: 57
  1404  00FE41  20                 	db	32
  1405  00FE42  4D                 	db	77	;'M'
  1406  00FE43  65                 	db	101	;'e'
  1407  00FE44  73                 	db	115	;'s'
  1408  00FE45  67                 	db	103	;'g'
  1409  00FE46  20                 	db	32
  1410  00FE47  25                 	db	37
  1411  00FE48  64                 	db	100	;'d'
  1412  00FE49  20                 	db	32
  1413  00FE4A  53                 	db	83	;'S'
  1414  00FE4B  74                 	db	116	;'t'
  1415  00FE4C  61                 	db	97	;'a'
  1416  00FE4D  63                 	db	99	;'c'
  1417  00FE4E  6B                 	db	107	;'k'
  1418  00FE4F  20                 	db	32
  1419  00FE50  25                 	db	37
  1420  00FE51  64                 	db	100	;'d'
  1421  00FE52  20                 	db	32
  1422  00FE53  20                 	db	32
  1423  00FE54  20                 	db	32
  1424  00FE55  20                 	db	32
  1425  00FE56  20                 	db	32
  1426  00FE57  20                 	db	32
  1427  00FE58  00                 	db	0
  1428  00FE59                     STR_19:
  1429                           
  1430                           ; BSR set to: 57
  1431  00FE59  42                 	db	66	;'B'
  1432  00FE5A  41                 	db	65	;'A'
  1433  00FE5B  48                 	db	72	;'H'
  1434  00FE5C  20                 	db	32
  1435  00FE5D  25                 	db	37
  1436  00FE5E  33                 	db	51	;'3'
  1437  00FE5F  2E                 	db	46
  1438  00FE60  32                 	db	50	;'2'
  1439  00FE61  66                 	db	102	;'f'
  1440  00FE62  20                 	db	32
  1441  00FE63  50                 	db	80	;'P'
  1442  00FE64  25                 	db	37
  1443  00FE65  33                 	db	51	;'3'
  1444  00FE66  2E                 	db	46
  1445  00FE67  32                 	db	50	;'2'
  1446  00FE68  66                 	db	102	;'f'
  1447  00FE69  20                 	db	32
  1448  00FE6A  20                 	db	32
  1449  00FE6B  20                 	db	32
  1450  00FE6C  00                 	db	0
  1451  00FE6D                     STR_39:
  1452                           
  1453                           ; BSR set to: 57
  1454  00FE6D  20                 	db	32
  1455  00FE6E  20                 	db	32
  1456  00FE6F  20                 	db	32
  1457  00FE70  20                 	db	32
  1458  00FE71  20                 	db	32
  1459  00FE72  20                 	db	32
  1460  00FE73  20                 	db	32
  1461  00FE74  20                 	db	32
  1462  00FE75  20                 	db	32
  1463  00FE76  20                 	db	32
  1464  00FE77  20                 	db	32
  1465  00FE78  20                 	db	32
  1466  00FE79  20                 	db	32
  1467  00FE7A  20                 	db	32
  1468  00FE7B  20                 	db	32
  1469  00FE7C  20                 	db	32
  1470  00FE7D  20                 	db	32
  1471  00FE7E  20                 	db	32
  1472  00FE7F  00                 	db	0
  1473  00FE80                     STR_29:
  1474                           
  1475                           ; BSR set to: 57
  1476  00FE80  48                 	db	72	;'H'
  1477  00FE81  45                 	db	69	;'E'
  1478  00FE82  4C                 	db	76	;'L'
  1479  00FE83  50                 	db	80	;'P'
  1480  00FE84  20                 	db	32
  1481  00FE85  25                 	db	37
  1482  00FE86  73                 	db	115	;'s'
  1483  00FE87  20                 	db	32
  1484  00FE88  20                 	db	32
  1485  00FE89  20                 	db	32
  1486  00FE8A  20                 	db	32
  1487  00FE8B  20                 	db	32
  1488  00FE8C  20                 	db	32
  1489  00FE8D  20                 	db	32
  1490  00FE8E  20                 	db	32
  1491  00FE8F  20                 	db	32
  1492  00FE90  20                 	db	32
  1493  00FE91  20                 	db	32
  1494  00FE92  00                 	db	0
  1495  00FE93                     
  1496                           ; BSR set to: 57
  1497  00FE93  44                 	db	68	;'D'
  1498  00FE94  49                 	db	73	;'I'
  1499  00FE95  53                 	db	83	;'S'
  1500  00FE96  50                 	db	80	;'P'
  1501  00FE97  4C                 	db	76	;'L'
  1502  00FE98  41                 	db	65	;'A'
  1503  00FE99  59                 	db	89	;'Y'
  1504  00FE9A  20                 	db	32
  1505  00FE9B  25                 	db	37
  1506  00FE9C  73                 	db	115	;'s'
  1507  00FE9D  20                 	db	32
  1508  00FE9E  20                 	db	32
  1509  00FE9F  20                 	db	32
  1510  00FEA0  20                 	db	32
  1511  00FEA1  20                 	db	32
  1512  00FEA2  20                 	db	32
  1513  00FEA3  20                 	db	32
  1514  00FEA4  20                 	db	32
  1515  00FEA5  00                 	db	0
  1516  00FEA6                     STR_20:
  1517                           
  1518                           ; BSR set to: 57
  1519  00FEA6  53                 	db	83	;'S'
  1520  00FEA7  4F                 	db	79	;'O'
  1521  00FEA8  43                 	db	67	;'C'
  1522  00FEA9  20                 	db	32
  1523  00FEAA  25                 	db	37
  1524  00FEAB  64                 	db	100	;'d'
  1525  00FEAC  20                 	db	32
  1526  00FEAD  52                 	db	82	;'R'
  1527  00FEAE  55                 	db	85	;'U'
  1528  00FEAF  4E                 	db	78	;'N'
  1529  00FEB0  20                 	db	32
  1530  00FEB1  25                 	db	37
  1531  00FEB2  64                 	db	100	;'d'
  1532  00FEB3  20                 	db	32
  1533  00FEB4  20                 	db	32
  1534  00FEB5  20                 	db	32
  1535  00FEB6  20                 	db	32
  1536  00FEB7  20                 	db	32
  1537  00FEB8  00                 	db	0
  1538  00FEB9                     STR_12:
  1539                           
  1540                           ; BSR set to: 57
  1541  00FEB9  50                 	db	80	;'P'
  1542  00FEBA  56                 	db	86	;'V'
  1543  00FEBB  20                 	db	32
  1544  00FEBC  20                 	db	32
  1545  00FEBD  20                 	db	32
  1546  00FEBE  50                 	db	80	;'P'
  1547  00FEBF  57                 	db	87	;'W'
  1548  00FEC0  52                 	db	82	;'R'
  1549  00FEC1  20                 	db	32
  1550  00FEC2  25                 	db	37
  1551  00FEC3  33                 	db	51	;'3'
  1552  00FEC4  2E                 	db	46
  1553  00FEC5  32                 	db	50	;'2'
  1554  00FEC6  66                 	db	102	;'f'
  1555  00FEC7  20                 	db	32
  1556  00FEC8  20                 	db	32
  1557  00FEC9  20                 	db	32
  1558  00FECA  20                 	db	32
  1559  00FECB  00                 	db	0
  1560  00FECC                     STR_14:
  1561                           
  1562                           ; BSR set to: 57
  1563  00FECC  49                 	db	73	;'I'
  1564  00FECD  4E                 	db	78	;'N'
  1565  00FECE  56                 	db	86	;'V'
  1566  00FECF  20                 	db	32
  1567  00FED0  20                 	db	32
  1568  00FED1  50                 	db	80	;'P'
  1569  00FED2  57                 	db	87	;'W'
  1570  00FED3  52                 	db	82	;'R'
  1571  00FED4  20                 	db	32
  1572  00FED5  25                 	db	37
  1573  00FED6  33                 	db	51	;'3'
  1574  00FED7  2E                 	db	46
  1575  00FED8  32                 	db	50	;'2'
  1576  00FED9  66                 	db	102	;'f'
  1577  00FEDA  20                 	db	32
  1578  00FEDB  20                 	db	32
  1579  00FEDC  20                 	db	32
  1580  00FEDD  20                 	db	32
  1581  00FEDE  00                 	db	0
  1582  00FEDF                     STR_13:
  1583                           
  1584                           ; BSR set to: 57
  1585  00FEDF  4C                 	db	76	;'L'
  1586  00FEE0  4F                 	db	79	;'O'
  1587  00FEE1  41                 	db	65	;'A'
  1588  00FEE2  44                 	db	68	;'D'
  1589  00FEE3  20                 	db	32
  1590  00FEE4  50                 	db	80	;'P'
  1591  00FEE5  57                 	db	87	;'W'
  1592  00FEE6  52                 	db	82	;'R'
  1593  00FEE7  20                 	db	32
  1594  00FEE8  25                 	db	37
  1595  00FEE9  33                 	db	51	;'3'
  1596  00FEEA  2E                 	db	46
  1597  00FEEB  32                 	db	50	;'2'
  1598  00FEEC  66                 	db	102	;'f'
  1599  00FEED  20                 	db	32
  1600  00FEEE  20                 	db	32
  1601  00FEEF  20                 	db	32
  1602  00FEF0  20                 	db	32
  1603  00FEF1  00                 	db	0
  1604  00FEF2                     STR_18:
  1605                           
  1606                           ; BSR set to: 57
  1607  00FEF2  42                 	db	66	;'B'
  1608  00FEF3  41                 	db	65	;'A'
  1609  00FEF4  54                 	db	84	;'T'
  1610  00FEF5  54                 	db	84	;'T'
  1611  00FEF6  20                 	db	32
  1612  00FEF7  50                 	db	80	;'P'
  1613  00FEF8  57                 	db	87	;'W'
  1614  00FEF9  52                 	db	82	;'R'
  1615  00FEFA  20                 	db	32
  1616  00FEFB  25                 	db	37
  1617  00FEFC  33                 	db	51	;'3'
  1618  00FEFD  2E                 	db	46
  1619  00FEFE  32                 	db	50	;'2'
  1620  00FEFF  66                 	db	102	;'f'
  1621  00FF00  20                 	db	32
  1622  00FF01  20                 	db	32
  1623  00FF02  20                 	db	32
  1624  00FF03  20                 	db	32
  1625  00FF04  00                 	db	0
  1626  00FF05                     STR_16:
  1627                           
  1628                           ; BSR set to: 57
  1629  00FF05  42                 	db	66	;'B'
  1630  00FF06  56                 	db	86	;'V'
  1631  00FF07  20                 	db	32
  1632  00FF08  25                 	db	37
  1633  00FF09  32                 	db	50	;'2'
  1634  00FF0A  2E                 	db	46
  1635  00FF0B  32                 	db	50	;'2'
  1636  00FF0C  66                 	db	102	;'f'
  1637  00FF0D  20                 	db	32
  1638  00FF0E  42                 	db	66	;'B'
  1639  00FF0F  41                 	db	65	;'A'
  1640  00FF10  20                 	db	32
  1641  00FF11  25                 	db	37
  1642  00FF12  32                 	db	50	;'2'
  1643  00FF13  2E                 	db	46
  1644  00FF14  32                 	db	50	;'2'
  1645  00FF15  66                 	db	102	;'f'
  1646  00FF16  20                 	db	32
  1647  00FF17  00                 	db	0
  1648  00FF18                     STR_17:
  1649                           
  1650                           ; BSR set to: 57
  1651  00FF18  43                 	db	67	;'C'
  1652  00FF19  56                 	db	86	;'V'
  1653  00FF1A  20                 	db	32
  1654  00FF1B  25                 	db	37
  1655  00FF1C  32                 	db	50	;'2'
  1656  00FF1D  2E                 	db	46
  1657  00FF1E  32                 	db	50	;'2'
  1658  00FF1F  66                 	db	102	;'f'
  1659  00FF20  20                 	db	32
  1660  00FF21  4C                 	db	76	;'L'
  1661  00FF22  41                 	db	65	;'A'
  1662  00FF23  20                 	db	32
  1663  00FF24  25                 	db	37
  1664  00FF25  32                 	db	50	;'2'
  1665  00FF26  2E                 	db	46
  1666  00FF27  32                 	db	50	;'2'
  1667  00FF28  66                 	db	102	;'f'
  1668  00FF29  20                 	db	32
  1669  00FF2A  00                 	db	0
  1670  00FF2B                     STR_15:
  1671                           
  1672                           ; BSR set to: 57
  1673  00FF2B  50                 	db	80	;'P'
  1674  00FF2C  56                 	db	86	;'V'
  1675  00FF2D  20                 	db	32
  1676  00FF2E  25                 	db	37
  1677  00FF2F  32                 	db	50	;'2'
  1678  00FF30  2E                 	db	46
  1679  00FF31  32                 	db	50	;'2'
  1680  00FF32  66                 	db	102	;'f'
  1681  00FF33  20                 	db	32
  1682  00FF34  50                 	db	80	;'P'
  1683  00FF35  41                 	db	65	;'A'
  1684  00FF36  20                 	db	32
  1685  00FF37  25                 	db	37
  1686  00FF38  32                 	db	50	;'2'
  1687  00FF39  2E                 	db	46
  1688  00FF3A  32                 	db	50	;'2'
  1689  00FF3B  66                 	db	102	;'f'
  1690  00FF3C  20                 	db	32
  1691  00FF3D  00                 	db	0
  1692  00FF3E                     STR_8:
  1693                           
  1694                           ; BSR set to: 57
  1695  00FF3E  20                 	db	32
  1696  00FF3F  56                 	db	86	;'V'
  1697  00FF40  54                 	db	84	;'T'
  1698  00FF41  45                 	db	69	;'E'
  1699  00FF42  52                 	db	82	;'R'
  1700  00FF43  4D                 	db	77	;'M'
  1701  00FF44  20                 	db	32
  1702  00FF45  23                 	db	35
  1703  00FF46  32                 	db	50	;'2'
  1704  00FF47  20                 	db	32
  1705  00FF48  20                 	db	32
  1706  00FF49  20                 	db	32
  1707  00FF4A  20                 	db	32
  1708  00FF4B  20                 	db	32
  1709  00FF4C  20                 	db	32
  1710  00FF4D  20                 	db	32
  1711  00FF4E  00                 	db	0
  1712  00FF4F                     STR_4:
  1713                           
  1714                           ; BSR set to: 57
  1715  00FF4F  20                 	db	32
  1716  00FF50  4E                 	db	78	;'N'
  1717  00FF51  53                 	db	83	;'S'
  1718  00FF52  41                 	db	65	;'A'
  1719  00FF53  53                 	db	83	;'S'
  1720  00FF54  50                 	db	80	;'P'
  1721  00FF55  4F                 	db	79	;'O'
  1722  00FF56  4F                 	db	79	;'O'
  1723  00FF57  4B                 	db	75	;'K'
  1724  00FF58  20                 	db	32
  1725  00FF59  20                 	db	32
  1726  00FF5A  20                 	db	32
  1727  00FF5B  20                 	db	32
  1728  00FF5C  20                 	db	32
  1729  00FF5D  20                 	db	32
  1730  00FF5E  20                 	db	32
  1731  00FF5F  00                 	db	0
  1732  00FF60                     STR_1:
  1733                           
  1734                           ; BSR set to: 57
  1735  00FF60  20                 	db	32
  1736  00FF61  4D                 	db	77	;'M'
  1737  00FF62  42                 	db	66	;'B'
  1738  00FF63  4D                 	db	77	;'M'
  1739  00FF64  43                 	db	67	;'C'
  1740  00FF65  20                 	db	32
  1741  00FF66  53                 	db	83	;'S'
  1742  00FF67  4F                 	db	79	;'O'
  1743  00FF68  4C                 	db	76	;'L'
  1744  00FF69  41                 	db	65	;'A'
  1745  00FF6A  52                 	db	82	;'R'
  1746  00FF6B  4D                 	db	77	;'M'
  1747  00FF6C  4F                 	db	79	;'O'
  1748  00FF6D  4E                 	db	78	;'N'
  1749  00FF6E  20                 	db	32
  1750  00FF6F  20                 	db	32
  1751  00FF70  00                 	db	0
  1752  00FF71                     STR_5:
  1753                           
  1754                           ; BSR set to: 57
  1755  00FF71  20                 	db	32
  1756  00FF72  53                 	db	83	;'S'
  1757  00FF73  45                 	db	69	;'E'
  1758  00FF74  51                 	db	81	;'Q'
  1759  00FF75  55                 	db	85	;'U'
  1760  00FF76  45                 	db	69	;'E'
  1761  00FF77  4E                 	db	78	;'N'
  1762  00FF78  43                 	db	67	;'C'
  1763  00FF79  45                 	db	69	;'E'
  1764  00FF7A  20                 	db	32
  1765  00FF7B  54                 	db	84	;'T'
  1766  00FF7C  45                 	db	69	;'E'
  1767  00FF7D  53                 	db	83	;'S'
  1768  00FF7E  54                 	db	84	;'T'
  1769  00FF7F  20                 	db	32
  1770  00FF80  20                 	db	32
  1771  00FF81  00                 	db	0
  1772  00FF82                     STR_11:
  1773                           
  1774                           ; BSR set to: 57
  1775  00FF82  25                 	db	37
  1776  00FF83  64                 	db	100	;'d'
  1777  00FF84  20                 	db	32
  1778  00FF85  25                 	db	37
  1779  00FF86  32                 	db	50	;'2'
  1780  00FF87  2E                 	db	46
  1781  00FF88  34                 	db	52	;'4'
  1782  00FF89  66                 	db	102	;'f'
  1783  00FF8A  2C                 	db	44
  1784  00FF8B  20                 	db	32
  1785  00FF8C  25                 	db	37
  1786  00FF8D  64                 	db	100	;'d'
  1787  00FF8E  20                 	db	32
  1788  00FF8F  20                 	db	32
  1789  00FF90  20                 	db	32
  1790  00FF91  23                 	db	35
  1791  00FF92  00                 	db	0
  1792  00FF93                     STR_9:
  1793                           
  1794                           ; BSR set to: 57
  1795  00FF93  25                 	db	37
  1796  00FF94  64                 	db	100	;'d'
  1797  00FF95  20                 	db	32
  1798  00FF96  25                 	db	37
  1799  00FF97  32                 	db	50	;'2'
  1800  00FF98  2E                 	db	46
  1801  00FF99  34                 	db	52	;'4'
  1802  00FF9A  66                 	db	102	;'f'
  1803  00FF9B  20                 	db	32
  1804  00FF9C  20                 	db	32
  1805  00FF9D  20                 	db	32
  1806  00FF9E  25                 	db	37
  1807  00FF9F  64                 	db	100	;'d'
  1808  00FFA0  20                 	db	32
  1809  00FFA1  20                 	db	32
  1810  00FFA2  00                 	db	0
  1811  00FFA3                     STR_33:
  1812                           
  1813                           ; BSR set to: 57
  1814  00FFA3  76                 	db	118	;'v'
  1815  00FFA4  74                 	db	116	;'t'
  1816  00FFA5  65                 	db	101	;'e'
  1817  00FFA6  72                 	db	114	;'r'
  1818  00FFA7  6D                 	db	109	;'m'
  1819  00FFA8  20                 	db	32
  1820  00FFA9  25                 	db	37
  1821  00FFAA  78                 	db	120	;'x'
  1822  00FFAB  3A                 	db	58	;':'
  1823  00FFAC  25                 	db	37
  1824  00FFAD  78                 	db	120	;'x'
  1825  00FFAE  20                 	db	32
  1826  00FFAF  20                 	db	32
  1827  00FFB0  20                 	db	32
  1828  00FFB1  00                 	db	0
  1829  00FFB2                     STR_2:
  1830                           
  1831                           ; BSR set to: 57
  1832  00FFB2  20                 	db	32
  1833  00FFB3  56                 	db	86	;'V'
  1834  00FFB4  65                 	db	101	;'e'
  1835  00FFB5  72                 	db	114	;'r'
  1836  00FFB6  73                 	db	115	;'s'
  1837  00FFB7  69                 	db	105	;'i'
  1838  00FFB8  6F                 	db	111	;'o'
  1839  00FFB9  6E                 	db	110	;'n'
  1840  00FFBA  20                 	db	32
  1841  00FFBB  25                 	db	37
  1842  00FFBC  73                 	db	115	;'s'
  1843  00FFBD  20                 	db	32
  1844  00FFBE  20                 	db	32
  1845  00FFBF  20                 	db	32
  1846  00FFC0  00                 	db	0
  1847  00FFC1                     STR_27:
  1848                           
  1849                           ; BSR set to: 57
  1850  00FFC1  44                 	db	68	;'D'
  1851  00FFC2  65                 	db	101	;'e'
  1852  00FFC3  63                 	db	99	;'c'
  1853  00FFC4  20                 	db	32
  1854  00FFC5  20                 	db	32
  1855  00FFC6  36                 	db	54	;'6'
  1856  00FFC7  20                 	db	32
  1857  00FFC8  32                 	db	50	;'2'
  1858  00FFC9  30                 	db	48	;'0'
  1859  00FFCA  31                 	db	49	;'1'
  1860  00FFCB  39                 	db	57	;'9'
  1861  00FFCC  00                 	db	0
  1862  00FFCD                     STR_31:
  1863                           
  1864                           ; BSR set to: 57
  1865  00FFCD  25                 	db	37
  1866  00FFCE  73                 	db	115	;'s'
  1867  00FFCF  20                 	db	32
  1868  00FFD0  20                 	db	32
  1869  00FFD1  20                 	db	32
  1870  00FFD2  20                 	db	32
  1871  00FFD3  20                 	db	32
  1872  00FFD4  20                 	db	32
  1873  00FFD5  20                 	db	32
  1874  00FFD6  00                 	db	0
  1875  00FFD7                     STR_28:
  1876                           
  1877                           ; BSR set to: 57
  1878  00FFD7  30                 	db	48	;'0'
  1879  00FFD8  38                 	db	56	;'8'
  1880  00FFD9  3A                 	db	58	;':'
  1881  00FFDA  34                 	db	52	;'4'
  1882  00FFDB  32                 	db	50	;'2'
  1883  00FFDC  3A                 	db	58	;':'
  1884  00FFDD  32                 	db	50	;'2'
  1885  00FFDE  30                 	db	48	;'0'
  1886  00FFDF  00                 	db	0
  1887  00FFE0                     STR_3:
  1888                           
  1889                           ; BSR set to: 57
  1890  00FFE0  30                 	db	48	;'0'
  1891  00FFE1  2E                 	db	46
  1892  00FFE2  39                 	db	57	;'9'
  1893  00FFE3  39                 	db	57	;'9'
  1894  00FFE4  38                 	db	56	;'8'
  1895  00FFE5  00                 	db	0
  1896  00FFE6                     STR_46:
  1897                           
  1898                           ; BSR set to: 57
  1899  00FFE6  49                 	db	73	;'I'
  1900  00FFE7  4E                 	db	78	;'N'
  1901  00FFE8  46                 	db	70	;'F'
  1902  00FFE9  00                 	db	0
  1903  00FFEA                     STR_50:
  1904                           
  1905                           ; BSR set to: 57
  1906  00FFEA  4E                 	db	78	;'N'
  1907  00FFEB  41                 	db	65	;'A'
  1908  00FFEC  4E                 	db	78	;'N'
  1909  00FFED  00                 	db	0
  1910  00FFEE                     STR_47:
  1911                           
  1912                           ; BSR set to: 57
  1913  00FFEE  69                 	db	105	;'i'
  1914  00FFEF  6E                 	db	110	;'n'
  1915  00FFF0  66                 	db	102	;'f'
  1916  00FFF1  00                 	db	0
  1917  00FFF2                     STR_51:
  1918                           
  1919                           ; BSR set to: 57
  1920  00FFF2  6E                 	db	110	;'n'
  1921  00FFF3  61                 	db	97	;'a'
  1922  00FFF4  6E                 	db	110	;'n'
  1923  00FFF5  00                 	db	0
  1924  00FFF6                     STR_54:
  1925                           
  1926                           ; BSR set to: 57
  1927  00FFF6  6C                 	db	108	;'l'
  1928  00FFF7  66                 	db	102	;'f'
  1929  00FFF8  00                 	db	0
  1930  00FFF9                     STR_25:
  1931                           
  1932                           ; BSR set to: 57
  1933  00FFF9  25                 	db	37
  1934  00FFFA  63                 	db	99	;'c'
  1935  00FFFB  00                 	db	0
  1936  00FFFC                     STR_24:
  1937                           
  1938                           ; BSR set to: 57
  1939  00FFFC  25                 	db	37
  1940  00FFFD  73                 	db	115	;'s'
  1941  00FFFE  00                 	db	0
  1942  0000                     
  1943                           ; #config settings
  1944  00FFFF  00                 	db	0	; dummy byte at the end
  1945  0000                     
  1946                           	psect	cinit
  1947  01787A                     __pcinit:
  1948                           	opt callstack 0
  1949  01787A                     start_initialization:
  1950                           	opt callstack 0
  1951  01787A                     __initialization:
  1952                           	opt callstack 0
  1953                           
  1954                           ; Initialize objects allocated to BANK2 (204 bytes)
  1955                           ; load TBLPTR registers with __pidataBANK2
  1956  01787A  0E00               	movlw	low __pidataBANK2
  1957  01787C  6EF6               	movwf	tblptrl,c
  1958  01787E  0E7C               	movlw	high __pidataBANK2
  1959  017880  6EF7               	movwf	tblptrh,c
  1960  017882  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1961  017884  6EF8               	movwf	tblptru,c
  1962  017886  EE00  F200         	lfsr	0,__pdataBANK2
  1963  01788A  EE20 F0CC          	lfsr	2,204
  1964  01788E                     copy_data0:
  1965  01788E  0009               	tblrd		*+
  1966  017890  006F FFD7 FFEE     	movff	tablat,postinc0
  1967  017896  50DD               	movf	postdec2,w,c
  1968  017898  50D9               	movf	fsr2l,w,c
  1969  01789A  E1F9               	bnz	copy_data0
  1970                           
  1971                           ; Initialize objects allocated to BANK1 (215 bytes)
  1972                           ; load TBLPTR registers with __pidataBANK1
  1973  01789C  0E54               	movlw	low __pidataBANK1
  1974  01789E  6EF6               	movwf	tblptrl,c
  1975  0178A0  0E7A               	movlw	high __pidataBANK1
  1976  0178A2  6EF7               	movwf	tblptrh,c
  1977  0178A4  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1978  0178A6  6EF8               	movwf	tblptru,c
  1979  0178A8  EE00  F100         	lfsr	0,__pdataBANK1
  1980  0178AC  EE20 F0D7          	lfsr	2,215
  1981  0178B0                     copy_data1:
  1982  0178B0  0009               	tblrd		*+
  1983  0178B2  006F FFD7 FFEE     	movff	tablat,postinc0
  1984  0178B8  50DD               	movf	postdec2,w,c
  1985  0178BA  50D9               	movf	fsr2l,w,c
  1986  0178BC  E1F9               	bnz	copy_data1
  1987                           
  1988                           ; Initialize objects allocated to BANK0 (54 bytes)
  1989                           ; load TBLPTR registers with __pidataBANK0
  1990  0178BE  0ECA               	movlw	low __pidataBANK0
  1991  0178C0  6EF6               	movwf	tblptrl,c
  1992  0178C2  0E8F               	movlw	high __pidataBANK0
  1993  0178C4  6EF7               	movwf	tblptrh,c
  1994  0178C6  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1995  0178C8  6EF8               	movwf	tblptru,c
  1996  0178CA  EE00  F0C9         	lfsr	0,__pdataBANK0
  1997  0178CE  EE20 F036          	lfsr	2,54
  1998  0178D2                     copy_data2:
  1999  0178D2  0009               	tblrd		*+
  2000  0178D4  006F FFD7 FFEE     	movff	tablat,postinc0
  2001  0178DA  50DD               	movf	postdec2,w,c
  2002  0178DC  50D9               	movf	fsr2l,w,c
  2003  0178DE  E1F9               	bnz	copy_data2
  2004                           
  2005                           ; Clear objects allocated to BIGRAM (290 bytes)
  2006  0178E0  EE01  F2FF         	lfsr	0,__pbssBIGRAM
  2007  0178E4  EE20 F122          	lfsr	2,290
  2008  0178E8                     clear_0:
  2009  0178E8  6AEE               	clrf	postinc0,c
  2010  0178EA  50DD               	movf	postdec2,w,c
  2011  0178EC  50D9               	movf	fsr2l,w,c
  2012  0178EE  E1FC               	bnz	clear_0
  2013  0178F0  50DA               	movf	fsr2h,w,c
  2014  0178F2  E1FA               	bnz	clear_0
  2015                           
  2016                           ; Clear objects allocated to BANK6 (255 bytes)
  2017  0178F4  EE01  F200         	lfsr	0,__pbssBANK6
  2018  0178F8  EE20 F0FF          	lfsr	2,255
  2019  0178FC                     clear_1:
  2020  0178FC  6AEE               	clrf	postinc0,c
  2021  0178FE  50DD               	movf	postdec2,w,c
  2022  017900  50D9               	movf	fsr2l,w,c
  2023  017902  E1FC               	bnz	clear_1
  2024  017904  50DA               	movf	fsr2h,w,c
  2025  017906  E1FA               	bnz	clear_1
  2026                           
  2027                           ; Clear objects allocated to BANK5 (255 bytes)
  2028  017908  EE01  F100         	lfsr	0,__pbssBANK5
  2029  01790C  EE20 F0FF          	lfsr	2,255
  2030  017910                     clear_2:
  2031  017910  6AEE               	clrf	postinc0,c
  2032  017912  50DD               	movf	postdec2,w,c
  2033  017914  50D9               	movf	fsr2l,w,c
  2034  017916  E1FC               	bnz	clear_2
  2035  017918  50DA               	movf	fsr2h,w,c
  2036  01791A  E1FA               	bnz	clear_2
  2037                           
  2038                           ; Clear objects allocated to BANK4 (198 bytes)
  2039  01791C  EE01  F000         	lfsr	0,__pbssBANK4
  2040  017920  0EC6               	movlw	198
  2041  017922                     clear_3:
  2042  017922  6AEE               	clrf	postinc0,c
  2043  017924  06E8               	decf	wreg,f,c
  2044  017926  E1FD               	bnz	clear_3
  2045                           
  2046                           ; Clear objects allocated to BANK3 (228 bytes)
  2047  017928  EE00  F300         	lfsr	0,__pbssBANK3
  2048  01792C  0EE4               	movlw	228
  2049  01792E                     clear_4:
  2050  01792E  6AEE               	clrf	postinc0,c
  2051  017930  06E8               	decf	wreg,f,c
  2052  017932  E1FD               	bnz	clear_4
  2053                           
  2054                           ; Clear objects allocated to BANK1 (32 bytes)
  2055  017934  EE00  F1D7         	lfsr	0,__pbssBANK1
  2056  017938  0E20               	movlw	32
  2057  01793A                     clear_5:
  2058  01793A  6AEE               	clrf	postinc0,c
  2059  01793C  06E8               	decf	wreg,f,c
  2060  01793E  E1FD               	bnz	clear_5
  2061                           
  2062                           ; Clear objects allocated to BANK0 (105 bytes)
  2063  017940  EE00  F060         	lfsr	0,__pbssBANK0
  2064  017944  0E69               	movlw	105
  2065  017946                     clear_6:
  2066  017946  6AEE               	clrf	postinc0,c
  2067  017948  06E8               	decf	wreg,f,c
  2068  01794A  E1FD               	bnz	clear_6
  2069                           
  2070                           ; Clear objects allocated to COMRAM (31 bytes)
  2071  01794C  EE00  F021         	lfsr	0,__pbssCOMRAM
  2072  017950  0E1F               	movlw	31
  2073  017952                     clear_7:
  2074  017952  6AEE               	clrf	postinc0,c
  2075  017954  06E8               	decf	wreg,f,c
  2076  017956  E1FD               	bnz	clear_7
  2077                           
  2078                           ;
  2079                           ; Setup IVTBASE
  2080                           ;
  2081  017958  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  2082  01795A  6ED5               	movwf	213,c
  2083  01795C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  2084  01795E  6ED6               	movwf	214,c
  2085  017960  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  2086  017962  6ED7               	movwf	215,c
  2087  017964                     end_of_initialization:
  2088                           	opt callstack 0
  2089  017964                     __end_of__initialization:
  2090                           	opt callstack 0
  2091  017964  0100               	movlb	0
  2092  017966  EFC1  F08E         	goto	_main	;jump to C main() function
  2093                           
  2094                           	psect	bssCOMRAM
  2095  000021                     __pbssCOMRAM:
  2096                           	opt callstack 0
  2097  000021                     _INT0_InterruptHandler:
  2098                           	opt callstack 0
  2099  000021                     	ds	3
  2100  000024                     _width:
  2101                           	opt callstack 0
  2102  000024                     	ds	2
  2103  000026                     _prec:
  2104                           	opt callstack 0
  2105  000026                     	ds	2
  2106  000028                     _flags:
  2107                           	opt callstack 0
  2108  000028                     	ds	2
  2109  00002A                     TMR3_ISR@CountCallBack:
  2110                           	opt callstack 0
  2111  00002A                     	ds	2
  2112  00002C                     _timer3ReloadVal:
  2113                           	opt callstack 0
  2114  00002C                     	ds	2
  2115  00002E                     TMR5_ISR@CountCallBack:
  2116                           	opt callstack 0
  2117  00002E                     	ds	2
  2118  000030                     _timer5ReloadVal:
  2119                           	opt callstack 0
  2120  000030                     	ds	2
  2121  000032                     Volts_to_SOC@slot:
  2122                           	opt callstack 0
  2123  000032                     	ds	1
  2124  000033                     _mode_sw:
  2125                           	opt callstack 0
  2126  000033                     	ds	1
  2127  000034                     _uart2RxCount:
  2128                           	opt callstack 0
  2129  000034                     	ds	1
  2130  000035                     _uart2RxTail:
  2131                           	opt callstack 0
  2132  000035                     	ds	1
  2133  000036                     _uart2RxHead:
  2134                           	opt callstack 0
  2135  000036                     	ds	1
  2136  000037                     _uart2TxBufferRemaining:
  2137                           	opt callstack 0
  2138  000037                     	ds	1
  2139  000038                     _uart2TxTail:
  2140                           	opt callstack 0
  2141  000038                     	ds	1
  2142  000039                     _uart2TxHead:
  2143                           	opt callstack 0
  2144  000039                     	ds	1
  2145  00003A                     _uart1RxCount:
  2146                           	opt callstack 0
  2147  00003A                     	ds	1
  2148  00003B                     _uart1RxTail:
  2149                           	opt callstack 0
  2150  00003B                     	ds	1
  2151  00003C                     _uart1RxHead:
  2152                           	opt callstack 0
  2153  00003C                     	ds	1
  2154  00003D                     _uart1TxBufferRemaining:
  2155                           	opt callstack 0
  2156  00003D                     	ds	1
  2157  00003E                     _uart1TxTail:
  2158                           	opt callstack 0
  2159  00003E                     	ds	1
  2160  00003F                     _uart1TxHead:
  2161                           	opt callstack 0
  2162  00003F                     	ds	1
  2163                           
  2164                           	psect	bssBANK0
  2165  000060                     __pbssBANK0:
  2166                           	opt callstack 0
  2167  000060                     _S:
  2168                           	opt callstack 0
  2169  000060                     	ds	41
  2170  000089                     _spi_link:
  2171                           	opt callstack 0
  2172  000089                     	ds	12
  2173  000095                     floorf@F524:
  2174                           	opt callstack 0
  2175  000095                     	ds	4
  2176  000099                     ___fpclassifyf@F463:
  2177                           	opt callstack 0
  2178  000099                     	ds	4
  2179  00009D                     _utctime:
  2180                           	opt callstack 0
  2181  00009D                     	ds	4
  2182  0000A1                     wdtdelay@dcount:
  2183                           	opt callstack 0
  2184  0000A1                     	ds	4
  2185  0000A5                     _P:
  2186                           	opt callstack 0
  2187  0000A5                     	ds	4
  2188  0000A9                     _TMR3_InterruptHandler:
  2189                           	opt callstack 0
  2190  0000A9                     	ds	3
  2191  0000AC                     _TMR5_InterruptHandler:
  2192                           	opt callstack 0
  2193  0000AC                     	ds	3
  2194  0000AF                     _TMR6_InterruptHandler:
  2195                           	opt callstack 0
  2196  0000AF                     	ds	3
  2197  0000B2                     _ADCC_ADTI_InterruptHandler:
  2198                           	opt callstack 0
  2199  0000B2                     	ds	3
  2200  0000B5                     _ADCC_ADI_InterruptHandler:
  2201                           	opt callstack 0
  2202  0000B5                     	ds	3
  2203  0000B8                     _UART1_TxInterruptHandler:
  2204                           	opt callstack 0
  2205  0000B8                     	ds	3
  2206  0000BB                     _UART1_RxInterruptHandler:
  2207                           	opt callstack 0
  2208  0000BB                     	ds	3
  2209  0000BE                     _UART2_TxInterruptHandler:
  2210                           	opt callstack 0
  2211  0000BE                     	ds	3
  2212  0000C1                     _UART2_RxInterruptHandler:
  2213                           	opt callstack 0
  2214  0000C1                     	ds	3
  2215  0000C4                     _INT1_InterruptHandler:
  2216                           	opt callstack 0
  2217  0000C4                     	ds	3
  2218  0000C7                     _nout:
  2219                           	opt callstack 0
  2220  0000C7                     	ds	2
  2221                           
  2222                           	psect	dataBANK0
  2223  0000C9                     __pdataBANK0:
  2224                           	opt callstack 0
  2225  0000C9                     _R:
  2226                           	opt callstack 0
  2227  0000C9                     	ds	40
  2228  0000F1                     stoa@F1166:
  2229                           	opt callstack 0
  2230  0000F1                     	ds	7
  2231  0000F8                     _H:
  2232                           	opt callstack 0
  2233  0000F8                     	ds	7
  2234                           
  2235                           	psect	bssBANK1
  2236  0001D7                     __pbssBANK1:
  2237                           	opt callstack 0
  2238  0001D7                     _tickCount:
  2239                           	opt callstack 0
  2240  0001D7                     	ds	24
  2241  0001EF                     _seed:
  2242                           	opt callstack 0
  2243  0001EF                     	ds	8
  2244                           
  2245                           	psect	dataBANK1
  2246  000100                     __pdataBANK1:
  2247                           	opt callstack 0
  2248  000100                     _C:
  2249                           	opt callstack 0
  2250  000100                     	ds	215
  2251                           
  2252                           	psect	dataBANK2
  2253  000200                     __pdataBANK2:
  2254                           	opt callstack 0
  2255  000200                     _V:
  2256                           	opt callstack 0
  2257  000200                     	ds	188
  2258  0002BC                     _port_data:
  2259                           	opt callstack 0
  2260  0002BC                     	ds	16
  2261                           
  2262                           	psect	bssBANK3
  2263  000300                     __pbssBANK3:
  2264                           	opt callstack 0
  2265  000300                     lp_filter@smooth:
  2266                           	opt callstack 0
  2267  000300                     	ds	84
  2268  000354                     _uart1TxBuffer:
  2269                           	opt callstack 0
  2270  000354                     	ds	64
  2271  000394                     _dbuf:
  2272                           	opt callstack 0
  2273  000394                     	ds	80
  2274                           
  2275                           	psect	bssBANK4
  2276  000400                     __pbssBANK4:
  2277                           	opt callstack 0
  2278  000400                     _uart2TxBuffer:
  2279                           	opt callstack 0
  2280  000400                     	ds	64
  2281  000440                     _ring_buf2:
  2282                           	opt callstack 0
  2283  000440                     	ds	67
  2284  000483                     _ring_buf1:
  2285                           	opt callstack 0
  2286  000483                     	ds	67
  2287                           
  2288                           	psect	bssBANK5
  2289  000500                     __pbssBANK5:
  2290                           	opt callstack 0
  2291  000500                     _uart1RxBuffer:
  2292                           	opt callstack 0
  2293  000500                     	ds	255
  2294                           
  2295                           	psect	bssBANK6
  2296  000600                     __pbssBANK6:
  2297                           	opt callstack 0
  2298  000600                     _uart2RxBuffer:
  2299                           	opt callstack 0
  2300  000600                     	ds	255
  2301                           
  2302                           	psect	bssBIGRAM
  2303  0006FF                     __pbssBIGRAM:
  2304                           	opt callstack 0
  2305  0006FF                     _D:
  2306                           	opt callstack 0
  2307  0006FF                     	ds	290
  2308                           
  2309                           	psect	cstackBANK2
  2310  0002CC                     __pcstackBANK2:
  2311                           	opt callstack 0
  2312  0002CC                     ??_TMR3_ISR:
  2313                           
  2314                           ; 1 bytes @ 0x0
  2315  0002CC                     	ds	17
  2316                           
  2317                           	psect	cstackCOMRAM
  2318  000040                     __pcstackCOMRAM:
  2319                           	opt callstack 0
  2320  000040                     ??_ADCC_ThresholdISR:
  2321  000040                     
  2322                           ; 1 bytes @ 0x0
  2323  000040                     	ds	5
  2324  000045                     ??_TMR6_ISR:
  2325                           
  2326                           ; 1 bytes @ 0x5
  2327  000045                     	ds	1
  2328  000046                     ??_INT1_ISR:
  2329  000046                     
  2330                           ; 1 bytes @ 0x6
  2331  000046                     	ds	4
  2332  00004A                     ??_TMR5_ISR:
  2333                           
  2334                           ; 1 bytes @ 0xA
  2335  00004A                     	ds	4
  2336                           
  2337 ;;
  2338 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  2339 ;;
  2340 ;; *************** function _main *****************
  2341 ;; Defined at:
  2342 ;;		line 171 in file "main.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;		None
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;  k               1  [STACK] unsigned char 
  2347 ;;  j               1  [STACK] unsigned char 
  2348 ;;  i               1  [STACK] unsigned char 
  2349 ;;  inp_index       1  [STACK] unsigned char 
  2350 ;;  mode            1  [STACK] enum E17022
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1  [STACK] void 
  2353 ;; Registers used:
  2354 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2364 ;;Total ram usage:        0 bytes
  2365 ;; Hardware stack levels required when called:   20
  2366 ;; This function calls:
  2367 ;;		_SYSTEM_Initialize
  2368 ;;		_StartTimer
  2369 ;;		_TimerDone
  2370 ;;		_WaitMs
  2371 ;;		_calc_model_data
  2372 ;;		_check_adc_scan
  2373 ;;		_check_enter_button
  2374 ;;		_check_help
  2375 ;;		_clear_adc_scan
  2376 ;;		_clear_hid_pflags
  2377 ;;		_convert_adc_data
  2378 ;;		_eaDogM_WriteCommand
  2379 ;;		_get_raw_result
  2380 ;;		_get_switch
  2381 ;;		_get_vterm_ptr
  2382 ;;		_hid_display
  2383 ;;		_init_bsoc
  2384 ;;		_init_display
  2385 ;;		_lp_filter
  2386 ;;		_mode_lamp_dim
  2387 ;;		_set_display_info
  2388 ;;		_set_vterm
  2389 ;;		_sprintf
  2390 ;;		_srand
  2391 ;;		_start_adc_scan
  2392 ;;		_start_switch_handler
  2393 ;;		_static_soc
  2394 ;;		_update_lcd
  2395 ;; This function is called by:
  2396 ;;		Startup code after reset
  2397 ;; This function uses a reentrant model
  2398 ;;
  2399                           
  2400                           	psect	text0
  2401  011D82                     __ptext0:
  2402                           	opt callstack 0
  2403  011D82                     _main:
  2404                           	opt callstack 0
  2405                           
  2406                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2407  011D82  0E05               	movlw	5
  2408  011D84  26E1               	addwf	fsr1l,f,c
  2409  011D86  0E00               	movlw	0
  2410  011D88  22E2               	addwfc	fsr1h,f,c
  2411                           
  2412                           ;main.c: 173:  UI_STATES mode;;main.c: 174:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  2413                           ;stkvar	_inp_index @ sp[(-5)+3]
  2414                           
  2415                           ;incstack = 0
  2416  011D8A  0EFE               	movlw	-2
  2417  011D8C  6AE3               	clrf	plusw1,c
  2418                           
  2419                           ;stkvar	_i @ sp[(-5)+2]
  2420  011D8E  0EFD               	movlw	-3
  2421  011D90  6AE3               	clrf	plusw1,c
  2422                           
  2423                           ;stkvar	_j @ sp[(-5)+1]
  2424  011D92  0EFC               	movlw	-4
  2425  011D94  6AE3               	clrf	plusw1,c
  2426  011D96  2AE3               	incf	plusw1,f,c
  2427                           
  2428                           ;stkvar	_k @ sp[(-5)+0]
  2429  011D98  0EFB               	movlw	-5
  2430  011D9A  6AE3               	clrf	plusw1,c
  2431  011D9C  82E3               	bsf	plusw1,1,c
  2432                           
  2433                           ;main.c: 177:  SYSTEM_Initialize();
  2434  011D9E  EC12  F0C6         	call	_SYSTEM_Initialize	;wreg free
  2435                           
  2436                           ; BSR set to: 60
  2437                           ;main.c: 180:  (INTCON0bits.GIEH = 1);
  2438  011DA2  8ED2               	bsf	210,7,c	;volatile
  2439                           
  2440                           ; BSR set to: 60
  2441                           ;main.c: 183:  (INTCON0bits.GIEL = 1);
  2442  011DA4  8CD2               	bsf	210,6,c	;volatile
  2443                           
  2444                           ; BSR set to: 60
  2445                           ;main.c: 185:  V.ui_state = UI_STATE_INIT;
  2446  011DA6  0102               	movlb	2	; () banked
  2447  011DA8  6B00               	clrf	_V& (0+255),b	;volatile
  2448                           
  2449                           ; BSR set to: 2
  2450                           ;main.c: 190:  WaitMs(300);
  2451  011DAA  0E2C               	movlw	44
  2452  011DAC  6EE6               	movwf	postinc1,c
  2453  011DAE  0E01               	movlw	1
  2454  011DB0  6EE6               	movwf	postinc1,c
  2455  011DB2  EC00  F0C8         	call	_WaitMs	;wreg free
  2456                           
  2457                           ;main.c: 191:  if (PORTBbits.RB0) {
  2458  011DB6  A0CB               	btfss	203,0,c	;volatile
  2459  011DB8  D004               	goto	l11406
  2460                           
  2461                           ;main.c: 192:   mode = UI_STATE_HOST;
  2462                           ;stkvar	_mode @ sp[(-5)+4]
  2463  011DBA  0EFF               	movlw	-1
  2464  011DBC  6AE3               	clrf	plusw1,c
  2465  011DBE  2AE3               	incf	plusw1,f,c
  2466                           
  2467                           ;main.c: 193:  } else {
  2468  011DC0  D004               	goto	l11408
  2469  011DC2                     l11406:
  2470                           
  2471                           ;main.c: 194:   mode = UI_STATE_LOG;
  2472                           ;stkvar	_mode @ sp[(-5)+4]
  2473  011DC2  0EFF               	movlw	-1
  2474  011DC4  6AE3               	clrf	plusw1,c
  2475  011DC6  80E3               	bsf	plusw1,0,c
  2476  011DC8  82E3               	bsf	plusw1,1,c	;indir
  2477  011DCA                     l11408:
  2478                           
  2479                           ;main.c: 197:  if (mode == UI_STATE_HOST) {
  2480                           ;stkvar	_mode @ sp[(-5)+4]
  2481  011DCA  0EFF               	movlw	-1
  2482  011DCC  04E3               	decf	plusw1,w,c
  2483  011DCE  A4D8               	btfss	status,2,c
  2484  011DD0  D007               	goto	l1338
  2485                           
  2486                           ;main.c: 198:   do { LATDbits.LATD0 = 1; } while(0);
  2487  011DD2  80BD               	bsf	189,0,c	;volatile
  2488                           
  2489                           ;main.c: 199:   V.mode_pwm = 70;
  2490  011DD4  0E00               	movlw	0
  2491  011DD6  0102               	movlb	2	; () banked
  2492  011DD8  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  2493  011DDA  0E46               	movlw	70
  2494  011DDC  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  2495                           
  2496                           ;main.c: 200:  } else {
  2497  011DDE  D004               	goto	l11412
  2498  011DE0                     l1338:
  2499  011DE0  90BD               	bcf	189,0,c	;volatile
  2500                           
  2501                           ;main.c: 202:   V.mode_pwm = 0;
  2502  011DE2  0102               	movlb	2	; () banked
  2503  011DE4  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2504  011DE6  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2505  011DE8                     l11412:
  2506                           
  2507                           ; BSR set to: 2
  2508                           ;main.c: 204:  mode_lamp_dim(V.mode_pwm);
  2509  011DE8  0060  FA57  FFE6   	movff	_V+149,postinc1
  2510  011DEE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2511  011DF4  ECEF  F0CB         	call	_mode_lamp_dim	;wreg free
  2512  011DF8  D0D4               	goto	l11460
  2513  011DFA                     l11414:
  2514                           
  2515                           ; BSR set to: 2
  2516                           ;main.c: 215:    init_display();
  2517  011DFA  ECB5  F0BC         	call	_init_display	;wreg free
  2518                           
  2519                           ; BSR set to: 61
  2520                           ;main.c: 216:    eaDogM_WriteCommand(0b00001100);
  2521  011DFE  0E0C               	movlw	12
  2522  011E00  6EE6               	movwf	postinc1,c
  2523  011E02  EC43  F0CC         	call	_eaDogM_WriteCommand	;wreg free
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;main.c: 218:    V.ui_state = mode;
  2527                           ;stkvar	_mode @ sp[(-5)+4]
  2528  011E06  0EFF               	movlw	-1
  2529  011E08  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;main.c: 219:    srand(1957);
  2533  011E0E  0EA5               	movlw	165
  2534  011E10  6EE6               	movwf	postinc1,c
  2535  011E12  0E07               	movlw	7
  2536  011E14  6EE6               	movwf	postinc1,c
  2537  011E16  EC50  F0C8         	call	_srand	;wreg free
  2538                           
  2539                           ; BSR set to: 1
  2540                           ;main.c: 220:    set_vterm(0);
  2541  011E1A  0E00               	movlw	0
  2542  011E1C  6EE6               	movwf	postinc1,c
  2543  011E1E  EC8A  F0CB         	call	_set_vterm	;wreg free
  2544                           
  2545                           ;main.c: 221:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2546  011E22  0E60               	movlw	low STR_1
  2547  011E24  6EE6               	movwf	postinc1,c
  2548  011E26  0EFF               	movlw	high STR_1
  2549  011E28  6EE6               	movwf	postinc1,c
  2550  011E2A  0E00               	movlw	0
  2551  011E2C  6EE6               	movwf	postinc1,c
  2552  011E2E  0E00               	movlw	0
  2553  011E30  6EE6               	movwf	postinc1,c
  2554  011E32  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  2555  011E36  0060  F007  FFE6   	movff	btemp,postinc1
  2556  011E3C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2557  011E42  0E04               	movlw	4
  2558  011E44  6EE6               	movwf	postinc1,c
  2559  011E46  ECB7  F0BA         	call	_sprintf	;wreg free
  2560                           
  2561                           ; BSR set to: 0
  2562                           ;main.c: 222:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.998");
  2563  011E4A  0EE0               	movlw	low STR_3
  2564  011E4C  6EE6               	movwf	postinc1,c
  2565  011E4E  0EFF               	movlw	high STR_3
  2566  011E50  6EE6               	movwf	postinc1,c
  2567  011E52  0EB2               	movlw	low STR_2
  2568  011E54  6EE6               	movwf	postinc1,c
  2569  011E56  0EFF               	movlw	high STR_2
  2570  011E58  6EE6               	movwf	postinc1,c
  2571  011E5A  0E00               	movlw	0
  2572  011E5C  6EE6               	movwf	postinc1,c
  2573  011E5E  0E01               	movlw	1
  2574  011E60  6EE6               	movwf	postinc1,c
  2575  011E62  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  2576  011E66  0060  F007  FFE6   	movff	btemp,postinc1
  2577  011E6C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2578  011E72  0E06               	movlw	6
  2579  011E74  6EE6               	movwf	postinc1,c
  2580  011E76  ECB7  F0BA         	call	_sprintf	;wreg free
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;main.c: 223:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2584  011E7A  0E4F               	movlw	low STR_4
  2585  011E7C  6EE6               	movwf	postinc1,c
  2586  011E7E  0EFF               	movlw	high STR_4
  2587  011E80  6EE6               	movwf	postinc1,c
  2588  011E82  0E00               	movlw	0
  2589  011E84  6EE6               	movwf	postinc1,c
  2590  011E86  0E02               	movlw	2
  2591  011E88  6EE6               	movwf	postinc1,c
  2592  011E8A  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  2593  011E8E  0060  F007  FFE6   	movff	btemp,postinc1
  2594  011E94  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2595  011E9A  0E04               	movlw	4
  2596  011E9C  6EE6               	movwf	postinc1,c
  2597  011E9E  ECB7  F0BA         	call	_sprintf	;wreg free
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;main.c: 224:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2601  011EA2  0E71               	movlw	low STR_5
  2602  011EA4  6EE6               	movwf	postinc1,c
  2603  011EA6  0EFF               	movlw	high STR_5
  2604  011EA8  6EE6               	movwf	postinc1,c
  2605  011EAA  0E02               	movlw	2
  2606  011EAC  6EE6               	movwf	postinc1,c
  2607  011EAE  0E00               	movlw	0
  2608  011EB0  6EE6               	movwf	postinc1,c
  2609  011EB2  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  2610  011EB6  0060  F007  FFE6   	movff	btemp,postinc1
  2611  011EBC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2612  011EC2  0E04               	movlw	4
  2613  011EC4  6EE6               	movwf	postinc1,c
  2614  011EC6  ECB7  F0BA         	call	_sprintf	;wreg free
  2615                           
  2616                           ; BSR set to: 0
  2617                           ;main.c: 225:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.998");
  2618  011ECA  0EE0               	movlw	low STR_3
  2619  011ECC  6EE6               	movwf	postinc1,c
  2620  011ECE  0EFF               	movlw	high STR_3
  2621  011ED0  6EE6               	movwf	postinc1,c
  2622  011ED2  0EB2               	movlw	low STR_2
  2623  011ED4  6EE6               	movwf	postinc1,c
  2624  011ED6  0EFF               	movlw	high STR_2
  2625  011ED8  6EE6               	movwf	postinc1,c
  2626  011EDA  0E02               	movlw	2
  2627  011EDC  6EE6               	movwf	postinc1,c
  2628  011EDE  0E01               	movlw	1
  2629  011EE0  6EE6               	movwf	postinc1,c
  2630  011EE2  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  2631  011EE6  0060  F007  FFE6   	movff	btemp,postinc1
  2632  011EEC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2633  011EF2  0E06               	movlw	6
  2634  011EF4  6EE6               	movwf	postinc1,c
  2635  011EF6  ECB7  F0BA         	call	_sprintf	;wreg free
  2636                           
  2637                           ; BSR set to: 0
  2638                           ;main.c: 226:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2639  011EFA  0E3E               	movlw	low STR_8
  2640  011EFC  6EE6               	movwf	postinc1,c
  2641  011EFE  0EFF               	movlw	high STR_8
  2642  011F00  6EE6               	movwf	postinc1,c
  2643  011F02  0E02               	movlw	2
  2644  011F04  6EE6               	movwf	postinc1,c
  2645  011F06  0E02               	movlw	2
  2646  011F08  6EE6               	movwf	postinc1,c
  2647  011F0A  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  2648  011F0E  0060  F007  FFE6   	movff	btemp,postinc1
  2649  011F14  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2650  011F1A  0E04               	movlw	4
  2651  011F1C  6EE6               	movwf	postinc1,c
  2652  011F1E  ECB7  F0BA         	call	_sprintf	;wreg free
  2653                           
  2654                           ; BSR set to: 0
  2655                           ;main.c: 227:    update_lcd(0);
  2656  011F22  0E00               	movlw	0
  2657  011F24  6EE6               	movwf	postinc1,c
  2658  011F26  EC2F  F0BA         	call	_update_lcd	;wreg free
  2659                           
  2660                           ;main.c: 228:    WaitMs(3000);
  2661  011F2A  0EB8               	movlw	184
  2662  011F2C  6EE6               	movwf	postinc1,c
  2663  011F2E  0E0B               	movlw	11
  2664  011F30  6EE6               	movwf	postinc1,c
  2665  011F32  EC00  F0C8         	call	_WaitMs	;wreg free
  2666                           
  2667                           ;main.c: 229:    StartTimer(TMR_DISPLAY, 250);
  2668  011F36  0EFA               	movlw	250
  2669  011F38  6EE6               	movwf	postinc1,c
  2670  011F3A  0E00               	movlw	0
  2671  011F3C  6EE6               	movwf	postinc1,c
  2672  011F3E  0E0A               	movlw	10
  2673  011F40  6EE6               	movwf	postinc1,c
  2674  011F42  EC2A  F0C7         	call	_StartTimer	;wreg free
  2675                           
  2676                           ;main.c: 230:    StartTimer(TMR_ADC, 200);
  2677  011F46  0EC8               	movlw	200
  2678  011F48  6EE6               	movwf	postinc1,c
  2679  011F4A  0E00               	movlw	0
  2680  011F4C  6EE6               	movwf	postinc1,c
  2681  011F4E  0E01               	movlw	1
  2682  011F50  6EE6               	movwf	postinc1,c
  2683  011F52  EC2A  F0C7         	call	_StartTimer	;wreg free
  2684                           
  2685                           ;main.c: 231:    StartTimer(TMR_INFO, 3000);
  2686  011F56  0EB8               	movlw	184
  2687  011F58  6EE6               	movwf	postinc1,c
  2688  011F5A  0E0B               	movlw	11
  2689  011F5C  6EE6               	movwf	postinc1,c
  2690  011F5E  0E07               	movlw	7
  2691  011F60  6EE6               	movwf	postinc1,c
  2692  011F62  EC2A  F0C7         	call	_StartTimer	;wreg free
  2693                           
  2694                           ;main.c: 232:    StartTimer(TMR_FLIPPER, 1500);
  2695  011F66  0EDC               	movlw	220
  2696  011F68  6EE6               	movwf	postinc1,c
  2697  011F6A  0E05               	movlw	5
  2698  011F6C  6EE6               	movwf	postinc1,c
  2699  011F6E  0E0B               	movlw	11
  2700  011F70  6EE6               	movwf	postinc1,c
  2701  011F72  EC2A  F0C7         	call	_StartTimer	;wreg free
  2702                           
  2703                           ;main.c: 233:    StartTimer(TMR_HELPDIS, 3000);
  2704  011F76  0EB8               	movlw	184
  2705  011F78  6EE6               	movwf	postinc1,c
  2706  011F7A  0E0B               	movlw	11
  2707  011F7C  6EE6               	movwf	postinc1,c
  2708  011F7E  0E09               	movlw	9
  2709  011F80  6EE6               	movwf	postinc1,c
  2710  011F82  EC2A  F0C7         	call	_StartTimer	;wreg free
  2711                           
  2712                           ;main.c: 235:    start_adc_scan();
  2713  011F86  EC1D  F0C4         	call	_start_adc_scan	;wreg free
  2714                           
  2715                           ;main.c: 236:    start_switch_handler();
  2716  011F8A  EC5C  F0CB         	call	_start_switch_handler	;wreg free
  2717                           
  2718                           ; BSR set to: 57
  2719                           ;main.c: 237:    static_soc();
  2720  011F8E  EC36  F0C8         	call	_static_soc	;wreg free
  2721                           
  2722                           ; BSR set to: 1
  2723                           ;main.c: 238:    init_bsoc();
  2724  011F92  ECC8  F0BE         	call	_init_bsoc	;wreg free
  2725                           
  2726                           ;main.c: 240:    break;
  2727  011F96  D01C               	goto	l11462
  2728  011F98                     l1346:
  2729                           
  2730                           ; BSR set to: 2
  2731                           ;main.c: 246:    P.SYSTEM_STABLE = 1;
  2732  011F98  0100               	movlb	0	; () banked
  2733  011F9A  81A6               	bsf	(_P+1)& (0+255),0,b	;volatile
  2734                           
  2735                           ;main.c: 247:    break;
  2736  011F9C  D019               	goto	l11462
  2737  011F9E                     l1348:
  2738                           
  2739                           ; BSR set to: 2
  2740                           ;main.c: 250:    V.ui_state = UI_STATE_INIT;
  2741  011F9E  6B00               	clrf	_V& (0+255),b	;volatile
  2742                           
  2743                           ;main.c: 251:    break;
  2744  011FA0  D017               	goto	l11462
  2745  011FA2                     l11460:
  2746  011FA2  0102               	movlb	2	; () banked
  2747  011FA4  5100               	movf	_V& (0+255),w,b	;volatile
  2748  011FA6  6E0B               	movwf	(btemp+10)^0,c
  2749  011FA8  6A0C               	clrf	(btemp+11)^0,c
  2750                           
  2751                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2752                           ; Switch size 1, requested type "simple"
  2753                           ; Number of cases is 1, Range of values is 0 to 0
  2754                           ; switch strategies available:
  2755                           ; Name         Instructions Cycles
  2756                           ; simple_byte            4     3 (average)
  2757                           ;	Chosen strategy is simple_byte
  2758  011FAA  500C               	movf	(btemp+11)^0,w,c
  2759  011FAC  0A00               	xorlw	0	; case 0
  2760  011FAE  A4D8               	btfss	status,2,c
  2761  011FB0  D7F6               	goto	l1348
  2762                           
  2763                           ; BSR set to: 2
  2764                           ; Switch size 1, requested type "simple"
  2765                           ; Number of cases is 5, Range of values is 0 to 5
  2766                           ; switch strategies available:
  2767                           ; Name         Instructions Cycles
  2768                           ; simple_byte           16     9 (average)
  2769                           ;	Chosen strategy is simple_byte
  2770  011FB2  500B               	movf	(btemp+10)^0,w,c
  2771  011FB4  0A00               	xorlw	0	; case 0
  2772  011FB6  B4D8               	btfsc	status,2,c
  2773  011FB8  D720               	goto	l11414
  2774  011FBA  0A01               	xorlw	1	; case 1
  2775  011FBC  B4D8               	btfsc	status,2,c
  2776  011FBE  D008               	goto	l11462
  2777  011FC0  0A02               	xorlw	2	; case 3
  2778  011FC2  B4D8               	btfsc	status,2,c
  2779  011FC4  D005               	goto	l11462
  2780  011FC6  0A07               	xorlw	7	; case 4
  2781  011FC8  B4D8               	btfsc	status,2,c
  2782  011FCA  D7E6               	goto	l1346
  2783  011FCC  0A01               	xorlw	1	; case 5
  2784  011FCE  D7E7               	goto	l1348
  2785  011FD0                     l11462:
  2786                           
  2787                           ;main.c: 254:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2788  011FD0  0E01               	movlw	1
  2789  011FD2  6EE6               	movwf	postinc1,c
  2790  011FD4  EC8B  F0C9         	call	_TimerDone	;wreg free
  2791  011FD8  5001               	movf	btemp^0,w,c
  2792  011FDA  B4D8               	btfsc	status,2,c
  2793  011FDC  D013               	goto	l11474
  2794  011FDE  EC83  F0CC         	call	_check_adc_scan	;wreg free
  2795  011FE2  5001               	movf	btemp^0,w,c
  2796  011FE4  B4D8               	btfsc	status,2,c
  2797  011FE6  D00E               	goto	l11474
  2798                           
  2799                           ;main.c: 258:    convert_adc_data();
  2800  011FE8  EC27  F0BF         	call	_convert_adc_data	;wreg free
  2801                           
  2802                           ;main.c: 262:    clear_adc_scan();
  2803  011FEC  EC8B  F0CC         	call	_clear_adc_scan	;wreg free
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;main.c: 263:    start_adc_scan();
  2807  011FF0  EC1D  F0C4         	call	_start_adc_scan	;wreg free
  2808                           
  2809                           ;main.c: 264:    StartTimer(TMR_ADC, 200);
  2810  011FF4  0EC8               	movlw	200
  2811  011FF6  6EE6               	movwf	postinc1,c
  2812  011FF8  0E00               	movlw	0
  2813  011FFA  6EE6               	movwf	postinc1,c
  2814  011FFC  0E01               	movlw	1
  2815  011FFE  6EE6               	movwf	postinc1,c
  2816  012000  EC2A  F0C7         	call	_StartTimer	;wreg free
  2817  012004                     l11474:
  2818                           
  2819                           ;main.c: 271:   if (TimerDone(TMR_DISPLAY)) {
  2820                           
  2821                           ;main.c: 267:   if (V.ticks) {
  2822  012004  0E0A               	movlw	10
  2823  012006  6EE6               	movwf	postinc1,c
  2824  012008  EC8B  F0C9         	call	_TimerDone	;wreg free
  2825  01200C  5001               	movf	btemp^0,w,c
  2826  01200E  B4D8               	btfsc	status,2,c
  2827  012010  D27F               	goto	l11516
  2828                           
  2829                           ;main.c: 272:    if (TimerDone(TMR_HELPDIS)) {
  2830  012012  0E09               	movlw	9
  2831  012014  6EE6               	movwf	postinc1,c
  2832  012016  EC8B  F0C9         	call	_TimerDone	;wreg free
  2833  01201A  5001               	movf	btemp^0,w,c
  2834  01201C  B4D8               	btfsc	status,2,c
  2835  01201E  D004               	goto	l11482
  2836                           
  2837                           ;main.c: 273:     set_display_info(DIS_STR);
  2838  012020  0E00               	movlw	0
  2839  012022  6EE6               	movwf	postinc1,c
  2840  012024  EC99  F0CB         	call	_set_display_info	;wreg free
  2841  012028                     l11482:
  2842                           
  2843                           ;main.c: 275:    calc_model_data();
  2844  012028  EC4B  F0AA         	call	_calc_model_data	;wreg free
  2845                           
  2846                           ; BSR set to: 1
  2847                           ;main.c: 282:     hid_display(&H);
  2848                           
  2849                           ;main.c: 277:    if (0) {
  2850  01202C  0EF8               	movlw	_H& (0+255)
  2851  01202E  6EE6               	movwf	postinc1,c
  2852  012030  EC3C  F0BB         	call	_hid_display	;wreg free
  2853                           
  2854                           ;main.c: 283:     switch (H.hid_display) {
  2855  012034  D248               	goto	l11508
  2856  012036                     l1356:
  2857                           
  2858                           ; BSR set to: 0
  2859                           ;main.c: 285:      V.calib = 0;
  2860  012036  0102               	movlb	2	; () banked
  2861  012038  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2862                           
  2863                           ; BSR set to: 2
  2864                           ;main.c: 286:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2865  01203A  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2866  012040  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2867  012046  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2868  01204C  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2869  012052  0EB9               	movlw	low STR_12
  2870  012054  6EE6               	movwf	postinc1,c
  2871  012056  0EFE               	movlw	high STR_12
  2872  012058  6EE6               	movwf	postinc1,c
  2873  01205A  0E00               	movlw	0
  2874  01205C  6EE6               	movwf	postinc1,c
  2875  01205E  0E00               	movlw	0
  2876  012060  6EE6               	movwf	postinc1,c
  2877  012062  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  2878  012066  0060  F007  FFE6   	movff	btemp,postinc1
  2879  01206C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2880  012072  0E08               	movlw	8
  2881  012074  6EE6               	movwf	postinc1,c
  2882  012076  ECB7  F0BA         	call	_sprintf	;wreg free
  2883                           
  2884                           ;main.c: 287:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2885  01207A  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2886  012080  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2887  012086  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2888  01208C  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2889  012092  0EDF               	movlw	low STR_13
  2890  012094  6EE6               	movwf	postinc1,c
  2891  012096  0EFE               	movlw	high STR_13
  2892  012098  6EE6               	movwf	postinc1,c
  2893  01209A  0E00               	movlw	0
  2894  01209C  6EE6               	movwf	postinc1,c
  2895  01209E  0E01               	movlw	1
  2896  0120A0  6EE6               	movwf	postinc1,c
  2897  0120A2  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  2898  0120A6  0060  F007  FFE6   	movff	btemp,postinc1
  2899  0120AC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2900  0120B2  0E08               	movlw	8
  2901  0120B4  6EE6               	movwf	postinc1,c
  2902  0120B6  ECB7  F0BA         	call	_sprintf	;wreg free
  2903                           
  2904                           ;main.c: 288:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2905  0120BA  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2906  0120C0  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2907  0120C6  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2908  0120CC  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2909  0120D2  0ECC               	movlw	low STR_14
  2910  0120D4  6EE6               	movwf	postinc1,c
  2911  0120D6  0EFE               	movlw	high STR_14
  2912  0120D8  6EE6               	movwf	postinc1,c
  2913  0120DA  0E00               	movlw	0
  2914  0120DC  6EE6               	movwf	postinc1,c
  2915  0120DE  0E02               	movlw	2
  2916  0120E0  6EE6               	movwf	postinc1,c
  2917  0120E2  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  2918  0120E6  0060  F007  FFE6   	movff	btemp,postinc1
  2919  0120EC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2920  0120F2  0E08               	movlw	8
  2921  0120F4  6EE6               	movwf	postinc1,c
  2922  0120F6  ECB7  F0BA         	call	_sprintf	;wreg free
  2923                           
  2924                           ;main.c: 289:      break;
  2925  0120FA  D1FA               	goto	l11510
  2926  0120FC                     l1358:
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;main.c: 291:      V.calib = 0;
  2930  0120FC  0102               	movlb	2	; () banked
  2931  0120FE  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2932                           
  2933                           ; BSR set to: 2
  2934                           ;main.c: 292:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  2935  012100  0060  F413  FFE6   	movff	_C+4,postinc1
  2936  012106  0060  F417  FFE6   	movff	_C+5,postinc1
  2937  01210C  0060  F41B  FFE6   	movff	_C+6,postinc1
  2938  012112  0060  F41F  FFE6   	movff	_C+7,postinc1
  2939  012118  0060  F453  FFE6   	movff	_C+20,postinc1
  2940  01211E  0060  F457  FFE6   	movff	_C+21,postinc1
  2941  012124  0060  F45B  FFE6   	movff	_C+22,postinc1
  2942  01212A  0060  F45F  FFE6   	movff	_C+23,postinc1
  2943  012130  0E2B               	movlw	low STR_15
  2944  012132  6EE6               	movwf	postinc1,c
  2945  012134  0EFF               	movlw	high STR_15
  2946  012136  6EE6               	movwf	postinc1,c
  2947  012138  0E00               	movlw	0
  2948  01213A  6EE6               	movwf	postinc1,c
  2949  01213C  0E00               	movlw	0
  2950  01213E  6EE6               	movwf	postinc1,c
  2951  012140  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  2952  012144  0060  F007  FFE6   	movff	btemp,postinc1
  2953  01214A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2954  012150  0E0C               	movlw	12
  2955  012152  6EE6               	movwf	postinc1,c
  2956  012154  ECB7  F0BA         	call	_sprintf	;wreg free
  2957                           
  2958                           ;main.c: 293:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  2959  012158  0060  F403  FFE6   	movff	_C,postinc1
  2960  01215E  0060  F407  FFE6   	movff	_C+1,postinc1
  2961  012164  0060  F40B  FFE6   	movff	_C+2,postinc1
  2962  01216A  0060  F40F  FFE6   	movff	_C+3,postinc1
  2963  012170  0060  F443  FFE6   	movff	_C+16,postinc1
  2964  012176  0060  F447  FFE6   	movff	_C+17,postinc1
  2965  01217C  0060  F44B  FFE6   	movff	_C+18,postinc1
  2966  012182  0060  F44F  FFE6   	movff	_C+19,postinc1
  2967  012188  0E05               	movlw	low STR_16
  2968  01218A  6EE6               	movwf	postinc1,c
  2969  01218C  0EFF               	movlw	high STR_16
  2970  01218E  6EE6               	movwf	postinc1,c
  2971  012190  0E00               	movlw	0
  2972  012192  6EE6               	movwf	postinc1,c
  2973  012194  0E01               	movlw	1
  2974  012196  6EE6               	movwf	postinc1,c
  2975  012198  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  2976  01219C  0060  F007  FFE6   	movff	btemp,postinc1
  2977  0121A2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  2978  0121A8  0E0C               	movlw	12
  2979  0121AA  6EE6               	movwf	postinc1,c
  2980  0121AC  ECB7  F0BA         	call	_sprintf	;wreg free
  2981                           
  2982                           ;main.c: 294:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  2983  0121B0  0060  F503  FFE6   	movff	_C+64,postinc1
  2984  0121B6  0060  F507  FFE6   	movff	_C+65,postinc1
  2985  0121BC  0060  F50B  FFE6   	movff	_C+66,postinc1
  2986  0121C2  0060  F50F  FFE6   	movff	_C+67,postinc1
  2987  0121C8  0060  F423  FFE6   	movff	_C+8,postinc1
  2988  0121CE  0060  F427  FFE6   	movff	_C+9,postinc1
  2989  0121D4  0060  F42B  FFE6   	movff	_C+10,postinc1
  2990  0121DA  0060  F42F  FFE6   	movff	_C+11,postinc1
  2991  0121E0  0E18               	movlw	low STR_17
  2992  0121E2  6EE6               	movwf	postinc1,c
  2993  0121E4  0EFF               	movlw	high STR_17
  2994  0121E6  6EE6               	movwf	postinc1,c
  2995  0121E8  0E00               	movlw	0
  2996  0121EA  6EE6               	movwf	postinc1,c
  2997  0121EC  0E02               	movlw	2
  2998  0121EE  6EE6               	movwf	postinc1,c
  2999  0121F0  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  3000  0121F4  0060  F007  FFE6   	movff	btemp,postinc1
  3001  0121FA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3002  012200  0E0C               	movlw	12
  3003  012202  6EE6               	movwf	postinc1,c
  3004  012204  ECB7  F0BA         	call	_sprintf	;wreg free
  3005                           
  3006                           ;main.c: 295:      break;
  3007  012208  D173               	goto	l11510
  3008  01220A                     l1359:
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;main.c: 297:      V.calib = 0;
  3012  01220A  0102               	movlb	2	; () banked
  3013  01220C  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3014                           
  3015                           ; BSR set to: 2
  3016                           ;main.c: 298:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f    ", C.p_bat);
  3017  01220E  0060  F5D3  FFE6   	movff	_C+116,postinc1
  3018  012214  0060  F5D7  FFE6   	movff	_C+117,postinc1
  3019  01221A  0060  F5DB  FFE6   	movff	_C+118,postinc1
  3020  012220  0060  F5DF  FFE6   	movff	_C+119,postinc1
  3021  012226  0EF2               	movlw	low STR_18
  3022  012228  6EE6               	movwf	postinc1,c
  3023  01222A  0EFE               	movlw	high STR_18
  3024  01222C  6EE6               	movwf	postinc1,c
  3025  01222E  0E00               	movlw	0
  3026  012230  6EE6               	movwf	postinc1,c
  3027  012232  0E00               	movlw	0
  3028  012234  6EE6               	movwf	postinc1,c
  3029  012236  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  3030  01223A  0060  F007  FFE6   	movff	btemp,postinc1
  3031  012240  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3032  012246  0E08               	movlw	8
  3033  012248  6EE6               	movwf	postinc1,c
  3034  01224A  ECB7  F0BA         	call	_sprintf	;wreg free
  3035                           
  3036                           ;main.c: 299:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  3037  01224E  0060  F623  FFE6   	movff	_C+136,postinc1
  3038  012254  0060  F627  FFE6   	movff	_C+137,postinc1
  3039  01225A  0060  F62B  FFE6   	movff	_C+138,postinc1
  3040  012260  0060  F62F  FFE6   	movff	_C+139,postinc1
  3041  012266  0060  F613  FFE6   	movff	_C+132,postinc1
  3042  01226C  0060  F617  FFE6   	movff	_C+133,postinc1
  3043  012272  0060  F61B  FFE6   	movff	_C+134,postinc1
  3044  012278  0060  F61F  FFE6   	movff	_C+135,postinc1
  3045  01227E  0E59               	movlw	low STR_19
  3046  012280  6EE6               	movwf	postinc1,c
  3047  012282  0EFE               	movlw	high STR_19
  3048  012284  6EE6               	movwf	postinc1,c
  3049  012286  0E00               	movlw	0
  3050  012288  6EE6               	movwf	postinc1,c
  3051  01228A  0E01               	movlw	1
  3052  01228C  6EE6               	movwf	postinc1,c
  3053  01228E  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  3054  012292  0060  F007  FFE6   	movff	btemp,postinc1
  3055  012298  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3056  01229E  0E0C               	movlw	12
  3057  0122A0  6EE6               	movwf	postinc1,c
  3058  0122A2  ECB7  F0BA         	call	_sprintf	;wreg free
  3059                           
  3060                           ;main.c: 300:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  3061  0122A6  0060  F683  FFE6   	movff	_C+160,postinc1
  3062  0122AC  0060  F687  FFE6   	movff	_C+161,postinc1
  3063  0122B2  0060  F68B  FFE6   	movff	_C+162,postinc1
  3064  0122B8  0060  F68F  FFE6   	movff	_C+163,postinc1
  3065  0122BE  0EA6               	movlw	low STR_20
  3066  0122C0  6EE6               	movwf	postinc1,c
  3067  0122C2  0EFE               	movlw	high STR_20
  3068  0122C4  6EE6               	movwf	postinc1,c
  3069  0122C6  0E00               	movlw	0
  3070  0122C8  6EE6               	movwf	postinc1,c
  3071  0122CA  0E02               	movlw	2
  3072  0122CC  6EE6               	movwf	postinc1,c
  3073  0122CE  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  3074  0122D2  0060  F007  FFE6   	movff	btemp,postinc1
  3075  0122D8  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3076  0122DE  0E08               	movlw	8
  3077  0122E0  6EE6               	movwf	postinc1,c
  3078  0122E2  ECB7  F0BA         	call	_sprintf	;wreg free
  3079                           
  3080                           ;main.c: 301:      break;
  3081  0122E6  D104               	goto	l11510
  3082  0122E8                     l11494:
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;main.c: 303:      if (!V.calib) {
  3086  0122E8  0102               	movlb	2	; () banked
  3087  0122EA  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  3088  0122EC  A4D8               	btfss	status,2,c
  3089  0122EE  D02D               	goto	l11498
  3090                           
  3091                           ; BSR set to: 2
  3092                           ;main.c: 304:       lp_filter(0.0, i, -1);
  3093  0122F0  0EFF               	movlw	255
  3094  0122F2  6EE6               	movwf	postinc1,c
  3095                           
  3096                           ;stkvar	_i @ sp[(-6)+2]
  3097  0122F4  0EFC               	movlw	-4
  3098  0122F6  50E3               	movf	plusw1,w,c
  3099  0122F8  6EE6               	movwf	postinc1,c
  3100  0122FA  0E00               	movlw	0
  3101  0122FC  6EE6               	movwf	postinc1,c
  3102  0122FE  0E00               	movlw	0
  3103  012300  6EE6               	movwf	postinc1,c
  3104  012302  0E00               	movlw	0
  3105  012304  6EE6               	movwf	postinc1,c
  3106  012306  0E00               	movlw	0
  3107  012308  6EE6               	movwf	postinc1,c
  3108  01230A  ECA0  F0B3         	call	_lp_filter	;wreg free
  3109                           
  3110                           ;main.c: 305:       lp_filter(0.0, j, -1);
  3111  01230E  0EFF               	movlw	255
  3112  012310  6EE6               	movwf	postinc1,c
  3113                           
  3114                           ;stkvar	_j @ sp[(-6)+1]
  3115  012312  0EFB               	movlw	-5
  3116  012314  50E3               	movf	plusw1,w,c
  3117  012316  6EE6               	movwf	postinc1,c
  3118  012318  0E00               	movlw	0
  3119  01231A  6EE6               	movwf	postinc1,c
  3120  01231C  0E00               	movlw	0
  3121  01231E  6EE6               	movwf	postinc1,c
  3122  012320  0E00               	movlw	0
  3123  012322  6EE6               	movwf	postinc1,c
  3124  012324  0E00               	movlw	0
  3125  012326  6EE6               	movwf	postinc1,c
  3126  012328  ECA0  F0B3         	call	_lp_filter	;wreg free
  3127                           
  3128                           ;main.c: 306:       lp_filter(0.0, k, -1);
  3129  01232C  0EFF               	movlw	255
  3130  01232E  6EE6               	movwf	postinc1,c
  3131                           
  3132                           ;stkvar	_k @ sp[(-6)+0]
  3133  012330  0EFA               	movlw	-6
  3134  012332  50E3               	movf	plusw1,w,c
  3135  012334  6EE6               	movwf	postinc1,c
  3136  012336  0E00               	movlw	0
  3137  012338  6EE6               	movwf	postinc1,c
  3138  01233A  0E00               	movlw	0
  3139  01233C  6EE6               	movwf	postinc1,c
  3140  01233E  0E00               	movlw	0
  3141  012340  6EE6               	movwf	postinc1,c
  3142  012342  0E00               	movlw	0
  3143  012344  6EE6               	movwf	postinc1,c
  3144  012346  ECA0  F0B3         	call	_lp_filter	;wreg free
  3145  01234A                     l11498:
  3146                           
  3147                           ;main.c: 308:      V.calib = 1;
  3148  01234A  0E01               	movlw	1
  3149  01234C  0102               	movlb	2	; () banked
  3150  01234E  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  3151                           
  3152                           ; BSR set to: 2
  3153                           ;main.c: 309:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  3154  012350  0E02               	movlw	2
  3155  012352  6EE6               	movwf	postinc1,c
  3156  012354  EC77  F0C9         	call	_get_switch	;wreg free
  3157  012358  5001               	movf	btemp^0,w,c
  3158  01235A  6EE6               	movwf	postinc1,c
  3159  01235C  0E00               	movlw	0
  3160  01235E  6EE6               	movwf	postinc1,c
  3161                           
  3162                           ;stkvar	_i @ sp[(-7)+2]
  3163  012360  0EFB               	movlw	-5
  3164  012362  50E3               	movf	plusw1,w,c
  3165  012364  0D04               	mullw	4
  3166  012366  0E00               	movlw	low _C
  3167  012368  24F3               	addwf	243,w,c
  3168  01236A  6ED9               	movwf	fsr2l,c
  3169  01236C  0E01               	movlw	high _C
  3170  01236E  20F4               	addwfc	prodh,w,c
  3171  012370  6EDA               	movwf	fsr2h,c
  3172  012372  006F FF7B FFE6     	movff	postinc2,postinc1
  3173  012378  006F FF7B FFE6     	movff	postinc2,postinc1
  3174  01237E  006F FF7B FFE6     	movff	postinc2,postinc1
  3175  012384  006F FF7B FFE6     	movff	postinc2,postinc1
  3176                           
  3177                           ;stkvar	_i @ sp[(-11)+2]
  3178  01238A  0EF7               	movlw	-9
  3179  01238C  50E3               	movf	plusw1,w,c
  3180  01238E  6EE6               	movwf	postinc1,c
  3181  012390  EC7B  F0CB         	call	_get_raw_result	;wreg free
  3182  012394  0060  F007  FFE6   	movff	btemp,postinc1
  3183  01239A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3184  0123A0  0E93               	movlw	low STR_9
  3185  0123A2  6EE6               	movwf	postinc1,c
  3186  0123A4  0EFF               	movlw	high STR_9
  3187  0123A6  6EE6               	movwf	postinc1,c
  3188  0123A8  0E00               	movlw	0
  3189  0123AA  6EE6               	movwf	postinc1,c
  3190  0123AC  0E00               	movlw	0
  3191  0123AE  6EE6               	movwf	postinc1,c
  3192  0123B0  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  3193  0123B4  0060  F007  FFE6   	movff	btemp,postinc1
  3194  0123BA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3195  0123C0  0E0C               	movlw	12
  3196  0123C2  6EE6               	movwf	postinc1,c
  3197  0123C4  ECB7  F0BA         	call	_sprintf	;wreg free
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;main.c: 310:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  3201  0123C8  0E03               	movlw	3
  3202  0123CA  6EE6               	movwf	postinc1,c
  3203  0123CC  EC77  F0C9         	call	_get_switch	;wreg free
  3204  0123D0  5001               	movf	btemp^0,w,c
  3205  0123D2  6EE6               	movwf	postinc1,c
  3206  0123D4  0E00               	movlw	0
  3207  0123D6  6EE6               	movwf	postinc1,c
  3208                           
  3209                           ;stkvar	_j @ sp[(-7)+1]
  3210  0123D8  0EFA               	movlw	-6
  3211  0123DA  50E3               	movf	plusw1,w,c
  3212  0123DC  0D04               	mullw	4
  3213  0123DE  0E00               	movlw	low _C
  3214  0123E0  24F3               	addwf	243,w,c
  3215  0123E2  6ED9               	movwf	fsr2l,c
  3216  0123E4  0E01               	movlw	high _C
  3217  0123E6  20F4               	addwfc	prodh,w,c
  3218  0123E8  6EDA               	movwf	fsr2h,c
  3219  0123EA  006F FF7B FFE6     	movff	postinc2,postinc1
  3220  0123F0  006F FF7B FFE6     	movff	postinc2,postinc1
  3221  0123F6  006F FF7B FFE6     	movff	postinc2,postinc1
  3222  0123FC  006F FF7B FFE6     	movff	postinc2,postinc1
  3223                           
  3224                           ;stkvar	_j @ sp[(-11)+1]
  3225  012402  0EF6               	movlw	-10
  3226  012404  50E3               	movf	plusw1,w,c
  3227  012406  6EE6               	movwf	postinc1,c
  3228  012408  EC7B  F0CB         	call	_get_raw_result	;wreg free
  3229  01240C  0060  F007  FFE6   	movff	btemp,postinc1
  3230  012412  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3231  012418  0E93               	movlw	low STR_9
  3232  01241A  6EE6               	movwf	postinc1,c
  3233  01241C  0EFF               	movlw	high STR_9
  3234  01241E  6EE6               	movwf	postinc1,c
  3235  012420  0E00               	movlw	0
  3236  012422  6EE6               	movwf	postinc1,c
  3237  012424  0E01               	movlw	1
  3238  012426  6EE6               	movwf	postinc1,c
  3239  012428  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  3240  01242C  0060  F007  FFE6   	movff	btemp,postinc1
  3241  012432  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3242  012438  0E0C               	movlw	12
  3243  01243A  6EE6               	movwf	postinc1,c
  3244  01243C  ECB7  F0BA         	call	_sprintf	;wreg free
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;main.c: 311:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  3248                           ;stkvar	_inp_index @ sp[(-5)+3]
  3249  012440  0EFE               	movlw	-2
  3250  012442  50E3               	movf	plusw1,w,c
  3251  012444  6E0B               	movwf	(btemp+10)^0,c
  3252  012446  6A0C               	clrf	(btemp+11)^0,c
  3253  012448  0E01               	movlw	1
  3254  01244A  260B               	addwf	(btemp+10)^0,f,c
  3255  01244C  0E00               	movlw	0
  3256  01244E  220C               	addwfc	(btemp+11)^0,f,c
  3257  012450  0060  F02F  FFE6   	movff	btemp+10,postinc1
  3258  012456  0060  F033  FFE6   	movff	btemp+11,postinc1
  3259                           
  3260                           ;stkvar	_k @ sp[(-7)+0]
  3261  01245C  0EF9               	movlw	-7
  3262  01245E  50E3               	movf	plusw1,w,c
  3263  012460  0D04               	mullw	4
  3264  012462  0E00               	movlw	low _C
  3265  012464  24F3               	addwf	243,w,c
  3266  012466  6ED9               	movwf	fsr2l,c
  3267  012468  0E01               	movlw	high _C
  3268  01246A  20F4               	addwfc	prodh,w,c
  3269  01246C  6EDA               	movwf	fsr2h,c
  3270  01246E  006F FF7B FFE6     	movff	postinc2,postinc1
  3271  012474  006F FF7B FFE6     	movff	postinc2,postinc1
  3272  01247A  006F FF7B FFE6     	movff	postinc2,postinc1
  3273  012480  006F FF7B FFE6     	movff	postinc2,postinc1
  3274                           
  3275                           ;stkvar	_k @ sp[(-11)+0]
  3276  012486  0EF5               	movlw	-11
  3277  012488  50E3               	movf	plusw1,w,c
  3278  01248A  6EE6               	movwf	postinc1,c
  3279  01248C  EC7B  F0CB         	call	_get_raw_result	;wreg free
  3280  012490  0060  F007  FFE6   	movff	btemp,postinc1
  3281  012496  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3282  01249C  0E82               	movlw	low STR_11
  3283  01249E  6EE6               	movwf	postinc1,c
  3284  0124A0  0EFF               	movlw	high STR_11
  3285  0124A2  6EE6               	movwf	postinc1,c
  3286  0124A4  0E00               	movlw	0
  3287  0124A6  6EE6               	movwf	postinc1,c
  3288  0124A8  0E02               	movlw	2
  3289  0124AA  6EE6               	movwf	postinc1,c
  3290  0124AC  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  3291  0124B0  0060  F007  FFE6   	movff	btemp,postinc1
  3292  0124B6  0060  F00B  FFE6   	movff	btemp+1,postinc1
  3293  0124BC  0E0C               	movlw	12
  3294  0124BE  6EE6               	movwf	postinc1,c
  3295  0124C0  ECB7  F0BA         	call	_sprintf	;wreg free
  3296                           
  3297                           ;main.c: 312:      break;
  3298  0124C4  D015               	goto	l11510
  3299  0124C6                     l11508:
  3300  0124C6  0100               	movlb	0	; () banked
  3301  0124C8  51F8               	movf	_H& (0+255),w,b
  3302  0124CA  6E0B               	movwf	(btemp+10)^0,c
  3303  0124CC  6A0C               	clrf	(btemp+11)^0,c
  3304                           
  3305                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3306                           ; Switch size 1, requested type "simple"
  3307                           ; Number of cases is 1, Range of values is 0 to 0
  3308                           ; switch strategies available:
  3309                           ; Name         Instructions Cycles
  3310                           ; simple_byte            4     3 (average)
  3311                           ;	Chosen strategy is simple_byte
  3312  0124CE  500C               	movf	(btemp+11)^0,w,c
  3313  0124D0  0A00               	xorlw	0	; case 0
  3314  0124D2  A4D8               	btfss	status,2,c
  3315  0124D4  D00D               	goto	l11510
  3316                           
  3317                           ; BSR set to: 0
  3318                           ; Switch size 1, requested type "simple"
  3319                           ; Number of cases is 4, Range of values is 0 to 3
  3320                           ; switch strategies available:
  3321                           ; Name         Instructions Cycles
  3322                           ; simple_byte           13     7 (average)
  3323                           ;	Chosen strategy is simple_byte
  3324  0124D6  500B               	movf	(btemp+10)^0,w,c
  3325  0124D8  0A00               	xorlw	0	; case 0
  3326  0124DA  B4D8               	btfsc	status,2,c
  3327  0124DC  D60F               	goto	l1358
  3328  0124DE  0A01               	xorlw	1	; case 1
  3329  0124E0  B4D8               	btfsc	status,2,c
  3330  0124E2  D5A9               	goto	l1356
  3331  0124E4  0A03               	xorlw	3	; case 2
  3332  0124E6  B4D8               	btfsc	status,2,c
  3333  0124E8  D690               	goto	l1359
  3334  0124EA  0A01               	xorlw	1	; case 3
  3335  0124EC  B4D8               	btfsc	status,2,c
  3336  0124EE  D6FC               	goto	l11494
  3337  0124F0                     l11510:
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;main.c: 316:     clear_hid_pflags(&H);
  3341  0124F0  0EF8               	movlw	_H& (0+255)
  3342  0124F2  6EE6               	movwf	postinc1,c
  3343  0124F4  ECE0  F0CA         	call	_clear_hid_pflags	;wreg free
  3344                           
  3345                           ;main.c: 318:    StartTimer(TMR_DISPLAY, 250);
  3346  0124F8  0EFA               	movlw	250
  3347  0124FA  6EE6               	movwf	postinc1,c
  3348  0124FC  0E00               	movlw	0
  3349  0124FE  6EE6               	movwf	postinc1,c
  3350  012500  0E0A               	movlw	10
  3351  012502  6EE6               	movwf	postinc1,c
  3352  012504  EC2A  F0C7         	call	_StartTimer	;wreg free
  3353                           
  3354                           ;main.c: 319:    update_lcd(0);
  3355  012508  0E00               	movlw	0
  3356  01250A  6EE6               	movwf	postinc1,c
  3357  01250C  EC2F  F0BA         	call	_update_lcd	;wreg free
  3358  012510                     l11516:
  3359                           
  3360                           ;main.c: 325:   check_help(V.flipper);
  3361  012510  0102               	movlb	2	; () banked
  3362  012512  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  3363  012514  6EE6               	movwf	postinc1,c
  3364  012516  ECB1  F0B0         	call	_check_help	;wreg free
  3365                           
  3366                           ;main.c: 327:   if (check_enter_button(&H)) {
  3367  01251A  0EF8               	movlw	_H& (0+255)
  3368  01251C  6EE6               	movwf	postinc1,c
  3369  01251E  EC4A  F0C7         	call	_check_enter_button	;wreg free
  3370  012522  5001               	movf	btemp^0,w,c
  3371  012524  B4D8               	btfsc	status,2,c
  3372  012526  D062               	goto	l1363
  3373                           
  3374                           ;main.c: 328:    V.calib = 0;
  3375  012528  0102               	movlb	2	; () banked
  3376  01252A  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3377                           
  3378                           ; BSR set to: 2
  3379                           ;main.c: 329:    inp_index += 3;
  3380                           ;stkvar	_inp_index @ sp[(-5)+3]
  3381  01252C  0EFE               	movlw	-2
  3382  01252E  006F FF8C  F001    	movff	plusw1,btemp
  3383  012534  0E03               	movlw	3
  3384  012536  2601               	addwf	btemp^0,f,c
  3385  012538  0EFE               	movlw	-2
  3386  01253A  0060  F007  FFE3   	movff	btemp,plusw1
  3387                           
  3388                           ;main.c: 330:    if (inp_index > 9)
  3389                           ;stkvar	_inp_index @ sp[(-5)+3]
  3390  012540  0EFE               	movlw	-2
  3391  012542  006F FF8C  F001    	movff	plusw1,btemp
  3392  012548  0E09               	movlw	9
  3393  01254A  6401               	cpfsgt	btemp^0,c
  3394  01254C  D03A               	goto	l11544
  3395                           
  3396                           ; BSR set to: 2
  3397                           ;main.c: 331:     inp_index = 0;
  3398                           ;stkvar	_inp_index @ sp[(-5)+3]
  3399  01254E  0EFE               	movlw	-2
  3400  012550  6AE3               	clrf	plusw1,c
  3401  012552  D037               	goto	l11544
  3402  012554                     l11526:
  3403                           
  3404                           ; BSR set to: 2
  3405                           ;main.c: 334:     i = C_BATT;
  3406                           ;stkvar	_i @ sp[(-5)+2]
  3407  012554  0EFD               	movlw	-3
  3408  012556  6AE3               	clrf	plusw1,c
  3409                           
  3410                           ; BSR set to: 2
  3411                           ;main.c: 335:     j = C_PV;
  3412                           ;stkvar	_j @ sp[(-5)+1]
  3413  012558  0EFC               	movlw	-4
  3414  01255A  6AE3               	clrf	plusw1,c
  3415  01255C  2AE3               	incf	plusw1,f,c
  3416                           
  3417                           ; BSR set to: 2
  3418                           ;main.c: 336:     k = V_CC;
  3419                           ;stkvar	_k @ sp[(-5)+0]
  3420  01255E  0EFB               	movlw	-5
  3421  012560  6AE3               	clrf	plusw1,c
  3422  012562  82E3               	bsf	plusw1,1,c
  3423                           
  3424                           ;main.c: 337:     break;
  3425  012564  D043               	goto	l1363
  3426  012566                     l11532:
  3427                           
  3428                           ; BSR set to: 2
  3429                           ;main.c: 339:     i = V_BAT;
  3430                           ;stkvar	_i @ sp[(-5)+2]
  3431  012566  0EFD               	movlw	-3
  3432  012568  6AE3               	clrf	plusw1,c
  3433  01256A  84E3               	bsf	plusw1,2,c
  3434                           
  3435                           ;main.c: 340:     j = V_PV;
  3436                           ;stkvar	_j @ sp[(-5)+1]
  3437  01256C  0EFC               	movlw	-4
  3438  01256E  6AE3               	clrf	plusw1,c
  3439  012570  80E3               	bsf	plusw1,0,c
  3440  012572  84E3               	bsf	plusw1,2,c	;indir
  3441                           
  3442                           ;main.c: 341:     k = V_CBUS;
  3443                           ;stkvar	_k @ sp[(-5)+0]
  3444  012574  0EFB               	movlw	-5
  3445  012576  6AE3               	clrf	plusw1,c
  3446  012578  82E3               	bsf	plusw1,1,c
  3447  01257A  84E3               	bsf	plusw1,2,c	;indir
  3448                           
  3449                           ;main.c: 342:     break;
  3450  01257C  D037               	goto	l1363
  3451  01257E                     l11534:
  3452                           
  3453                           ; BSR set to: 2
  3454                           ;main.c: 344:     i = V_BBAT;
  3455                           ;stkvar	_i @ sp[(-5)+2]
  3456  01257E  0EFD               	movlw	-3
  3457  012580  6AE3               	clrf	plusw1,c
  3458  012582  82E3               	bsf	plusw1,1,c
  3459  012584  86E3               	bsf	plusw1,3,c	;indir
  3460                           
  3461                           ; BSR set to: 2
  3462                           ;main.c: 345:     j = V_TEMP;
  3463  012586  0E0B               	movlw	11
  3464  012588  6E0C               	movwf	(btemp+11)^0,c
  3465                           
  3466                           ;stkvar	_j @ sp[(-5)+1]
  3467  01258A  0EFC               	movlw	-4
  3468  01258C  0060  F033  FFE3   	movff	btemp+11,plusw1
  3469                           
  3470                           ; BSR set to: 2
  3471                           ;main.c: 346:     k = V_INVERTER;
  3472                           ;stkvar	_k @ sp[(-5)+0]
  3473  012592  0EFB               	movlw	-5
  3474  012594  6AE3               	clrf	plusw1,c
  3475  012596  84E3               	bsf	plusw1,2,c
  3476  012598  86E3               	bsf	plusw1,3,c	;indir
  3477                           
  3478                           ;main.c: 347:     break;
  3479  01259A  D028               	goto	l1363
  3480  01259C                     l11540:
  3481                           
  3482                           ; BSR set to: 2
  3483                           ;main.c: 349:     i = channel_ANB5;
  3484  01259C  0E0D               	movlw	13
  3485  01259E  6E0C               	movwf	(btemp+11)^0,c
  3486                           
  3487                           ;stkvar	_i @ sp[(-5)+2]
  3488  0125A0  0EFD               	movlw	-3
  3489  0125A2  0060  F033  FFE3   	movff	btemp+11,plusw1
  3490                           
  3491                           ;main.c: 350:     j = channel_ANB5;
  3492  0125A8  0E0D               	movlw	13
  3493  0125AA  6E0C               	movwf	(btemp+11)^0,c
  3494                           
  3495                           ;stkvar	_j @ sp[(-5)+1]
  3496  0125AC  0EFC               	movlw	-4
  3497  0125AE  0060  F033  FFE3   	movff	btemp+11,plusw1
  3498                           
  3499                           ;main.c: 351:     k = channel_ANB5;
  3500  0125B4  0E0D               	movlw	13
  3501  0125B6  6E0C               	movwf	(btemp+11)^0,c
  3502                           
  3503                           ;stkvar	_k @ sp[(-5)+0]
  3504  0125B8  0EFB               	movlw	-5
  3505  0125BA  0060  F033  FFE3   	movff	btemp+11,plusw1
  3506                           
  3507                           ;main.c: 352:     break;
  3508  0125C0  D015               	goto	l1363
  3509  0125C2                     l11544:
  3510                           
  3511                           ; BSR set to: 2
  3512                           ;stkvar	_inp_index @ sp[(-5)+3]
  3513  0125C2  0EFE               	movlw	-2
  3514  0125C4  50E3               	movf	plusw1,w,c
  3515  0125C6  6E0B               	movwf	(btemp+10)^0,c
  3516  0125C8  6A0C               	clrf	(btemp+11)^0,c
  3517                           
  3518                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3519                           ; Switch size 1, requested type "simple"
  3520                           ; Number of cases is 1, Range of values is 0 to 0
  3521                           ; switch strategies available:
  3522                           ; Name         Instructions Cycles
  3523                           ; simple_byte            4     3 (average)
  3524                           ;	Chosen strategy is simple_byte
  3525  0125CA  500C               	movf	(btemp+11)^0,w,c
  3526  0125CC  0A00               	xorlw	0	; case 0
  3527  0125CE  A4D8               	btfss	status,2,c
  3528  0125D0  D00D               	goto	l1363
  3529                           
  3530                           ; BSR set to: 2
  3531                           ; Switch size 1, requested type "simple"
  3532                           ; Number of cases is 4, Range of values is 0 to 9
  3533                           ; switch strategies available:
  3534                           ; Name         Instructions Cycles
  3535                           ; simple_byte           13     7 (average)
  3536                           ;	Chosen strategy is simple_byte
  3537  0125D2  500B               	movf	(btemp+10)^0,w,c
  3538  0125D4  0A00               	xorlw	0	; case 0
  3539  0125D6  B4D8               	btfsc	status,2,c
  3540  0125D8  D7BD               	goto	l11526
  3541  0125DA  0A03               	xorlw	3	; case 3
  3542  0125DC  B4D8               	btfsc	status,2,c
  3543  0125DE  D7C3               	goto	l11532
  3544  0125E0  0A05               	xorlw	5	; case 6
  3545  0125E2  B4D8               	btfsc	status,2,c
  3546  0125E4  D7CC               	goto	l11534
  3547  0125E6  0A0F               	xorlw	15	; case 9
  3548  0125E8  B4D8               	btfsc	status,2,c
  3549  0125EA  D7D8               	goto	l11540
  3550  0125EC                     l1363:
  3551                           
  3552                           ;main.c: 361:   if (V.set_sequ) {
  3553  0125EC  0102               	movlb	2	; () banked
  3554  0125EE  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  3555  0125F0  D4D8               	goto	l11460
  3556                           
  3557                           ; BSR set to: 2
  3558                           ;main.c: 362:    if (TimerDone(TMR_INFO)) {
  3559  0125F2  0E07               	movlw	7
  3560  0125F4  6EE6               	movwf	postinc1,c
  3561  0125F6  EC8B  F0C9         	call	_TimerDone	;wreg free
  3562  0125FA  5001               	movf	btemp^0,w,c
  3563  0125FC  B4D8               	btfsc	status,2,c
  3564  0125FE  D00B               	goto	l11554
  3565                           
  3566                           ;main.c: 363:     V.set_sequ = 0;
  3567  012600  0102               	movlb	2	; () banked
  3568  012602  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  3569                           
  3570                           ; BSR set to: 2
  3571                           ;main.c: 364:     set_vterm(0);
  3572  012604  0E00               	movlw	0
  3573  012606  6EE6               	movwf	postinc1,c
  3574  012608  EC8A  F0CB         	call	_set_vterm	;wreg free
  3575                           
  3576                           ;main.c: 365:     update_lcd(0);
  3577  01260C  0E00               	movlw	0
  3578  01260E  6EE6               	movwf	postinc1,c
  3579  012610  EC2F  F0BA         	call	_update_lcd	;wreg free
  3580                           
  3581                           ;main.c: 366:    } else {
  3582  012614  D4C6               	goto	l11460
  3583  012616                     l11554:
  3584                           
  3585                           ;main.c: 367:     set_vterm(2);
  3586  012616  0E02               	movlw	2
  3587  012618  6EE6               	movwf	postinc1,c
  3588  01261A  EC8A  F0CB         	call	_set_vterm	;wreg free
  3589                           
  3590                           ;main.c: 368:     update_lcd(2);
  3591  01261E  0E02               	movlw	2
  3592  012620  6EE6               	movwf	postinc1,c
  3593  012622  EC2F  F0BA         	call	_update_lcd	;wreg free
  3594  012626  D4BD               	goto	l11460
  3595  012628                     __end_of_main:
  3596                           	opt callstack 0
  3597                           
  3598 ;; *************** function _static_soc *****************
  3599 ;; Defined at:
  3600 ;;		line 84 in file "mbmc.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;		None
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;		None
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1  [STACK] void 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2
  3609 ;; Tracked objects:
  3610 ;;		On entry : 3F/39
  3611 ;;		On exit  : 3F/1
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3618 ;;Total ram usage:        0 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    7
  3621 ;; This function calls:
  3622 ;;		Nothing
  3623 ;; This function is called by:
  3624 ;;		_main
  3625 ;; This function uses a reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text1
  3629  01906C                     __ptext1:
  3630                           	opt callstack 0
  3631  01906C                     _static_soc:
  3632                           	opt callstack 23
  3633                           
  3634                           ;mbmc.c: 86:  C.static_ah = C.bank_ah;
  3635                           
  3636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3637                           ;incstack = 0
  3638  01906C  C17C  F180         	movff	_C+124,_C+128	;volatile
  3639  019070  C17D  F181         	movff	_C+125,_C+129	;volatile
  3640  019074  C17E  F182         	movff	_C+126,_C+130	;volatile
  3641  019078  C17F  F183         	movff	_C+127,_C+131	;volatile
  3642                           
  3643                           ;mbmc.c: 87:  C.runtime = 120;
  3644  01907C  0E00               	movlw	0
  3645  01907E  0101               	movlb	1	; () banked
  3646  019080  6FA1               	movwf	(_C+161)& (0+255),b	;volatile
  3647  019082  0E78               	movlw	120
  3648  019084  6FA0               	movwf	(_C+160)& (0+255),b	;volatile
  3649                           
  3650                           ;mbmc.c: 88:  C.soc = 100;
  3651  019086  0E00               	movlw	0
  3652  019088  6FA3               	movwf	(_C+163)& (0+255),b	;volatile
  3653  01908A  0E64               	movlw	100
  3654  01908C  6FA2               	movwf	(_C+162)& (0+255),b	;volatile
  3655                           
  3656                           ; BSR set to: 1
  3657                           ;mbmc.c: 89:  C.dynamic_ah = C.static_ah;
  3658  01908E  C180  F184         	movff	_C+128,_C+132	;volatile
  3659  019092  C181  F185         	movff	_C+129,_C+133	;volatile
  3660  019096  C182  F186         	movff	_C+130,_C+134	;volatile
  3661  01909A  C183  F187         	movff	_C+131,_C+135	;volatile
  3662                           
  3663                           ; BSR set to: 1
  3664                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3665  01909E  0012               	return		;funcret
  3666  0190A0                     __end_of_static_soc:
  3667                           	opt callstack 0
  3668                           
  3669 ;; *************** function _start_switch_handler *****************
  3670 ;; Defined at:
  3671 ;;		line 119 in file "dio.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1  [STACK] void 
  3678 ;; Registers used:
  3679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  3680 ;; Tracked objects:
  3681 ;;		On entry : 1/0
  3682 ;;		On exit  : 3F/39
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3689 ;;Total ram usage:        0 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    8
  3692 ;; This function calls:
  3693 ;;		_INT1_SetInterruptHandler
  3694 ;; This function is called by:
  3695 ;;		_main
  3696 ;; This function uses a reentrant model
  3697 ;;
  3698                           
  3699                           	psect	text2
  3700  0196B8                     __ptext2:
  3701                           	opt callstack 0
  3702  0196B8                     _start_switch_handler:
  3703                           	opt callstack 22
  3704                           
  3705                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  3706                           
  3707                           ; BSR set to: 1
  3708                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3709                           ;incstack = 0
  3710  0196B8  0139               	movlb	57	; () banked
  3711  0196BA  9195               	bcf	149,0,b	;volatile
  3712                           
  3713                           ; BSR set to: 57
  3714                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  3715  0196BC  0EE6               	movlw	low _switch_handler
  3716  0196BE  6EE6               	movwf	postinc1,c
  3717  0196C0  0E6F               	movlw	high _switch_handler
  3718  0196C2  6EE6               	movwf	postinc1,c
  3719  0196C4  0E01               	movlw	low (_switch_handler shr (0+16))
  3720  0196C6  6EE6               	movwf	postinc1,c
  3721  0196C8  EC2B  F0CA         	call	_INT1_SetInterruptHandler	;wreg free
  3722                           
  3723                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  3724  0196CC  0E02               	movlw	2
  3725  0196CE  0100               	movlb	0	; () banked
  3726  0196D0  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  3730  0196D2  0139               	movlb	57	; () banked
  3731  0196D4  8195               	bsf	149,0,b	;volatile
  3732                           
  3733                           ; BSR set to: 57
  3734                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  3735  0196D6  0012               	return		;funcret
  3736  0196D8                     __end_of_start_switch_handler:
  3737                           	opt callstack 0
  3738                           
  3739 ;; *************** function _start_adc_scan *****************
  3740 ;; Defined at:
  3741 ;;		line 33 in file "daq.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;		None
  3744 ;; Auto vars:     Size  Location     Type
  3745 ;;		None
  3746 ;; Return value:  Size  Location     Type
  3747 ;;                  1  [STACK] _Bool 
  3748 ;; Registers used:
  3749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  3750 ;; Tracked objects:
  3751 ;;		On entry : 0/0
  3752 ;;		On exit  : 1/0
  3753 ;;		Unchanged: 0/0
  3754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3759 ;;Total ram usage:        0 bytes
  3760 ;; Hardware stack levels used:    1
  3761 ;; Hardware stack levels required when called:    8
  3762 ;; This function calls:
  3763 ;;		_ADCC_DischargeSampleCapacitor
  3764 ;;		_ADCC_SetADIInterruptHandler
  3765 ;;		_ADCC_SetADTIInterruptHandler
  3766 ;;		_ADCC_StartConversion
  3767 ;; This function is called by:
  3768 ;;		_main
  3769 ;; This function uses a reentrant model
  3770 ;;
  3771                           
  3772                           	psect	text3
  3773  01883A                     __ptext3:
  3774                           	opt callstack 0
  3775  01883A                     _start_adc_scan:
  3776                           	opt callstack 22
  3777                           
  3778                           ;daq.c: 35:  if (R.done)
  3779                           
  3780                           ; BSR set to: 57
  3781                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3782                           ;incstack = 0
  3783  01883A  0100               	movlb	0	; () banked
  3784  01883C  51F0               	movf	(_R+39)& (0+255),w,b	;volatile
  3785  01883E  A4D8               	btfss	status,2,c
  3786  018840  0012               	return	
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;daq.c: 38:  R.scan_index = 0;
  3790  018842  6BED               	clrf	(_R+36)& (0+255),b	;volatile
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  3794  018844  013A               	movlb	58	; () banked
  3795  018846  5140               	movf	64,w,b	;volatile
  3796  018848  006E F940  F001    	movff	14928,btemp	;volatile
  3797  01884E  6A02               	clrf	(btemp+1)^0,c
  3798  018850  0060  F004  F002   	movff	btemp,btemp+1
  3799  018856  6A01               	clrf	btemp^0,c
  3800  018858  2601               	addwf	btemp^0,f,c
  3801  01885A  0E00               	movlw	0
  3802  01885C  2202               	addwfc	(btemp+1)^0,f,c
  3803  01885E  0E77               	movlw	119
  3804  018860  1401               	andwf	btemp^0,w,c
  3805  018862  0100               	movlb	0	; () banked
  3806  018864  6FEE               	movwf	(_R+37)& (0+255),b	;volatile
  3807  018866  0E3C               	movlw	60
  3808  018868  1402               	andwf	(btemp+1)^0,w,c
  3809  01886A  6FEF               	movwf	(_R+38)& (0+255),b	;volatile
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  3813  01886C  0E3E               	movlw	low _adc_int_handler
  3814  01886E  6EE6               	movwf	postinc1,c
  3815  018870  0E99               	movlw	high _adc_int_handler
  3816  018872  6EE6               	movwf	postinc1,c
  3817  018874  0E01               	movlw	low (_adc_int_handler shr (0+16))
  3818  018876  6EE6               	movwf	postinc1,c
  3819  018878  EC67  F0CA         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3820                           
  3821                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  3822  01887C  0E16               	movlw	low _adc_int_t_handler
  3823  01887E  6EE6               	movwf	postinc1,c
  3824  018880  0E86               	movlw	high _adc_int_t_handler
  3825  018882  6EE6               	movwf	postinc1,c
  3826  018884  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  3827  018886  6EE6               	movwf	postinc1,c
  3828  018888  EC53  F0CA         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  3829                           
  3830                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  3831  01888C  EC77  F0CC         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  3832                           
  3833                           ; BSR set to: 62
  3834                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  3835  018890  0100               	movlb	0	; () banked
  3836  018892  51ED               	movf	(_R+36)& (0+255),w,b	;volatile
  3837  018894  0B0F               	andlw	15
  3838  018896  6EE6               	movwf	postinc1,c
  3839  018898  EC32  F0CC         	call	_ADCC_StartConversion	;wreg free
  3840                           
  3841                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  3842  01889C  0012               	return		;funcret
  3843  01889E                     __end_of_start_adc_scan:
  3844                           	opt callstack 0
  3845                           
  3846 ;; *************** function _ADCC_StartConversion *****************
  3847 ;; Defined at:
  3848 ;;		line 128 in file "mcc_generated_files/adcc.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;  channel         1  [STACK] enum E16136
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1  [STACK] void 
  3855 ;; Registers used:
  3856 ;;		fsr1l, fsr1h
  3857 ;; Tracked objects:
  3858 ;;		On entry : 3F/0
  3859 ;;		On exit  : 3F/3E
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    7
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_start_adc_scan
  3873 ;;		_adc_int_t_handler
  3874 ;; This function uses a reentrant model
  3875 ;;
  3876                           
  3877                           	psect	text4
  3878  019864                     __ptext4:
  3879                           	opt callstack 0
  3880  019864                     _ADCC_StartConversion:
  3881                           	opt callstack 4
  3882                           
  3883                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  3884                           ;stkvar	_channel @ sp[(0)+-1]
  3885                           
  3886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3887                           ;incstack = 0
  3888  019864  0EFF               	movlw	-1
  3889  019866  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  3890                           
  3891                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  3892  01986C  013E               	movlb	62	; () banked
  3893  01986E  8FF8               	bsf	248,7,b	;volatile
  3894                           
  3895                           ; BSR set to: 62
  3896                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  3897  019870  81F8               	bsf	248,0,b	;volatile
  3898                           
  3899                           ; BSR set to: 62
  3900                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  3901  019872  52E5               	movf	postdec1,f,c
  3902  019874  0012               	return		;funcret
  3903  019876                     __end_of_ADCC_StartConversion:
  3904                           	opt callstack 0
  3905                           
  3906 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  3907 ;; Defined at:
  3908 ;;		line 189 in file "mcc_generated_files/adcc.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;		None
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;		None
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  1  [STACK] void 
  3915 ;; Registers used:
  3916 ;;		wreg, status,2
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 3F/3E
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3926 ;;Total ram usage:        0 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:    7
  3929 ;; This function calls:
  3930 ;;		Nothing
  3931 ;; This function is called by:
  3932 ;;		_start_adc_scan
  3933 ;;		_adc_int_t_handler
  3934 ;; This function uses a reentrant model
  3935 ;;
  3936                           
  3937                           	psect	text5
  3938  0198EE                     __ptext5:
  3939                           	opt callstack 0
  3940  0198EE                     _ADCC_DischargeSampleCapacitor:
  3941                           	opt callstack 4
  3942                           
  3943                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  3944                           
  3945                           ; BSR set to: 62
  3946                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3947                           ;incstack = 0
  3948  0198EE  0E3B               	movlw	59
  3949  0198F0  013E               	movlb	62	; () banked
  3950  0198F2  6FF1               	movwf	241,b	;volatile
  3951                           
  3952                           ; BSR set to: 62
  3953                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  3954  0198F4  0012               	return		;funcret
  3955  0198F6                     __end_of_ADCC_DischargeSampleCapacitor:
  3956                           	opt callstack 0
  3957                           
  3958 ;; *************** function _srand *****************
  3959 ;; Defined at:
  3960 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  3961 ;; Parameters:    Size  Location     Type
  3962 ;;  s               2  [STACK] unsigned int 
  3963 ;; Auto vars:     Size  Location     Type
  3964 ;;		None
  3965 ;; Return value:  Size  Location     Type
  3966 ;;                  1  [STACK] void 
  3967 ;; Registers used:
  3968 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3969 ;; Tracked objects:
  3970 ;;		On entry : 3F/0
  3971 ;;		On exit  : 3F/1
  3972 ;;		Unchanged: 0/0
  3973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3978 ;;Total ram usage:        0 bytes
  3979 ;; Hardware stack levels used:    1
  3980 ;; Hardware stack levels required when called:    7
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_main
  3985 ;; This function uses a reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text6
  3989  0190A0                     __ptext6:
  3990                           	opt callstack 0
  3991  0190A0                     _srand:
  3992                           	opt callstack 23
  3993                           
  3994                           ;stkvar	_s @ sp[(0)+-2]
  3995                           
  3996                           ; BSR set to: 62
  3997                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3998                           ;incstack = 0
  3999  0190A0  0EFE               	movlw	-2
  4000  0190A2  50E3               	movf	plusw1,w,c
  4001  0190A4  0FFF               	addlw	255
  4002  0190A6  6E0B               	movwf	(btemp+10)^0,c
  4003  0190A8  0EFF               	movlw	-1
  4004  0190AA  006F FF8C  F00C    	movff	plusw1,btemp+11
  4005  0190B0  0EFF               	movlw	255
  4006  0190B2  220C               	addwfc	(btemp+11)^0,f,c
  4007  0190B4  0060  F02C  F1EF   	movff	btemp+10,_seed
  4008  0190BA  0060  F030  F1F0   	movff	btemp+11,_seed+1
  4009  0190C0  0101               	movlb	1	; () banked
  4010  0190C2  6BF1               	clrf	(_seed+2)& (0+255),b
  4011  0190C4  6BF2               	clrf	(_seed+3)& (0+255),b
  4012  0190C6  6BF3               	clrf	(_seed+4)& (0+255),b
  4013  0190C8  6BF4               	clrf	(_seed+5)& (0+255),b
  4014  0190CA  6BF5               	clrf	(_seed+6)& (0+255),b
  4015  0190CC  6BF6               	clrf	(_seed+7)& (0+255),b
  4016                           
  4017                           ; BSR set to: 1
  4018                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  4019  0190CE  52E5               	movf	postdec1,f,c
  4020  0190D0  52E5               	movf	postdec1,f,c
  4021  0190D2  0012               	return		;funcret
  4022  0190D4                     __end_of_srand:
  4023                           	opt callstack 0
  4024                           
  4025 ;; *************** function _init_display *****************
  4026 ;; Defined at:
  4027 ;;		line 37 in file "eadog.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;		None
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;		None
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  1  [STACK] void 
  4034 ;; Registers used:
  4035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4036 ;; Tracked objects:
  4037 ;;		On entry : 0/2
  4038 ;;		On exit  : 3F/3D
  4039 ;;		Unchanged: 0/0
  4040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4045 ;;Total ram usage:        0 bytes
  4046 ;; Hardware stack levels used:    1
  4047 ;; Hardware stack levels required when called:    9
  4048 ;; This function calls:
  4049 ;;		_ringBufS_init
  4050 ;;		_send_lcd_cmd
  4051 ;;		_send_lcd_cmd_long
  4052 ;;		_wdtdelay
  4053 ;; This function is called by:
  4054 ;;		_main
  4055 ;; This function uses a reentrant model
  4056 ;;
  4057                           
  4058                           	psect	text7
  4059  01796A                     __ptext7:
  4060                           	opt callstack 0
  4061  01796A                     _init_display:
  4062                           	opt callstack 21
  4063                           
  4064                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  4065                           
  4066                           ; BSR set to: 1
  4067                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4068                           ;incstack = 0
  4069  01796A  0E83               	movlw	low _ring_buf1
  4070  01796C  0100               	movlb	0	; () banked
  4071  01796E  6F8F               	movwf	(_spi_link+6)& (0+255),b	;volatile
  4072  017970  0E04               	movlw	high _ring_buf1
  4073  017972  6F90               	movwf	(_spi_link+7)& (0+255),b	;volatile
  4074                           
  4075                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  4076  017974  0E40               	movlw	low _ring_buf2
  4077  017976  6F8D               	movwf	(_spi_link+4)& (0+255),b	;volatile
  4078  017978  0E04               	movlw	high _ring_buf2
  4079  01797A  6F8E               	movwf	(_spi_link+5)& (0+255),b	;volatile
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  4083  01797C  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  4084  017982  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  4085  017988  EC63  F0C9         	call	_ringBufS_init	;wreg free
  4086                           
  4087                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  4088  01798C  0060  F237  FFE6   	movff	_spi_link+4,postinc1
  4089  017992  0060  F23B  FFE6   	movff	_spi_link+5,postinc1
  4090  017998  EC63  F0C9         	call	_ringBufS_init	;wreg free
  4091                           
  4092                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  4093  01799C  84BE               	bsf	190,2,c	;volatile
  4094  01799E  84BC               	bsf	188,2,c	;volatile
  4095                           
  4096                           ;eadog.c: 58:  wdtdelay(350000);
  4097  0179A0  0E30               	movlw	48
  4098  0179A2  6EE6               	movwf	postinc1,c
  4099  0179A4  0E57               	movlw	87
  4100  0179A6  6EE6               	movwf	postinc1,c
  4101  0179A8  0E05               	movlw	5
  4102  0179AA  6EE6               	movwf	postinc1,c
  4103  0179AC  0E00               	movlw	0
  4104  0179AE  6EE6               	movwf	postinc1,c
  4105  0179B0  EC12  F0C5         	call	_wdtdelay	;wreg free
  4106                           
  4107                           ; BSR set to: 0
  4108                           ;eadog.c: 59:  send_lcd_cmd(0x39);
  4109  0179B4  0E39               	movlw	57
  4110  0179B6  6EE6               	movwf	postinc1,c
  4111  0179B8  EC4F  F0C9         	call	_send_lcd_cmd	;wreg free
  4112                           
  4113                           ; BSR set to: 0
  4114                           ;eadog.c: 60:  send_lcd_cmd(0x1d);
  4115  0179BC  0E1D               	movlw	29
  4116  0179BE  6EE6               	movwf	postinc1,c
  4117  0179C0  EC4F  F0C9         	call	_send_lcd_cmd	;wreg free
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;eadog.c: 61:  send_lcd_cmd(0x50);
  4121  0179C4  0E50               	movlw	80
  4122  0179C6  6EE6               	movwf	postinc1,c
  4123  0179C8  EC4F  F0C9         	call	_send_lcd_cmd	;wreg free
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;eadog.c: 62:  send_lcd_cmd(0x6c);
  4127  0179CC  0E6C               	movlw	108
  4128  0179CE  6EE6               	movwf	postinc1,c
  4129  0179D0  EC4F  F0C9         	call	_send_lcd_cmd	;wreg free
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;eadog.c: 63:  send_lcd_cmd(0x76);
  4133  0179D4  0E76               	movlw	118
  4134  0179D6  6EE6               	movwf	postinc1,c
  4135  0179D8  EC4F  F0C9         	call	_send_lcd_cmd	;wreg free
  4136                           
  4137                           ; BSR set to: 0
  4138                           ;eadog.c: 64:  send_lcd_cmd_long(0x38);
  4139  0179DC  0E38               	movlw	56
  4140  0179DE  6EE6               	movwf	postinc1,c
  4141  0179E0  EC3B  F0C9         	call	_send_lcd_cmd_long	;wreg free
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;eadog.c: 65:  send_lcd_cmd(0x0f);
  4145  0179E4  0E0F               	movlw	15
  4146  0179E6  6EE6               	movwf	postinc1,c
  4147  0179E8  EC4F  F0C9         	call	_send_lcd_cmd	;wreg free
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;eadog.c: 66:  send_lcd_cmd_long(0x01);
  4151  0179EC  0E01               	movlw	1
  4152  0179EE  6EE6               	movwf	postinc1,c
  4153  0179F0  EC3B  F0C9         	call	_send_lcd_cmd_long	;wreg free
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;eadog.c: 67:  send_lcd_cmd(0x02);
  4157  0179F4  0E02               	movlw	2
  4158  0179F6  6EE6               	movwf	postinc1,c
  4159  0179F8  EC4F  F0C9         	call	_send_lcd_cmd	;wreg free
  4160                           
  4161                           ; BSR set to: 0
  4162                           ;eadog.c: 68:  send_lcd_cmd(0x06);
  4163  0179FC  0E06               	movlw	6
  4164  0179FE  6EE6               	movwf	postinc1,c
  4165  017A00  EC4F  F0C9         	call	_send_lcd_cmd	;wreg free
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;eadog.c: 69:  wdtdelay(30);
  4169  017A04  0E1E               	movlw	30
  4170  017A06  6EE6               	movwf	postinc1,c
  4171  017A08  0E00               	movlw	0
  4172  017A0A  6EE6               	movwf	postinc1,c
  4173  017A0C  0E00               	movlw	0
  4174  017A0E  6EE6               	movwf	postinc1,c
  4175  017A10  0E00               	movlw	0
  4176  017A12  6EE6               	movwf	postinc1,c
  4177  017A14  EC12  F0C5         	call	_wdtdelay	;wreg free
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;eadog.c: 70:  SPI1CON2 = 0x02;
  4181  017A18  0E02               	movlw	2
  4182  017A1A  013D               	movlb	61	; () banked
  4183  017A1C  6F16               	movwf	22,b	;volatile
  4184                           
  4185                           ; BSR set to: 61
  4186                           ;eadog.c: 71:  SPI1CON1 = 0x40;
  4187  017A1E  0E40               	movlw	64
  4188  017A20  6F15               	movwf	21,b	;volatile
  4189                           
  4190                           ; BSR set to: 61
  4191                           ;eadog.c: 72:  SPI1CON0 = 0x83;
  4192  017A22  0E83               	movlw	131
  4193  017A24  6F14               	movwf	20,b	;volatile
  4194                           
  4195                           ; BSR set to: 61
  4196                           ;eadog.c: 74:  SPI1INTFbits.SPI1TXUIF = 0;
  4197  017A26  931A               	bcf	26,1,b	;volatile
  4198                           
  4199                           ; BSR set to: 61
  4200                           ;eadog.c: 75:  DMA1CON1bits.DMODE = 0;
  4201  017A28  0E3F               	movlw	-193
  4202  017A2A  013B               	movlb	59	; () banked
  4203  017A2C  17FD               	andwf	253,f,b	;volatile
  4204                           
  4205                           ; BSR set to: 59
  4206                           ;eadog.c: 76:  DMA1CON1bits.DSTP = 0;
  4207  017A2E  9BFD               	bcf	253,5,b	;volatile
  4208                           
  4209                           ; BSR set to: 59
  4210                           ;eadog.c: 77:  DMA1CON1bits.SMODE = 1;
  4211  017A30  51FD               	movf	253,w,b	;volatile
  4212  017A32  0BF9               	andlw	-7
  4213  017A34  0902               	iorlw	2
  4214  017A36  6FFD               	movwf	253,b	;volatile
  4215                           
  4216                           ; BSR set to: 59
  4217                           ;eadog.c: 78:  DMA1CON1bits.SMR = 0;
  4218  017A38  0EE7               	movlw	-25
  4219  017A3A  17FD               	andwf	253,f,b	;volatile
  4220                           
  4221                           ; BSR set to: 59
  4222                           ;eadog.c: 79:  DMA1CON1bits.SSTP = 1;
  4223  017A3C  81FD               	bsf	253,0,b	;volatile
  4224                           
  4225                           ; BSR set to: 59
  4226                           ;eadog.c: 80:  DMA1SSA = (uint32_t) & ring_buf1;
  4227  017A3E  0E83               	movlw	low _ring_buf1
  4228  017A40  6FF9               	movwf	249,b	;volatile
  4229  017A42  0E04               	movlw	high _ring_buf1
  4230  017A44  6FFA               	movwf	250,b	;volatile
  4231  017A46  0E00               	movlw	low (_ring_buf1 shr (0+16))
  4232  017A48  6FFB               	movwf	251,b	;volatile
  4233                           
  4234                           ; BSR set to: 59
  4235                           ;eadog.c: 81:  DMA1CON0bits.DGO = 0;
  4236  017A4A  9BFC               	bcf	252,5,b	;volatile
  4237                           
  4238                           ; BSR set to: 59
  4239                           ;eadog.c: 82:  SPI1INTFbits.SPI1TXUIF = 1;
  4240  017A4C  013D               	movlb	61	; () banked
  4241  017A4E  831A               	bsf	26,1,b	;volatile
  4242                           
  4243                           ; BSR set to: 61
  4244                           ;eadog.c: 83:  LATEbits.LATE2 = 0;
  4245  017A50  94BE               	bcf	190,2,c	;volatile
  4246                           
  4247                           ; BSR set to: 61
  4248                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4249  017A52  0012               	return		;funcret
  4250  017A54                     __end_of_init_display:
  4251                           	opt callstack 0
  4252                           
  4253 ;; *************** function _send_lcd_cmd_long *****************
  4254 ;; Defined at:
  4255 ;;		line 127 in file "eadog.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;  cmd             1  [STACK] const unsigned char 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;		None
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1  [STACK] void 
  4262 ;; Registers used:
  4263 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4264 ;; Tracked objects:
  4265 ;;		On entry : 3F/0
  4266 ;;		On exit  : 3F/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4273 ;;Total ram usage:        0 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    8
  4276 ;; This function calls:
  4277 ;;		_SPI1_Exchange8bit
  4278 ;;		_wdtdelay
  4279 ;; This function is called by:
  4280 ;;		_init_display
  4281 ;; This function uses a reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text8
  4285  019276                     __ptext8:
  4286                           	opt callstack 0
  4287  019276                     _send_lcd_cmd_long:
  4288                           	opt callstack 21
  4289                           
  4290                           ; BSR set to: 61
  4291                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4292                           ;incstack = 0
  4293                           ;eadog.c: 127: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 128: {;eadog.c:
      +                           129:  do { LATCbits.LATC1 = 0; } while(0);
  4294  019276  92BC               	bcf	188,1,c	;volatile
  4295                           
  4296                           ;eadog.c: 130:  do { LATCbits.LATC2 = 0; } while(0);
  4297  019278  94BC               	bcf	188,2,c	;volatile
  4298                           
  4299                           ;eadog.c: 131:  SPI1_Exchange8bit(cmd);
  4300                           ;stkvar	_cmd @ sp[(0)+-1]
  4301  01927A  0EFF               	movlw	-1
  4302  01927C  50E3               	movf	plusw1,w,c
  4303  01927E  6EE6               	movwf	postinc1,c
  4304  019280  EC6C  F0CB         	call	_SPI1_Exchange8bit	;wreg free
  4305                           
  4306                           ; BSR set to: 57
  4307                           ;eadog.c: 132:  wdtdelay(800);
  4308  019284  0E20               	movlw	32
  4309  019286  6EE6               	movwf	postinc1,c
  4310  019288  0E03               	movlw	3
  4311  01928A  6EE6               	movwf	postinc1,c
  4312  01928C  0E00               	movlw	0
  4313  01928E  6EE6               	movwf	postinc1,c
  4314  019290  0E00               	movlw	0
  4315  019292  6EE6               	movwf	postinc1,c
  4316  019294  EC12  F0C5         	call	_wdtdelay	;wreg free
  4317                           
  4318                           ; BSR set to: 0
  4319  019298  82BC               	bsf	188,1,c	;volatile
  4320                           
  4321                           ; BSR set to: 0
  4322                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4323  01929A  52E5               	movf	postdec1,f,c
  4324  01929C  0012               	return		;funcret
  4325  01929E                     __end_of_send_lcd_cmd_long:
  4326                           	opt callstack 0
  4327                           
  4328 ;; *************** function _send_lcd_cmd *****************
  4329 ;; Defined at:
  4330 ;;		line 115 in file "eadog.c"
  4331 ;; Parameters:    Size  Location     Type
  4332 ;;  cmd             1  [STACK] const unsigned char 
  4333 ;; Auto vars:     Size  Location     Type
  4334 ;;		None
  4335 ;; Return value:  Size  Location     Type
  4336 ;;                  1  [STACK] void 
  4337 ;; Registers used:
  4338 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4339 ;; Tracked objects:
  4340 ;;		On entry : 3F/0
  4341 ;;		On exit  : 3F/0
  4342 ;;		Unchanged: 0/0
  4343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4348 ;;Total ram usage:        0 bytes
  4349 ;; Hardware stack levels used:    1
  4350 ;; Hardware stack levels required when called:    8
  4351 ;; This function calls:
  4352 ;;		_SPI1_Exchange8bit
  4353 ;;		_wdtdelay
  4354 ;; This function is called by:
  4355 ;;		_init_display
  4356 ;; This function uses a reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text9
  4360  01929E                     __ptext9:
  4361                           	opt callstack 0
  4362  01929E                     _send_lcd_cmd:
  4363                           	opt callstack 21
  4364                           
  4365                           ; BSR set to: 0
  4366                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4367                           ;incstack = 0
  4368                           ;eadog.c: 115: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 116: {;eadog.c: 117:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  4369  01929E  92BC               	bcf	188,1,c	;volatile
  4370                           
  4371                           ;eadog.c: 118:  do { LATCbits.LATC2 = 0; } while(0);
  4372  0192A0  94BC               	bcf	188,2,c	;volatile
  4373                           
  4374                           ;eadog.c: 119:  SPI1_Exchange8bit(cmd);
  4375                           ;stkvar	_cmd @ sp[(0)+-1]
  4376  0192A2  0EFF               	movlw	-1
  4377  0192A4  50E3               	movf	plusw1,w,c
  4378  0192A6  6EE6               	movwf	postinc1,c
  4379  0192A8  EC6C  F0CB         	call	_SPI1_Exchange8bit	;wreg free
  4380                           
  4381                           ; BSR set to: 57
  4382                           ;eadog.c: 120:  wdtdelay(30);
  4383  0192AC  0E1E               	movlw	30
  4384  0192AE  6EE6               	movwf	postinc1,c
  4385  0192B0  0E00               	movlw	0
  4386  0192B2  6EE6               	movwf	postinc1,c
  4387  0192B4  0E00               	movlw	0
  4388  0192B6  6EE6               	movwf	postinc1,c
  4389  0192B8  0E00               	movlw	0
  4390  0192BA  6EE6               	movwf	postinc1,c
  4391  0192BC  EC12  F0C5         	call	_wdtdelay	;wreg free
  4392                           
  4393                           ; BSR set to: 0
  4394  0192C0  82BC               	bsf	188,1,c	;volatile
  4395                           
  4396                           ; BSR set to: 0
  4397                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  4398  0192C2  52E5               	movf	postdec1,f,c
  4399  0192C4  0012               	return		;funcret
  4400  0192C6                     __end_of_send_lcd_cmd:
  4401                           	opt callstack 0
  4402                           
  4403 ;; *************** function _SPI1_Exchange8bit *****************
  4404 ;; Defined at:
  4405 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  data            1  [STACK] unsigned char 
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;		None
  4410 ;; Return value:  Size  Location     Type
  4411 ;;                  1  [STACK] unsigned char 
  4412 ;; Registers used:
  4413 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  4414 ;; Tracked objects:
  4415 ;;		On entry : 0/0
  4416 ;;		On exit  : 3F/39
  4417 ;;		Unchanged: 0/0
  4418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4423 ;;Total ram usage:        0 bytes
  4424 ;; Hardware stack levels used:    1
  4425 ;; Hardware stack levels required when called:    7
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		_send_lcd_cmd
  4430 ;;		_send_lcd_cmd_long
  4431 ;; This function uses a reentrant model
  4432 ;;
  4433                           
  4434                           	psect	text10
  4435  0196D8                     __ptext10:
  4436                           	opt callstack 0
  4437  0196D8                     _SPI1_Exchange8bit:
  4438                           	opt callstack 21
  4439                           
  4440                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4441                           
  4442                           ; BSR set to: 0
  4443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4444                           ;incstack = 0
  4445  0196D8  0E01               	movlw	1
  4446  0196DA  013D               	movlb	61	; () banked
  4447  0196DC  6F12               	movwf	18,b	;volatile
  4448                           
  4449                           ; BSR set to: 61
  4450                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4451                           ;stkvar	_data @ sp[(0)+-1]
  4452  0196DE  0EFF               	movlw	-1
  4453  0196E0  006F FF8F FD11     	movff	plusw1,15633	;volatile
  4454  0196E6                     l837:
  4455                           
  4456                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4457  0196E6  0139               	movlb	57	; () banked
  4458  0196E8  A9A2               	btfss	162,4,b	;volatile
  4459  0196EA  D7FD               	goto	l837
  4460                           
  4461                           ; BSR set to: 57
  4462                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4463  0196EC  006F F440  F001    	movff	15632,btemp	;volatile
  4464                           
  4465                           ; BSR set to: 57
  4466                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4467  0196F2  52E5               	movf	postdec1,f,c
  4468  0196F4  0012               	return		;funcret
  4469  0196F6                     __end_of_SPI1_Exchange8bit:
  4470                           	opt callstack 0
  4471                           
  4472 ;; *************** function _ringBufS_init *****************
  4473 ;; Defined at:
  4474 ;;		line 22 in file "ringbufs.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  _this           2  [STACK] PTR volatile struct ring
  4477 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;		None
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1  [STACK] void 
  4482 ;; Registers used:
  4483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4493 ;;Total ram usage:        0 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    8
  4496 ;; This function calls:
  4497 ;;		_memset
  4498 ;; This function is called by:
  4499 ;;		_init_display
  4500 ;; This function uses a reentrant model
  4501 ;;
  4502                           
  4503                           	psect	text11
  4504  0192C6                     __ptext11:
  4505                           	opt callstack 0
  4506  0192C6                     _ringBufS_init:
  4507                           	opt callstack 21
  4508                           
  4509                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  4510                           
  4511                           ; BSR set to: 57
  4512                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4513                           ;incstack = 0
  4514  0192C6  0E43               	movlw	67
  4515  0192C8  6EE6               	movwf	postinc1,c
  4516  0192CA  0E00               	movlw	0
  4517  0192CC  6EE6               	movwf	postinc1,c
  4518  0192CE  0E00               	movlw	0
  4519  0192D0  6EE6               	movwf	postinc1,c
  4520  0192D2  0E00               	movlw	0
  4521  0192D4  6EE6               	movwf	postinc1,c
  4522                           
  4523                           ;stkvar	__this @ sp[(-4)+-2]
  4524  0192D6  0EFA               	movlw	-6
  4525  0192D8  006F FF8F FFE6     	movff	plusw1,postinc1
  4526  0192DE  006F FF8F FFE6     	movff	plusw1,postinc1
  4527  0192E4  ECD5  F0A8         	call	_memset	;wreg free
  4528                           
  4529                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4530  0192E8  52E5               	movf	postdec1,f,c
  4531  0192EA  52E5               	movf	postdec1,f,c
  4532  0192EC  0012               	return		;funcret
  4533  0192EE                     __end_of_ringBufS_init:
  4534                           	opt callstack 0
  4535                           
  4536 ;; *************** function _init_bsoc *****************
  4537 ;; Defined at:
  4538 ;;		line 76 in file "bsoc.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;		None
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;		None
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1  [STACK] void 
  4545 ;; Registers used:
  4546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  4547 ;; Tracked objects:
  4548 ;;		On entry : 3F/1
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4556 ;;Total ram usage:        0 bytes
  4557 ;; Hardware stack levels used:    1
  4558 ;; Hardware stack levels required when called:    8
  4559 ;; This function calls:
  4560 ;;		_TMR3_SetInterruptHandler
  4561 ;;		_Volts_to_SOC
  4562 ;;		___flmul
  4563 ;;		___fltol
  4564 ;;		___xxtofl
  4565 ;; This function is called by:
  4566 ;;		_main
  4567 ;; This function uses a reentrant model
  4568 ;;
  4569                           
  4570                           	psect	text12
  4571  017D90                     __ptext12:
  4572                           	opt callstack 0
  4573  017D90                     _init_bsoc:
  4574                           	opt callstack 22
  4575                           
  4576                           ;bsoc.c: 78:  C.soc = Volts_to_SOC((uint32_t) C.v_bat * 1000.0);
  4577                           
  4578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4579                           ;incstack = 0
  4580  017D90  0E00               	movlw	0
  4581  017D92  6EE6               	movwf	postinc1,c
  4582  017D94  0E00               	movlw	0
  4583  017D96  6EE6               	movwf	postinc1,c
  4584  017D98  0E7A               	movlw	122
  4585  017D9A  6EE6               	movwf	postinc1,c
  4586  017D9C  0E44               	movlw	68
  4587  017D9E  6EE6               	movwf	postinc1,c
  4588  017DA0  0060  F553  FFE6   	movff	_C+84,postinc1
  4589  017DA6  0060  F557  FFE6   	movff	_C+85,postinc1
  4590  017DAC  0060  F55B  FFE6   	movff	_C+86,postinc1
  4591  017DB2  0060  F55F  FFE6   	movff	_C+87,postinc1
  4592  017DB8  EC4B  F0B5         	call	___fltol	;wreg free
  4593  017DBC  0060  F007  FFE6   	movff	btemp,postinc1
  4594  017DC2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4595  017DC8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4596  017DCE  0060  F013  FFE6   	movff	btemp+3,postinc1
  4597  017DD4  0E00               	movlw	0
  4598  017DD6  6EE6               	movwf	postinc1,c
  4599  017DD8  ECBA  F0B1         	call	___xxtofl	;wreg free
  4600  017DDC  0060  F007  FFE6   	movff	btemp,postinc1
  4601  017DE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4602  017DE8  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4603  017DEE  0060  F013  FFE6   	movff	btemp+3,postinc1
  4604  017DF4  EC14  F093         	call	___flmul	;wreg free
  4605  017DF8  0060  F007  FFE6   	movff	btemp,postinc1
  4606  017DFE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4607  017E04  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4608  017E0A  0060  F013  FFE6   	movff	btemp+3,postinc1
  4609  017E10  EC4B  F0B5         	call	___fltol	;wreg free
  4610  017E14  0060  F007  FFE6   	movff	btemp,postinc1
  4611  017E1A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  4612  017E20  0060  F00F  FFE6   	movff	btemp+2,postinc1
  4613  017E26  0060  F013  FFE6   	movff	btemp+3,postinc1
  4614  017E2C  EC1E  F0C1         	call	_Volts_to_SOC	;wreg free
  4615  017E30  0060  F004  F1A2   	movff	btemp,_C+162	;volatile
  4616  017E36  0060  F008  F1A3   	movff	btemp+1,_C+163	;volatile
  4617                           
  4618                           ;bsoc.c: 79:  TMR3_SetInterruptHandler(calc_bsoc);
  4619  017E3C  0E0E               	movlw	low _calc_bsoc
  4620  017E3E  6EE6               	movwf	postinc1,c
  4621  017E40  0E36               	movlw	high _calc_bsoc
  4622  017E42  6EE6               	movwf	postinc1,c
  4623  017E44  0E01               	movlw	low (_calc_bsoc shr (0+16))
  4624  017E46  6EE6               	movwf	postinc1,c
  4625  017E48  EC17  F0CA         	call	_TMR3_SetInterruptHandler	;wreg free
  4626                           
  4627                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4628  017E4C  0012               	return		;funcret
  4629  017E4E                     __end_of_init_bsoc:
  4630                           	opt callstack 0
  4631                           
  4632 ;; *************** function _Volts_to_SOC *****************
  4633 ;; Defined at:
  4634 ;;		line 136 in file "bsoc.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  cvoltage        4  [STACK] unsigned long 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;		None
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  2  [STACK] unsigned short 
  4641 ;; Registers used:
  4642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/1
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4652 ;;Total ram usage:        0 bytes
  4653 ;; Hardware stack levels used:    1
  4654 ;; Hardware stack levels required when called:    7
  4655 ;; This function calls:
  4656 ;;		Nothing
  4657 ;; This function is called by:
  4658 ;;		_calc_bsoc
  4659 ;;		_init_bsoc
  4660 ;; This function uses a reentrant model
  4661 ;;
  4662                           
  4663                           	psect	text13
  4664  01823C                     __ptext13:
  4665                           	opt callstack 0
  4666  01823C                     _Volts_to_SOC:
  4667                           	opt callstack 7
  4668                           
  4669                           ;bsoc.c: 136: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 137: {;bsoc.c: 138:  stat
      +                          ic uint8_t slot;;bsoc.c: 140:  C.soc = 0;
  4670                           
  4671                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4672                           ;incstack = 0
  4673  01823C  0101               	movlb	1	; () banked
  4674  01823E  6BA2               	clrf	(_C+162)& (0+255),b	;volatile
  4675  018240  6BA3               	clrf	(_C+163)& (0+255),b	;volatile
  4676                           
  4677                           ;bsoc.c: 141:  for (slot = 0; slot < 26; slot++) {
  4678  018242  6A32               	clrf	Volts_to_SOC@slot^0,c
  4679  018244                     l8194:
  4680  018244  0E19               	movlw	25
  4681  018246  6432               	cpfsgt	Volts_to_SOC@slot^0,c
  4682  018248  D001               	goto	l8198
  4683  01824A  D036               	goto	l8206
  4684  01824C                     l8198:
  4685                           
  4686                           ;bsoc.c: 142:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  4687                           ;stkvar	_cvoltage @ sp[(0)+-4]
  4688  01824C  5032               	movf	Volts_to_SOC@slot^0,w,c
  4689  01824E  0D08               	mullw	8
  4690  018250  0ECD               	movlw	low _BVSOC_TABLE
  4691  018252  24F3               	addwf	243,w,c
  4692  018254  6EF6               	movwf	tblptrl,c
  4693  018256  0EFC               	movlw	high _BVSOC_TABLE
  4694  018258  20F4               	addwfc	244,w,c
  4695  01825A  6EF7               	movwf	tblptrh,c
  4696  01825C                     	if	1	;There are 3 active tblptr bytes
  4697  01825C  6AF8               	clrf	tblptru,c
  4698  01825E  0E00               	movlw	low (__mediumconst shr (0+16))
  4699  018260  22F8               	addwfc	tblptru,f,c
  4700  018262                     	endif
  4701  018262  0EFC               	movlw	-4
  4702  018264  50E3               	movf	plusw1,w,c
  4703  018266  0009               	tblrd		*+
  4704  018268  5CF5               	subwf	tablat,w,c
  4705  01826A  0EFD               	movlw	-3
  4706  01826C  50E3               	movf	plusw1,w,c
  4707  01826E  0009               	tblrd		*+
  4708  018270  58F5               	subwfb	tablat,w,c
  4709  018272  0EFE               	movlw	-2
  4710  018274  50E3               	movf	plusw1,w,c
  4711  018276  0009               	tblrd		*+
  4712  018278  58F5               	subwfb	tablat,w,c
  4713  01827A  0EFF               	movlw	-1
  4714  01827C  50E3               	movf	plusw1,w,c
  4715  01827E  0009               	tblrd		*+
  4716  018280  58F5               	subwfb	tablat,w,c
  4717  018282  B0D8               	btfsc	status,0,c
  4718  018284  D017               	goto	l8202
  4719                           
  4720                           ;bsoc.c: 143:    C.soc = BVSOC_TABLE[slot][1];
  4721  018286  5032               	movf	Volts_to_SOC@slot^0,w,c
  4722  018288  0D08               	mullw	8
  4723  01828A  0E04               	movlw	4
  4724  01828C  26F3               	addwf	243,f,c
  4725  01828E  0E00               	movlw	0
  4726  018290  22F4               	addwfc	244,f,c
  4727  018292  0ECD               	movlw	low _BVSOC_TABLE
  4728  018294  24F3               	addwf	243,w,c
  4729  018296  6EF6               	movwf	tblptrl,c
  4730  018298  0EFC               	movlw	high _BVSOC_TABLE
  4731  01829A  20F4               	addwfc	244,w,c
  4732  01829C  6EF7               	movwf	tblptrh,c
  4733  01829E                     	if	1	;There are 3 active tblptr bytes
  4734  01829E  6AF8               	clrf	tblptru,c
  4735  0182A0  0E00               	movlw	low (__mediumconst shr (0+16))
  4736  0182A2  22F8               	addwfc	tblptru,f,c
  4737  0182A4                     	endif
  4738  0182A4  0009               	tblrd		*+
  4739  0182A6  006F FFD4  F1A2    	movff	tablat,_C+162	;volatile
  4740  0182AC  000A               	tblrd		*-
  4741  0182AE  006F FFD4  F1A3    	movff	tablat,_C+163	;volatile
  4742  0182B4                     l8202:
  4743                           
  4744                           ;bsoc.c: 145:  }
  4745  0182B4  2A32               	incf	Volts_to_SOC@slot^0,f,c
  4746  0182B6  D7C6               	goto	l8194
  4747  0182B8                     l8206:
  4748                           
  4749                           ;bsoc.c: 147:  return C.soc;
  4750  0182B8  EE20  F1A2         	lfsr	2,_C+162	;volatile
  4751  0182BC  006F FF78  F001    	movff	postinc2,btemp
  4752  0182C2  006F FF74  F002    	movff	postdec2,btemp+1
  4753                           
  4754                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  4755  0182C8  52E5               	movf	postdec1,f,c
  4756  0182CA  52E5               	movf	postdec1,f,c
  4757  0182CC  52E5               	movf	postdec1,f,c
  4758  0182CE  52E5               	movf	postdec1,f,c
  4759  0182D0  0012               	return		;funcret
  4760  0182D2                     __end_of_Volts_to_SOC:
  4761                           	opt callstack 0
  4762                           
  4763 ;; *************** function _hid_display *****************
  4764 ;; Defined at:
  4765 ;;		line 17 in file "hid.c"
  4766 ;; Parameters:    Size  Location     Type
  4767 ;;  h               1  [STACK] PTR struct H_data
  4768 ;;		 -> H(7), 
  4769 ;; Auto vars:     Size  Location     Type
  4770 ;;		None
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  1  [STACK] PTR struct H_data
  4773 ;; Registers used:
  4774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  4775 ;; Tracked objects:
  4776 ;;		On entry : 3F/1
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4784 ;;Total ram usage:        0 bytes
  4785 ;; Hardware stack levels used:    1
  4786 ;; Hardware stack levels required when called:    9
  4787 ;; This function calls:
  4788 ;;		_hid_input
  4789 ;; This function is called by:
  4790 ;;		_main
  4791 ;; This function uses a reentrant model
  4792 ;;
  4793                           
  4794                           	psect	text14
  4795  017678                     __ptext14:
  4796                           	opt callstack 0
  4797  017678                     _hid_display:
  4798                           	opt callstack 21
  4799                           
  4800                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  4801                           ;stkvar	_h @ sp[(0)+-1]
  4802                           
  4803                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4804                           ;incstack = 0
  4805  017678  0EFF               	movlw	-1
  4806  01767A  50E3               	movf	plusw1,w,c
  4807  01767C  6EE6               	movwf	postinc1,c
  4808  01767E  ECFB  F0C1         	call	_hid_input	;wreg free
  4809                           
  4810                           ;hid.c: 21:  switch (h->h_state) {
  4811  017682  D066               	goto	l9826
  4812  017684                     l9804:
  4813                           
  4814                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  4815                           ;stkvar	_h @ sp[(0)+-1]
  4816  017684  0EFF               	movlw	-1
  4817  017686  50E3               	movf	plusw1,w,c
  4818  017688  6ED9               	movwf	fsr2l,c
  4819  01768A  6ADA               	clrf	fsr2h,c
  4820  01768C  0E01               	movlw	1
  4821  01768E  26D9               	addwf	fsr2l,f,c
  4822  017690  0E01               	movlw	1
  4823  017692  6EDF               	movwf	indf2,c
  4824                           
  4825                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  4826                           ;stkvar	_h @ sp[(0)+-1]
  4827  017694  0EFF               	movlw	-1
  4828  017696  50E3               	movf	plusw1,w,c
  4829  017698  6ED9               	movwf	fsr2l,c
  4830  01769A  6ADA               	clrf	fsr2h,c
  4831  01769C  0E00               	movlw	0
  4832  01769E  6EDF               	movwf	indf2,c
  4833                           
  4834                           ;hid.c: 25:   h->wait_enter = 1;
  4835                           ;stkvar	_h @ sp[(0)+-1]
  4836  0176A0  0EFF               	movlw	-1
  4837  0176A2  50E3               	movf	plusw1,w,c
  4838  0176A4  6ED9               	movwf	fsr2l,c
  4839  0176A6  6ADA               	clrf	fsr2h,c
  4840  0176A8  0E04               	movlw	4
  4841  0176AA  26D9               	addwf	fsr2l,f,c
  4842  0176AC  0E01               	movlw	1
  4843  0176AE  6EDF               	movwf	indf2,c
  4844                           
  4845                           ;hid.c: 26:   h->wait_select = 1;
  4846                           ;stkvar	_h @ sp[(0)+-1]
  4847  0176B0  0EFF               	movlw	-1
  4848  0176B2  50E3               	movf	plusw1,w,c
  4849  0176B4  6ED9               	movwf	fsr2l,c
  4850  0176B6  6ADA               	clrf	fsr2h,c
  4851  0176B8  0E02               	movlw	2
  4852  0176BA  26D9               	addwf	fsr2l,f,c
  4853  0176BC  0E01               	movlw	1
  4854  0176BE  6EDF               	movwf	indf2,c
  4855                           
  4856                           ;hid.c: 27:   h->select_p = SW_OFF;
  4857                           ;stkvar	_h @ sp[(0)+-1]
  4858  0176C0  0EFF               	movlw	-1
  4859  0176C2  50E3               	movf	plusw1,w,c
  4860  0176C4  6ED9               	movwf	fsr2l,c
  4861  0176C6  6ADA               	clrf	fsr2h,c
  4862  0176C8  0E03               	movlw	3
  4863  0176CA  26D9               	addwf	fsr2l,f,c
  4864  0176CC  0E00               	movlw	0
  4865  0176CE  6EDF               	movwf	indf2,c
  4866                           
  4867                           ;hid.c: 28:   h->enter_p = SW_OFF;
  4868                           ;stkvar	_h @ sp[(0)+-1]
  4869  0176D0  0EFF               	movlw	-1
  4870  0176D2  50E3               	movf	plusw1,w,c
  4871  0176D4  6ED9               	movwf	fsr2l,c
  4872  0176D6  6ADA               	clrf	fsr2h,c
  4873  0176D8  0E05               	movlw	5
  4874  0176DA  26D9               	addwf	fsr2l,f,c
  4875  0176DC  0E00               	movlw	0
  4876  0176DE  D036               	goto	L1
  4877  0176E0                     l9816:
  4878                           
  4879                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  4880                           ;stkvar	_h @ sp[(0)+-1]
  4881  0176E0  0EFF               	movlw	-1
  4882  0176E2  50E3               	movf	plusw1,w,c
  4883  0176E4  6ED9               	movwf	fsr2l,c
  4884  0176E6  6ADA               	clrf	fsr2h,c
  4885  0176E8  0E02               	movlw	2
  4886  0176EA  26D9               	addwf	fsr2l,f,c
  4887  0176EC  50DF               	movf	indf2,w,c
  4888  0176EE  A4D8               	btfss	status,2,c
  4889  0176F0  D042               	goto	l1894
  4890                           
  4891                           ;stkvar	_h @ sp[(0)+-1]
  4892  0176F2  0EFF               	movlw	-1
  4893  0176F4  50E3               	movf	plusw1,w,c
  4894  0176F6  6ED9               	movwf	fsr2l,c
  4895  0176F8  6ADA               	clrf	fsr2h,c
  4896  0176FA  0E03               	movlw	3
  4897  0176FC  26D9               	addwf	fsr2l,f,c
  4898  0176FE  50DF               	movf	indf2,w,c
  4899  017700  A4D8               	btfss	status,2,c
  4900  017702  D039               	goto	l1894
  4901                           
  4902                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  4903                           ;stkvar	_h @ sp[(0)+-1]
  4904  017704  0EFF               	movlw	-1
  4905  017706  50E3               	movf	plusw1,w,c
  4906  017708  6ED9               	movwf	fsr2l,c
  4907  01770A  6ADA               	clrf	fsr2h,c
  4908  01770C  0E06               	movlw	6
  4909  01770E  26D9               	addwf	fsr2l,f,c
  4910                           
  4911                           ;stkvar	_h @ sp[(0)+-1]
  4912  017710  0EFF               	movlw	-1
  4913  017712  50E3               	movf	plusw1,w,c
  4914  017714  6EE9               	movwf	fsr0l,c
  4915  017716  6AEA               	clrf	fsr0h,c
  4916  017718  0E06               	movlw	6
  4917  01771A  26E9               	addwf	fsr0l,f,c
  4918  01771C  2AEF               	incf	indf0,f,c
  4919  01771E  50EF               	movf	indf0,w,c
  4920  017720  0B03               	andlw	3
  4921  017722  6EDF               	movwf	indf2,c
  4922                           
  4923                           ;hid.c: 34:    h->hid_display = h->sequence;
  4924                           ;stkvar	_h @ sp[(0)+-1]
  4925  017724  0EFF               	movlw	-1
  4926  017726  50E3               	movf	plusw1,w,c
  4927  017728  6ED9               	movwf	fsr2l,c
  4928  01772A  6ADA               	clrf	fsr2h,c
  4929  01772C  0E06               	movlw	6
  4930  01772E  26D9               	addwf	fsr2l,f,c
  4931                           
  4932                           ;stkvar	_h @ sp[(0)+-1]
  4933  017730  0EFF               	movlw	-1
  4934  017732  50E3               	movf	plusw1,w,c
  4935  017734  6EE9               	movwf	fsr0l,c
  4936  017736  6AEA               	clrf	fsr0h,c
  4937  017738  006F FF7F FFEF     	movff	indf2,indf0
  4938                           
  4939                           ;hid.c: 35:    h->wait_select = 1;
  4940                           ;stkvar	_h @ sp[(0)+-1]
  4941  01773E  0EFF               	movlw	-1
  4942  017740  50E3               	movf	plusw1,w,c
  4943  017742  6ED9               	movwf	fsr2l,c
  4944  017744  6ADA               	clrf	fsr2h,c
  4945  017746  0E02               	movlw	2
  4946  017748  26D9               	addwf	fsr2l,f,c
  4947  01774A  0E01               	movlw	1
  4948  01774C                     L1:
  4949  01774C  6EDF               	movwf	indf2,c
  4950  01774E  D013               	goto	l1894
  4951  017750                     l9826:
  4952                           
  4953                           ;stkvar	_h @ sp[(0)+-1]
  4954  017750  0EFF               	movlw	-1
  4955  017752  50E3               	movf	plusw1,w,c
  4956  017754  6ED9               	movwf	fsr2l,c
  4957  017756  6ADA               	clrf	fsr2h,c
  4958  017758  0E01               	movlw	1
  4959  01775A  26D9               	addwf	fsr2l,f,c
  4960  01775C  50DF               	movf	indf2,w,c
  4961  01775E  6E0B               	movwf	(btemp+10)^0,c
  4962  017760  6A0C               	clrf	(btemp+11)^0,c
  4963                           
  4964                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4965                           ; Switch size 1, requested type "simple"
  4966                           ; Number of cases is 1, Range of values is 0 to 0
  4967                           ; switch strategies available:
  4968                           ; Name         Instructions Cycles
  4969                           ; simple_byte            4     3 (average)
  4970                           ;	Chosen strategy is simple_byte
  4971  017762  500C               	movf	(btemp+11)^0,w,c
  4972  017764  0A00               	xorlw	0	; case 0
  4973  017766  A4D8               	btfss	status,2,c
  4974  017768  D7BB               	goto	l9816
  4975                           
  4976                           ; Switch size 1, requested type "simple"
  4977                           ; Number of cases is 2, Range of values is 0 to 1
  4978                           ; switch strategies available:
  4979                           ; Name         Instructions Cycles
  4980                           ; simple_byte            7     4 (average)
  4981                           ;	Chosen strategy is simple_byte
  4982  01776A  500B               	movf	(btemp+10)^0,w,c
  4983  01776C  0A00               	xorlw	0	; case 0
  4984  01776E  B4D8               	btfsc	status,2,c
  4985  017770  D789               	goto	l9804
  4986  017772  0A01               	xorlw	1	; case 1
  4987  017774  D7B5               	goto	l9816
  4988  017776                     l1894:
  4989                           
  4990                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4991  017776  52E5               	movf	postdec1,f,c
  4992  017778  0012               	return		;funcret
  4993  01777A                     __end_of_hid_display:
  4994                           	opt callstack 0
  4995                           
  4996 ;; *************** function _hid_input *****************
  4997 ;; Defined at:
  4998 ;;		line 3 in file "hid.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  h               1  [STACK] PTR struct H_data
  5001 ;;		 -> H(7), 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;		None
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  1  [STACK] PTR struct H_data
  5006 ;; Registers used:
  5007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/1
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5017 ;;Total ram usage:        0 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    8
  5020 ;; This function calls:
  5021 ;;		_get_switch
  5022 ;; This function is called by:
  5023 ;;		_hid_display
  5024 ;; This function uses a reentrant model
  5025 ;;
  5026                           
  5027                           	psect	text15
  5028  0183F6                     __ptext15:
  5029                           	opt callstack 0
  5030  0183F6                     _hid_input:
  5031                           	opt callstack 21
  5032                           
  5033                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  5034                           
  5035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5036                           ;incstack = 0
  5037  0183F6  0E02               	movlw	2
  5038  0183F8  6EE6               	movwf	postinc1,c
  5039  0183FA  EC77  F0C9         	call	_get_switch	;wreg free
  5040  0183FE  5001               	movf	btemp^0,w,c
  5041  018400  B4D8               	btfsc	status,2,c
  5042  018402  D01C               	goto	l9506
  5043                           
  5044                           ;hid.c: 6:   h->wait_select = 0;
  5045                           ;stkvar	_h @ sp[(0)+-1]
  5046  018404  0EFF               	movlw	-1
  5047  018406  50E3               	movf	plusw1,w,c
  5048  018408  6ED9               	movwf	fsr2l,c
  5049  01840A  6ADA               	clrf	fsr2h,c
  5050  01840C  0E02               	movlw	2
  5051  01840E  26D9               	addwf	fsr2l,f,c
  5052  018410  0E00               	movlw	0
  5053  018412  6EDF               	movwf	indf2,c
  5054                           
  5055                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  5056  018414  0E02               	movlw	2
  5057  018416  6EE6               	movwf	postinc1,c
  5058  018418  EC77  F0C9         	call	_get_switch	;wreg free
  5059  01841C  5001               	movf	btemp^0,w,c
  5060  01841E  B4D8               	btfsc	status,2,c
  5061  018420  D003               	goto	u8620
  5062  018422  6A0C               	clrf	(btemp+11)^0,c
  5063  018424  2A0C               	incf	(btemp+11)^0,f,c
  5064  018426  D001               	goto	u8638
  5065  018428                     u8620:
  5066  018428  6A0C               	clrf	(btemp+11)^0,c
  5067  01842A                     u8638:
  5068                           
  5069                           ;stkvar	_h @ sp[(0)+-1]
  5070  01842A  0EFF               	movlw	-1
  5071  01842C  50E3               	movf	plusw1,w,c
  5072  01842E  6ED9               	movwf	fsr2l,c
  5073  018430  6ADA               	clrf	fsr2h,c
  5074  018432  0E03               	movlw	3
  5075  018434  26D9               	addwf	fsr2l,f,c
  5076  018436  0060  F033  FFDF   	movff	btemp+11,indf2
  5077  01843C                     l9506:
  5078                           
  5079                           ;hid.c: 10:  if (get_switch(SENTER)) {
  5080  01843C  0E03               	movlw	3
  5081  01843E  6EE6               	movwf	postinc1,c
  5082  018440  EC77  F0C9         	call	_get_switch	;wreg free
  5083  018444  5001               	movf	btemp^0,w,c
  5084  018446  B4D8               	btfsc	status,2,c
  5085  018448  D01C               	goto	l1885
  5086                           
  5087                           ;hid.c: 11:   h->wait_enter = 0;
  5088                           ;stkvar	_h @ sp[(0)+-1]
  5089  01844A  0EFF               	movlw	-1
  5090  01844C  50E3               	movf	plusw1,w,c
  5091  01844E  6ED9               	movwf	fsr2l,c
  5092  018450  6ADA               	clrf	fsr2h,c
  5093  018452  0E04               	movlw	4
  5094  018454  26D9               	addwf	fsr2l,f,c
  5095  018456  0E00               	movlw	0
  5096  018458  6EDF               	movwf	indf2,c
  5097                           
  5098                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  5099  01845A  0E03               	movlw	3
  5100  01845C  6EE6               	movwf	postinc1,c
  5101  01845E  EC77  F0C9         	call	_get_switch	;wreg free
  5102  018462  5001               	movf	btemp^0,w,c
  5103  018464  B4D8               	btfsc	status,2,c
  5104  018466  D003               	goto	u8650
  5105  018468  6A0C               	clrf	(btemp+11)^0,c
  5106  01846A  2A0C               	incf	(btemp+11)^0,f,c
  5107  01846C  D001               	goto	u8668
  5108  01846E                     u8650:
  5109  01846E  6A0C               	clrf	(btemp+11)^0,c
  5110  018470                     u8668:
  5111                           
  5112                           ;stkvar	_h @ sp[(0)+-1]
  5113  018470  0EFF               	movlw	-1
  5114  018472  50E3               	movf	plusw1,w,c
  5115  018474  6ED9               	movwf	fsr2l,c
  5116  018476  6ADA               	clrf	fsr2h,c
  5117  018478  0E05               	movlw	5
  5118  01847A  26D9               	addwf	fsr2l,f,c
  5119  01847C  0060  F033  FFDF   	movff	btemp+11,indf2
  5120  018482                     l1885:
  5121                           
  5122                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  5123  018482  52E5               	movf	postdec1,f,c
  5124  018484  0012               	return		;funcret
  5125  018486                     __end_of_hid_input:
  5126                           	opt callstack 0
  5127                           
  5128 ;; *************** function _get_switch *****************
  5129 ;; Defined at:
  5130 ;;		line 18 in file "dio.c"
  5131 ;; Parameters:    Size  Location     Type
  5132 ;;  i               1  [STACK] unsigned char 
  5133 ;; Auto vars:     Size  Location     Type
  5134 ;;		None
  5135 ;; Return value:  Size  Location     Type
  5136 ;;                  1  [STACK] enum E17030
  5137 ;; Registers used:
  5138 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  5139 ;; Tracked objects:
  5140 ;;		On entry : 0/2
  5141 ;;		On exit  : 0/0
  5142 ;;		Unchanged: 0/0
  5143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5148 ;;Total ram usage:        0 bytes
  5149 ;; Hardware stack levels used:    1
  5150 ;; Hardware stack levels required when called:    7
  5151 ;; This function calls:
  5152 ;;		Nothing
  5153 ;; This function is called by:
  5154 ;;		_main
  5155 ;;		_hid_input
  5156 ;; This function uses a reentrant model
  5157 ;;
  5158                           
  5159                           	psect	text16
  5160  0192EE                     __ptext16:
  5161                           	opt callstack 0
  5162  0192EE                     _get_switch:
  5163                           	opt callstack 21
  5164                           
  5165                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  5166                           ;stkvar	_i @ sp[(0)+-1]
  5167                           
  5168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5169                           ;incstack = 0
  5170  0192EE  0EFF               	movlw	-1
  5171  0192F0  006F FF8C  F001    	movff	plusw1,btemp
  5172  0192F6  0E03               	movlw	3
  5173  0192F8  6401               	cpfsgt	btemp^0,c
  5174  0192FA  D002               	goto	l8180
  5175                           
  5176                           ;dio.c: 21:   return SW_OFF;
  5177  0192FC  0E00               	movlw	0
  5178  0192FE  D008               	goto	L2
  5179  019300                     l8180:
  5180                           
  5181                           ;dio.c: 23:  return S.button[i].sw;
  5182                           ;stkvar	_i @ sp[(0)+-1]
  5183  019300  0EFF               	movlw	-1
  5184  019302  50E3               	movf	plusw1,w,c
  5185  019304  0D05               	mullw	5
  5186  019306  50F3               	movf	243,w,c
  5187  019308  0F60               	addlw	low _S
  5188  01930A  6ED9               	movwf	fsr2l,c
  5189  01930C  6ADA               	clrf	fsr2h,c
  5190  01930E  50DF               	movf	indf2,w,c
  5191  019310                     L2:
  5192  019310  6E01               	movwf	btemp^0,c
  5193                           
  5194                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5195  019312  52E5               	movf	postdec1,f,c
  5196  019314  0012               	return		;funcret
  5197  019316                     __end_of_get_switch:
  5198                           	opt callstack 0
  5199                           
  5200 ;; *************** function _eaDogM_WriteCommand *****************
  5201 ;; Defined at:
  5202 ;;		line 173 in file "eadog.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;  cmd             1  [STACK] const unsigned char 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;		None
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  1  [STACK] void 
  5209 ;; Registers used:
  5210 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5211 ;; Tracked objects:
  5212 ;;		On entry : 3F/3D
  5213 ;;		On exit  : 3F/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5220 ;;Total ram usage:        0 bytes
  5221 ;; Hardware stack levels used:    1
  5222 ;; Hardware stack levels required when called:   17
  5223 ;; This function calls:
  5224 ;;		_send_lcd_cmd_dma
  5225 ;; This function is called by:
  5226 ;;		_main
  5227 ;; This function uses a reentrant model
  5228 ;;
  5229                           
  5230                           	psect	text17
  5231  019886                     __ptext17:
  5232                           	opt callstack 0
  5233  019886                     _eaDogM_WriteCommand:
  5234                           	opt callstack 13
  5235                           
  5236                           ;eadog.c: 173: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 174: {;eadog.c: 175:
      +                            send_lcd_cmd_dma(cmd);
  5237                           ;stkvar	_cmd @ sp[(0)+-1]
  5238                           
  5239                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5240                           ;incstack = 0
  5241  019886  0EFF               	movlw	-1
  5242  019888  50E3               	movf	plusw1,w,c
  5243  01988A  6EE6               	movwf	postinc1,c
  5244  01988C  EC99  F0C5         	call	_send_lcd_cmd_dma	;wreg free
  5245                           
  5246                           ; BSR set to: 0
  5247                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  5248  019890  52E5               	movf	postdec1,f,c
  5249  019892  0012               	return		;funcret
  5250  019894                     __end_of_eaDogM_WriteCommand:
  5251                           	opt callstack 0
  5252                           
  5253 ;; *************** function _convert_adc_data *****************
  5254 ;; Defined at:
  5255 ;;		line 40 in file "mbmc.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;		None
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;  i               1  [STACK] unsigned char 
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  1  [STACK] void 
  5262 ;; Registers used:
  5263 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/1
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5273 ;;Total ram usage:        0 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; Hardware stack levels required when called:   10
  5276 ;; This function calls:
  5277 ;;		_conv_raw_result
  5278 ;;		_lp_filter
  5279 ;; This function is called by:
  5280 ;;		_main
  5281 ;; This function uses a reentrant model
  5282 ;;
  5283                           
  5284                           	psect	text18
  5285  017E4E                     __ptext18:
  5286                           	opt callstack 0
  5287  017E4E                     _convert_adc_data:
  5288                           	opt callstack 0
  5289                           
  5290                           ; BSR set to: 0
  5291                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5292  017E4E  52E6               	movf	postinc1,f,c
  5293                           
  5294                           ;mbmc.c: 42:  uint8_t i = 0;
  5295                           ;stkvar	_i @ sp[(-1)+0]
  5296                           
  5297                           ;incstack = 0
  5298  017E50  0EFF               	movlw	-1
  5299  017E52  6AE3               	clrf	plusw1,c
  5300  017E54                     l9776:
  5301                           
  5302                           ;mbmc.c: 45:   if (V.calib) {
  5303  017E54  0102               	movlb	2	; () banked
  5304  017E56  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  5305  017E58  B4D8               	btfsc	status,2,c
  5306  017E5A  D01B               	goto	l9780
  5307                           
  5308                           ; BSR set to: 2
  5309                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  5310  017E5C  0E01               	movlw	1
  5311  017E5E  6EE6               	movwf	postinc1,c
  5312                           
  5313                           ;stkvar	_i @ sp[(-2)+0]
  5314  017E60  0EFE               	movlw	-2
  5315  017E62  50E3               	movf	plusw1,w,c
  5316  017E64  6EE6               	movwf	postinc1,c
  5317  017E66  0E01               	movlw	1
  5318  017E68  6EE6               	movwf	postinc1,c
  5319                           
  5320                           ;stkvar	_i @ sp[(-4)+0]
  5321  017E6A  0EFC               	movlw	-4
  5322  017E6C  50E3               	movf	plusw1,w,c
  5323  017E6E  6EE6               	movwf	postinc1,c
  5324  017E70  ECAC  F0A0         	call	_conv_raw_result	;wreg free
  5325  017E74  0060  F007  FFE6   	movff	btemp,postinc1
  5326  017E7A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5327  017E80  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5328  017E86  0060  F013  FFE6   	movff	btemp+3,postinc1
  5329  017E8C  ECA0  F0B3         	call	_lp_filter	;wreg free
  5330  017E90  D01A               	goto	L3
  5331  017E92                     l9780:
  5332                           
  5333                           ; BSR set to: 2
  5334                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  5335  017E92  0E00               	movlw	0
  5336  017E94  6EE6               	movwf	postinc1,c
  5337                           
  5338                           ;stkvar	_i @ sp[(-2)+0]
  5339  017E96  0EFE               	movlw	-2
  5340  017E98  50E3               	movf	plusw1,w,c
  5341  017E9A  6EE6               	movwf	postinc1,c
  5342  017E9C  0E00               	movlw	0
  5343  017E9E  6EE6               	movwf	postinc1,c
  5344                           
  5345                           ;stkvar	_i @ sp[(-4)+0]
  5346  017EA0  0EFC               	movlw	-4
  5347  017EA2  50E3               	movf	plusw1,w,c
  5348  017EA4  6EE6               	movwf	postinc1,c
  5349  017EA6  ECAC  F0A0         	call	_conv_raw_result	;wreg free
  5350  017EAA  0060  F007  FFE6   	movff	btemp,postinc1
  5351  017EB0  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5352  017EB6  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5353  017EBC  0060  F013  FFE6   	movff	btemp+3,postinc1
  5354  017EC2  ECA0  F0B3         	call	_lp_filter	;wreg free
  5355  017EC6                     L3:
  5356                           
  5357                           ;stkvar	_i @ sp[(-1)+0]
  5358  017EC6  0EFF               	movlw	-1
  5359  017EC8  50E3               	movf	plusw1,w,c
  5360  017ECA  0D04               	mullw	4
  5361  017ECC  0E00               	movlw	low _C
  5362  017ECE  24F3               	addwf	243,w,c
  5363  017ED0  6ED9               	movwf	fsr2l,c
  5364  017ED2  0E01               	movlw	high _C
  5365  017ED4  20F4               	addwfc	prodh,w,c
  5366  017ED6  6EDA               	movwf	fsr2h,c
  5367  017ED8  0060  F007  FFDE   	movff	btemp,postinc2
  5368  017EDE  0060  F00B  FFDE   	movff	btemp+1,postinc2
  5369  017EE4  0060  F00F  FFDE   	movff	btemp+2,postinc2
  5370  017EEA  0060  F013  FFDE   	movff	btemp+3,postinc2
  5371                           
  5372                           ;mbmc.c: 50:  } while (++i < 16);
  5373                           ;stkvar	_i @ sp[(-1)+0]
  5374  017EF0  0EFF               	movlw	-1
  5375  017EF2  2AE3               	incf	plusw1,f,c
  5376  017EF4  0EFF               	movlw	-1
  5377  017EF6  006F FF8C  F001    	movff	plusw1,btemp
  5378  017EFC  0E0F               	movlw	15
  5379  017EFE  6401               	cpfsgt	btemp^0,c
  5380  017F00  D7A9               	goto	l9776
  5381                           
  5382                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  5383  017F02  52E5               	movf	postdec1,f,c
  5384  017F04  0012               	return		;funcret
  5385  017F06                     __end_of_convert_adc_data:
  5386                           	opt callstack 0
  5387                           
  5388 ;; *************** function _conv_raw_result *****************
  5389 ;; Defined at:
  5390 ;;		line 80 in file "daq.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  chan            1  [STACK] const enum E16136
  5393 ;;  to_what         1  [STACK] const enum E16198
  5394 ;; Auto vars:     Size  Location     Type
  5395 ;;		None
  5396 ;; Return value:  Size  Location     Type
  5397 ;;                  4  [STACK] float 
  5398 ;; Registers used:
  5399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5400 ;; Tracked objects:
  5401 ;;		On entry : 3F/2
  5402 ;;		On exit  : 0/0
  5403 ;;		Unchanged: 0/0
  5404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5409 ;;Total ram usage:        0 bytes
  5410 ;; Hardware stack levels used:    1
  5411 ;; Hardware stack levels required when called:    9
  5412 ;; This function calls:
  5413 ;;		___fldiv
  5414 ;;		___flmul
  5415 ;;		___flsub
  5416 ;;		___xxtofl
  5417 ;;		_get_raw_result
  5418 ;;		_nanf
  5419 ;; This function is called by:
  5420 ;;		_convert_adc_data
  5421 ;; This function uses a reentrant model
  5422 ;;
  5423                           
  5424                           	psect	text19
  5425  014158                     __ptext19:
  5426                           	opt callstack 0
  5427  014158                     _conv_raw_result:
  5428                           	opt callstack 20
  5429                           
  5430                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  5431                           
  5432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5433                           ;incstack = 0
  5434  014158  D242               	goto	l9440
  5435  01415A                     l9386:
  5436                           
  5437                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  5438                           ;stkvar	_chan @ sp[(0)+-1]
  5439  01415A  0EFF               	movlw	-1
  5440  01415C  006F FF8C  F00C    	movff	plusw1,btemp+11
  5441  014162  0E77               	movlw	119
  5442  014164  6E09               	movwf	(btemp+8)^0,c
  5443  014166  0E3C               	movlw	60
  5444  014168  6E0A               	movwf	(btemp+9)^0,c
  5445  01416A  2A0C               	incf	(btemp+11)^0,f,c
  5446  01416C  D003               	goto	u8394
  5447  01416E                     u8395:
  5448  01416E  340A               	rlcf	(btemp+9)^0,w,c
  5449  014170  320A               	rrcf	(btemp+9)^0,f,c
  5450  014172  3209               	rrcf	(btemp+8)^0,f,c
  5451  014174                     u8394:
  5452  014174  2E0C               	decfsz	(btemp+11)^0,f,c
  5453  014176  D7FB               	goto	u8395
  5454  014178  B009               	btfsc	(btemp+8)^0,0,c
  5455  01417A  D007               	goto	l9392
  5456                           
  5457                           ;daq.c: 86:    return nanf("");
  5458  01417C  0E7F               	movlw	low (STR_39+18)
  5459  01417E  6EE6               	movwf	postinc1,c
  5460  014180  0EFE               	movlw	high (STR_39+18)
  5461  014182  6EE6               	movwf	postinc1,c
  5462  014184  EC81  F0C4         	call	_nanf	;wreg free
  5463  014188  D23A               	goto	l1765
  5464  01418A                     l9392:
  5465                           
  5466                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  5467                           ;stkvar	_chan @ sp[(0)+-1]
  5468  01418A  0EFF               	movlw	-1
  5469  01418C  006F FF8C  F00C    	movff	plusw1,btemp+11
  5470  014192  0E03               	movlw	3
  5471  014194  6E09               	movwf	(btemp+8)^0,c
  5472  014196  0E00               	movlw	0
  5473  014198  6E0A               	movwf	(btemp+9)^0,c
  5474  01419A  2A0C               	incf	(btemp+11)^0,f,c
  5475  01419C  D003               	goto	u8414
  5476  01419E                     u8415:
  5477  01419E  340A               	rlcf	(btemp+9)^0,w,c
  5478  0141A0  320A               	rrcf	(btemp+9)^0,f,c
  5479  0141A2  3209               	rrcf	(btemp+8)^0,f,c
  5480  0141A4                     u8414:
  5481  0141A4  2E0C               	decfsz	(btemp+11)^0,f,c
  5482  0141A6  D7FB               	goto	u8415
  5483  0141A8  A009               	btfss	(btemp+8)^0,0,c
  5484  0141AA  D0EB               	goto	l9406
  5485                           
  5486                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  5487                           ;stkvar	_chan @ sp[(0)+-1]
  5488  0141AC  0EFF               	movlw	-1
  5489  0141AE  006F FF8C  F00C    	movff	plusw1,btemp+11
  5490  0141B4  0E01               	movlw	1
  5491  0141B6  6E09               	movwf	(btemp+8)^0,c
  5492  0141B8  0E00               	movlw	0
  5493  0141BA  6E0A               	movwf	(btemp+9)^0,c
  5494  0141BC  2A0C               	incf	(btemp+11)^0,f,c
  5495  0141BE  D003               	goto	u8434
  5496  0141C0                     u8435:
  5497  0141C0  340A               	rlcf	(btemp+9)^0,w,c
  5498  0141C2  320A               	rrcf	(btemp+9)^0,f,c
  5499  0141C4  3209               	rrcf	(btemp+8)^0,f,c
  5500  0141C6                     u8434:
  5501  0141C6  2E0C               	decfsz	(btemp+11)^0,f,c
  5502  0141C8  D7FB               	goto	u8435
  5503  0141CA  A009               	btfss	(btemp+8)^0,0,c
  5504  0141CC  D06D               	goto	l9402
  5505                           
  5506                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  5507  0141CE  0E7B               	movlw	123
  5508  0141D0  6EE6               	movwf	postinc1,c
  5509  0141D2  0E14               	movlw	20
  5510  0141D4  6EE6               	movwf	postinc1,c
  5511  0141D6  0EAE               	movlw	174
  5512  0141D8  6EE6               	movwf	postinc1,c
  5513  0141DA  0E3D               	movlw	61
  5514  0141DC  6EE6               	movwf	postinc1,c
  5515  0141DE  0060  F3A4  F009   	movff	_R+32,btemp+8	;volatile
  5516  0141E4  0060  F3A8  F00A   	movff	_R+33,btemp+9	;volatile
  5517  0141EA  0E00               	movlw	0
  5518  0141EC  BE0A               	btfsc	(btemp+9)^0,7,c
  5519  0141EE  0EFF               	movlw	255
  5520  0141F0  6E0B               	movwf	(btemp+10)^0,c
  5521  0141F2  6E0C               	movwf	(btemp+11)^0,c
  5522  0141F4  0060  F027  FFE6   	movff	btemp+8,postinc1
  5523  0141FA  0060  F02B  FFE6   	movff	btemp+9,postinc1
  5524  014200  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5525  014206  0060  F033  FFE6   	movff	btemp+11,postinc1
  5526  01420C  0E01               	movlw	1
  5527  01420E  6EE6               	movwf	postinc1,c
  5528  014210  ECBA  F0B1         	call	___xxtofl	;wreg free
  5529  014214  0060  F007  FFE6   	movff	btemp,postinc1
  5530  01421A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5531  014220  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5532  014226  0060  F013  FFE6   	movff	btemp+3,postinc1
  5533                           
  5534                           ;stkvar	_chan @ sp[(-8)+-1]
  5535  01422C  0EF7               	movlw	-9
  5536  01422E  50E3               	movf	plusw1,w,c
  5537  014230  6EE6               	movwf	postinc1,c
  5538  014232  EC7B  F0CB         	call	_get_raw_result	;wreg free
  5539  014236  0060  F004  F00B   	movff	btemp,btemp+10
  5540  01423C  0060  F008  F00C   	movff	btemp+1,btemp+11
  5541  014242  500B               	movf	(btemp+10)^0,w,c
  5542  014244  6E05               	movwf	(btemp+4)^0,c
  5543  014246  500C               	movf	(btemp+11)^0,w,c
  5544  014248  6E06               	movwf	(btemp+5)^0,c
  5545  01424A  6A07               	clrf	(btemp+6)^0,c
  5546  01424C  6A08               	clrf	(btemp+7)^0,c
  5547  01424E  0060  F017  FFE6   	movff	btemp+4,postinc1
  5548  014254  0060  F01B  FFE6   	movff	btemp+5,postinc1
  5549  01425A  0060  F01F  FFE6   	movff	btemp+6,postinc1
  5550  014260  0060  F023  FFE6   	movff	btemp+7,postinc1
  5551  014266  0E00               	movlw	0
  5552  014268  6EE6               	movwf	postinc1,c
  5553  01426A  ECBA  F0B1         	call	___xxtofl	;wreg free
  5554  01426E  0060  F007  FFE6   	movff	btemp,postinc1
  5555  014274  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5556  01427A  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5557  014280  0060  F013  FFE6   	movff	btemp+3,postinc1
  5558  014286  EC7E  F0C6         	call	___flsub	;wreg free
  5559  01428A  0060  F007  FFE6   	movff	btemp,postinc1
  5560  014290  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5561  014296  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5562  01429C  0060  F013  FFE6   	movff	btemp+3,postinc1
  5563  0142A2  EC14  F093         	call	___flmul	;wreg free
  5564  0142A6  D1AB               	goto	l1765
  5565  0142A8                     l9402:
  5566                           
  5567                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  5568  0142A8  0E29               	movlw	41
  5569  0142AA  6EE6               	movwf	postinc1,c
  5570  0142AC  0E5C               	movlw	92
  5571  0142AE  6EE6               	movwf	postinc1,c
  5572  0142B0  0E0F               	movlw	15
  5573  0142B2  6EE6               	movwf	postinc1,c
  5574  0142B4  0E3D               	movlw	61
  5575  0142B6  6EE6               	movwf	postinc1,c
  5576  0142B8  0060  F3AC  F009   	movff	_R+34,btemp+8	;volatile
  5577  0142BE  0060  F3B0  F00A   	movff	_R+35,btemp+9	;volatile
  5578  0142C4  0E00               	movlw	0
  5579  0142C6  BE0A               	btfsc	(btemp+9)^0,7,c
  5580  0142C8  0EFF               	movlw	255
  5581  0142CA  6E0B               	movwf	(btemp+10)^0,c
  5582  0142CC  6E0C               	movwf	(btemp+11)^0,c
  5583  0142CE  0060  F027  FFE6   	movff	btemp+8,postinc1
  5584  0142D4  0060  F02B  FFE6   	movff	btemp+9,postinc1
  5585  0142DA  0060  F02F  FFE6   	movff	btemp+10,postinc1
  5586  0142E0  0060  F033  FFE6   	movff	btemp+11,postinc1
  5587  0142E6  0E01               	movlw	1
  5588  0142E8  6EE6               	movwf	postinc1,c
  5589  0142EA  ECBA  F0B1         	call	___xxtofl	;wreg free
  5590  0142EE  0060  F007  FFE6   	movff	btemp,postinc1
  5591  0142F4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5592  0142FA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5593  014300  0060  F013  FFE6   	movff	btemp+3,postinc1
  5594                           
  5595                           ;stkvar	_chan @ sp[(-8)+-1]
  5596  014306  0EF7               	movlw	-9
  5597  014308  50E3               	movf	plusw1,w,c
  5598  01430A  6EE6               	movwf	postinc1,c
  5599  01430C  EC7B  F0CB         	call	_get_raw_result	;wreg free
  5600  014310  0060  F004  F00B   	movff	btemp,btemp+10
  5601  014316  0060  F008  F00C   	movff	btemp+1,btemp+11
  5602  01431C  500B               	movf	(btemp+10)^0,w,c
  5603  01431E  6E05               	movwf	(btemp+4)^0,c
  5604  014320  500C               	movf	(btemp+11)^0,w,c
  5605  014322  6E06               	movwf	(btemp+5)^0,c
  5606  014324  6A07               	clrf	(btemp+6)^0,c
  5607  014326  6A08               	clrf	(btemp+7)^0,c
  5608  014328  0060  F017  FFE6   	movff	btemp+4,postinc1
  5609  01432E  0060  F01B  FFE6   	movff	btemp+5,postinc1
  5610  014334  0060  F01F  FFE6   	movff	btemp+6,postinc1
  5611  01433A  0060  F023  FFE6   	movff	btemp+7,postinc1
  5612  014340  0E00               	movlw	0
  5613  014342  6EE6               	movwf	postinc1,c
  5614  014344  ECBA  F0B1         	call	___xxtofl	;wreg free
  5615  014348  0060  F007  FFE6   	movff	btemp,postinc1
  5616  01434E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5617  014354  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5618  01435A  0060  F013  FFE6   	movff	btemp+3,postinc1
  5619  014360  EC7E  F0C6         	call	___flsub	;wreg free
  5620  014364  0060  F007  FFE6   	movff	btemp,postinc1
  5621  01436A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5622  014370  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5623  014376  0060  F013  FFE6   	movff	btemp+3,postinc1
  5624  01437C  EC14  F093         	call	___flmul	;wreg free
  5625  014380  D13E               	goto	l1765
  5626  014382                     l9406:
  5627                           
  5628                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  5629                           ;stkvar	_chan @ sp[(0)+-1]
  5630  014382  0EFF               	movlw	-1
  5631  014384  006F FF8C  F00C    	movff	plusw1,btemp+11
  5632  01438A  0E00               	movlw	0
  5633  01438C  6E09               	movwf	(btemp+8)^0,c
  5634  01438E  0E08               	movlw	8
  5635  014390  6E0A               	movwf	(btemp+9)^0,c
  5636  014392  2A0C               	incf	(btemp+11)^0,f,c
  5637  014394  D003               	goto	u8454
  5638  014396                     u8455:
  5639  014396  340A               	rlcf	(btemp+9)^0,w,c
  5640  014398  320A               	rrcf	(btemp+9)^0,f,c
  5641  01439A  3209               	rrcf	(btemp+8)^0,f,c
  5642  01439C                     u8454:
  5643  01439C  2E0C               	decfsz	(btemp+11)^0,f,c
  5644  01439E  D7FB               	goto	u8455
  5645  0143A0  A009               	btfss	(btemp+8)^0,0,c
  5646  0143A2  D008               	goto	l9414
  5647                           
  5648                           ;daq.c: 96:     return 25.0;
  5649  0143A4  0E00               	movlw	0
  5650  0143A6  6E01               	movwf	btemp^0,c
  5651  0143A8  0E00               	movlw	0
  5652  0143AA  6E02               	movwf	(btemp+1)^0,c
  5653  0143AC  0EC8               	movlw	200
  5654  0143AE  6E03               	movwf	(btemp+2)^0,c
  5655  0143B0  0E41               	movlw	65
  5656  0143B2  D113               	goto	L4
  5657  0143B4                     l9414:
  5658                           
  5659                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5660  0143B4  0E00               	movlw	0
  5661  0143B6  6EE6               	movwf	postinc1,c
  5662  0143B8  0E00               	movlw	0
  5663  0143BA  6EE6               	movwf	postinc1,c
  5664  0143BC  0E7A               	movlw	122
  5665  0143BE  6EE6               	movwf	postinc1,c
  5666  0143C0  0E44               	movlw	68
  5667  0143C2  6EE6               	movwf	postinc1,c
  5668  0143C4  0E61               	movlw	97
  5669  0143C6  6EE6               	movwf	postinc1,c
  5670  0143C8  0E03               	movlw	3
  5671  0143CA  6EE6               	movwf	postinc1,c
  5672  0143CC  0E84               	movlw	132
  5673  0143CE  6EE6               	movwf	postinc1,c
  5674  0143D0  0E40               	movlw	64
  5675  0143D2  6EE6               	movwf	postinc1,c
  5676                           
  5677                           ;stkvar	_chan @ sp[(-8)+-1]
  5678  0143D4  0EF7               	movlw	-9
  5679  0143D6  50E3               	movf	plusw1,w,c
  5680  0143D8  6EE6               	movwf	postinc1,c
  5681  0143DA  EC7B  F0CB         	call	_get_raw_result	;wreg free
  5682  0143DE  0060  F004  F00B   	movff	btemp,btemp+10
  5683  0143E4  0060  F008  F00C   	movff	btemp+1,btemp+11
  5684  0143EA  500B               	movf	(btemp+10)^0,w,c
  5685  0143EC  6E05               	movwf	(btemp+4)^0,c
  5686  0143EE  500C               	movf	(btemp+11)^0,w,c
  5687  0143F0  6E06               	movwf	(btemp+5)^0,c
  5688  0143F2  6A07               	clrf	(btemp+6)^0,c
  5689  0143F4  6A08               	clrf	(btemp+7)^0,c
  5690  0143F6  0060  F017  FFE6   	movff	btemp+4,postinc1
  5691  0143FC  0060  F01B  FFE6   	movff	btemp+5,postinc1
  5692  014402  0060  F01F  FFE6   	movff	btemp+6,postinc1
  5693  014408  0060  F023  FFE6   	movff	btemp+7,postinc1
  5694  01440E  0E00               	movlw	0
  5695  014410  6EE6               	movwf	postinc1,c
  5696  014412  ECBA  F0B1         	call	___xxtofl	;wreg free
  5697  014416  0060  F007  FFE6   	movff	btemp,postinc1
  5698  01441C  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5699  014422  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5700  014428  0060  F013  FFE6   	movff	btemp+3,postinc1
  5701  01442E  EC14  F093         	call	___flmul	;wreg free
  5702  014432  0060  F007  FFE6   	movff	btemp,postinc1
  5703  014438  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5704  01443E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5705  014444  0060  F013  FFE6   	movff	btemp+3,postinc1
  5706  01444A  ECEF  F09D         	call	___fldiv	;wreg free
  5707  01444E  D0D7               	goto	l1765
  5708  014450                     l9418:
  5709                           
  5710                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  5711                           ;stkvar	_chan @ sp[(0)+-1]
  5712  014450  0EFF               	movlw	-1
  5713  014452  006F FF8C  F00C    	movff	plusw1,btemp+11
  5714  014458  0E03               	movlw	3
  5715  01445A  6E09               	movwf	(btemp+8)^0,c
  5716  01445C  0E00               	movlw	0
  5717  01445E  6E0A               	movwf	(btemp+9)^0,c
  5718  014460  2A0C               	incf	(btemp+11)^0,f,c
  5719  014462  D003               	goto	u8474
  5720  014464                     u8475:
  5721  014464  340A               	rlcf	(btemp+9)^0,w,c
  5722  014466  320A               	rrcf	(btemp+9)^0,f,c
  5723  014468  3209               	rrcf	(btemp+8)^0,f,c
  5724  01446A                     u8474:
  5725  01446A  2E0C               	decfsz	(btemp+11)^0,f,c
  5726  01446C  D7FB               	goto	u8475
  5727  01446E  B009               	btfsc	(btemp+8)^0,0,c
  5728  014470  D011               	goto	u8500
  5729                           
  5730                           ;stkvar	_chan @ sp[(0)+-1]
  5731  014472  0EFF               	movlw	-1
  5732  014474  006F FF8C  F00C    	movff	plusw1,btemp+11
  5733  01447A  0E00               	movlw	0
  5734  01447C  6E09               	movwf	(btemp+8)^0,c
  5735  01447E  0E08               	movlw	8
  5736  014480  6E0A               	movwf	(btemp+9)^0,c
  5737  014482  2A0C               	incf	(btemp+11)^0,f,c
  5738  014484  D003               	goto	u8494
  5739  014486                     u8495:
  5740  014486  340A               	rlcf	(btemp+9)^0,w,c
  5741  014488  320A               	rrcf	(btemp+9)^0,f,c
  5742  01448A  3209               	rrcf	(btemp+8)^0,f,c
  5743  01448C                     u8494:
  5744  01448C  2E0C               	decfsz	(btemp+11)^0,f,c
  5745  01448E  D7FB               	goto	u8495
  5746  014490  A009               	btfss	(btemp+8)^0,0,c
  5747  014492  D04E               	goto	l9426
  5748  014494                     u8500:
  5749                           
  5750                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  5751  014494  0E00               	movlw	0
  5752  014496  6EE6               	movwf	postinc1,c
  5753  014498  0E00               	movlw	0
  5754  01449A  6EE6               	movwf	postinc1,c
  5755  01449C  0E7A               	movlw	122
  5756  01449E  6EE6               	movwf	postinc1,c
  5757  0144A0  0E44               	movlw	68
  5758  0144A2  6EE6               	movwf	postinc1,c
  5759  0144A4  0E00               	movlw	0
  5760  0144A6  6EE6               	movwf	postinc1,c
  5761  0144A8  0E00               	movlw	0
  5762  0144AA  6EE6               	movwf	postinc1,c
  5763  0144AC  0E20               	movlw	32
  5764  0144AE  6EE6               	movwf	postinc1,c
  5765  0144B0  0E3F               	movlw	63
  5766  0144B2  6EE6               	movwf	postinc1,c
  5767                           
  5768                           ;stkvar	_chan @ sp[(-8)+-1]
  5769  0144B4  0EF7               	movlw	-9
  5770  0144B6  50E3               	movf	plusw1,w,c
  5771  0144B8  6EE6               	movwf	postinc1,c
  5772  0144BA  EC7B  F0CB         	call	_get_raw_result	;wreg free
  5773  0144BE  0060  F004  F00B   	movff	btemp,btemp+10
  5774  0144C4  0060  F008  F00C   	movff	btemp+1,btemp+11
  5775  0144CA  500B               	movf	(btemp+10)^0,w,c
  5776  0144CC  6E05               	movwf	(btemp+4)^0,c
  5777  0144CE  500C               	movf	(btemp+11)^0,w,c
  5778  0144D0  6E06               	movwf	(btemp+5)^0,c
  5779  0144D2  6A07               	clrf	(btemp+6)^0,c
  5780  0144D4  6A08               	clrf	(btemp+7)^0,c
  5781  0144D6  0060  F017  FFE6   	movff	btemp+4,postinc1
  5782  0144DC  0060  F01B  FFE6   	movff	btemp+5,postinc1
  5783  0144E2  0060  F01F  FFE6   	movff	btemp+6,postinc1
  5784  0144E8  0060  F023  FFE6   	movff	btemp+7,postinc1
  5785  0144EE  0E00               	movlw	0
  5786  0144F0  6EE6               	movwf	postinc1,c
  5787  0144F2  ECBA  F0B1         	call	___xxtofl	;wreg free
  5788  0144F6  0060  F007  FFE6   	movff	btemp,postinc1
  5789  0144FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5790  014502  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5791  014508  0060  F013  FFE6   	movff	btemp+3,postinc1
  5792  01450E  EC14  F093         	call	___flmul	;wreg free
  5793  014512  0060  F007  FFE6   	movff	btemp,postinc1
  5794  014518  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5795  01451E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5796  014524  0060  F013  FFE6   	movff	btemp+3,postinc1
  5797  01452A  ECEF  F09D         	call	___fldiv	;wreg free
  5798  01452E  D067               	goto	l1765
  5799  014530                     l9426:
  5800                           
  5801                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5802  014530  0E00               	movlw	0
  5803  014532  6EE6               	movwf	postinc1,c
  5804  014534  0E00               	movlw	0
  5805  014536  6EE6               	movwf	postinc1,c
  5806  014538  0E7A               	movlw	122
  5807  01453A  6EE6               	movwf	postinc1,c
  5808  01453C  0E44               	movlw	68
  5809  01453E  6EE6               	movwf	postinc1,c
  5810  014540  0E61               	movlw	97
  5811  014542  6EE6               	movwf	postinc1,c
  5812  014544  0E03               	movlw	3
  5813  014546  6EE6               	movwf	postinc1,c
  5814  014548  0E84               	movlw	132
  5815  01454A  6EE6               	movwf	postinc1,c
  5816  01454C  0E40               	movlw	64
  5817  01454E  6EE6               	movwf	postinc1,c
  5818                           
  5819                           ;stkvar	_chan @ sp[(-8)+-1]
  5820  014550  0EF7               	movlw	-9
  5821  014552  50E3               	movf	plusw1,w,c
  5822  014554  6EE6               	movwf	postinc1,c
  5823  014556  EC7B  F0CB         	call	_get_raw_result	;wreg free
  5824  01455A  0060  F004  F00B   	movff	btemp,btemp+10
  5825  014560  0060  F008  F00C   	movff	btemp+1,btemp+11
  5826  014566  500B               	movf	(btemp+10)^0,w,c
  5827  014568  6E05               	movwf	(btemp+4)^0,c
  5828  01456A  500C               	movf	(btemp+11)^0,w,c
  5829  01456C  6E06               	movwf	(btemp+5)^0,c
  5830  01456E  6A07               	clrf	(btemp+6)^0,c
  5831  014570  6A08               	clrf	(btemp+7)^0,c
  5832  014572  0060  F017  FFE6   	movff	btemp+4,postinc1
  5833  014578  0060  F01B  FFE6   	movff	btemp+5,postinc1
  5834  01457E  0060  F01F  FFE6   	movff	btemp+6,postinc1
  5835  014584  0060  F023  FFE6   	movff	btemp+7,postinc1
  5836  01458A  0E00               	movlw	0
  5837  01458C  6EE6               	movwf	postinc1,c
  5838  01458E  ECBA  F0B1         	call	___xxtofl	;wreg free
  5839  014592  0060  F007  FFE6   	movff	btemp,postinc1
  5840  014598  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5841  01459E  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5842  0145A4  0060  F013  FFE6   	movff	btemp+3,postinc1
  5843  0145AA  EC14  F093         	call	___flmul	;wreg free
  5844  0145AE  0060  F007  FFE6   	movff	btemp,postinc1
  5845  0145B4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  5846  0145BA  0060  F00F  FFE6   	movff	btemp+2,postinc1
  5847  0145C0  0060  F013  FFE6   	movff	btemp+3,postinc1
  5848  0145C6  ECEF  F09D         	call	___fldiv	;wreg free
  5849  0145CA  D019               	goto	l1765
  5850  0145CC                     l9432:
  5851                           
  5852                           ;daq.c: 109:   return 0.0;
  5853  0145CC  0E00               	movlw	0
  5854  0145CE  6E01               	movwf	btemp^0,c
  5855  0145D0  0E00               	movlw	0
  5856  0145D2  6E02               	movwf	(btemp+1)^0,c
  5857  0145D4  0E00               	movlw	0
  5858  0145D6  6E03               	movwf	(btemp+2)^0,c
  5859  0145D8  0E00               	movlw	0
  5860  0145DA                     L4:
  5861  0145DA  6E04               	movwf	(btemp+3)^0,c
  5862  0145DC  D010               	goto	l1765
  5863  0145DE                     l9440:
  5864                           
  5865                           ;stkvar	_to_what @ sp[(0)+-2]
  5866  0145DE  0EFE               	movlw	-2
  5867  0145E0  50E3               	movf	plusw1,w,c
  5868  0145E2  6E0B               	movwf	(btemp+10)^0,c
  5869  0145E4  6A0C               	clrf	(btemp+11)^0,c
  5870                           
  5871                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5872                           ; Switch size 1, requested type "simple"
  5873                           ; Number of cases is 1, Range of values is 0 to 0
  5874                           ; switch strategies available:
  5875                           ; Name         Instructions Cycles
  5876                           ; simple_byte            4     3 (average)
  5877                           ;	Chosen strategy is simple_byte
  5878  0145E6  500C               	movf	(btemp+11)^0,w,c
  5879  0145E8  0A00               	xorlw	0	; case 0
  5880  0145EA  A4D8               	btfss	status,2,c
  5881  0145EC  D7EF               	goto	l9432
  5882                           
  5883                           ; Switch size 1, requested type "simple"
  5884                           ; Number of cases is 2, Range of values is 0 to 1
  5885                           ; switch strategies available:
  5886                           ; Name         Instructions Cycles
  5887                           ; simple_byte            7     4 (average)
  5888                           ;	Chosen strategy is simple_byte
  5889  0145EE  500B               	movf	(btemp+10)^0,w,c
  5890  0145F0  0A00               	xorlw	0	; case 0
  5891  0145F2  B4D8               	btfsc	status,2,c
  5892  0145F4  D5B2               	goto	l9386
  5893  0145F6  0A01               	xorlw	1	; case 1
  5894  0145F8  B4D8               	btfsc	status,2,c
  5895  0145FA  D72A               	goto	l9418
  5896  0145FC  D7E7               	goto	l9432
  5897  0145FE                     l1765:
  5898                           
  5899                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  5900  0145FE  52E5               	movf	postdec1,f,c
  5901  014600  52E5               	movf	postdec1,f,c
  5902  014602  0012               	return		;funcret
  5903  014604                     __end_of_conv_raw_result:
  5904                           	opt callstack 0
  5905                           
  5906 ;; *************** function _nanf *****************
  5907 ;; Defined at:
  5908 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  s               2  [STACK] PTR const unsigned char 
  5911 ;;		 -> STR_59(1), STR_45(1), 
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;  u               4  [STACK] struct .
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  4  [STACK] float 
  5916 ;; Registers used:
  5917 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/2
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5927 ;;Total ram usage:        0 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; Hardware stack levels required when called:    7
  5930 ;; This function calls:
  5931 ;;		Nothing
  5932 ;; This function is called by:
  5933 ;;		_conv_raw_result
  5934 ;; This function uses a reentrant model
  5935 ;;
  5936                           
  5937                           	psect	text20
  5938  018902                     __ptext20:
  5939                           	opt callstack 0
  5940  018902                     _nanf:
  5941                           	opt callstack 0
  5942                           
  5943                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5944  018902  52E6               	movf	postinc1,f,c
  5945  018904  52E6               	movf	postinc1,f,c
  5946  018906  52E6               	movf	postinc1,f,c
  5947  018908  52E6               	movf	postinc1,f,c
  5948                           
  5949                           ;incstack = 0
  5950  01890A  0EFF               	movlw	255
  5951  01890C  6E09               	movwf	(btemp+8)^0,c
  5952  01890E  0EFF               	movlw	255
  5953  018910  6E0A               	movwf	(btemp+9)^0,c
  5954  018912  0EFF               	movlw	255
  5955  018914  6E0B               	movwf	(btemp+10)^0,c
  5956  018916  0E7F               	movlw	127
  5957  018918  6E0C               	movwf	(btemp+11)^0,c
  5958                           
  5959                           ;stkvar	_u @ sp[(-4)+0]
  5960  01891A  0EFC               	movlw	-4
  5961  01891C  0060  F027  FFE3   	movff	btemp+8,plusw1
  5962  018922  0EFD               	movlw	-3
  5963  018924  0060  F02B  FFE3   	movff	btemp+9,plusw1
  5964  01892A  0EFE               	movlw	-2
  5965  01892C  0060  F02F  FFE3   	movff	btemp+10,plusw1
  5966  018932  0EFF               	movlw	-1
  5967  018934  0060  F033  FFE3   	movff	btemp+11,plusw1
  5968                           
  5969                           ;stkvar	_u @ sp[(-4)+0]
  5970  01893A  0EFC               	movlw	-4
  5971  01893C  006F FF8C  F001    	movff	plusw1,btemp
  5972  018942  0EFD               	movlw	-3
  5973  018944  006F FF8C  F002    	movff	plusw1,btemp+1
  5974  01894A  0EFE               	movlw	-2
  5975  01894C  006F FF8C  F003    	movff	plusw1,btemp+2
  5976  018952  0EFF               	movlw	-1
  5977  018954  006F FF8C  F004    	movff	plusw1,btemp+3
  5978                           
  5979                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  5980  01895A  0EFA               	movlw	250
  5981  01895C  26E1               	addwf	fsr1l,f,c
  5982  01895E  0EFF               	movlw	255
  5983  018960  22E2               	addwfc	fsr1h,f,c
  5984  018962  0012               	return		;funcret
  5985  018964                     __end_of_nanf:
  5986                           	opt callstack 0
  5987                           
  5988 ;; *************** function _get_raw_result *****************
  5989 ;; Defined at:
  5990 ;;		line 72 in file "daq.c"
  5991 ;; Parameters:    Size  Location     Type
  5992 ;;  index           1  [STACK] const enum E16136
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;		None
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  2  [STACK] unsigned short 
  5997 ;; Registers used:
  5998 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/2
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6007 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6008 ;;Total ram usage:        0 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:    7
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		_main
  6015 ;;		_conv_raw_result
  6016 ;; This function uses a reentrant model
  6017 ;;
  6018                           
  6019                           	psect	text21
  6020  0196F6                     __ptext21:
  6021                           	opt callstack 0
  6022  0196F6                     _get_raw_result:
  6023                           	opt callstack 23
  6024                           
  6025                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  6026                           ;stkvar	_index @ sp[(0)+-1]
  6027                           
  6028                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6029                           ;incstack = 0
  6030  0196F6  0EFF               	movlw	-1
  6031  0196F8  50E3               	movf	plusw1,w,c
  6032  0196FA  0D02               	mullw	2
  6033  0196FC  50F3               	movf	243,w,c
  6034  0196FE  0FC9               	addlw	low _R
  6035  019700  6ED9               	movwf	fsr2l,c
  6036  019702  6ADA               	clrf	fsr2h,c
  6037  019704  006F FF78  F001    	movff	postinc2,btemp
  6038  01970A  006F FF74  F002    	movff	postdec2,btemp+1
  6039                           
  6040                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  6041  019710  52E5               	movf	postdec1,f,c
  6042  019712  0012               	return		;funcret
  6043  019714                     __end_of_get_raw_result:
  6044                           	opt callstack 0
  6045                           
  6046 ;; *************** function ___xxtofl *****************
  6047 ;; Defined at:
  6048 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  sign            1  [STACK] unsigned char 
  6051 ;;  val             4  [STACK] long 
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;  arg             4  [STACK] unsigned long 
  6054 ;;  exp             1  [STACK] unsigned char 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  4  [STACK] unsigned char 
  6057 ;; Registers used:
  6058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/1
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6068 ;;Total ram usage:        0 bytes
  6069 ;; Hardware stack levels used:    1
  6070 ;; Hardware stack levels required when called:    7
  6071 ;; This function calls:
  6072 ;;		Nothing
  6073 ;; This function is called by:
  6074 ;;		_conv_raw_result
  6075 ;;		_calc_bsoc
  6076 ;;		_init_bsoc
  6077 ;; This function uses a reentrant model
  6078 ;;
  6079                           
  6080                           	psect	text22
  6081  016374                     __ptext22:
  6082                           	opt callstack 0
  6083  016374                     ___xxtofl:
  6084                           	opt callstack 0
  6085                           
  6086                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6087  016374  0E05               	movlw	5
  6088  016376  26E1               	addwf	fsr1l,f,c
  6089  016378  0E00               	movlw	0
  6090  01637A  22E2               	addwfc	fsr1h,f,c
  6091                           
  6092                           ;stkvar	_sign @ sp[(-5)+-1]
  6093                           
  6094                           ;incstack = 0
  6095  01637C  0EFA               	movlw	-6
  6096  01637E  50E3               	movf	plusw1,w,c
  6097  016380  B4D8               	btfsc	status,2,c
  6098  016382  D01D               	goto	l8824
  6099                           
  6100                           ;stkvar	_val @ sp[(-5)+-5]
  6101  016384  0EF9               	movlw	-7
  6102  016386  AEE3               	btfss	plusw1,7,c
  6103  016388  D01A               	goto	l8824
  6104                           
  6105                           ;stkvar	_val @ sp[(-5)+-5]
  6106  01638A  0EF6               	movlw	-10
  6107  01638C  006F FF8C  F009    	movff	plusw1,btemp+8
  6108  016392  0EF7               	movlw	-9
  6109  016394  006F FF8C  F00A    	movff	plusw1,btemp+9
  6110  01639A  0EF8               	movlw	-8
  6111  01639C  006F FF8C  F00B    	movff	plusw1,btemp+10
  6112  0163A2  0EF9               	movlw	-7
  6113  0163A4  006F FF8C  F00C    	movff	plusw1,btemp+11
  6114  0163AA  1E09               	comf	(btemp+8)^0,f,c
  6115  0163AC  1E0A               	comf	(btemp+9)^0,f,c
  6116  0163AE  1E0B               	comf	(btemp+10)^0,f,c
  6117  0163B0  1E0C               	comf	(btemp+11)^0,f,c
  6118  0163B2  2A09               	incf	(btemp+8)^0,f,c
  6119  0163B4  0E00               	movlw	0
  6120  0163B6  220A               	addwfc	(btemp+9)^0,f,c
  6121  0163B8  220B               	addwfc	(btemp+10)^0,f,c
  6122  0163BA  220C               	addwfc	(btemp+11)^0,f,c
  6123  0163BC  D010               	goto	L5
  6124  0163BE                     l8824:
  6125                           
  6126                           ;stkvar	_val @ sp[(-5)+-5]
  6127  0163BE  0EF6               	movlw	-10
  6128  0163C0  006F FF8C  F009    	movff	plusw1,btemp+8
  6129  0163C6  0EF7               	movlw	-9
  6130  0163C8  006F FF8C  F00A    	movff	plusw1,btemp+9
  6131  0163CE  0EF8               	movlw	-8
  6132  0163D0  006F FF8C  F00B    	movff	plusw1,btemp+10
  6133  0163D6  0EF9               	movlw	-7
  6134  0163D8  006F FF8C  F00C    	movff	plusw1,btemp+11
  6135  0163DE                     L5:
  6136                           
  6137                           ;stkvar	_arg @ sp[(-5)+0]
  6138  0163DE  0EFB               	movlw	-5
  6139  0163E0  0060  F027  FFE3   	movff	btemp+8,plusw1
  6140  0163E6  0EFC               	movlw	-4
  6141  0163E8  0060  F02B  FFE3   	movff	btemp+9,plusw1
  6142  0163EE  0EFD               	movlw	-3
  6143  0163F0  0060  F02F  FFE3   	movff	btemp+10,plusw1
  6144  0163F6  0EFE               	movlw	-2
  6145  0163F8  0060  F033  FFE3   	movff	btemp+11,plusw1
  6146                           
  6147                           ;stkvar	_val @ sp[(-5)+-5]
  6148  0163FE  0EF6               	movlw	-10
  6149  016400  50E3               	movf	plusw1,w,c
  6150  016402  E113               	bnz	l8832
  6151  016404  0EF7               	movlw	-9
  6152  016406  50E3               	movf	plusw1,w,c
  6153  016408  E110               	bnz	l8832
  6154  01640A  0EF8               	movlw	-8
  6155  01640C  50E3               	movf	plusw1,w,c
  6156  01640E  E10D               	bnz	l8832
  6157  016410  0EF9               	movlw	-7
  6158  016412  50E3               	movf	plusw1,w,c
  6159  016414  A4D8               	btfss	status,2,c
  6160  016416  D009               	goto	l8832
  6161  016418  0E00               	movlw	0
  6162  01641A  6E01               	movwf	btemp^0,c
  6163  01641C  0E00               	movlw	0
  6164  01641E  6E02               	movwf	(btemp+1)^0,c
  6165  016420  0E00               	movlw	0
  6166  016422  6E03               	movwf	(btemp+2)^0,c
  6167  016424  0E00               	movlw	0
  6168  016426  6E04               	movwf	(btemp+3)^0,c
  6169  016428  D0A2               	goto	l2909
  6170  01642A                     l8832:
  6171  01642A  0E96               	movlw	150
  6172  01642C  6E0C               	movwf	(btemp+11)^0,c
  6173                           
  6174                           ;stkvar	_exp @ sp[(-5)+4]
  6175  01642E  0EFF               	movlw	-1
  6176  016430  0060  F033  FFE3   	movff	btemp+11,plusw1
  6177  016436  D00B               	goto	l8836
  6178  016438                     l8834:
  6179                           
  6180                           ;stkvar	_exp @ sp[(-5)+4]
  6181  016438  0EFF               	movlw	-1
  6182  01643A  2AE3               	incf	plusw1,f,c
  6183                           
  6184                           ;stkvar	_arg @ sp[(-5)+0]
  6185  01643C  90D8               	bcf	status,0,c
  6186  01643E  0EFE               	movlw	-2
  6187  016440  32E3               	rrcf	plusw1,f,c
  6188  016442  0EFD               	movlw	-3
  6189  016444  32E3               	rrcf	plusw1,f,c
  6190  016446  0EFC               	movlw	-4
  6191  016448  32E3               	rrcf	plusw1,f,c
  6192  01644A  0EFB               	movlw	-5
  6193  01644C  32E3               	rrcf	plusw1,f,c
  6194  01644E                     l8836:
  6195                           
  6196                           ;stkvar	_arg @ sp[(-5)+0]
  6197  01644E  50E1               	movf	fsr1l,w,c
  6198  016450  0FFB               	addlw	-5
  6199  016452  6ED9               	movwf	fsr2l,c
  6200  016454  50E2               	movf	fsr1h,w,c
  6201  016456  6EDA               	movwf	fsr2h,c
  6202  016458  0EFF               	movlw	255
  6203  01645A  22DA               	addwfc	fsr2h,f,c
  6204  01645C  52DE               	movf	postinc2,f,c
  6205  01645E  52DE               	movf	postinc2,f,c
  6206  016460  52DE               	movf	postinc2,f,c
  6207  016462  0EFE               	movlw	254
  6208  016464  14DD               	andwf	postdec2,w,c
  6209  016466  B4D8               	btfsc	status,2,c
  6210  016468  D018               	goto	l8844
  6211  01646A  D7E6               	goto	l8834
  6212  01646C                     l8838:
  6213                           
  6214                           ;stkvar	_exp @ sp[(-5)+4]
  6215  01646C  0EFF               	movlw	-1
  6216  01646E  2AE3               	incf	plusw1,f,c
  6217                           
  6218                           ;stkvar	_arg @ sp[(-5)+0]
  6219  016470  50E1               	movf	fsr1l,w,c
  6220  016472  0FFB               	addlw	-5
  6221  016474  6ED9               	movwf	fsr2l,c
  6222  016476  50E2               	movf	fsr1h,w,c
  6223  016478  6EDA               	movwf	fsr2h,c
  6224  01647A  0EFF               	movlw	255
  6225  01647C  22DA               	addwfc	fsr2h,f,c
  6226  01647E  2ADE               	incf	postinc2,f,c
  6227  016480  0E00               	movlw	0
  6228  016482  22DE               	addwfc	postinc2,f,c
  6229  016484  22DE               	addwfc	postinc2,f,c
  6230  016486  22DE               	addwfc	postinc2,f,c
  6231                           
  6232                           ;stkvar	_arg @ sp[(-5)+0]
  6233  016488  90D8               	bcf	status,0,c
  6234  01648A  0EFE               	movlw	-2
  6235  01648C  32E3               	rrcf	plusw1,f,c
  6236  01648E  0EFD               	movlw	-3
  6237  016490  32E3               	rrcf	plusw1,f,c
  6238  016492  0EFC               	movlw	-4
  6239  016494  32E3               	rrcf	plusw1,f,c
  6240  016496  0EFB               	movlw	-5
  6241  016498  32E3               	rrcf	plusw1,f,c
  6242  01649A                     l8844:
  6243                           
  6244                           ;stkvar	_arg @ sp[(-5)+0]
  6245  01649A  50E1               	movf	fsr1l,w,c
  6246  01649C  0FFB               	addlw	-5
  6247  01649E  6ED9               	movwf	fsr2l,c
  6248  0164A0  50E2               	movf	fsr1h,w,c
  6249  0164A2  6EDA               	movwf	fsr2h,c
  6250  0164A4  0EFF               	movlw	255
  6251  0164A6  22DA               	addwfc	fsr2h,f,c
  6252  0164A8  52DE               	movf	postinc2,f,c
  6253  0164AA  52DE               	movf	postinc2,f,c
  6254  0164AC  52DE               	movf	postinc2,f,c
  6255  0164AE  0EFF               	movlw	255
  6256  0164B0  14DD               	andwf	postdec2,w,c
  6257  0164B2  B4D8               	btfsc	status,2,c
  6258  0164B4  D00C               	goto	l8848
  6259  0164B6  D7DA               	goto	l8838
  6260  0164B8                     l8846:
  6261                           
  6262                           ;stkvar	_exp @ sp[(-5)+4]
  6263  0164B8  0EFF               	movlw	-1
  6264  0164BA  06E3               	decf	plusw1,f,c
  6265                           
  6266                           ;stkvar	_arg @ sp[(-5)+0]
  6267  0164BC  90D8               	bcf	status,0,c
  6268  0164BE  0EFB               	movlw	-5
  6269  0164C0  36E3               	rlcf	plusw1,f,c
  6270  0164C2  0EFC               	movlw	-4
  6271  0164C4  36E3               	rlcf	plusw1,f,c
  6272  0164C6  0EFD               	movlw	-3
  6273  0164C8  36E3               	rlcf	plusw1,f,c
  6274  0164CA  0EFE               	movlw	-2
  6275  0164CC  36E3               	rlcf	plusw1,f,c
  6276  0164CE                     l8848:
  6277                           
  6278                           ;stkvar	_arg @ sp[(-5)+0]
  6279  0164CE  0EFD               	movlw	-3
  6280  0164D0  BEE3               	btfsc	plusw1,7,c
  6281  0164D2  D007               	goto	u8190
  6282                           
  6283                           ;stkvar	_exp @ sp[(-5)+4]
  6284  0164D4  0EFF               	movlw	-1
  6285  0164D6  006F FF8C  F001    	movff	plusw1,btemp
  6286  0164DC  0E02               	movlw	2
  6287  0164DE  6001               	cpfslt	btemp^0,c
  6288  0164E0  D7EB               	goto	l8846
  6289  0164E2                     u8190:
  6290                           
  6291                           ;stkvar	_exp @ sp[(-5)+4]
  6292  0164E2  0EFF               	movlw	-1
  6293  0164E4  B0E3               	btfsc	plusw1,0,c
  6294  0164E6  D002               	goto	l8856
  6295                           
  6296                           ;stkvar	_arg @ sp[(-5)+0]
  6297  0164E8  0EFD               	movlw	-3
  6298  0164EA  9EE3               	bcf	plusw1,7,c
  6299  0164EC                     l8856:
  6300                           
  6301                           ;stkvar	_exp @ sp[(-5)+4]
  6302  0164EC  50E1               	movf	fsr1l,w,c
  6303  0164EE  0FFF               	addlw	-1
  6304  0164F0  6ED9               	movwf	fsr2l,c
  6305  0164F2  50E2               	movf	fsr1h,w,c
  6306  0164F4  6EDA               	movwf	fsr2h,c
  6307  0164F6  0EFF               	movlw	255
  6308  0164F8  22DA               	addwfc	fsr2h,f,c
  6309  0164FA  90D8               	bcf	status,0,c
  6310  0164FC  32DF               	rrcf	indf2,f,c
  6311                           
  6312                           ;stkvar	_exp @ sp[(-5)+4]
  6313  0164FE  0EFF               	movlw	-1
  6314  016500  006F FF8C  F00C    	movff	plusw1,btemp+11
  6315  016506  0060  F030  F005   	movff	btemp+11,btemp+4
  6316  01650C  6A06               	clrf	(btemp+5)^0,c
  6317  01650E  6A07               	clrf	(btemp+6)^0,c
  6318  016510  6A08               	clrf	(btemp+7)^0,c
  6319  016512  0060  F014  F008   	movff	btemp+4,btemp+7
  6320  016518  6A07               	clrf	(btemp+6)^0,c
  6321  01651A  6A06               	clrf	(btemp+5)^0,c
  6322  01651C  6A05               	clrf	(btemp+4)^0,c
  6323                           
  6324                           ;stkvar	_arg @ sp[(-5)+0]
  6325  01651E  50E1               	movf	fsr1l,w,c
  6326  016520  0FFB               	addlw	-5
  6327  016522  6ED9               	movwf	fsr2l,c
  6328  016524  50E2               	movf	fsr1h,w,c
  6329  016526  6EDA               	movwf	fsr2h,c
  6330  016528  0EFF               	movlw	255
  6331  01652A  22DA               	addwfc	fsr2h,f,c
  6332  01652C  5005               	movf	(btemp+4)^0,w,c
  6333  01652E  12DE               	iorwf	postinc2,f,c
  6334  016530  5006               	movf	(btemp+5)^0,w,c
  6335  016532  12DE               	iorwf	postinc2,f,c
  6336  016534  5007               	movf	(btemp+6)^0,w,c
  6337  016536  12DE               	iorwf	postinc2,f,c
  6338  016538  5008               	movf	(btemp+7)^0,w,c
  6339  01653A  12DE               	iorwf	postinc2,f,c
  6340                           
  6341                           ;stkvar	_sign @ sp[(-5)+-1]
  6342  01653C  0EFA               	movlw	-6
  6343  01653E  50E3               	movf	plusw1,w,c
  6344  016540  B4D8               	btfsc	status,2,c
  6345  016542  D005               	goto	l8866
  6346                           
  6347                           ;stkvar	_val @ sp[(-5)+-5]
  6348  016544  0EF9               	movlw	-7
  6349  016546  AEE3               	btfss	plusw1,7,c
  6350  016548  D002               	goto	l8866
  6351                           
  6352                           ;stkvar	_arg @ sp[(-5)+0]
  6353  01654A  0EFE               	movlw	-2
  6354  01654C  8EE3               	bsf	plusw1,7,c
  6355  01654E                     l8866:
  6356                           
  6357                           ;stkvar	_arg @ sp[(-5)+0]
  6358  01654E  0EFB               	movlw	-5
  6359  016550  006F FF8C  F001    	movff	plusw1,btemp
  6360  016556  0EFC               	movlw	-4
  6361  016558  006F FF8C  F002    	movff	plusw1,btemp+1
  6362  01655E  0EFD               	movlw	-3
  6363  016560  006F FF8C  F003    	movff	plusw1,btemp+2
  6364  016566  0EFE               	movlw	-2
  6365  016568  006F FF8C  F004    	movff	plusw1,btemp+3
  6366  01656E                     l2909:
  6367                           
  6368                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  6369  01656E  0EF6               	movlw	246
  6370  016570  26E1               	addwf	fsr1l,f,c
  6371  016572  0EFF               	movlw	255
  6372  016574  22E2               	addwfc	fsr1h,f,c
  6373  016576  0012               	return		;funcret
  6374  016578                     __end_of___xxtofl:
  6375                           	opt callstack 0
  6376                           
  6377 ;; *************** function _clear_hid_pflags *****************
  6378 ;; Defined at:
  6379 ;;		line 51 in file "hid.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;  h               1  [STACK] PTR struct H_data
  6382 ;;		 -> H(7), 
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;		None
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  1  [STACK] void 
  6387 ;; Registers used:
  6388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6389 ;; Tracked objects:
  6390 ;;		On entry : 3F/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6398 ;;Total ram usage:        0 bytes
  6399 ;; Hardware stack levels used:    1
  6400 ;; Hardware stack levels required when called:    7
  6401 ;; This function calls:
  6402 ;;		Nothing
  6403 ;; This function is called by:
  6404 ;;		_main
  6405 ;; This function uses a reentrant model
  6406 ;;
  6407                           
  6408                           	psect	text23
  6409  0195C0                     __ptext23:
  6410                           	opt callstack 0
  6411  0195C0                     _clear_hid_pflags:
  6412                           	opt callstack 23
  6413                           
  6414                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  6415                           ;stkvar	_h @ sp[(0)+-1]
  6416                           
  6417                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6418                           ;incstack = 0
  6419  0195C0  0EFF               	movlw	-1
  6420  0195C2  50E3               	movf	plusw1,w,c
  6421  0195C4  6ED9               	movwf	fsr2l,c
  6422  0195C6  6ADA               	clrf	fsr2h,c
  6423  0195C8  0E03               	movlw	3
  6424  0195CA  26D9               	addwf	fsr2l,f,c
  6425  0195CC  0E00               	movlw	0
  6426  0195CE  6EDF               	movwf	indf2,c
  6427                           
  6428                           ;hid.c: 54:  h->enter_p = SW_OFF;
  6429                           ;stkvar	_h @ sp[(0)+-1]
  6430  0195D0  0EFF               	movlw	-1
  6431  0195D2  50E3               	movf	plusw1,w,c
  6432  0195D4  6ED9               	movwf	fsr2l,c
  6433  0195D6  6ADA               	clrf	fsr2h,c
  6434  0195D8  0E05               	movlw	5
  6435  0195DA  26D9               	addwf	fsr2l,f,c
  6436  0195DC  0E00               	movlw	0
  6437  0195DE  6EDF               	movwf	indf2,c
  6438                           
  6439                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6440  0195E0  52E5               	movf	postdec1,f,c
  6441  0195E2  0012               	return		;funcret
  6442  0195E4                     __end_of_clear_hid_pflags:
  6443                           	opt callstack 0
  6444                           
  6445 ;; *************** function _clear_adc_scan *****************
  6446 ;; Defined at:
  6447 ;;		line 64 in file "daq.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;		None
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;		None
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  1  [STACK] void 
  6454 ;; Registers used:
  6455 ;;		None
  6456 ;; Tracked objects:
  6457 ;;		On entry : 0/1
  6458 ;;		On exit  : 3F/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6465 ;;Total ram usage:        0 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:    7
  6468 ;; This function calls:
  6469 ;;		Nothing
  6470 ;; This function is called by:
  6471 ;;		_main
  6472 ;; This function uses a reentrant model
  6473 ;;
  6474                           
  6475                           	psect	text24
  6476  019916                     __ptext24:
  6477                           	opt callstack 0
  6478  019916                     _clear_adc_scan:
  6479                           	opt callstack 23
  6480                           
  6481                           ;daq.c: 66:  R.done = 0;
  6482                           
  6483                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6484                           ;incstack = 0
  6485  019916  0100               	movlb	0	; () banked
  6486  019918  6BF0               	clrf	(_R+39)& (0+255),b	;volatile
  6487                           
  6488                           ; BSR set to: 0
  6489                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  6490  01991A  0012               	return		;funcret
  6491  01991C                     __end_of_clear_adc_scan:
  6492                           	opt callstack 0
  6493                           
  6494 ;; *************** function _check_help *****************
  6495 ;; Defined at:
  6496 ;;		line 40 in file "mconfig.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  flipper         1  [STACK] const _Bool 
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;  estatus         1    0        _Bool 
  6501 ;; Return value:  Size  Location     Type
  6502 ;;                  1  [STACK] _Bool 
  6503 ;; Registers used:
  6504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6505 ;; Tracked objects:
  6506 ;;		On entry : 3F/2
  6507 ;;		On exit  : 0/0
  6508 ;;		Unchanged: 0/0
  6509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6514 ;;Total ram usage:        0 bytes
  6515 ;; Hardware stack levels used:    1
  6516 ;; Hardware stack levels required when called:   19
  6517 ;; This function calls:
  6518 ;;		_StartTimer
  6519 ;;		_TimerDone
  6520 ;;		_display_help
  6521 ;;		_display_info
  6522 ;;		_get_vterm_ptr
  6523 ;;		_help_button
  6524 ;;		_mode_lamp_bright
  6525 ;;		_mode_lamp_dim
  6526 ;;		_set_display_info
  6527 ;;		_set_temp_display_help
  6528 ;;		_set_vterm
  6529 ;;		_sprintf
  6530 ;;		_update_lcd
  6531 ;;		_vterm_dump
  6532 ;; This function is called by:
  6533 ;;		_main
  6534 ;; This function uses a reentrant model
  6535 ;;
  6536                           
  6537                           	psect	text25
  6538  016162                     __ptext25:
  6539                           	opt callstack 0
  6540  016162                     _check_help:
  6541                           	opt callstack 11
  6542                           
  6543                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  6544                           
  6545                           ; BSR set to: 0
  6546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6547                           ;incstack = 0
  6548  016162  ECC9  F0C7         	call	_help_button	;wreg free
  6549  016166  5001               	movf	btemp^0,w,c
  6550  016168  B4D8               	btfsc	status,2,c
  6551  01616A  D0D0               	goto	l11358
  6552  01616C  EC7B  F0CC         	call	_display_info	;wreg free
  6553  016170  0401               	decf	btemp^0,w,c
  6554  016172  B4D8               	btfsc	status,2,c
  6555  016174  D0CB               	goto	l11358
  6556                           
  6557                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  6558  016176  0EDC               	movlw	220
  6559  016178  6EE6               	movwf	postinc1,c
  6560  01617A  0E05               	movlw	5
  6561  01617C  6EE6               	movwf	postinc1,c
  6562  01617E  0E0B               	movlw	11
  6563  016180  6EE6               	movwf	postinc1,c
  6564  016182  EC2A  F0C7         	call	_StartTimer	;wreg free
  6565                           
  6566                           ;mconfig.c: 48:   if (V.debug)
  6567  016186  0102               	movlb	2	; () banked
  6568  016188  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  6569                           
  6570                           ; BSR set to: 2
  6571                           ;mconfig.c: 49:    vterm_dump();
  6572  01618A  EC5C  F0B7         	call	_vterm_dump	;wreg free
  6573                           
  6574                           ;mconfig.c: 51:   set_vterm(1);
  6575  01618E  0E01               	movlw	1
  6576  016190  6EE6               	movwf	postinc1,c
  6577  016192  EC8A  F0CB         	call	_set_vterm	;wreg free
  6578                           
  6579                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  6580  016196  EC7B  F0CC         	call	_display_info	;wreg free
  6581  01619A  5001               	movf	btemp^0,w,c
  6582  01619C  6EE6               	movwf	postinc1,c
  6583  01619E  EC3B  F0CC         	call	_set_temp_display_help	;wreg free
  6584                           
  6585                           ; BSR set to: 2
  6586                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  6587  0161A2  0E01               	movlw	1
  6588  0161A4  6EE6               	movwf	postinc1,c
  6589  0161A6  EC99  F0CB         	call	_set_display_info	;wreg free
  6590                           
  6591                           ;mconfig.c: 54:   if (flipper) {
  6592                           ;stkvar	_flipper @ sp[(0)+-1]
  6593  0161AA  0EFF               	movlw	-1
  6594  0161AC  50E3               	movf	plusw1,w,c
  6595  0161AE  B4D8               	btfsc	status,2,c
  6596  0161B0  D019               	goto	l11344
  6597                           
  6598                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  6599  0161B2  0EC1               	movlw	low STR_27
  6600  0161B4  6EE6               	movwf	postinc1,c
  6601  0161B6  0EFF               	movlw	high STR_27
  6602  0161B8  6EE6               	movwf	postinc1,c
  6603  0161BA  0E80               	movlw	low STR_29
  6604  0161BC  6EE6               	movwf	postinc1,c
  6605  0161BE  0EFE               	movlw	high STR_29
  6606  0161C0  6EE6               	movwf	postinc1,c
  6607  0161C2  0E01               	movlw	1
  6608  0161C4  6EE6               	movwf	postinc1,c
  6609  0161C6  0E00               	movlw	0
  6610  0161C8  6EE6               	movwf	postinc1,c
  6611  0161CA  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  6612  0161CE  0060  F007  FFE6   	movff	btemp,postinc1
  6613  0161D4  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6614  0161DA  0E06               	movlw	6
  6615  0161DC  6EE6               	movwf	postinc1,c
  6616  0161DE  ECB7  F0BA         	call	_sprintf	;wreg free
  6617                           
  6618                           ;mconfig.c: 56:   } else {
  6619  0161E2  D018               	goto	l1669
  6620  0161E4                     l11344:
  6621                           
  6622                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  6623  0161E4  0ED7               	movlw	low STR_28
  6624  0161E6  6EE6               	movwf	postinc1,c
  6625  0161E8  0EFF               	movlw	high STR_28
  6626  0161EA  6EE6               	movwf	postinc1,c
  6627  0161EC  0E80               	movlw	low STR_29
  6628  0161EE  6EE6               	movwf	postinc1,c
  6629  0161F0  0EFE               	movlw	high STR_29
  6630  0161F2  6EE6               	movwf	postinc1,c
  6631  0161F4  0E01               	movlw	1
  6632  0161F6  6EE6               	movwf	postinc1,c
  6633  0161F8  0E00               	movlw	0
  6634  0161FA  6EE6               	movwf	postinc1,c
  6635  0161FC  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  6636  016200  0060  F007  FFE6   	movff	btemp,postinc1
  6637  016206  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6638  01620C  0E06               	movlw	6
  6639  01620E  6EE6               	movwf	postinc1,c
  6640  016210  ECB7  F0BA         	call	_sprintf	;wreg free
  6641  016214                     l1669:
  6642                           
  6643                           ; BSR set to: 0
  6644                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  6645  016214  0102               	movlb	2	; () banked
  6646  016216  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6647  016218  32E8               	rrcf	wreg,f,c
  6648  01621A  32E8               	rrcf	wreg,f,c
  6649  01621C  0B03               	andlw	3
  6650  01621E  0D24               	mullw	36
  6651  016220  0E12               	movlw	18
  6652  016222  26F3               	addwf	243,f,c
  6653  016224  0E00               	movlw	0
  6654  016226  22F4               	addwfc	244,f,c
  6655  016228  0E9D               	movlw	low _T
  6656  01622A  6E0B               	movwf	(btemp+10)^0,c
  6657  01622C  0EFD               	movlw	high _T
  6658  01622E  6E0C               	movwf	(btemp+11)^0,c
  6659  016230  50F3               	movf	243,w,c
  6660  016232  260B               	addwf	(btemp+10)^0,f,c
  6661  016234  50F4               	movf	244,w,c
  6662  016236  220C               	addwfc	(btemp+11)^0,f,c
  6663  016238  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6664  01623E  0060  F033  FFE6   	movff	btemp+11,postinc1
  6665  016244  0ECD               	movlw	low STR_31
  6666  016246  6EE6               	movwf	postinc1,c
  6667  016248  0EFF               	movlw	high STR_31
  6668  01624A  6EE6               	movwf	postinc1,c
  6669  01624C  0E01               	movlw	1
  6670  01624E  6EE6               	movwf	postinc1,c
  6671  016250  0E01               	movlw	1
  6672  016252  6EE6               	movwf	postinc1,c
  6673  016254  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  6674  016258  0060  F007  FFE6   	movff	btemp,postinc1
  6675  01625E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6676  016264  0E06               	movlw	6
  6677  016266  6EE6               	movwf	postinc1,c
  6678  016268  ECB7  F0BA         	call	_sprintf	;wreg free
  6679                           
  6680                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  6681  01626C  0102               	movlb	2	; () banked
  6682  01626E  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6683  016270  32E8               	rrcf	wreg,f,c
  6684  016272  32E8               	rrcf	wreg,f,c
  6685  016274  0B03               	andlw	3
  6686  016276  0D24               	mullw	36
  6687  016278  0E9D               	movlw	low _T
  6688  01627A  6E0B               	movwf	(btemp+10)^0,c
  6689  01627C  0EFD               	movlw	high _T
  6690  01627E  6E0C               	movwf	(btemp+11)^0,c
  6691  016280  50F3               	movf	243,w,c
  6692  016282  260B               	addwf	(btemp+10)^0,f,c
  6693  016284  50F4               	movf	244,w,c
  6694  016286  220C               	addwfc	(btemp+11)^0,f,c
  6695  016288  0060  F02F  FFE6   	movff	btemp+10,postinc1
  6696  01628E  0060  F033  FFE6   	movff	btemp+11,postinc1
  6697  016294  0ECD               	movlw	low STR_31
  6698  016296  6EE6               	movwf	postinc1,c
  6699  016298  0EFF               	movlw	high STR_31
  6700  01629A  6EE6               	movwf	postinc1,c
  6701  01629C  0E01               	movlw	1
  6702  01629E  6EE6               	movwf	postinc1,c
  6703  0162A0  0E02               	movlw	2
  6704  0162A2  6EE6               	movwf	postinc1,c
  6705  0162A4  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  6706  0162A8  0060  F007  FFE6   	movff	btemp,postinc1
  6707  0162AE  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6708  0162B4  0E06               	movlw	6
  6709  0162B6  6EE6               	movwf	postinc1,c
  6710  0162B8  ECB7  F0BA         	call	_sprintf	;wreg free
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;mconfig.c: 61:   V.help_id++;
  6714  0162BC  EE20  F29B         	lfsr	2,_V+155	;volatile
  6715  0162C0  38DF               	swapf	223,w,c
  6716  0162C2  6E0C               	movwf	(btemp+11)^0,c
  6717  0162C4  320C               	rrcf	(btemp+11)^0,f,c
  6718  0162C6  300C               	rrcf	(btemp+11)^0,w,c
  6719  0162C8  0B03               	andlw	3
  6720  0162CA  6E0C               	movwf	(btemp+11)^0,c
  6721  0162CC  2A0C               	incf	(btemp+11)^0,f,c
  6722  0162CE  3A0C               	swapf	(btemp+11)^0,f,c
  6723  0162D0  360C               	rlcf	(btemp+11)^0,f,c
  6724  0162D2  360C               	rlcf	(btemp+11)^0,f,c
  6725  0162D4  50DF               	movf	223,w,c
  6726  0162D6  180C               	xorwf	(btemp+11)^0,w,c
  6727  0162D8  0B3F               	andlw	-193
  6728  0162DA  180C               	xorwf	(btemp+11)^0,w,c
  6729  0162DC  6EDF               	movwf	223,c
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  6733  0162DE  0EB8               	movlw	184
  6734  0162E0  6EE6               	movwf	postinc1,c
  6735  0162E2  0E0B               	movlw	11
  6736  0162E4  6EE6               	movwf	postinc1,c
  6737  0162E6  0E09               	movlw	9
  6738  0162E8  6EE6               	movwf	postinc1,c
  6739  0162EA  EC2A  F0C7         	call	_StartTimer	;wreg free
  6740                           
  6741                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  6742  0162EE  0EB8               	movlw	184
  6743  0162F0  6EE6               	movwf	postinc1,c
  6744  0162F2  0E0B               	movlw	11
  6745  0162F4  6EE6               	movwf	postinc1,c
  6746  0162F6  0E07               	movlw	7
  6747  0162F8  6EE6               	movwf	postinc1,c
  6748  0162FA  EC2A  F0C7         	call	_StartTimer	;wreg free
  6749                           
  6750                           ;mconfig.c: 64:   mode_lamp_bright();
  6751  0162FE  EC4A  F0CC         	call	_mode_lamp_bright	;wreg free
  6752                           
  6753                           ;mconfig.c: 65:   update_lcd(1);
  6754  016302  0E01               	movlw	1
  6755  016304  6EE6               	movwf	postinc1,c
  6756  016306  EC2F  F0BA         	call	_update_lcd	;wreg free
  6757                           
  6758                           ;mconfig.c: 67:  } else {
  6759  01630A  D032               	goto	l1670
  6760  01630C                     l11358:
  6761                           
  6762                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  6763  01630C  0E09               	movlw	9
  6764  01630E  6EE6               	movwf	postinc1,c
  6765  016310  EC8B  F0C9         	call	_TimerDone	;wreg free
  6766  016314  5001               	movf	btemp^0,w,c
  6767  016316  B4D8               	btfsc	status,2,c
  6768  016318  D02B               	goto	l1670
  6769                           
  6770                           ;mconfig.c: 69:    set_vterm(0);
  6771  01631A  0E00               	movlw	0
  6772  01631C  6EE6               	movwf	postinc1,c
  6773  01631E  EC8A  F0CB         	call	_set_vterm	;wreg free
  6774                           
  6775                           ;mconfig.c: 70:    V.help = 0;
  6776  016322  0102               	movlb	2	; () banked
  6777  016324  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  6778                           
  6779                           ; BSR set to: 2
  6780                           ;mconfig.c: 71:    set_display_info(display_help());
  6781  016326  EC7F  F0CC         	call	_display_help	;wreg free
  6782  01632A  5001               	movf	btemp^0,w,c
  6783  01632C  6EE6               	movwf	postinc1,c
  6784  01632E  EC99  F0CB         	call	_set_display_info	;wreg free
  6785                           
  6786                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  6787  016332  0060  FA57  FFE6   	movff	_V+149,postinc1
  6788  016338  0060  FA5B  FFE6   	movff	_V+150,postinc1
  6789  01633E  ECEF  F0CB         	call	_mode_lamp_dim	;wreg free
  6790                           
  6791                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  6792  016342  0E0B               	movlw	11
  6793  016344  6EE6               	movwf	postinc1,c
  6794  016346  EC8B  F0C9         	call	_TimerDone	;wreg free
  6795  01634A  5001               	movf	btemp^0,w,c
  6796  01634C  B4D8               	btfsc	status,2,c
  6797  01634E  D010               	goto	l1670
  6798                           
  6799                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  6800  016350  0102               	movlb	2	; () banked
  6801  016352  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  6802  016354  A4D8               	btfss	status,2,c
  6803  016356  D002               	goto	u10850
  6804  016358  0E01               	movlw	1
  6805  01635A  D001               	goto	u10860
  6806  01635C                     u10850:
  6807  01635C  0E00               	movlw	0
  6808  01635E                     u10860:
  6809  01635E  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  6810                           
  6811                           ; BSR set to: 2
  6812                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  6813  016360  0EDC               	movlw	220
  6814  016362  6EE6               	movwf	postinc1,c
  6815  016364  0E05               	movlw	5
  6816  016366  6EE6               	movwf	postinc1,c
  6817  016368  0E0B               	movlw	11
  6818  01636A  6EE6               	movwf	postinc1,c
  6819  01636C  EC2A  F0C7         	call	_StartTimer	;wreg free
  6820  016370                     l1670:
  6821                           
  6822                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6823  016370  52E5               	movf	postdec1,f,c
  6824  016372  0012               	return		;funcret
  6825  016374                     __end_of_check_help:
  6826                           	opt callstack 0
  6827                           
  6828 ;; *************** function _vterm_dump *****************
  6829 ;; Defined at:
  6830 ;;		line 121 in file "mconfig.c"
  6831 ;; Parameters:    Size  Location     Type
  6832 ;;		None
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;		None
  6835 ;; Return value:  Size  Location     Type
  6836 ;;                  1  [STACK] void 
  6837 ;; Registers used:
  6838 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6839 ;; Tracked objects:
  6840 ;;		On entry : 3F/2
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6848 ;;Total ram usage:        0 bytes
  6849 ;; Hardware stack levels used:    1
  6850 ;; Hardware stack levels required when called:   18
  6851 ;; This function calls:
  6852 ;;		_WaitMs
  6853 ;;		_eaDogM_WriteStringAtPos
  6854 ;;		_get_vterm_ptr
  6855 ;;		_sprintf
  6856 ;;		_wait_lcd_done
  6857 ;; This function is called by:
  6858 ;;		_check_help
  6859 ;; This function uses a reentrant model
  6860 ;;
  6861                           
  6862                           	psect	text26
  6863  016EB8                     __ptext26:
  6864                           	opt callstack 0
  6865  016EB8                     _vterm_dump:
  6866                           	opt callstack 11
  6867                           
  6868                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  6869                           
  6870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6871                           ;incstack = 0
  6872  016EB8  0E01               	movlw	1
  6873  016EBA  6EE6               	movwf	postinc1,c
  6874  016EBC  0E00               	movlw	0
  6875  016EBE  6EE6               	movwf	postinc1,c
  6876  016EC0  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  6877  016EC4  0060  F007  FFE6   	movff	btemp,postinc1
  6878  016ECA  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6879  016ED0  0E00               	movlw	0
  6880  016ED2  6EE6               	movwf	postinc1,c
  6881  016ED4  0E00               	movlw	0
  6882  016ED6  6EE6               	movwf	postinc1,c
  6883  016ED8  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  6884  016EDC  0060  F007  FFE6   	movff	btemp,postinc1
  6885  016EE2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6886  016EE8  0EA3               	movlw	low STR_33
  6887  016EEA  6EE6               	movwf	postinc1,c
  6888  016EEC  0EFF               	movlw	high STR_33
  6889  016EEE  6EE6               	movwf	postinc1,c
  6890  016EF0  0E01               	movlw	low (_V+1)
  6891  016EF2  6EE6               	movwf	postinc1,c
  6892  016EF4  0E02               	movlw	high (_V+1)
  6893  016EF6  6EE6               	movwf	postinc1,c
  6894  016EF8  0E08               	movlw	8
  6895  016EFA  6EE6               	movwf	postinc1,c
  6896  016EFC  ECB7  F0BA         	call	_sprintf	;wreg free
  6897                           
  6898                           ; BSR set to: 0
  6899                           ;mconfig.c: 124:  wait_lcd_done();
  6900  016F00  ECC6  F0CB         	call	_wait_lcd_done	;wreg free
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  6904  016F04  0E01               	movlw	low (_V+1)
  6905  016F06  6EE6               	movwf	postinc1,c
  6906  016F08  0E02               	movlw	high (_V+1)
  6907  016F0A  6EE6               	movwf	postinc1,c
  6908  016F0C  0E00               	movlw	0
  6909  016F0E  6EE6               	movwf	postinc1,c
  6910  016F10  0E00               	movlw	0
  6911  016F12  6EE6               	movwf	postinc1,c
  6912  016F14  EC1B  F0C8         	call	_eaDogM_WriteStringAtPos	;wreg free
  6913                           
  6914                           ; BSR set to: 59
  6915                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  6916  016F18  0E01               	movlw	1
  6917  016F1A  6EE6               	movwf	postinc1,c
  6918  016F1C  0E01               	movlw	1
  6919  016F1E  6EE6               	movwf	postinc1,c
  6920  016F20  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  6921  016F24  0060  F007  FFE6   	movff	btemp,postinc1
  6922  016F2A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6923  016F30  0E00               	movlw	0
  6924  016F32  6EE6               	movwf	postinc1,c
  6925  016F34  0E01               	movlw	1
  6926  016F36  6EE6               	movwf	postinc1,c
  6927  016F38  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  6928  016F3C  0060  F007  FFE6   	movff	btemp,postinc1
  6929  016F42  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6930  016F48  0EA3               	movlw	low STR_33
  6931  016F4A  6EE6               	movwf	postinc1,c
  6932  016F4C  0EFF               	movlw	high STR_33
  6933  016F4E  6EE6               	movwf	postinc1,c
  6934  016F50  0E01               	movlw	low (_V+1)
  6935  016F52  6EE6               	movwf	postinc1,c
  6936  016F54  0E02               	movlw	high (_V+1)
  6937  016F56  6EE6               	movwf	postinc1,c
  6938  016F58  0E08               	movlw	8
  6939  016F5A  6EE6               	movwf	postinc1,c
  6940  016F5C  ECB7  F0BA         	call	_sprintf	;wreg free
  6941                           
  6942                           ; BSR set to: 0
  6943                           ;mconfig.c: 127:  wait_lcd_done();
  6944  016F60  ECC6  F0CB         	call	_wait_lcd_done	;wreg free
  6945                           
  6946                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  6947  016F64  0E01               	movlw	low (_V+1)
  6948  016F66  6EE6               	movwf	postinc1,c
  6949  016F68  0E02               	movlw	high (_V+1)
  6950  016F6A  6EE6               	movwf	postinc1,c
  6951  016F6C  0E00               	movlw	0
  6952  016F6E  6EE6               	movwf	postinc1,c
  6953  016F70  0E01               	movlw	1
  6954  016F72  6EE6               	movwf	postinc1,c
  6955  016F74  EC1B  F0C8         	call	_eaDogM_WriteStringAtPos	;wreg free
  6956                           
  6957                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  6958  016F78  0E01               	movlw	1
  6959  016F7A  6EE6               	movwf	postinc1,c
  6960  016F7C  0E02               	movlw	2
  6961  016F7E  6EE6               	movwf	postinc1,c
  6962  016F80  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  6963  016F84  0060  F007  FFE6   	movff	btemp,postinc1
  6964  016F8A  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6965  016F90  0E00               	movlw	0
  6966  016F92  6EE6               	movwf	postinc1,c
  6967  016F94  0E02               	movlw	2
  6968  016F96  6EE6               	movwf	postinc1,c
  6969  016F98  ECCC  F0C8         	call	_get_vterm_ptr	;wreg free
  6970  016F9C  0060  F007  FFE6   	movff	btemp,postinc1
  6971  016FA2  0060  F00B  FFE6   	movff	btemp+1,postinc1
  6972  016FA8  0EA3               	movlw	low STR_33
  6973  016FAA  6EE6               	movwf	postinc1,c
  6974  016FAC  0EFF               	movlw	high STR_33
  6975  016FAE  6EE6               	movwf	postinc1,c
  6976  016FB0  0E01               	movlw	low (_V+1)
  6977  016FB2  6EE6               	movwf	postinc1,c
  6978  016FB4  0E02               	movlw	high (_V+1)
  6979  016FB6  6EE6               	movwf	postinc1,c
  6980  016FB8  0E08               	movlw	8
  6981  016FBA  6EE6               	movwf	postinc1,c
  6982  016FBC  ECB7  F0BA         	call	_sprintf	;wreg free
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;mconfig.c: 130:  wait_lcd_done();
  6986  016FC0  ECC6  F0CB         	call	_wait_lcd_done	;wreg free
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  6990  016FC4  0E01               	movlw	low (_V+1)
  6991  016FC6  6EE6               	movwf	postinc1,c
  6992  016FC8  0E02               	movlw	high (_V+1)
  6993  016FCA  6EE6               	movwf	postinc1,c
  6994  016FCC  0E00               	movlw	0
  6995  016FCE  6EE6               	movwf	postinc1,c
  6996  016FD0  0E02               	movlw	2
  6997  016FD2  6EE6               	movwf	postinc1,c
  6998  016FD4  EC1B  F0C8         	call	_eaDogM_WriteStringAtPos	;wreg free
  6999                           
  7000                           ; BSR set to: 59
  7001                           ;mconfig.c: 132:  WaitMs(3000);
  7002  016FD8  0EB8               	movlw	184
  7003  016FDA  6EE6               	movwf	postinc1,c
  7004  016FDC  0E0B               	movlw	11
  7005  016FDE  6EE6               	movwf	postinc1,c
  7006  016FE0  EC00  F0C8         	call	_WaitMs	;wreg free
  7007                           
  7008                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7009  016FE4  0012               	return		;funcret
  7010  016FE6                     __end_of_vterm_dump:
  7011                           	opt callstack 0
  7012                           
  7013 ;; *************** function _sprintf *****************
  7014 ;; Defined at:
  7015 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  7016 ;; Parameters:    Size  Location     Type
  7017 ;;  s               2  [STACK] PTR unsigned char 
  7018 ;;		 -> D.lcd(288), D(290), V(188), 
  7019 ;;  fmt             2  [STACK] PTR const unsigned char 
  7020 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  7021 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  7022 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  7023 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  7024 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  7025 ;;		 -> STR_19(20), STR_18(19), STR_17(19), STR_16(19), 
  7026 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  7027 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  7028 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  7029 ;;		 -> STR_1(17), 
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;  f               6  [STACK] struct _IO_FILE
  7032 ;;  ap              2  [STACK] PTR void [1]
  7033 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7034 ;;  ret             2    0        int 
  7035 ;; Return value:  Size  Location     Type
  7036 ;;                  2  [STACK] int 
  7037 ;; Registers used:
  7038 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7039 ;; Tracked objects:
  7040 ;;		On entry : 0/1
  7041 ;;		On exit  : 3F/0
  7042 ;;		Unchanged: 0/0
  7043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7048 ;;Total ram usage:        0 bytes
  7049 ;; Hardware stack levels used:    1
  7050 ;; Hardware stack levels required when called:   15
  7051 ;; This function calls:
  7052 ;;		_vfprintf
  7053 ;; This function is called by:
  7054 ;;		_main
  7055 ;;		_check_help
  7056 ;;		_vterm_dump
  7057 ;; This function uses a reentrant model
  7058 ;;
  7059                           
  7060                           	psect	text27
  7061  01756E                     __ptext27:
  7062                           	opt callstack 0
  7063  01756E                     _sprintf:
  7064                           	opt callstack 0
  7065                           
  7066                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7067  01756E  0E08               	movlw	8
  7068  017570  26E1               	addwf	fsr1l,f,c
  7069  017572  0E00               	movlw	0
  7070  017574  22E2               	addwfc	fsr1h,f,c
  7071                           
  7072                           ;incstack = 0
  7073  017576  0EFE               	movlw	254
  7074  017578  6E0B               	movwf	(btemp+10)^0,c
  7075  01757A  0EFF               	movlw	255
  7076  01757C  6E0C               	movwf	(btemp+11)^0,c
  7077                           
  7078                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  7079  01757E  0EF5               	movlw	245
  7080  017580  24E1               	addwf	fsr1l,w,c
  7081  017582  6E09               	movwf	(btemp+8)^0,c
  7082  017584  0EFF               	movlw	255
  7083  017586  20E2               	addwfc	fsr1h,w,c
  7084  017588  6E0A               	movwf	(btemp+9)^0,c
  7085  01758A  500B               	movf	(btemp+10)^0,w,c
  7086  01758C  2609               	addwf	(btemp+8)^0,f,c
  7087  01758E  500C               	movf	(btemp+11)^0,w,c
  7088  017590  220A               	addwfc	(btemp+9)^0,f,c
  7089                           
  7090                           ;stkvar	_ap @ sp[(-8)+6]
  7091  017592  0EFF               	movlw	-1
  7092  017594  0060  F02B  FFE3   	movff	btemp+9,plusw1
  7093  01759A  0EFE               	movlw	-2
  7094  01759C  0060  F027  FFE3   	movff	btemp+8,plusw1
  7095                           
  7096                           ;stkvar	_s @ sp[(-8)+-3]
  7097  0175A2  0EF5               	movlw	-11
  7098  0175A4  006F FF8C  F00B    	movff	plusw1,btemp+10
  7099  0175AA  0EF6               	movlw	-10
  7100  0175AC  006F FF8C  F00C    	movff	plusw1,btemp+11
  7101                           
  7102                           ;stkvar	_f @ sp[(-8)+0]
  7103  0175B2  0EF9               	movlw	-7
  7104  0175B4  0060  F033  FFE3   	movff	btemp+11,plusw1
  7105  0175BA  0EF8               	movlw	-8
  7106  0175BC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  7107                           
  7108                           ;stkvar	_f @ sp[(-8)+0]
  7109  0175C2  0EFA               	movlw	250
  7110  0175C4  24E1               	addwf	fsr1l,w,c
  7111  0175C6  6ED9               	movwf	fsr2l,c
  7112  0175C8  0EFF               	movlw	255
  7113  0175CA  20E2               	addwfc	fsr1h,w,c
  7114  0175CC  6EDA               	movwf	fsr2h,c
  7115  0175CE  0E00               	movlw	0
  7116  0175D0  6EDE               	movwf	postinc2,c
  7117  0175D2  0E00               	movlw	0
  7118  0175D4  6EDD               	movwf	postdec2,c
  7119                           
  7120                           ;stkvar	_f @ sp[(-8)+0]
  7121  0175D6  0EFC               	movlw	252
  7122  0175D8  24E1               	addwf	fsr1l,w,c
  7123  0175DA  6ED9               	movwf	fsr2l,c
  7124  0175DC  0EFF               	movlw	255
  7125  0175DE  20E2               	addwfc	fsr1h,w,c
  7126  0175E0  6EDA               	movwf	fsr2h,c
  7127  0175E2  0E00               	movlw	0
  7128  0175E4  6EDE               	movwf	postinc2,c
  7129  0175E6  0E00               	movlw	0
  7130  0175E8  6EDD               	movwf	postdec2,c
  7131                           
  7132                           ;stkvar	_ap @ sp[(-8)+6]
  7133  0175EA  0EFE               	movlw	254
  7134  0175EC  24E1               	addwf	fsr1l,w,c
  7135  0175EE  6E01               	movwf	btemp^0,c
  7136  0175F0  0EFF               	movlw	255
  7137  0175F2  20E2               	addwfc	fsr1h,w,c
  7138  0175F4  6E02               	movwf	(btemp+1)^0,c
  7139  0175F6  0060  F007  FFE6   	movff	btemp,postinc1
  7140  0175FC  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7141                           
  7142                           ;stkvar	_fmt @ sp[(-10)+-5]
  7143  017602  0EF1               	movlw	-15
  7144  017604  006F FF8F FFE6     	movff	plusw1,postinc1
  7145  01760A  006F FF8F FFE6     	movff	plusw1,postinc1
  7146                           
  7147                           ;stkvar	_f @ sp[(-12)+0]
  7148  017610  0EF4               	movlw	244
  7149  017612  24E1               	addwf	fsr1l,w,c
  7150  017614  6E01               	movwf	btemp^0,c
  7151  017616  0EFF               	movlw	255
  7152  017618  20E2               	addwfc	fsr1h,w,c
  7153  01761A  6E02               	movwf	(btemp+1)^0,c
  7154  01761C  0060  F007  FFE6   	movff	btemp,postinc1
  7155  017622  0060  F00B  FFE6   	movff	btemp+1,postinc1
  7156  017628  EC83  F0BF         	call	_vfprintf	;wreg free
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;stkvar	_f @ sp[(-8)+0]
  7160  01762C  0EFA               	movlw	250
  7161  01762E  24E1               	addwf	fsr1l,w,c
  7162  017630  6ED9               	movwf	fsr2l,c
  7163  017632  0EFF               	movlw	255
  7164  017634  20E2               	addwfc	fsr1h,w,c
  7165  017636  6EDA               	movwf	fsr2h,c
  7166  017638  006F FF78  F00B    	movff	postinc2,btemp+10
  7167  01763E  006F FF74  F00C    	movff	postdec2,btemp+11
  7168                           
  7169                           ;stkvar	_s @ sp[(-8)+-3]
  7170  017644  0EF5               	movlw	-11
  7171  017646  006F FF8C  F009    	movff	plusw1,btemp+8
  7172  01764C  0EF6               	movlw	-10
  7173  01764E  006F FF8C  F00A    	movff	plusw1,btemp+9
  7174  017654  500B               	movf	(btemp+10)^0,w,c
  7175  017656  2409               	addwf	(btemp+8)^0,w,c
  7176  017658  6ED9               	movwf	fsr2l,c
  7177  01765A  500C               	movf	(btemp+11)^0,w,c
  7178  01765C  200A               	addwfc	(btemp+9)^0,w,c
  7179  01765E  6EDA               	movwf	fsr2h,c
  7180  017660  0E00               	movlw	0
  7181  017662  6EDF               	movwf	indf2,c
  7182                           
  7183                           ; BSR set to: 0
  7184                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  7185  017664  0EF8               	movlw	248
  7186  017666  26E1               	addwf	fsr1l,f,c
  7187  017668  0EFF               	movlw	255
  7188  01766A  22E2               	addwfc	fsr1h,f,c
  7189  01766C  52E5               	movf	postdec1,f,c
  7190  01766E  50E7               	movf	indf1,w,c
  7191  017670  5EE1               	subwf	fsr1l,f,c
  7192  017672  0E00               	movlw	0
  7193  017674  5AE2               	subwfb	fsr1h,f,c
  7194  017676  0012               	return		;funcret
  7195  017678                     __end_of_sprintf:
  7196                           	opt callstack 0
  7197                           
  7198 ;; *************** function _get_vterm_ptr *****************
  7199 ;; Defined at:
  7200 ;;		line 116 in file "mconfig.c"
  7201 ;; Parameters:    Size  Location     Type
  7202 ;;  line            1  [STACK] const unsigned char 
  7203 ;;  vterm           1  [STACK] const unsigned char 
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;		None
  7206 ;; Return value:  Size  Location     Type
  7207 ;;                  2  [STACK] PTR unsigned char 
  7208 ;; Registers used:
  7209 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/1
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7219 ;;Total ram usage:        0 bytes
  7220 ;; Hardware stack levels used:    1
  7221 ;; Hardware stack levels required when called:    7
  7222 ;; This function calls:
  7223 ;;		Nothing
  7224 ;; This function is called by:
  7225 ;;		_main
  7226 ;;		_check_help
  7227 ;;		_vterm_dump
  7228 ;; This function uses a reentrant model
  7229 ;;
  7230                           
  7231                           	psect	text28
  7232  019198                     __ptext28:
  7233                           	opt callstack 0
  7234  019198                     _get_vterm_ptr:
  7235                           	opt callstack 23
  7236                           
  7237                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  7238                           ;stkvar	_vterm @ sp[(0)+-2]
  7239                           
  7240                           ; BSR set to: 0
  7241                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7242                           ;incstack = 0
  7243  019198  0EFE               	movlw	-2
  7244  01919A  50E3               	movf	plusw1,w,c
  7245  01919C  0B03               	andlw	3
  7246  01919E  0D48               	mullw	72
  7247  0191A0  0EFF               	movlw	low _D
  7248  0191A2  6E01               	movwf	btemp^0,c
  7249  0191A4  0E06               	movlw	high _D
  7250  0191A6  6E02               	movwf	(btemp+1)^0,c
  7251  0191A8  50F3               	movf	243,w,c
  7252  0191AA  2601               	addwf	btemp^0,f,c
  7253  0191AC  50F4               	movf	244,w,c
  7254  0191AE  2202               	addwfc	(btemp+1)^0,f,c
  7255                           
  7256                           ;stkvar	_line @ sp[(0)+-1]
  7257  0191B0  0EFF               	movlw	-1
  7258  0191B2  50E3               	movf	plusw1,w,c
  7259  0191B4  0B03               	andlw	3
  7260  0191B6  0D18               	mullw	24
  7261  0191B8  50F3               	movf	243,w,c
  7262  0191BA  2601               	addwf	btemp^0,f,c
  7263  0191BC  50F4               	movf	244,w,c
  7264  0191BE  2202               	addwfc	(btemp+1)^0,f,c
  7265                           
  7266                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  7267  0191C0  52E5               	movf	postdec1,f,c
  7268  0191C2  52E5               	movf	postdec1,f,c
  7269  0191C4  0012               	return		;funcret
  7270  0191C6                     __end_of_get_vterm_ptr:
  7271                           	opt callstack 0
  7272                           
  7273 ;; *************** function _WaitMs *****************
  7274 ;; Defined at:
  7275 ;;		line 32 in file "timers.c"
  7276 ;; Parameters:    Size  Location     Type
  7277 ;;  numMilliseco    2  [STACK] const unsigned short 
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;		None
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  1  [STACK] void 
  7282 ;; Registers used:
  7283 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/2
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7293 ;;Total ram usage:        0 bytes
  7294 ;; Hardware stack levels used:    1
  7295 ;; Hardware stack levels required when called:    8
  7296 ;; This function calls:
  7297 ;;		_StartTimer
  7298 ;;		_TimerDone
  7299 ;; This function is called by:
  7300 ;;		_main
  7301 ;;		_vterm_dump
  7302 ;; This function uses a reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text29
  7306  019000                     __ptext29:
  7307                           	opt callstack 0
  7308  019000                     _WaitMs:
  7309                           	opt callstack 20
  7310                           
  7311                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  7312                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  7313                           
  7314                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7315                           ;incstack = 0
  7316  019000  0EFE               	movlw	-2
  7317  019002  006F FF8F FFE6     	movff	plusw1,postinc1
  7318  019008  006F FF8F FFE6     	movff	plusw1,postinc1
  7319  01900E  0E00               	movlw	0
  7320  019010  6EE6               	movwf	postinc1,c
  7321  019012  EC2A  F0C7         	call	_StartTimer	;wreg free
  7322                           
  7323                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  7324  019016  D005               	goto	l8150
  7325  019018                     l1599:
  7326                           
  7327                           ;timers.c: 36:   __nop();
  7328  019018  F000               	nop	
  7329                           
  7330                           ;timers.c: 37:   __nop();
  7331  01901A  F000               	nop	
  7332                           
  7333                           ;timers.c: 38:   __nop();
  7334  01901C  F000               	nop	
  7335                           
  7336                           ;timers.c: 39:   __nop();
  7337  01901E  F000               	nop	
  7338  019020  0004               	clrwdt		;# 
  7339  019022                     l8150:
  7340                           
  7341                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  7342  019022  0E00               	movlw	0
  7343  019024  6EE6               	movwf	postinc1,c
  7344  019026  EC8B  F0C9         	call	_TimerDone	;wreg free
  7345  01902A  5001               	movf	btemp^0,w,c
  7346  01902C  B4D8               	btfsc	status,2,c
  7347  01902E  D7F4               	goto	l1599
  7348                           
  7349                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  7350  019030  52E5               	movf	postdec1,f,c
  7351  019032  52E5               	movf	postdec1,f,c
  7352  019034  0012               	return		;funcret
  7353  019036                     __end_of_WaitMs:
  7354                           	opt callstack 0
  7355                           
  7356 ;; *************** function _update_lcd *****************
  7357 ;; Defined at:
  7358 ;;		line 85 in file "mconfig.c"
  7359 ;; Parameters:    Size  Location     Type
  7360 ;;  vterm           1  [STACK] unsigned char 
  7361 ;; Auto vars:     Size  Location     Type
  7362 ;;		None
  7363 ;; Return value:  Size  Location     Type
  7364 ;;                  1  [STACK] unsigned char 
  7365 ;; Registers used:
  7366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7367 ;; Tracked objects:
  7368 ;;		On entry : 0/0
  7369 ;;		On exit  : 0/0
  7370 ;;		Unchanged: 0/0
  7371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7376 ;;Total ram usage:        0 bytes
  7377 ;; Hardware stack levels used:    1
  7378 ;; Hardware stack levels required when called:   18
  7379 ;; This function calls:
  7380 ;;		_eaDogM_WriteStringAtPos
  7381 ;;		_wait_lcd_done
  7382 ;; This function is called by:
  7383 ;;		_main
  7384 ;;		_check_help
  7385 ;; This function uses a reentrant model
  7386 ;;
  7387                           
  7388                           	psect	text30
  7389  01745E                     __ptext30:
  7390                           	opt callstack 0
  7391  01745E                     _update_lcd:
  7392                           	opt callstack 12
  7393                           
  7394                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  7395                           ;stkvar	_vterm @ sp[(0)+-1]
  7396                           
  7397                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7398                           ;incstack = 0
  7399  01745E  0EFF               	movlw	-1
  7400  017460  006F FF8C  F001    	movff	plusw1,btemp
  7401  017466  0E03               	movlw	3
  7402  017468  1601               	andwf	btemp^0,f,c
  7403  01746A  0EFF               	movlw	-1
  7404  01746C  0060  F007  FFE3   	movff	btemp,plusw1
  7405                           
  7406                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  7407  017472  EE22  F01F         	lfsr	2,_D+288
  7408  017476  A0DF               	btfss	indf2,0,c
  7409  017478  D004               	goto	l11226
  7410                           
  7411                           ;stkvar	_vterm @ sp[(0)+-1]
  7412  01747A  0EFF               	movlw	-1
  7413  01747C  50E3               	movf	plusw1,w,c
  7414  01747E  B4D8               	btfsc	status,2,c
  7415  017480  D074               	goto	l1677
  7416  017482                     l11226:
  7417                           
  7418                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  7419                           ;stkvar	_vterm @ sp[(0)+-1]
  7420  017482  0EFF               	movlw	-1
  7421  017484  50E3               	movf	plusw1,w,c
  7422  017486  0D48               	mullw	72
  7423  017488  0E0F               	movlw	low (_D+16)
  7424  01748A  24F3               	addwf	243,w,c
  7425  01748C  6ED9               	movwf	fsr2l,c
  7426  01748E  0E07               	movlw	high (_D+16)
  7427  017490  20F4               	addwfc	prodh,w,c
  7428  017492  6EDA               	movwf	fsr2h,c
  7429  017494  0E00               	movlw	0
  7430  017496  6EDF               	movwf	indf2,c
  7431                           
  7432                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  7433                           ;stkvar	_vterm @ sp[(0)+-1]
  7434  017498  0EFF               	movlw	-1
  7435  01749A  50E3               	movf	plusw1,w,c
  7436  01749C  0D48               	mullw	72
  7437  01749E  0E27               	movlw	low (_D+40)
  7438  0174A0  24F3               	addwf	243,w,c
  7439  0174A2  6ED9               	movwf	fsr2l,c
  7440  0174A4  0E07               	movlw	high (_D+40)
  7441  0174A6  20F4               	addwfc	prodh,w,c
  7442  0174A8  6EDA               	movwf	fsr2h,c
  7443  0174AA  0E00               	movlw	0
  7444  0174AC  6EDF               	movwf	indf2,c
  7445                           
  7446                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  7447                           ;stkvar	_vterm @ sp[(0)+-1]
  7448  0174AE  0EFF               	movlw	-1
  7449  0174B0  50E3               	movf	plusw1,w,c
  7450  0174B2  0D48               	mullw	72
  7451  0174B4  0E3F               	movlw	low (_D+64)
  7452  0174B6  24F3               	addwf	243,w,c
  7453  0174B8  6ED9               	movwf	fsr2l,c
  7454  0174BA  0E07               	movlw	high (_D+64)
  7455  0174BC  20F4               	addwfc	prodh,w,c
  7456  0174BE  6EDA               	movwf	fsr2h,c
  7457  0174C0  0E00               	movlw	0
  7458  0174C2  6EDF               	movwf	indf2,c
  7459                           
  7460                           ;mconfig.c: 95:  wait_lcd_done();
  7461  0174C4  ECC6  F0CB         	call	_wait_lcd_done	;wreg free
  7462                           
  7463                           ; BSR set to: 0
  7464                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  7465                           ;stkvar	_vterm @ sp[(0)+-1]
  7466  0174C8  0EFF               	movlw	-1
  7467  0174CA  50E3               	movf	plusw1,w,c
  7468  0174CC  0D48               	mullw	72
  7469  0174CE  0EFF               	movlw	low _D
  7470  0174D0  6E0B               	movwf	(btemp+10)^0,c
  7471  0174D2  0E06               	movlw	high _D
  7472  0174D4  6E0C               	movwf	(btemp+11)^0,c
  7473  0174D6  50F3               	movf	243,w,c
  7474  0174D8  260B               	addwf	(btemp+10)^0,f,c
  7475  0174DA  50F4               	movf	244,w,c
  7476  0174DC  220C               	addwfc	(btemp+11)^0,f,c
  7477  0174DE  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7478  0174E4  0060  F033  FFE6   	movff	btemp+11,postinc1
  7479  0174EA  0E00               	movlw	0
  7480  0174EC  6EE6               	movwf	postinc1,c
  7481  0174EE  0E00               	movlw	0
  7482  0174F0  6EE6               	movwf	postinc1,c
  7483  0174F2  EC1B  F0C8         	call	_eaDogM_WriteStringAtPos	;wreg free
  7484                           
  7485                           ; BSR set to: 59
  7486                           ;mconfig.c: 97:  wait_lcd_done();
  7487  0174F6  ECC6  F0CB         	call	_wait_lcd_done	;wreg free
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  7491                           ;stkvar	_vterm @ sp[(0)+-1]
  7492  0174FA  0EFF               	movlw	-1
  7493  0174FC  50E3               	movf	plusw1,w,c
  7494  0174FE  0D48               	mullw	72
  7495  017500  0EFF               	movlw	low _D
  7496  017502  6E0B               	movwf	(btemp+10)^0,c
  7497  017504  0E06               	movlw	high _D
  7498  017506  6E0C               	movwf	(btemp+11)^0,c
  7499  017508  0E18               	movlw	24
  7500  01750A  260B               	addwf	(btemp+10)^0,f,c
  7501  01750C  0E00               	movlw	0
  7502  01750E  220C               	addwfc	(btemp+11)^0,f,c
  7503  017510  50F3               	movf	243,w,c
  7504  017512  260B               	addwf	(btemp+10)^0,f,c
  7505  017514  50F4               	movf	244,w,c
  7506  017516  220C               	addwfc	(btemp+11)^0,f,c
  7507  017518  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7508  01751E  0060  F033  FFE6   	movff	btemp+11,postinc1
  7509  017524  0E00               	movlw	0
  7510  017526  6EE6               	movwf	postinc1,c
  7511  017528  0E01               	movlw	1
  7512  01752A  6EE6               	movwf	postinc1,c
  7513  01752C  EC1B  F0C8         	call	_eaDogM_WriteStringAtPos	;wreg free
  7514                           
  7515                           ; BSR set to: 59
  7516                           ;mconfig.c: 99:  wait_lcd_done();
  7517  017530  ECC6  F0CB         	call	_wait_lcd_done	;wreg free
  7518                           
  7519                           ; BSR set to: 0
  7520                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  7521                           ;stkvar	_vterm @ sp[(0)+-1]
  7522  017534  0EFF               	movlw	-1
  7523  017536  50E3               	movf	plusw1,w,c
  7524  017538  0D48               	mullw	72
  7525  01753A  0EFF               	movlw	low _D
  7526  01753C  6E0B               	movwf	(btemp+10)^0,c
  7527  01753E  0E06               	movlw	high _D
  7528  017540  6E0C               	movwf	(btemp+11)^0,c
  7529  017542  0E30               	movlw	48
  7530  017544  260B               	addwf	(btemp+10)^0,f,c
  7531  017546  0E00               	movlw	0
  7532  017548  220C               	addwfc	(btemp+11)^0,f,c
  7533  01754A  50F3               	movf	243,w,c
  7534  01754C  260B               	addwf	(btemp+10)^0,f,c
  7535  01754E  50F4               	movf	244,w,c
  7536  017550  220C               	addwfc	(btemp+11)^0,f,c
  7537  017552  0060  F02F  FFE6   	movff	btemp+10,postinc1
  7538  017558  0060  F033  FFE6   	movff	btemp+11,postinc1
  7539  01755E  0E00               	movlw	0
  7540  017560  6EE6               	movwf	postinc1,c
  7541  017562  0E02               	movlw	2
  7542  017564  6EE6               	movwf	postinc1,c
  7543  017566  EC1B  F0C8         	call	_eaDogM_WriteStringAtPos	;wreg free
  7544  01756A                     l1677:
  7545                           
  7546                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7547  01756A  52E5               	movf	postdec1,f,c
  7548  01756C  0012               	return		;funcret
  7549  01756E                     __end_of_update_lcd:
  7550                           	opt callstack 0
  7551                           
  7552 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7553 ;; Defined at:
  7554 ;;		line 265 in file "eadog.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  r               1  [STACK] const unsigned char 
  7557 ;;  c               1  [STACK] const unsigned char 
  7558 ;;  strPtr          2  [STACK] PTR unsigned char 
  7559 ;;		 -> D.lcd(288), D(290), V(188), 
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;		None
  7562 ;; Return value:  Size  Location     Type
  7563 ;;                  1  [STACK] void 
  7564 ;; Registers used:
  7565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7566 ;; Tracked objects:
  7567 ;;		On entry : 3F/0
  7568 ;;		On exit  : 3F/3B
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7575 ;;Total ram usage:        0 bytes
  7576 ;; Hardware stack levels used:    1
  7577 ;; Hardware stack levels required when called:   17
  7578 ;; This function calls:
  7579 ;;		_eaDogM_WriteString
  7580 ;;		_send_lcd_cmd_dma
  7581 ;; This function is called by:
  7582 ;;		_update_lcd
  7583 ;;		_vterm_dump
  7584 ;; This function uses a reentrant model
  7585 ;;
  7586                           
  7587                           	psect	text31
  7588  019036                     __ptext31:
  7589                           	opt callstack 0
  7590  019036                     _eaDogM_WriteStringAtPos:
  7591                           	opt callstack 12
  7592                           
  7593                           ;eadog.c: 265: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 266: {;eadog.c: 267:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7594                           ;stkvar	_c @ sp[(0)+-2]
  7595                           
  7596                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7597                           ;incstack = 0
  7598  019036  0EFE               	movlw	-2
  7599  019038  006F FF8C  F00C    	movff	plusw1,btemp+11
  7600                           
  7601                           ;stkvar	_r @ sp[(0)+-1]
  7602  01903E  0EFF               	movlw	-1
  7603  019040  50E3               	movf	plusw1,w,c
  7604  019042  0D10               	mullw	16
  7605  019044  50F3               	movf	243,w,c
  7606  019046  240C               	addwf	(btemp+11)^0,w,c
  7607  019048  0F80               	addlw	128
  7608  01904A  6EE6               	movwf	postinc1,c
  7609  01904C  EC99  F0C5         	call	_send_lcd_cmd_dma	;wreg free
  7610                           
  7611                           ;eadog.c: 268:  eaDogM_WriteString(strPtr);
  7612                           ;stkvar	_strPtr @ sp[(0)+-4]
  7613  019050  0EFC               	movlw	-4
  7614  019052  006F FF8F FFE6     	movff	plusw1,postinc1
  7615  019058  006F FF8F FFE6     	movff	plusw1,postinc1
  7616  01905E  EC2E  F0C0         	call	_eaDogM_WriteString	;wreg free
  7617                           
  7618                           ; BSR set to: 59
  7619                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  7620  019062  52E5               	movf	postdec1,f,c
  7621  019064  52E5               	movf	postdec1,f,c
  7622  019066  52E5               	movf	postdec1,f,c
  7623  019068  52E5               	movf	postdec1,f,c
  7624  01906A  0012               	return		;funcret
  7625  01906C                     __end_of_eaDogM_WriteStringAtPos:
  7626                           	opt callstack 0
  7627                           
  7628 ;; *************** function _send_lcd_cmd_dma *****************
  7629 ;; Defined at:
  7630 ;;		line 218 in file "eadog.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  strPtr          1  [STACK] unsigned char 
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;		None
  7635 ;; Return value:  Size  Location     Type
  7636 ;;                  1  [STACK] void 
  7637 ;; Registers used:
  7638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/3D
  7641 ;;		On exit  : 3F/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7648 ;;Total ram usage:        0 bytes
  7649 ;; Hardware stack levels used:    1
  7650 ;; Hardware stack levels required when called:   16
  7651 ;; This function calls:
  7652 ;;		_printf
  7653 ;;		_ringBufS_flush
  7654 ;;		_start_lcd
  7655 ;;		_wait_lcd_done
  7656 ;;		_wait_lcd_set
  7657 ;; This function is called by:
  7658 ;;		_eaDogM_WriteCommand
  7659 ;;		_eaDogM_WriteStringAtPos
  7660 ;; This function uses a reentrant model
  7661 ;;
  7662                           
  7663                           	psect	text32
  7664  018B32                     __ptext32:
  7665                           	opt callstack 0
  7666  018B32                     _send_lcd_cmd_dma:
  7667                           	opt callstack 12
  7668                           
  7669                           ;eadog.c: 218: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 219: {;eadog.c: 221:  wait
      +                          _lcd_set();
  7670                           
  7671                           ; BSR set to: 59
  7672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7673                           ;incstack = 0
  7674  018B32  EC8E  F0CC         	call	_wait_lcd_set	;wreg free
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;eadog.c: 223:  ringBufS_flush(spi_link.tx1a, 0);
  7678  018B36  0E00               	movlw	0
  7679  018B38  6EE6               	movwf	postinc1,c
  7680  018B3A  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  7681  018B40  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  7682  018B46  EC69  F0C1         	call	_ringBufS_flush	;wreg free
  7683  018B4A  92BC               	bcf	188,1,c	;volatile
  7684  018B4C  94BC               	bcf	188,2,c	;volatile
  7685                           
  7686                           ;eadog.c: 226:  DMA1CON0bits.EN = 0;
  7687  018B4E  013B               	movlb	59	; () banked
  7688  018B50  9FFC               	bcf	252,7,b	;volatile
  7689                           
  7690                           ; BSR set to: 59
  7691                           ;eadog.c: 227:  DMA1SSZ = 1;
  7692  018B52  0E00               	movlw	0
  7693  018B54  6FF8               	movwf	248,b	;volatile
  7694  018B56  0E01               	movlw	1
  7695  018B58  6FF7               	movwf	247,b	;volatile
  7696                           
  7697                           ; BSR set to: 59
  7698                           ;eadog.c: 228:  DMA1CON0bits.EN = 1;
  7699  018B5A  8FFC               	bsf	252,7,b	;volatile
  7700                           
  7701                           ; BSR set to: 59
  7702                           ;eadog.c: 229:  printf("%c", strPtr);
  7703                           ;stkvar	_strPtr @ sp[(0)+-1]
  7704  018B5C  0EFF               	movlw	-1
  7705  018B5E  50E3               	movf	plusw1,w,c
  7706  018B60  6EE6               	movwf	postinc1,c
  7707  018B62  0E00               	movlw	0
  7708  018B64  6EE6               	movwf	postinc1,c
  7709  018B66  0EF9               	movlw	low STR_25
  7710  018B68  6EE6               	movwf	postinc1,c
  7711  018B6A  0EFF               	movlw	high STR_25
  7712  018B6C  6EE6               	movwf	postinc1,c
  7713  018B6E  0E04               	movlw	4
  7714  018B70  6EE6               	movwf	postinc1,c
  7715  018B72  ECB2  F0C4         	call	_printf	;wreg free
  7716                           
  7717                           ; BSR set to: 0
  7718                           ;eadog.c: 230:  start_lcd();
  7719  018B76  EC91  F0CC         	call	_start_lcd	;wreg free
  7720                           
  7721                           ; BSR set to: 59
  7722                           ;eadog.c: 231:  wait_lcd_done();
  7723  018B7A  ECC6  F0CB         	call	_wait_lcd_done	;wreg free
  7724                           
  7725                           ; BSR set to: 0
  7726  018B7E  82BC               	bsf	188,1,c	;volatile
  7727                           
  7728                           ; BSR set to: 0
  7729                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7730  018B80  52E5               	movf	postdec1,f,c
  7731  018B82  0012               	return		;funcret
  7732  018B84                     __end_of_send_lcd_cmd_dma:
  7733                           	opt callstack 0
  7734                           
  7735 ;; *************** function _wait_lcd_done *****************
  7736 ;; Defined at:
  7737 ;;		line 154 in file "eadog.c"
  7738 ;; Parameters:    Size  Location     Type
  7739 ;;		None
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;		None
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  1  [STACK] void 
  7744 ;; Registers used:
  7745 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 3F/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7755 ;;Total ram usage:        0 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; Hardware stack levels required when called:    8
  7758 ;; This function calls:
  7759 ;;		_wdtdelay
  7760 ;; This function is called by:
  7761 ;;		_send_lcd_cmd_dma
  7762 ;;		_update_lcd
  7763 ;;		_vterm_dump
  7764 ;; This function uses a reentrant model
  7765 ;;
  7766                           
  7767                           	psect	text33
  7768  01978C                     __ptext33:
  7769                           	opt callstack 0
  7770  01978C                     _wait_lcd_done:
  7771                           	opt callstack 21
  7772                           
  7773                           ;eadog.c: 156:  while (spi_link.LCD_DATA);
  7774                           
  7775                           ; BSR set to: 0
  7776                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7777                           ;incstack = 0
  7778  01978C  0100               	movlb	0	; () banked
  7779  01978E  B789               	btfsc	_spi_link& (0+255),3,b	;volatile
  7780  019790  D7FD               	goto	_wait_lcd_done
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;eadog.c: 157:  wdtdelay(50);
  7784  019792  0E32               	movlw	50
  7785  019794  6EE6               	movwf	postinc1,c
  7786  019796  0E00               	movlw	0
  7787  019798  6EE6               	movwf	postinc1,c
  7788  01979A  0E00               	movlw	0
  7789  01979C  6EE6               	movwf	postinc1,c
  7790  01979E  0E00               	movlw	0
  7791  0197A0  6EE6               	movwf	postinc1,c
  7792  0197A2  EC12  F0C5         	call	_wdtdelay	;wreg free
  7793                           
  7794                           ; BSR set to: 0
  7795                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7796  0197A6  0012               	return		;funcret
  7797  0197A8                     __end_of_wait_lcd_done:
  7798                           	opt callstack 0
  7799                           
  7800 ;; *************** function _wdtdelay *****************
  7801 ;; Defined at:
  7802 ;;		line 22 in file "eadog.c"
  7803 ;; Parameters:    Size  Location     Type
  7804 ;;  delay           4  [STACK] const unsigned long 
  7805 ;; Auto vars:     Size  Location     Type
  7806 ;;		None
  7807 ;; Return value:  Size  Location     Type
  7808 ;;                  1  [STACK] void 
  7809 ;; Registers used:
  7810 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7811 ;; Tracked objects:
  7812 ;;		On entry : 0/0
  7813 ;;		On exit  : 3F/0
  7814 ;;		Unchanged: 0/0
  7815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7820 ;;Total ram usage:        0 bytes
  7821 ;; Hardware stack levels used:    1
  7822 ;; Hardware stack levels required when called:    7
  7823 ;; This function calls:
  7824 ;;		Nothing
  7825 ;; This function is called by:
  7826 ;;		_init_display
  7827 ;;		_send_lcd_cmd
  7828 ;;		_send_lcd_cmd_long
  7829 ;;		_wait_lcd_done
  7830 ;; This function uses a reentrant model
  7831 ;;
  7832                           
  7833                           	psect	text34
  7834  018A24                     __ptext34:
  7835                           	opt callstack 0
  7836  018A24                     _wdtdelay:
  7837                           	opt callstack 21
  7838                           
  7839                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  7840                           
  7841                           ; BSR set to: 0
  7842                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7843                           ;incstack = 0
  7844  018A24  0100               	movlb	0	; () banked
  7845  018A26  6BA1               	clrf	wdtdelay@dcount& (0+255),b
  7846  018A28  6BA2               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7847  018A2A  6BA3               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7848  018A2C  6BA4               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7849  018A2E                     l1444:
  7850                           
  7851                           ; BSR set to: 0
  7852                           ;eadog.c: 27:   __nop();
  7853  018A2E  F000               	nop	
  7854  018A30  0004               	clrwdt		;# 
  7855                           
  7856                           ;eadog.c: 29:  };
  7857  018A32  0E01               	movlw	1
  7858  018A34  0100               	movlb	0	; () banked
  7859  018A36  27A1               	addwf	wdtdelay@dcount& (0+255),f,b
  7860  018A38  0E00               	movlw	0
  7861  018A3A  23A2               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7862  018A3C  23A3               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7863  018A3E  23A4               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;stkvar	_delay @ sp[(0)+-4]
  7867  018A40  0EFC               	movlw	-4
  7868  018A42  006F FF8C  F001    	movff	plusw1,btemp
  7869  018A48  51A1               	movf	wdtdelay@dcount& (0+255),w,b
  7870  018A4A  5C01               	subwf	btemp^0,w,c
  7871  018A4C  0EFD               	movlw	-3
  7872  018A4E  006F FF8C  F001    	movff	plusw1,btemp
  7873  018A54  51A2               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7874  018A56  5801               	subwfb	btemp^0,w,c
  7875  018A58  0EFE               	movlw	-2
  7876  018A5A  006F FF8C  F001    	movff	plusw1,btemp
  7877  018A60  51A3               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7878  018A62  5801               	subwfb	btemp^0,w,c
  7879  018A64  0EFF               	movlw	-1
  7880  018A66  006F FF8C  F001    	movff	plusw1,btemp
  7881  018A6C  51A4               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7882  018A6E  5801               	subwfb	btemp^0,w,c
  7883  018A70  B0D8               	btfsc	status,0,c
  7884  018A72  D7DD               	goto	l1444
  7885                           
  7886                           ; BSR set to: 0
  7887                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7888  018A74  52E5               	movf	postdec1,f,c
  7889  018A76  52E5               	movf	postdec1,f,c
  7890  018A78  52E5               	movf	postdec1,f,c
  7891  018A7A  52E5               	movf	postdec1,f,c
  7892  018A7C  0012               	return		;funcret
  7893  018A7E                     __end_of_wdtdelay:
  7894                           	opt callstack 0
  7895                           
  7896 ;; *************** function _eaDogM_WriteString *****************
  7897 ;; Defined at:
  7898 ;;		line 197 in file "eadog.c"
  7899 ;; Parameters:    Size  Location     Type
  7900 ;;  strPtr          2  [STACK] PTR unsigned char 
  7901 ;;		 -> D.lcd(288), D(290), V(188), 
  7902 ;; Auto vars:     Size  Location     Type
  7903 ;;		None
  7904 ;; Return value:  Size  Location     Type
  7905 ;;                  1  [STACK] void 
  7906 ;; Registers used:
  7907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7908 ;; Tracked objects:
  7909 ;;		On entry : 3F/0
  7910 ;;		On exit  : 3F/3B
  7911 ;;		Unchanged: 0/0
  7912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7917 ;;Total ram usage:        0 bytes
  7918 ;; Hardware stack levels used:    1
  7919 ;; Hardware stack levels required when called:   16
  7920 ;; This function calls:
  7921 ;;		_printf
  7922 ;;		_ringBufS_flush
  7923 ;;		_start_lcd
  7924 ;;		_strlen
  7925 ;;		_wait_lcd_set
  7926 ;; This function is called by:
  7927 ;;		_eaDogM_WriteStringAtPos
  7928 ;; This function uses a reentrant model
  7929 ;;
  7930                           
  7931                           	psect	text35
  7932  01805C                     __ptext35:
  7933                           	opt callstack 0
  7934  01805C                     _eaDogM_WriteString:
  7935                           	opt callstack 12
  7936                           
  7937                           ;eadog.c: 197: void eaDogM_WriteString(char *strPtr);eadog.c: 198: {;eadog.c: 200:  wait
      +                          _lcd_set();
  7938                           
  7939                           ; BSR set to: 0
  7940                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7941                           ;incstack = 0
  7942  01805C  EC8E  F0CC         	call	_wait_lcd_set	;wreg free
  7943                           
  7944                           ; BSR set to: 0
  7945                           ;eadog.c: 202:  ringBufS_flush(spi_link.tx1a, 0);
  7946  018060  0E00               	movlw	0
  7947  018062  6EE6               	movwf	postinc1,c
  7948  018064  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  7949  01806A  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  7950  018070  EC69  F0C1         	call	_ringBufS_flush	;wreg free
  7951  018074  94BC               	bcf	188,2,c	;volatile
  7952                           
  7953                           ;eadog.c: 204:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7954                           ;stkvar	_strPtr @ sp[(0)+-2]
  7955  018076  0EFE               	movlw	-2
  7956  018078  006F FF8F FFE6     	movff	plusw1,postinc1
  7957  01807E  006F FF8F FFE6     	movff	plusw1,postinc1
  7958  018084  EC81  F0C0         	call	_strlen	;wreg free
  7959  018088  5002               	movf	(btemp+1)^0,w,c
  7960  01808A  E104               	bnz	u10760
  7961  01808C  0E41               	movlw	65
  7962  01808E  5C01               	subwf	btemp^0,w,c
  7963  018090  A0D8               	btfss	status,0,c
  7964  018092  D010               	goto	l11192
  7965  018094                     u10760:
  7966                           
  7967                           ;stkvar	_strPtr @ sp[(0)+-2]
  7968  018094  0EFE               	movlw	-2
  7969  018096  006F FF8C  F00B    	movff	plusw1,btemp+10
  7970  01809C  0EFF               	movlw	-1
  7971  01809E  006F FF8C  F00C    	movff	plusw1,btemp+11
  7972  0180A4  0E40               	movlw	64
  7973  0180A6  240B               	addwf	(btemp+10)^0,w,c
  7974  0180A8  6ED9               	movwf	fsr2l,c
  7975  0180AA  0E00               	movlw	0
  7976  0180AC  200C               	addwfc	(btemp+11)^0,w,c
  7977  0180AE  6EDA               	movwf	fsr2h,c
  7978  0180B0  0E00               	movlw	0
  7979  0180B2  6EDF               	movwf	indf2,c
  7980  0180B4                     l11192:
  7981                           
  7982                           ;eadog.c: 205:  DMA1CON0bits.EN = 0;
  7983  0180B4  013B               	movlb	59	; () banked
  7984  0180B6  9FFC               	bcf	252,7,b	;volatile
  7985                           
  7986                           ; BSR set to: 59
  7987                           ;eadog.c: 206:  DMA1SSZ = strlen(strPtr);
  7988                           ;stkvar	_strPtr @ sp[(0)+-2]
  7989  0180B8  0EFE               	movlw	-2
  7990  0180BA  006F FF8F FFE6     	movff	plusw1,postinc1
  7991  0180C0  006F FF8F FFE6     	movff	plusw1,postinc1
  7992  0180C6  EC81  F0C0         	call	_strlen	;wreg free
  7993  0180CA  0060  F007  FBF7   	movff	btemp,15351	;volatile
  7994  0180D0  0060  F00B  FBF8   	movff	btemp+1,15352	;volatile
  7995                           
  7996                           ;eadog.c: 207:  DMA1CON0bits.EN = 1;
  7997  0180D6  013B               	movlb	59	; () banked
  7998  0180D8  8FFC               	bsf	252,7,b	;volatile
  7999                           
  8000                           ; BSR set to: 59
  8001                           ;eadog.c: 208:  printf("%s", strPtr);
  8002                           ;stkvar	_strPtr @ sp[(0)+-2]
  8003  0180DA  0EFE               	movlw	-2
  8004  0180DC  006F FF8F FFE6     	movff	plusw1,postinc1
  8005  0180E2  006F FF8F FFE6     	movff	plusw1,postinc1
  8006  0180E8  0EFC               	movlw	low STR_24
  8007  0180EA  6EE6               	movwf	postinc1,c
  8008  0180EC  0EFF               	movlw	high STR_24
  8009  0180EE  6EE6               	movwf	postinc1,c
  8010  0180F0  0E04               	movlw	4
  8011  0180F2  6EE6               	movwf	postinc1,c
  8012  0180F4  ECB2  F0C4         	call	_printf	;wreg free
  8013                           
  8014                           ; BSR set to: 0
  8015                           ;eadog.c: 209:  start_lcd();
  8016  0180F8  EC91  F0CC         	call	_start_lcd	;wreg free
  8017                           
  8018                           ; BSR set to: 59
  8019                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  8020  0180FC  52E5               	movf	postdec1,f,c
  8021  0180FE  52E5               	movf	postdec1,f,c
  8022  018100  0012               	return		;funcret
  8023  018102                     __end_of_eaDogM_WriteString:
  8024                           	opt callstack 0
  8025                           
  8026 ;; *************** function _wait_lcd_set *****************
  8027 ;; Defined at:
  8028 ;;		line 144 in file "eadog.c"
  8029 ;; Parameters:    Size  Location     Type
  8030 ;;		None
  8031 ;; Auto vars:     Size  Location     Type
  8032 ;;		None
  8033 ;; Return value:  Size  Location     Type
  8034 ;;                  1  [STACK] void 
  8035 ;; Registers used:
  8036 ;;		None
  8037 ;; Tracked objects:
  8038 ;;		On entry : 0/3D
  8039 ;;		On exit  : 3F/0
  8040 ;;		Unchanged: 0/0
  8041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8046 ;;Total ram usage:        0 bytes
  8047 ;; Hardware stack levels used:    1
  8048 ;; Hardware stack levels required when called:    7
  8049 ;; This function calls:
  8050 ;;		Nothing
  8051 ;; This function is called by:
  8052 ;;		_eaDogM_WriteString
  8053 ;;		_send_lcd_cmd_dma
  8054 ;; This function uses a reentrant model
  8055 ;;
  8056                           
  8057                           	psect	text36
  8058  01991C                     __ptext36:
  8059                           	opt callstack 0
  8060  01991C                     _wait_lcd_set:
  8061                           	opt callstack 20
  8062                           
  8063                           ;eadog.c: 146:  spi_link.LCD_DATA = 1;
  8064                           
  8065                           ; BSR set to: 59
  8066                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8067                           ;incstack = 0
  8068  01991C  0100               	movlb	0	; () banked
  8069  01991E  8789               	bsf	_spi_link& (0+255),3,b	;volatile
  8070                           
  8071                           ; BSR set to: 0
  8072                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8073  019920  0012               	return		;funcret
  8074  019922                     __end_of_wait_lcd_set:
  8075                           	opt callstack 0
  8076                           
  8077 ;; *************** function _start_lcd *****************
  8078 ;; Defined at:
  8079 ;;		line 139 in file "eadog.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;		None
  8082 ;; Auto vars:     Size  Location     Type
  8083 ;;		None
  8084 ;; Return value:  Size  Location     Type
  8085 ;;                  1  [STACK] void 
  8086 ;; Registers used:
  8087 ;;		None
  8088 ;; Tracked objects:
  8089 ;;		On entry : 3F/0
  8090 ;;		On exit  : 3F/3B
  8091 ;;		Unchanged: 0/0
  8092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8097 ;;Total ram usage:        0 bytes
  8098 ;; Hardware stack levels used:    1
  8099 ;; Hardware stack levels required when called:    7
  8100 ;; This function calls:
  8101 ;;		Nothing
  8102 ;; This function is called by:
  8103 ;;		_eaDogM_WriteString
  8104 ;;		_send_lcd_cmd_dma
  8105 ;; This function uses a reentrant model
  8106 ;;
  8107                           
  8108                           	psect	text37
  8109  019922                     __ptext37:
  8110                           	opt callstack 0
  8111  019922                     _start_lcd:
  8112                           	opt callstack 20
  8113                           
  8114                           ;eadog.c: 141:  DMA1CON0bits.DMA1SIRQEN = 1;
  8115                           
  8116                           ; BSR set to: 0
  8117                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8118                           ;incstack = 0
  8119  019922  013B               	movlb	59	; () banked
  8120  019924  8DFC               	bsf	252,6,b	;volatile
  8121                           
  8122                           ; BSR set to: 59
  8123                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8124  019926  0012               	return		;funcret
  8125  019928                     __end_of_start_lcd:
  8126                           	opt callstack 0
  8127                           
  8128 ;; *************** function _ringBufS_flush *****************
  8129 ;; Defined at:
  8130 ;;		line 76 in file "ringbufs.c"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;  _this           2  [STACK] PTR struct ringBufS_t
  8133 ;;		 -> ring_buf1(67), 
  8134 ;;  clearBuffer     1  [STACK] const char 
  8135 ;; Auto vars:     Size  Location     Type
  8136 ;;		None
  8137 ;; Return value:  Size  Location     Type
  8138 ;;                  1  [STACK] void 
  8139 ;; Registers used:
  8140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8141 ;; Tracked objects:
  8142 ;;		On entry : 3F/0
  8143 ;;		On exit  : 0/0
  8144 ;;		Unchanged: 0/0
  8145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8150 ;;Total ram usage:        0 bytes
  8151 ;; Hardware stack levels used:    1
  8152 ;; Hardware stack levels required when called:    8
  8153 ;; This function calls:
  8154 ;;		_memset
  8155 ;; This function is called by:
  8156 ;;		_eaDogM_WriteString
  8157 ;;		_send_lcd_cmd_dma
  8158 ;; This function uses a reentrant model
  8159 ;;
  8160                           
  8161                           	psect	text38
  8162  0182D2                     __ptext38:
  8163                           	opt callstack 0
  8164  0182D2                     _ringBufS_flush:
  8165                           	opt callstack 19
  8166                           
  8167                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  8168                           ;stkvar	__this @ sp[(0)+-2]
  8169                           
  8170                           ; BSR set to: 59
  8171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8172                           ;incstack = 0
  8173  0182D2  0EFE               	movlw	-2
  8174  0182D4  006F FF8C  F00B    	movff	plusw1,btemp+10
  8175  0182DA  0EFF               	movlw	-1
  8176  0182DC  006F FF8C  F00C    	movff	plusw1,btemp+11
  8177  0182E2  0E42               	movlw	66
  8178  0182E4  240B               	addwf	(btemp+10)^0,w,c
  8179  0182E6  6ED9               	movwf	fsr2l,c
  8180  0182E8  0E00               	movlw	0
  8181  0182EA  200C               	addwfc	(btemp+11)^0,w,c
  8182  0182EC  6EDA               	movwf	fsr2h,c
  8183  0182EE  0E00               	movlw	0
  8184  0182F0  6EDF               	movwf	indf2,c
  8185                           
  8186                           ;ringbufs.c: 79:  _this->head = 0;
  8187                           ;stkvar	__this @ sp[(0)+-2]
  8188  0182F2  0EFE               	movlw	-2
  8189  0182F4  006F FF8C  F00B    	movff	plusw1,btemp+10
  8190  0182FA  0EFF               	movlw	-1
  8191  0182FC  006F FF8C  F00C    	movff	plusw1,btemp+11
  8192  018302  0E40               	movlw	64
  8193  018304  240B               	addwf	(btemp+10)^0,w,c
  8194  018306  6ED9               	movwf	fsr2l,c
  8195  018308  0E00               	movlw	0
  8196  01830A  200C               	addwfc	(btemp+11)^0,w,c
  8197  01830C  6EDA               	movwf	fsr2h,c
  8198  01830E  0E00               	movlw	0
  8199  018310  6EDF               	movwf	indf2,c
  8200                           
  8201                           ;ringbufs.c: 80:  _this->tail = 0;
  8202                           ;stkvar	__this @ sp[(0)+-2]
  8203  018312  0EFE               	movlw	-2
  8204  018314  006F FF8C  F00B    	movff	plusw1,btemp+10
  8205  01831A  0EFF               	movlw	-1
  8206  01831C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8207  018322  0E41               	movlw	65
  8208  018324  240B               	addwf	(btemp+10)^0,w,c
  8209  018326  6ED9               	movwf	fsr2l,c
  8210  018328  0E00               	movlw	0
  8211  01832A  200C               	addwfc	(btemp+11)^0,w,c
  8212  01832C  6EDA               	movwf	fsr2h,c
  8213  01832E  0E00               	movlw	0
  8214  018330  6EDF               	movwf	indf2,c
  8215                           
  8216                           ;ringbufs.c: 81:  if (clearBuffer) {
  8217                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  8218  018332  0EFD               	movlw	-3
  8219  018334  50E3               	movf	plusw1,w,c
  8220  018336  B4D8               	btfsc	status,2,c
  8221  018338  D011               	goto	l1584
  8222                           
  8223                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  8224  01833A  0E40               	movlw	64
  8225  01833C  6EE6               	movwf	postinc1,c
  8226  01833E  0E00               	movlw	0
  8227  018340  6EE6               	movwf	postinc1,c
  8228  018342  0E00               	movlw	0
  8229  018344  6EE6               	movwf	postinc1,c
  8230  018346  0E00               	movlw	0
  8231  018348  6EE6               	movwf	postinc1,c
  8232                           
  8233                           ;stkvar	__this @ sp[(-4)+-2]
  8234  01834A  0EFA               	movlw	-6
  8235  01834C  006F FF8F FFE6     	movff	plusw1,postinc1
  8236  018352  006F FF8F FFE6     	movff	plusw1,postinc1
  8237  018358  ECD5  F0A8         	call	_memset	;wreg free
  8238  01835C                     l1584:
  8239                           
  8240                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  8241  01835C  52E5               	movf	postdec1,f,c
  8242  01835E  52E5               	movf	postdec1,f,c
  8243  018360  52E5               	movf	postdec1,f,c
  8244  018362  0012               	return		;funcret
  8245  018364                     __end_of_ringBufS_flush:
  8246                           	opt callstack 0
  8247                           
  8248 ;; *************** function _memset *****************
  8249 ;; Defined at:
  8250 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;  dest            2  [STACK] PTR void 
  8253 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8254 ;;  c               2  [STACK] int 
  8255 ;;  n               2  [STACK] unsigned int 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;  s               2  [STACK] PTR unsigned char 
  8258 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8259 ;;  k               2  [STACK] unsigned int 
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  2  [STACK] PTR void 
  8262 ;; Registers used:
  8263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8273 ;;Total ram usage:        0 bytes
  8274 ;; Hardware stack levels used:    1
  8275 ;; Hardware stack levels required when called:    7
  8276 ;; This function calls:
  8277 ;;		Nothing
  8278 ;; This function is called by:
  8279 ;;		_ringBufS_init
  8280 ;;		_ringBufS_flush
  8281 ;; This function uses a reentrant model
  8282 ;;
  8283                           
  8284                           	psect	text39
  8285  0151AA                     __ptext39:
  8286                           	opt callstack 0
  8287  0151AA                     _memset:
  8288                           	opt callstack 0
  8289                           
  8290                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8291  0151AA  52E6               	movf	postinc1,f,c
  8292  0151AC  52E6               	movf	postinc1,f,c
  8293  0151AE  52E6               	movf	postinc1,f,c
  8294  0151B0  52E6               	movf	postinc1,f,c
  8295                           
  8296                           ;stkvar	_dest @ sp[(-4)+-2]
  8297                           
  8298                           ;incstack = 0
  8299  0151B2  0EFA               	movlw	-6
  8300  0151B4  006F FF8C  F00B    	movff	plusw1,btemp+10
  8301  0151BA  0EFB               	movlw	-5
  8302  0151BC  006F FF8C  F00C    	movff	plusw1,btemp+11
  8303                           
  8304                           ;stkvar	_s @ sp[(-4)+0]
  8305  0151C2  0EFD               	movlw	-3
  8306  0151C4  0060  F033  FFE3   	movff	btemp+11,plusw1
  8307  0151CA  0EFC               	movlw	-4
  8308  0151CC  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8309                           
  8310                           ;stkvar	_n @ sp[(-4)+-6]
  8311  0151D2  0EF6               	movlw	-10
  8312  0151D4  006F FF8C  F001    	movff	plusw1,btemp
  8313  0151DA  0EF7               	movlw	-9
  8314  0151DC  50E3               	movf	plusw1,w,c
  8315  0151DE  1001               	iorwf	btemp^0,w,c
  8316  0151E0  B4D8               	btfsc	status,2,c
  8317  0151E2  D154               	goto	u10730
  8318                           
  8319                           ;stkvar	_c @ sp[(-4)+-4]
  8320                           ;stkvar	_s @ sp[(-4)+0]
  8321  0151E4  0EFC               	movlw	-4
  8322  0151E6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8323  0151EC  0EFD               	movlw	-3
  8324  0151EE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8325  0151F4  0EF8               	movlw	-8
  8326  0151F6  006F FF8F FFDF     	movff	plusw1,indf2
  8327                           
  8328                           ;stkvar	_c @ sp[(-4)+-4]
  8329                           ;stkvar	_n @ sp[(-4)+-6]
  8330                           ;stkvar	_s @ sp[(-4)+0]
  8331  0151FC  0EFC               	movlw	-4
  8332  0151FE  006F FF8C  F00B    	movff	plusw1,btemp+10
  8333  015204  0EFD               	movlw	-3
  8334  015206  006F FF8C  F00C    	movff	plusw1,btemp+11
  8335  01520C  0EF6               	movlw	-10
  8336  01520E  50E3               	movf	plusw1,w,c
  8337  015210  260B               	addwf	(btemp+10)^0,f,c
  8338  015212  0EF7               	movlw	-9
  8339  015214  50E3               	movf	plusw1,w,c
  8340  015216  220C               	addwfc	(btemp+11)^0,f,c
  8341  015218  0EFF               	movlw	255
  8342  01521A  240B               	addwf	(btemp+10)^0,w,c
  8343  01521C  6ED9               	movwf	fsr2l,c
  8344  01521E  0EFF               	movlw	255
  8345  015220  200C               	addwfc	(btemp+11)^0,w,c
  8346  015222  6EDA               	movwf	fsr2h,c
  8347  015224  0EF8               	movlw	-8
  8348  015226  006F FF8F FFDF     	movff	plusw1,indf2
  8349                           
  8350                           ;stkvar	_n @ sp[(-4)+-6]
  8351  01522C  0EF7               	movlw	-9
  8352  01522E  50E3               	movf	plusw1,w,c
  8353  015230  E108               	bnz	l11108
  8354  015232  0EF6               	movlw	-10
  8355  015234  006F FF8C  F001    	movff	plusw1,btemp
  8356  01523A  0E03               	movlw	3
  8357  01523C  5E01               	subwf	btemp^0,f,c
  8358  01523E  A0D8               	btfss	status,0,c
  8359  015240  D125               	goto	u10730
  8360  015242                     l11108:
  8361                           
  8362                           ;stkvar	_c @ sp[(-4)+-4]
  8363                           ;stkvar	_s @ sp[(-4)+0]
  8364  015242  0EFC               	movlw	-4
  8365  015244  006F FF8C  F00B    	movff	plusw1,btemp+10
  8366  01524A  0EFD               	movlw	-3
  8367  01524C  006F FF8C  F00C    	movff	plusw1,btemp+11
  8368  015252  0E01               	movlw	1
  8369  015254  240B               	addwf	(btemp+10)^0,w,c
  8370  015256  6ED9               	movwf	fsr2l,c
  8371  015258  0E00               	movlw	0
  8372  01525A  200C               	addwfc	(btemp+11)^0,w,c
  8373  01525C  6EDA               	movwf	fsr2h,c
  8374  01525E  0EF8               	movlw	-8
  8375  015260  006F FF8F FFDF     	movff	plusw1,indf2
  8376                           
  8377                           ;stkvar	_c @ sp[(-4)+-4]
  8378                           ;stkvar	_s @ sp[(-4)+0]
  8379  015266  0EFC               	movlw	-4
  8380  015268  006F FF8C  F00B    	movff	plusw1,btemp+10
  8381  01526E  0EFD               	movlw	-3
  8382  015270  006F FF8C  F00C    	movff	plusw1,btemp+11
  8383  015276  0E02               	movlw	2
  8384  015278  240B               	addwf	(btemp+10)^0,w,c
  8385  01527A  6ED9               	movwf	fsr2l,c
  8386  01527C  0E00               	movlw	0
  8387  01527E  200C               	addwfc	(btemp+11)^0,w,c
  8388  015280  6EDA               	movwf	fsr2h,c
  8389  015282  0EF8               	movlw	-8
  8390  015284  006F FF8F FFDF     	movff	plusw1,indf2
  8391                           
  8392                           ;stkvar	_c @ sp[(-4)+-4]
  8393                           ;stkvar	_n @ sp[(-4)+-6]
  8394                           ;stkvar	_s @ sp[(-4)+0]
  8395  01528A  0EFC               	movlw	-4
  8396  01528C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8397  015292  0EFD               	movlw	-3
  8398  015294  006F FF8C  F00C    	movff	plusw1,btemp+11
  8399  01529A  0EF6               	movlw	-10
  8400  01529C  50E3               	movf	plusw1,w,c
  8401  01529E  260B               	addwf	(btemp+10)^0,f,c
  8402  0152A0  0EF7               	movlw	-9
  8403  0152A2  50E3               	movf	plusw1,w,c
  8404  0152A4  220C               	addwfc	(btemp+11)^0,f,c
  8405  0152A6  0EFE               	movlw	254
  8406  0152A8  240B               	addwf	(btemp+10)^0,w,c
  8407  0152AA  6ED9               	movwf	fsr2l,c
  8408  0152AC  0EFF               	movlw	255
  8409  0152AE  200C               	addwfc	(btemp+11)^0,w,c
  8410  0152B0  6EDA               	movwf	fsr2h,c
  8411  0152B2  0EF8               	movlw	-8
  8412  0152B4  006F FF8F FFDF     	movff	plusw1,indf2
  8413                           
  8414                           ;stkvar	_c @ sp[(-4)+-4]
  8415                           ;stkvar	_n @ sp[(-4)+-6]
  8416                           ;stkvar	_s @ sp[(-4)+0]
  8417  0152BA  0EFC               	movlw	-4
  8418  0152BC  006F FF8C  F00B    	movff	plusw1,btemp+10
  8419  0152C2  0EFD               	movlw	-3
  8420  0152C4  006F FF8C  F00C    	movff	plusw1,btemp+11
  8421  0152CA  0EF6               	movlw	-10
  8422  0152CC  50E3               	movf	plusw1,w,c
  8423  0152CE  260B               	addwf	(btemp+10)^0,f,c
  8424  0152D0  0EF7               	movlw	-9
  8425  0152D2  50E3               	movf	plusw1,w,c
  8426  0152D4  220C               	addwfc	(btemp+11)^0,f,c
  8427  0152D6  0EFD               	movlw	253
  8428  0152D8  240B               	addwf	(btemp+10)^0,w,c
  8429  0152DA  6ED9               	movwf	fsr2l,c
  8430  0152DC  0EFF               	movlw	255
  8431  0152DE  200C               	addwfc	(btemp+11)^0,w,c
  8432  0152E0  6EDA               	movwf	fsr2h,c
  8433  0152E2  0EF8               	movlw	-8
  8434  0152E4  006F FF8F FFDF     	movff	plusw1,indf2
  8435                           
  8436                           ;stkvar	_n @ sp[(-4)+-6]
  8437  0152EA  0EF7               	movlw	-9
  8438  0152EC  50E3               	movf	plusw1,w,c
  8439  0152EE  E108               	bnz	l11114
  8440  0152F0  0EF6               	movlw	-10
  8441  0152F2  006F FF8C  F001    	movff	plusw1,btemp
  8442  0152F8  0E07               	movlw	7
  8443  0152FA  5E01               	subwf	btemp^0,f,c
  8444  0152FC  A0D8               	btfss	status,0,c
  8445  0152FE  D0C6               	goto	u10730
  8446  015300                     l11114:
  8447                           
  8448                           ;stkvar	_c @ sp[(-4)+-4]
  8449                           ;stkvar	_s @ sp[(-4)+0]
  8450  015300  0EFC               	movlw	-4
  8451  015302  006F FF8C  F00B    	movff	plusw1,btemp+10
  8452  015308  0EFD               	movlw	-3
  8453  01530A  006F FF8C  F00C    	movff	plusw1,btemp+11
  8454  015310  0E03               	movlw	3
  8455  015312  240B               	addwf	(btemp+10)^0,w,c
  8456  015314  6ED9               	movwf	fsr2l,c
  8457  015316  0E00               	movlw	0
  8458  015318  200C               	addwfc	(btemp+11)^0,w,c
  8459  01531A  6EDA               	movwf	fsr2h,c
  8460  01531C  0EF8               	movlw	-8
  8461  01531E  006F FF8F FFDF     	movff	plusw1,indf2
  8462                           
  8463                           ;stkvar	_c @ sp[(-4)+-4]
  8464                           ;stkvar	_n @ sp[(-4)+-6]
  8465                           ;stkvar	_s @ sp[(-4)+0]
  8466  015324  0EFC               	movlw	-4
  8467  015326  006F FF8C  F00B    	movff	plusw1,btemp+10
  8468  01532C  0EFD               	movlw	-3
  8469  01532E  006F FF8C  F00C    	movff	plusw1,btemp+11
  8470  015334  0EF6               	movlw	-10
  8471  015336  50E3               	movf	plusw1,w,c
  8472  015338  260B               	addwf	(btemp+10)^0,f,c
  8473  01533A  0EF7               	movlw	-9
  8474  01533C  50E3               	movf	plusw1,w,c
  8475  01533E  220C               	addwfc	(btemp+11)^0,f,c
  8476  015340  0EFC               	movlw	252
  8477  015342  240B               	addwf	(btemp+10)^0,w,c
  8478  015344  6ED9               	movwf	fsr2l,c
  8479  015346  0EFF               	movlw	255
  8480  015348  200C               	addwfc	(btemp+11)^0,w,c
  8481  01534A  6EDA               	movwf	fsr2h,c
  8482  01534C  0EF8               	movlw	-8
  8483  01534E  006F FF8F FFDF     	movff	plusw1,indf2
  8484                           
  8485                           ;stkvar	_n @ sp[(-4)+-6]
  8486  015354  0EF7               	movlw	-9
  8487  015356  50E3               	movf	plusw1,w,c
  8488  015358  E108               	bnz	l11120
  8489  01535A  0EF6               	movlw	-10
  8490  01535C  006F FF8C  F001    	movff	plusw1,btemp
  8491  015362  0E09               	movlw	9
  8492  015364  5E01               	subwf	btemp^0,f,c
  8493  015366  A0D8               	btfss	status,0,c
  8494  015368  D091               	goto	u10730
  8495  01536A                     l11120:
  8496                           
  8497                           ;stkvar	_s @ sp[(-4)+0]
  8498  01536A  0EFC               	movlw	-4
  8499  01536C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8500  015372  1E0B               	comf	(btemp+10)^0,f,c
  8501  015374  0EFD               	movlw	-3
  8502  015376  006F FF8C  F00C    	movff	plusw1,btemp+11
  8503  01537C  1E0C               	comf	(btemp+11)^0,f,c
  8504  01537E  2A0B               	incf	(btemp+10)^0,f,c
  8505  015380  B4D8               	btfsc	status,2,c
  8506  015382  2A0C               	incf	(btemp+11)^0,f,c
  8507  015384  0E03               	movlw	3
  8508  015386  160B               	andwf	(btemp+10)^0,f,c
  8509  015388  0E00               	movlw	0
  8510  01538A  160C               	andwf	(btemp+11)^0,f,c
  8511                           
  8512                           ;stkvar	_k @ sp[(-4)+2]
  8513  01538C  0EFE               	movlw	-2
  8514  01538E  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8515  015394  0EFF               	movlw	-1
  8516  015396  0060  F033  FFE3   	movff	btemp+11,plusw1
  8517                           
  8518                           ;stkvar	_k @ sp[(-4)+2]
  8519                           ;stkvar	_s @ sp[(-4)+0]
  8520  01539C  0EFC               	movlw	-4
  8521  01539E  50E3               	movf	plusw1,w,c
  8522  0153A0  6E01               	movwf	btemp^0,c
  8523  0153A2  0EFE               	movlw	-2
  8524  0153A4  50E3               	movf	plusw1,w,c
  8525  0153A6  2601               	addwf	btemp^0,f,c
  8526  0153A8  0EFC               	movlw	-4
  8527  0153AA  0060  F007  FFE3   	movff	btemp,plusw1
  8528  0153B0  0EFD               	movlw	-3
  8529  0153B2  50E3               	movf	plusw1,w,c
  8530  0153B4  6E01               	movwf	btemp^0,c
  8531  0153B6  0EFF               	movlw	-1
  8532  0153B8  50E3               	movf	plusw1,w,c
  8533  0153BA  2201               	addwfc	btemp^0,f,c
  8534  0153BC  0EFD               	movlw	-3
  8535  0153BE  0060  F007  FFE3   	movff	btemp,plusw1
  8536                           
  8537                           ;stkvar	_k @ sp[(-4)+2]
  8538                           ;stkvar	_n @ sp[(-4)+-6]
  8539  0153C4  0EF6               	movlw	-10
  8540  0153C6  50E3               	movf	plusw1,w,c
  8541  0153C8  6E01               	movwf	btemp^0,c
  8542  0153CA  0EFE               	movlw	-2
  8543  0153CC  50E3               	movf	plusw1,w,c
  8544  0153CE  5E01               	subwf	btemp^0,f,c
  8545  0153D0  0EF6               	movlw	-10
  8546  0153D2  0060  F007  FFE3   	movff	btemp,plusw1
  8547  0153D8  0EF7               	movlw	-9
  8548  0153DA  50E3               	movf	plusw1,w,c
  8549  0153DC  6E01               	movwf	btemp^0,c
  8550  0153DE  0EFF               	movlw	-1
  8551  0153E0  50E3               	movf	plusw1,w,c
  8552  0153E2  5A01               	subwfb	btemp^0,f,c
  8553  0153E4  0EF7               	movlw	-9
  8554  0153E6  0060  F007  FFE3   	movff	btemp,plusw1
  8555  0153EC  0EFC               	movlw	252
  8556  0153EE  6E0B               	movwf	(btemp+10)^0,c
  8557  0153F0  0EFF               	movlw	255
  8558  0153F2  6E0C               	movwf	(btemp+11)^0,c
  8559                           
  8560                           ;stkvar	_n @ sp[(-4)+-6]
  8561  0153F4  0EF6               	movlw	-10
  8562  0153F6  006F FF8C  F001    	movff	plusw1,btemp
  8563  0153FC  500B               	movf	(btemp+10)^0,w,c
  8564  0153FE  1601               	andwf	btemp^0,f,c
  8565  015400  0EF6               	movlw	-10
  8566  015402  0060  F007  FFE3   	movff	btemp,plusw1
  8567  015408  0EF7               	movlw	-9
  8568  01540A  006F FF8C  F001    	movff	plusw1,btemp
  8569  015410  500C               	movf	(btemp+11)^0,w,c
  8570  015412  1601               	andwf	btemp^0,f,c
  8571  015414  0EF7               	movlw	-9
  8572  015416  D02E               	goto	L6
  8573  015418                     l11128:
  8574                           
  8575                           ;stkvar	_c @ sp[(-4)+-4]
  8576                           ;stkvar	_s @ sp[(-4)+0]
  8577  015418  0EFC               	movlw	-4
  8578  01541A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8579  015420  0EFD               	movlw	-3
  8580  015422  006F FF8F FFDA     	movff	plusw1,fsr2h
  8581  015428  0EF8               	movlw	-8
  8582  01542A  006F FF8F FFDF     	movff	plusw1,indf2
  8583                           
  8584                           ;stkvar	_n @ sp[(-4)+-6]
  8585  015430  0EF6               	movlw	-10
  8586  015432  006F FF8C  F001    	movff	plusw1,btemp
  8587  015438  0E01               	movlw	1
  8588  01543A  5E01               	subwf	btemp^0,f,c
  8589  01543C  0EF6               	movlw	-10
  8590  01543E  0060  F007  FFE3   	movff	btemp,plusw1
  8591  015444  0EF7               	movlw	-9
  8592  015446  006F FF8C  F001    	movff	plusw1,btemp
  8593  01544C  0E00               	movlw	0
  8594  01544E  5A01               	subwfb	btemp^0,f,c
  8595  015450  0EF7               	movlw	-9
  8596  015452  0060  F007  FFE3   	movff	btemp,plusw1
  8597                           
  8598                           ;stkvar	_s @ sp[(-4)+0]
  8599  015458  0EFC               	movlw	-4
  8600  01545A  50E3               	movf	plusw1,w,c
  8601  01545C  0F01               	addlw	1
  8602  01545E  6E01               	movwf	btemp^0,c
  8603  015460  0EFC               	movlw	-4
  8604  015462  0060  F007  FFE3   	movff	btemp,plusw1
  8605  015468  6A01               	clrf	btemp^0,c
  8606  01546A  0EFD               	movlw	-3
  8607  01546C  50E3               	movf	plusw1,w,c
  8608  01546E  2001               	addwfc	btemp^0,w,c
  8609  015470  6E01               	movwf	btemp^0,c
  8610  015472  0EFD               	movlw	-3
  8611  015474                     L6:
  8612  015474  0060  F007  FFE3   	movff	btemp,plusw1
  8613                           
  8614                           ;stkvar	_n @ sp[(-4)+-6]
  8615  01547A  0EF6               	movlw	-10
  8616  01547C  006F FF8C  F001    	movff	plusw1,btemp
  8617  015482  0EF7               	movlw	-9
  8618  015484  50E3               	movf	plusw1,w,c
  8619  015486  1001               	iorwf	btemp^0,w,c
  8620  015488  A4D8               	btfss	status,2,c
  8621  01548A  D7C6               	goto	l11128
  8622  01548C                     u10730:
  8623                           
  8624                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8625  01548C  0EF6               	movlw	246
  8626  01548E  26E1               	addwf	fsr1l,f,c
  8627  015490  0EFF               	movlw	255
  8628  015492  22E2               	addwfc	fsr1h,f,c
  8629  015494  0012               	return		;funcret
  8630  015496                     __end_of_memset:
  8631                           	opt callstack 0
  8632                           
  8633 ;; *************** function _printf *****************
  8634 ;; Defined at:
  8635 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  8636 ;; Parameters:    Size  Location     Type
  8637 ;;  fmt             2  [STACK] PTR const unsigned char 
  8638 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;  ap              2  [STACK] PTR void [1]
  8641 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8642 ;;  ret             2    0        int 
  8643 ;; Return value:  Size  Location     Type
  8644 ;;                  2  [STACK] int 
  8645 ;; Registers used:
  8646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8647 ;; Tracked objects:
  8648 ;;		On entry : 3F/3B
  8649 ;;		On exit  : 3F/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8656 ;;Total ram usage:        0 bytes
  8657 ;; Hardware stack levels used:    1
  8658 ;; Hardware stack levels required when called:   15
  8659 ;; This function calls:
  8660 ;;		_vfprintf
  8661 ;; This function is called by:
  8662 ;;		_eaDogM_WriteString
  8663 ;;		_send_lcd_cmd_dma
  8664 ;; This function uses a reentrant model
  8665 ;;
  8666                           
  8667                           	psect	text40
  8668  018964                     __ptext40:
  8669                           	opt callstack 0
  8670  018964                     _printf:
  8671                           	opt callstack 0
  8672                           
  8673                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8674  018964  52E6               	movf	postinc1,f,c
  8675  018966  52E6               	movf	postinc1,f,c
  8676                           
  8677                           ;stkvar	?_printf @ sp[(-2)+-3]
  8678                           
  8679                           ;incstack = 0
  8680  018968  0EFB               	movlw	251
  8681  01896A  24E1               	addwf	fsr1l,w,c
  8682  01896C  6E0B               	movwf	(btemp+10)^0,c
  8683  01896E  0EFF               	movlw	255
  8684  018970  20E2               	addwfc	fsr1h,w,c
  8685  018972  6E0C               	movwf	(btemp+11)^0,c
  8686                           
  8687                           ;stkvar	_ap @ sp[(-2)+0]
  8688  018974  0EFF               	movlw	-1
  8689  018976  0060  F033  FFE3   	movff	btemp+11,plusw1
  8690  01897C  0EFE               	movlw	-2
  8691  01897E  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8692                           
  8693                           ;stkvar	_ap @ sp[(-2)+0]
  8694  018984  0EFE               	movlw	254
  8695  018986  24E1               	addwf	fsr1l,w,c
  8696  018988  6E01               	movwf	btemp^0,c
  8697  01898A  0EFF               	movlw	255
  8698  01898C  20E2               	addwfc	fsr1h,w,c
  8699  01898E  6E02               	movwf	(btemp+1)^0,c
  8700  018990  0060  F007  FFE6   	movff	btemp,postinc1
  8701  018996  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8702                           
  8703                           ;stkvar	_fmt @ sp[(-4)+-3]
  8704  01899C  0EF9               	movlw	-7
  8705  01899E  006F FF8F FFE6     	movff	plusw1,postinc1
  8706  0189A4  006F FF8F FFE6     	movff	plusw1,postinc1
  8707  0189AA  0E00               	movlw	0
  8708  0189AC  6EE6               	movwf	postinc1,c
  8709  0189AE  0E00               	movlw	0
  8710  0189B0  6EE6               	movwf	postinc1,c
  8711  0189B2  EC83  F0BF         	call	_vfprintf	;wreg free
  8712                           
  8713                           ; BSR set to: 0
  8714                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  8715  0189B6  52E5               	movf	postdec1,f,c
  8716  0189B8  52E5               	movf	postdec1,f,c
  8717  0189BA  52E5               	movf	postdec1,f,c
  8718  0189BC  50E7               	movf	indf1,w,c
  8719  0189BE  5EE1               	subwf	fsr1l,f,c
  8720  0189C0  0E00               	movlw	0
  8721  0189C2  5AE2               	subwfb	fsr1h,f,c
  8722  0189C4  0012               	return		;funcret
  8723  0189C6                     __end_of_printf:
  8724                           	opt callstack 0
  8725                           
  8726 ;; *************** function _vfprintf *****************
  8727 ;; Defined at:
  8728 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8729 ;; Parameters:    Size  Location     Type
  8730 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8731 ;;		 -> f(6), NULL(0), 
  8732 ;;  fmt             2  [STACK] PTR const unsigned char 
  8733 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8734 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8735 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8736 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8737 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8738 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(20), 
  8739 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8740 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8741 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8742 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8743 ;;  ap              2  [STACK] PTR PTR void 
  8744 ;;		 -> ap(2), ap(2), 
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;  cfmt            2  [STACK] PTR unsigned char 
  8747 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8748 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8749 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8750 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8751 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8752 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(20), 
  8753 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8754 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8755 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8756 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8757 ;; Return value:  Size  Location     Type
  8758 ;;                  2  [STACK] int 
  8759 ;; Registers used:
  8760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8761 ;; Tracked objects:
  8762 ;;		On entry : 0/1
  8763 ;;		On exit  : 3F/0
  8764 ;;		Unchanged: 0/0
  8765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8770 ;;Total ram usage:        0 bytes
  8771 ;; Hardware stack levels used:    1
  8772 ;; Hardware stack levels required when called:   14
  8773 ;; This function calls:
  8774 ;;		_vfpfcnvrt
  8775 ;; This function is called by:
  8776 ;;		_sprintf
  8777 ;;		_printf
  8778 ;; This function uses a reentrant model
  8779 ;;
  8780                           
  8781                           	psect	text41
  8782  017F06                     __ptext41:
  8783                           	opt callstack 0
  8784  017F06                     _vfprintf:
  8785                           	opt callstack 0
  8786                           
  8787                           ; BSR set to: 0
  8788                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8789  017F06  52E6               	movf	postinc1,f,c
  8790  017F08  52E6               	movf	postinc1,f,c
  8791                           
  8792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8793                           ;stkvar	_fmt @ sp[(-2)+-4]
  8794                           
  8795                           ;incstack = 0
  8796  017F0A  0EFA               	movlw	-6
  8797  017F0C  006F FF8C  F00B    	movff	plusw1,btemp+10
  8798  017F12  0EFB               	movlw	-5
  8799  017F14  006F FF8C  F00C    	movff	plusw1,btemp+11
  8800                           
  8801                           ;stkvar	_cfmt @ sp[(-2)+0]
  8802  017F1A  0EFF               	movlw	-1
  8803  017F1C  0060  F033  FFE3   	movff	btemp+11,plusw1
  8804  017F22  0EFE               	movlw	-2
  8805  017F24  0060  F02F  FFE3   	movff	btemp+10,plusw1
  8806                           
  8807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8808  017F2A  0100               	movlb	0	; () banked
  8809  017F2C  6BC7               	clrf	_nout& (0+255),b
  8810  017F2E  6BC8               	clrf	(_nout+1)& (0+255),b
  8811                           
  8812                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8813  017F30  D021               	goto	l11142
  8814  017F32                     l11140:
  8815                           
  8816                           ; BSR set to: 0
  8817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8818                           ;stkvar	_ap @ sp[(-2)+-6]
  8819  017F32  0EF8               	movlw	-8
  8820  017F34  006F FF8F FFE6     	movff	plusw1,postinc1
  8821  017F3A  006F FF8F FFE6     	movff	plusw1,postinc1
  8822                           
  8823                           ;stkvar	_cfmt @ sp[(-4)+0]
  8824  017F40  0EFC               	movlw	252
  8825  017F42  24E1               	addwf	fsr1l,w,c
  8826  017F44  6E01               	movwf	btemp^0,c
  8827  017F46  0EFF               	movlw	255
  8828  017F48  20E2               	addwfc	fsr1h,w,c
  8829  017F4A  6E02               	movwf	(btemp+1)^0,c
  8830  017F4C  0060  F007  FFE6   	movff	btemp,postinc1
  8831  017F52  0060  F00B  FFE6   	movff	btemp+1,postinc1
  8832                           
  8833                           ;stkvar	_fp @ sp[(-6)+-2]
  8834  017F58  0EF8               	movlw	-8
  8835  017F5A  006F FF8F FFE6     	movff	plusw1,postinc1
  8836  017F60  006F FF8F FFE6     	movff	plusw1,postinc1
  8837  017F66  EC22  F089         	call	_vfpfcnvrt	;wreg free
  8838  017F6A  5001               	movf	btemp^0,w,c
  8839  017F6C  0100               	movlb	0	; () banked
  8840  017F6E  27C7               	addwf	_nout& (0+255),f,b
  8841  017F70  5002               	movf	(btemp+1)^0,w,c
  8842  017F72  23C8               	addwfc	(_nout+1)& (0+255),f,b
  8843  017F74                     l11142:
  8844                           
  8845                           ; BSR set to: 0
  8846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8847                           ;stkvar	_cfmt @ sp[(-2)+0]
  8848  017F74  50E1               	movf	fsr1l,w,c
  8849  017F76  0FFE               	addlw	-2
  8850  017F78  6ED9               	movwf	fsr2l,c
  8851  017F7A  50E2               	movf	fsr1h,w,c
  8852  017F7C  6EDA               	movwf	fsr2h,c
  8853  017F7E  0EFF               	movlw	255
  8854  017F80  22DA               	addwfc	fsr2h,f,c
  8855  017F82  006F FF7B FFF6     	movff	postinc2,tblptrl
  8856  017F88  006F FF77 FFF7     	movff	postdec2,tblptrh
  8857  017F8E                     	if	0	;tblptru may be non-zero
  8858  017F8E                     	endif
  8859  017F8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8860  017F8E  0E00               	movlw	low (__mediumconst shr (0+16))
  8861  017F90  6EF8               	movwf	tblptru,c
  8862  017F92                     	endif
  8863  017F92  0008               	tblrd		*
  8864  017F94  50F5               	movf	tablat,w,c
  8865  017F96  0900               	iorlw	0
  8866  017F98  A4D8               	btfss	status,2,c
  8867  017F9A  D7CB               	goto	l11140
  8868                           
  8869                           ; BSR set to: 0
  8870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8871  017F9C  0060  F31C  F001   	movff	_nout,btemp
  8872  017FA2  0060  F320  F002   	movff	_nout+1,btemp+1
  8873                           
  8874                           ; BSR set to: 0
  8875                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  8876  017FA8  0EF8               	movlw	248
  8877  017FAA  26E1               	addwf	fsr1l,f,c
  8878  017FAC  0EFF               	movlw	255
  8879  017FAE  22E2               	addwfc	fsr1h,f,c
  8880  017FB0  0012               	return		;funcret
  8881  017FB2                     __end_of_vfprintf:
  8882                           	opt callstack 0
  8883                           
  8884 ;; *************** function _vfpfcnvrt *****************
  8885 ;; Defined at:
  8886 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8887 ;; Parameters:    Size  Location     Type
  8888 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8889 ;;		 -> f(6), NULL(0), 
  8890 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8891 ;;		 -> cfmt(2), 
  8892 ;;  ap              2  [STACK] PTR PTR void 
  8893 ;;		 -> ap(2), ap(2), 
  8894 ;; Auto vars:     Size  Location     Type
  8895 ;;  llu             8  [STACK] unsigned long long 
  8896 ;;  ll              8  [STACK] long long 
  8897 ;;  f               4  [STACK] long long 
  8898 ;;  ct              3  [STACK] unsigned char [3]
  8899 ;;  vp              3    0        PTR void 
  8900 ;;  cp              2  [STACK] PTR unsigned char 
  8901 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  8902 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
  8903 ;;		 -> STR_3(6), V(188), 
  8904 ;;  i               2    0        int 
  8905 ;;  done            2    0        int 
  8906 ;;  c               1  [STACK] unsigned char 
  8907 ;; Return value:  Size  Location     Type
  8908 ;;                  2  [STACK] int 
  8909 ;; Registers used:
  8910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8911 ;; Tracked objects:
  8912 ;;		On entry : 0/0
  8913 ;;		On exit  : 0/0
  8914 ;;		Unchanged: 0/0
  8915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8920 ;;Total ram usage:        0 bytes
  8921 ;; Hardware stack levels used:    1
  8922 ;; Hardware stack levels required when called:   13
  8923 ;; This function calls:
  8924 ;;		_atoi
  8925 ;;		_ctoa
  8926 ;;		_dtoa
  8927 ;;		_efgtoa
  8928 ;;		_fputc
  8929 ;;		_isdigit
  8930 ;;		_isupper
  8931 ;;		_stoa
  8932 ;;		_strncmp
  8933 ;;		_tolower
  8934 ;;		_xtoa
  8935 ;; This function is called by:
  8936 ;;		_vfprintf
  8937 ;; This function uses a reentrant model
  8938 ;;
  8939                           
  8940                           	psect	text42
  8941  011244                     __ptext42:
  8942                           	opt callstack 0
  8943  011244                     _vfpfcnvrt:
  8944                           	opt callstack 0
  8945                           
  8946                           ; BSR set to: 0
  8947                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8948  011244  0E20               	movlw	32
  8949  011246  26E1               	addwf	fsr1l,f,c
  8950  011248  0E00               	movlw	0
  8951  01124A  22E2               	addwfc	fsr1h,f,c
  8952                           
  8953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8954                           ;stkvar	_fmt @ sp[(-32)+-4]
  8955                           
  8956                           ;incstack = 0
  8957  01124C  0EDC               	movlw	-36
  8958  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8959  011254  0EDD               	movlw	-35
  8960  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  8961  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8962  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  8963  011268                     	if	0	;tblptru may be non-zero
  8964  011268                     	endif
  8965  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8966  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  8967  01126A  6EF8               	movwf	tblptru,c
  8968  01126C                     	endif
  8969  01126C  0008               	tblrd		*
  8970  01126E  50F5               	movf	tablat,w,c
  8971  011270  0A25               	xorlw	37
  8972  011272  A4D8               	btfss	status,2,c
  8973  011274  EF92  F08E         	goto	l11086
  8974                           
  8975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8976                           ;stkvar	_fmt @ sp[(-32)+-4]
  8977  011278  0EDC               	movlw	-36
  8978  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8979  011280  0EDD               	movlw	-35
  8980  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  8981  011288  2ADE               	incf	postinc2,f,c
  8982  01128A  0E00               	movlw	0
  8983  01128C  22DD               	addwfc	postdec2,f,c
  8984                           
  8985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8986  01128E  6A24               	clrf	_width^0,c
  8987  011290  6A25               	clrf	(_width+1)^0,c
  8988  011292  6A28               	clrf	_flags^0,c
  8989  011294  6A29               	clrf	(_flags+1)^0,c
  8990                           
  8991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8992  011296  6826               	setf	_prec^0,c
  8993  011298  6827               	setf	(_prec+1)^0,c
  8994                           
  8995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  8996                           ;stkvar	_fmt @ sp[(-32)+-4]
  8997  01129A  0EDC               	movlw	-36
  8998  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8999  0112A2  0EDD               	movlw	-35
  9000  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9001  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  9002  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  9003  0112B6                     	if	0	;tblptru may be non-zero
  9004  0112B6                     	endif
  9005  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9006  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  9007  0112B8  6EF8               	movwf	tblptru,c
  9008  0112BA                     	endif
  9009  0112BA  0008               	tblrd		*
  9010  0112BC  50F5               	movf	tablat,w,c
  9011  0112BE  0A2A               	xorlw	42
  9012  0112C0  A4D8               	btfss	status,2,c
  9013  0112C2  D031               	goto	l10950
  9014                           
  9015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  9016                           ;stkvar	_fmt @ sp[(-32)+-4]
  9017  0112C4  0EDC               	movlw	-36
  9018  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  9019  0112CC  0EDD               	movlw	-35
  9020  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  9021  0112D4  2ADE               	incf	postinc2,f,c
  9022  0112D6  0E00               	movlw	0
  9023  0112D8  22DD               	addwfc	postdec2,f,c
  9024                           
  9025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  9026                           ;stkvar	_ap @ sp[(-32)+-6]
  9027  0112DA  0EDA               	movlw	-38
  9028  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9029  0112E2  0EDB               	movlw	-37
  9030  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9031  0112EA  0E02               	movlw	2
  9032  0112EC  5EDE               	subwf	postinc2,f,c
  9033  0112EE  0E00               	movlw	0
  9034  0112F0  5ADD               	subwfb	postdec2,f,c
  9035  0112F2  006F FF78  F00B    	movff	postinc2,btemp+10
  9036  0112F8  006F FF74  F00C    	movff	postdec2,btemp+11
  9037  0112FE  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9038  011304  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9039  01130A  006F FF78  F024    	movff	postinc2,_width
  9040  011310  006F FF74  F025    	movff	postdec2,_width+1
  9041                           
  9042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  9043  011316  AE25               	btfss	(_width+1)^0,7,c
  9044  011318  D066               	goto	u10490
  9045                           
  9046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  9047  01131A  8028               	bsf	_flags^0,0,c
  9048                           
  9049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  9050  01131C  6C24               	negf	_width^0,c
  9051  01131E  1E25               	comf	(_width+1)^0,f,c
  9052  011320  B0D8               	btfsc	status,0,c
  9053  011322  2A25               	incf	(_width+1)^0,f,c
  9054  011324  D060               	goto	u10490
  9055  011326                     l10950:
  9056                           
  9057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  9058                           ;stkvar	_fmt @ sp[(-32)+-4]
  9059  011326  0EDC               	movlw	-36
  9060  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  9061  01132E  0EDD               	movlw	-35
  9062  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  9063  011336  006F FF78  F00B    	movff	postinc2,btemp+10
  9064  01133C  006F FF74  F00C    	movff	postdec2,btemp+11
  9065  011342  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9066  011348  0060  F033  FFE6   	movff	btemp+11,postinc1
  9067  01134E  EC57  F0AE         	call	_atoi	;wreg free
  9068  011352  0060  F004  F024   	movff	btemp,_width
  9069  011358  0060  F008  F025   	movff	btemp+1,_width+1
  9070                           
  9071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9072  01135E  D00B               	goto	l10954
  9073  011360                     l10952:
  9074                           
  9075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  9076                           ;stkvar	_fmt @ sp[(-32)+-4]
  9077  011360  0EDC               	movlw	-36
  9078  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  9079  011368  0EDD               	movlw	-35
  9080  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9081  011370  2ADE               	incf	postinc2,f,c
  9082  011372  0E00               	movlw	0
  9083  011374  22DD               	addwfc	postdec2,f,c
  9084  011376                     l10954:
  9085  011376  0ED0               	movlw	208
  9086  011378  6E0B               	movwf	(btemp+10)^0,c
  9087  01137A  0EFF               	movlw	255
  9088  01137C  6E0C               	movwf	(btemp+11)^0,c
  9089                           
  9090                           ;stkvar	_fmt @ sp[(-32)+-4]
  9091  01137E  0EDC               	movlw	-36
  9092  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  9093  011386  0EDD               	movlw	-35
  9094  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  9095  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9096  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  9097  01139A                     	if	0	;tblptru may be non-zero
  9098  01139A                     	endif
  9099  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9100  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  9101  01139C  6EF8               	movwf	tblptru,c
  9102  01139E                     	endif
  9103  01139E  0008               	tblrd		*
  9104  0113A0  50F5               	movf	tablat,w,c
  9105  0113A2  6E09               	movwf	(btemp+8)^0,c
  9106  0113A4  6A0A               	clrf	(btemp+9)^0,c
  9107  0113A6  500B               	movf	(btemp+10)^0,w,c
  9108  0113A8  2609               	addwf	(btemp+8)^0,f,c
  9109  0113AA  500C               	movf	(btemp+11)^0,w,c
  9110  0113AC  220A               	addwfc	(btemp+9)^0,f,c
  9111  0113AE  500A               	movf	(btemp+9)^0,w,c
  9112  0113B0  E106               	bnz	u10470
  9113  0113B2  0E0A               	movlw	10
  9114  0113B4  5C09               	subwf	(btemp+8)^0,w,c
  9115  0113B6  B0D8               	btfsc	status,0,c
  9116  0113B8  D002               	goto	u10470
  9117  0113BA  0E01               	movlw	1
  9118  0113BC  D001               	goto	u10480
  9119  0113BE                     u10470:
  9120  0113BE  0E00               	movlw	0
  9121  0113C0                     u10480:
  9122  0113C0  6E0B               	movwf	(btemp+10)^0,c
  9123  0113C2  6A0C               	clrf	(btemp+11)^0,c
  9124                           
  9125                           ;stkvar	_vfpfcnvrt$5101 @ sp[(-32)+4]
  9126  0113C4  0EE4               	movlw	-28
  9127  0113C6  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9128  0113CC  0EE5               	movlw	-27
  9129  0113CE  0060  F033  FFE3   	movff	btemp+11,plusw1
  9130                           
  9131                           ;stkvar	_vfpfcnvrt$5101 @ sp[(-32)+4]
  9132  0113D4  0EE4               	movlw	-28
  9133  0113D6  006F FF8C  F001    	movff	plusw1,btemp
  9134  0113DC  0EE5               	movlw	-27
  9135  0113DE  50E3               	movf	plusw1,w,c
  9136  0113E0  1001               	iorwf	btemp^0,w,c
  9137  0113E2  A4D8               	btfss	status,2,c
  9138  0113E4  D7BD               	goto	l10952
  9139  0113E6                     u10490:
  9140                           
  9141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  9142                           ;stkvar	_fmt @ sp[(-32)+-4]
  9143  0113E6  0EDC               	movlw	-36
  9144  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9145  0113EE  0EDD               	movlw	-35
  9146  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9147  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9148  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9149  011402                     	if	0	;tblptru may be non-zero
  9150  011402                     	endif
  9151  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9152  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  9153  011404  6EF8               	movwf	tblptru,c
  9154  011406                     	endif
  9155  011406  0008               	tblrd		*
  9156  011408  50F5               	movf	tablat,w,c
  9157  01140A  0A2E               	xorlw	46
  9158  01140C  A4D8               	btfss	status,2,c
  9159  01140E  D0AC               	goto	u10540
  9160                           
  9161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  9162  011410  6A26               	clrf	_prec^0,c
  9163  011412  6A27               	clrf	(_prec+1)^0,c
  9164                           
  9165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  9166                           ;stkvar	_fmt @ sp[(-32)+-4]
  9167  011414  0EDC               	movlw	-36
  9168  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  9169  01141C  0EDD               	movlw	-35
  9170  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9171  011424  2ADE               	incf	postinc2,f,c
  9172  011426  0E00               	movlw	0
  9173  011428  22DD               	addwfc	postdec2,f,c
  9174                           
  9175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  9176                           ;stkvar	_fmt @ sp[(-32)+-4]
  9177  01142A  0EDC               	movlw	-36
  9178  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9179  011432  0EDD               	movlw	-35
  9180  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  9181  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9182  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  9183  011446                     	if	0	;tblptru may be non-zero
  9184  011446                     	endif
  9185  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9186  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  9187  011448  6EF8               	movwf	tblptru,c
  9188  01144A                     	endif
  9189  01144A  0008               	tblrd		*
  9190  01144C  50F5               	movf	tablat,w,c
  9191  01144E  0A2A               	xorlw	42
  9192  011450  A4D8               	btfss	status,2,c
  9193  011452  D02A               	goto	l10972
  9194                           
  9195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  9196                           ;stkvar	_fmt @ sp[(-32)+-4]
  9197  011454  0EDC               	movlw	-36
  9198  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  9199  01145C  0EDD               	movlw	-35
  9200  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9201  011464  2ADE               	incf	postinc2,f,c
  9202  011466  0E00               	movlw	0
  9203  011468  22DD               	addwfc	postdec2,f,c
  9204                           
  9205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  9206                           ;stkvar	_ap @ sp[(-32)+-6]
  9207  01146A  0EDA               	movlw	-38
  9208  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9209  011472  0EDB               	movlw	-37
  9210  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  9211  01147A  0E02               	movlw	2
  9212  01147C  5EDE               	subwf	postinc2,f,c
  9213  01147E  0E00               	movlw	0
  9214  011480  5ADD               	subwfb	postdec2,f,c
  9215  011482  006F FF78  F00B    	movff	postinc2,btemp+10
  9216  011488  006F FF74  F00C    	movff	postdec2,btemp+11
  9217  01148E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9218  011494  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9219  01149A  006F FF78  F026    	movff	postinc2,_prec
  9220  0114A0  006F FF74  F027    	movff	postdec2,_prec+1
  9221                           
  9222                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  9223  0114A6  D060               	goto	u10540
  9224  0114A8                     l10972:
  9225                           
  9226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  9227                           ;stkvar	_fmt @ sp[(-32)+-4]
  9228  0114A8  0EDC               	movlw	-36
  9229  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9230  0114B0  0EDD               	movlw	-35
  9231  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9232  0114B8  006F FF78  F00B    	movff	postinc2,btemp+10
  9233  0114BE  006F FF74  F00C    	movff	postdec2,btemp+11
  9234  0114C4  0060  F02F  FFE6   	movff	btemp+10,postinc1
  9235  0114CA  0060  F033  FFE6   	movff	btemp+11,postinc1
  9236  0114D0  EC57  F0AE         	call	_atoi	;wreg free
  9237  0114D4  0060  F004  F026   	movff	btemp,_prec
  9238  0114DA  0060  F008  F027   	movff	btemp+1,_prec+1
  9239                           
  9240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  9241  0114E0  D00B               	goto	l10976
  9242  0114E2                     l10974:
  9243                           
  9244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  9245                           ;stkvar	_fmt @ sp[(-32)+-4]
  9246  0114E2  0EDC               	movlw	-36
  9247  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9248  0114EA  0EDD               	movlw	-35
  9249  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9250  0114F2  2ADE               	incf	postinc2,f,c
  9251  0114F4  0E00               	movlw	0
  9252  0114F6  22DD               	addwfc	postdec2,f,c
  9253  0114F8                     l10976:
  9254  0114F8  0ED0               	movlw	208
  9255  0114FA  6E0B               	movwf	(btemp+10)^0,c
  9256  0114FC  0EFF               	movlw	255
  9257  0114FE  6E0C               	movwf	(btemp+11)^0,c
  9258                           
  9259                           ;stkvar	_fmt @ sp[(-32)+-4]
  9260  011500  0EDC               	movlw	-36
  9261  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  9262  011508  0EDD               	movlw	-35
  9263  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9264  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  9265  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  9266  01151C                     	if	0	;tblptru may be non-zero
  9267  01151C                     	endif
  9268  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9269  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  9270  01151E  6EF8               	movwf	tblptru,c
  9271  011520                     	endif
  9272  011520  0008               	tblrd		*
  9273  011522  50F5               	movf	tablat,w,c
  9274  011524  6E09               	movwf	(btemp+8)^0,c
  9275  011526  6A0A               	clrf	(btemp+9)^0,c
  9276  011528  500B               	movf	(btemp+10)^0,w,c
  9277  01152A  2609               	addwf	(btemp+8)^0,f,c
  9278  01152C  500C               	movf	(btemp+11)^0,w,c
  9279  01152E  220A               	addwfc	(btemp+9)^0,f,c
  9280  011530  500A               	movf	(btemp+9)^0,w,c
  9281  011532  E106               	bnz	u10520
  9282  011534  0E0A               	movlw	10
  9283  011536  5C09               	subwf	(btemp+8)^0,w,c
  9284  011538  B0D8               	btfsc	status,0,c
  9285  01153A  D002               	goto	u10520
  9286  01153C  0E01               	movlw	1
  9287  01153E  D001               	goto	u10530
  9288  011540                     u10520:
  9289  011540  0E00               	movlw	0
  9290  011542                     u10530:
  9291  011542  6E0B               	movwf	(btemp+10)^0,c
  9292  011544  6A0C               	clrf	(btemp+11)^0,c
  9293                           
  9294                           ;stkvar	_vfpfcnvrt$5102 @ sp[(-32)+0]
  9295  011546  0EE0               	movlw	-32
  9296  011548  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9297  01154E  0EE1               	movlw	-31
  9298  011550  0060  F033  FFE3   	movff	btemp+11,plusw1
  9299                           
  9300                           ;stkvar	_vfpfcnvrt$5102 @ sp[(-32)+0]
  9301  011556  0EE0               	movlw	-32
  9302  011558  006F FF8C  F001    	movff	plusw1,btemp
  9303  01155E  0EE1               	movlw	-31
  9304  011560  50E3               	movf	plusw1,w,c
  9305  011562  1001               	iorwf	btemp^0,w,c
  9306  011564  A4D8               	btfss	status,2,c
  9307  011566  D7BD               	goto	l10974
  9308  011568                     u10540:
  9309                           
  9310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  9311                           ;stkvar	_fmt @ sp[(-32)+-4]
  9312  011568  0EDC               	movlw	-36
  9313  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9314  011570  0EDD               	movlw	-35
  9315  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  9316  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  9317  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  9318  011584                     	if	0	;tblptru may be non-zero
  9319  011584                     	endif
  9320  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9321  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  9322  011586  6EF8               	movwf	tblptru,c
  9323  011588                     	endif
  9324  011588  0008               	tblrd		*
  9325  01158A  50F5               	movf	tablat,w,c
  9326  01158C  6EE6               	movwf	postinc1,c
  9327  01158E  0E00               	movlw	0
  9328  011590  6EE6               	movwf	postinc1,c
  9329  011592  ECC9  F0C2         	call	_tolower	;wreg free
  9330                           
  9331                           ;stkvar	_ct @ sp[(-32)+26]
  9332  011596  0EFA               	movlw	-6
  9333  011598  0060  F007  FFE3   	movff	btemp,plusw1
  9334                           
  9335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  9336                           ;stkvar	_ct @ sp[(-32)+26]
  9337  01159E  0EFA               	movlw	-6
  9338  0115A0  50E3               	movf	plusw1,w,c
  9339  0115A2  B4D8               	btfsc	status,2,c
  9340  0115A4  D05B               	goto	l10992
  9341                           
  9342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  9343                           ;stkvar	_ct @ sp[(-32)+26]
  9344  0115A6  0EFB               	movlw	251
  9345  0115A8  24E1               	addwf	fsr1l,w,c
  9346  0115AA  6ED9               	movwf	fsr2l,c
  9347  0115AC  0EFF               	movlw	255
  9348  0115AE  20E2               	addwfc	fsr1h,w,c
  9349  0115B0  6EDA               	movwf	fsr2h,c
  9350                           
  9351                           ;stkvar	_fmt @ sp[(-32)+-4]
  9352  0115B2  0EDC               	movlw	-36
  9353  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  9354  0115BA  0EDD               	movlw	-35
  9355  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  9356  0115C2  006F FFB8  F00B    	movff	postinc0,btemp+10
  9357  0115C8  006F FFB4  F00C    	movff	postdec0,btemp+11
  9358  0115CE  0E01               	movlw	1
  9359  0115D0  260B               	addwf	(btemp+10)^0,f,c
  9360  0115D2  0E00               	movlw	0
  9361  0115D4  220C               	addwfc	(btemp+11)^0,f,c
  9362  0115D6  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  9363  0115DC  0060  F033  FFF7   	movff	btemp+11,tblptrh
  9364  0115E2                     	if	0	;tblptru may be non-zero
  9365  0115E2                     	endif
  9366  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9367  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  9368  0115E4  6EF8               	movwf	tblptru,c
  9369  0115E6                     	endif
  9370  0115E6  0008               	tblrd		*
  9371  0115E8  50F5               	movf	tablat,w,c
  9372  0115EA  6EE6               	movwf	postinc1,c
  9373  0115EC  0E00               	movlw	0
  9374  0115EE  6EE6               	movwf	postinc1,c
  9375  0115F0  ECC9  F0C2         	call	_tolower	;wreg free
  9376  0115F4  5001               	movf	btemp^0,w,c
  9377  0115F6  6EDF               	movwf	indf2,c
  9378                           
  9379                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  9380                           ;stkvar	_ct @ sp[(-32)+26]
  9381  0115F8  0EFB               	movlw	251
  9382  0115FA  24E1               	addwf	fsr1l,w,c
  9383  0115FC  6ED9               	movwf	fsr2l,c
  9384  0115FE  0EFF               	movlw	255
  9385  011600  20E2               	addwfc	fsr1h,w,c
  9386  011602  6EDA               	movwf	fsr2h,c
  9387  011604  50DF               	movf	indf2,w,c
  9388  011606  B4D8               	btfsc	status,2,c
  9389  011608  D029               	goto	l10992
  9390                           
  9391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  9392                           ;stkvar	_ct @ sp[(-32)+26]
  9393  01160A  0EFC               	movlw	252
  9394  01160C  24E1               	addwf	fsr1l,w,c
  9395  01160E  6ED9               	movwf	fsr2l,c
  9396  011610  0EFF               	movlw	255
  9397  011612  20E2               	addwfc	fsr1h,w,c
  9398  011614  6EDA               	movwf	fsr2h,c
  9399                           
  9400                           ;stkvar	_fmt @ sp[(-32)+-4]
  9401  011616  0EDC               	movlw	-36
  9402  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  9403  01161E  0EDD               	movlw	-35
  9404  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  9405  011626  006F FFB8  F00B    	movff	postinc0,btemp+10
  9406  01162C  006F FFB4  F00C    	movff	postdec0,btemp+11
  9407  011632  0E02               	movlw	2
  9408  011634  260B               	addwf	(btemp+10)^0,f,c
  9409  011636  0E00               	movlw	0
  9410  011638  220C               	addwfc	(btemp+11)^0,f,c
  9411  01163A  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  9412  011640  0060  F033  FFF7   	movff	btemp+11,tblptrh
  9413  011646                     	if	0	;tblptru may be non-zero
  9414  011646                     	endif
  9415  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9416  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  9417  011648  6EF8               	movwf	tblptru,c
  9418  01164A                     	endif
  9419  01164A  0008               	tblrd		*
  9420  01164C  50F5               	movf	tablat,w,c
  9421  01164E  6EE6               	movwf	postinc1,c
  9422  011650  0E00               	movlw	0
  9423  011652  6EE6               	movwf	postinc1,c
  9424  011654  ECC9  F0C2         	call	_tolower	;wreg free
  9425  011658  5001               	movf	btemp^0,w,c
  9426  01165A  6EDF               	movwf	indf2,c
  9427  01165C                     l10992:
  9428                           
  9429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  9430                           ;stkvar	_fmt @ sp[(-32)+-4]
  9431  01165C  0EDC               	movlw	-36
  9432  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9433  011664  0EDD               	movlw	-35
  9434  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  9435  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9436  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  9437  011678                     	if	0	;tblptru may be non-zero
  9438  011678                     	endif
  9439  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9440  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  9441  01167A  6EF8               	movwf	tblptru,c
  9442  01167C                     	endif
  9443  01167C  0008               	tblrd		*
  9444  01167E  50F5               	movf	tablat,w,c
  9445  011680  0A63               	xorlw	99
  9446  011682  A4D8               	btfss	status,2,c
  9447  011684  D036               	goto	l11002
  9448                           
  9449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  9450                           ;stkvar	_fmt @ sp[(-32)+-4]
  9451  011686  0EDC               	movlw	-36
  9452  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  9453  01168E  0EDD               	movlw	-35
  9454  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  9455  011696  2ADE               	incf	postinc2,f,c
  9456  011698  0E00               	movlw	0
  9457  01169A  22DD               	addwfc	postdec2,f,c
  9458                           
  9459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9460                           ;stkvar	_ap @ sp[(-32)+-6]
  9461  01169C  0EDA               	movlw	-38
  9462  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9463  0116A4  0EDB               	movlw	-37
  9464  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9465  0116AC  0E02               	movlw	2
  9466  0116AE  5EDE               	subwf	postinc2,f,c
  9467  0116B0  0E00               	movlw	0
  9468  0116B2  5ADD               	subwfb	postdec2,f,c
  9469  0116B4  006F FF78  F00B    	movff	postinc2,btemp+10
  9470  0116BA  006F FF74  F00C    	movff	postdec2,btemp+11
  9471  0116C0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9472  0116C6  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9473  0116CC  50DF               	movf	indf2,w,c
  9474  0116CE  6E0C               	movwf	(btemp+11)^0,c
  9475                           
  9476                           ;stkvar	_c @ sp[(-32)+31]
  9477  0116D0  0EFF               	movlw	-1
  9478  0116D2  0060  F033  FFE3   	movff	btemp+11,plusw1
  9479                           
  9480                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  9481                           ;stkvar	_c @ sp[(-32)+31]
  9482  0116D8  0EFF               	movlw	-1
  9483  0116DA  50E3               	movf	plusw1,w,c
  9484  0116DC  6EE6               	movwf	postinc1,c
  9485                           
  9486                           ;stkvar	_fp @ sp[(-33)+-2]
  9487  0116DE  0EDD               	movlw	-35
  9488  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  9489  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  9490  0116EC  EC43  F0C2         	call	_ctoa	;wreg free
  9491  0116F0  D343               	goto	l2226
  9492  0116F2                     l11002:
  9493                           
  9494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  9495                           ;stkvar	_fmt @ sp[(-32)+-4]
  9496  0116F2  0EDC               	movlw	-36
  9497  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9498  0116FA  0EDD               	movlw	-35
  9499  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9500  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  9501  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  9502  01170E                     	if	0	;tblptru may be non-zero
  9503  01170E                     	endif
  9504  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9505  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  9506  011710  6EF8               	movwf	tblptru,c
  9507  011712                     	endif
  9508  011712  0008               	tblrd		*
  9509  011714  50F5               	movf	tablat,w,c
  9510  011716  0A64               	xorlw	100
  9511  011718  B4D8               	btfsc	status,2,c
  9512  01171A  D015               	goto	u10590
  9513                           
  9514                           ;stkvar	_fmt @ sp[(-32)+-4]
  9515  01171C  0EDC               	movlw	-36
  9516  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9517  011724  0EDD               	movlw	-35
  9518  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  9519  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9520  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  9521  011738                     	if	0	;tblptru may be non-zero
  9522  011738                     	endif
  9523  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9524  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  9525  01173A  6EF8               	movwf	tblptru,c
  9526  01173C                     	endif
  9527  01173C  0008               	tblrd		*
  9528  01173E  50F5               	movf	tablat,w,c
  9529  011740  0A69               	xorlw	105
  9530  011742  A4D8               	btfss	status,2,c
  9531  011744  D075               	goto	l11014
  9532  011746                     u10590:
  9533                           
  9534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9535                           ;stkvar	_fmt @ sp[(-32)+-4]
  9536  011746  0EDC               	movlw	-36
  9537  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  9538  01174E  0EDD               	movlw	-35
  9539  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  9540  011756  2ADE               	incf	postinc2,f,c
  9541  011758  0E00               	movlw	0
  9542  01175A  22DD               	addwfc	postdec2,f,c
  9543                           
  9544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9545                           ;stkvar	_ap @ sp[(-32)+-6]
  9546  01175C  0EDA               	movlw	-38
  9547  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9548  011764  0EDB               	movlw	-37
  9549  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  9550  01176C  0E02               	movlw	2
  9551  01176E  5EDE               	subwf	postinc2,f,c
  9552  011770  0E00               	movlw	0
  9553  011772  5ADD               	subwfb	postdec2,f,c
  9554  011774  006F FF78  F00B    	movff	postinc2,btemp+10
  9555  01177A  006F FF74  F00C    	movff	postdec2,btemp+11
  9556  011780  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9557  011786  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9558  01178C  006F FF78  F00B    	movff	postinc2,btemp+10
  9559  011792  006F FF74  F00C    	movff	postdec2,btemp+11
  9560                           
  9561                           ;stkvar	_ll @ sp[(-32)+14]
  9562  011798  0EEE               	movlw	-18
  9563  01179A  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9564  0117A0  0EEF               	movlw	-17
  9565  0117A2  0060  F033  FFE3   	movff	btemp+11,plusw1
  9566  0117A8  6A01               	clrf	btemp^0,c
  9567  0117AA  BEE3               	btfsc	plusw1,7,c
  9568  0117AC  6801               	setf	btemp^0,c
  9569  0117AE  0EF0               	movlw	-16
  9570  0117B0  0060  F007  FFE3   	movff	btemp,plusw1
  9571  0117B6  0EF1               	movlw	-15
  9572  0117B8  0060  F007  FFE3   	movff	btemp,plusw1
  9573  0117BE  0EF2               	movlw	-14
  9574  0117C0  0060  F007  FFE3   	movff	btemp,plusw1
  9575  0117C6  0EF3               	movlw	-13
  9576  0117C8  0060  F007  FFE3   	movff	btemp,plusw1
  9577  0117CE  0EF4               	movlw	-12
  9578  0117D0  0060  F007  FFE3   	movff	btemp,plusw1
  9579  0117D6  0EF5               	movlw	-11
  9580  0117D8  0060  F007  FFE3   	movff	btemp,plusw1
  9581                           
  9582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9583                           ;stkvar	_ll @ sp[(-32)+14]
  9584  0117DE  50E1               	movf	fsr1l,w,c
  9585  0117E0  0FEE               	addlw	-18
  9586  0117E2  6ED9               	movwf	fsr2l,c
  9587  0117E4  50E2               	movf	fsr1h,w,c
  9588  0117E6  6EDA               	movwf	fsr2h,c
  9589  0117E8  0EFF               	movlw	255
  9590  0117EA  22DA               	addwfc	fsr2h,f,c
  9591  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  9592  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  9593  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  9594  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  9595  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  9596  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  9597  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  9598  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  9599                           
  9600                           ;stkvar	_fp @ sp[(-40)+-2]
  9601  01181C  0ED6               	movlw	-42
  9602  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  9603  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  9604  01182A  EC02  F0A3         	call	_dtoa	;wreg free
  9605  01182E  D2A4               	goto	l2226
  9606  011830                     l11014:
  9607                           
  9608                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  9609                           ;stkvar	_ct @ sp[(-32)+26]
  9610  011830  0EFA               	movlw	-6
  9611  011832  006F FF8C  F001    	movff	plusw1,btemp
  9612  011838  0E66               	movlw	102
  9613  01183A  1801               	xorwf	btemp^0,w,c
  9614  01183C  A4D8               	btfss	status,2,c
  9615  01183E  D06E               	goto	l11026
  9616                           
  9617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  9618                           ;stkvar	_fmt @ sp[(-32)+-4]
  9619  011840  0EDC               	movlw	-36
  9620  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  9621  011848  0EDD               	movlw	-35
  9622  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9623  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  9624  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  9625  01185C                     	if	0	;tblptru may be non-zero
  9626  01185C                     	endif
  9627  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9628  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  9629  01185E  6EF8               	movwf	tblptru,c
  9630  011860                     	endif
  9631                           
  9632                           ;stkvar	_c @ sp[(-32)+31]
  9633  011860  0008               	tblrd		*
  9634  011862  0EFF               	movlw	-1
  9635  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  9636                           
  9637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  9638                           ;stkvar	_fmt @ sp[(-32)+-4]
  9639  01186A  0EDC               	movlw	-36
  9640  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9641  011872  0EDD               	movlw	-35
  9642  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  9643  01187A  2ADE               	incf	postinc2,f,c
  9644  01187C  0E00               	movlw	0
  9645  01187E  22DD               	addwfc	postdec2,f,c
  9646                           
  9647                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  9648                           ;stkvar	_ap @ sp[(-32)+-6]
  9649  011880  0EDA               	movlw	-38
  9650  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  9651  011888  0EDB               	movlw	-37
  9652  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9653  011890  0E04               	movlw	4
  9654  011892  5EDE               	subwf	postinc2,f,c
  9655  011894  0E00               	movlw	0
  9656  011896  5ADD               	subwfb	postdec2,f,c
  9657  011898  006F FF78  F00B    	movff	postinc2,btemp+10
  9658  01189E  006F FF74  F00C    	movff	postdec2,btemp+11
  9659  0118A4  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9660  0118AA  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9661  0118B0  006F FF78  F009    	movff	postinc2,btemp+8
  9662  0118B6  006F FF78  F00A    	movff	postinc2,btemp+9
  9663  0118BC  006F FF78  F00B    	movff	postinc2,btemp+10
  9664  0118C2  006F FF78  F00C    	movff	postinc2,btemp+11
  9665                           
  9666                           ;stkvar	_f @ sp[(-32)+22]
  9667  0118C8  0EF6               	movlw	-10
  9668  0118CA  0060  F027  FFE3   	movff	btemp+8,plusw1
  9669  0118D0  0EF7               	movlw	-9
  9670  0118D2  0060  F02B  FFE3   	movff	btemp+9,plusw1
  9671  0118D8  0EF8               	movlw	-8
  9672  0118DA  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9673  0118E0  0EF9               	movlw	-7
  9674  0118E2  0060  F033  FFE3   	movff	btemp+11,plusw1
  9675  0118E8                     l11022:
  9676                           
  9677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  9678                           ;stkvar	_c @ sp[(-32)+31]
  9679  0118E8  0EFF               	movlw	-1
  9680  0118EA  50E3               	movf	plusw1,w,c
  9681  0118EC  6EE6               	movwf	postinc1,c
  9682                           
  9683                           ;stkvar	_f @ sp[(-33)+22]
  9684  0118EE  0EF5               	movlw	-11
  9685  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  9686  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  9687  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  9688  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  9689                           
  9690                           ;stkvar	_fp @ sp[(-37)+-2]
  9691  011908  0ED9               	movlw	-39
  9692  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  9693  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  9694  011916  EC00  F080         	call	_efgtoa	;wreg free
  9695  01191A  D22E               	goto	l2226
  9696  01191C                     l11026:
  9697                           
  9698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  9699  01191C  0E02               	movlw	2
  9700  01191E  6EE6               	movwf	postinc1,c
  9701  011920  0E00               	movlw	0
  9702  011922  6EE6               	movwf	postinc1,c
  9703  011924  0EF6               	movlw	low STR_54
  9704  011926  6EE6               	movwf	postinc1,c
  9705  011928  0EFF               	movlw	high STR_54
  9706  01192A  6EE6               	movwf	postinc1,c
  9707                           
  9708                           ;stkvar	_ct @ sp[(-36)+26]
  9709  01192C  0EF6               	movlw	246
  9710  01192E  24E1               	addwf	fsr1l,w,c
  9711  011930  6E01               	movwf	btemp^0,c
  9712  011932  0EFF               	movlw	255
  9713  011934  20E2               	addwfc	fsr1h,w,c
  9714  011936  6E02               	movwf	(btemp+1)^0,c
  9715  011938  0060  F007  FFE6   	movff	btemp,postinc1
  9716  01193E  0060  F00B  FFE6   	movff	btemp+1,postinc1
  9717  011944  ECBC  F0B2         	call	_strncmp	;wreg free
  9718  011948  5001               	movf	btemp^0,w,c
  9719  01194A  1002               	iorwf	(btemp+1)^0,w,c
  9720  01194C  A4D8               	btfss	status,2,c
  9721  01194E  D096               	goto	l11046
  9722                           
  9723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  9724                           ;stkvar	_fmt @ sp[(-32)+-4]
  9725  011950  0EDC               	movlw	-36
  9726  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  9727  011958  0EDD               	movlw	-35
  9728  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9729  011960  006F FF78  F00B    	movff	postinc2,btemp+10
  9730  011966  006F FF74  F00C    	movff	postdec2,btemp+11
  9731  01196C  0E01               	movlw	1
  9732  01196E  260B               	addwf	(btemp+10)^0,f,c
  9733  011970  0E00               	movlw	0
  9734  011972  220C               	addwfc	(btemp+11)^0,f,c
  9735  011974  0060  F02F  FFF6   	movff	btemp+10,tblptrl
  9736  01197A  0060  F033  FFF7   	movff	btemp+11,tblptrh
  9737  011980                     	if	0	;tblptru may be non-zero
  9738  011980                     	endif
  9739  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9740  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  9741  011982  6EF8               	movwf	tblptru,c
  9742  011984                     	endif
  9743                           
  9744                           ;stkvar	_c @ sp[(-32)+31]
  9745  011984  0008               	tblrd		*
  9746  011986  0EFF               	movlw	-1
  9747  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  9748  01198E  0EBF               	movlw	191
  9749  011990  6E0B               	movwf	(btemp+10)^0,c
  9750  011992  0EFF               	movlw	255
  9751  011994  6E0C               	movwf	(btemp+11)^0,c
  9752                           
  9753                           ;stkvar	_fmt @ sp[(-32)+-4]
  9754  011996  0EDC               	movlw	-36
  9755  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  9756  01199E  0EDD               	movlw	-35
  9757  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9758  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9759  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9760  0119B2                     	if	0	;tblptru may be non-zero
  9761  0119B2                     	endif
  9762  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9763  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  9764  0119B4  6EF8               	movwf	tblptru,c
  9765  0119B6                     	endif
  9766  0119B6  0008               	tblrd		*
  9767  0119B8  50F5               	movf	tablat,w,c
  9768  0119BA  6E09               	movwf	(btemp+8)^0,c
  9769  0119BC  6A0A               	clrf	(btemp+9)^0,c
  9770  0119BE  500B               	movf	(btemp+10)^0,w,c
  9771  0119C0  2609               	addwf	(btemp+8)^0,f,c
  9772  0119C2  500C               	movf	(btemp+11)^0,w,c
  9773  0119C4  220A               	addwfc	(btemp+9)^0,f,c
  9774  0119C6  500A               	movf	(btemp+9)^0,w,c
  9775  0119C8  E106               	bnz	u10620
  9776  0119CA  0E1A               	movlw	26
  9777  0119CC  5C09               	subwf	(btemp+8)^0,w,c
  9778  0119CE  B0D8               	btfsc	status,0,c
  9779  0119D0  D002               	goto	u10620
  9780  0119D2  0E01               	movlw	1
  9781  0119D4  D001               	goto	u10630
  9782  0119D6                     u10620:
  9783  0119D6  0E00               	movlw	0
  9784  0119D8                     u10630:
  9785  0119D8  6E0B               	movwf	(btemp+10)^0,c
  9786  0119DA  6A0C               	clrf	(btemp+11)^0,c
  9787                           
  9788                           ;stkvar	_vfpfcnvrt$5108 @ sp[(-32)+2]
  9789  0119DC  0EE2               	movlw	-30
  9790  0119DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9791  0119E4  0EE3               	movlw	-29
  9792  0119E6  0060  F033  FFE3   	movff	btemp+11,plusw1
  9793                           
  9794                           ;stkvar	_vfpfcnvrt$5108 @ sp[(-32)+2]
  9795  0119EC  0EE2               	movlw	-30
  9796  0119EE  006F FF8C  F001    	movff	plusw1,btemp
  9797  0119F4  0EE3               	movlw	-29
  9798  0119F6  50E3               	movf	plusw1,w,c
  9799  0119F8  1001               	iorwf	btemp^0,w,c
  9800                           
  9801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9802                           ;stkvar	_ap @ sp[(-32)+-6]
  9803                           
  9804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  9805                           
  9806                           ;stkvar	_f @ sp[(-32)+22]
  9807                           
  9808                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  9809                           ;stkvar	_ap @ sp[(-32)+-6]
  9810  0119FA  0EDA               	movlw	-38
  9811  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9812  011A02  0EDB               	movlw	-37
  9813  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  9814  011A0A  0E04               	movlw	4
  9815  011A0C  5EDE               	subwf	postinc2,f,c
  9816  011A0E  0E00               	movlw	0
  9817  011A10  5ADD               	subwfb	postdec2,f,c
  9818  011A12  006F FF78  F00B    	movff	postinc2,btemp+10
  9819  011A18  006F FF74  F00C    	movff	postdec2,btemp+11
  9820  011A1E  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9821  011A24  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9822  011A2A  006F FF78  F009    	movff	postinc2,btemp+8
  9823  011A30  006F FF78  F00A    	movff	postinc2,btemp+9
  9824  011A36  006F FF78  F00B    	movff	postinc2,btemp+10
  9825  011A3C  006F FF78  F00C    	movff	postinc2,btemp+11
  9826                           
  9827                           ;stkvar	_f @ sp[(-32)+22]
  9828  011A42  0EF6               	movlw	-10
  9829  011A44  0060  F027  FFE3   	movff	btemp+8,plusw1
  9830  011A4A  0EF7               	movlw	-9
  9831  011A4C  0060  F02B  FFE3   	movff	btemp+9,plusw1
  9832  011A52  0EF8               	movlw	-8
  9833  011A54  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9834  011A5A  0EF9               	movlw	-7
  9835  011A5C  0060  F033  FFE3   	movff	btemp+11,plusw1
  9836                           
  9837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  9838                           ;stkvar	_fmt @ sp[(-32)+-4]
  9839  011A62  0EDC               	movlw	-36
  9840  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  9841  011A6A  0EDD               	movlw	-35
  9842  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9843  011A72  0E02               	movlw	2
  9844  011A74  26DE               	addwf	postinc2,f,c
  9845  011A76  0E00               	movlw	0
  9846  011A78  22DD               	addwfc	postdec2,f,c
  9847  011A7A  D736               	goto	l11022
  9848  011A7C                     l11046:
  9849                           
  9850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9851                           ;stkvar	_fmt @ sp[(-32)+-4]
  9852  011A7C  0EDC               	movlw	-36
  9853  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9854  011A84  0EDD               	movlw	-35
  9855  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  9856  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9857  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  9858  011A98                     	if	0	;tblptru may be non-zero
  9859  011A98                     	endif
  9860  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9861  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  9862  011A9A  6EF8               	movwf	tblptru,c
  9863  011A9C                     	endif
  9864  011A9C  0008               	tblrd		*
  9865  011A9E  50F5               	movf	tablat,w,c
  9866  011AA0  0A73               	xorlw	115
  9867  011AA2  A4D8               	btfss	status,2,c
  9868  011AA4  D042               	goto	l11056
  9869                           
  9870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9871                           ;stkvar	_fmt @ sp[(-32)+-4]
  9872  011AA6  0EDC               	movlw	-36
  9873  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9874  011AAE  0EDD               	movlw	-35
  9875  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9876  011AB6  2ADE               	incf	postinc2,f,c
  9877  011AB8  0E00               	movlw	0
  9878  011ABA  22DD               	addwfc	postdec2,f,c
  9879                           
  9880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9881                           ;stkvar	_ap @ sp[(-32)+-6]
  9882  011ABC  0EDA               	movlw	-38
  9883  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9884  011AC4  0EDB               	movlw	-37
  9885  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9886  011ACC  0E02               	movlw	2
  9887  011ACE  5EDE               	subwf	postinc2,f,c
  9888  011AD0  0E00               	movlw	0
  9889  011AD2  5ADD               	subwfb	postdec2,f,c
  9890  011AD4  006F FF78  F00B    	movff	postinc2,btemp+10
  9891  011ADA  006F FF74  F00C    	movff	postdec2,btemp+11
  9892  011AE0  0060  F02F  FFD9   	movff	btemp+10,fsr2l
  9893  011AE6  0060  F033  FFDA   	movff	btemp+11,fsr2h
  9894  011AEC  006F FF78  F00B    	movff	postinc2,btemp+10
  9895  011AF2  006F FF74  F00C    	movff	postdec2,btemp+11
  9896                           
  9897                           ;stkvar	_cp @ sp[(-32)+29]
  9898  011AF8  0EFE               	movlw	-2
  9899  011AFA  0060  F033  FFE3   	movff	btemp+11,plusw1
  9900  011B00  0EFD               	movlw	-3
  9901  011B02  0060  F02F  FFE3   	movff	btemp+10,plusw1
  9902                           
  9903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9904                           ;stkvar	_cp @ sp[(-32)+29]
  9905  011B08  0EFD               	movlw	-3
  9906  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9907  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  9908                           
  9909                           ;stkvar	_fp @ sp[(-34)+-2]
  9910  011B16  0EDC               	movlw	-36
  9911  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  9912  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  9913  011B24  ECB8  F0AB         	call	_stoa	;wreg free
  9914  011B28  D127               	goto	l2226
  9915  011B2A                     l11056:
  9916                           
  9917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  9918                           ;stkvar	_fmt @ sp[(-32)+-4]
  9919  011B2A  0EDC               	movlw	-36
  9920  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9921  011B32  0EDD               	movlw	-35
  9922  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  9923  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9924  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  9925  011B46                     	if	0	;tblptru may be non-zero
  9926  011B46                     	endif
  9927  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9928  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  9929  011B48  6EF8               	movwf	tblptru,c
  9930  011B4A                     	endif
  9931  011B4A  0008               	tblrd		*
  9932  011B4C  50F5               	movf	tablat,w,c
  9933  011B4E  0A78               	xorlw	120
  9934  011B50  B4D8               	btfsc	status,2,c
  9935  011B52  D015               	goto	u10670
  9936                           
  9937                           ;stkvar	_fmt @ sp[(-32)+-4]
  9938  011B54  0EDC               	movlw	-36
  9939  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  9940  011B5C  0EDD               	movlw	-35
  9941  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9942  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  9943  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9944  011B70                     	if	0	;tblptru may be non-zero
  9945  011B70                     	endif
  9946  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9947  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  9948  011B72  6EF8               	movwf	tblptru,c
  9949  011B74                     	endif
  9950  011B74  0008               	tblrd		*
  9951  011B76  50F5               	movf	tablat,w,c
  9952  011B78  0A58               	xorlw	88
  9953  011B7A  A4D8               	btfss	status,2,c
  9954  011B7C  D094               	goto	l11070
  9955  011B7E                     u10670:
  9956                           
  9957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  9958                           ;stkvar	_fmt @ sp[(-32)+-4]
  9959  011B7E  0EDC               	movlw	-36
  9960  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  9961  011B86  0EDD               	movlw	-35
  9962  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  9963  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9964  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  9965  011B9A                     	if	0	;tblptru may be non-zero
  9966  011B9A                     	endif
  9967  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9968  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  9969  011B9C  6EF8               	movwf	tblptru,c
  9970  011B9E                     	endif
  9971                           
  9972                           ;stkvar	_c @ sp[(-32)+31]
  9973  011B9E  0008               	tblrd		*
  9974  011BA0  0EFF               	movlw	-1
  9975  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  9976                           
  9977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  9978                           ;stkvar	_fmt @ sp[(-32)+-4]
  9979  011BA8  0EDC               	movlw	-36
  9980  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9981  011BB0  0EDD               	movlw	-35
  9982  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9983  011BB8  2ADE               	incf	postinc2,f,c
  9984  011BBA  0E00               	movlw	0
  9985  011BBC  22DD               	addwfc	postdec2,f,c
  9986                           
  9987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  9988                           ;stkvar	_ap @ sp[(-32)+-6]
  9989  011BBE  0EDA               	movlw	-38
  9990  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9991  011BC6  0EDB               	movlw	-37
  9992  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9993  011BCE  0E02               	movlw	2
  9994  011BD0  5EDE               	subwf	postinc2,f,c
  9995  011BD2  0E00               	movlw	0
  9996  011BD4  5ADD               	subwfb	postdec2,f,c
  9997  011BD6  006F FF78  F00B    	movff	postinc2,btemp+10
  9998  011BDC  006F FF74  F00C    	movff	postdec2,btemp+11
  9999  011BE2  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 10000  011BE8  0060  F033  FFDA   	movff	btemp+11,fsr2h
 10001  011BEE  006F FF78  F00B    	movff	postinc2,btemp+10
 10002  011BF4  006F FF74  F00C    	movff	postdec2,btemp+11
 10003  011BFA  500B               	movf	(btemp+10)^0,w,c
 10004  011BFC  6E11               	movwf	(btemp+16)^0,c
 10005  011BFE  500C               	movf	(btemp+11)^0,w,c
 10006  011C00  6E12               	movwf	(btemp+17)^0,c
 10007  011C02  6A13               	clrf	(btemp+18)^0,c
 10008  011C04  6A14               	clrf	(btemp+19)^0,c
 10009  011C06  6A15               	clrf	(btemp+20)^0,c
 10010  011C08  6A16               	clrf	(btemp+21)^0,c
 10011  011C0A  6A17               	clrf	(btemp+22)^0,c
 10012  011C0C  6A18               	clrf	(btemp+23)^0,c
 10013                           
 10014                           ;stkvar	_llu @ sp[(-32)+6]
 10015  011C0E  0EE6               	movlw	-26
 10016  011C10  0060  F047  FFE3   	movff	btemp+16,plusw1
 10017  011C16  0EE7               	movlw	-25
 10018  011C18  0060  F04B  FFE3   	movff	btemp+17,plusw1
 10019  011C1E  0EE8               	movlw	-24
 10020  011C20  0060  F04F  FFE3   	movff	btemp+18,plusw1
 10021  011C26  0EE9               	movlw	-23
 10022  011C28  0060  F053  FFE3   	movff	btemp+19,plusw1
 10023  011C2E  0EEA               	movlw	-22
 10024  011C30  0060  F057  FFE3   	movff	btemp+20,plusw1
 10025  011C36  0EEB               	movlw	-21
 10026  011C38  0060  F05B  FFE3   	movff	btemp+21,plusw1
 10027  011C3E  0EEC               	movlw	-20
 10028  011C40  0060  F05F  FFE3   	movff	btemp+22,plusw1
 10029  011C46  0EED               	movlw	-19
 10030  011C48  0060  F063  FFE3   	movff	btemp+23,plusw1
 10031                           
 10032                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 10033                           ;stkvar	_c @ sp[(-32)+31]
 10034  011C4E  0EFF               	movlw	-1
 10035  011C50  50E3               	movf	plusw1,w,c
 10036  011C52  6EE6               	movwf	postinc1,c
 10037                           
 10038                           ;stkvar	_llu @ sp[(-33)+6]
 10039  011C54  50E1               	movf	fsr1l,w,c
 10040  011C56  0FE5               	addlw	-27
 10041  011C58  6ED9               	movwf	fsr2l,c
 10042  011C5A  50E2               	movf	fsr1h,w,c
 10043  011C5C  6EDA               	movwf	fsr2h,c
 10044  011C5E  0EFF               	movlw	255
 10045  011C60  22DA               	addwfc	fsr2h,f,c
 10046  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
 10047  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
 10048  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
 10049  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
 10050  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
 10051  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
 10052  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
 10053  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
 10054                           
 10055                           ;stkvar	_fp @ sp[(-41)+-2]
 10056  011C92  0ED5               	movlw	-43
 10057  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
 10058  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
 10059  011CA0  EC42  F0A5         	call	_xtoa	;wreg free
 10060  011CA4  D069               	goto	l2226
 10061  011CA6                     l11070:
 10062                           
 10063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 10064                           ;stkvar	_fmt @ sp[(-32)+-4]
 10065  011CA6  0EDC               	movlw	-36
 10066  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10067  011CAE  0EDD               	movlw	-35
 10068  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10069  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10070  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10071  011CC2                     	if	0	;tblptru may be non-zero
 10072  011CC2                     	endif
 10073  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10074  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
 10075  011CC4  6EF8               	movwf	tblptru,c
 10076  011CC6                     	endif
 10077  011CC6  0008               	tblrd		*
 10078  011CC8  50F5               	movf	tablat,w,c
 10079  011CCA  0A25               	xorlw	37
 10080  011CCC  A4D8               	btfss	status,2,c
 10081  011CCE  D01A               	goto	l11080
 10082                           
 10083                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 10084                           ;stkvar	_fmt @ sp[(-32)+-4]
 10085  011CD0  0EDC               	movlw	-36
 10086  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
 10087  011CD8  0EDD               	movlw	-35
 10088  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
 10089  011CE0  2ADE               	incf	postinc2,f,c
 10090  011CE2  0E00               	movlw	0
 10091  011CE4  22DD               	addwfc	postdec2,f,c
 10092                           
 10093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 10094                           ;stkvar	_fp @ sp[(-32)+-2]
 10095  011CE6  0EDE               	movlw	-34
 10096  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
 10097  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
 10098  011CF4  0E25               	movlw	37
 10099  011CF6  6EE6               	movwf	postinc1,c
 10100  011CF8  0E00               	movlw	0
 10101  011CFA  6EE6               	movwf	postinc1,c
 10102  011CFC  EC87  F0B8         	call	_fputc	;wreg free
 10103  011D00                     l11076:
 10104                           
 10105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 10106  011D00  0E01               	movlw	1
 10107  011D02  D00C               	goto	L7
 10108  011D04                     l11080:
 10109                           
 10110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 10111                           ;stkvar	_fmt @ sp[(-32)+-4]
 10112  011D04  0EDC               	movlw	-36
 10113  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
 10114  011D0C  0EDD               	movlw	-35
 10115  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10116  011D14  2ADE               	incf	postinc2,f,c
 10117  011D16  0E00               	movlw	0
 10118  011D18  22DD               	addwfc	postdec2,f,c
 10119                           
 10120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 10121  011D1A  0E00               	movlw	0
 10122  011D1C                     L7:
 10123  011D1C  6E01               	movwf	btemp^0,c
 10124  011D1E  0E00               	movlw	0
 10125  011D20  6E02               	movwf	(btemp+1)^0,c
 10126  011D22  D02A               	goto	l2226
 10127  011D24                     l11086:
 10128                           
 10129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 10130                           ;stkvar	_fp @ sp[(-32)+-2]
 10131  011D24  0EDE               	movlw	-34
 10132  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
 10133  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
 10134                           
 10135                           ;stkvar	_fmt @ sp[(-34)+-4]
 10136  011D32  0EDA               	movlw	-38
 10137  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
 10138  011D3A  0EDB               	movlw	-37
 10139  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10140  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
 10141  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
 10142  011D4E                     	if	0	;tblptru may be non-zero
 10143  011D4E                     	endif
 10144  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10145  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
 10146  011D50  6EF8               	movwf	tblptru,c
 10147  011D52                     	endif
 10148  011D52  0008               	tblrd		*
 10149  011D54  50F5               	movf	tablat,w,c
 10150  011D56  6EE6               	movwf	postinc1,c
 10151  011D58  0E00               	movlw	0
 10152  011D5A  6EE6               	movwf	postinc1,c
 10153  011D5C  EC87  F0B8         	call	_fputc	;wreg free
 10154                           
 10155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 10156                           ;stkvar	_fmt @ sp[(-32)+-4]
 10157  011D60  0EDC               	movlw	-36
 10158  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
 10159  011D68  0EDD               	movlw	-35
 10160  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10161  011D70  2ADE               	incf	postinc2,f,c
 10162  011D72  0E00               	movlw	0
 10163  011D74  22DD               	addwfc	postdec2,f,c
 10164  011D76  D7C4               	goto	l11076
 10165  011D78                     l2226:
 10166                           
 10167                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 10168  011D78  0EDA               	movlw	218
 10169  011D7A  26E1               	addwf	fsr1l,f,c
 10170  011D7C  0EFF               	movlw	255
 10171  011D7E  22E2               	addwfc	fsr1h,f,c
 10172  011D80  0012               	return		;funcret
 10173  011D82                     __end_of_vfpfcnvrt:
 10174                           	opt callstack 0
 10175                           
 10176 ;; *************** function _xtoa *****************
 10177 ;; Defined at:
 10178 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10179 ;; Parameters:    Size  Location     Type
 10180 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10181 ;;		 -> f(6), NULL(0), 
 10182 ;;  d               8  [STACK] unsigned long long 
 10183 ;;  x               1  [STACK] unsigned char 
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;  n               8  [STACK] unsigned long long 
 10186 ;;  c               2  [STACK] int 
 10187 ;;  i               2  [STACK] int 
 10188 ;;  w               2  [STACK] int 
 10189 ;;  p               2  [STACK] int 
 10190 ;; Return value:  Size  Location     Type
 10191 ;;                  2  [STACK] int 
 10192 ;; Registers used:
 10193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10194 ;; Tracked objects:
 10195 ;;		On entry : 0/0
 10196 ;;		On exit  : 0/0
 10197 ;;		Unchanged: 0/0
 10198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10203 ;;Total ram usage:        0 bytes
 10204 ;; Hardware stack levels used:    1
 10205 ;; Hardware stack levels required when called:   12
 10206 ;; This function calls:
 10207 ;;		_isalpha
 10208 ;;		_isupper
 10209 ;;		_pad
 10210 ;;		_toupper
 10211 ;; This function is called by:
 10212 ;;		_vfpfcnvrt
 10213 ;; This function uses a reentrant model
 10214 ;;
 10215                           
 10216                           	psect	text43
 10217  014A84                     __ptext43:
 10218                           	opt callstack 0
 10219  014A84                     _xtoa:
 10220                           	opt callstack 0
 10221                           
 10222                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 10223  014A84  0E14               	movlw	20
 10224  014A86  26E1               	addwf	fsr1l,f,c
 10225  014A88  0E00               	movlw	0
 10226  014A8A  22E2               	addwfc	fsr1h,f,c
 10227                           
 10228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 10229                           
 10230                           ;incstack = 0
 10231  014A8C  AE27               	btfss	(_prec+1)^0,7,c
 10232                           
 10233                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 10234  014A8E  9228               	bcf	_flags^0,1,c
 10235                           
 10236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 10237  014A90  BE27               	btfsc	(_prec+1)^0,7,c
 10238  014A92  D005               	goto	u10270
 10239  014A94  5027               	movf	(_prec+1)^0,w,c
 10240  014A96  E110               	bnz	l10868
 10241  014A98  0426               	decf	_prec^0,w,c
 10242  014A9A  B0D8               	btfsc	status,0,c
 10243  014A9C  D00D               	goto	l10868
 10244  014A9E                     u10270:
 10245  014A9E  0E01               	movlw	1
 10246  014AA0  6E0B               	movwf	(btemp+10)^0,c
 10247  014AA2  0E00               	movlw	0
 10248  014AA4  6E0C               	movwf	(btemp+11)^0,c
 10249                           
 10250                           ;stkvar	_p @ sp[(-20)+18]
 10251  014AA6  0EFE               	movlw	-2
 10252  014AA8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10253  014AAE  0EFF               	movlw	-1
 10254  014AB0  0060  F033  FFE3   	movff	btemp+11,plusw1
 10255  014AB6  D008               	goto	l2176
 10256  014AB8                     l10868:
 10257                           
 10258                           ;stkvar	_p @ sp[(-20)+18]
 10259  014AB8  0EFE               	movlw	-2
 10260  014ABA  0060  F09B  FFE3   	movff	_prec,plusw1
 10261  014AC0  0EFF               	movlw	-1
 10262  014AC2  0060  F09F  FFE3   	movff	_prec+1,plusw1
 10263  014AC8                     l2176:
 10264                           
 10265                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 10266                           ;stkvar	_w @ sp[(-20)+16]
 10267  014AC8  0EFC               	movlw	-4
 10268  014ACA  0060  F093  FFE3   	movff	_width,plusw1
 10269  014AD0  0EFD               	movlw	-3
 10270  014AD2  0060  F097  FFE3   	movff	_width+1,plusw1
 10271                           
 10272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 10273  014AD8  A828               	btfss	_flags^0,4,c
 10274  014ADA  D00B               	goto	l10874
 10275                           
 10276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 10277                           ;stkvar	_w @ sp[(-20)+16]
 10278  014ADC  50E1               	movf	fsr1l,w,c
 10279  014ADE  0FFC               	addlw	-4
 10280  014AE0  6ED9               	movwf	fsr2l,c
 10281  014AE2  50E2               	movf	fsr1h,w,c
 10282  014AE4  6EDA               	movwf	fsr2h,c
 10283  014AE6  0EFF               	movlw	255
 10284  014AE8  22DA               	addwfc	fsr2h,f,c
 10285  014AEA  0EFE               	movlw	254
 10286  014AEC  26DE               	addwf	postinc2,f,c
 10287  014AEE  0EFF               	movlw	255
 10288  014AF0  22DD               	addwfc	postdec2,f,c
 10289  014AF2                     l10874:
 10290                           
 10291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 10292                           ;stkvar	_d @ sp[(-20)+-10]
 10293  014AF2  0EE2               	movlw	226
 10294  014AF4  24E1               	addwf	fsr1l,w,c
 10295  014AF6  6ED9               	movwf	fsr2l,c
 10296  014AF8  0EFF               	movlw	255
 10297  014AFA  20E2               	addwfc	fsr1h,w,c
 10298  014AFC  6EDA               	movwf	fsr2h,c
 10299                           
 10300                           ;stkvar	_n @ sp[(-20)+4]
 10301  014AFE  0E08               	movlw	8
 10302  014B00  6E01               	movwf	btemp^0,c
 10303  014B02  0EF0               	movlw	-16
 10304  014B04                     us1029999:
 10305  014B04  006F FF7B FFE3     	movff	postinc2,plusw1
 10306  014B0A  28E8               	incf	wreg,w,c
 10307  014B0C  2E01               	decfsz	btemp^0,f,c
 10308  014B0E  D7FA               	bra	us1029999
 10309                           
 10310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 10311  014B10  0E4F               	movlw	79
 10312  014B12  6E0B               	movwf	(btemp+10)^0,c
 10313  014B14  0E00               	movlw	0
 10314  014B16  6E0C               	movwf	(btemp+11)^0,c
 10315                           
 10316                           ;stkvar	_i @ sp[(-20)+14]
 10317  014B18  0EFA               	movlw	-6
 10318  014B1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10319  014B20  0EFB               	movlw	-5
 10320  014B22  0060  F033  FFE3   	movff	btemp+11,plusw1
 10321                           
 10322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 10323  014B28  0103               	movlb	3	; () banked
 10324  014B2A  6BE3               	clrf	(_dbuf+79)& (0+255),b
 10325                           
 10326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10327  014B2C  D0EE               	goto	l10912
 10328  014B2E                     l10880:
 10329                           
 10330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 10331                           ;stkvar	_i @ sp[(-20)+14]
 10332  014B2E  50E1               	movf	fsr1l,w,c
 10333  014B30  0FFA               	addlw	-6
 10334  014B32  6ED9               	movwf	fsr2l,c
 10335  014B34  50E2               	movf	fsr1h,w,c
 10336  014B36  6EDA               	movwf	fsr2h,c
 10337  014B38  0EFF               	movlw	255
 10338  014B3A  22DA               	addwfc	fsr2h,f,c
 10339  014B3C  06DE               	decf	postinc2,f,c
 10340  014B3E  0E00               	movlw	0
 10341  014B40  5ADD               	subwfb	postdec2,f,c
 10342                           
 10343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 10344                           ;stkvar	_n @ sp[(-20)+4]
 10345  014B42  0EF0               	movlw	-16
 10346  014B44  006F FF8C  F00B    	movff	plusw1,btemp+10
 10347  014B4A  0EF1               	movlw	-15
 10348  014B4C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10349  014B52  0E0F               	movlw	15
 10350  014B54  160B               	andwf	(btemp+10)^0,f,c
 10351  014B56  0E00               	movlw	0
 10352  014B58  160C               	andwf	(btemp+11)^0,f,c
 10353                           
 10354                           ;stkvar	_c @ sp[(-20)+12]
 10355  014B5A  0EF8               	movlw	-8
 10356  014B5C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10357  014B62  0EF9               	movlw	-7
 10358  014B64  0060  F033  FFE3   	movff	btemp+11,plusw1
 10359                           
 10360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 10361                           ;stkvar	_c @ sp[(-20)+12]
 10362  014B6A  0EF9               	movlw	-7
 10363  014B6C  BEE3               	btfsc	plusw1,7,c
 10364  014B6E  D00F               	goto	l10888
 10365  014B70  0EF9               	movlw	-7
 10366  014B72  50E3               	movf	plusw1,w,c
 10367  014B74  E108               	bnz	u10300
 10368  014B76  0EF8               	movlw	-8
 10369  014B78  006F FF8C  F001    	movff	plusw1,btemp
 10370  014B7E  0E0A               	movlw	10
 10371  014B80  5E01               	subwf	btemp^0,f,c
 10372  014B82  A0D8               	btfss	status,0,c
 10373  014B84  D004               	goto	l10888
 10374  014B86                     u10300:
 10375                           
 10376                           ;stkvar	_c @ sp[(-20)+12]
 10377  014B86  0EF8               	movlw	-8
 10378  014B88  50E3               	movf	plusw1,w,c
 10379  014B8A  0F57               	addlw	87
 10380  014B8C  D003               	goto	L8
 10381  014B8E                     l10888:
 10382                           
 10383                           ;stkvar	_c @ sp[(-20)+12]
 10384  014B8E  0EF8               	movlw	-8
 10385  014B90  50E3               	movf	plusw1,w,c
 10386  014B92  0F30               	addlw	48
 10387  014B94                     L8:
 10388  014B94  6E0B               	movwf	(btemp+10)^0,c
 10389  014B96  0EF9               	movlw	-7
 10390  014B98  006F FF8C  F00C    	movff	plusw1,btemp+11
 10391  014B9E  0E00               	movlw	0
 10392  014BA0  220C               	addwfc	(btemp+11)^0,f,c
 10393                           
 10394                           ;stkvar	_c @ sp[(-20)+12]
 10395  014BA2  0EF8               	movlw	-8
 10396  014BA4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10397  014BAA  0EF9               	movlw	-7
 10398  014BAC  0060  F033  FFE3   	movff	btemp+11,plusw1
 10399  014BB2  0EBF               	movlw	191
 10400  014BB4  6E0B               	movwf	(btemp+10)^0,c
 10401  014BB6  0EFF               	movlw	255
 10402  014BB8  6E0C               	movwf	(btemp+11)^0,c
 10403                           
 10404                           ;stkvar	_x @ sp[(-20)+-11]
 10405  014BBA  0EE1               	movlw	-31
 10406  014BBC  50E3               	movf	plusw1,w,c
 10407  014BBE  6E09               	movwf	(btemp+8)^0,c
 10408  014BC0  6A0A               	clrf	(btemp+9)^0,c
 10409  014BC2  500B               	movf	(btemp+10)^0,w,c
 10410  014BC4  2609               	addwf	(btemp+8)^0,f,c
 10411  014BC6  500C               	movf	(btemp+11)^0,w,c
 10412  014BC8  220A               	addwfc	(btemp+9)^0,f,c
 10413  014BCA  500A               	movf	(btemp+9)^0,w,c
 10414  014BCC  E106               	bnz	u10310
 10415  014BCE  0E1A               	movlw	26
 10416  014BD0  5C09               	subwf	(btemp+8)^0,w,c
 10417  014BD2  B0D8               	btfsc	status,0,c
 10418  014BD4  D002               	goto	u10310
 10419  014BD6  0E01               	movlw	1
 10420  014BD8  D001               	goto	u10320
 10421  014BDA                     u10310:
 10422  014BDA  0E00               	movlw	0
 10423  014BDC                     u10320:
 10424  014BDC  6E0B               	movwf	(btemp+10)^0,c
 10425  014BDE  6A0C               	clrf	(btemp+11)^0,c
 10426                           
 10427                           ;stkvar	_xtoa$5086 @ sp[(-20)+2]
 10428  014BE0  0EEE               	movlw	-18
 10429  014BE2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10430  014BE8  0EEF               	movlw	-17
 10431  014BEA  0060  F033  FFE3   	movff	btemp+11,plusw1
 10432                           
 10433                           ;stkvar	_xtoa$5086 @ sp[(-20)+2]
 10434  014BF0  0EEE               	movlw	-18
 10435  014BF2  006F FF8C  F001    	movff	plusw1,btemp
 10436  014BF8  0EEF               	movlw	-17
 10437  014BFA  50E3               	movf	plusw1,w,c
 10438  014BFC  1001               	iorwf	btemp^0,w,c
 10439  014BFE  B4D8               	btfsc	status,2,c
 10440  014C00  D041               	goto	l10904
 10441  014C02  0E9F               	movlw	159
 10442  014C04  6E0B               	movwf	(btemp+10)^0,c
 10443  014C06  0EFF               	movlw	255
 10444  014C08  6E0C               	movwf	(btemp+11)^0,c
 10445                           
 10446                           ;stkvar	_c @ sp[(-20)+12]
 10447  014C0A  0EF8               	movlw	-8
 10448  014C0C  006F FF8C  F009    	movff	plusw1,btemp+8
 10449  014C12  0EF9               	movlw	-7
 10450  014C14  006F FF8C  F00A    	movff	plusw1,btemp+9
 10451  014C1A  0E20               	movlw	32
 10452  014C1C  1209               	iorwf	(btemp+8)^0,f,c
 10453  014C1E  0E00               	movlw	0
 10454  014C20  120A               	iorwf	(btemp+9)^0,f,c
 10455  014C22  500B               	movf	(btemp+10)^0,w,c
 10456  014C24  2609               	addwf	(btemp+8)^0,f,c
 10457  014C26  500C               	movf	(btemp+11)^0,w,c
 10458  014C28  220A               	addwfc	(btemp+9)^0,f,c
 10459  014C2A  500A               	movf	(btemp+9)^0,w,c
 10460  014C2C  E106               	bnz	u10340
 10461  014C2E  0E1A               	movlw	26
 10462  014C30  5C09               	subwf	(btemp+8)^0,w,c
 10463  014C32  B0D8               	btfsc	status,0,c
 10464  014C34  D002               	goto	u10340
 10465  014C36  0E01               	movlw	1
 10466  014C38  D001               	goto	u10350
 10467  014C3A                     u10340:
 10468  014C3A  0E00               	movlw	0
 10469  014C3C                     u10350:
 10470  014C3C  6E0B               	movwf	(btemp+10)^0,c
 10471  014C3E  6A0C               	clrf	(btemp+11)^0,c
 10472                           
 10473                           ;stkvar	_xtoa$5087 @ sp[(-20)+0]
 10474  014C40  0EEC               	movlw	-20
 10475  014C42  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10476  014C48  0EED               	movlw	-19
 10477  014C4A  0060  F033  FFE3   	movff	btemp+11,plusw1
 10478                           
 10479                           ;stkvar	_xtoa$5087 @ sp[(-20)+0]
 10480  014C50  0EEC               	movlw	-20
 10481  014C52  006F FF8C  F001    	movff	plusw1,btemp
 10482  014C58  0EED               	movlw	-19
 10483  014C5A  50E3               	movf	plusw1,w,c
 10484  014C5C  1001               	iorwf	btemp^0,w,c
 10485  014C5E  B4D8               	btfsc	status,2,c
 10486  014C60  D011               	goto	l10904
 10487                           
 10488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 10489                           ;stkvar	_c @ sp[(-20)+12]
 10490  014C62  0EF8               	movlw	-8
 10491  014C64  006F FF8F FFE6     	movff	plusw1,postinc1
 10492  014C6A  006F FF8F FFE6     	movff	plusw1,postinc1
 10493  014C70  EC87  F0C2         	call	_toupper	;wreg free
 10494                           
 10495                           ;stkvar	_c @ sp[(-20)+12]
 10496  014C74  0EF8               	movlw	-8
 10497  014C76  0060  F007  FFE3   	movff	btemp,plusw1
 10498  014C7C  0EF9               	movlw	-7
 10499  014C7E  0060  F00B  FFE3   	movff	btemp+1,plusw1
 10500  014C84                     l10904:
 10501                           
 10502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 10503                           ;stkvar	_c @ sp[(-20)+12]
 10504                           ;stkvar	_i @ sp[(-20)+14]
 10505  014C84  0EFA               	movlw	-6
 10506  014C86  006F FF8C  F00B    	movff	plusw1,btemp+10
 10507  014C8C  0EFB               	movlw	-5
 10508  014C8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 10509  014C94  0E94               	movlw	low _dbuf
 10510  014C96  240B               	addwf	(btemp+10)^0,w,c
 10511  014C98  6ED9               	movwf	fsr2l,c
 10512  014C9A  0E03               	movlw	high _dbuf
 10513  014C9C  200C               	addwfc	(btemp+11)^0,w,c
 10514  014C9E  6EDA               	movwf	fsr2h,c
 10515  014CA0  0EF8               	movlw	-8
 10516  014CA2  006F FF8F FFDF     	movff	plusw1,indf2
 10517                           
 10518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 10519                           ;stkvar	_p @ sp[(-20)+18]
 10520  014CA8  50E1               	movf	fsr1l,w,c
 10521  014CAA  0FFE               	addlw	-2
 10522  014CAC  6ED9               	movwf	fsr2l,c
 10523  014CAE  50E2               	movf	fsr1h,w,c
 10524  014CB0  6EDA               	movwf	fsr2h,c
 10525  014CB2  0EFF               	movlw	255
 10526  014CB4  22DA               	addwfc	fsr2h,f,c
 10527  014CB6  06DE               	decf	postinc2,f,c
 10528  014CB8  0E00               	movlw	0
 10529  014CBA  5ADD               	subwfb	postdec2,f,c
 10530                           
 10531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 10532                           ;stkvar	_w @ sp[(-20)+16]
 10533  014CBC  50E1               	movf	fsr1l,w,c
 10534  014CBE  0FFC               	addlw	-4
 10535  014CC0  6ED9               	movwf	fsr2l,c
 10536  014CC2  50E2               	movf	fsr1h,w,c
 10537  014CC4  6EDA               	movwf	fsr2h,c
 10538  014CC6  0EFF               	movlw	255
 10539  014CC8  22DA               	addwfc	fsr2h,f,c
 10540  014CCA  06DE               	decf	postinc2,f,c
 10541  014CCC  0E00               	movlw	0
 10542  014CCE  5ADD               	subwfb	postdec2,f,c
 10543                           
 10544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 10545  014CD0  0E04               	movlw	4
 10546  014CD2  6E0C               	movwf	(btemp+11)^0,c
 10547                           
 10548                           ;stkvar	_n @ sp[(-20)+4]
 10549  014CD4  50E1               	movf	fsr1l,w,c
 10550  014CD6  0FF0               	addlw	-16
 10551  014CD8  6ED9               	movwf	fsr2l,c
 10552  014CDA  50E2               	movf	fsr1h,w,c
 10553  014CDC  6EDA               	movwf	fsr2h,c
 10554  014CDE  0EFF               	movlw	255
 10555  014CE0  22DA               	addwfc	fsr2h,f,c
 10556  014CE2  280C               	incf	(btemp+11)^0,w,c
 10557  014CE4  52DE               	movf	postinc2,f,c
 10558  014CE6  D00F               	goto	u10370
 10559  014CE8                     u10375:
 10560  014CE8  52DE               	movf	postinc2,f,c
 10561  014CEA  52DE               	movf	postinc2,f,c
 10562  014CEC  52DE               	movf	postinc2,f,c
 10563  014CEE  52DE               	movf	postinc2,f,c
 10564  014CF0  52DE               	movf	postinc2,f,c
 10565  014CF2  52DE               	movf	postinc2,f,c
 10566  014CF4  90D8               	bcf	status,0,c
 10567  014CF6  32DD               	rrcf	postdec2,f,c
 10568  014CF8  32DD               	rrcf	postdec2,f,c
 10569  014CFA  32DD               	rrcf	postdec2,f,c
 10570  014CFC  32DD               	rrcf	postdec2,f,c
 10571  014CFE  32DD               	rrcf	postdec2,f,c
 10572  014D00  32DD               	rrcf	postdec2,f,c
 10573  014D02  32DD               	rrcf	postdec2,f,c
 10574  014D04  32DE               	rrcf	postinc2,f,c
 10575  014D06                     u10370:
 10576  014D06  2EE8               	decfsz	wreg,f,c
 10577  014D08  D7EF               	goto	u10375
 10578  014D0A                     l10912:
 10579                           
 10580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10581                           ;stkvar	_i @ sp[(-20)+14]
 10582  014D0A  0EFB               	movlw	-5
 10583  014D0C  BEE3               	btfsc	plusw1,7,c
 10584  014D0E  D03A               	goto	u10420
 10585  014D10  0EFB               	movlw	-5
 10586  014D12  50E3               	movf	plusw1,w,c
 10587  014D14  E108               	bnz	u10380
 10588  014D16  0EFA               	movlw	-6
 10589  014D18  006F FF8C  F001    	movff	plusw1,btemp
 10590  014D1E  0E02               	movlw	2
 10591  014D20  5E01               	subwf	btemp^0,f,c
 10592  014D22  A0D8               	btfss	status,0,c
 10593  014D24  D02F               	goto	u10420
 10594  014D26                     u10380:
 10595                           
 10596                           ;stkvar	_n @ sp[(-20)+4]
 10597  014D26  0EF0               	movlw	-16
 10598  014D28  50E3               	movf	plusw1,w,c
 10599  014D2A  E115               	bnz	u10391
 10600  014D2C  0EF1               	movlw	-15
 10601  014D2E  50E3               	movf	plusw1,w,c
 10602  014D30  E112               	bnz	u10391
 10603  014D32  0EF2               	movlw	-14
 10604  014D34  50E3               	movf	plusw1,w,c
 10605  014D36  E10F               	bnz	u10391
 10606  014D38  0EF3               	movlw	-13
 10607  014D3A  50E3               	movf	plusw1,w,c
 10608  014D3C  E10C               	bnz	u10391
 10609  014D3E  0EF4               	movlw	-12
 10610  014D40  50E3               	movf	plusw1,w,c
 10611  014D42  E109               	bnz	u10391
 10612  014D44  0EF5               	movlw	-11
 10613  014D46  50E3               	movf	plusw1,w,c
 10614  014D48  E106               	bnz	u10391
 10615  014D4A  0EF6               	movlw	-10
 10616  014D4C  50E3               	movf	plusw1,w,c
 10617  014D4E  E103               	bnz	u10391
 10618  014D50  0EF7               	movlw	-9
 10619  014D52  50E3               	movf	plusw1,w,c
 10620  014D54  A4D8               	btfss	status,2,c
 10621  014D56                     u10391:
 10622  014D56  D6EB               	goto	l10880
 10623                           
 10624                           ;stkvar	_p @ sp[(-20)+18]
 10625  014D58  0EFF               	movlw	-1
 10626  014D5A  BEE3               	btfsc	plusw1,7,c
 10627  014D5C  D007               	goto	u10400
 10628  014D5E  0EFF               	movlw	-1
 10629  014D60  50E3               	movf	plusw1,w,c
 10630  014D62  E103               	bnz	u10401
 10631  014D64  0EFE               	movlw	-2
 10632  014D66  04E3               	decf	plusw1,w,c
 10633  014D68  B0D8               	btfsc	status,0,c
 10634  014D6A                     u10401:
 10635  014D6A  D6E1               	goto	l10880
 10636  014D6C                     u10400:
 10637                           
 10638                           ;stkvar	_w @ sp[(-20)+16]
 10639  014D6C  0EFD               	movlw	-3
 10640  014D6E  BEE3               	btfsc	plusw1,7,c
 10641  014D70  D009               	goto	u10420
 10642  014D72  0EFD               	movlw	-3
 10643  014D74  50E3               	movf	plusw1,w,c
 10644  014D76  E104               	bnz	u10410
 10645  014D78  0EFC               	movlw	-4
 10646  014D7A  04E3               	decf	plusw1,w,c
 10647  014D7C  A0D8               	btfss	status,0,c
 10648  014D7E  D002               	goto	u10420
 10649  014D80                     u10410:
 10650  014D80  B228               	btfsc	_flags^0,1,c
 10651  014D82  D6D5               	goto	l10880
 10652  014D84                     u10420:
 10653                           
 10654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 10655  014D84  A828               	btfss	_flags^0,4,c
 10656  014D86  D036               	goto	l10928
 10657                           
 10658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 10659                           ;stkvar	_i @ sp[(-20)+14]
 10660  014D88  50E1               	movf	fsr1l,w,c
 10661  014D8A  0FFA               	addlw	-6
 10662  014D8C  6ED9               	movwf	fsr2l,c
 10663  014D8E  50E2               	movf	fsr1h,w,c
 10664  014D90  6EDA               	movwf	fsr2h,c
 10665  014D92  0EFF               	movlw	255
 10666  014D94  22DA               	addwfc	fsr2h,f,c
 10667  014D96  06DE               	decf	postinc2,f,c
 10668  014D98  0E00               	movlw	0
 10669  014D9A  5ADD               	subwfb	postdec2,f,c
 10670                           
 10671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 10672                           ;stkvar	_x @ sp[(-20)+-11]
 10673                           ;stkvar	_i @ sp[(-20)+14]
 10674  014D9C  0EFA               	movlw	-6
 10675  014D9E  006F FF8C  F00B    	movff	plusw1,btemp+10
 10676  014DA4  0EFB               	movlw	-5
 10677  014DA6  006F FF8C  F00C    	movff	plusw1,btemp+11
 10678  014DAC  0E94               	movlw	low _dbuf
 10679  014DAE  240B               	addwf	(btemp+10)^0,w,c
 10680  014DB0  6ED9               	movwf	fsr2l,c
 10681  014DB2  0E03               	movlw	high _dbuf
 10682  014DB4  200C               	addwfc	(btemp+11)^0,w,c
 10683  014DB6  6EDA               	movwf	fsr2h,c
 10684  014DB8  0EE1               	movlw	-31
 10685  014DBA  006F FF8F FFDF     	movff	plusw1,indf2
 10686                           
 10687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 10688                           ;stkvar	_i @ sp[(-20)+14]
 10689  014DC0  50E1               	movf	fsr1l,w,c
 10690  014DC2  0FFA               	addlw	-6
 10691  014DC4  6ED9               	movwf	fsr2l,c
 10692  014DC6  50E2               	movf	fsr1h,w,c
 10693  014DC8  6EDA               	movwf	fsr2h,c
 10694  014DCA  0EFF               	movlw	255
 10695  014DCC  22DA               	addwfc	fsr2h,f,c
 10696  014DCE  06DE               	decf	postinc2,f,c
 10697  014DD0  0E00               	movlw	0
 10698  014DD2  5ADD               	subwfb	postdec2,f,c
 10699                           
 10700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 10701                           ;stkvar	_i @ sp[(-20)+14]
 10702  014DD4  0EFA               	movlw	-6
 10703  014DD6  006F FF8C  F00B    	movff	plusw1,btemp+10
 10704  014DDC  0EFB               	movlw	-5
 10705  014DDE  006F FF8C  F00C    	movff	plusw1,btemp+11
 10706  014DE4  0E94               	movlw	low _dbuf
 10707  014DE6  240B               	addwf	(btemp+10)^0,w,c
 10708  014DE8  6ED9               	movwf	fsr2l,c
 10709  014DEA  0E03               	movlw	high _dbuf
 10710  014DEC  200C               	addwfc	(btemp+11)^0,w,c
 10711  014DEE  6EDA               	movwf	fsr2h,c
 10712  014DF0  0E30               	movlw	48
 10713  014DF2  6EDF               	movwf	indf2,c
 10714  014DF4                     l10928:
 10715                           
 10716                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 10717                           ;stkvar	_w @ sp[(-20)+16]
 10718  014DF4  0EFC               	movlw	-4
 10719  014DF6  006F FF8F FFE6     	movff	plusw1,postinc1
 10720  014DFC  006F FF8F FFE6     	movff	plusw1,postinc1
 10721                           
 10722                           ;stkvar	_i @ sp[(-22)+14]
 10723  014E02  0E94               	movlw	low _dbuf
 10724  014E04  6E0B               	movwf	(btemp+10)^0,c
 10725  014E06  0E03               	movlw	high _dbuf
 10726  014E08  6E0C               	movwf	(btemp+11)^0,c
 10727  014E0A  0EF8               	movlw	-8
 10728  014E0C  50E3               	movf	plusw1,w,c
 10729  014E0E  260B               	addwf	(btemp+10)^0,f,c
 10730  014E10  0EF9               	movlw	-7
 10731  014E12  50E3               	movf	plusw1,w,c
 10732  014E14  220C               	addwfc	(btemp+11)^0,f,c
 10733  014E16  0060  F02F  FFE6   	movff	btemp+10,postinc1
 10734  014E1C  0060  F033  FFE6   	movff	btemp+11,postinc1
 10735                           
 10736                           ;stkvar	_fp @ sp[(-24)+-2]
 10737  014E22  0EE6               	movlw	-26
 10738  014E24  006F FF8F FFE6     	movff	plusw1,postinc1
 10739  014E2A  006F FF8F FFE6     	movff	plusw1,postinc1
 10740  014E30  ECA5  F0B9         	call	_pad	;wreg free
 10741                           
 10742                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 10743  014E34  0EE1               	movlw	225
 10744  014E36  26E1               	addwf	fsr1l,f,c
 10745  014E38  0EFF               	movlw	255
 10746  014E3A  22E2               	addwfc	fsr1h,f,c
 10747  014E3C  0012               	return		;funcret
 10748  014E3E                     __end_of_xtoa:
 10749                           	opt callstack 0
 10750                           
 10751 ;; *************** function _toupper *****************
 10752 ;; Defined at:
 10753 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 10754 ;; Parameters:    Size  Location     Type
 10755 ;;  c               2  [STACK] int 
 10756 ;; Auto vars:     Size  Location     Type
 10757 ;;		None
 10758 ;; Return value:  Size  Location     Type
 10759 ;;                  2  [STACK] int 
 10760 ;; Registers used:
 10761 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 10762 ;; Tracked objects:
 10763 ;;		On entry : 0/3
 10764 ;;		On exit  : 0/0
 10765 ;;		Unchanged: 0/0
 10766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10771 ;;Total ram usage:        0 bytes
 10772 ;; Hardware stack levels used:    1
 10773 ;; Hardware stack levels required when called:    8
 10774 ;; This function calls:
 10775 ;;		_islower
 10776 ;; This function is called by:
 10777 ;;		_xtoa
 10778 ;; This function uses a reentrant model
 10779 ;;
 10780                           
 10781                           	psect	text44
 10782  01850E                     __ptext44:
 10783                           	opt callstack 0
 10784  01850E                     _toupper:
 10785                           	opt callstack 0
 10786                           
 10787                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10788  01850E  52E6               	movf	postinc1,f,c
 10789  018510  52E6               	movf	postinc1,f,c
 10790                           
 10791                           ;stkvar	_c @ sp[(-2)+-2]
 10792                           
 10793                           ;incstack = 0
 10794  018512  0EFC               	movlw	-4
 10795  018514  50E3               	movf	plusw1,w,c
 10796  018516  0F9F               	addlw	159
 10797  018518  6E0B               	movwf	(btemp+10)^0,c
 10798  01851A  0EFD               	movlw	-3
 10799  01851C  006F FF8C  F00C    	movff	plusw1,btemp+11
 10800  018522  0EFF               	movlw	255
 10801  018524  220C               	addwfc	(btemp+11)^0,f,c
 10802  018526  500C               	movf	(btemp+11)^0,w,c
 10803  018528  E106               	bnz	u5100
 10804  01852A  0E1A               	movlw	26
 10805  01852C  5C0B               	subwf	(btemp+10)^0,w,c
 10806  01852E  B0D8               	btfsc	status,0,c
 10807  018530  D002               	goto	u5100
 10808  018532  0E01               	movlw	1
 10809  018534  D001               	goto	u5110
 10810  018536                     u5100:
 10811  018536  0E00               	movlw	0
 10812  018538                     u5110:
 10813  018538  6E0B               	movwf	(btemp+10)^0,c
 10814  01853A  6A0C               	clrf	(btemp+11)^0,c
 10815                           
 10816                           ;stkvar	_toupper$5862 @ sp[(-2)+0]
 10817  01853C  0EFE               	movlw	-2
 10818  01853E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 10819  018544  0EFF               	movlw	-1
 10820  018546  0060  F033  FFE3   	movff	btemp+11,plusw1
 10821                           
 10822                           ;stkvar	_toupper$5862 @ sp[(-2)+0]
 10823  01854C  0EFE               	movlw	-2
 10824  01854E  006F FF8C  F001    	movff	plusw1,btemp
 10825  018554  0EFF               	movlw	-1
 10826  018556  50E3               	movf	plusw1,w,c
 10827  018558  1001               	iorwf	btemp^0,w,c
 10828  01855A  B4D8               	btfsc	status,2,c
 10829  01855C  D00D               	goto	l7030
 10830                           
 10831                           ;stkvar	_c @ sp[(-2)+-2]
 10832  01855E  0EFC               	movlw	-4
 10833  018560  006F FF8C  F001    	movff	plusw1,btemp
 10834  018566  0EFD               	movlw	-3
 10835  018568  006F FF8C  F002    	movff	plusw1,btemp+1
 10836  01856E  0E5F               	movlw	95
 10837  018570  1601               	andwf	btemp^0,f,c
 10838  018572  0E00               	movlw	0
 10839  018574  1602               	andwf	(btemp+1)^0,f,c
 10840  018576  D008               	goto	l3330
 10841  018578                     l7030:
 10842                           
 10843                           ;stkvar	_c @ sp[(-2)+-2]
 10844  018578  0EFC               	movlw	-4
 10845  01857A  006F FF8C  F001    	movff	plusw1,btemp
 10846  018580  0EFD               	movlw	-3
 10847  018582  006F FF8C  F002    	movff	plusw1,btemp+1
 10848  018588                     l3330:
 10849                           
 10850                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10851  018588  52E5               	movf	postdec1,f,c
 10852  01858A  52E5               	movf	postdec1,f,c
 10853  01858C  52E5               	movf	postdec1,f,c
 10854  01858E  52E5               	movf	postdec1,f,c
 10855  018590  0012               	return		;funcret
 10856  018592                     __end_of_toupper:
 10857                           	opt callstack 0
 10858                           
 10859 ;; *************** function _islower *****************
 10860 ;; Defined at:
 10861 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 10862 ;; Parameters:    Size  Location     Type
 10863 ;;  c               2  [STACK] int 
 10864 ;; Auto vars:     Size  Location     Type
 10865 ;;		None
 10866 ;; Return value:  Size  Location     Type
 10867 ;;                  2  [STACK] int 
 10868 ;; Registers used:
 10869 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10870 ;; Tracked objects:
 10871 ;;		On entry : 0/0
 10872 ;;		On exit  : 0/0
 10873 ;;		Unchanged: 0/0
 10874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10879 ;;Total ram usage:        0 bytes
 10880 ;; Hardware stack levels used:    1
 10881 ;; Hardware stack levels required when called:    7
 10882 ;; This function calls:
 10883 ;;		Nothing
 10884 ;; This function is called by:
 10885 ;;		_toupper
 10886 ;; This function uses a reentrant model
 10887 ;;
 10888                           
 10889                           	psect	text45
 10890  019108                     __ptext45:
 10891                           	opt callstack 0
 10892  019108                     _islower:
 10893                           	opt callstack 15
 10894                           
 10895                           ;stkvar	_c @ sp[(0)+-2]
 10896                           
 10897                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10898                           ;incstack = 0
 10899  019108  0EFE               	movlw	-2
 10900  01910A  50E3               	movf	plusw1,w,c
 10901  01910C  0F9F               	addlw	159
 10902  01910E  6E0B               	movwf	(btemp+10)^0,c
 10903  019110  0EFF               	movlw	-1
 10904  019112  006F FF8C  F00C    	movff	plusw1,btemp+11
 10905  019118  0EFF               	movlw	255
 10906  01911A  220C               	addwfc	(btemp+11)^0,f,c
 10907  01911C  500C               	movf	(btemp+11)^0,w,c
 10908  01911E  E106               	bnz	u4790
 10909  019120  0E1A               	movlw	26
 10910  019122  5C0B               	subwf	(btemp+10)^0,w,c
 10911  019124  B0D8               	btfsc	status,0,c
 10912  019126  D002               	goto	u4790
 10913  019128  0E01               	movlw	1
 10914  01912A  D001               	goto	u4800
 10915  01912C                     u4790:
 10916  01912C  0E00               	movlw	0
 10917  01912E                     u4800:
 10918  01912E  6E01               	movwf	btemp^0,c
 10919  019130  6A02               	clrf	(btemp+1)^0,c
 10920                           
 10921                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10922  019132  52E5               	movf	postdec1,f,c
 10923  019134  52E5               	movf	postdec1,f,c
 10924  019136  0012               	return		;funcret
 10925  019138                     __end_of_islower:
 10926                           	opt callstack 0
 10927                           
 10928 ;; *************** function _isalpha *****************
 10929 ;; Defined at:
 10930 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 10931 ;; Parameters:    Size  Location     Type
 10932 ;;  c               2  [STACK] int 
 10933 ;; Auto vars:     Size  Location     Type
 10934 ;;		None
 10935 ;; Return value:  Size  Location     Type
 10936 ;;                  2  [STACK] int 
 10937 ;; Registers used:
 10938 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 10939 ;; Tracked objects:
 10940 ;;		On entry : 0/0
 10941 ;;		On exit  : 0/0
 10942 ;;		Unchanged: 0/0
 10943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10948 ;;Total ram usage:        0 bytes
 10949 ;; Hardware stack levels used:    1
 10950 ;; Hardware stack levels required when called:    7
 10951 ;; This function calls:
 10952 ;;		Nothing
 10953 ;; This function is called by:
 10954 ;;		_xtoa
 10955 ;; This function uses a reentrant model
 10956 ;;
 10957                           
 10958                           	psect	text46
 10959  018DCE                     __ptext46:
 10960                           	opt callstack 0
 10961  018DCE                     _isalpha:
 10962                           	opt callstack 16
 10963                           
 10964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10965                           ;incstack = 0
 10966  018DCE  0E9F               	movlw	159
 10967  018DD0  6E0B               	movwf	(btemp+10)^0,c
 10968  018DD2  0EFF               	movlw	255
 10969  018DD4  6E0C               	movwf	(btemp+11)^0,c
 10970                           
 10971                           ;stkvar	_c @ sp[(0)+-2]
 10972  018DD6  0EFE               	movlw	-2
 10973  018DD8  006F FF8C  F009    	movff	plusw1,btemp+8
 10974  018DDE  0EFF               	movlw	-1
 10975  018DE0  006F FF8C  F00A    	movff	plusw1,btemp+9
 10976  018DE6  0E20               	movlw	32
 10977  018DE8  1209               	iorwf	(btemp+8)^0,f,c
 10978  018DEA  0E00               	movlw	0
 10979  018DEC  120A               	iorwf	(btemp+9)^0,f,c
 10980  018DEE  500B               	movf	(btemp+10)^0,w,c
 10981  018DF0  2609               	addwf	(btemp+8)^0,f,c
 10982  018DF2  500C               	movf	(btemp+11)^0,w,c
 10983  018DF4  220A               	addwfc	(btemp+9)^0,f,c
 10984  018DF6  500A               	movf	(btemp+9)^0,w,c
 10985  018DF8  E106               	bnz	u5080
 10986  018DFA  0E1A               	movlw	26
 10987  018DFC  5C09               	subwf	(btemp+8)^0,w,c
 10988  018DFE  B0D8               	btfsc	status,0,c
 10989  018E00  D002               	goto	u5080
 10990  018E02  0E01               	movlw	1
 10991  018E04  D001               	goto	u5090
 10992  018E06                     u5080:
 10993  018E06  0E00               	movlw	0
 10994  018E08                     u5090:
 10995  018E08  6E01               	movwf	btemp^0,c
 10996  018E0A  6A02               	clrf	(btemp+1)^0,c
 10997                           
 10998                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10999  018E0C  52E5               	movf	postdec1,f,c
 11000  018E0E  52E5               	movf	postdec1,f,c
 11001  018E10  0012               	return		;funcret
 11002  018E12                     __end_of_isalpha:
 11003                           	opt callstack 0
 11004                           
 11005 ;; *************** function _strncmp *****************
 11006 ;; Defined at:
 11007 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 11008 ;; Parameters:    Size  Location     Type
 11009 ;;  _l              2  [STACK] PTR const unsigned char 
 11010 ;;		 -> ct(3), 
 11011 ;;  _r              2  [STACK] PTR const unsigned char 
 11012 ;;		 -> STR_56(3), 
 11013 ;;  n               2  [STACK] unsigned int 
 11014 ;; Auto vars:     Size  Location     Type
 11015 ;;  r               2  [STACK] PTR const unsigned char 
 11016 ;;		 -> STR_56(3), 
 11017 ;;  l               2  [STACK] PTR const unsigned char 
 11018 ;;		 -> ct(3), 
 11019 ;; Return value:  Size  Location     Type
 11020 ;;                  2  [STACK] int 
 11021 ;; Registers used:
 11022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 11023 ;; Tracked objects:
 11024 ;;		On entry : 0/0
 11025 ;;		On exit  : 0/0
 11026 ;;		Unchanged: 0/0
 11027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11032 ;;Total ram usage:        0 bytes
 11033 ;; Hardware stack levels used:    1
 11034 ;; Hardware stack levels required when called:    7
 11035 ;; This function calls:
 11036 ;;		Nothing
 11037 ;; This function is called by:
 11038 ;;		_vfpfcnvrt
 11039 ;; This function uses a reentrant model
 11040 ;;
 11041                           
 11042                           	psect	text47
 11043  016578                     __ptext47:
 11044                           	opt callstack 0
 11045  016578                     _strncmp:
 11046                           	opt callstack 0
 11047                           
 11048                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11049  016578  52E6               	movf	postinc1,f,c
 11050  01657A  52E6               	movf	postinc1,f,c
 11051  01657C  52E6               	movf	postinc1,f,c
 11052  01657E  52E6               	movf	postinc1,f,c
 11053                           
 11054                           ;stkvar	__l @ sp[(-4)+-2]
 11055                           
 11056                           ;incstack = 0
 11057  016580  0EFA               	movlw	-6
 11058  016582  006F FF8C  F00B    	movff	plusw1,btemp+10
 11059  016588  0EFB               	movlw	-5
 11060  01658A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11061                           
 11062                           ;stkvar	_l @ sp[(-4)+2]
 11063  016590  0EFF               	movlw	-1
 11064  016592  0060  F033  FFE3   	movff	btemp+11,plusw1
 11065  016598  0EFE               	movlw	-2
 11066  01659A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11067                           
 11068                           ;stkvar	__r @ sp[(-4)+-4]
 11069  0165A0  0EF8               	movlw	-8
 11070  0165A2  006F FF8C  F00B    	movff	plusw1,btemp+10
 11071  0165A8  0EF9               	movlw	-7
 11072  0165AA  006F FF8C  F00C    	movff	plusw1,btemp+11
 11073                           
 11074                           ;stkvar	_r @ sp[(-4)+0]
 11075  0165B0  0EFD               	movlw	-3
 11076  0165B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 11077  0165B8  0EFC               	movlw	-4
 11078  0165BA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11079                           
 11080                           ;stkvar	_n @ sp[(-4)+-6]
 11081  0165C0  0EF6               	movlw	-10
 11082  0165C2  006F FF8C  F001    	movff	plusw1,btemp
 11083  0165C8  0E01               	movlw	1
 11084  0165CA  5E01               	subwf	btemp^0,f,c
 11085  0165CC  0EF6               	movlw	-10
 11086  0165CE  0060  F007  FFE3   	movff	btemp,plusw1
 11087  0165D4  0EF7               	movlw	-9
 11088  0165D6  006F FF8C  F001    	movff	plusw1,btemp
 11089  0165DC  0E00               	movlw	0
 11090  0165DE  5A01               	subwfb	btemp^0,f,c
 11091  0165E0  0EF7               	movlw	-9
 11092  0165E2  0060  F007  FFE3   	movff	btemp,plusw1
 11093  0165E8  0EF6               	movlw	-10
 11094  0165EA  28E3               	incf	plusw1,w,c
 11095  0165EC  E13F               	bnz	l7800
 11096  0165EE  0EF7               	movlw	-9
 11097  0165F0  28E3               	incf	plusw1,w,c
 11098  0165F2  A4D8               	btfss	status,2,c
 11099  0165F4  D03B               	goto	l7800
 11100  0165F6  0E00               	movlw	0
 11101  0165F8  6E01               	movwf	btemp^0,c
 11102  0165FA  0E00               	movlw	0
 11103  0165FC  6E02               	movwf	(btemp+1)^0,c
 11104  0165FE  D09B               	goto	l3302
 11105  016600                     l7798:
 11106                           
 11107                           ;stkvar	_l @ sp[(-4)+2]
 11108  016600  0EFE               	movlw	-2
 11109  016602  50E3               	movf	plusw1,w,c
 11110  016604  0F01               	addlw	1
 11111  016606  6E01               	movwf	btemp^0,c
 11112  016608  0EFE               	movlw	-2
 11113  01660A  0060  F007  FFE3   	movff	btemp,plusw1
 11114  016610  6A01               	clrf	btemp^0,c
 11115  016612  0EFF               	movlw	-1
 11116  016614  50E3               	movf	plusw1,w,c
 11117  016616  2001               	addwfc	btemp^0,w,c
 11118  016618  6E01               	movwf	btemp^0,c
 11119  01661A  0EFF               	movlw	-1
 11120  01661C  0060  F007  FFE3   	movff	btemp,plusw1
 11121                           
 11122                           ;stkvar	_r @ sp[(-4)+0]
 11123  016622  0EFC               	movlw	-4
 11124  016624  50E3               	movf	plusw1,w,c
 11125  016626  0F01               	addlw	1
 11126  016628  6E01               	movwf	btemp^0,c
 11127  01662A  0EFC               	movlw	-4
 11128  01662C  0060  F007  FFE3   	movff	btemp,plusw1
 11129  016632  6A01               	clrf	btemp^0,c
 11130  016634  0EFD               	movlw	-3
 11131  016636  50E3               	movf	plusw1,w,c
 11132  016638  2001               	addwfc	btemp^0,w,c
 11133  01663A  6E01               	movwf	btemp^0,c
 11134  01663C  0EFD               	movlw	-3
 11135  01663E  0060  F007  FFE3   	movff	btemp,plusw1
 11136                           
 11137                           ;stkvar	_n @ sp[(-4)+-6]
 11138  016644  0EF6               	movlw	-10
 11139  016646  006F FF8C  F001    	movff	plusw1,btemp
 11140  01664C  0E01               	movlw	1
 11141  01664E  5E01               	subwf	btemp^0,f,c
 11142  016650  0EF6               	movlw	-10
 11143  016652  0060  F007  FFE3   	movff	btemp,plusw1
 11144  016658  0EF7               	movlw	-9
 11145  01665A  006F FF8C  F001    	movff	plusw1,btemp
 11146  016660  0E00               	movlw	0
 11147  016662  5A01               	subwfb	btemp^0,f,c
 11148  016664  0EF7               	movlw	-9
 11149  016666  0060  F007  FFE3   	movff	btemp,plusw1
 11150  01666C                     l7800:
 11151                           
 11152                           ;stkvar	_l @ sp[(-4)+2]
 11153  01666C  0EFE               	movlw	-2
 11154  01666E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11155  016674  0EFF               	movlw	-1
 11156  016676  006F FF8F FFDA     	movff	plusw1,fsr2h
 11157  01667C  50DF               	movf	indf2,w,c
 11158  01667E  B4D8               	btfsc	status,2,c
 11159  016680  D03B               	goto	u6660
 11160                           
 11161                           ;stkvar	_r @ sp[(-4)+0]
 11162  016682  50E1               	movf	fsr1l,w,c
 11163  016684  0FFC               	addlw	-4
 11164  016686  6ED9               	movwf	fsr2l,c
 11165  016688  50E2               	movf	fsr1h,w,c
 11166  01668A  6EDA               	movwf	fsr2h,c
 11167  01668C  0EFF               	movlw	255
 11168  01668E  22DA               	addwfc	fsr2h,f,c
 11169  016690  006F FF7B FFF6     	movff	postinc2,tblptrl
 11170  016696  006F FF77 FFF7     	movff	postdec2,tblptrh
 11171  01669C                     	if	0	;tblptru may be non-zero
 11172  01669C                     	endif
 11173  01669C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11174  01669C  0E00               	movlw	low (__mediumconst shr (0+16))
 11175  01669E  6EF8               	movwf	tblptru,c
 11176  0166A0                     	endif
 11177  0166A0  0008               	tblrd		*
 11178  0166A2  50F5               	movf	tablat,w,c
 11179  0166A4  0900               	iorlw	0
 11180  0166A6  B4D8               	btfsc	status,2,c
 11181  0166A8  D027               	goto	u6660
 11182                           
 11183                           ;stkvar	_n @ sp[(-4)+-6]
 11184  0166AA  0EF6               	movlw	-10
 11185  0166AC  006F FF8C  F001    	movff	plusw1,btemp
 11186  0166B2  0EF7               	movlw	-9
 11187  0166B4  50E3               	movf	plusw1,w,c
 11188  0166B6  1001               	iorwf	btemp^0,w,c
 11189  0166B8  B4D8               	btfsc	status,2,c
 11190  0166BA  D01E               	goto	u6660
 11191                           
 11192                           ;stkvar	_l @ sp[(-4)+2]
 11193  0166BC  0EFE               	movlw	-2
 11194  0166BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11195  0166C4  0EFF               	movlw	-1
 11196  0166C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11197  0166CC  50DF               	movf	indf2,w,c
 11198  0166CE  6E0C               	movwf	(btemp+11)^0,c
 11199                           
 11200                           ;stkvar	_r @ sp[(-4)+0]
 11201  0166D0  50E1               	movf	fsr1l,w,c
 11202  0166D2  0FFC               	addlw	-4
 11203  0166D4  6ED9               	movwf	fsr2l,c
 11204  0166D6  50E2               	movf	fsr1h,w,c
 11205  0166D8  6EDA               	movwf	fsr2h,c
 11206  0166DA  0EFF               	movlw	255
 11207  0166DC  22DA               	addwfc	fsr2h,f,c
 11208  0166DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 11209  0166E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 11210  0166EA                     	if	0	;tblptru may be non-zero
 11211  0166EA                     	endif
 11212  0166EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11213  0166EA  0E00               	movlw	low (__mediumconst shr (0+16))
 11214  0166EC  6EF8               	movwf	tblptru,c
 11215  0166EE                     	endif
 11216  0166EE  0008               	tblrd		*
 11217  0166F0  50F5               	movf	tablat,w,c
 11218  0166F2  180C               	xorwf	(btemp+11)^0,w,c
 11219  0166F4  B4D8               	btfsc	status,2,c
 11220  0166F6  D784               	goto	l7798
 11221  0166F8                     u6660:
 11222                           
 11223                           ;stkvar	_l @ sp[(-4)+2]
 11224  0166F8  0EFE               	movlw	-2
 11225  0166FA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11226  016700  0EFF               	movlw	-1
 11227  016702  006F FF8F FFDA     	movff	plusw1,fsr2h
 11228  016708  50DF               	movf	indf2,w,c
 11229  01670A  6E01               	movwf	btemp^0,c
 11230  01670C  6A02               	clrf	(btemp+1)^0,c
 11231                           
 11232                           ;stkvar	_r @ sp[(-4)+0]
 11233  01670E  50E1               	movf	fsr1l,w,c
 11234  016710  0FFC               	addlw	-4
 11235  016712  6ED9               	movwf	fsr2l,c
 11236  016714  50E2               	movf	fsr1h,w,c
 11237  016716  6EDA               	movwf	fsr2h,c
 11238  016718  0EFF               	movlw	255
 11239  01671A  22DA               	addwfc	fsr2h,f,c
 11240  01671C  006F FF7B FFF6     	movff	postinc2,tblptrl
 11241  016722  006F FF77 FFF7     	movff	postdec2,tblptrh
 11242  016728                     	if	0	;tblptru may be non-zero
 11243  016728                     	endif
 11244  016728                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11245  016728  0E00               	movlw	low (__mediumconst shr (0+16))
 11246  01672A  6EF8               	movwf	tblptru,c
 11247  01672C                     	endif
 11248  01672C  0008               	tblrd		*
 11249  01672E  50F5               	movf	tablat,w,c
 11250  016730  5E01               	subwf	btemp^0,f,c
 11251  016732  0E00               	movlw	0
 11252  016734  5A02               	subwfb	(btemp+1)^0,f,c
 11253  016736                     l3302:
 11254                           
 11255                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 11256  016736  0EF6               	movlw	246
 11257  016738  26E1               	addwf	fsr1l,f,c
 11258  01673A  0EFF               	movlw	255
 11259  01673C  22E2               	addwfc	fsr1h,f,c
 11260  01673E  0012               	return		;funcret
 11261  016740                     __end_of_strncmp:
 11262                           	opt callstack 0
 11263                           
 11264 ;; *************** function _stoa *****************
 11265 ;; Defined at:
 11266 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11267 ;; Parameters:    Size  Location     Type
 11268 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11269 ;;		 -> f(6), NULL(0), 
 11270 ;;  s               2  [STACK] PTR unsigned char 
 11271 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 11272 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
 11273 ;;		 -> STR_3(6), V(188), 
 11274 ;; Auto vars:     Size  Location     Type
 11275 ;;  nuls            7  [STACK] unsigned char [7]
 11276 ;;  l               2  [STACK] int 
 11277 ;;  p               2  [STACK] int 
 11278 ;;  cp              2  [STACK] PTR unsigned char 
 11279 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 11280 ;;		 -> STR_27(12), D.lcd(288), D(290), T(144), 
 11281 ;;		 -> STR_7(6), STR_3(6), V(188), 
 11282 ;;  w               2  [STACK] int 
 11283 ;;  i               2  [STACK] int 
 11284 ;; Return value:  Size  Location     Type
 11285 ;;                  2  [STACK] int 
 11286 ;; Registers used:
 11287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11288 ;; Tracked objects:
 11289 ;;		On entry : 0/0
 11290 ;;		On exit  : 0/0
 11291 ;;		Unchanged: 0/0
 11292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11297 ;;Total ram usage:        0 bytes
 11298 ;; Hardware stack levels used:    1
 11299 ;; Hardware stack levels required when called:   10
 11300 ;; This function calls:
 11301 ;;		_fputc
 11302 ;;		_strlen
 11303 ;; This function is called by:
 11304 ;;		_vfpfcnvrt
 11305 ;; This function uses a reentrant model
 11306 ;;
 11307                           
 11308                           	psect	text48
 11309  015770                     __ptext48:
 11310                           	opt callstack 0
 11311  015770                     _stoa:
 11312                           	opt callstack 0
 11313                           
 11314                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11315  015770  0E11               	movlw	17
 11316  015772  26E1               	addwf	fsr1l,f,c
 11317  015774  0E00               	movlw	0
 11318  015776  22E2               	addwfc	fsr1h,f,c
 11319                           
 11320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 11321                           
 11322                           ;incstack = 0
 11323  015778  EE20  F0F1         	lfsr	2,stoa@F1166
 11324                           
 11325                           ;stkvar	_nuls @ sp[(-17)+0]
 11326  01577C  0E07               	movlw	7
 11327  01577E  6E01               	movwf	btemp^0,c
 11328  015780  0EEF               	movlw	-17
 11329  015782                     us1016999:
 11330  015782  006F FF7B FFE3     	movff	postinc2,plusw1
 11331  015788  28E8               	incf	wreg,w,c
 11332  01578A  2E01               	decfsz	btemp^0,f,c
 11333  01578C  D7FA               	bra	us1016999
 11334                           
 11335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 11336                           ;stkvar	_s @ sp[(-17)+-4]
 11337  01578E  0EEB               	movlw	-21
 11338  015790  006F FF8C  F00B    	movff	plusw1,btemp+10
 11339  015796  0EEC               	movlw	-20
 11340  015798  006F FF8C  F00C    	movff	plusw1,btemp+11
 11341                           
 11342                           ;stkvar	_cp @ sp[(-17)+11]
 11343  01579E  0EFB               	movlw	-5
 11344  0157A0  0060  F033  FFE3   	movff	btemp+11,plusw1
 11345  0157A6  0EFA               	movlw	-6
 11346  0157A8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11347                           
 11348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 11349                           ;stkvar	_cp @ sp[(-17)+11]
 11350  0157AE  0EFA               	movlw	-6
 11351  0157B0  006F FF8C  F001    	movff	plusw1,btemp
 11352  0157B6  0EFB               	movlw	-5
 11353  0157B8  50E3               	movf	plusw1,w,c
 11354  0157BA  1001               	iorwf	btemp^0,w,c
 11355  0157BC  A4D8               	btfss	status,2,c
 11356  0157BE  D00E               	goto	l10816
 11357                           
 11358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 11359                           ;stkvar	_nuls @ sp[(-17)+0]
 11360  0157C0  0EEF               	movlw	239
 11361  0157C2  24E1               	addwf	fsr1l,w,c
 11362  0157C4  6E0B               	movwf	(btemp+10)^0,c
 11363  0157C6  0EFF               	movlw	255
 11364  0157C8  20E2               	addwfc	fsr1h,w,c
 11365  0157CA  6E0C               	movwf	(btemp+11)^0,c
 11366                           
 11367                           ;stkvar	_cp @ sp[(-17)+11]
 11368  0157CC  0EFB               	movlw	-5
 11369  0157CE  0060  F033  FFE3   	movff	btemp+11,plusw1
 11370  0157D4  0EFA               	movlw	-6
 11371  0157D6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11372  0157DC                     l10816:
 11373                           
 11374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 11375                           ;stkvar	_cp @ sp[(-17)+11]
 11376  0157DC  0EFA               	movlw	-6
 11377  0157DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11378  0157E4  006F FF8F FFE6     	movff	plusw1,postinc1
 11379  0157EA  EC81  F0C0         	call	_strlen	;wreg free
 11380                           
 11381                           ;stkvar	_l @ sp[(-17)+7]
 11382  0157EE  0EF6               	movlw	-10
 11383  0157F0  0060  F007  FFE3   	movff	btemp,plusw1
 11384  0157F6  0EF7               	movlw	-9
 11385  0157F8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11386                           
 11387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 11388                           ;stkvar	_p @ sp[(-17)+9]
 11389  0157FE  0EF8               	movlw	-8
 11390  015800  0060  F09B  FFE3   	movff	_prec,plusw1
 11391  015806  0EF9               	movlw	-7
 11392  015808  0060  F09F  FFE3   	movff	_prec+1,plusw1
 11393                           
 11394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 11395                           ;stkvar	_p @ sp[(-17)+9]
 11396  01580E  0EF9               	movlw	-7
 11397  015810  BEE3               	btfsc	plusw1,7,c
 11398  015812  D023               	goto	l2155
 11399                           
 11400                           ;stkvar	_l @ sp[(-17)+7]
 11401                           ;stkvar	_p @ sp[(-17)+9]
 11402  015814  50E1               	movf	fsr1l,w,c
 11403  015816  0FF8               	addlw	-8
 11404  015818  6ED9               	movwf	fsr2l,c
 11405  01581A  50E2               	movf	fsr1h,w,c
 11406  01581C  6EDA               	movwf	fsr2h,c
 11407  01581E  0EFF               	movlw	255
 11408  015820  22DA               	addwfc	fsr2h,f,c
 11409  015822  0EF6               	movlw	-10
 11410  015824  50E3               	movf	plusw1,w,c
 11411  015826  5CDE               	subwf	postinc2,w,c
 11412  015828  50DE               	movf	postinc2,w,c
 11413  01582A  0A80               	xorlw	128
 11414  01582C  6E01               	movwf	btemp^0,c
 11415  01582E  0EF7               	movlw	-9
 11416  015830  50E3               	movf	plusw1,w,c
 11417  015832  0A80               	xorlw	128
 11418  015834  5801               	subwfb	btemp^0,w,c
 11419  015836  B0D8               	btfsc	status,0,c
 11420  015838  D010               	goto	l2155
 11421                           
 11422                           ;stkvar	_p @ sp[(-17)+9]
 11423                           ;stkvar	_l @ sp[(-17)+7]
 11424  01583A  0EF8               	movlw	-8
 11425  01583C  006F FF8C  F001    	movff	plusw1,btemp
 11426  015842  0EF6               	movlw	-10
 11427  015844  0060  F007  FFE3   	movff	btemp,plusw1
 11428  01584A  0EF9               	movlw	-7
 11429  01584C  006F FF8C  F001    	movff	plusw1,btemp
 11430  015852  0EF7               	movlw	-9
 11431  015854  0060  F007  FFE3   	movff	btemp,plusw1
 11432  01585A                     l2155:
 11433                           
 11434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 11435                           ;stkvar	_l @ sp[(-17)+7]
 11436                           ;stkvar	_p @ sp[(-17)+9]
 11437  01585A  0EF6               	movlw	-10
 11438  01585C  006F FF8C  F001    	movff	plusw1,btemp
 11439  015862  0EF8               	movlw	-8
 11440  015864  0060  F007  FFE3   	movff	btemp,plusw1
 11441  01586A  0EF7               	movlw	-9
 11442  01586C  006F FF8C  F001    	movff	plusw1,btemp
 11443  015872  0EF9               	movlw	-7
 11444  015874  0060  F007  FFE3   	movff	btemp,plusw1
 11445                           
 11446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 11447                           ;stkvar	_w @ sp[(-17)+13]
 11448  01587A  0EFC               	movlw	-4
 11449  01587C  0060  F093  FFE3   	movff	_width,plusw1
 11450  015882  0EFD               	movlw	-3
 11451  015884  0060  F097  FFE3   	movff	_width+1,plusw1
 11452                           
 11453                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 11454  01588A  A028               	btfss	_flags^0,0,c
 11455  01588C  D01F               	goto	l10836
 11456  01588E  D031               	goto	u10210
 11457  015890                     l10832:
 11458                           
 11459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 11460                           ;stkvar	_fp @ sp[(-17)+-2]
 11461  015890  0EED               	movlw	-19
 11462  015892  006F FF8F FFE6     	movff	plusw1,postinc1
 11463  015898  006F FF8F FFE6     	movff	plusw1,postinc1
 11464  01589E  0E20               	movlw	32
 11465  0158A0  6EE6               	movwf	postinc1,c
 11466  0158A2  0E00               	movlw	0
 11467  0158A4  6EE6               	movwf	postinc1,c
 11468  0158A6  EC87  F0B8         	call	_fputc	;wreg free
 11469                           
 11470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 11471                           ;stkvar	_l @ sp[(-17)+7]
 11472  0158AA  0EF6               	movlw	-10
 11473  0158AC  50E3               	movf	plusw1,w,c
 11474  0158AE  0F01               	addlw	1
 11475  0158B0  6E01               	movwf	btemp^0,c
 11476  0158B2  0EF6               	movlw	-10
 11477  0158B4  0060  F007  FFE3   	movff	btemp,plusw1
 11478  0158BA  6A01               	clrf	btemp^0,c
 11479  0158BC  0EF7               	movlw	-9
 11480  0158BE  50E3               	movf	plusw1,w,c
 11481  0158C0  2001               	addwfc	btemp^0,w,c
 11482  0158C2  6E01               	movwf	btemp^0,c
 11483  0158C4  0EF7               	movlw	-9
 11484  0158C6  0060  F007  FFE3   	movff	btemp,plusw1
 11485  0158CC                     l10836:
 11486                           
 11487                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 11488                           ;stkvar	_w @ sp[(-17)+13]
 11489                           ;stkvar	_l @ sp[(-17)+7]
 11490  0158CC  50E1               	movf	fsr1l,w,c
 11491  0158CE  0FF6               	addlw	-10
 11492  0158D0  6ED9               	movwf	fsr2l,c
 11493  0158D2  50E2               	movf	fsr1h,w,c
 11494  0158D4  6EDA               	movwf	fsr2h,c
 11495  0158D6  0EFF               	movlw	255
 11496  0158D8  22DA               	addwfc	fsr2h,f,c
 11497  0158DA  0EFC               	movlw	-4
 11498  0158DC  50E3               	movf	plusw1,w,c
 11499  0158DE  5CDE               	subwf	postinc2,w,c
 11500  0158E0  50DE               	movf	postinc2,w,c
 11501  0158E2  0A80               	xorlw	128
 11502  0158E4  6E01               	movwf	btemp^0,c
 11503  0158E6  0EFD               	movlw	-3
 11504  0158E8  50E3               	movf	plusw1,w,c
 11505  0158EA  0A80               	xorlw	128
 11506  0158EC  5801               	subwfb	btemp^0,w,c
 11507  0158EE  A0D8               	btfss	status,0,c
 11508  0158F0  D7CF               	goto	l10832
 11509  0158F2                     u10210:
 11510                           
 11511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 11512                           ;stkvar	_i @ sp[(-17)+15]
 11513  0158F2  0EFE               	movlw	-2
 11514  0158F4  6AE3               	clrf	plusw1,c
 11515  0158F6  0EFF               	movlw	-1
 11516  0158F8  6AE3               	clrf	plusw1,c
 11517                           
 11518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11519  0158FA  D045               	goto	l10846
 11520  0158FC                     l10840:
 11521                           
 11522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 11523                           ;stkvar	_fp @ sp[(-17)+-2]
 11524  0158FC  0EED               	movlw	-19
 11525  0158FE  006F FF8F FFE6     	movff	plusw1,postinc1
 11526  015904  006F FF8F FFE6     	movff	plusw1,postinc1
 11527                           
 11528                           ;stkvar	_cp @ sp[(-19)+11]
 11529  01590A  0EF8               	movlw	-8
 11530  01590C  006F FF8F FFF6     	movff	plusw1,tblptrl
 11531  015912  0EF9               	movlw	-7
 11532  015914  006F FF8F FFF7     	movff	plusw1,tblptrh
 11533  01591A  0E00               	movlw	low (__mediumconst shr (0+16))
 11534  01591C  6EF8               	movwf	tblptru,c
 11535  01591E  0E1F               	movlw	(high __ramtop+-1)
 11536  015920  64F7               	cpfsgt	tblptrh,c
 11537  015922  D003               	bra	u10227
 11538  015924  0008               	tblrd		*
 11539  015926  50F5               	movf	tablat,w,c
 11540  015928  D007               	bra	u10220
 11541  01592A                     u10227:
 11542  01592A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11543  015930  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11544  015936  50EF               	movf	indf0,w,c
 11545  015938                     u10220:
 11546  015938  6EE6               	movwf	postinc1,c
 11547  01593A  0E00               	movlw	0
 11548  01593C  6EE6               	movwf	postinc1,c
 11549  01593E  EC87  F0B8         	call	_fputc	;wreg free
 11550                           
 11551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11552                           ;stkvar	_cp @ sp[(-17)+11]
 11553  015942  0EFA               	movlw	-6
 11554  015944  50E3               	movf	plusw1,w,c
 11555  015946  0F01               	addlw	1
 11556  015948  6E01               	movwf	btemp^0,c
 11557  01594A  0EFA               	movlw	-6
 11558  01594C  0060  F007  FFE3   	movff	btemp,plusw1
 11559  015952  6A01               	clrf	btemp^0,c
 11560  015954  0EFB               	movlw	-5
 11561  015956  50E3               	movf	plusw1,w,c
 11562  015958  2001               	addwfc	btemp^0,w,c
 11563  01595A  6E01               	movwf	btemp^0,c
 11564  01595C  0EFB               	movlw	-5
 11565  01595E  0060  F007  FFE3   	movff	btemp,plusw1
 11566                           
 11567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11568                           ;stkvar	_i @ sp[(-17)+15]
 11569  015964  0EFE               	movlw	-2
 11570  015966  50E3               	movf	plusw1,w,c
 11571  015968  0F01               	addlw	1
 11572  01596A  6E01               	movwf	btemp^0,c
 11573  01596C  0EFE               	movlw	-2
 11574  01596E  0060  F007  FFE3   	movff	btemp,plusw1
 11575  015974  6A01               	clrf	btemp^0,c
 11576  015976  0EFF               	movlw	-1
 11577  015978  50E3               	movf	plusw1,w,c
 11578  01597A  2001               	addwfc	btemp^0,w,c
 11579  01597C  6E01               	movwf	btemp^0,c
 11580  01597E  0EFF               	movlw	-1
 11581  015980  0060  F007  FFE3   	movff	btemp,plusw1
 11582  015986                     l10846:
 11583                           
 11584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11585                           ;stkvar	_p @ sp[(-17)+9]
 11586                           ;stkvar	_i @ sp[(-17)+15]
 11587  015986  50E1               	movf	fsr1l,w,c
 11588  015988  0FFE               	addlw	-2
 11589  01598A  6ED9               	movwf	fsr2l,c
 11590  01598C  50E2               	movf	fsr1h,w,c
 11591  01598E  6EDA               	movwf	fsr2h,c
 11592  015990  0EFF               	movlw	255
 11593  015992  22DA               	addwfc	fsr2h,f,c
 11594  015994  0EF8               	movlw	-8
 11595  015996  50E3               	movf	plusw1,w,c
 11596  015998  5CDE               	subwf	postinc2,w,c
 11597  01599A  50DE               	movf	postinc2,w,c
 11598  01599C  0A80               	xorlw	128
 11599  01599E  6E01               	movwf	btemp^0,c
 11600  0159A0  0EF9               	movlw	-7
 11601  0159A2  50E3               	movf	plusw1,w,c
 11602  0159A4  0A80               	xorlw	128
 11603  0159A6  5801               	subwfb	btemp^0,w,c
 11604  0159A8  A0D8               	btfss	status,0,c
 11605  0159AA  D7A8               	goto	l10840
 11606                           
 11607                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11608  0159AC  B028               	btfsc	_flags^0,0,c
 11609  0159AE  D01F               	goto	l10854
 11610  0159B0  D031               	goto	u10250
 11611  0159B2                     l10850:
 11612                           
 11613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11614                           ;stkvar	_fp @ sp[(-17)+-2]
 11615  0159B2  0EED               	movlw	-19
 11616  0159B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11617  0159BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11618  0159C0  0E20               	movlw	32
 11619  0159C2  6EE6               	movwf	postinc1,c
 11620  0159C4  0E00               	movlw	0
 11621  0159C6  6EE6               	movwf	postinc1,c
 11622  0159C8  EC87  F0B8         	call	_fputc	;wreg free
 11623                           
 11624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11625                           ;stkvar	_l @ sp[(-17)+7]
 11626  0159CC  0EF6               	movlw	-10
 11627  0159CE  50E3               	movf	plusw1,w,c
 11628  0159D0  0F01               	addlw	1
 11629  0159D2  6E01               	movwf	btemp^0,c
 11630  0159D4  0EF6               	movlw	-10
 11631  0159D6  0060  F007  FFE3   	movff	btemp,plusw1
 11632  0159DC  6A01               	clrf	btemp^0,c
 11633  0159DE  0EF7               	movlw	-9
 11634  0159E0  50E3               	movf	plusw1,w,c
 11635  0159E2  2001               	addwfc	btemp^0,w,c
 11636  0159E4  6E01               	movwf	btemp^0,c
 11637  0159E6  0EF7               	movlw	-9
 11638  0159E8  0060  F007  FFE3   	movff	btemp,plusw1
 11639  0159EE                     l10854:
 11640                           
 11641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11642                           ;stkvar	_w @ sp[(-17)+13]
 11643                           ;stkvar	_l @ sp[(-17)+7]
 11644  0159EE  50E1               	movf	fsr1l,w,c
 11645  0159F0  0FF6               	addlw	-10
 11646  0159F2  6ED9               	movwf	fsr2l,c
 11647  0159F4  50E2               	movf	fsr1h,w,c
 11648  0159F6  6EDA               	movwf	fsr2h,c
 11649  0159F8  0EFF               	movlw	255
 11650  0159FA  22DA               	addwfc	fsr2h,f,c
 11651  0159FC  0EFC               	movlw	-4
 11652  0159FE  50E3               	movf	plusw1,w,c
 11653  015A00  5CDE               	subwf	postinc2,w,c
 11654  015A02  50DE               	movf	postinc2,w,c
 11655  015A04  0A80               	xorlw	128
 11656  015A06  6E01               	movwf	btemp^0,c
 11657  015A08  0EFD               	movlw	-3
 11658  015A0A  50E3               	movf	plusw1,w,c
 11659  015A0C  0A80               	xorlw	128
 11660  015A0E  5801               	subwfb	btemp^0,w,c
 11661  015A10  A0D8               	btfss	status,0,c
 11662  015A12  D7CF               	goto	l10850
 11663  015A14                     u10250:
 11664                           
 11665                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 11666                           ;stkvar	_l @ sp[(-17)+7]
 11667  015A14  0EF6               	movlw	-10
 11668  015A16  006F FF8C  F001    	movff	plusw1,btemp
 11669  015A1C  0EF7               	movlw	-9
 11670  015A1E  006F FF8C  F002    	movff	plusw1,btemp+1
 11671                           
 11672                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11673  015A24  0EEB               	movlw	235
 11674  015A26  26E1               	addwf	fsr1l,f,c
 11675  015A28  0EFF               	movlw	255
 11676  015A2A  22E2               	addwfc	fsr1h,f,c
 11677  015A2C  0012               	return		;funcret
 11678  015A2E                     __end_of_stoa:
 11679                           	opt callstack 0
 11680                           
 11681 ;; *************** function _efgtoa *****************
 11682 ;; Defined at:
 11683 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11684 ;; Parameters:    Size  Location     Type
 11685 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11686 ;;		 -> f(6), NULL(0), 
 11687 ;;  f               4  [STACK] PTR struct _IO_FILE
 11688 ;;  c               1  [STACK] unsigned char 
 11689 ;; Auto vars:     Size  Location     Type
 11690 ;;  u               4  [STACK] unsigned char 
 11691 ;;  g               4  [STACK] unsigned char 
 11692 ;;  l               4  [STACK] unsigned char 
 11693 ;;  h               4  [STACK] unsigned char 
 11694 ;;  ou              4  [STACK] unsigned char 
 11695 ;;  n               2  [STACK] int 
 11696 ;;  e               2  [STACK] int 
 11697 ;;  i               2  [STACK] int 
 11698 ;;  w               2  [STACK] int 
 11699 ;;  p               2  [STACK] int 
 11700 ;;  sign            2  [STACK] int 
 11701 ;;  d               2  [STACK] int 
 11702 ;;  ne              2  [STACK] int 
 11703 ;;  m               2  [STACK] int 
 11704 ;;  pp              2  [STACK] int 
 11705 ;;  t               2  [STACK] int 
 11706 ;;  mode            1  [STACK] unsigned char 
 11707 ;;  nmode           1  [STACK] unsigned char 
 11708 ;; Return value:  Size  Location     Type
 11709 ;;                  2  [STACK] int 
 11710 ;; Registers used:
 11711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11712 ;; Tracked objects:
 11713 ;;		On entry : 0/0
 11714 ;;		On exit  : 0/0
 11715 ;;		Unchanged: 0/0
 11716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11721 ;;Total ram usage:        0 bytes
 11722 ;; Hardware stack levels used:    1
 11723 ;; Hardware stack levels required when called:   12
 11724 ;; This function calls:
 11725 ;;		___awdiv
 11726 ;;		___awmod
 11727 ;;		___fladd
 11728 ;;		___fldiv
 11729 ;;		___fleq
 11730 ;;		___flge
 11731 ;;		___flmul
 11732 ;;		___flneg
 11733 ;;		___flsub
 11734 ;;		___fltol
 11735 ;;		___fpclassifyf
 11736 ;;		_floorf
 11737 ;;		_isupper
 11738 ;;		_pad
 11739 ;;		_strcpy
 11740 ;;		_tolower
 11741 ;; This function is called by:
 11742 ;;		_vfpfcnvrt
 11743 ;; This function uses a reentrant model
 11744 ;;
 11745                           
 11746                           	psect	text49
 11747  010000                     __ptext49:
 11748                           	opt callstack 0
 11749  010000                     _efgtoa:
 11750                           	opt callstack 0
 11751                           
 11752                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11753  010000  0E38               	movlw	56
 11754  010002  26E1               	addwf	fsr1l,f,c
 11755  010004  0E00               	movlw	0
 11756  010006  22E2               	addwfc	fsr1h,f,c
 11757                           
 11758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11759                           ;stkvar	_sign @ sp[(-56)+42]
 11760                           
 11761                           ;incstack = 0
 11762  010008  0EF2               	movlw	-14
 11763  01000A  6AE3               	clrf	plusw1,c
 11764  01000C  0EF3               	movlw	-13
 11765  01000E  6AE3               	clrf	plusw1,c
 11766                           
 11767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11768                           ;stkvar	_f @ sp[(-56)+-6]
 11769  010010  0EC2               	movlw	-62
 11770  010012  006F FF8C  F009    	movff	plusw1,btemp+8
 11771  010018  0EC3               	movlw	-61
 11772  01001A  006F FF8C  F00A    	movff	plusw1,btemp+9
 11773  010020  0EC4               	movlw	-60
 11774  010022  006F FF8C  F00B    	movff	plusw1,btemp+10
 11775  010028  0EC5               	movlw	-59
 11776  01002A  006F FF8C  F00C    	movff	plusw1,btemp+11
 11777                           
 11778                           ;stkvar	_g @ sp[(-56)+16]
 11779  010030  0ED8               	movlw	-40
 11780  010032  0060  F027  FFE3   	movff	btemp+8,plusw1
 11781  010038  0ED9               	movlw	-39
 11782  01003A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 11783  010040  0EDA               	movlw	-38
 11784  010042  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11785  010048  0EDB               	movlw	-37
 11786  01004A  0060  F033  FFE3   	movff	btemp+11,plusw1
 11787                           
 11788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11789                           ;stkvar	_g @ sp[(-56)+16]
 11790  010050  0EDB               	movlw	-37
 11791  010052  AEE3               	btfss	plusw1,7,c
 11792  010054  D02B               	goto	l10514
 11793                           
 11794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11795  010056  0E01               	movlw	1
 11796  010058  6E0B               	movwf	(btemp+10)^0,c
 11797  01005A  0E00               	movlw	0
 11798  01005C  6E0C               	movwf	(btemp+11)^0,c
 11799                           
 11800                           ;stkvar	_sign @ sp[(-56)+42]
 11801  01005E  0EF2               	movlw	-14
 11802  010060  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11803  010066  0EF3               	movlw	-13
 11804  010068  0060  F033  FFE3   	movff	btemp+11,plusw1
 11805                           
 11806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11807                           ;stkvar	_g @ sp[(-56)+16]
 11808  01006E  0ED8               	movlw	-40
 11809  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11810  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11811  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11812  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11813  010088  EC37  F0C6         	call	___flneg	;wreg free
 11814                           
 11815                           ;stkvar	_g @ sp[(-56)+16]
 11816  01008C  0ED8               	movlw	-40
 11817  01008E  0060  F007  FFE3   	movff	btemp,plusw1
 11818  010094  0ED9               	movlw	-39
 11819  010096  0060  F00B  FFE3   	movff	btemp+1,plusw1
 11820  01009C  0EDA               	movlw	-38
 11821  01009E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 11822  0100A4  0EDB               	movlw	-37
 11823  0100A6  0060  F013  FFE3   	movff	btemp+3,plusw1
 11824  0100AC                     l10514:
 11825                           
 11826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11827                           ;stkvar	_n @ sp[(-56)+32]
 11828  0100AC  0EE8               	movlw	-24
 11829  0100AE  6AE3               	clrf	plusw1,c
 11830  0100B0  0EE9               	movlw	-23
 11831  0100B2  6AE3               	clrf	plusw1,c
 11832                           
 11833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11834                           ;stkvar	_w @ sp[(-56)+38]
 11835  0100B4  0EEE               	movlw	-18
 11836  0100B6  0060  F093  FFE3   	movff	_width,plusw1
 11837  0100BC  0EEF               	movlw	-17
 11838  0100BE  0060  F097  FFE3   	movff	_width+1,plusw1
 11839                           
 11840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11841                           ;stkvar	_sign @ sp[(-56)+42]
 11842  0100C4  0EF2               	movlw	-14
 11843  0100C6  006F FF8C  F001    	movff	plusw1,btemp
 11844  0100CC  0EF3               	movlw	-13
 11845  0100CE  50E3               	movf	plusw1,w,c
 11846  0100D0  1001               	iorwf	btemp^0,w,c
 11847  0100D2  A4D8               	btfss	status,2,c
 11848  0100D4  D002               	goto	u9660
 11849  0100D6  A428               	btfss	_flags^0,2,c
 11850  0100D8  D036               	goto	l10534
 11851  0100DA                     u9660:
 11852                           
 11853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11854                           ;stkvar	_sign @ sp[(-56)+42]
 11855  0100DA  0EF2               	movlw	-14
 11856  0100DC  006F FF8C  F001    	movff	plusw1,btemp
 11857  0100E2  0EF3               	movlw	-13
 11858  0100E4  50E3               	movf	plusw1,w,c
 11859  0100E6  1001               	iorwf	btemp^0,w,c
 11860  0100E8  A4D8               	btfss	status,2,c
 11861  0100EA  D002               	goto	l10526
 11862  0100EC  0E2B               	movlw	43
 11863  0100EE  D001               	goto	L9
 11864  0100F0                     l10526:
 11865  0100F0  0E2D               	movlw	45
 11866  0100F2                     L9:
 11867  0100F2  6E0B               	movwf	(btemp+10)^0,c
 11868  0100F4  0E00               	movlw	0
 11869  0100F6  6E0C               	movwf	(btemp+11)^0,c
 11870                           
 11871                           ;stkvar	_efgtoa$5055 @ sp[(-56)+10]
 11872  0100F8  0ED2               	movlw	-46
 11873  0100FA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11874  010100  0ED3               	movlw	-45
 11875  010102  0060  F033  FFE3   	movff	btemp+11,plusw1
 11876                           
 11877                           ;stkvar	_efgtoa$5055 @ sp[(-56)+10]
 11878  010108  0ED2               	movlw	-46
 11879  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 11880                           
 11881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11882                           ;stkvar	_n @ sp[(-56)+32]
 11883  010110  0EE8               	movlw	-24
 11884  010112  50E3               	movf	plusw1,w,c
 11885  010114  0F01               	addlw	1
 11886  010116  6E01               	movwf	btemp^0,c
 11887  010118  0EE8               	movlw	-24
 11888  01011A  0060  F007  FFE3   	movff	btemp,plusw1
 11889  010120  6A01               	clrf	btemp^0,c
 11890  010122  0EE9               	movlw	-23
 11891  010124  50E3               	movf	plusw1,w,c
 11892  010126  2001               	addwfc	btemp^0,w,c
 11893  010128  6E01               	movwf	btemp^0,c
 11894  01012A  0EE9               	movlw	-23
 11895  01012C  0060  F007  FFE3   	movff	btemp,plusw1
 11896                           
 11897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11898                           ;stkvar	_w @ sp[(-56)+38]
 11899  010132  50E1               	movf	fsr1l,w,c
 11900  010134  0FEE               	addlw	-18
 11901  010136  6ED9               	movwf	fsr2l,c
 11902  010138  50E2               	movf	fsr1h,w,c
 11903  01013A  6EDA               	movwf	fsr2h,c
 11904  01013C  0EFF               	movlw	255
 11905  01013E  22DA               	addwfc	fsr2h,f,c
 11906  010140  06DE               	decf	postinc2,f,c
 11907  010142  0E00               	movlw	0
 11908  010144  5ADD               	subwfb	postdec2,f,c
 11909  010146                     l10534:
 11910                           
 11911                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11912                           ;stkvar	_g @ sp[(-56)+16]
 11913  010146  0ED8               	movlw	-40
 11914  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11915  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11916  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11917  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11918  010160  EC80  F0B4         	call	___fpclassifyf	;wreg free
 11919  010164  0401               	decf	btemp^0,w,c
 11920  010166  1002               	iorwf	(btemp+1)^0,w,c
 11921  010168  A4D8               	btfss	status,2,c
 11922  01016A  D076               	goto	l10552
 11923  01016C  0EBF               	movlw	191
 11924  01016E  6E0B               	movwf	(btemp+10)^0,c
 11925  010170  0EFF               	movlw	255
 11926  010172  6E0C               	movwf	(btemp+11)^0,c
 11927                           
 11928                           ;stkvar	_c @ sp[(-56)+-7]
 11929  010174  0EC1               	movlw	-63
 11930  010176  50E3               	movf	plusw1,w,c
 11931  010178  6E09               	movwf	(btemp+8)^0,c
 11932  01017A  6A0A               	clrf	(btemp+9)^0,c
 11933  01017C  500B               	movf	(btemp+10)^0,w,c
 11934  01017E  2609               	addwf	(btemp+8)^0,f,c
 11935  010180  500C               	movf	(btemp+11)^0,w,c
 11936  010182  220A               	addwfc	(btemp+9)^0,f,c
 11937  010184  500A               	movf	(btemp+9)^0,w,c
 11938  010186  E106               	bnz	u9690
 11939  010188  0E1A               	movlw	26
 11940  01018A  5C09               	subwf	(btemp+8)^0,w,c
 11941  01018C  B0D8               	btfsc	status,0,c
 11942  01018E  D002               	goto	u9690
 11943  010190  0E01               	movlw	1
 11944  010192  D001               	goto	u9700
 11945  010194                     u9690:
 11946  010194  0E00               	movlw	0
 11947  010196                     u9700:
 11948  010196  6E0B               	movwf	(btemp+10)^0,c
 11949  010198  6A0C               	clrf	(btemp+11)^0,c
 11950                           
 11951                           ;stkvar	_efgtoa$5056 @ sp[(-56)+8]
 11952  01019A  0ED0               	movlw	-48
 11953  01019C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 11954  0101A2  0ED1               	movlw	-47
 11955  0101A4  0060  F033  FFE3   	movff	btemp+11,plusw1
 11956                           
 11957                           ;stkvar	_efgtoa$5056 @ sp[(-56)+8]
 11958  0101AA  0ED0               	movlw	-48
 11959  0101AC  006F FF8C  F001    	movff	plusw1,btemp
 11960  0101B2  0ED1               	movlw	-47
 11961  0101B4  50E3               	movf	plusw1,w,c
 11962  0101B6  1001               	iorwf	btemp^0,w,c
 11963  0101B8  B4D8               	btfsc	status,2,c
 11964  0101BA  D017               	goto	l10544
 11965                           
 11966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11967  0101BC  0EE6               	movlw	low STR_46
 11968  0101BE  6EE6               	movwf	postinc1,c
 11969  0101C0  0EFF               	movlw	high STR_46
 11970  0101C2  6EE6               	movwf	postinc1,c
 11971                           
 11972                           ;stkvar	_n @ sp[(-58)+32]
 11973  0101C4  0E94               	movlw	low _dbuf
 11974  0101C6  6E0B               	movwf	(btemp+10)^0,c
 11975  0101C8  0E03               	movlw	high _dbuf
 11976  0101CA  6E0C               	movwf	(btemp+11)^0,c
 11977  0101CC  0EE6               	movlw	-26
 11978  0101CE  50E3               	movf	plusw1,w,c
 11979  0101D0  260B               	addwf	(btemp+10)^0,f,c
 11980  0101D2  0EE7               	movlw	-25
 11981  0101D4  50E3               	movf	plusw1,w,c
 11982  0101D6  220C               	addwfc	(btemp+11)^0,f,c
 11983  0101D8  0060  F02F  FFE6   	movff	btemp+10,postinc1
 11984  0101DE  0060  F033  FFE6   	movff	btemp+11,postinc1
 11985  0101E4  EC96  F0BD         	call	_strcpy	;wreg free
 11986                           
 11987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11988  0101E8  D016               	goto	l10546
 11989  0101EA                     l10544:
 11990                           
 11991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11992  0101EA  0EEE               	movlw	low STR_47
 11993  0101EC  6EE6               	movwf	postinc1,c
 11994  0101EE  0EFF               	movlw	high STR_47
 11995  0101F0  6EE6               	movwf	postinc1,c
 11996                           
 11997                           ;stkvar	_n @ sp[(-58)+32]
 11998  0101F2  0E94               	movlw	low _dbuf
 11999  0101F4  6E0B               	movwf	(btemp+10)^0,c
 12000  0101F6  0E03               	movlw	high _dbuf
 12001  0101F8  6E0C               	movwf	(btemp+11)^0,c
 12002  0101FA  0EE6               	movlw	-26
 12003  0101FC  50E3               	movf	plusw1,w,c
 12004  0101FE  260B               	addwf	(btemp+10)^0,f,c
 12005  010200  0EE7               	movlw	-25
 12006  010202  50E3               	movf	plusw1,w,c
 12007  010204  220C               	addwfc	(btemp+11)^0,f,c
 12008  010206  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12009  01020C  0060  F033  FFE6   	movff	btemp+11,postinc1
 12010  010212  EC96  F0BD         	call	_strcpy	;wreg free
 12011  010216                     l10546:
 12012                           
 12013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 12014                           ;stkvar	_w @ sp[(-56)+38]
 12015  010216  50E1               	movf	fsr1l,w,c
 12016  010218  0FEE               	addlw	-18
 12017  01021A  6ED9               	movwf	fsr2l,c
 12018  01021C  50E2               	movf	fsr1h,w,c
 12019  01021E  6EDA               	movwf	fsr2h,c
 12020  010220  0EFF               	movlw	255
 12021  010222  22DA               	addwfc	fsr2h,f,c
 12022  010224  0EFD               	movlw	253
 12023  010226  26DE               	addwf	postinc2,f,c
 12024  010228  0EFF               	movlw	255
 12025  01022A  22DD               	addwfc	postdec2,f,c
 12026  01022C                     l10548:
 12027                           
 12028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 12029                           ;stkvar	_w @ sp[(-56)+38]
 12030  01022C  0EEE               	movlw	-18
 12031  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 12032  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 12033  01023A  0E94               	movlw	low _dbuf
 12034  01023C  6EE6               	movwf	postinc1,c
 12035  01023E  0E03               	movlw	high _dbuf
 12036  010240  6EE6               	movwf	postinc1,c
 12037                           
 12038                           ;stkvar	_fp @ sp[(-60)+-2]
 12039  010242  0EC2               	movlw	-62
 12040  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 12041  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 12042  010250  ECA5  F0B9         	call	_pad	;wreg free
 12043  010254  EF1D  F089         	goto	l2073
 12044  010258                     l10552:
 12045                           
 12046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 12047                           ;stkvar	_g @ sp[(-56)+16]
 12048  010258  0ED8               	movlw	-40
 12049  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 12050  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 12051  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 12052  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 12053  010272  EC80  F0B4         	call	___fpclassifyf	;wreg free
 12054  010276  5001               	movf	btemp^0,w,c
 12055  010278  1002               	iorwf	(btemp+1)^0,w,c
 12056  01027A  A4D8               	btfss	status,2,c
 12057  01027C  D056               	goto	l10570
 12058  01027E  0EBF               	movlw	191
 12059  010280  6E0B               	movwf	(btemp+10)^0,c
 12060  010282  0EFF               	movlw	255
 12061  010284  6E0C               	movwf	(btemp+11)^0,c
 12062                           
 12063                           ;stkvar	_c @ sp[(-56)+-7]
 12064  010286  0EC1               	movlw	-63
 12065  010288  50E3               	movf	plusw1,w,c
 12066  01028A  6E09               	movwf	(btemp+8)^0,c
 12067  01028C  6A0A               	clrf	(btemp+9)^0,c
 12068  01028E  500B               	movf	(btemp+10)^0,w,c
 12069  010290  2609               	addwf	(btemp+8)^0,f,c
 12070  010292  500C               	movf	(btemp+11)^0,w,c
 12071  010294  220A               	addwfc	(btemp+9)^0,f,c
 12072  010296  500A               	movf	(btemp+9)^0,w,c
 12073  010298  E106               	bnz	u9730
 12074  01029A  0E1A               	movlw	26
 12075  01029C  5C09               	subwf	(btemp+8)^0,w,c
 12076  01029E  B0D8               	btfsc	status,0,c
 12077  0102A0  D002               	goto	u9730
 12078  0102A2  0E01               	movlw	1
 12079  0102A4  D001               	goto	u9740
 12080  0102A6                     u9730:
 12081  0102A6  0E00               	movlw	0
 12082  0102A8                     u9740:
 12083  0102A8  6E0B               	movwf	(btemp+10)^0,c
 12084  0102AA  6A0C               	clrf	(btemp+11)^0,c
 12085                           
 12086                           ;stkvar	_efgtoa$5060 @ sp[(-56)+6]
 12087  0102AC  0ECE               	movlw	-50
 12088  0102AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12089  0102B4  0ECF               	movlw	-49
 12090  0102B6  0060  F033  FFE3   	movff	btemp+11,plusw1
 12091                           
 12092                           ;stkvar	_efgtoa$5060 @ sp[(-56)+6]
 12093  0102BC  0ECE               	movlw	-50
 12094  0102BE  006F FF8C  F001    	movff	plusw1,btemp
 12095  0102C4  0ECF               	movlw	-49
 12096  0102C6  50E3               	movf	plusw1,w,c
 12097  0102C8  1001               	iorwf	btemp^0,w,c
 12098  0102CA  B4D8               	btfsc	status,2,c
 12099  0102CC  D017               	goto	l10562
 12100                           
 12101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 12102  0102CE  0EEA               	movlw	low STR_50
 12103  0102D0  6EE6               	movwf	postinc1,c
 12104  0102D2  0EFF               	movlw	high STR_50
 12105  0102D4  6EE6               	movwf	postinc1,c
 12106                           
 12107                           ;stkvar	_n @ sp[(-58)+32]
 12108  0102D6  0E94               	movlw	low _dbuf
 12109  0102D8  6E0B               	movwf	(btemp+10)^0,c
 12110  0102DA  0E03               	movlw	high _dbuf
 12111  0102DC  6E0C               	movwf	(btemp+11)^0,c
 12112  0102DE  0EE6               	movlw	-26
 12113  0102E0  50E3               	movf	plusw1,w,c
 12114  0102E2  260B               	addwf	(btemp+10)^0,f,c
 12115  0102E4  0EE7               	movlw	-25
 12116  0102E6  50E3               	movf	plusw1,w,c
 12117  0102E8  220C               	addwfc	(btemp+11)^0,f,c
 12118  0102EA  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12119  0102F0  0060  F033  FFE6   	movff	btemp+11,postinc1
 12120  0102F6  EC96  F0BD         	call	_strcpy	;wreg free
 12121                           
 12122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 12123  0102FA  D78D               	goto	l10546
 12124  0102FC                     l10562:
 12125                           
 12126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 12127  0102FC  0EF2               	movlw	low STR_51
 12128  0102FE  6EE6               	movwf	postinc1,c
 12129  010300  0EFF               	movlw	high STR_51
 12130  010302  6EE6               	movwf	postinc1,c
 12131                           
 12132                           ;stkvar	_n @ sp[(-58)+32]
 12133  010304  0E94               	movlw	low _dbuf
 12134  010306  6E0B               	movwf	(btemp+10)^0,c
 12135  010308  0E03               	movlw	high _dbuf
 12136  01030A  6E0C               	movwf	(btemp+11)^0,c
 12137  01030C  0EE6               	movlw	-26
 12138  01030E  50E3               	movf	plusw1,w,c
 12139  010310  260B               	addwf	(btemp+10)^0,f,c
 12140  010312  0EE7               	movlw	-25
 12141  010314  50E3               	movf	plusw1,w,c
 12142  010316  220C               	addwfc	(btemp+11)^0,f,c
 12143  010318  0060  F02F  FFE6   	movff	btemp+10,postinc1
 12144  01031E  0060  F033  FFE6   	movff	btemp+11,postinc1
 12145  010324  EC96  F0BD         	call	_strcpy	;wreg free
 12146  010328  D776               	goto	l10546
 12147  01032A                     l10570:
 12148                           
 12149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 12150  01032A  0E00               	movlw	0
 12151  01032C  6E09               	movwf	(btemp+8)^0,c
 12152  01032E  0E00               	movlw	0
 12153  010330  6E0A               	movwf	(btemp+9)^0,c
 12154  010332  0E80               	movlw	128
 12155  010334  6E0B               	movwf	(btemp+10)^0,c
 12156  010336  0E3F               	movlw	63
 12157  010338  6E0C               	movwf	(btemp+11)^0,c
 12158                           
 12159                           ;stkvar	_u @ sp[(-56)+12]
 12160  01033A  0ED4               	movlw	-44
 12161  01033C  0060  F027  FFE3   	movff	btemp+8,plusw1
 12162  010342  0ED5               	movlw	-43
 12163  010344  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12164  01034A  0ED6               	movlw	-42
 12165  01034C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12166  010352  0ED7               	movlw	-41
 12167  010354  0060  F033  FFE3   	movff	btemp+11,plusw1
 12168                           
 12169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 12170                           ;stkvar	_e @ sp[(-56)+34]
 12171  01035A  0EEA               	movlw	-22
 12172  01035C  6AE3               	clrf	plusw1,c
 12173  01035E  0EEB               	movlw	-21
 12174  010360  6AE3               	clrf	plusw1,c
 12175                           
 12176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 12177  010362  0E00               	movlw	0
 12178  010364  6EE6               	movwf	postinc1,c
 12179  010366  0E00               	movlw	0
 12180  010368  6EE6               	movwf	postinc1,c
 12181  01036A  0E00               	movlw	0
 12182  01036C  6EE6               	movwf	postinc1,c
 12183  01036E  0E00               	movlw	0
 12184  010370  6EE6               	movwf	postinc1,c
 12185                           
 12186                           ;stkvar	_g @ sp[(-60)+16]
 12187  010372  0ED4               	movlw	-44
 12188  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 12189  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 12190  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 12191  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 12192  01038C  EC66  F0BE         	call	___fleq	;wreg free
 12193  010390  A001               	btfss	btemp& (0+255),0,c
 12194  010392  D039               	goto	l10582
 12195  010394  D0BC               	goto	u9780
 12196  010396                     l10578:
 12197                           
 12198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 12199  010396  0E00               	movlw	0
 12200  010398  6EE6               	movwf	postinc1,c
 12201  01039A  0E00               	movlw	0
 12202  01039C  6EE6               	movwf	postinc1,c
 12203  01039E  0E20               	movlw	32
 12204  0103A0  6EE6               	movwf	postinc1,c
 12205  0103A2  0E41               	movlw	65
 12206  0103A4  6EE6               	movwf	postinc1,c
 12207                           
 12208                           ;stkvar	_u @ sp[(-60)+12]
 12209  0103A6  0ED0               	movlw	-48
 12210  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12211  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12212  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 12213  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 12214  0103C0  EC14  F093         	call	___flmul	;wreg free
 12215                           
 12216                           ;stkvar	_u @ sp[(-56)+12]
 12217  0103C4  0ED4               	movlw	-44
 12218  0103C6  0060  F007  FFE3   	movff	btemp,plusw1
 12219  0103CC  0ED5               	movlw	-43
 12220  0103CE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12221  0103D4  0ED6               	movlw	-42
 12222  0103D6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 12223  0103DC  0ED7               	movlw	-41
 12224  0103DE  0060  F013  FFE3   	movff	btemp+3,plusw1
 12225                           
 12226                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 12227                           ;stkvar	_e @ sp[(-56)+34]
 12228  0103E4  0EEA               	movlw	-22
 12229  0103E6  50E3               	movf	plusw1,w,c
 12230  0103E8  0F01               	addlw	1
 12231  0103EA  6E01               	movwf	btemp^0,c
 12232  0103EC  0EEA               	movlw	-22
 12233  0103EE  0060  F007  FFE3   	movff	btemp,plusw1
 12234  0103F4  6A01               	clrf	btemp^0,c
 12235  0103F6  0EEB               	movlw	-21
 12236  0103F8  50E3               	movf	plusw1,w,c
 12237  0103FA  2001               	addwfc	btemp^0,w,c
 12238  0103FC  6E01               	movwf	btemp^0,c
 12239  0103FE  0EEB               	movlw	-21
 12240  010400  0060  F007  FFE3   	movff	btemp,plusw1
 12241  010406                     l10582:
 12242                           
 12243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 12244  010406  0E00               	movlw	0
 12245  010408  6EE6               	movwf	postinc1,c
 12246  01040A  0E00               	movlw	0
 12247  01040C  6EE6               	movwf	postinc1,c
 12248  01040E  0E20               	movlw	32
 12249  010410  6EE6               	movwf	postinc1,c
 12250  010412  0E41               	movlw	65
 12251  010414  6EE6               	movwf	postinc1,c
 12252                           
 12253                           ;stkvar	_u @ sp[(-60)+12]
 12254  010416  0ED0               	movlw	-48
 12255  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 12256  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 12257  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 12258  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 12259  010430  EC14  F093         	call	___flmul	;wreg free
 12260  010434  0060  F007  FFE6   	movff	btemp,postinc1
 12261  01043A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12262  010440  0060  F00F  FFE6   	movff	btemp+2,postinc1
 12263  010446  0060  F013  FFE6   	movff	btemp+3,postinc1
 12264                           
 12265                           ;stkvar	_g @ sp[(-60)+16]
 12266  01044C  0ED4               	movlw	-44
 12267  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 12268  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 12269  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 12270  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 12271  010466  EC04  F0B6         	call	___flge	;wreg free
 12272  01046A  A001               	btfss	btemp& (0+255),0,c
 12273  01046C  D032               	goto	l10588
 12274  01046E  D793               	goto	l10578
 12275  010470                     l10584:
 12276                           
 12277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 12278  010470  0E00               	movlw	0
 12279  010472  6EE6               	movwf	postinc1,c
 12280  010474  0E00               	movlw	0
 12281  010476  6EE6               	movwf	postinc1,c
 12282  010478  0E20               	movlw	32
 12283  01047A  6EE6               	movwf	postinc1,c
 12284  01047C  0E41               	movlw	65
 12285  01047E  6EE6               	movwf	postinc1,c
 12286                           
 12287                           ;stkvar	_u @ sp[(-60)+12]
 12288  010480  0ED0               	movlw	-48
 12289  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 12290  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 12291  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 12292  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 12293  01049A  ECEF  F09D         	call	___fldiv	;wreg free
 12294                           
 12295                           ;stkvar	_u @ sp[(-56)+12]
 12296  01049E  0ED4               	movlw	-44
 12297  0104A0  0060  F007  FFE3   	movff	btemp,plusw1
 12298  0104A6  0ED5               	movlw	-43
 12299  0104A8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12300  0104AE  0ED6               	movlw	-42
 12301  0104B0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 12302  0104B6  0ED7               	movlw	-41
 12303  0104B8  0060  F013  FFE3   	movff	btemp+3,plusw1
 12304                           
 12305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 12306                           ;stkvar	_e @ sp[(-56)+34]
 12307  0104BE  50E1               	movf	fsr1l,w,c
 12308  0104C0  0FEA               	addlw	-22
 12309  0104C2  6ED9               	movwf	fsr2l,c
 12310  0104C4  50E2               	movf	fsr1h,w,c
 12311  0104C6  6EDA               	movwf	fsr2h,c
 12312  0104C8  0EFF               	movlw	255
 12313  0104CA  22DA               	addwfc	fsr2h,f,c
 12314  0104CC  06DE               	decf	postinc2,f,c
 12315  0104CE  0E00               	movlw	0
 12316  0104D0  5ADD               	subwfb	postdec2,f,c
 12317  0104D2                     l10588:
 12318                           
 12319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 12320                           ;stkvar	_u @ sp[(-56)+12]
 12321  0104D2  0ED4               	movlw	-44
 12322  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12323  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12324  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 12325  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 12326                           
 12327                           ;stkvar	_g @ sp[(-60)+16]
 12328  0104EC  0ED4               	movlw	-44
 12329  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 12330  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 12331  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 12332  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 12333  010506  EC04  F0B6         	call	___flge	;wreg free
 12334  01050A  A001               	btfss	btemp& (0+255),0,c
 12335  01050C  D7B1               	goto	l10584
 12336  01050E                     u9780:
 12337                           
 12338                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 12339                           ;stkvar	_c @ sp[(-56)+-7]
 12340  01050E  0EC1               	movlw	-63
 12341  010510  50E3               	movf	plusw1,w,c
 12342  010512  6EE6               	movwf	postinc1,c
 12343  010514  0E00               	movlw	0
 12344  010516  6EE6               	movwf	postinc1,c
 12345  010518  ECC9  F0C2         	call	_tolower	;wreg free
 12346                           
 12347                           ;stkvar	_mode @ sp[(-56)+54]
 12348  01051C  0EFE               	movlw	-2
 12349  01051E  0060  F007  FFE3   	movff	btemp,plusw1
 12350                           
 12351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 12352                           ;stkvar	_mode @ sp[(-56)+54]
 12353                           ;stkvar	_nmode @ sp[(-56)+55]
 12354  010524  0EFE               	movlw	-2
 12355  010526  006F FF8C  F001    	movff	plusw1,btemp
 12356  01052C  0EFF               	movlw	-1
 12357  01052E  0060  F007  FFE3   	movff	btemp,plusw1
 12358                           
 12359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 12360                           ;stkvar	_mode @ sp[(-56)+54]
 12361  010534  0EFE               	movlw	-2
 12362  010536  006F FF8C  F001    	movff	plusw1,btemp
 12363  01053C  0E67               	movlw	103
 12364  01053E  1801               	xorwf	btemp^0,w,c
 12365  010540  A4D8               	btfss	status,2,c
 12366  010542  D025               	goto	l10606
 12367                           
 12368                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 12369  010544  5026               	movf	_prec^0,w,c
 12370  010546  1027               	iorwf	(_prec+1)^0,w,c
 12371  010548  A4D8               	btfss	status,2,c
 12372  01054A  D004               	goto	l10600
 12373                           
 12374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 12375  01054C  0E00               	movlw	0
 12376  01054E  6E27               	movwf	(_prec+1)^0,c
 12377  010550  0E01               	movlw	1
 12378  010552  6E26               	movwf	_prec^0,c
 12379  010554                     l10600:
 12380                           
 12381                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 12382  010554  BE27               	btfsc	(_prec+1)^0,7,c
 12383  010556  D005               	goto	u9810
 12384  010558  5027               	movf	(_prec+1)^0,w,c
 12385  01055A  E110               	bnz	l10604
 12386  01055C  0426               	decf	_prec^0,w,c
 12387  01055E  B0D8               	btfsc	status,0,c
 12388  010560  D00D               	goto	l10604
 12389  010562                     u9810:
 12390  010562  0E06               	movlw	6
 12391  010564  6E0B               	movwf	(btemp+10)^0,c
 12392  010566  0E00               	movlw	0
 12393  010568  6E0C               	movwf	(btemp+11)^0,c
 12394                           
 12395                           ;stkvar	_p @ sp[(-56)+40]
 12396  01056A  0EF0               	movlw	-16
 12397  01056C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12398  010572  0EF1               	movlw	-15
 12399  010574  0060  F033  FFE3   	movff	btemp+11,plusw1
 12400  01057A  D00C               	goto	l10612
 12401  01057C                     l10604:
 12402                           
 12403                           ;stkvar	_p @ sp[(-56)+40]
 12404  01057C  0EF0               	movlw	-16
 12405  01057E  0060  F09B  FFE3   	movff	_prec,plusw1
 12406  010584  0EF1               	movlw	-15
 12407  010586  0060  F09F  FFE3   	movff	_prec+1,plusw1
 12408  01058C  D003               	goto	l10612
 12409  01058E                     l10606:
 12410                           
 12411                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 12412  01058E  AE27               	btfss	(_prec+1)^0,7,c
 12413  010590  D7F5               	goto	l10604
 12414  010592  D7E7               	goto	u9810
 12415  010594                     l10612:
 12416                           
 12417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 12418                           ;stkvar	_mode @ sp[(-56)+54]
 12419  010594  0EFE               	movlw	-2
 12420  010596  006F FF8C  F001    	movff	plusw1,btemp
 12421  01059C  0E67               	movlw	103
 12422  01059E  1801               	xorwf	btemp^0,w,c
 12423  0105A0  A4D8               	btfss	status,2,c
 12424  0105A2  D02F               	goto	l10622
 12425                           
 12426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 12427                           ;stkvar	_e @ sp[(-56)+34]
 12428  0105A4  0EEB               	movlw	-21
 12429  0105A6  AEE3               	btfss	plusw1,7,c
 12430  0105A8  D00E               	goto	u9840
 12431  0105AA  0EEA               	movlw	-22
 12432  0105AC  006F FF8C  F001    	movff	plusw1,btemp
 12433  0105B2  0EFC               	movlw	252
 12434  0105B4  5E01               	subwf	btemp^0,f,c
 12435  0105B6  0EEB               	movlw	-21
 12436  0105B8  006F FF8C  F001    	movff	plusw1,btemp
 12437  0105BE  0EFF               	movlw	255
 12438  0105C0  5A01               	subwfb	btemp^0,f,c
 12439  0105C2  A0D8               	btfss	status,0,c
 12440  0105C4  D018               	goto	l10620
 12441  0105C6                     u9840:
 12442                           
 12443                           ;stkvar	_e @ sp[(-56)+34]
 12444                           ;stkvar	_p @ sp[(-56)+40]
 12445  0105C6  0EF0               	movlw	-16
 12446  0105C8  50E3               	movf	plusw1,w,c
 12447  0105CA  0FFF               	addlw	255
 12448  0105CC  6E0B               	movwf	(btemp+10)^0,c
 12449  0105CE  0EF1               	movlw	-15
 12450  0105D0  006F FF8C  F00C    	movff	plusw1,btemp+11
 12451  0105D6  0EFF               	movlw	255
 12452  0105D8  220C               	addwfc	(btemp+11)^0,f,c
 12453  0105DA  0EEA               	movlw	-22
 12454  0105DC  50E3               	movf	plusw1,w,c
 12455  0105DE  5C0B               	subwf	(btemp+10)^0,w,c
 12456  0105E0  500C               	movf	(btemp+11)^0,w,c
 12457  0105E2  0A80               	xorlw	128
 12458  0105E4  6E01               	movwf	btemp^0,c
 12459  0105E6  0EEB               	movlw	-21
 12460  0105E8  50E3               	movf	plusw1,w,c
 12461  0105EA  0A80               	xorlw	128
 12462  0105EC  5801               	subwfb	btemp^0,w,c
 12463  0105EE  A0D8               	btfss	status,0,c
 12464  0105F0  D002               	goto	l10620
 12465                           
 12466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 12467  0105F2  0E66               	movlw	102
 12468  0105F4  D001               	goto	L10
 12469  0105F6                     l10620:
 12470                           
 12471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 12472  0105F6  0E65               	movlw	101
 12473  0105F8                     L10:
 12474  0105F8  6E0C               	movwf	(btemp+11)^0,c
 12475                           
 12476                           ;stkvar	_nmode @ sp[(-56)+55]
 12477  0105FA  0EFF               	movlw	-1
 12478  0105FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 12479  010602                     l10622:
 12480                           
 12481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 12482                           ;stkvar	_p @ sp[(-56)+40]
 12483                           ;stkvar	_m @ sp[(-56)+48]
 12484  010602  0EF0               	movlw	-16
 12485  010604  006F FF8C  F001    	movff	plusw1,btemp
 12486  01060A  0EF8               	movlw	-8
 12487  01060C  0060  F007  FFE3   	movff	btemp,plusw1
 12488  010612  0EF1               	movlw	-15
 12489  010614  006F FF8C  F001    	movff	plusw1,btemp
 12490  01061A  0EF9               	movlw	-7
 12491  01061C  0060  F007  FFE3   	movff	btemp,plusw1
 12492                           
 12493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 12494                           ;stkvar	_mode @ sp[(-56)+54]
 12495  010622  0EFE               	movlw	-2
 12496  010624  006F FF8C  F001    	movff	plusw1,btemp
 12497  01062A  0E67               	movlw	103
 12498  01062C  1801               	xorwf	btemp^0,w,c
 12499  01062E  A4D8               	btfss	status,2,c
 12500  010630  D00B               	goto	u9880
 12501                           
 12502                           ;stkvar	_nmode @ sp[(-56)+55]
 12503  010632  0EFF               	movlw	-1
 12504  010634  006F FF8C  F001    	movff	plusw1,btemp
 12505  01063A  0E66               	movlw	102
 12506  01063C  1801               	xorwf	btemp^0,w,c
 12507  01063E  A4D8               	btfss	status,2,c
 12508  010640  D014               	goto	l2102
 12509                           
 12510                           ;stkvar	_e @ sp[(-56)+34]
 12511  010642  0EEB               	movlw	-21
 12512  010644  AEE3               	btfss	plusw1,7,c
 12513  010646  D011               	goto	l2102
 12514  010648                     u9880:
 12515                           
 12516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 12517                           ;stkvar	_m @ sp[(-56)+48]
 12518  010648  0EF8               	movlw	-8
 12519  01064A  50E3               	movf	plusw1,w,c
 12520  01064C  0F01               	addlw	1
 12521  01064E  6E01               	movwf	btemp^0,c
 12522  010650  0EF8               	movlw	-8
 12523  010652  0060  F007  FFE3   	movff	btemp,plusw1
 12524  010658  6A01               	clrf	btemp^0,c
 12525  01065A  0EF9               	movlw	-7
 12526  01065C  50E3               	movf	plusw1,w,c
 12527  01065E  2001               	addwfc	btemp^0,w,c
 12528  010660  6E01               	movwf	btemp^0,c
 12529  010662  0EF9               	movlw	-7
 12530  010664  0060  F007  FFE3   	movff	btemp,plusw1
 12531  01066A                     l2102:
 12532                           
 12533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 12534                           ;stkvar	_nmode @ sp[(-56)+55]
 12535  01066A  0EFF               	movlw	-1
 12536  01066C  006F FF8C  F001    	movff	plusw1,btemp
 12537  010672  0E66               	movlw	102
 12538  010674  1801               	xorwf	btemp^0,w,c
 12539  010676  A4D8               	btfss	status,2,c
 12540  010678  D03B               	goto	l10642
 12541                           
 12542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 12543                           ;stkvar	_e @ sp[(-56)+34]
 12544  01067A  0EEB               	movlw	-21
 12545  01067C  AEE3               	btfss	plusw1,7,c
 12546  01067E  D01C               	goto	l10638
 12547                           
 12548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 12549  010680  0E00               	movlw	0
 12550  010682  6E09               	movwf	(btemp+8)^0,c
 12551  010684  0E00               	movlw	0
 12552  010686  6E0A               	movwf	(btemp+9)^0,c
 12553  010688  0E80               	movlw	128
 12554  01068A  6E0B               	movwf	(btemp+10)^0,c
 12555  01068C  0E3F               	movlw	63
 12556  01068E  6E0C               	movwf	(btemp+11)^0,c
 12557                           
 12558                           ;stkvar	_u @ sp[(-56)+12]
 12559  010690  0ED4               	movlw	-44
 12560  010692  0060  F027  FFE3   	movff	btemp+8,plusw1
 12561  010698  0ED5               	movlw	-43
 12562  01069A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12563  0106A0  0ED6               	movlw	-42
 12564  0106A2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12565  0106A8  0ED7               	movlw	-41
 12566  0106AA  0060  F033  FFE3   	movff	btemp+11,plusw1
 12567                           
 12568                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 12569                           ;stkvar	_e @ sp[(-56)+34]
 12570  0106B0  0EEA               	movlw	-22
 12571  0106B2  6AE3               	clrf	plusw1,c
 12572  0106B4  0EEB               	movlw	-21
 12573  0106B6  6AE3               	clrf	plusw1,c
 12574  0106B8                     l10638:
 12575                           
 12576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 12577                           ;stkvar	_mode @ sp[(-56)+54]
 12578  0106B8  0EFE               	movlw	-2
 12579  0106BA  006F FF8C  F001    	movff	plusw1,btemp
 12580  0106C0  0E67               	movlw	103
 12581  0106C2  1801               	xorwf	btemp^0,w,c
 12582  0106C4  B4D8               	btfsc	status,2,c
 12583  0106C6  D014               	goto	l10642
 12584                           
 12585                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 12586                           ;stkvar	_e @ sp[(-56)+34]
 12587                           ;stkvar	_m @ sp[(-56)+48]
 12588  0106C8  0EF8               	movlw	-8
 12589  0106CA  50E3               	movf	plusw1,w,c
 12590  0106CC  6E01               	movwf	btemp^0,c
 12591  0106CE  0EEA               	movlw	-22
 12592  0106D0  50E3               	movf	plusw1,w,c
 12593  0106D2  2601               	addwf	btemp^0,f,c
 12594  0106D4  0EF8               	movlw	-8
 12595  0106D6  0060  F007  FFE3   	movff	btemp,plusw1
 12596  0106DC  0EF9               	movlw	-7
 12597  0106DE  50E3               	movf	plusw1,w,c
 12598  0106E0  6E01               	movwf	btemp^0,c
 12599  0106E2  0EEB               	movlw	-21
 12600  0106E4  50E3               	movf	plusw1,w,c
 12601  0106E6  2201               	addwfc	btemp^0,f,c
 12602  0106E8  0EF9               	movlw	-7
 12603  0106EA  0060  F007  FFE3   	movff	btemp,plusw1
 12604  0106F0                     l10642:
 12605                           
 12606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 12607                           ;stkvar	_i @ sp[(-56)+36]
 12608  0106F0  0EEC               	movlw	-20
 12609  0106F2  6AE3               	clrf	plusw1,c
 12610  0106F4  0EED               	movlw	-19
 12611  0106F6  6AE3               	clrf	plusw1,c
 12612                           
 12613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 12614                           ;stkvar	_g @ sp[(-56)+16]
 12615  0106F8  0ED8               	movlw	-40
 12616  0106FA  006F FF8C  F009    	movff	plusw1,btemp+8
 12617  010700  0ED9               	movlw	-39
 12618  010702  006F FF8C  F00A    	movff	plusw1,btemp+9
 12619  010708  0EDA               	movlw	-38
 12620  01070A  006F FF8C  F00B    	movff	plusw1,btemp+10
 12621  010710  0EDB               	movlw	-37
 12622  010712  006F FF8C  F00C    	movff	plusw1,btemp+11
 12623                           
 12624                           ;stkvar	_h @ sp[(-56)+24]
 12625  010718  0EE0               	movlw	-32
 12626  01071A  0060  F027  FFE3   	movff	btemp+8,plusw1
 12627  010720  0EE1               	movlw	-31
 12628  010722  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12629  010728  0EE2               	movlw	-30
 12630  01072A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12631  010730  0EE3               	movlw	-29
 12632  010732  0060  F033  FFE3   	movff	btemp+11,plusw1
 12633                           
 12634                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 12635                           ;stkvar	_u @ sp[(-56)+12]
 12636  010738  0ED4               	movlw	-44
 12637  01073A  006F FF8C  F009    	movff	plusw1,btemp+8
 12638  010740  0ED5               	movlw	-43
 12639  010742  006F FF8C  F00A    	movff	plusw1,btemp+9
 12640  010748  0ED6               	movlw	-42
 12641  01074A  006F FF8C  F00B    	movff	plusw1,btemp+10
 12642  010750  0ED7               	movlw	-41
 12643  010752  006F FF8C  F00C    	movff	plusw1,btemp+11
 12644                           
 12645                           ;stkvar	_ou @ sp[(-56)+28]
 12646  010758  0EE4               	movlw	-28
 12647  01075A  0060  F027  FFE3   	movff	btemp+8,plusw1
 12648  010760  0EE5               	movlw	-27
 12649  010762  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12650  010768  0EE6               	movlw	-26
 12651  01076A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12652  010770  0EE7               	movlw	-25
 12653  010772  0060  F033  FFE3   	movff	btemp+11,plusw1
 12654                           
 12655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12656  010778  D0D6               	goto	l10658
 12657  01077A                     l10648:
 12658                           
 12659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 12660                           ;stkvar	_u @ sp[(-56)+12]
 12661  01077A  0ED4               	movlw	-44
 12662  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 12663  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 12664  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 12665  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 12666                           
 12667                           ;stkvar	_h @ sp[(-60)+24]
 12668  010794  0EDC               	movlw	-36
 12669  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 12670  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 12671  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12672  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12673  0107AE  ECEF  F09D         	call	___fldiv	;wreg free
 12674  0107B2  0060  F007  FFE6   	movff	btemp,postinc1
 12675  0107B8  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12676  0107BE  0060  F00F  FFE6   	movff	btemp+2,postinc1
 12677  0107C4  0060  F013  FFE6   	movff	btemp+3,postinc1
 12678  0107CA  EC1F  F0A7         	call	_floorf	;wreg free
 12679                           
 12680                           ;stkvar	_l @ sp[(-56)+20]
 12681  0107CE  0EDC               	movlw	-36
 12682  0107D0  0060  F007  FFE3   	movff	btemp,plusw1
 12683  0107D6  0EDD               	movlw	-35
 12684  0107D8  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12685  0107DE  0EDE               	movlw	-34
 12686  0107E0  0060  F00F  FFE3   	movff	btemp+2,plusw1
 12687  0107E6  0EDF               	movlw	-33
 12688  0107E8  0060  F013  FFE3   	movff	btemp+3,plusw1
 12689                           
 12690                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 12691                           ;stkvar	_l @ sp[(-56)+20]
 12692  0107EE  0EDC               	movlw	-36
 12693  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12694  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12695  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12696  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12697  010808  EC4B  F0B5         	call	___fltol	;wreg free
 12698  01080C  0060  F004  F00B   	movff	btemp,btemp+10
 12699  010812  0060  F008  F00C   	movff	btemp+1,btemp+11
 12700                           
 12701                           ;stkvar	_d @ sp[(-56)+44]
 12702  010818  0EF4               	movlw	-12
 12703  01081A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12704  010820  0EF5               	movlw	-11
 12705  010822  0060  F033  FFE3   	movff	btemp+11,plusw1
 12706                           
 12707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12708                           ;stkvar	_u @ sp[(-56)+12]
 12709  010828  0ED4               	movlw	-44
 12710  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12711  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12712  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12713  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12714                           
 12715                           ;stkvar	_l @ sp[(-60)+20]
 12716  010842  0ED8               	movlw	-40
 12717  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12718  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12719  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12720  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12721  01085C  EC14  F093         	call	___flmul	;wreg free
 12722  010860  0060  F007  FFE6   	movff	btemp,postinc1
 12723  010866  0060  F00B  FFE6   	movff	btemp+1,postinc1
 12724  01086C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 12725  010872  0060  F013  FFE6   	movff	btemp+3,postinc1
 12726                           
 12727                           ;stkvar	_h @ sp[(-60)+24]
 12728  010878  0EDC               	movlw	-36
 12729  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12730  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12731  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12732  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12733  010892  EC7E  F0C6         	call	___flsub	;wreg free
 12734                           
 12735                           ;stkvar	_h @ sp[(-56)+24]
 12736  010896  0EE0               	movlw	-32
 12737  010898  0060  F007  FFE3   	movff	btemp,plusw1
 12738  01089E  0EE1               	movlw	-31
 12739  0108A0  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12740  0108A6  0EE2               	movlw	-30
 12741  0108A8  0060  F00F  FFE3   	movff	btemp+2,plusw1
 12742  0108AE  0EE3               	movlw	-29
 12743  0108B0  0060  F013  FFE3   	movff	btemp+3,plusw1
 12744                           
 12745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12746  0108B6  0E00               	movlw	0
 12747  0108B8  6EE6               	movwf	postinc1,c
 12748  0108BA  0E00               	movlw	0
 12749  0108BC  6EE6               	movwf	postinc1,c
 12750  0108BE  0E20               	movlw	32
 12751  0108C0  6EE6               	movwf	postinc1,c
 12752  0108C2  0E41               	movlw	65
 12753  0108C4  6EE6               	movwf	postinc1,c
 12754                           
 12755                           ;stkvar	_u @ sp[(-60)+12]
 12756  0108C6  0ED0               	movlw	-48
 12757  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12758  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12759  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12760  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12761  0108E0  ECEF  F09D         	call	___fldiv	;wreg free
 12762                           
 12763                           ;stkvar	_u @ sp[(-56)+12]
 12764  0108E4  0ED4               	movlw	-44
 12765  0108E6  0060  F007  FFE3   	movff	btemp,plusw1
 12766  0108EC  0ED5               	movlw	-43
 12767  0108EE  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12768  0108F4  0ED6               	movlw	-42
 12769  0108F6  0060  F00F  FFE3   	movff	btemp+2,plusw1
 12770  0108FC  0ED7               	movlw	-41
 12771  0108FE  0060  F013  FFE3   	movff	btemp+3,plusw1
 12772                           
 12773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12774                           ;stkvar	_i @ sp[(-56)+36]
 12775  010904  0EEC               	movlw	-20
 12776  010906  50E3               	movf	plusw1,w,c
 12777  010908  0F01               	addlw	1
 12778  01090A  6E01               	movwf	btemp^0,c
 12779  01090C  0EEC               	movlw	-20
 12780  01090E  0060  F007  FFE3   	movff	btemp,plusw1
 12781  010914  6A01               	clrf	btemp^0,c
 12782  010916  0EED               	movlw	-19
 12783  010918  50E3               	movf	plusw1,w,c
 12784  01091A  2001               	addwfc	btemp^0,w,c
 12785  01091C  6E01               	movwf	btemp^0,c
 12786  01091E  0EED               	movlw	-19
 12787  010920  0060  F007  FFE3   	movff	btemp,plusw1
 12788  010926                     l10658:
 12789                           
 12790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12791                           ;stkvar	_m @ sp[(-56)+48]
 12792                           ;stkvar	_i @ sp[(-56)+36]
 12793  010926  50E1               	movf	fsr1l,w,c
 12794  010928  0FEC               	addlw	-20
 12795  01092A  6ED9               	movwf	fsr2l,c
 12796  01092C  50E2               	movf	fsr1h,w,c
 12797  01092E  6EDA               	movwf	fsr2h,c
 12798  010930  0EFF               	movlw	255
 12799  010932  22DA               	addwfc	fsr2h,f,c
 12800  010934  0EF8               	movlw	-8
 12801  010936  50E3               	movf	plusw1,w,c
 12802  010938  5CDE               	subwf	postinc2,w,c
 12803  01093A  50DE               	movf	postinc2,w,c
 12804  01093C  0A80               	xorlw	128
 12805  01093E  6E01               	movwf	btemp^0,c
 12806  010940  0EF9               	movlw	-7
 12807  010942  50E3               	movf	plusw1,w,c
 12808  010944  0A80               	xorlw	128
 12809  010946  5801               	subwfb	btemp^0,w,c
 12810  010948  A0D8               	btfss	status,0,c
 12811  01094A  D717               	goto	l10648
 12812                           
 12813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12814  01094C  0E00               	movlw	0
 12815  01094E  6EE6               	movwf	postinc1,c
 12816  010950  0E00               	movlw	0
 12817  010952  6EE6               	movwf	postinc1,c
 12818  010954  0EA0               	movlw	160
 12819  010956  6EE6               	movwf	postinc1,c
 12820  010958  0E40               	movlw	64
 12821  01095A  6EE6               	movwf	postinc1,c
 12822                           
 12823                           ;stkvar	_u @ sp[(-60)+12]
 12824  01095C  0ED0               	movlw	-48
 12825  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12826  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12827  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12828  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12829  010976  EC14  F093         	call	___flmul	;wreg free
 12830                           
 12831                           ;stkvar	_l @ sp[(-56)+20]
 12832  01097A  0EDC               	movlw	-36
 12833  01097C  0060  F007  FFE3   	movff	btemp,plusw1
 12834  010982  0EDD               	movlw	-35
 12835  010984  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12836  01098A  0EDE               	movlw	-34
 12837  01098C  0060  F00F  FFE3   	movff	btemp+2,plusw1
 12838  010992  0EDF               	movlw	-33
 12839  010994  0060  F013  FFE3   	movff	btemp+3,plusw1
 12840                           
 12841                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12842                           ;stkvar	_l @ sp[(-56)+20]
 12843  01099A  0EDC               	movlw	-36
 12844  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12845  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12846  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12847  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12848                           
 12849                           ;stkvar	_h @ sp[(-60)+24]
 12850  0109B4  0EDC               	movlw	-36
 12851  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12852  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12853  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12854  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12855  0109CE  EC04  F0B6         	call	___flge	;wreg free
 12856  0109D2  A001               	btfss	btemp& (0+255),0,c
 12857  0109D4  D021               	goto	u9950
 12858                           
 12859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12860                           ;stkvar	_l @ sp[(-56)+20]
 12861                           
 12862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12863                           
 12864                           ;stkvar	_l @ sp[(-56)+20]
 12865                           
 12866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12867  0109D6  0EDC               	movlw	-36
 12868  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12869  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12870  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12871  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12872                           
 12873                           ;stkvar	_h @ sp[(-60)+24]
 12874  0109F0  0EDC               	movlw	-36
 12875  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12876  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12877  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12878  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12879  010A0A  EC66  F0BE         	call	___fleq	;wreg free
 12880  010A0E  A001               	btfss	btemp& (0+255),0,c
 12881  010A10  D01B               	goto	l10672
 12882                           
 12883                           ;stkvar	_d @ sp[(-56)+44]
 12884  010A12  0EF4               	movlw	-12
 12885  010A14  B0E3               	btfsc	plusw1,0,c
 12886  010A16  D018               	goto	l10672
 12887  010A18                     u9950:
 12888                           
 12889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12890  010A18  0E00               	movlw	0
 12891  010A1A  6E09               	movwf	(btemp+8)^0,c
 12892  010A1C  0E00               	movlw	0
 12893  010A1E  6E0A               	movwf	(btemp+9)^0,c
 12894  010A20  0E00               	movlw	0
 12895  010A22  6E0B               	movwf	(btemp+10)^0,c
 12896  010A24  0E00               	movlw	0
 12897  010A26  6E0C               	movwf	(btemp+11)^0,c
 12898                           
 12899                           ;stkvar	_l @ sp[(-56)+20]
 12900  010A28  0EDC               	movlw	-36
 12901  010A2A  0060  F027  FFE3   	movff	btemp+8,plusw1
 12902  010A30  0EDD               	movlw	-35
 12903  010A32  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12904  010A38  0EDE               	movlw	-34
 12905  010A3A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12906  010A40  0EDF               	movlw	-33
 12907  010A42  0060  F033  FFE3   	movff	btemp+11,plusw1
 12908  010A48                     l10672:
 12909                           
 12910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12911                           ;stkvar	_l @ sp[(-56)+20]
 12912  010A48  0EDC               	movlw	-36
 12913  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12914  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12915  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12916  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12917                           
 12918                           ;stkvar	_g @ sp[(-60)+16]
 12919  010A62  0ED4               	movlw	-44
 12920  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12921  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12922  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12923  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12924  010A7C  EC29  F097         	call	___fladd	;wreg free
 12925                           
 12926                           ;stkvar	_h @ sp[(-56)+24]
 12927  010A80  0EE0               	movlw	-32
 12928  010A82  0060  F007  FFE3   	movff	btemp,plusw1
 12929  010A88  0EE1               	movlw	-31
 12930  010A8A  0060  F00B  FFE3   	movff	btemp+1,plusw1
 12931  010A90  0EE2               	movlw	-30
 12932  010A92  0060  F00F  FFE3   	movff	btemp+2,plusw1
 12933  010A98  0EE3               	movlw	-29
 12934  010A9A  0060  F013  FFE3   	movff	btemp+3,plusw1
 12935                           
 12936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12937                           ;stkvar	_ou @ sp[(-56)+28]
 12938  010AA0  0EE4               	movlw	-28
 12939  010AA2  006F FF8C  F009    	movff	plusw1,btemp+8
 12940  010AA8  0EE5               	movlw	-27
 12941  010AAA  006F FF8C  F00A    	movff	plusw1,btemp+9
 12942  010AB0  0EE6               	movlw	-26
 12943  010AB2  006F FF8C  F00B    	movff	plusw1,btemp+10
 12944  010AB8  0EE7               	movlw	-25
 12945  010ABA  006F FF8C  F00C    	movff	plusw1,btemp+11
 12946                           
 12947                           ;stkvar	_u @ sp[(-56)+12]
 12948  010AC0  0ED4               	movlw	-44
 12949  010AC2  0060  F027  FFE3   	movff	btemp+8,plusw1
 12950  010AC8  0ED5               	movlw	-43
 12951  010ACA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 12952  010AD0  0ED6               	movlw	-42
 12953  010AD2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 12954  010AD8  0ED7               	movlw	-41
 12955  010ADA  0060  F033  FFE3   	movff	btemp+11,plusw1
 12956                           
 12957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12958                           ;stkvar	_nmode @ sp[(-56)+55]
 12959  010AE0  0EFF               	movlw	-1
 12960  010AE2  006F FF8C  F001    	movff	plusw1,btemp
 12961  010AE8  0E65               	movlw	101
 12962  010AEA  1801               	xorwf	btemp^0,w,c
 12963  010AEC  B4D8               	btfsc	status,2,c
 12964  010AEE  D011               	goto	l10680
 12965                           
 12966                           ;stkvar	_e @ sp[(-56)+34]
 12967                           ;stkvar	_ne @ sp[(-56)+46]
 12968  010AF0  0EEA               	movlw	-22
 12969  010AF2  006F FF8C  F001    	movff	plusw1,btemp
 12970  010AF8  0EF6               	movlw	-10
 12971  010AFA  0060  F007  FFE3   	movff	btemp,plusw1
 12972  010B00  0EEB               	movlw	-21
 12973  010B02  006F FF8C  F001    	movff	plusw1,btemp
 12974  010B08  0EF7               	movlw	-9
 12975  010B0A  0060  F007  FFE3   	movff	btemp,plusw1
 12976  010B10  D004               	goto	l2117
 12977  010B12                     l10680:
 12978                           
 12979                           ;stkvar	_ne @ sp[(-56)+46]
 12980  010B12  0EF6               	movlw	-10
 12981  010B14  6AE3               	clrf	plusw1,c
 12982  010B16  0EF7               	movlw	-9
 12983  010B18  6AE3               	clrf	plusw1,c
 12984  010B1A                     l2117:
 12985                           
 12986                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12987                           ;stkvar	_pp @ sp[(-56)+50]
 12988  010B1A  0EFA               	movlw	-6
 12989  010B1C  6AE3               	clrf	plusw1,c
 12990  010B1E  0EFB               	movlw	-5
 12991  010B20  6AE3               	clrf	plusw1,c
 12992                           
 12993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12994                           ;stkvar	_t @ sp[(-56)+52]
 12995  010B22  0EFC               	movlw	-4
 12996  010B24  6AE3               	clrf	plusw1,c
 12997  010B26  0EFD               	movlw	-3
 12998  010B28  6AE3               	clrf	plusw1,c
 12999                           
 13000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 13001                           ;stkvar	_i @ sp[(-56)+36]
 13002  010B2A  0EEC               	movlw	-20
 13003  010B2C  6AE3               	clrf	plusw1,c
 13004  010B2E  0EED               	movlw	-19
 13005  010B30  6AE3               	clrf	plusw1,c
 13006                           
 13007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 13008  010B32  D1B7               	goto	l10732
 13009  010B34                     l10682:
 13010                           
 13011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 13012                           ;stkvar	_u @ sp[(-56)+12]
 13013  010B34  0ED4               	movlw	-44
 13014  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 13015  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 13016  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 13017  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 13018                           
 13019                           ;stkvar	_h @ sp[(-60)+24]
 13020  010B4E  0EDC               	movlw	-36
 13021  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 13022  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 13023  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 13024  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 13025  010B68  ECEF  F09D         	call	___fldiv	;wreg free
 13026  010B6C  0060  F007  FFE6   	movff	btemp,postinc1
 13027  010B72  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13028  010B78  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13029  010B7E  0060  F013  FFE6   	movff	btemp+3,postinc1
 13030  010B84  EC1F  F0A7         	call	_floorf	;wreg free
 13031                           
 13032                           ;stkvar	_l @ sp[(-56)+20]
 13033  010B88  0EDC               	movlw	-36
 13034  010B8A  0060  F007  FFE3   	movff	btemp,plusw1
 13035  010B90  0EDD               	movlw	-35
 13036  010B92  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13037  010B98  0EDE               	movlw	-34
 13038  010B9A  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13039  010BA0  0EDF               	movlw	-33
 13040  010BA2  0060  F013  FFE3   	movff	btemp+3,plusw1
 13041                           
 13042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 13043                           ;stkvar	_l @ sp[(-56)+20]
 13044  010BA8  0EDC               	movlw	-36
 13045  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 13046  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 13047  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 13048  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 13049  010BC2  EC4B  F0B5         	call	___fltol	;wreg free
 13050  010BC6  0060  F004  F00B   	movff	btemp,btemp+10
 13051  010BCC  0060  F008  F00C   	movff	btemp+1,btemp+11
 13052                           
 13053                           ;stkvar	_d @ sp[(-56)+44]
 13054  010BD2  0EF4               	movlw	-12
 13055  010BD4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13056  010BDA  0EF5               	movlw	-11
 13057  010BDC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13058                           
 13059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 13060  010BE2  B828               	btfsc	_flags^0,4,c
 13061  010BE4  D026               	goto	l10696
 13062                           
 13063                           ;stkvar	_d @ sp[(-56)+44]
 13064  010BE6  0EF4               	movlw	-12
 13065  010BE8  006F FF8C  F001    	movff	plusw1,btemp
 13066  010BEE  0EF5               	movlw	-11
 13067  010BF0  50E3               	movf	plusw1,w,c
 13068  010BF2  1001               	iorwf	btemp^0,w,c
 13069  010BF4  A4D8               	btfss	status,2,c
 13070  010BF6  D01D               	goto	l10696
 13071                           
 13072                           ;stkvar	_mode @ sp[(-56)+54]
 13073  010BF8  0EFE               	movlw	-2
 13074  010BFA  006F FF8C  F001    	movff	plusw1,btemp
 13075  010C00  0E67               	movlw	103
 13076  010C02  1801               	xorwf	btemp^0,w,c
 13077  010C04  A4D8               	btfss	status,2,c
 13078  010C06  D015               	goto	l10696
 13079                           
 13080                           ;stkvar	_ne @ sp[(-56)+46]
 13081  010C08  0EF7               	movlw	-9
 13082  010C0A  AEE3               	btfss	plusw1,7,c
 13083  010C0C  D012               	goto	l10696
 13084                           
 13085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 13086                           ;stkvar	_t @ sp[(-56)+52]
 13087  010C0E  0EFC               	movlw	-4
 13088  010C10  50E3               	movf	plusw1,w,c
 13089  010C12  0F01               	addlw	1
 13090  010C14  6E01               	movwf	btemp^0,c
 13091  010C16  0EFC               	movlw	-4
 13092  010C18  0060  F007  FFE3   	movff	btemp,plusw1
 13093  010C1E  6A01               	clrf	btemp^0,c
 13094  010C20  0EFD               	movlw	-3
 13095  010C22  50E3               	movf	plusw1,w,c
 13096  010C24  2001               	addwfc	btemp^0,w,c
 13097  010C26  6E01               	movwf	btemp^0,c
 13098  010C28  0EFD               	movlw	-3
 13099  010C2A  0060  F007  FFE3   	movff	btemp,plusw1
 13100                           
 13101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 13102  010C30  D0AF               	goto	l10724
 13103  010C32                     l10696:
 13104                           
 13105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 13106                           ;stkvar	_pp @ sp[(-56)+50]
 13107  010C32  0EFA               	movlw	-6
 13108  010C34  006F FF8C  F001    	movff	plusw1,btemp
 13109  010C3A  0EFB               	movlw	-5
 13110  010C3C  50E3               	movf	plusw1,w,c
 13111  010C3E  1001               	iorwf	btemp^0,w,c
 13112  010C40  A4D8               	btfss	status,2,c
 13113  010C42  D070               	goto	l10716
 13114                           
 13115                           ;stkvar	_ne @ sp[(-56)+46]
 13116  010C44  0EF7               	movlw	-9
 13117  010C46  AEE3               	btfss	plusw1,7,c
 13118  010C48  D06D               	goto	l10716
 13119                           
 13120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 13121                           ;stkvar	_n @ sp[(-56)+32]
 13122  010C4A  0EE8               	movlw	-24
 13123  010C4C  006F FF8C  F00B    	movff	plusw1,btemp+10
 13124  010C52  0EE9               	movlw	-23
 13125  010C54  006F FF8C  F00C    	movff	plusw1,btemp+11
 13126  010C5A  0E94               	movlw	low _dbuf
 13127  010C5C  240B               	addwf	(btemp+10)^0,w,c
 13128  010C5E  6ED9               	movwf	fsr2l,c
 13129  010C60  0E03               	movlw	high _dbuf
 13130  010C62  200C               	addwfc	(btemp+11)^0,w,c
 13131  010C64  6EDA               	movwf	fsr2h,c
 13132  010C66  0E2E               	movlw	46
 13133  010C68  6EDF               	movwf	indf2,c
 13134                           
 13135                           ;stkvar	_n @ sp[(-56)+32]
 13136  010C6A  0EE8               	movlw	-24
 13137  010C6C  50E3               	movf	plusw1,w,c
 13138  010C6E  0F01               	addlw	1
 13139  010C70  6E01               	movwf	btemp^0,c
 13140  010C72  0EE8               	movlw	-24
 13141  010C74  0060  F007  FFE3   	movff	btemp,plusw1
 13142  010C7A  6A01               	clrf	btemp^0,c
 13143  010C7C  0EE9               	movlw	-23
 13144  010C7E  50E3               	movf	plusw1,w,c
 13145  010C80  2001               	addwfc	btemp^0,w,c
 13146  010C82  6E01               	movwf	btemp^0,c
 13147  010C84  0EE9               	movlw	-23
 13148  010C86  0060  F007  FFE3   	movff	btemp,plusw1
 13149                           
 13150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 13151                           ;stkvar	_w @ sp[(-56)+38]
 13152  010C8C  50E1               	movf	fsr1l,w,c
 13153  010C8E  0FEE               	addlw	-18
 13154  010C90  6ED9               	movwf	fsr2l,c
 13155  010C92  50E2               	movf	fsr1h,w,c
 13156  010C94  6EDA               	movwf	fsr2h,c
 13157  010C96  0EFF               	movlw	255
 13158  010C98  22DA               	addwfc	fsr2h,f,c
 13159  010C9A  06DE               	decf	postinc2,f,c
 13160  010C9C  0E00               	movlw	0
 13161  010C9E  5ADD               	subwfb	postdec2,f,c
 13162                           
 13163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 13164  010CA0  0E01               	movlw	1
 13165  010CA2  6E0B               	movwf	(btemp+10)^0,c
 13166  010CA4  0E00               	movlw	0
 13167  010CA6  6E0C               	movwf	(btemp+11)^0,c
 13168                           
 13169                           ;stkvar	_pp @ sp[(-56)+50]
 13170  010CA8  0EFA               	movlw	-6
 13171  010CAA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13172  010CB0  0EFB               	movlw	-5
 13173  010CB2  0060  F033  FFE3   	movff	btemp+11,plusw1
 13174  010CB8  D035               	goto	l10716
 13175  010CBA                     l10708:
 13176                           
 13177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 13178                           ;stkvar	_n @ sp[(-56)+32]
 13179  010CBA  0EE8               	movlw	-24
 13180  010CBC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13181  010CC2  0EE9               	movlw	-23
 13182  010CC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13183  010CCA  0E94               	movlw	low _dbuf
 13184  010CCC  240B               	addwf	(btemp+10)^0,w,c
 13185  010CCE  6ED9               	movwf	fsr2l,c
 13186  010CD0  0E03               	movlw	high _dbuf
 13187  010CD2  200C               	addwfc	(btemp+11)^0,w,c
 13188  010CD4  6EDA               	movwf	fsr2h,c
 13189  010CD6  0E30               	movlw	48
 13190  010CD8  6EDF               	movwf	indf2,c
 13191                           
 13192                           ;stkvar	_n @ sp[(-56)+32]
 13193  010CDA  0EE8               	movlw	-24
 13194  010CDC  50E3               	movf	plusw1,w,c
 13195  010CDE  0F01               	addlw	1
 13196  010CE0  6E01               	movwf	btemp^0,c
 13197  010CE2  0EE8               	movlw	-24
 13198  010CE4  0060  F007  FFE3   	movff	btemp,plusw1
 13199  010CEA  6A01               	clrf	btemp^0,c
 13200  010CEC  0EE9               	movlw	-23
 13201  010CEE  50E3               	movf	plusw1,w,c
 13202  010CF0  2001               	addwfc	btemp^0,w,c
 13203  010CF2  6E01               	movwf	btemp^0,c
 13204  010CF4  0EE9               	movlw	-23
 13205  010CF6  0060  F007  FFE3   	movff	btemp,plusw1
 13206                           
 13207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 13208                           ;stkvar	_w @ sp[(-56)+38]
 13209  010CFC  50E1               	movf	fsr1l,w,c
 13210  010CFE  0FEE               	addlw	-18
 13211  010D00  6ED9               	movwf	fsr2l,c
 13212  010D02  50E2               	movf	fsr1h,w,c
 13213  010D04  6EDA               	movwf	fsr2h,c
 13214  010D06  0EFF               	movlw	255
 13215  010D08  22DA               	addwfc	fsr2h,f,c
 13216  010D0A  06DE               	decf	postinc2,f,c
 13217  010D0C  0E00               	movlw	0
 13218  010D0E  5ADD               	subwfb	postdec2,f,c
 13219                           
 13220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 13221                           ;stkvar	_t @ sp[(-56)+52]
 13222  010D10  50E1               	movf	fsr1l,w,c
 13223  010D12  0FFC               	addlw	-4
 13224  010D14  6ED9               	movwf	fsr2l,c
 13225  010D16  50E2               	movf	fsr1h,w,c
 13226  010D18  6EDA               	movwf	fsr2h,c
 13227  010D1A  0EFF               	movlw	255
 13228  010D1C  22DA               	addwfc	fsr2h,f,c
 13229  010D1E  06DE               	decf	postinc2,f,c
 13230  010D20  0E00               	movlw	0
 13231  010D22  5ADD               	subwfb	postdec2,f,c
 13232  010D24                     l10716:
 13233                           
 13234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 13235                           ;stkvar	_t @ sp[(-56)+52]
 13236  010D24  0EFC               	movlw	-4
 13237  010D26  006F FF8C  F001    	movff	plusw1,btemp
 13238  010D2C  0EFD               	movlw	-3
 13239  010D2E  50E3               	movf	plusw1,w,c
 13240  010D30  1001               	iorwf	btemp^0,w,c
 13241  010D32  A4D8               	btfss	status,2,c
 13242  010D34  D7C2               	goto	l10708
 13243                           
 13244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 13245                           ;stkvar	_n @ sp[(-56)+32]
 13246  010D36  0EE8               	movlw	-24
 13247  010D38  006F FF8C  F00B    	movff	plusw1,btemp+10
 13248  010D3E  0EE9               	movlw	-23
 13249  010D40  006F FF8C  F00C    	movff	plusw1,btemp+11
 13250  010D46  0E94               	movlw	low _dbuf
 13251  010D48  240B               	addwf	(btemp+10)^0,w,c
 13252  010D4A  6ED9               	movwf	fsr2l,c
 13253  010D4C  0E03               	movlw	high _dbuf
 13254  010D4E  200C               	addwfc	(btemp+11)^0,w,c
 13255  010D50  6EDA               	movwf	fsr2h,c
 13256                           
 13257                           ;stkvar	_d @ sp[(-56)+44]
 13258  010D52  0EF4               	movlw	-12
 13259  010D54  50E3               	movf	plusw1,w,c
 13260  010D56  0F30               	addlw	48
 13261  010D58  6EDF               	movwf	indf2,c
 13262                           
 13263                           ;stkvar	_n @ sp[(-56)+32]
 13264  010D5A  0EE8               	movlw	-24
 13265  010D5C  50E3               	movf	plusw1,w,c
 13266  010D5E  0F01               	addlw	1
 13267  010D60  6E01               	movwf	btemp^0,c
 13268  010D62  0EE8               	movlw	-24
 13269  010D64  0060  F007  FFE3   	movff	btemp,plusw1
 13270  010D6A  6A01               	clrf	btemp^0,c
 13271  010D6C  0EE9               	movlw	-23
 13272  010D6E  50E3               	movf	plusw1,w,c
 13273  010D70  2001               	addwfc	btemp^0,w,c
 13274  010D72  6E01               	movwf	btemp^0,c
 13275  010D74  0EE9               	movlw	-23
 13276  010D76  0060  F007  FFE3   	movff	btemp,plusw1
 13277                           
 13278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 13279                           ;stkvar	_w @ sp[(-56)+38]
 13280  010D7C  50E1               	movf	fsr1l,w,c
 13281  010D7E  0FEE               	addlw	-18
 13282  010D80  6ED9               	movwf	fsr2l,c
 13283  010D82  50E2               	movf	fsr1h,w,c
 13284  010D84  6EDA               	movwf	fsr2h,c
 13285  010D86  0EFF               	movlw	255
 13286  010D88  22DA               	addwfc	fsr2h,f,c
 13287  010D8A  06DE               	decf	postinc2,f,c
 13288  010D8C  0E00               	movlw	0
 13289  010D8E  5ADD               	subwfb	postdec2,f,c
 13290  010D90                     l10724:
 13291                           
 13292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 13293                           ;stkvar	_u @ sp[(-56)+12]
 13294  010D90  0ED4               	movlw	-44
 13295  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 13296  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 13297  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 13298  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 13299                           
 13300                           ;stkvar	_l @ sp[(-60)+20]
 13301  010DAA  0ED8               	movlw	-40
 13302  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 13303  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 13304  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 13305  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 13306  010DC4  EC14  F093         	call	___flmul	;wreg free
 13307  010DC8  0060  F007  FFE6   	movff	btemp,postinc1
 13308  010DCE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 13309  010DD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 13310  010DDA  0060  F013  FFE6   	movff	btemp+3,postinc1
 13311                           
 13312                           ;stkvar	_h @ sp[(-60)+24]
 13313  010DE0  0EDC               	movlw	-36
 13314  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 13315  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 13316  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 13317  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 13318  010DFA  EC7E  F0C6         	call	___flsub	;wreg free
 13319                           
 13320                           ;stkvar	_h @ sp[(-56)+24]
 13321  010DFE  0EE0               	movlw	-32
 13322  010E00  0060  F007  FFE3   	movff	btemp,plusw1
 13323  010E06  0EE1               	movlw	-31
 13324  010E08  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13325  010E0E  0EE2               	movlw	-30
 13326  010E10  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13327  010E16  0EE3               	movlw	-29
 13328  010E18  0060  F013  FFE3   	movff	btemp+3,plusw1
 13329                           
 13330                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 13331  010E1E  0E00               	movlw	0
 13332  010E20  6EE6               	movwf	postinc1,c
 13333  010E22  0E00               	movlw	0
 13334  010E24  6EE6               	movwf	postinc1,c
 13335  010E26  0E20               	movlw	32
 13336  010E28  6EE6               	movwf	postinc1,c
 13337  010E2A  0E41               	movlw	65
 13338  010E2C  6EE6               	movwf	postinc1,c
 13339                           
 13340                           ;stkvar	_u @ sp[(-60)+12]
 13341  010E2E  0ED0               	movlw	-48
 13342  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 13343  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 13344  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 13345  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 13346  010E48  ECEF  F09D         	call	___fldiv	;wreg free
 13347                           
 13348                           ;stkvar	_u @ sp[(-56)+12]
 13349  010E4C  0ED4               	movlw	-44
 13350  010E4E  0060  F007  FFE3   	movff	btemp,plusw1
 13351  010E54  0ED5               	movlw	-43
 13352  010E56  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13353  010E5C  0ED6               	movlw	-42
 13354  010E5E  0060  F00F  FFE3   	movff	btemp+2,plusw1
 13355  010E64  0ED7               	movlw	-41
 13356  010E66  0060  F013  FFE3   	movff	btemp+3,plusw1
 13357                           
 13358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 13359                           ;stkvar	_ne @ sp[(-56)+46]
 13360  010E6C  50E1               	movf	fsr1l,w,c
 13361  010E6E  0FF6               	addlw	-10
 13362  010E70  6ED9               	movwf	fsr2l,c
 13363  010E72  50E2               	movf	fsr1h,w,c
 13364  010E74  6EDA               	movwf	fsr2h,c
 13365  010E76  0EFF               	movlw	255
 13366  010E78  22DA               	addwfc	fsr2h,f,c
 13367  010E7A  06DE               	decf	postinc2,f,c
 13368  010E7C  0E00               	movlw	0
 13369  010E7E  5ADD               	subwfb	postdec2,f,c
 13370                           
 13371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 13372                           ;stkvar	_i @ sp[(-56)+36]
 13373  010E80  0EEC               	movlw	-20
 13374  010E82  50E3               	movf	plusw1,w,c
 13375  010E84  0F01               	addlw	1
 13376  010E86  6E01               	movwf	btemp^0,c
 13377  010E88  0EEC               	movlw	-20
 13378  010E8A  0060  F007  FFE3   	movff	btemp,plusw1
 13379  010E90  6A01               	clrf	btemp^0,c
 13380  010E92  0EED               	movlw	-19
 13381  010E94  50E3               	movf	plusw1,w,c
 13382  010E96  2001               	addwfc	btemp^0,w,c
 13383  010E98  6E01               	movwf	btemp^0,c
 13384  010E9A  0EED               	movlw	-19
 13385  010E9C  0060  F007  FFE3   	movff	btemp,plusw1
 13386  010EA2                     l10732:
 13387                           
 13388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 13389                           ;stkvar	_m @ sp[(-56)+48]
 13390                           ;stkvar	_i @ sp[(-56)+36]
 13391  010EA2  50E1               	movf	fsr1l,w,c
 13392  010EA4  0FEC               	addlw	-20
 13393  010EA6  6ED9               	movwf	fsr2l,c
 13394  010EA8  50E2               	movf	fsr1h,w,c
 13395  010EAA  6EDA               	movwf	fsr2h,c
 13396  010EAC  0EFF               	movlw	255
 13397  010EAE  22DA               	addwfc	fsr2h,f,c
 13398  010EB0  0EF8               	movlw	-8
 13399  010EB2  50E3               	movf	plusw1,w,c
 13400  010EB4  5CDE               	subwf	postinc2,w,c
 13401  010EB6  50DE               	movf	postinc2,w,c
 13402  010EB8  0A80               	xorlw	128
 13403  010EBA  6E01               	movwf	btemp^0,c
 13404  010EBC  0EF9               	movlw	-7
 13405  010EBE  50E3               	movf	plusw1,w,c
 13406  010EC0  0A80               	xorlw	128
 13407  010EC2  5801               	subwfb	btemp^0,w,c
 13408  010EC4  B0D8               	btfsc	status,0,c
 13409  010EC6  D00E               	goto	u10050
 13410                           
 13411                           ;stkvar	_n @ sp[(-56)+32]
 13412  010EC8  0EE9               	movlw	-23
 13413  010ECA  BEE3               	btfsc	plusw1,7,c
 13414  010ECC  D633               	goto	l10682
 13415  010ECE  0EE9               	movlw	-23
 13416  010ED0  50E3               	movf	plusw1,w,c
 13417  010ED2  E108               	bnz	u10050
 13418  010ED4  0EE8               	movlw	-24
 13419  010ED6  006F FF8C  F001    	movff	plusw1,btemp
 13420  010EDC  0E4B               	movlw	75
 13421  010EDE  5E01               	subwf	btemp^0,f,c
 13422  010EE0  A0D8               	btfss	status,0,c
 13423  010EE2  D628               	goto	l10682
 13424  010EE4                     u10050:
 13425                           
 13426                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 13427                           ;stkvar	_pp @ sp[(-56)+50]
 13428  010EE4  0EFA               	movlw	-6
 13429  010EE6  006F FF8C  F001    	movff	plusw1,btemp
 13430  010EEC  0EFB               	movlw	-5
 13431  010EEE  50E3               	movf	plusw1,w,c
 13432  010EF0  1001               	iorwf	btemp^0,w,c
 13433  010EF2  B4D8               	btfsc	status,2,c
 13434  010EF4  A828               	btfss	_flags^0,4,c
 13435  010EF6  D021               	goto	l10744
 13436                           
 13437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 13438                           ;stkvar	_n @ sp[(-56)+32]
 13439  010EF8  0EE8               	movlw	-24
 13440  010EFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 13441  010F00  0EE9               	movlw	-23
 13442  010F02  006F FF8C  F00C    	movff	plusw1,btemp+11
 13443  010F08  0E94               	movlw	low _dbuf
 13444  010F0A  240B               	addwf	(btemp+10)^0,w,c
 13445  010F0C  6ED9               	movwf	fsr2l,c
 13446  010F0E  0E03               	movlw	high _dbuf
 13447  010F10  200C               	addwfc	(btemp+11)^0,w,c
 13448  010F12  6EDA               	movwf	fsr2h,c
 13449  010F14  0E2E               	movlw	46
 13450  010F16  6EDF               	movwf	indf2,c
 13451                           
 13452                           ;stkvar	_n @ sp[(-56)+32]
 13453  010F18  0EE8               	movlw	-24
 13454  010F1A  50E3               	movf	plusw1,w,c
 13455  010F1C  0F01               	addlw	1
 13456  010F1E  6E01               	movwf	btemp^0,c
 13457  010F20  0EE8               	movlw	-24
 13458  010F22  0060  F007  FFE3   	movff	btemp,plusw1
 13459  010F28  6A01               	clrf	btemp^0,c
 13460  010F2A  0EE9               	movlw	-23
 13461  010F2C  50E3               	movf	plusw1,w,c
 13462  010F2E  2001               	addwfc	btemp^0,w,c
 13463  010F30  6E01               	movwf	btemp^0,c
 13464  010F32  0EE9               	movlw	-23
 13465  010F34  0060  F007  FFE3   	movff	btemp,plusw1
 13466  010F3A                     l10744:
 13467                           
 13468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 13469                           ;stkvar	_n @ sp[(-56)+32]
 13470  010F3A  0EE8               	movlw	-24
 13471  010F3C  006F FF8C  F00B    	movff	plusw1,btemp+10
 13472  010F42  0EE9               	movlw	-23
 13473  010F44  006F FF8C  F00C    	movff	plusw1,btemp+11
 13474  010F4A  0E94               	movlw	low _dbuf
 13475  010F4C  240B               	addwf	(btemp+10)^0,w,c
 13476  010F4E  6ED9               	movwf	fsr2l,c
 13477  010F50  0E03               	movlw	high _dbuf
 13478  010F52  200C               	addwfc	(btemp+11)^0,w,c
 13479  010F54  6EDA               	movwf	fsr2h,c
 13480  010F56  0E00               	movlw	0
 13481  010F58  6EDF               	movwf	indf2,c
 13482                           
 13483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 13484                           ;stkvar	_nmode @ sp[(-56)+55]
 13485  010F5A  0EFF               	movlw	-1
 13486  010F5C  006F FF8C  F001    	movff	plusw1,btemp
 13487  010F62  0E65               	movlw	101
 13488  010F64  1801               	xorwf	btemp^0,w,c
 13489  010F66  A4D8               	btfss	status,2,c
 13490  010F68  EF16  F081         	goto	l10548
 13491                           
 13492                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 13493  010F6C  0E4F               	movlw	79
 13494  010F6E  6E0B               	movwf	(btemp+10)^0,c
 13495  010F70  0E00               	movlw	0
 13496  010F72  6E0C               	movwf	(btemp+11)^0,c
 13497                           
 13498                           ;stkvar	_i @ sp[(-56)+36]
 13499  010F74  0EEC               	movlw	-20
 13500  010F76  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13501  010F7C  0EED               	movlw	-19
 13502  010F7E  0060  F033  FFE3   	movff	btemp+11,plusw1
 13503                           
 13504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 13505                           ;stkvar	_i @ sp[(-56)+36]
 13506  010F84  0EEC               	movlw	-20
 13507  010F86  006F FF8C  F00B    	movff	plusw1,btemp+10
 13508  010F8C  0EED               	movlw	-19
 13509  010F8E  006F FF8C  F00C    	movff	plusw1,btemp+11
 13510  010F94  0E94               	movlw	low _dbuf
 13511  010F96  240B               	addwf	(btemp+10)^0,w,c
 13512  010F98  6ED9               	movwf	fsr2l,c
 13513  010F9A  0E03               	movlw	high _dbuf
 13514  010F9C  200C               	addwfc	(btemp+11)^0,w,c
 13515  010F9E  6EDA               	movwf	fsr2h,c
 13516  010FA0  0E00               	movlw	0
 13517  010FA2  6EDF               	movwf	indf2,c
 13518                           
 13519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 13520                           ;stkvar	_sign @ sp[(-56)+42]
 13521  010FA4  0EF2               	movlw	-14
 13522  010FA6  6AE3               	clrf	plusw1,c
 13523  010FA8  0EF3               	movlw	-13
 13524  010FAA  6AE3               	clrf	plusw1,c
 13525                           
 13526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 13527                           ;stkvar	_e @ sp[(-56)+34]
 13528  010FAC  0EEB               	movlw	-21
 13529  010FAE  AEE3               	btfss	plusw1,7,c
 13530  010FB0  D012               	goto	l10758
 13531                           
 13532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 13533  010FB2  0E01               	movlw	1
 13534  010FB4  6E0B               	movwf	(btemp+10)^0,c
 13535  010FB6  0E00               	movlw	0
 13536  010FB8  6E0C               	movwf	(btemp+11)^0,c
 13537                           
 13538                           ;stkvar	_sign @ sp[(-56)+42]
 13539  010FBA  0EF2               	movlw	-14
 13540  010FBC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13541  010FC2  0EF3               	movlw	-13
 13542  010FC4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13543                           
 13544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 13545                           ;stkvar	_e @ sp[(-56)+34]
 13546                           ;stkvar	_e @ sp[(-56)+34]
 13547  010FCA  0EEA               	movlw	-22
 13548  010FCC  6CE3               	negf	plusw1,c
 13549  010FCE  0EEB               	movlw	-21
 13550  010FD0  1EE3               	comf	plusw1,f,c
 13551  010FD2  B0D8               	btfsc	status,0,c
 13552  010FD4  2AE3               	incf	plusw1,f,c
 13553  010FD6                     l10758:
 13554                           
 13555                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 13556  010FD6  0E02               	movlw	2
 13557  010FD8  6E0B               	movwf	(btemp+10)^0,c
 13558  010FDA  0E00               	movlw	0
 13559  010FDC  6E0C               	movwf	(btemp+11)^0,c
 13560                           
 13561                           ;stkvar	_p @ sp[(-56)+40]
 13562  010FDE  0EF0               	movlw	-16
 13563  010FE0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13564  010FE6  0EF1               	movlw	-15
 13565  010FE8  0060  F033  FFE3   	movff	btemp+11,plusw1
 13566                           
 13567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13568  010FEE  D051               	goto	l10770
 13569  010FF0                     l10760:
 13570                           
 13571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 13572                           ;stkvar	_i @ sp[(-56)+36]
 13573  010FF0  50E1               	movf	fsr1l,w,c
 13574  010FF2  0FEC               	addlw	-20
 13575  010FF4  6ED9               	movwf	fsr2l,c
 13576  010FF6  50E2               	movf	fsr1h,w,c
 13577  010FF8  6EDA               	movwf	fsr2h,c
 13578  010FFA  0EFF               	movlw	255
 13579  010FFC  22DA               	addwfc	fsr2h,f,c
 13580  010FFE  06DE               	decf	postinc2,f,c
 13581  011000  0E00               	movlw	0
 13582  011002  5ADD               	subwfb	postdec2,f,c
 13583                           
 13584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 13585                           ;stkvar	_i @ sp[(-56)+36]
 13586  011004  0EEC               	movlw	-20
 13587  011006  006F FF8C  F00B    	movff	plusw1,btemp+10
 13588  01100C  0EED               	movlw	-19
 13589  01100E  006F FF8C  F00C    	movff	plusw1,btemp+11
 13590  011014  0E94               	movlw	low _dbuf
 13591  011016  240B               	addwf	(btemp+10)^0,w,c
 13592  011018  6ED9               	movwf	fsr2l,c
 13593  01101A  0E03               	movlw	high _dbuf
 13594  01101C  200C               	addwfc	(btemp+11)^0,w,c
 13595  01101E  6EDA               	movwf	fsr2h,c
 13596  011020  0E0A               	movlw	10
 13597  011022  6EE6               	movwf	postinc1,c
 13598  011024  0E00               	movlw	0
 13599  011026  6EE6               	movwf	postinc1,c
 13600                           
 13601                           ;stkvar	_e @ sp[(-58)+34]
 13602  011028  0EE8               	movlw	-24
 13603  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 13604  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 13605  011036  EC19  F0B9         	call	___awmod	;wreg free
 13606  01103A  5001               	movf	btemp^0,w,c
 13607  01103C  0F30               	addlw	48
 13608  01103E  6EDF               	movwf	indf2,c
 13609                           
 13610                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 13611  011040  0E0A               	movlw	10
 13612  011042  6EE6               	movwf	postinc1,c
 13613  011044  0E00               	movlw	0
 13614  011046  6EE6               	movwf	postinc1,c
 13615                           
 13616                           ;stkvar	_e @ sp[(-58)+34]
 13617  011048  0EE8               	movlw	-24
 13618  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 13619  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 13620  011056  ECB5  F0B6         	call	___awdiv	;wreg free
 13621                           
 13622                           ;stkvar	_e @ sp[(-56)+34]
 13623  01105A  0EEA               	movlw	-22
 13624  01105C  0060  F007  FFE3   	movff	btemp,plusw1
 13625  011062  0EEB               	movlw	-21
 13626  011064  0060  F00B  FFE3   	movff	btemp+1,plusw1
 13627                           
 13628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 13629                           ;stkvar	_p @ sp[(-56)+40]
 13630  01106A  50E1               	movf	fsr1l,w,c
 13631  01106C  0FF0               	addlw	-16
 13632  01106E  6ED9               	movwf	fsr2l,c
 13633  011070  50E2               	movf	fsr1h,w,c
 13634  011072  6EDA               	movwf	fsr2h,c
 13635  011074  0EFF               	movlw	255
 13636  011076  22DA               	addwfc	fsr2h,f,c
 13637  011078  06DE               	decf	postinc2,f,c
 13638  01107A  0E00               	movlw	0
 13639  01107C  5ADD               	subwfb	postdec2,f,c
 13640                           
 13641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 13642                           ;stkvar	_w @ sp[(-56)+38]
 13643  01107E  50E1               	movf	fsr1l,w,c
 13644  011080  0FEE               	addlw	-18
 13645  011082  6ED9               	movwf	fsr2l,c
 13646  011084  50E2               	movf	fsr1h,w,c
 13647  011086  6EDA               	movwf	fsr2h,c
 13648  011088  0EFF               	movlw	255
 13649  01108A  22DA               	addwfc	fsr2h,f,c
 13650  01108C  06DE               	decf	postinc2,f,c
 13651  01108E  0E00               	movlw	0
 13652  011090  5ADD               	subwfb	postdec2,f,c
 13653  011092                     l10770:
 13654                           
 13655                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13656                           ;stkvar	_e @ sp[(-56)+34]
 13657  011092  0EEA               	movlw	-22
 13658  011094  006F FF8C  F001    	movff	plusw1,btemp
 13659  01109A  0EEB               	movlw	-21
 13660  01109C  50E3               	movf	plusw1,w,c
 13661  01109E  1001               	iorwf	btemp^0,w,c
 13662  0110A0  A4D8               	btfss	status,2,c
 13663  0110A2  D7A6               	goto	l10760
 13664                           
 13665                           ;stkvar	_p @ sp[(-56)+40]
 13666  0110A4  0EF1               	movlw	-15
 13667  0110A6  BEE3               	btfsc	plusw1,7,c
 13668  0110A8  D007               	goto	u10110
 13669  0110AA  0EF1               	movlw	-15
 13670  0110AC  50E3               	movf	plusw1,w,c
 13671  0110AE  E1A0               	bnz	l10760
 13672  0110B0  0EF0               	movlw	-16
 13673  0110B2  04E3               	decf	plusw1,w,c
 13674  0110B4  B0D8               	btfsc	status,0,c
 13675  0110B6  D79C               	goto	l10760
 13676  0110B8                     u10110:
 13677                           
 13678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 13679                           ;stkvar	_i @ sp[(-56)+36]
 13680  0110B8  50E1               	movf	fsr1l,w,c
 13681  0110BA  0FEC               	addlw	-20
 13682  0110BC  6ED9               	movwf	fsr2l,c
 13683  0110BE  50E2               	movf	fsr1h,w,c
 13684  0110C0  6EDA               	movwf	fsr2h,c
 13685  0110C2  0EFF               	movlw	255
 13686  0110C4  22DA               	addwfc	fsr2h,f,c
 13687  0110C6  06DE               	decf	postinc2,f,c
 13688  0110C8  0E00               	movlw	0
 13689  0110CA  5ADD               	subwfb	postdec2,f,c
 13690                           
 13691                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13692                           ;stkvar	_sign @ sp[(-56)+42]
 13693  0110CC  0EF2               	movlw	-14
 13694  0110CE  006F FF8C  F001    	movff	plusw1,btemp
 13695  0110D4  0EF3               	movlw	-13
 13696  0110D6  50E3               	movf	plusw1,w,c
 13697  0110D8  1001               	iorwf	btemp^0,w,c
 13698  0110DA  A4D8               	btfss	status,2,c
 13699  0110DC  D002               	goto	l10780
 13700  0110DE  0E2B               	movlw	43
 13701  0110E0  D001               	goto	L11
 13702  0110E2                     l10780:
 13703  0110E2  0E2D               	movlw	45
 13704  0110E4                     L11:
 13705  0110E4  6E0B               	movwf	(btemp+10)^0,c
 13706  0110E6  0E00               	movlw	0
 13707  0110E8  6E0C               	movwf	(btemp+11)^0,c
 13708                           
 13709                           ;stkvar	_efgtoa$5064 @ sp[(-56)+4]
 13710  0110EA  0ECC               	movlw	-52
 13711  0110EC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13712  0110F2  0ECD               	movlw	-51
 13713  0110F4  0060  F033  FFE3   	movff	btemp+11,plusw1
 13714                           
 13715                           ;stkvar	_efgtoa$5064 @ sp[(-56)+4]
 13716                           ;stkvar	_i @ sp[(-56)+36]
 13717  0110FA  0EEC               	movlw	-20
 13718  0110FC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13719  011102  0EED               	movlw	-19
 13720  011104  006F FF8C  F00C    	movff	plusw1,btemp+11
 13721  01110A  0E94               	movlw	low _dbuf
 13722  01110C  240B               	addwf	(btemp+10)^0,w,c
 13723  01110E  6ED9               	movwf	fsr2l,c
 13724  011110  0E03               	movlw	high _dbuf
 13725  011112  200C               	addwfc	(btemp+11)^0,w,c
 13726  011114  6EDA               	movwf	fsr2h,c
 13727  011116  0ECC               	movlw	-52
 13728  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13729                           
 13730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13731                           ;stkvar	_w @ sp[(-56)+38]
 13732  01111E  50E1               	movf	fsr1l,w,c
 13733  011120  0FEE               	addlw	-18
 13734  011122  6ED9               	movwf	fsr2l,c
 13735  011124  50E2               	movf	fsr1h,w,c
 13736  011126  6EDA               	movwf	fsr2h,c
 13737  011128  0EFF               	movlw	255
 13738  01112A  22DA               	addwfc	fsr2h,f,c
 13739  01112C  06DE               	decf	postinc2,f,c
 13740  01112E  0E00               	movlw	0
 13741  011130  5ADD               	subwfb	postdec2,f,c
 13742                           
 13743                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13744                           ;stkvar	_i @ sp[(-56)+36]
 13745  011132  50E1               	movf	fsr1l,w,c
 13746  011134  0FEC               	addlw	-20
 13747  011136  6ED9               	movwf	fsr2l,c
 13748  011138  50E2               	movf	fsr1h,w,c
 13749  01113A  6EDA               	movwf	fsr2h,c
 13750  01113C  0EFF               	movlw	255
 13751  01113E  22DA               	addwfc	fsr2h,f,c
 13752  011140  06DE               	decf	postinc2,f,c
 13753  011142  0E00               	movlw	0
 13754  011144  5ADD               	subwfb	postdec2,f,c
 13755  011146  0EBF               	movlw	191
 13756  011148  6E0B               	movwf	(btemp+10)^0,c
 13757  01114A  0EFF               	movlw	255
 13758  01114C  6E0C               	movwf	(btemp+11)^0,c
 13759                           
 13760                           ;stkvar	_c @ sp[(-56)+-7]
 13761  01114E  0EC1               	movlw	-63
 13762  011150  50E3               	movf	plusw1,w,c
 13763  011152  6E09               	movwf	(btemp+8)^0,c
 13764  011154  6A0A               	clrf	(btemp+9)^0,c
 13765  011156  500B               	movf	(btemp+10)^0,w,c
 13766  011158  2609               	addwf	(btemp+8)^0,f,c
 13767  01115A  500C               	movf	(btemp+11)^0,w,c
 13768  01115C  220A               	addwfc	(btemp+9)^0,f,c
 13769  01115E  500A               	movf	(btemp+9)^0,w,c
 13770  011160  E106               	bnz	u10130
 13771  011162  0E1A               	movlw	26
 13772  011164  5C09               	subwf	(btemp+8)^0,w,c
 13773  011166  B0D8               	btfsc	status,0,c
 13774  011168  D002               	goto	u10130
 13775  01116A  0E01               	movlw	1
 13776  01116C  D001               	goto	u10140
 13777  01116E                     u10130:
 13778  01116E  0E00               	movlw	0
 13779  011170                     u10140:
 13780  011170  6E0B               	movwf	(btemp+10)^0,c
 13781  011172  6A0C               	clrf	(btemp+11)^0,c
 13782                           
 13783                           ;stkvar	_efgtoa$5066 @ sp[(-56)+0]
 13784  011174  0EC8               	movlw	-56
 13785  011176  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13786  01117C  0EC9               	movlw	-55
 13787  01117E  0060  F033  FFE3   	movff	btemp+11,plusw1
 13788                           
 13789                           ;stkvar	_efgtoa$5066 @ sp[(-56)+0]
 13790  011184  0EC8               	movlw	-56
 13791  011186  006F FF8C  F001    	movff	plusw1,btemp
 13792  01118C  0EC9               	movlw	-55
 13793  01118E  50E3               	movf	plusw1,w,c
 13794  011190  1001               	iorwf	btemp^0,w,c
 13795  011192  A4D8               	btfss	status,2,c
 13796  011194  D002               	goto	l10796
 13797  011196  0E65               	movlw	101
 13798  011198  D001               	goto	L12
 13799  01119A                     l10796:
 13800  01119A  0E45               	movlw	69
 13801  01119C                     L12:
 13802  01119C  6E0B               	movwf	(btemp+10)^0,c
 13803  01119E  0E00               	movlw	0
 13804  0111A0  6E0C               	movwf	(btemp+11)^0,c
 13805                           
 13806                           ;stkvar	_efgtoa$5065 @ sp[(-56)+2]
 13807  0111A2  0ECA               	movlw	-54
 13808  0111A4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13809  0111AA  0ECB               	movlw	-53
 13810  0111AC  0060  F033  FFE3   	movff	btemp+11,plusw1
 13811                           
 13812                           ;stkvar	_efgtoa$5065 @ sp[(-56)+2]
 13813                           ;stkvar	_i @ sp[(-56)+36]
 13814  0111B2  0EEC               	movlw	-20
 13815  0111B4  006F FF8C  F00B    	movff	plusw1,btemp+10
 13816  0111BA  0EED               	movlw	-19
 13817  0111BC  006F FF8C  F00C    	movff	plusw1,btemp+11
 13818  0111C2  0E94               	movlw	low _dbuf
 13819  0111C4  240B               	addwf	(btemp+10)^0,w,c
 13820  0111C6  6ED9               	movwf	fsr2l,c
 13821  0111C8  0E03               	movlw	high _dbuf
 13822  0111CA  200C               	addwfc	(btemp+11)^0,w,c
 13823  0111CC  6EDA               	movwf	fsr2h,c
 13824  0111CE  0ECA               	movlw	-54
 13825  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13826                           
 13827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13828                           ;stkvar	_w @ sp[(-56)+38]
 13829  0111D6  50E1               	movf	fsr1l,w,c
 13830  0111D8  0FEE               	addlw	-18
 13831  0111DA  6ED9               	movwf	fsr2l,c
 13832  0111DC  50E2               	movf	fsr1h,w,c
 13833  0111DE  6EDA               	movwf	fsr2h,c
 13834  0111E0  0EFF               	movlw	255
 13835  0111E2  22DA               	addwfc	fsr2h,f,c
 13836  0111E4  06DE               	decf	postinc2,f,c
 13837  0111E6  0E00               	movlw	0
 13838  0111E8  5ADD               	subwfb	postdec2,f,c
 13839                           
 13840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13841                           ;stkvar	_i @ sp[(-56)+36]
 13842  0111EA  0EEC               	movlw	-20
 13843  0111EC  006F FF8C  F00B    	movff	plusw1,btemp+10
 13844  0111F2  0EED               	movlw	-19
 13845  0111F4  006F FF8C  F00C    	movff	plusw1,btemp+11
 13846  0111FA  0E94               	movlw	low _dbuf
 13847  0111FC  240B               	addwf	(btemp+10)^0,w,c
 13848  0111FE  6E09               	movwf	(btemp+8)^0,c
 13849  011200  0E03               	movlw	high _dbuf
 13850  011202  200C               	addwfc	(btemp+11)^0,w,c
 13851  011204  6E0A               	movwf	(btemp+9)^0,c
 13852  011206  0060  F027  FFE6   	movff	btemp+8,postinc1
 13853  01120C  0060  F02B  FFE6   	movff	btemp+9,postinc1
 13854                           
 13855                           ;stkvar	_n @ sp[(-58)+32]
 13856  011212  0E94               	movlw	low _dbuf
 13857  011214  6E0B               	movwf	(btemp+10)^0,c
 13858  011216  0E03               	movlw	high _dbuf
 13859  011218  6E0C               	movwf	(btemp+11)^0,c
 13860  01121A  0EE6               	movlw	-26
 13861  01121C  50E3               	movf	plusw1,w,c
 13862  01121E  260B               	addwf	(btemp+10)^0,f,c
 13863  011220  0EE7               	movlw	-25
 13864  011222  50E3               	movf	plusw1,w,c
 13865  011224  220C               	addwfc	(btemp+11)^0,f,c
 13866  011226  0060  F02F  FFE6   	movff	btemp+10,postinc1
 13867  01122C  0060  F033  FFE6   	movff	btemp+11,postinc1
 13868  011232  EC96  F0BD         	call	_strcpy	;wreg free
 13869  011236  EF16  F081         	goto	l10548
 13870  01123A                     l2073:
 13871                           
 13872                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13873  01123A  0EC1               	movlw	193
 13874  01123C  26E1               	addwf	fsr1l,f,c
 13875  01123E  0EFF               	movlw	255
 13876  011240  22E2               	addwfc	fsr1h,f,c
 13877  011242  0012               	return		;funcret
 13878  011244                     __end_of_efgtoa:
 13879                           	opt callstack 0
 13880                           
 13881 ;; *************** function _tolower *****************
 13882 ;; Defined at:
 13883 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13884 ;; Parameters:    Size  Location     Type
 13885 ;;  c               2  [STACK] int 
 13886 ;; Auto vars:     Size  Location     Type
 13887 ;;		None
 13888 ;; Return value:  Size  Location     Type
 13889 ;;                  2  [STACK] int 
 13890 ;; Registers used:
 13891 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13892 ;; Tracked objects:
 13893 ;;		On entry : 0/0
 13894 ;;		On exit  : 0/0
 13895 ;;		Unchanged: 0/0
 13896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13901 ;;Total ram usage:        0 bytes
 13902 ;; Hardware stack levels used:    1
 13903 ;; Hardware stack levels required when called:    8
 13904 ;; This function calls:
 13905 ;;		_isupper
 13906 ;; This function is called by:
 13907 ;;		_efgtoa
 13908 ;;		_vfpfcnvrt
 13909 ;; This function uses a reentrant model
 13910 ;;
 13911                           
 13912                           	psect	text50
 13913  018592                     __ptext50:
 13914                           	opt callstack 0
 13915  018592                     _tolower:
 13916                           	opt callstack 0
 13917                           
 13918                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13919  018592  52E6               	movf	postinc1,f,c
 13920  018594  52E6               	movf	postinc1,f,c
 13921                           
 13922                           ;stkvar	_c @ sp[(-2)+-2]
 13923                           
 13924                           ;incstack = 0
 13925  018596  0EFC               	movlw	-4
 13926  018598  50E3               	movf	plusw1,w,c
 13927  01859A  0FBF               	addlw	191
 13928  01859C  6E0B               	movwf	(btemp+10)^0,c
 13929  01859E  0EFD               	movlw	-3
 13930  0185A0  006F FF8C  F00C    	movff	plusw1,btemp+11
 13931  0185A6  0EFF               	movlw	255
 13932  0185A8  220C               	addwfc	(btemp+11)^0,f,c
 13933  0185AA  500C               	movf	(btemp+11)^0,w,c
 13934  0185AC  E106               	bnz	u4950
 13935  0185AE  0E1A               	movlw	26
 13936  0185B0  5C0B               	subwf	(btemp+10)^0,w,c
 13937  0185B2  B0D8               	btfsc	status,0,c
 13938  0185B4  D002               	goto	u4950
 13939  0185B6  0E01               	movlw	1
 13940  0185B8  D001               	goto	u4960
 13941  0185BA                     u4950:
 13942  0185BA  0E00               	movlw	0
 13943  0185BC                     u4960:
 13944  0185BC  6E0B               	movwf	(btemp+10)^0,c
 13945  0185BE  6A0C               	clrf	(btemp+11)^0,c
 13946                           
 13947                           ;stkvar	_tolower$5847 @ sp[(-2)+0]
 13948  0185C0  0EFE               	movlw	-2
 13949  0185C2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 13950  0185C8  0EFF               	movlw	-1
 13951  0185CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 13952                           
 13953                           ;stkvar	_tolower$5847 @ sp[(-2)+0]
 13954  0185D0  0EFE               	movlw	-2
 13955  0185D2  006F FF8C  F001    	movff	plusw1,btemp
 13956  0185D8  0EFF               	movlw	-1
 13957  0185DA  50E3               	movf	plusw1,w,c
 13958  0185DC  1001               	iorwf	btemp^0,w,c
 13959  0185DE  B4D8               	btfsc	status,2,c
 13960  0185E0  D00D               	goto	l6974
 13961                           
 13962                           ;stkvar	_c @ sp[(-2)+-2]
 13963  0185E2  0EFC               	movlw	-4
 13964  0185E4  006F FF8C  F001    	movff	plusw1,btemp
 13965  0185EA  0EFD               	movlw	-3
 13966  0185EC  006F FF8C  F002    	movff	plusw1,btemp+1
 13967  0185F2  0E20               	movlw	32
 13968  0185F4  1201               	iorwf	btemp^0,f,c
 13969  0185F6  0E00               	movlw	0
 13970  0185F8  1202               	iorwf	(btemp+1)^0,f,c
 13971  0185FA  D008               	goto	l3317
 13972  0185FC                     l6974:
 13973                           
 13974                           ;stkvar	_c @ sp[(-2)+-2]
 13975  0185FC  0EFC               	movlw	-4
 13976  0185FE  006F FF8C  F001    	movff	plusw1,btemp
 13977  018604  0EFD               	movlw	-3
 13978  018606  006F FF8C  F002    	movff	plusw1,btemp+1
 13979  01860C                     l3317:
 13980                           
 13981                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13982  01860C  52E5               	movf	postdec1,f,c
 13983  01860E  52E5               	movf	postdec1,f,c
 13984  018610  52E5               	movf	postdec1,f,c
 13985  018612  52E5               	movf	postdec1,f,c
 13986  018614  0012               	return		;funcret
 13987  018616                     __end_of_tolower:
 13988                           	opt callstack 0
 13989                           
 13990 ;; *************** function _isupper *****************
 13991 ;; Defined at:
 13992 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13993 ;; Parameters:    Size  Location     Type
 13994 ;;  c               2  [STACK] int 
 13995 ;; Auto vars:     Size  Location     Type
 13996 ;;		None
 13997 ;; Return value:  Size  Location     Type
 13998 ;;                  2  [STACK] int 
 13999 ;; Registers used:
 14000 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14001 ;; Tracked objects:
 14002 ;;		On entry : 0/0
 14003 ;;		On exit  : 0/0
 14004 ;;		Unchanged: 0/0
 14005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14010 ;;Total ram usage:        0 bytes
 14011 ;; Hardware stack levels used:    1
 14012 ;; Hardware stack levels required when called:    7
 14013 ;; This function calls:
 14014 ;;		Nothing
 14015 ;; This function is called by:
 14016 ;;		_efgtoa
 14017 ;;		_xtoa
 14018 ;;		_vfpfcnvrt
 14019 ;;		_tolower
 14020 ;; This function uses a reentrant model
 14021 ;;
 14022                           
 14023                           	psect	text51
 14024  019138                     __ptext51:
 14025                           	opt callstack 0
 14026  019138                     _isupper:
 14027                           	opt callstack 16
 14028                           
 14029                           ;stkvar	_c @ sp[(0)+-2]
 14030                           
 14031                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14032                           ;incstack = 0
 14033  019138  0EFE               	movlw	-2
 14034  01913A  50E3               	movf	plusw1,w,c
 14035  01913C  0FBF               	addlw	191
 14036  01913E  6E0B               	movwf	(btemp+10)^0,c
 14037  019140  0EFF               	movlw	-1
 14038  019142  006F FF8C  F00C    	movff	plusw1,btemp+11
 14039  019148  0EFF               	movlw	255
 14040  01914A  220C               	addwfc	(btemp+11)^0,f,c
 14041  01914C  500C               	movf	(btemp+11)^0,w,c
 14042  01914E  E106               	bnz	u4770
 14043  019150  0E1A               	movlw	26
 14044  019152  5C0B               	subwf	(btemp+10)^0,w,c
 14045  019154  B0D8               	btfsc	status,0,c
 14046  019156  D002               	goto	u4770
 14047  019158  0E01               	movlw	1
 14048  01915A  D001               	goto	u4780
 14049  01915C                     u4770:
 14050  01915C  0E00               	movlw	0
 14051  01915E                     u4780:
 14052  01915E  6E01               	movwf	btemp^0,c
 14053  019160  6A02               	clrf	(btemp+1)^0,c
 14054                           
 14055                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14056  019162  52E5               	movf	postdec1,f,c
 14057  019164  52E5               	movf	postdec1,f,c
 14058  019166  0012               	return		;funcret
 14059  019168                     __end_of_isupper:
 14060                           	opt callstack 0
 14061                           
 14062 ;; *************** function _strcpy *****************
 14063 ;; Defined at:
 14064 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 14065 ;; Parameters:    Size  Location     Type
 14066 ;;  dest            2  [STACK] PTR unsigned char 
 14067 ;;		 -> dbuf(80), 
 14068 ;;  src             2  [STACK] PTR const unsigned char 
 14069 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 14070 ;;		 -> dbuf(80), 
 14071 ;; Auto vars:     Size  Location     Type
 14072 ;;  d               2  [STACK] PTR unsigned char 
 14073 ;;		 -> dbuf(80), 
 14074 ;;  s               2  [STACK] PTR const unsigned char 
 14075 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 14076 ;;		 -> dbuf(80), 
 14077 ;; Return value:  Size  Location     Type
 14078 ;;                  2  [STACK] PTR unsigned char 
 14079 ;; Registers used:
 14080 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 14081 ;; Tracked objects:
 14082 ;;		On entry : 0/0
 14083 ;;		On exit  : 0/0
 14084 ;;		Unchanged: 0/0
 14085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14090 ;;Total ram usage:        0 bytes
 14091 ;; Hardware stack levels used:    1
 14092 ;; Hardware stack levels required when called:    7
 14093 ;; This function calls:
 14094 ;;		Nothing
 14095 ;; This function is called by:
 14096 ;;		_efgtoa
 14097 ;; This function uses a reentrant model
 14098 ;;
 14099                           
 14100                           	psect	text52
 14101  017B2C                     __ptext52:
 14102                           	opt callstack 0
 14103  017B2C                     _strcpy:
 14104                           	opt callstack 0
 14105                           
 14106                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14107  017B2C  52E6               	movf	postinc1,f,c
 14108  017B2E  52E6               	movf	postinc1,f,c
 14109  017B30  52E6               	movf	postinc1,f,c
 14110  017B32  52E6               	movf	postinc1,f,c
 14111                           
 14112                           ;stkvar	_src @ sp[(-4)+-4]
 14113                           
 14114                           ;incstack = 0
 14115  017B34  0EF8               	movlw	-8
 14116  017B36  006F FF8C  F00B    	movff	plusw1,btemp+10
 14117  017B3C  0EF9               	movlw	-7
 14118  017B3E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14119                           
 14120                           ;stkvar	_s @ sp[(-4)+2]
 14121  017B44  0EFF               	movlw	-1
 14122  017B46  0060  F033  FFE3   	movff	btemp+11,plusw1
 14123  017B4C  0EFE               	movlw	-2
 14124  017B4E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14125                           
 14126                           ;stkvar	_dest @ sp[(-4)+-2]
 14127  017B54  0EFA               	movlw	-6
 14128  017B56  006F FF8C  F00B    	movff	plusw1,btemp+10
 14129  017B5C  0EFB               	movlw	-5
 14130  017B5E  006F FF8C  F00C    	movff	plusw1,btemp+11
 14131                           
 14132                           ;stkvar	_d @ sp[(-4)+0]
 14133  017B64  0EFD               	movlw	-3
 14134  017B66  0060  F033  FFE3   	movff	btemp+11,plusw1
 14135  017B6C  0EFC               	movlw	-4
 14136  017B6E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14137  017B74                     l10422:
 14138                           
 14139                           ;stkvar	_s @ sp[(-4)+2]
 14140  017B74  50E1               	movf	fsr1l,w,c
 14141  017B76  0FFE               	addlw	-2
 14142  017B78  6ED9               	movwf	fsr2l,c
 14143  017B7A  50E2               	movf	fsr1h,w,c
 14144  017B7C  6EDA               	movwf	fsr2h,c
 14145  017B7E  0EFF               	movlw	255
 14146  017B80  22DA               	addwfc	fsr2h,f,c
 14147  017B82  006F FF7C  F00B    	movff	indf2,btemp+10
 14148  017B88  0E01               	movlw	1
 14149  017B8A  26DE               	addwf	postinc2,f,c
 14150  017B8C  006F FF7C  F00C    	movff	indf2,btemp+11
 14151  017B92  0E00               	movlw	0
 14152  017B94  22DD               	addwfc	postdec2,f,c
 14153  017B96  0060  F02F  FFF6   	movff	btemp+10,tblptrl
 14154  017B9C  0060  F033  FFF7   	movff	btemp+11,tblptrh
 14155  017BA2  0E00               	movlw	low (__mediumconst shr (0+16))
 14156  017BA4  6EF8               	movwf	tblptru,c
 14157                           
 14158                           ;stkvar	_d @ sp[(-4)+0]
 14159  017BA6  50E1               	movf	fsr1l,w,c
 14160  017BA8  0FFC               	addlw	-4
 14161  017BAA  6ED9               	movwf	fsr2l,c
 14162  017BAC  50E2               	movf	fsr1h,w,c
 14163  017BAE  6EDA               	movwf	fsr2h,c
 14164  017BB0  0EFF               	movlw	255
 14165  017BB2  22DA               	addwfc	fsr2h,f,c
 14166  017BB4  006F FF7C  F00B    	movff	indf2,btemp+10
 14167  017BBA  0E01               	movlw	1
 14168  017BBC  26DE               	addwf	postinc2,f,c
 14169  017BBE  006F FF7C  F00C    	movff	indf2,btemp+11
 14170  017BC4  0E00               	movlw	0
 14171  017BC6  22DD               	addwfc	postdec2,f,c
 14172  017BC8  0060  F02F  FFD9   	movff	btemp+10,fsr2l
 14173  017BCE  0060  F033  FFDA   	movff	btemp+11,fsr2h
 14174  017BD4  0E1F               	movlw	(high __ramtop+-1)
 14175  017BD6  64F7               	cpfsgt	tblptrh,c
 14176  017BD8  D003               	bra	u9447
 14177  017BDA  0008               	tblrd		*
 14178  017BDC  50F5               	movf	tablat,w,c
 14179  017BDE  D007               	bra	u9440
 14180  017BE0                     u9447:
 14181  017BE0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14182  017BE6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14183  017BEC  50EF               	movf	indf0,w,c
 14184  017BEE                     u9440:
 14185  017BEE  6EDF               	movwf	indf2,c
 14186  017BF0  50DF               	movf	indf2,w,c
 14187  017BF2  A4D8               	btfss	status,2,c
 14188  017BF4  D7BF               	goto	l10422
 14189                           
 14190                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 14191  017BF6  0EF8               	movlw	248
 14192  017BF8  26E1               	addwf	fsr1l,f,c
 14193  017BFA  0EFF               	movlw	255
 14194  017BFC  22E2               	addwfc	fsr1h,f,c
 14195  017BFE  0012               	return		;funcret
 14196  017C00                     __end_of_strcpy:
 14197                           	opt callstack 0
 14198                           
 14199 ;; *************** function _floorf *****************
 14200 ;; Defined at:
 14201 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 14202 ;; Parameters:    Size  Location     Type
 14203 ;;  x               4  [STACK] float 
 14204 ;; Auto vars:     Size  Location     Type
 14205 ;;  u               4  [STACK] struct .
 14206 ;;  m               4  [STACK] unsigned long 
 14207 ;;  e               2  [STACK] int 
 14208 ;; Return value:  Size  Location     Type
 14209 ;;                  4  [STACK] float 
 14210 ;; Registers used:
 14211 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 14212 ;; Tracked objects:
 14213 ;;		On entry : 0/0
 14214 ;;		On exit  : 0/0
 14215 ;;		Unchanged: 0/0
 14216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14221 ;;Total ram usage:        0 bytes
 14222 ;; Hardware stack levels used:    1
 14223 ;; Hardware stack levels required when called:    7
 14224 ;; This function calls:
 14225 ;;		Nothing
 14226 ;; This function is called by:
 14227 ;;		_efgtoa
 14228 ;; This function uses a reentrant model
 14229 ;;
 14230                           
 14231                           	psect	text53
 14232  014E3E                     __ptext53:
 14233                           	opt callstack 0
 14234  014E3E                     _floorf:
 14235                           	opt callstack 0
 14236                           
 14237                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14238  014E3E  0E0A               	movlw	10
 14239  014E40  26E1               	addwf	fsr1l,f,c
 14240  014E42  0E00               	movlw	0
 14241  014E44  22E2               	addwfc	fsr1h,f,c
 14242                           
 14243                           ;incstack = 0
 14244  014E46  0060  F254  F009   	movff	floorf@F524,btemp+8
 14245  014E4C  0060  F258  F00A   	movff	floorf@F524+1,btemp+9
 14246  014E52  0060  F25C  F00B   	movff	floorf@F524+2,btemp+10
 14247  014E58  0060  F260  F00C   	movff	floorf@F524+3,btemp+11
 14248                           
 14249                           ;stkvar	_u @ sp[(-10)+0]
 14250  014E5E  0EF6               	movlw	-10
 14251  014E60  0060  F027  FFE3   	movff	btemp+8,plusw1
 14252  014E66  0EF7               	movlw	-9
 14253  014E68  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14254  014E6E  0EF8               	movlw	-8
 14255  014E70  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14256  014E76  0EF9               	movlw	-7
 14257  014E78  0060  F033  FFE3   	movff	btemp+11,plusw1
 14258                           
 14259                           ;stkvar	_x @ sp[(-10)+-4]
 14260  014E7E  0EF2               	movlw	-14
 14261  014E80  006F FF8C  F009    	movff	plusw1,btemp+8
 14262  014E86  0EF3               	movlw	-13
 14263  014E88  006F FF8C  F00A    	movff	plusw1,btemp+9
 14264  014E8E  0EF4               	movlw	-12
 14265  014E90  006F FF8C  F00B    	movff	plusw1,btemp+10
 14266  014E96  0EF5               	movlw	-11
 14267  014E98  006F FF8C  F00C    	movff	plusw1,btemp+11
 14268                           
 14269                           ;stkvar	_u @ sp[(-10)+0]
 14270  014E9E  0EF6               	movlw	-10
 14271  014EA0  0060  F027  FFE3   	movff	btemp+8,plusw1
 14272  014EA6  0EF7               	movlw	-9
 14273  014EA8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14274  014EAE  0EF8               	movlw	-8
 14275  014EB0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14276  014EB6  0EF9               	movlw	-7
 14277  014EB8  0060  F033  FFE3   	movff	btemp+11,plusw1
 14278  014EBE  0E81               	movlw	129
 14279  014EC0  6E0B               	movwf	(btemp+10)^0,c
 14280  014EC2  0EFF               	movlw	255
 14281  014EC4  6E0C               	movwf	(btemp+11)^0,c
 14282                           
 14283                           ;stkvar	_u @ sp[(-10)+0]
 14284  014EC6  0EF6               	movlw	-10
 14285  014EC8  006F FF8C  F005    	movff	plusw1,btemp+4
 14286  014ECE  0EF7               	movlw	-9
 14287  014ED0  006F FF8C  F006    	movff	plusw1,btemp+5
 14288  014ED6  0EF8               	movlw	-8
 14289  014ED8  006F FF8C  F007    	movff	plusw1,btemp+6
 14290  014EDE  0EF9               	movlw	-7
 14291  014EE0  006F FF8C  F008    	movff	plusw1,btemp+7
 14292  014EE6  0E18               	movlw	24
 14293  014EE8  D005               	goto	u4980
 14294  014EEA                     u4985:
 14295  014EEA  90D8               	bcf	status,0,c
 14296  014EEC  3208               	rrcf	(btemp+7)^0,f,c
 14297  014EEE  3207               	rrcf	(btemp+6)^0,f,c
 14298  014EF0  3206               	rrcf	(btemp+5)^0,f,c
 14299  014EF2  3205               	rrcf	(btemp+4)^0,f,c
 14300  014EF4                     u4980:
 14301  014EF4  2EE8               	decfsz	wreg,f,c
 14302  014EF6  D7F9               	goto	u4985
 14303  014EF8  0060  F014  F009   	movff	btemp+4,btemp+8
 14304  014EFE  0060  F018  F00A   	movff	btemp+5,btemp+9
 14305  014F04  0EFF               	movlw	255
 14306  014F06  1609               	andwf	(btemp+8)^0,f,c
 14307  014F08  0E00               	movlw	0
 14308  014F0A  160A               	andwf	(btemp+9)^0,f,c
 14309  014F0C  500B               	movf	(btemp+10)^0,w,c
 14310  014F0E  2609               	addwf	(btemp+8)^0,f,c
 14311  014F10  500C               	movf	(btemp+11)^0,w,c
 14312  014F12  220A               	addwfc	(btemp+9)^0,f,c
 14313                           
 14314                           ;stkvar	_e @ sp[(-10)+8]
 14315  014F14  0EFE               	movlw	-2
 14316  014F16  0060  F027  FFE3   	movff	btemp+8,plusw1
 14317  014F1C  0EFF               	movlw	-1
 14318  014F1E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14319                           
 14320                           ;stkvar	_e @ sp[(-10)+8]
 14321  014F24  0EFF               	movlw	-1
 14322  014F26  BEE3               	btfsc	plusw1,7,c
 14323  014F28  D019               	goto	l6988
 14324  014F2A  0EFF               	movlw	-1
 14325  014F2C  50E3               	movf	plusw1,w,c
 14326  014F2E  E108               	bnz	u4990
 14327  014F30  0EFE               	movlw	-2
 14328  014F32  006F FF8C  F001    	movff	plusw1,btemp
 14329  014F38  0E17               	movlw	23
 14330  014F3A  5E01               	subwf	btemp^0,f,c
 14331  014F3C  A0D8               	btfss	status,0,c
 14332  014F3E  D00E               	goto	l6988
 14333  014F40                     u4990:
 14334                           
 14335                           ;stkvar	_x @ sp[(-10)+-4]
 14336  014F40  0EF2               	movlw	-14
 14337  014F42  006F FF8C  F001    	movff	plusw1,btemp
 14338  014F48  0EF3               	movlw	-13
 14339  014F4A  006F FF8C  F002    	movff	plusw1,btemp+1
 14340  014F50  0EF4               	movlw	-12
 14341  014F52  006F FF8C  F003    	movff	plusw1,btemp+2
 14342  014F58  0EF5               	movlw	-11
 14343  014F5A  D11F               	goto	L13
 14344  014F5C                     l6988:
 14345                           
 14346                           ;stkvar	_e @ sp[(-10)+8]
 14347  014F5C  0EFF               	movlw	-1
 14348  014F5E  BEE3               	btfsc	plusw1,7,c
 14349  014F60  D0B4               	goto	l7004
 14350                           
 14351                           ;stkvar	_e @ sp[(-10)+8]
 14352  014F62  0EFE               	movlw	-2
 14353  014F64  006F FF8C  F00C    	movff	plusw1,btemp+11
 14354  014F6A  0EFF               	movlw	255
 14355  014F6C  6E05               	movwf	(btemp+4)^0,c
 14356  014F6E  0EFF               	movlw	255
 14357  014F70  6E06               	movwf	(btemp+5)^0,c
 14358  014F72  0E7F               	movlw	127
 14359  014F74  6E07               	movwf	(btemp+6)^0,c
 14360  014F76  0E00               	movlw	0
 14361  014F78  6E08               	movwf	(btemp+7)^0,c
 14362  014F7A                     u5015:
 14363  014F7A  660C               	tstfsz	(btemp+11)^0,c
 14364  014F7C  D001               	goto	u5016
 14365  014F7E  D007               	goto	u5017
 14366  014F80                     u5016:
 14367  014F80  3408               	rlcf	(btemp+7)^0,w,c
 14368  014F82  3208               	rrcf	(btemp+7)^0,f,c
 14369  014F84  3207               	rrcf	(btemp+6)^0,f,c
 14370  014F86  3206               	rrcf	(btemp+5)^0,f,c
 14371  014F88  3205               	rrcf	(btemp+4)^0,f,c
 14372  014F8A  2E0C               	decfsz	(btemp+11)^0,f,c
 14373  014F8C  D7F6               	goto	u5015
 14374  014F8E                     u5017:
 14375                           
 14376                           ;stkvar	_m @ sp[(-10)+4]
 14377  014F8E  0EFA               	movlw	-6
 14378  014F90  0060  F017  FFE3   	movff	btemp+4,plusw1
 14379  014F96  0EFB               	movlw	-5
 14380  014F98  0060  F01B  FFE3   	movff	btemp+5,plusw1
 14381  014F9E  0EFC               	movlw	-4
 14382  014FA0  0060  F01F  FFE3   	movff	btemp+6,plusw1
 14383  014FA6  0EFD               	movlw	-3
 14384  014FA8  0060  F023  FFE3   	movff	btemp+7,plusw1
 14385                           
 14386                           ;stkvar	_m @ sp[(-10)+4]
 14387                           ;stkvar	_u @ sp[(-10)+0]
 14388  014FAE  0EF6               	movlw	-10
 14389  014FB0  006F FF8C  F009    	movff	plusw1,btemp+8
 14390  014FB6  0EF7               	movlw	-9
 14391  014FB8  006F FF8C  F00A    	movff	plusw1,btemp+9
 14392  014FBE  0EF8               	movlw	-8
 14393  014FC0  006F FF8C  F00B    	movff	plusw1,btemp+10
 14394  014FC6  0EF9               	movlw	-7
 14395  014FC8  006F FF8C  F00C    	movff	plusw1,btemp+11
 14396  014FCE  0EFA               	movlw	-6
 14397  014FD0  50E3               	movf	plusw1,w,c
 14398  014FD2  1609               	andwf	(btemp+8)^0,f,c
 14399  014FD4  0EFB               	movlw	-5
 14400  014FD6  50E3               	movf	plusw1,w,c
 14401  014FD8  160A               	andwf	(btemp+9)^0,f,c
 14402  014FDA  0EFC               	movlw	-4
 14403  014FDC  50E3               	movf	plusw1,w,c
 14404  014FDE  160B               	andwf	(btemp+10)^0,f,c
 14405  014FE0  0EFD               	movlw	-3
 14406  014FE2  50E3               	movf	plusw1,w,c
 14407  014FE4  160C               	andwf	(btemp+11)^0,f,c
 14408  014FE6  5009               	movf	(btemp+8)^0,w,c
 14409  014FE8  100A               	iorwf	(btemp+9)^0,w,c
 14410  014FEA  100B               	iorwf	(btemp+10)^0,w,c
 14411  014FEC  100C               	iorwf	(btemp+11)^0,w,c
 14412  014FEE  B4D8               	btfsc	status,2,c
 14413  014FF0  D7A7               	goto	u4990
 14414                           
 14415                           ;stkvar	_u @ sp[(-10)+0]
 14416  014FF2  0EF6               	movlw	-10
 14417  014FF4  006F FF8C  F009    	movff	plusw1,btemp+8
 14418  014FFA  0EF7               	movlw	-9
 14419  014FFC  006F FF8C  F00A    	movff	plusw1,btemp+9
 14420  015002  0EF8               	movlw	-8
 14421  015004  006F FF8C  F00B    	movff	plusw1,btemp+10
 14422  01500A  0EF9               	movlw	-7
 14423  01500C  006F FF8C  F00C    	movff	plusw1,btemp+11
 14424  015012  0E20               	movlw	32
 14425  015014  D005               	goto	u5030
 14426  015016                     u5035:
 14427  015016  90D8               	bcf	status,0,c
 14428  015018  320C               	rrcf	(btemp+11)^0,f,c
 14429  01501A  320B               	rrcf	(btemp+10)^0,f,c
 14430  01501C  320A               	rrcf	(btemp+9)^0,f,c
 14431  01501E  3209               	rrcf	(btemp+8)^0,f,c
 14432  015020                     u5030:
 14433  015020  2EE8               	decfsz	wreg,f,c
 14434  015022  D7F9               	goto	u5035
 14435  015024  5009               	movf	(btemp+8)^0,w,c
 14436  015026  B4D8               	btfsc	status,2,c
 14437  015028  D028               	goto	l7002
 14438                           
 14439                           ;stkvar	_m @ sp[(-10)+4]
 14440                           ;stkvar	_u @ sp[(-10)+0]
 14441  01502A  0EF6               	movlw	-10
 14442  01502C  50E3               	movf	plusw1,w,c
 14443  01502E  6E01               	movwf	btemp^0,c
 14444  015030  0EFA               	movlw	-6
 14445  015032  50E3               	movf	plusw1,w,c
 14446  015034  2601               	addwf	btemp^0,f,c
 14447  015036  0EF6               	movlw	-10
 14448  015038  0060  F007  FFE3   	movff	btemp,plusw1
 14449  01503E  0EF7               	movlw	-9
 14450  015040  50E3               	movf	plusw1,w,c
 14451  015042  6E01               	movwf	btemp^0,c
 14452  015044  0EFB               	movlw	-5
 14453  015046  50E3               	movf	plusw1,w,c
 14454  015048  2201               	addwfc	btemp^0,f,c
 14455  01504A  0EF7               	movlw	-9
 14456  01504C  0060  F007  FFE3   	movff	btemp,plusw1
 14457  015052  0EF8               	movlw	-8
 14458  015054  50E3               	movf	plusw1,w,c
 14459  015056  6E01               	movwf	btemp^0,c
 14460  015058  0EFC               	movlw	-4
 14461  01505A  50E3               	movf	plusw1,w,c
 14462  01505C  2201               	addwfc	btemp^0,f,c
 14463  01505E  0EF8               	movlw	-8
 14464  015060  0060  F007  FFE3   	movff	btemp,plusw1
 14465  015066  0EF9               	movlw	-7
 14466  015068  50E3               	movf	plusw1,w,c
 14467  01506A  6E01               	movwf	btemp^0,c
 14468  01506C  0EFD               	movlw	-3
 14469  01506E  50E3               	movf	plusw1,w,c
 14470  015070  2201               	addwfc	btemp^0,f,c
 14471  015072  0EF9               	movlw	-7
 14472  015074  0060  F007  FFE3   	movff	btemp,plusw1
 14473  01507A                     l7002:
 14474                           
 14475                           ;stkvar	_m @ sp[(-10)+4]
 14476  01507A  0EFA               	movlw	-6
 14477  01507C  006F FF8C  F009    	movff	plusw1,btemp+8
 14478  015082  0EFB               	movlw	-5
 14479  015084  006F FF8C  F00A    	movff	plusw1,btemp+9
 14480  01508A  0EFC               	movlw	-4
 14481  01508C  006F FF8C  F00B    	movff	plusw1,btemp+10
 14482  015092  0EFD               	movlw	-3
 14483  015094  006F FF8C  F00C    	movff	plusw1,btemp+11
 14484  01509A  1C09               	comf	(btemp+8)^0,w,c
 14485  01509C  6E05               	movwf	(btemp+4)^0,c
 14486  01509E  1C0A               	comf	(btemp+9)^0,w,c
 14487  0150A0  6E06               	movwf	(btemp+5)^0,c
 14488  0150A2  1C0B               	comf	(btemp+10)^0,w,c
 14489  0150A4  6E07               	movwf	(btemp+6)^0,c
 14490  0150A6  1C0C               	comf	(btemp+11)^0,w,c
 14491  0150A8  6E08               	movwf	(btemp+7)^0,c
 14492                           
 14493                           ;stkvar	_u @ sp[(-10)+0]
 14494  0150AA  50E1               	movf	fsr1l,w,c
 14495  0150AC  0FF6               	addlw	-10
 14496  0150AE  6ED9               	movwf	fsr2l,c
 14497  0150B0  50E2               	movf	fsr1h,w,c
 14498  0150B2  6EDA               	movwf	fsr2h,c
 14499  0150B4  0EFF               	movlw	255
 14500  0150B6  22DA               	addwfc	fsr2h,f,c
 14501  0150B8  5005               	movf	(btemp+4)^0,w,c
 14502  0150BA  16DE               	andwf	postinc2,f,c
 14503  0150BC  5006               	movf	(btemp+5)^0,w,c
 14504  0150BE  16DE               	andwf	postinc2,f,c
 14505  0150C0  5007               	movf	(btemp+6)^0,w,c
 14506  0150C2  16DE               	andwf	postinc2,f,c
 14507  0150C4  5008               	movf	(btemp+7)^0,w,c
 14508  0150C6  16DE               	andwf	postinc2,f,c
 14509  0150C8  D05B               	goto	l7012
 14510  0150CA                     l7004:
 14511                           
 14512                           ;stkvar	_u @ sp[(-10)+0]
 14513  0150CA  0EF6               	movlw	-10
 14514  0150CC  006F FF8C  F009    	movff	plusw1,btemp+8
 14515  0150D2  0EF7               	movlw	-9
 14516  0150D4  006F FF8C  F00A    	movff	plusw1,btemp+9
 14517  0150DA  0EF8               	movlw	-8
 14518  0150DC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14519  0150E2  0EF9               	movlw	-7
 14520  0150E4  006F FF8C  F00C    	movff	plusw1,btemp+11
 14521  0150EA  0E20               	movlw	32
 14522  0150EC  D005               	goto	u5050
 14523  0150EE                     u5055:
 14524  0150EE  90D8               	bcf	status,0,c
 14525  0150F0  320C               	rrcf	(btemp+11)^0,f,c
 14526  0150F2  320B               	rrcf	(btemp+10)^0,f,c
 14527  0150F4  320A               	rrcf	(btemp+9)^0,f,c
 14528  0150F6  3209               	rrcf	(btemp+8)^0,f,c
 14529  0150F8                     u5050:
 14530  0150F8  2EE8               	decfsz	wreg,f,c
 14531  0150FA  D7F9               	goto	u5055
 14532  0150FC  6609               	tstfsz	(btemp+8)^0,c
 14533  0150FE  D009               	goto	l7008
 14534                           
 14535                           ;stkvar	_u @ sp[(-10)+0]
 14536  015100  0EF6               	movlw	-10
 14537  015102  6AE3               	clrf	plusw1,c
 14538  015104  0EF7               	movlw	-9
 14539  015106  6AE3               	clrf	plusw1,c
 14540  015108  0EF8               	movlw	-8
 14541  01510A  6AE3               	clrf	plusw1,c
 14542  01510C  0EF9               	movlw	-7
 14543  01510E  6AE3               	clrf	plusw1,c
 14544  015110  D037               	goto	l7012
 14545  015112                     l7008:
 14546                           
 14547                           ;stkvar	_u @ sp[(-10)+0]
 14548  015112  0EF6               	movlw	-10
 14549  015114  006F FF8C  F009    	movff	plusw1,btemp+8
 14550  01511A  0EF7               	movlw	-9
 14551  01511C  006F FF8C  F00A    	movff	plusw1,btemp+9
 14552  015122  0EF8               	movlw	-8
 14553  015124  006F FF8C  F00B    	movff	plusw1,btemp+10
 14554  01512A  0EF9               	movlw	-7
 14555  01512C  006F FF8C  F00C    	movff	plusw1,btemp+11
 14556  015132  90D8               	bcf	status,0,c
 14557  015134  3409               	rlcf	(btemp+8)^0,w,c
 14558  015136  6E05               	movwf	(btemp+4)^0,c
 14559  015138  340A               	rlcf	(btemp+9)^0,w,c
 14560  01513A  6E06               	movwf	(btemp+5)^0,c
 14561  01513C  340B               	rlcf	(btemp+10)^0,w,c
 14562  01513E  6E07               	movwf	(btemp+6)^0,c
 14563  015140  340C               	rlcf	(btemp+11)^0,w,c
 14564  015142  6E08               	movwf	(btemp+7)^0,c
 14565  015144  5005               	movf	(btemp+4)^0,w,c
 14566  015146  1006               	iorwf	(btemp+5)^0,w,c
 14567  015148  1007               	iorwf	(btemp+6)^0,w,c
 14568  01514A  1008               	iorwf	(btemp+7)^0,w,c
 14569  01514C  B4D8               	btfsc	status,2,c
 14570  01514E  D018               	goto	l7012
 14571  015150  0E00               	movlw	0
 14572  015152  6E09               	movwf	(btemp+8)^0,c
 14573  015154  0E00               	movlw	0
 14574  015156  6E0A               	movwf	(btemp+9)^0,c
 14575  015158  0E80               	movlw	128
 14576  01515A  6E0B               	movwf	(btemp+10)^0,c
 14577  01515C  0EBF               	movlw	191
 14578  01515E  6E0C               	movwf	(btemp+11)^0,c
 14579                           
 14580                           ;stkvar	_u @ sp[(-10)+0]
 14581  015160  0EF6               	movlw	-10
 14582  015162  0060  F027  FFE3   	movff	btemp+8,plusw1
 14583  015168  0EF7               	movlw	-9
 14584  01516A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14585  015170  0EF8               	movlw	-8
 14586  015172  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14587  015178  0EF9               	movlw	-7
 14588  01517A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14589  015180                     l7012:
 14590                           
 14591                           ;stkvar	_u @ sp[(-10)+0]
 14592  015180  0EF6               	movlw	-10
 14593  015182  006F FF8C  F001    	movff	plusw1,btemp
 14594  015188  0EF7               	movlw	-9
 14595  01518A  006F FF8C  F002    	movff	plusw1,btemp+1
 14596  015190  0EF8               	movlw	-8
 14597  015192  006F FF8C  F003    	movff	plusw1,btemp+2
 14598  015198  0EF9               	movlw	-7
 14599  01519A                     L13:
 14600  01519A  006F FF8C  F004    	movff	plusw1,btemp+3
 14601                           
 14602                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14603  0151A0  0EF2               	movlw	242
 14604  0151A2  26E1               	addwf	fsr1l,f,c
 14605  0151A4  0EFF               	movlw	255
 14606  0151A6  22E2               	addwfc	fsr1h,f,c
 14607  0151A8  0012               	return		;funcret
 14608  0151AA                     __end_of_floorf:
 14609                           	opt callstack 0
 14610                           
 14611 ;; *************** function ___fpclassifyf *****************
 14612 ;; Defined at:
 14613 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 14614 ;; Parameters:    Size  Location     Type
 14615 ;;  x               4  [STACK] float 
 14616 ;; Auto vars:     Size  Location     Type
 14617 ;;  u               4  [STACK] struct .
 14618 ;;  e               2  [STACK] int 
 14619 ;; Return value:  Size  Location     Type
 14620 ;;                  2  [STACK] int 
 14621 ;; Registers used:
 14622 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 14623 ;; Tracked objects:
 14624 ;;		On entry : 0/0
 14625 ;;		On exit  : 0/0
 14626 ;;		Unchanged: 0/0
 14627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14632 ;;Total ram usage:        0 bytes
 14633 ;; Hardware stack levels used:    1
 14634 ;; Hardware stack levels required when called:    7
 14635 ;; This function calls:
 14636 ;;		Nothing
 14637 ;; This function is called by:
 14638 ;;		_efgtoa
 14639 ;; This function uses a reentrant model
 14640 ;;
 14641                           
 14642                           	psect	text54
 14643  016900                     __ptext54:
 14644                           	opt callstack 0
 14645  016900                     ___fpclassifyf:
 14646                           	opt callstack 0
 14647                           
 14648                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14649  016900  0E06               	movlw	6
 14650  016902  26E1               	addwf	fsr1l,f,c
 14651  016904  0E00               	movlw	0
 14652  016906  22E2               	addwfc	fsr1h,f,c
 14653                           
 14654                           ;incstack = 0
 14655  016908  0060  F264  F009   	movff	___fpclassifyf@F463,btemp+8
 14656  01690E  0060  F268  F00A   	movff	___fpclassifyf@F463+1,btemp+9
 14657  016914  0060  F26C  F00B   	movff	___fpclassifyf@F463+2,btemp+10
 14658  01691A  0060  F270  F00C   	movff	___fpclassifyf@F463+3,btemp+11
 14659                           
 14660                           ;stkvar	_u @ sp[(-6)+0]
 14661  016920  0EFA               	movlw	-6
 14662  016922  0060  F027  FFE3   	movff	btemp+8,plusw1
 14663  016928  0EFB               	movlw	-5
 14664  01692A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14665  016930  0EFC               	movlw	-4
 14666  016932  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14667  016938  0EFD               	movlw	-3
 14668  01693A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14669                           
 14670                           ;stkvar	_x @ sp[(-6)+-4]
 14671  016940  0EF6               	movlw	-10
 14672  016942  006F FF8C  F009    	movff	plusw1,btemp+8
 14673  016948  0EF7               	movlw	-9
 14674  01694A  006F FF8C  F00A    	movff	plusw1,btemp+9
 14675  016950  0EF8               	movlw	-8
 14676  016952  006F FF8C  F00B    	movff	plusw1,btemp+10
 14677  016958  0EF9               	movlw	-7
 14678  01695A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14679                           
 14680                           ;stkvar	_u @ sp[(-6)+0]
 14681  016960  0EFA               	movlw	-6
 14682  016962  0060  F027  FFE3   	movff	btemp+8,plusw1
 14683  016968  0EFB               	movlw	-5
 14684  01696A  0060  F02B  FFE3   	movff	btemp+9,plusw1
 14685  016970  0EFC               	movlw	-4
 14686  016972  0060  F02F  FFE3   	movff	btemp+10,plusw1
 14687  016978  0EFD               	movlw	-3
 14688  01697A  0060  F033  FFE3   	movff	btemp+11,plusw1
 14689                           
 14690                           ;stkvar	_u @ sp[(-6)+0]
 14691  016980  0EFA               	movlw	-6
 14692  016982  006F FF8C  F009    	movff	plusw1,btemp+8
 14693  016988  0EFB               	movlw	-5
 14694  01698A  006F FF8C  F00A    	movff	plusw1,btemp+9
 14695  016990  0EFC               	movlw	-4
 14696  016992  006F FF8C  F00B    	movff	plusw1,btemp+10
 14697  016998  0EFD               	movlw	-3
 14698  01699A  006F FF8C  F00C    	movff	plusw1,btemp+11
 14699  0169A0  0E18               	movlw	24
 14700  0169A2  D005               	goto	u4860
 14701  0169A4                     u4865:
 14702  0169A4  90D8               	bcf	status,0,c
 14703  0169A6  320C               	rrcf	(btemp+11)^0,f,c
 14704  0169A8  320B               	rrcf	(btemp+10)^0,f,c
 14705  0169AA  320A               	rrcf	(btemp+9)^0,f,c
 14706  0169AC  3209               	rrcf	(btemp+8)^0,f,c
 14707  0169AE                     u4860:
 14708  0169AE  2EE8               	decfsz	wreg,f,c
 14709  0169B0  D7F9               	goto	u4865
 14710  0169B2  0060  F024  F007   	movff	btemp+8,btemp+6
 14711  0169B8  0060  F028  F008   	movff	btemp+9,btemp+7
 14712  0169BE  0EFF               	movlw	255
 14713  0169C0  1607               	andwf	(btemp+6)^0,f,c
 14714  0169C2  0E00               	movlw	0
 14715  0169C4  1608               	andwf	(btemp+7)^0,f,c
 14716                           
 14717                           ;stkvar	_e @ sp[(-6)+4]
 14718  0169C6  0EFE               	movlw	-2
 14719  0169C8  0060  F01F  FFE3   	movff	btemp+6,plusw1
 14720  0169CE  0EFF               	movlw	-1
 14721  0169D0  0060  F023  FFE3   	movff	btemp+7,plusw1
 14722                           
 14723                           ;stkvar	_e @ sp[(-6)+4]
 14724  0169D6  0EFE               	movlw	-2
 14725  0169D8  006F FF8C  F001    	movff	plusw1,btemp
 14726  0169DE  0EFF               	movlw	-1
 14727  0169E0  50E3               	movf	plusw1,w,c
 14728  0169E2  1001               	iorwf	btemp^0,w,c
 14729  0169E4  A4D8               	btfss	status,2,c
 14730  0169E6  D023               	goto	l6950
 14731                           
 14732                           ;stkvar	_u @ sp[(-6)+0]
 14733  0169E8  0EFA               	movlw	-6
 14734  0169EA  006F FF8C  F009    	movff	plusw1,btemp+8
 14735  0169F0  0EFB               	movlw	-5
 14736  0169F2  006F FF8C  F00A    	movff	plusw1,btemp+9
 14737  0169F8  0EFC               	movlw	-4
 14738  0169FA  006F FF8C  F00B    	movff	plusw1,btemp+10
 14739  016A00  0EFD               	movlw	-3
 14740  016A02  006F FF8C  F00C    	movff	plusw1,btemp+11
 14741  016A08  90D8               	bcf	status,0,c
 14742  016A0A  3409               	rlcf	(btemp+8)^0,w,c
 14743  016A0C  6E05               	movwf	(btemp+4)^0,c
 14744  016A0E  340A               	rlcf	(btemp+9)^0,w,c
 14745  016A10  6E06               	movwf	(btemp+5)^0,c
 14746  016A12  340B               	rlcf	(btemp+10)^0,w,c
 14747  016A14  6E07               	movwf	(btemp+6)^0,c
 14748  016A16  340C               	rlcf	(btemp+11)^0,w,c
 14749  016A18  6E08               	movwf	(btemp+7)^0,c
 14750  016A1A  5005               	movf	(btemp+4)^0,w,c
 14751  016A1C  1006               	iorwf	(btemp+5)^0,w,c
 14752  016A1E  1007               	iorwf	(btemp+6)^0,w,c
 14753  016A20  1008               	iorwf	(btemp+7)^0,w,c
 14754  016A22  A4D8               	btfss	status,2,c
 14755  016A24  D002               	goto	l6946
 14756  016A26  0E02               	movlw	2
 14757  016A28  D02E               	goto	L14
 14758  016A2A                     l6946:
 14759  016A2A  0E03               	movlw	3
 14760  016A2C  D02C               	goto	L14
 14761  016A2E                     l6950:
 14762                           
 14763                           ;stkvar	_e @ sp[(-6)+4]
 14764  016A2E  0EFE               	movlw	-2
 14765  016A30  28E3               	incf	plusw1,w,c
 14766  016A32  E128               	bnz	l6956
 14767  016A34  0EFF               	movlw	-1
 14768  016A36  50E3               	movf	plusw1,w,c
 14769  016A38  A4D8               	btfss	status,2,c
 14770  016A3A  D024               	goto	l6956
 14771                           
 14772                           ;stkvar	_u @ sp[(-6)+0]
 14773  016A3C  0EFA               	movlw	-6
 14774  016A3E  006F FF8C  F009    	movff	plusw1,btemp+8
 14775  016A44  0EFB               	movlw	-5
 14776  016A46  006F FF8C  F00A    	movff	plusw1,btemp+9
 14777  016A4C  0EFC               	movlw	-4
 14778  016A4E  006F FF8C  F00B    	movff	plusw1,btemp+10
 14779  016A54  0EFD               	movlw	-3
 14780  016A56  006F FF8C  F00C    	movff	plusw1,btemp+11
 14781  016A5C  0E09               	movlw	9
 14782  016A5E                     u4905:
 14783  016A5E  90D8               	bcf	status,0,c
 14784  016A60  3609               	rlcf	(btemp+8)^0,f,c
 14785  016A62  360A               	rlcf	(btemp+9)^0,f,c
 14786  016A64  360B               	rlcf	(btemp+10)^0,f,c
 14787  016A66  360C               	rlcf	(btemp+11)^0,f,c
 14788  016A68  2EE8               	decfsz	wreg,f,c
 14789  016A6A  D7F9               	goto	u4905
 14790  016A6C  5009               	movf	(btemp+8)^0,w,c
 14791  016A6E  100A               	iorwf	(btemp+9)^0,w,c
 14792  016A70  100B               	iorwf	(btemp+10)^0,w,c
 14793  016A72  100C               	iorwf	(btemp+11)^0,w,c
 14794  016A74  A4D8               	btfss	status,2,c
 14795  016A76  D002               	goto	u4910
 14796  016A78  0E01               	movlw	1
 14797  016A7A  D001               	goto	u4920
 14798  016A7C                     u4910:
 14799  016A7C  0E00               	movlw	0
 14800  016A7E                     u4920:
 14801  016A7E  6E01               	movwf	btemp^0,c
 14802  016A80  6A02               	clrf	(btemp+1)^0,c
 14803  016A82  D004               	goto	l2932
 14804  016A84                     l6956:
 14805  016A84  0E04               	movlw	4
 14806  016A86                     L14:
 14807  016A86  6E01               	movwf	btemp^0,c
 14808  016A88  0E00               	movlw	0
 14809  016A8A  6E02               	movwf	(btemp+1)^0,c
 14810  016A8C                     l2932:
 14811                           
 14812                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14813  016A8C  0EF6               	movlw	246
 14814  016A8E  26E1               	addwf	fsr1l,f,c
 14815  016A90  0EFF               	movlw	255
 14816  016A92  22E2               	addwfc	fsr1h,f,c
 14817  016A94  0012               	return		;funcret
 14818  016A96                     __end_of___fpclassifyf:
 14819                           	opt callstack 0
 14820                           
 14821 ;; *************** function ___fltol *****************
 14822 ;; Defined at:
 14823 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14824 ;; Parameters:    Size  Location     Type
 14825 ;;  f1              4  [STACK] int 
 14826 ;; Auto vars:     Size  Location     Type
 14827 ;;  exp1            1  [STACK] unsigned char 
 14828 ;;  sign1           1  [STACK] unsigned char 
 14829 ;; Return value:  Size  Location     Type
 14830 ;;                  4  [STACK] long 
 14831 ;; Registers used:
 14832 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14833 ;; Tracked objects:
 14834 ;;		On entry : 0/1
 14835 ;;		On exit  : 0/0
 14836 ;;		Unchanged: 0/0
 14837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14842 ;;Total ram usage:        0 bytes
 14843 ;; Hardware stack levels used:    1
 14844 ;; Hardware stack levels required when called:    7
 14845 ;; This function calls:
 14846 ;;		Nothing
 14847 ;; This function is called by:
 14848 ;;		_calc_bsoc
 14849 ;;		_init_bsoc
 14850 ;;		_efgtoa
 14851 ;; This function uses a reentrant model
 14852 ;;
 14853                           
 14854                           	psect	text55
 14855  016A96                     __ptext55:
 14856                           	opt callstack 0
 14857  016A96                     ___fltol:
 14858                           	opt callstack 0
 14859                           
 14860                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14861  016A96  52E6               	movf	postinc1,f,c
 14862  016A98  52E6               	movf	postinc1,f,c
 14863                           
 14864                           ;stkvar	_f1 @ sp[(-2)+-4]
 14865                           
 14866                           ;incstack = 0
 14867  016A9A  0EFA               	movlw	-6
 14868  016A9C  006F FF8C  F009    	movff	plusw1,btemp+8
 14869  016AA2  0EFB               	movlw	-5
 14870  016AA4  006F FF8C  F00A    	movff	plusw1,btemp+9
 14871  016AAA  0EFC               	movlw	-4
 14872  016AAC  006F FF8C  F00B    	movff	plusw1,btemp+10
 14873  016AB2  0EFD               	movlw	-3
 14874  016AB4  006F FF8C  F00C    	movff	plusw1,btemp+11
 14875  016ABA  0E18               	movlw	24
 14876  016ABC  D005               	goto	u8030
 14877  016ABE                     u8035:
 14878  016ABE  90D8               	bcf	status,0,c
 14879  016AC0  320C               	rrcf	(btemp+11)^0,f,c
 14880  016AC2  320B               	rrcf	(btemp+10)^0,f,c
 14881  016AC4  320A               	rrcf	(btemp+9)^0,f,c
 14882  016AC6  3209               	rrcf	(btemp+8)^0,f,c
 14883  016AC8                     u8030:
 14884  016AC8  2EE8               	decfsz	wreg,f,c
 14885  016ACA  D7F9               	goto	u8035
 14886                           
 14887                           ;stkvar	_exp1 @ sp[(-2)+0]
 14888  016ACC  0EFE               	movlw	-2
 14889  016ACE  0060  F027  FFE3   	movff	btemp+8,plusw1
 14890  016AD4  0EFE               	movlw	-2
 14891  016AD6  50E3               	movf	plusw1,w,c
 14892  016AD8  A4D8               	btfss	status,2,c
 14893  016ADA  D006               	goto	l8782
 14894  016ADC                     u8040:
 14895  016ADC  0E00               	movlw	0
 14896  016ADE  6E01               	movwf	btemp^0,c
 14897  016AE0  6A02               	clrf	(btemp+1)^0,c
 14898  016AE2  6A03               	clrf	(btemp+2)^0,c
 14899  016AE4  6A04               	clrf	(btemp+3)^0,c
 14900  016AE6  D08B               	goto	l2548
 14901  016AE8                     l8782:
 14902                           
 14903                           ;stkvar	_f1 @ sp[(-2)+-4]
 14904  016AE8  0EFA               	movlw	-6
 14905  016AEA  006F FF8C  F009    	movff	plusw1,btemp+8
 14906  016AF0  0EFB               	movlw	-5
 14907  016AF2  006F FF8C  F00A    	movff	plusw1,btemp+9
 14908  016AF8  0EFC               	movlw	-4
 14909  016AFA  006F FF8C  F00B    	movff	plusw1,btemp+10
 14910  016B00  0EFD               	movlw	-3
 14911  016B02  006F FF8C  F00C    	movff	plusw1,btemp+11
 14912  016B08  0E20               	movlw	32
 14913  016B0A  D005               	goto	u8050
 14914  016B0C                     u8055:
 14915  016B0C  90D8               	bcf	status,0,c
 14916  016B0E  320C               	rrcf	(btemp+11)^0,f,c
 14917  016B10  320B               	rrcf	(btemp+10)^0,f,c
 14918  016B12  320A               	rrcf	(btemp+9)^0,f,c
 14919  016B14  3209               	rrcf	(btemp+8)^0,f,c
 14920  016B16                     u8050:
 14921  016B16  2EE8               	decfsz	wreg,f,c
 14922  016B18  D7F9               	goto	u8055
 14923                           
 14924                           ;stkvar	_sign1 @ sp[(-2)+1]
 14925  016B1A  0EFF               	movlw	-1
 14926  016B1C  0060  F027  FFE3   	movff	btemp+8,plusw1
 14927                           
 14928                           ;stkvar	_f1 @ sp[(-2)+-4]
 14929  016B22  0EFC               	movlw	-4
 14930  016B24  8EE3               	bsf	plusw1,7,c
 14931                           
 14932                           ;stkvar	_f1 @ sp[(-2)+-4]
 14933  016B26  50E1               	movf	fsr1l,w,c
 14934  016B28  0FFA               	addlw	-6
 14935  016B2A  6ED9               	movwf	fsr2l,c
 14936  016B2C  50E2               	movf	fsr1h,w,c
 14937  016B2E  6EDA               	movwf	fsr2h,c
 14938  016B30  0EFF               	movlw	255
 14939  016B32  22DA               	addwfc	fsr2h,f,c
 14940  016B34  0EFF               	movlw	255
 14941  016B36  16DE               	andwf	postinc2,f,c
 14942  016B38  0EFF               	movlw	255
 14943  016B3A  16DE               	andwf	postinc2,f,c
 14944  016B3C  0EFF               	movlw	255
 14945  016B3E  16DE               	andwf	postinc2,f,c
 14946  016B40  0E00               	movlw	0
 14947  016B42  16DE               	andwf	postinc2,f,c
 14948                           
 14949                           ;stkvar	_exp1 @ sp[(-2)+0]
 14950  016B44  0EFE               	movlw	-2
 14951  016B46  006F FF8C  F001    	movff	plusw1,btemp
 14952  016B4C  0E96               	movlw	150
 14953  016B4E  5E01               	subwf	btemp^0,f,c
 14954  016B50  0EFE               	movlw	-2
 14955  016B52  0060  F007  FFE3   	movff	btemp,plusw1
 14956                           
 14957                           ;stkvar	_exp1 @ sp[(-2)+0]
 14958  016B58  0EFE               	movlw	-2
 14959  016B5A  AEE3               	btfss	plusw1,7,c
 14960  016B5C  D014               	goto	l8800
 14961                           
 14962                           ;stkvar	_exp1 @ sp[(-2)+0]
 14963  016B5E  0EFE               	movlw	-2
 14964  016B60  50E3               	movf	plusw1,w,c
 14965  016B62  0A80               	xorlw	128
 14966  016B64  0F97               	addlw	151
 14967  016B66  A0D8               	btfss	status,0,c
 14968  016B68  D7B9               	goto	u8040
 14969  016B6A                     l8798:
 14970                           
 14971                           ;stkvar	_f1 @ sp[(-2)+-4]
 14972  016B6A  90D8               	bcf	status,0,c
 14973  016B6C  0EFD               	movlw	-3
 14974  016B6E  32E3               	rrcf	plusw1,f,c
 14975  016B70  0EFC               	movlw	-4
 14976  016B72  32E3               	rrcf	plusw1,f,c
 14977  016B74  0EFB               	movlw	-5
 14978  016B76  32E3               	rrcf	plusw1,f,c
 14979  016B78  0EFA               	movlw	-6
 14980  016B7A  32E3               	rrcf	plusw1,f,c
 14981                           
 14982                           ;stkvar	_exp1 @ sp[(-2)+0]
 14983  016B7C  0EFE               	movlw	-2
 14984  016B7E  2AE3               	incf	plusw1,f,c
 14985  016B80  B4D8               	btfsc	status,2,c
 14986  016B82  D018               	goto	u8100
 14987  016B84  D7F2               	goto	l8798
 14988  016B86                     l8800:
 14989                           
 14990                           ;stkvar	_exp1 @ sp[(-2)+0]
 14991  016B86  0EFE               	movlw	-2
 14992  016B88  006F FF8C  F001    	movff	plusw1,btemp
 14993  016B8E  0E1F               	movlw	31
 14994  016B90  6401               	cpfsgt	btemp^0,c
 14995  016B92  D00C               	goto	l8808
 14996  016B94  D7A3               	goto	u8040
 14997  016B96                     l8806:
 14998                           
 14999                           ;stkvar	_f1 @ sp[(-2)+-4]
 15000  016B96  90D8               	bcf	status,0,c
 15001  016B98  0EFA               	movlw	-6
 15002  016B9A  36E3               	rlcf	plusw1,f,c
 15003  016B9C  0EFB               	movlw	-5
 15004  016B9E  36E3               	rlcf	plusw1,f,c
 15005  016BA0  0EFC               	movlw	-4
 15006  016BA2  36E3               	rlcf	plusw1,f,c
 15007  016BA4  0EFD               	movlw	-3
 15008  016BA6  36E3               	rlcf	plusw1,f,c
 15009                           
 15010                           ;stkvar	_exp1 @ sp[(-2)+0]
 15011  016BA8  0EFE               	movlw	-2
 15012  016BAA  06E3               	decf	plusw1,f,c
 15013  016BAC                     l8808:
 15014                           
 15015                           ;stkvar	_exp1 @ sp[(-2)+0]
 15016  016BAC  0EFE               	movlw	-2
 15017  016BAE  50E3               	movf	plusw1,w,c
 15018  016BB0  A4D8               	btfss	status,2,c
 15019  016BB2  D7F1               	goto	l8806
 15020  016BB4                     u8100:
 15021                           
 15022                           ;stkvar	_sign1 @ sp[(-2)+1]
 15023  016BB4  0EFF               	movlw	-1
 15024  016BB6  50E3               	movf	plusw1,w,c
 15025  016BB8  B4D8               	btfsc	status,2,c
 15026  016BBA  D011               	goto	u8120
 15027                           
 15028                           ;stkvar	_f1 @ sp[(-2)+-4]
 15029                           ;stkvar	_f1 @ sp[(-2)+-4]
 15030  016BBC  0EFA               	movlw	-6
 15031  016BBE  6CE3               	negf	plusw1,c
 15032  016BC0  0EFB               	movlw	-5
 15033  016BC2  1EE3               	comf	plusw1,f,c
 15034  016BC4  0EFC               	movlw	-4
 15035  016BC6  1EE3               	comf	plusw1,f,c
 15036  016BC8  0EFD               	movlw	-3
 15037  016BCA  1EE3               	comf	plusw1,f,c
 15038  016BCC  E308               	bnc	u8120
 15039  016BCE  0EFB               	movlw	-5
 15040  016BD0  2AE3               	incf	plusw1,f,c
 15041  016BD2  E305               	bnc	u8120
 15042  016BD4  0EFC               	movlw	-4
 15043  016BD6  2AE3               	incf	plusw1,f,c
 15044  016BD8  E302               	bnc	u8120
 15045  016BDA  0EFD               	movlw	-3
 15046  016BDC  2AE3               	incf	plusw1,f,c
 15047  016BDE                     u8120:
 15048                           
 15049                           ;stkvar	_f1 @ sp[(-2)+-4]
 15050  016BDE  0EFA               	movlw	-6
 15051  016BE0  006F FF8C  F001    	movff	plusw1,btemp
 15052  016BE6  0EFB               	movlw	-5
 15053  016BE8  006F FF8C  F002    	movff	plusw1,btemp+1
 15054  016BEE  0EFC               	movlw	-4
 15055  016BF0  006F FF8C  F003    	movff	plusw1,btemp+2
 15056  016BF6  0EFD               	movlw	-3
 15057  016BF8  006F FF8C  F004    	movff	plusw1,btemp+3
 15058  016BFE                     l2548:
 15059                           
 15060                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15061  016BFE  0EFA               	movlw	250
 15062  016C00  26E1               	addwf	fsr1l,f,c
 15063  016C02  0EFF               	movlw	255
 15064  016C04  22E2               	addwfc	fsr1h,f,c
 15065  016C06  0012               	return		;funcret
 15066  016C08                     __end_of___fltol:
 15067                           	opt callstack 0
 15068                           
 15069 ;; *************** function ___flneg *****************
 15070 ;; Defined at:
 15071 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 15072 ;; Parameters:    Size  Location     Type
 15073 ;;  f1              4  [STACK] long 
 15074 ;; Auto vars:     Size  Location     Type
 15075 ;;		None
 15076 ;; Return value:  Size  Location     Type
 15077 ;;                  4  [STACK] long 
 15078 ;; Registers used:
 15079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 15080 ;; Tracked objects:
 15081 ;;		On entry : 0/0
 15082 ;;		On exit  : 0/0
 15083 ;;		Unchanged: 0/0
 15084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15089 ;;Total ram usage:        0 bytes
 15090 ;; Hardware stack levels used:    1
 15091 ;; Hardware stack levels required when called:    7
 15092 ;; This function calls:
 15093 ;;		Nothing
 15094 ;; This function is called by:
 15095 ;;		_calc_bsoc
 15096 ;;		_efgtoa
 15097 ;; This function uses a reentrant model
 15098 ;;
 15099                           
 15100                           	psect	text56
 15101  018C6E                     __ptext56:
 15102                           	opt callstack 0
 15103  018C6E                     ___flneg:
 15104                           	opt callstack 7
 15105                           
 15106                           ;stkvar	_f1 @ sp[(0)+-4]
 15107                           
 15108                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15109                           ;incstack = 0
 15110  018C6E  0EFC               	movlw	-4
 15111  018C70  50E3               	movf	plusw1,w,c
 15112  018C72  E10A               	bnz	u8020
 15113  018C74  0EFD               	movlw	-3
 15114  018C76  50E3               	movf	plusw1,w,c
 15115  018C78  E107               	bnz	u8020
 15116  018C7A  0EFE               	movlw	-2
 15117  018C7C  50E3               	movf	plusw1,w,c
 15118  018C7E  E104               	bnz	u8020
 15119  018C80  0EFF               	movlw	-1
 15120  018C82  50E3               	movf	plusw1,w,c
 15121  018C84  B4D8               	btfsc	status,2,c
 15122  018C86  D002               	goto	l8772
 15123  018C88                     u8020:
 15124                           
 15125                           ;stkvar	_f1 @ sp[(0)+-4]
 15126  018C88  0EFF               	movlw	-1
 15127  018C8A  7EE3               	btg	plusw1,7,c
 15128  018C8C                     l8772:
 15129                           
 15130                           ;stkvar	_f1 @ sp[(0)+-4]
 15131  018C8C  0EFC               	movlw	-4
 15132  018C8E  006F FF8C  F001    	movff	plusw1,btemp
 15133  018C94  0EFD               	movlw	-3
 15134  018C96  006F FF8C  F002    	movff	plusw1,btemp+1
 15135  018C9C  0EFE               	movlw	-2
 15136  018C9E  006F FF8C  F003    	movff	plusw1,btemp+2
 15137  018CA4  0EFF               	movlw	-1
 15138  018CA6  006F FF8C  F004    	movff	plusw1,btemp+3
 15139                           
 15140                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15141  018CAC  52E5               	movf	postdec1,f,c
 15142  018CAE  52E5               	movf	postdec1,f,c
 15143  018CB0  52E5               	movf	postdec1,f,c
 15144  018CB2  52E5               	movf	postdec1,f,c
 15145  018CB4  0012               	return		;funcret
 15146  018CB6                     __end_of___flneg:
 15147                           	opt callstack 0
 15148                           
 15149 ;; *************** function ___flge *****************
 15150 ;; Defined at:
 15151 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 15152 ;; Parameters:    Size  Location     Type
 15153 ;;  ff1             4  [STACK] long 
 15154 ;;  ff2             4  [STACK] long 
 15155 ;; Auto vars:     Size  Location     Type
 15156 ;;		None
 15157 ;; Return value:  Size  Location     Type
 15158 ;;		None               void
 15159 ;; Registers used:
 15160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15161 ;; Tracked objects:
 15162 ;;		On entry : 0/0
 15163 ;;		On exit  : 0/0
 15164 ;;		Unchanged: 0/0
 15165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15170 ;;Total ram usage:        0 bytes
 15171 ;; Hardware stack levels used:    1
 15172 ;; Hardware stack levels required when called:    7
 15173 ;; This function calls:
 15174 ;;		Nothing
 15175 ;; This function is called by:
 15176 ;;		_calc_bsoc
 15177 ;;		_efgtoa
 15178 ;; This function uses a reentrant model
 15179 ;;
 15180                           
 15181                           	psect	text57
 15182  016C08                     __ptext57:
 15183                           	opt callstack 0
 15184  016C08                     ___flge:
 15185                           	opt callstack 7
 15186                           
 15187                           ;stkvar	_ff1 @ sp[(0)+-4]
 15188                           
 15189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15190                           ;incstack = 0
 15191  016C08  50E1               	movf	fsr1l,w,c
 15192  016C0A  0FFC               	addlw	-4
 15193  016C0C  6ED9               	movwf	fsr2l,c
 15194  016C0E  50E2               	movf	fsr1h,w,c
 15195  016C10  6EDA               	movwf	fsr2h,c
 15196  016C12  0EFF               	movlw	255
 15197  016C14  22DA               	addwfc	fsr2h,f,c
 15198  016C16  0E00               	movlw	0
 15199  016C18  14DE               	andwf	postinc2,w,c
 15200  016C1A  6E09               	movwf	(btemp+8)^0,c
 15201  016C1C  0E00               	movlw	0
 15202  016C1E  14DE               	andwf	postinc2,w,c
 15203  016C20  6E0A               	movwf	(btemp+9)^0,c
 15204  016C22  0E80               	movlw	128
 15205  016C24  14DE               	andwf	postinc2,w,c
 15206  016C26  6E0B               	movwf	(btemp+10)^0,c
 15207  016C28  0E7F               	movlw	127
 15208  016C2A  14DE               	andwf	postinc2,w,c
 15209  016C2C  6E0C               	movwf	(btemp+11)^0,c
 15210  016C2E  5009               	movf	(btemp+8)^0,w,c
 15211  016C30  100A               	iorwf	(btemp+9)^0,w,c
 15212  016C32  100B               	iorwf	(btemp+10)^0,w,c
 15213  016C34  100C               	iorwf	(btemp+11)^0,w,c
 15214  016C36  A4D8               	btfss	status,2,c
 15215  016C38  D008               	goto	l8746
 15216                           
 15217                           ;stkvar	_ff1 @ sp[(0)+-4]
 15218  016C3A  0EFC               	movlw	-4
 15219  016C3C  6AE3               	clrf	plusw1,c
 15220  016C3E  0EFD               	movlw	-3
 15221  016C40  6AE3               	clrf	plusw1,c
 15222  016C42  0EFE               	movlw	-2
 15223  016C44  6AE3               	clrf	plusw1,c
 15224  016C46  0EFF               	movlw	-1
 15225  016C48  6AE3               	clrf	plusw1,c
 15226  016C4A                     l8746:
 15227                           
 15228                           ;stkvar	_ff2 @ sp[(0)+-8]
 15229  016C4A  50E1               	movf	fsr1l,w,c
 15230  016C4C  0FF8               	addlw	-8
 15231  016C4E  6ED9               	movwf	fsr2l,c
 15232  016C50  50E2               	movf	fsr1h,w,c
 15233  016C52  6EDA               	movwf	fsr2h,c
 15234  016C54  0EFF               	movlw	255
 15235  016C56  22DA               	addwfc	fsr2h,f,c
 15236  016C58  0E00               	movlw	0
 15237  016C5A  14DE               	andwf	postinc2,w,c
 15238  016C5C  6E09               	movwf	(btemp+8)^0,c
 15239  016C5E  0E00               	movlw	0
 15240  016C60  14DE               	andwf	postinc2,w,c
 15241  016C62  6E0A               	movwf	(btemp+9)^0,c
 15242  016C64  0E80               	movlw	128
 15243  016C66  14DE               	andwf	postinc2,w,c
 15244  016C68  6E0B               	movwf	(btemp+10)^0,c
 15245  016C6A  0E7F               	movlw	127
 15246  016C6C  14DE               	andwf	postinc2,w,c
 15247  016C6E  6E0C               	movwf	(btemp+11)^0,c
 15248  016C70  5009               	movf	(btemp+8)^0,w,c
 15249  016C72  100A               	iorwf	(btemp+9)^0,w,c
 15250  016C74  100B               	iorwf	(btemp+10)^0,w,c
 15251  016C76  100C               	iorwf	(btemp+11)^0,w,c
 15252  016C78  A4D8               	btfss	status,2,c
 15253  016C7A  D008               	goto	l2514
 15254                           
 15255                           ;stkvar	_ff2 @ sp[(0)+-8]
 15256  016C7C  0EF8               	movlw	-8
 15257  016C7E  6AE3               	clrf	plusw1,c
 15258  016C80  0EF9               	movlw	-7
 15259  016C82  6AE3               	clrf	plusw1,c
 15260  016C84  0EFA               	movlw	-6
 15261  016C86  6AE3               	clrf	plusw1,c
 15262  016C88  0EFB               	movlw	-5
 15263  016C8A  6AE3               	clrf	plusw1,c
 15264  016C8C                     l2514:
 15265                           
 15266                           ;stkvar	_ff1 @ sp[(0)+-4]
 15267  016C8C  0EFF               	movlw	-1
 15268  016C8E  AEE3               	btfss	plusw1,7,c
 15269  016C90  D024               	goto	l8752
 15270                           
 15271                           ;stkvar	_ff1 @ sp[(0)+-4]
 15272  016C92  0E00               	movlw	0
 15273  016C94  6E09               	movwf	(btemp+8)^0,c
 15274  016C96  0E00               	movlw	0
 15275  016C98  6E0A               	movwf	(btemp+9)^0,c
 15276  016C9A  0E00               	movlw	0
 15277  016C9C  6E0B               	movwf	(btemp+10)^0,c
 15278  016C9E  0E80               	movlw	128
 15279  016CA0  6E0C               	movwf	(btemp+11)^0,c
 15280  016CA2  0EFC               	movlw	-4
 15281  016CA4  50E3               	movf	plusw1,w,c
 15282  016CA6  5E09               	subwf	(btemp+8)^0,f,c
 15283  016CA8  0EFD               	movlw	-3
 15284  016CAA  50E3               	movf	plusw1,w,c
 15285  016CAC  5A0A               	subwfb	(btemp+9)^0,f,c
 15286  016CAE  0EFE               	movlw	-2
 15287  016CB0  50E3               	movf	plusw1,w,c
 15288  016CB2  5A0B               	subwfb	(btemp+10)^0,f,c
 15289  016CB4  0EFF               	movlw	-1
 15290  016CB6  50E3               	movf	plusw1,w,c
 15291  016CB8  5A0C               	subwfb	(btemp+11)^0,f,c
 15292                           
 15293                           ;stkvar	_ff1 @ sp[(0)+-4]
 15294  016CBA  0EFC               	movlw	-4
 15295  016CBC  0060  F027  FFE3   	movff	btemp+8,plusw1
 15296  016CC2  0EFD               	movlw	-3
 15297  016CC4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15298  016CCA  0EFE               	movlw	-2
 15299  016CCC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15300  016CD2  0EFF               	movlw	-1
 15301  016CD4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15302  016CDA                     l8752:
 15303                           
 15304                           ;stkvar	_ff2 @ sp[(0)+-8]
 15305  016CDA  0EFB               	movlw	-5
 15306  016CDC  AEE3               	btfss	plusw1,7,c
 15307  016CDE  D024               	goto	l8756
 15308                           
 15309                           ;stkvar	_ff2 @ sp[(0)+-8]
 15310  016CE0  0E00               	movlw	0
 15311  016CE2  6E09               	movwf	(btemp+8)^0,c
 15312  016CE4  0E00               	movlw	0
 15313  016CE6  6E0A               	movwf	(btemp+9)^0,c
 15314  016CE8  0E00               	movlw	0
 15315  016CEA  6E0B               	movwf	(btemp+10)^0,c
 15316  016CEC  0E80               	movlw	128
 15317  016CEE  6E0C               	movwf	(btemp+11)^0,c
 15318  016CF0  0EF8               	movlw	-8
 15319  016CF2  50E3               	movf	plusw1,w,c
 15320  016CF4  5E09               	subwf	(btemp+8)^0,f,c
 15321  016CF6  0EF9               	movlw	-7
 15322  016CF8  50E3               	movf	plusw1,w,c
 15323  016CFA  5A0A               	subwfb	(btemp+9)^0,f,c
 15324  016CFC  0EFA               	movlw	-6
 15325  016CFE  50E3               	movf	plusw1,w,c
 15326  016D00  5A0B               	subwfb	(btemp+10)^0,f,c
 15327  016D02  0EFB               	movlw	-5
 15328  016D04  50E3               	movf	plusw1,w,c
 15329  016D06  5A0C               	subwfb	(btemp+11)^0,f,c
 15330                           
 15331                           ;stkvar	_ff2 @ sp[(0)+-8]
 15332  016D08  0EF8               	movlw	-8
 15333  016D0A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15334  016D10  0EF9               	movlw	-7
 15335  016D12  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15336  016D18  0EFA               	movlw	-6
 15337  016D1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15338  016D20  0EFB               	movlw	-5
 15339  016D22  0060  F033  FFE3   	movff	btemp+11,plusw1
 15340  016D28                     l8756:
 15341                           
 15342                           ;stkvar	_ff1 @ sp[(0)+-4]
 15343  016D28  0EFF               	movlw	-1
 15344  016D2A  7EE3               	btg	plusw1,7,c
 15345                           
 15346                           ;stkvar	_ff2 @ sp[(0)+-8]
 15347  016D2C  0EFB               	movlw	-5
 15348  016D2E  7EE3               	btg	plusw1,7,c
 15349                           
 15350                           ;stkvar	_ff2 @ sp[(0)+-8]
 15351                           ;stkvar	_ff1 @ sp[(0)+-4]
 15352  016D30  50E1               	movf	fsr1l,w,c
 15353  016D32  0FFC               	addlw	-4
 15354  016D34  6ED9               	movwf	fsr2l,c
 15355  016D36  50E2               	movf	fsr1h,w,c
 15356  016D38  6EDA               	movwf	fsr2h,c
 15357  016D3A  0EFF               	movlw	255
 15358  016D3C  22DA               	addwfc	fsr2h,f,c
 15359  016D3E  0EF8               	movlw	-8
 15360  016D40  50E3               	movf	plusw1,w,c
 15361  016D42  5CDE               	subwf	postinc2,w,c
 15362  016D44  0EF9               	movlw	-7
 15363  016D46  50E3               	movf	plusw1,w,c
 15364  016D48  58DE               	subwfb	postinc2,w,c
 15365  016D4A  0EFA               	movlw	-6
 15366  016D4C  50E3               	movf	plusw1,w,c
 15367  016D4E  58DE               	subwfb	postinc2,w,c
 15368  016D50  0EFB               	movlw	-5
 15369  016D52  50E3               	movf	plusw1,w,c
 15370  016D54  58DE               	subwfb	postinc2,w,c
 15371  016D56  B0D8               	btfsc	status,0,c
 15372  016D58  D002               	goto	l8764
 15373  016D5A  9001               	bcf	btemp& (0+255),0,c
 15374  016D5C  D001               	goto	l2521
 15375  016D5E                     l8764:
 15376  016D5E  8001               	bsf	btemp& (0+255),0,c
 15377  016D60                     l2521:
 15378                           
 15379                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15380  016D60  0EF8               	movlw	248
 15381  016D62  26E1               	addwf	fsr1l,f,c
 15382  016D64  0EFF               	movlw	255
 15383  016D66  22E2               	addwfc	fsr1h,f,c
 15384  016D68  0012               	return		;funcret
 15385  016D6A                     __end_of___flge:
 15386                           	opt callstack 0
 15387                           
 15388 ;; *************** function ___fleq *****************
 15389 ;; Defined at:
 15390 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 15391 ;; Parameters:    Size  Location     Type
 15392 ;;  ff1             4  [STACK] long 
 15393 ;;  ff2             4  [STACK] long 
 15394 ;; Auto vars:     Size  Location     Type
 15395 ;;		None
 15396 ;; Return value:  Size  Location     Type
 15397 ;;		None               void
 15398 ;; Registers used:
 15399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15400 ;; Tracked objects:
 15401 ;;		On entry : 0/0
 15402 ;;		On exit  : 0/0
 15403 ;;		Unchanged: 0/0
 15404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15409 ;;Total ram usage:        0 bytes
 15410 ;; Hardware stack levels used:    1
 15411 ;; Hardware stack levels required when called:    7
 15412 ;; This function calls:
 15413 ;;		Nothing
 15414 ;; This function is called by:
 15415 ;;		_efgtoa
 15416 ;; This function uses a reentrant model
 15417 ;;
 15418                           
 15419                           	psect	text58
 15420  017CCC                     __ptext58:
 15421                           	opt callstack 0
 15422  017CCC                     ___fleq:
 15423                           	opt callstack 16
 15424                           
 15425                           ;stkvar	_ff1 @ sp[(0)+-4]
 15426                           
 15427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15428                           ;incstack = 0
 15429  017CCC  50E1               	movf	fsr1l,w,c
 15430  017CCE  0FFC               	addlw	-4
 15431  017CD0  6ED9               	movwf	fsr2l,c
 15432  017CD2  50E2               	movf	fsr1h,w,c
 15433  017CD4  6EDA               	movwf	fsr2h,c
 15434  017CD6  0EFF               	movlw	255
 15435  017CD8  22DA               	addwfc	fsr2h,f,c
 15436  017CDA  0E00               	movlw	0
 15437  017CDC  14DE               	andwf	postinc2,w,c
 15438  017CDE  6E09               	movwf	(btemp+8)^0,c
 15439  017CE0  0E00               	movlw	0
 15440  017CE2  14DE               	andwf	postinc2,w,c
 15441  017CE4  6E0A               	movwf	(btemp+9)^0,c
 15442  017CE6  0E80               	movlw	128
 15443  017CE8  14DE               	andwf	postinc2,w,c
 15444  017CEA  6E0B               	movwf	(btemp+10)^0,c
 15445  017CEC  0E7F               	movlw	127
 15446  017CEE  14DE               	andwf	postinc2,w,c
 15447  017CF0  6E0C               	movwf	(btemp+11)^0,c
 15448  017CF2  5009               	movf	(btemp+8)^0,w,c
 15449  017CF4  100A               	iorwf	(btemp+9)^0,w,c
 15450  017CF6  100B               	iorwf	(btemp+10)^0,w,c
 15451  017CF8  100C               	iorwf	(btemp+11)^0,w,c
 15452  017CFA  A4D8               	btfss	status,2,c
 15453  017CFC  D008               	goto	l7212
 15454                           
 15455                           ;stkvar	_ff1 @ sp[(0)+-4]
 15456  017CFE  0EFC               	movlw	-4
 15457  017D00  6AE3               	clrf	plusw1,c
 15458  017D02  0EFD               	movlw	-3
 15459  017D04  6AE3               	clrf	plusw1,c
 15460  017D06  0EFE               	movlw	-2
 15461  017D08  6AE3               	clrf	plusw1,c
 15462  017D0A  0EFF               	movlw	-1
 15463  017D0C  6AE3               	clrf	plusw1,c
 15464  017D0E                     l7212:
 15465                           
 15466                           ;stkvar	_ff2 @ sp[(0)+-8]
 15467  017D0E  50E1               	movf	fsr1l,w,c
 15468  017D10  0FF8               	addlw	-8
 15469  017D12  6ED9               	movwf	fsr2l,c
 15470  017D14  50E2               	movf	fsr1h,w,c
 15471  017D16  6EDA               	movwf	fsr2h,c
 15472  017D18  0EFF               	movlw	255
 15473  017D1A  22DA               	addwfc	fsr2h,f,c
 15474  017D1C  0E00               	movlw	0
 15475  017D1E  14DE               	andwf	postinc2,w,c
 15476  017D20  6E09               	movwf	(btemp+8)^0,c
 15477  017D22  0E00               	movlw	0
 15478  017D24  14DE               	andwf	postinc2,w,c
 15479  017D26  6E0A               	movwf	(btemp+9)^0,c
 15480  017D28  0E80               	movlw	128
 15481  017D2A  14DE               	andwf	postinc2,w,c
 15482  017D2C  6E0B               	movwf	(btemp+10)^0,c
 15483  017D2E  0E7F               	movlw	127
 15484  017D30  14DE               	andwf	postinc2,w,c
 15485  017D32  6E0C               	movwf	(btemp+11)^0,c
 15486  017D34  5009               	movf	(btemp+8)^0,w,c
 15487  017D36  100A               	iorwf	(btemp+9)^0,w,c
 15488  017D38  100B               	iorwf	(btemp+10)^0,w,c
 15489  017D3A  100C               	iorwf	(btemp+11)^0,w,c
 15490  017D3C  A4D8               	btfss	status,2,c
 15491  017D3E  D008               	goto	l7216
 15492                           
 15493                           ;stkvar	_ff2 @ sp[(0)+-8]
 15494  017D40  0EF8               	movlw	-8
 15495  017D42  6AE3               	clrf	plusw1,c
 15496  017D44  0EF9               	movlw	-7
 15497  017D46  6AE3               	clrf	plusw1,c
 15498  017D48  0EFA               	movlw	-6
 15499  017D4A  6AE3               	clrf	plusw1,c
 15500  017D4C  0EFB               	movlw	-5
 15501  017D4E  6AE3               	clrf	plusw1,c
 15502  017D50                     l7216:
 15503                           
 15504                           ;stkvar	_ff2 @ sp[(0)+-8]
 15505                           ;stkvar	_ff1 @ sp[(0)+-4]
 15506  017D50  50E1               	movf	fsr1l,w,c
 15507  017D52  0FFC               	addlw	-4
 15508  017D54  6ED9               	movwf	fsr2l,c
 15509  017D56  50E2               	movf	fsr1h,w,c
 15510  017D58  6EDA               	movwf	fsr2h,c
 15511  017D5A  0EFF               	movlw	255
 15512  017D5C  22DA               	addwfc	fsr2h,f,c
 15513  017D5E  0EF8               	movlw	-8
 15514  017D60  50E3               	movf	plusw1,w,c
 15515  017D62  18DE               	xorwf	postinc2,w,c
 15516  017D64  E10D               	bnz	u5540
 15517  017D66  0EF9               	movlw	-7
 15518  017D68  50E3               	movf	plusw1,w,c
 15519  017D6A  18DE               	xorwf	postinc2,w,c
 15520  017D6C  E109               	bnz	u5540
 15521  017D6E  0EFA               	movlw	-6
 15522  017D70  50E3               	movf	plusw1,w,c
 15523  017D72  18DE               	xorwf	postinc2,w,c
 15524  017D74  E105               	bnz	u5540
 15525  017D76  0EFB               	movlw	-5
 15526  017D78  50E3               	movf	plusw1,w,c
 15527  017D7A  18DE               	xorwf	postinc2,w,c
 15528  017D7C  B4D8               	btfsc	status,2,c
 15529  017D7E  D002               	goto	l7220
 15530  017D80                     u5540:
 15531  017D80  9001               	bcf	btemp& (0+255),0,c
 15532  017D82  D001               	goto	l2510
 15533  017D84                     l7220:
 15534  017D84  8001               	bsf	btemp& (0+255),0,c
 15535  017D86                     l2510:
 15536                           
 15537                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15538  017D86  0EF8               	movlw	248
 15539  017D88  26E1               	addwf	fsr1l,f,c
 15540  017D8A  0EFF               	movlw	255
 15541  017D8C  22E2               	addwfc	fsr1h,f,c
 15542  017D8E  0012               	return		;funcret
 15543  017D90                     __end_of___fleq:
 15544                           	opt callstack 0
 15545                           
 15546 ;; *************** function ___fldiv *****************
 15547 ;; Defined at:
 15548 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 15549 ;; Parameters:    Size  Location     Type
 15550 ;;  b               4  [STACK] long 
 15551 ;;  a               4  [STACK] long 
 15552 ;; Auto vars:     Size  Location     Type
 15553 ;;  grs             4  [STACK] unsigned long 
 15554 ;;  rem             4  [STACK] unsigned long 
 15555 ;;  new_exp         2  [STACK] short 
 15556 ;;  aexp            1  [STACK] unsigned char 
 15557 ;;  bexp            1  [STACK] unsigned char 
 15558 ;;  sign            1  [STACK] unsigned char 
 15559 ;; Return value:  Size  Location     Type
 15560 ;;                  4  [STACK] unsigned char 
 15561 ;; Registers used:
 15562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15563 ;; Tracked objects:
 15564 ;;		On entry : 0/2
 15565 ;;		On exit  : 0/0
 15566 ;;		Unchanged: 0/0
 15567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15572 ;;Total ram usage:        0 bytes
 15573 ;; Hardware stack levels used:    1
 15574 ;; Hardware stack levels required when called:    7
 15575 ;; This function calls:
 15576 ;;		Nothing
 15577 ;; This function is called by:
 15578 ;;		_conv_raw_result
 15579 ;;		_calc_bsoc
 15580 ;;		_efgtoa
 15581 ;; This function uses a reentrant model
 15582 ;;
 15583                           
 15584                           	psect	text59
 15585  013BDE                     __ptext59:
 15586                           	opt callstack 0
 15587  013BDE                     ___fldiv:
 15588                           	opt callstack 0
 15589                           
 15590                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15591  013BDE  0E0D               	movlw	13
 15592  013BE0  26E1               	addwf	fsr1l,f,c
 15593  013BE2  0E00               	movlw	0
 15594  013BE4  22E2               	addwfc	fsr1h,f,c
 15595                           
 15596                           ;stkvar	_b @ sp[(-13)+-4]
 15597                           
 15598                           ;incstack = 0
 15599  013BE6  0EF2               	movlw	242
 15600  013BE8  24E1               	addwf	fsr1l,w,c
 15601  013BEA  6ED9               	movwf	fsr2l,c
 15602  013BEC  0EFF               	movlw	255
 15603  013BEE  20E2               	addwfc	fsr1h,w,c
 15604  013BF0  6EDA               	movwf	fsr2h,c
 15605  013BF2  50DF               	movf	indf2,w,c
 15606  013BF4  6E0C               	movwf	(btemp+11)^0,c
 15607  013BF6  0E80               	movlw	128
 15608  013BF8  160C               	andwf	(btemp+11)^0,f,c
 15609                           
 15610                           ;stkvar	_sign @ sp[(-13)+12]
 15611  013BFA  0EFF               	movlw	-1
 15612  013BFC  0060  F033  FFE3   	movff	btemp+11,plusw1
 15613                           
 15614                           ;stkvar	_b @ sp[(-13)+-4]
 15615  013C02  0EF2               	movlw	242
 15616  013C04  24E1               	addwf	fsr1l,w,c
 15617  013C06  6ED9               	movwf	fsr2l,c
 15618  013C08  0EFF               	movlw	255
 15619  013C0A  20E2               	addwfc	fsr1h,w,c
 15620  013C0C  6EDA               	movwf	fsr2h,c
 15621  013C0E  50DF               	movf	indf2,w,c
 15622  013C10  6E0C               	movwf	(btemp+11)^0,c
 15623  013C12  90D8               	bcf	status,0,c
 15624  013C14  340C               	rlcf	(btemp+11)^0,w,c
 15625  013C16  6E0B               	movwf	(btemp+10)^0,c
 15626                           
 15627                           ;stkvar	_bexp @ sp[(-13)+11]
 15628  013C18  0EFE               	movlw	-2
 15629  013C1A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15630                           
 15631                           ;stkvar	_b @ sp[(-13)+-4]
 15632  013C20  0EF1               	movlw	241
 15633  013C22  24E1               	addwf	fsr1l,w,c
 15634  013C24  6ED9               	movwf	fsr2l,c
 15635  013C26  0EFF               	movlw	255
 15636  013C28  20E2               	addwfc	fsr1h,w,c
 15637  013C2A  6EDA               	movwf	fsr2h,c
 15638  013C2C  AEDF               	btfss	indf2,7,c
 15639  013C2E  D002               	goto	l8438
 15640                           
 15641                           ;stkvar	_bexp @ sp[(-13)+11]
 15642  013C30  0EFE               	movlw	-2
 15643  013C32  80E3               	bsf	plusw1,0,c
 15644  013C34                     l8438:
 15645                           
 15646                           ;stkvar	_bexp @ sp[(-13)+11]
 15647  013C34  0EFE               	movlw	-2
 15648  013C36  50E3               	movf	plusw1,w,c
 15649  013C38  B4D8               	btfsc	status,2,c
 15650  013C3A  D027               	goto	l8448
 15651                           
 15652                           ;stkvar	_bexp @ sp[(-13)+11]
 15653  013C3C  0EFE               	movlw	-2
 15654  013C3E  28E3               	incf	plusw1,w,c
 15655  013C40  A4D8               	btfss	status,2,c
 15656  013C42  D018               	goto	l8444
 15657  013C44  0E00               	movlw	0
 15658  013C46  6E09               	movwf	(btemp+8)^0,c
 15659  013C48  0E00               	movlw	0
 15660  013C4A  6E0A               	movwf	(btemp+9)^0,c
 15661  013C4C  0E00               	movlw	0
 15662  013C4E  6E0B               	movwf	(btemp+10)^0,c
 15663  013C50  0E00               	movlw	0
 15664  013C52  6E0C               	movwf	(btemp+11)^0,c
 15665                           
 15666                           ;stkvar	_b @ sp[(-13)+-4]
 15667  013C54  0EEF               	movlw	-17
 15668  013C56  0060  F027  FFE3   	movff	btemp+8,plusw1
 15669  013C5C  0EF0               	movlw	-16
 15670  013C5E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15671  013C64  0EF1               	movlw	-15
 15672  013C66  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15673  013C6C  0EF2               	movlw	-14
 15674  013C6E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15675  013C74                     l8444:
 15676                           
 15677                           ;stkvar	_b @ sp[(-13)+-4]
 15678  013C74  0EF1               	movlw	-15
 15679  013C76  8EE3               	bsf	plusw1,7,c
 15680                           
 15681                           ;stkvar	_b @ sp[(-13)+-4]
 15682  013C78  0EF2               	movlw	242
 15683  013C7A  24E1               	addwf	fsr1l,w,c
 15684  013C7C  6ED9               	movwf	fsr2l,c
 15685  013C7E  0EFF               	movlw	255
 15686  013C80  20E2               	addwfc	fsr1h,w,c
 15687  013C82  6EDA               	movwf	fsr2h,c
 15688  013C84  0E00               	movlw	0
 15689  013C86  6EDF               	movwf	indf2,c
 15690  013C88  D018               	goto	l8450
 15691  013C8A                     l8448:
 15692  013C8A  0E00               	movlw	0
 15693  013C8C  6E09               	movwf	(btemp+8)^0,c
 15694  013C8E  0E00               	movlw	0
 15695  013C90  6E0A               	movwf	(btemp+9)^0,c
 15696  013C92  0E00               	movlw	0
 15697  013C94  6E0B               	movwf	(btemp+10)^0,c
 15698  013C96  0E00               	movlw	0
 15699  013C98  6E0C               	movwf	(btemp+11)^0,c
 15700                           
 15701                           ;stkvar	_b @ sp[(-13)+-4]
 15702  013C9A  0EEF               	movlw	-17
 15703  013C9C  0060  F027  FFE3   	movff	btemp+8,plusw1
 15704  013CA2  0EF0               	movlw	-16
 15705  013CA4  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15706  013CAA  0EF1               	movlw	-15
 15707  013CAC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15708  013CB2  0EF2               	movlw	-14
 15709  013CB4  0060  F033  FFE3   	movff	btemp+11,plusw1
 15710  013CBA                     l8450:
 15711                           
 15712                           ;stkvar	_a @ sp[(-13)+-8]
 15713  013CBA  0EEE               	movlw	238
 15714  013CBC  24E1               	addwf	fsr1l,w,c
 15715  013CBE  6ED9               	movwf	fsr2l,c
 15716  013CC0  0EFF               	movlw	255
 15717  013CC2  20E2               	addwfc	fsr1h,w,c
 15718  013CC4  6EDA               	movwf	fsr2h,c
 15719  013CC6  50DF               	movf	indf2,w,c
 15720  013CC8  6E0C               	movwf	(btemp+11)^0,c
 15721  013CCA  0E80               	movlw	128
 15722  013CCC  160C               	andwf	(btemp+11)^0,f,c
 15723                           
 15724                           ;stkvar	_sign @ sp[(-13)+12]
 15725  013CCE  50E1               	movf	fsr1l,w,c
 15726  013CD0  0FFF               	addlw	-1
 15727  013CD2  6ED9               	movwf	fsr2l,c
 15728  013CD4  50E2               	movf	fsr1h,w,c
 15729  013CD6  6EDA               	movwf	fsr2h,c
 15730  013CD8  0EFF               	movlw	255
 15731  013CDA  22DA               	addwfc	fsr2h,f,c
 15732  013CDC  500C               	movf	(btemp+11)^0,w,c
 15733  013CDE  1ADF               	xorwf	indf2,f,c
 15734                           
 15735                           ;stkvar	_a @ sp[(-13)+-8]
 15736  013CE0  0EEE               	movlw	238
 15737  013CE2  24E1               	addwf	fsr1l,w,c
 15738  013CE4  6ED9               	movwf	fsr2l,c
 15739  013CE6  0EFF               	movlw	255
 15740  013CE8  20E2               	addwfc	fsr1h,w,c
 15741  013CEA  6EDA               	movwf	fsr2h,c
 15742  013CEC  50DF               	movf	indf2,w,c
 15743  013CEE  6E0C               	movwf	(btemp+11)^0,c
 15744  013CF0  90D8               	bcf	status,0,c
 15745  013CF2  340C               	rlcf	(btemp+11)^0,w,c
 15746  013CF4  6E0B               	movwf	(btemp+10)^0,c
 15747                           
 15748                           ;stkvar	_aexp @ sp[(-13)+10]
 15749  013CF6  0EFD               	movlw	-3
 15750  013CF8  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15751                           
 15752                           ;stkvar	_a @ sp[(-13)+-8]
 15753  013CFE  0EED               	movlw	237
 15754  013D00  24E1               	addwf	fsr1l,w,c
 15755  013D02  6ED9               	movwf	fsr2l,c
 15756  013D04  0EFF               	movlw	255
 15757  013D06  20E2               	addwfc	fsr1h,w,c
 15758  013D08  6EDA               	movwf	fsr2h,c
 15759  013D0A  AEDF               	btfss	indf2,7,c
 15760  013D0C  D002               	goto	l8458
 15761                           
 15762                           ;stkvar	_aexp @ sp[(-13)+10]
 15763  013D0E  0EFD               	movlw	-3
 15764  013D10  80E3               	bsf	plusw1,0,c
 15765  013D12                     l8458:
 15766                           
 15767                           ;stkvar	_aexp @ sp[(-13)+10]
 15768  013D12  0EFD               	movlw	-3
 15769  013D14  50E3               	movf	plusw1,w,c
 15770  013D16  B4D8               	btfsc	status,2,c
 15771  013D18  D027               	goto	l8468
 15772                           
 15773                           ;stkvar	_aexp @ sp[(-13)+10]
 15774  013D1A  0EFD               	movlw	-3
 15775  013D1C  28E3               	incf	plusw1,w,c
 15776  013D1E  A4D8               	btfss	status,2,c
 15777  013D20  D018               	goto	l8464
 15778  013D22  0E00               	movlw	0
 15779  013D24  6E09               	movwf	(btemp+8)^0,c
 15780  013D26  0E00               	movlw	0
 15781  013D28  6E0A               	movwf	(btemp+9)^0,c
 15782  013D2A  0E00               	movlw	0
 15783  013D2C  6E0B               	movwf	(btemp+10)^0,c
 15784  013D2E  0E00               	movlw	0
 15785  013D30  6E0C               	movwf	(btemp+11)^0,c
 15786                           
 15787                           ;stkvar	_a @ sp[(-13)+-8]
 15788  013D32  0EEB               	movlw	-21
 15789  013D34  0060  F027  FFE3   	movff	btemp+8,plusw1
 15790  013D3A  0EEC               	movlw	-20
 15791  013D3C  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15792  013D42  0EED               	movlw	-19
 15793  013D44  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15794  013D4A  0EEE               	movlw	-18
 15795  013D4C  0060  F033  FFE3   	movff	btemp+11,plusw1
 15796  013D52                     l8464:
 15797                           
 15798                           ;stkvar	_a @ sp[(-13)+-8]
 15799  013D52  0EED               	movlw	-19
 15800  013D54  8EE3               	bsf	plusw1,7,c
 15801                           
 15802                           ;stkvar	_a @ sp[(-13)+-8]
 15803  013D56  0EEE               	movlw	238
 15804  013D58  24E1               	addwf	fsr1l,w,c
 15805  013D5A  6ED9               	movwf	fsr2l,c
 15806  013D5C  0EFF               	movlw	255
 15807  013D5E  20E2               	addwfc	fsr1h,w,c
 15808  013D60  6EDA               	movwf	fsr2h,c
 15809  013D62  0E00               	movlw	0
 15810  013D64  6EDF               	movwf	indf2,c
 15811  013D66  D018               	goto	l8470
 15812  013D68                     l8468:
 15813  013D68  0E00               	movlw	0
 15814  013D6A  6E09               	movwf	(btemp+8)^0,c
 15815  013D6C  0E00               	movlw	0
 15816  013D6E  6E0A               	movwf	(btemp+9)^0,c
 15817  013D70  0E00               	movlw	0
 15818  013D72  6E0B               	movwf	(btemp+10)^0,c
 15819  013D74  0E00               	movlw	0
 15820  013D76  6E0C               	movwf	(btemp+11)^0,c
 15821                           
 15822                           ;stkvar	_a @ sp[(-13)+-8]
 15823  013D78  0EEB               	movlw	-21
 15824  013D7A  0060  F027  FFE3   	movff	btemp+8,plusw1
 15825  013D80  0EEC               	movlw	-20
 15826  013D82  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15827  013D88  0EED               	movlw	-19
 15828  013D8A  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15829  013D90  0EEE               	movlw	-18
 15830  013D92  0060  F033  FFE3   	movff	btemp+11,plusw1
 15831  013D98                     l8470:
 15832                           
 15833                           ;stkvar	_a @ sp[(-13)+-8]
 15834  013D98  0EEB               	movlw	-21
 15835  013D9A  50E3               	movf	plusw1,w,c
 15836  013D9C  E139               	bnz	l8482
 15837  013D9E  0EEC               	movlw	-20
 15838  013DA0  50E3               	movf	plusw1,w,c
 15839  013DA2  E136               	bnz	l8482
 15840  013DA4  0EED               	movlw	-19
 15841  013DA6  50E3               	movf	plusw1,w,c
 15842  013DA8  E133               	bnz	l8482
 15843  013DAA  0EEE               	movlw	-18
 15844  013DAC  50E3               	movf	plusw1,w,c
 15845  013DAE  A4D8               	btfss	status,2,c
 15846  013DB0  D02F               	goto	l8482
 15847                           
 15848                           ;stkvar	_b @ sp[(-13)+-4]
 15849  013DB2  0EEF               	movlw	-17
 15850  013DB4  6AE3               	clrf	plusw1,c
 15851  013DB6  0EF0               	movlw	-16
 15852  013DB8  6AE3               	clrf	plusw1,c
 15853  013DBA  0EF1               	movlw	-15
 15854  013DBC  6AE3               	clrf	plusw1,c
 15855  013DBE  0EF2               	movlw	-14
 15856  013DC0  6AE3               	clrf	plusw1,c
 15857                           
 15858                           ;stkvar	_b @ sp[(-13)+-4]
 15859  013DC2  0EF1               	movlw	241
 15860  013DC4  24E1               	addwf	fsr1l,w,c
 15861  013DC6  6ED9               	movwf	fsr2l,c
 15862  013DC8  0EFF               	movlw	255
 15863  013DCA  20E2               	addwfc	fsr1h,w,c
 15864  013DCC  6EDA               	movwf	fsr2h,c
 15865  013DCE  0E80               	movlw	128
 15866  013DD0  12DE               	iorwf	postinc2,f,c
 15867  013DD2  0E7F               	movlw	127
 15868  013DD4  12DD               	iorwf	postdec2,f,c
 15869  013DD6                     l8476:
 15870                           
 15871                           ;stkvar	_sign @ sp[(-13)+12]
 15872  013DD6  0EFF               	movlw	-1
 15873  013DD8  006F FF8C  F00C    	movff	plusw1,btemp+11
 15874                           
 15875                           ;stkvar	_b @ sp[(-13)+-4]
 15876  013DDE  0EF2               	movlw	242
 15877  013DE0  24E1               	addwf	fsr1l,w,c
 15878  013DE2  6ED9               	movwf	fsr2l,c
 15879  013DE4  0EFF               	movlw	255
 15880  013DE6  20E2               	addwfc	fsr1h,w,c
 15881  013DE8  6EDA               	movwf	fsr2h,c
 15882  013DEA  500C               	movf	(btemp+11)^0,w,c
 15883  013DEC  12DF               	iorwf	indf2,f,c
 15884                           
 15885                           ;stkvar	_b @ sp[(-13)+-4]
 15886  013DEE  0EEF               	movlw	-17
 15887  013DF0  006F FF8C  F001    	movff	plusw1,btemp
 15888  013DF6  0EF0               	movlw	-16
 15889  013DF8  006F FF8C  F002    	movff	plusw1,btemp+1
 15890  013DFE  0EF1               	movlw	-15
 15891  013E00  006F FF8C  F003    	movff	plusw1,btemp+2
 15892  013E06  0EF2               	movlw	-14
 15893  013E08  006F FF8C  F004    	movff	plusw1,btemp+3
 15894  013E0E  D19F               	goto	l2833
 15895  013E10                     l8482:
 15896                           
 15897                           ;stkvar	_bexp @ sp[(-13)+11]
 15898  013E10  0EFE               	movlw	-2
 15899  013E12  50E3               	movf	plusw1,w,c
 15900  013E14  A4D8               	btfss	status,2,c
 15901  013E16  D009               	goto	l8490
 15902  013E18  0E00               	movlw	0
 15903  013E1A  6E01               	movwf	btemp^0,c
 15904  013E1C  0E00               	movlw	0
 15905  013E1E  6E02               	movwf	(btemp+1)^0,c
 15906  013E20  0E00               	movlw	0
 15907  013E22  6E03               	movwf	(btemp+2)^0,c
 15908  013E24  0E00               	movlw	0
 15909  013E26  6E04               	movwf	(btemp+3)^0,c
 15910  013E28  D192               	goto	l2833
 15911  013E2A                     l8490:
 15912                           
 15913                           ;stkvar	_bexp @ sp[(-13)+11]
 15914  013E2A  0EFE               	movlw	-2
 15915  013E2C  50E3               	movf	plusw1,w,c
 15916  013E2E  6E0B               	movwf	(btemp+10)^0,c
 15917  013E30  6A0C               	clrf	(btemp+11)^0,c
 15918                           
 15919                           ;stkvar	_aexp @ sp[(-13)+10]
 15920  013E32  0EFD               	movlw	-3
 15921  013E34  50E3               	movf	plusw1,w,c
 15922  013E36  5E0B               	subwf	(btemp+10)^0,f,c
 15923  013E38  0E00               	movlw	0
 15924  013E3A  5A0C               	subwfb	(btemp+11)^0,f,c
 15925  013E3C  0E7F               	movlw	127
 15926  013E3E  260B               	addwf	(btemp+10)^0,f,c
 15927  013E40  0E00               	movlw	0
 15928  013E42  220C               	addwfc	(btemp+11)^0,f,c
 15929                           
 15930                           ;stkvar	_new_exp @ sp[(-13)+8]
 15931  013E44  0EFB               	movlw	-5
 15932  013E46  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15933  013E4C  0EFC               	movlw	-4
 15934  013E4E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15935                           
 15936                           ;stkvar	_b @ sp[(-13)+-4]
 15937  013E54  0EEF               	movlw	-17
 15938  013E56  006F FF8C  F009    	movff	plusw1,btemp+8
 15939  013E5C  0EF0               	movlw	-16
 15940  013E5E  006F FF8C  F00A    	movff	plusw1,btemp+9
 15941  013E64  0EF1               	movlw	-15
 15942  013E66  006F FF8C  F00B    	movff	plusw1,btemp+10
 15943  013E6C  0EF2               	movlw	-14
 15944  013E6E  006F FF8C  F00C    	movff	plusw1,btemp+11
 15945                           
 15946                           ;stkvar	_rem @ sp[(-13)+4]
 15947  013E74  0EF7               	movlw	-9
 15948  013E76  0060  F027  FFE3   	movff	btemp+8,plusw1
 15949  013E7C  0EF8               	movlw	-8
 15950  013E7E  0060  F02B  FFE3   	movff	btemp+9,plusw1
 15951  013E84  0EF9               	movlw	-7
 15952  013E86  0060  F02F  FFE3   	movff	btemp+10,plusw1
 15953  013E8C  0EFA               	movlw	-6
 15954  013E8E  0060  F033  FFE3   	movff	btemp+11,plusw1
 15955                           
 15956                           ;stkvar	_b @ sp[(-13)+-4]
 15957  013E94  0EEF               	movlw	-17
 15958  013E96  6AE3               	clrf	plusw1,c
 15959  013E98  0EF0               	movlw	-16
 15960  013E9A  6AE3               	clrf	plusw1,c
 15961  013E9C  0EF1               	movlw	-15
 15962  013E9E  6AE3               	clrf	plusw1,c
 15963  013EA0  0EF2               	movlw	-14
 15964  013EA2  6AE3               	clrf	plusw1,c
 15965                           
 15966                           ;stkvar	_grs @ sp[(-13)+0]
 15967  013EA4  0EF3               	movlw	-13
 15968  013EA6  6AE3               	clrf	plusw1,c
 15969  013EA8  0EF4               	movlw	-12
 15970  013EAA  6AE3               	clrf	plusw1,c
 15971  013EAC  0EF5               	movlw	-11
 15972  013EAE  6AE3               	clrf	plusw1,c
 15973  013EB0  0EF6               	movlw	-10
 15974  013EB2  6AE3               	clrf	plusw1,c
 15975                           
 15976                           ;stkvar	_aexp @ sp[(-13)+10]
 15977  013EB4  0EFD               	movlw	-3
 15978  013EB6  6AE3               	clrf	plusw1,c
 15979  013EB8  D050               	goto	l8518
 15980  013EBA                     l8500:
 15981                           
 15982                           ;stkvar	_aexp @ sp[(-13)+10]
 15983  013EBA  0EFD               	movlw	-3
 15984  013EBC  50E3               	movf	plusw1,w,c
 15985  013EBE  B4D8               	btfsc	status,2,c
 15986  013EC0  D020               	goto	l8510
 15987                           
 15988                           ;stkvar	_rem @ sp[(-13)+4]
 15989  013EC2  90D8               	bcf	status,0,c
 15990  013EC4  0EF7               	movlw	-9
 15991  013EC6  36E3               	rlcf	plusw1,f,c
 15992  013EC8  0EF8               	movlw	-8
 15993  013ECA  36E3               	rlcf	plusw1,f,c
 15994  013ECC  0EF9               	movlw	-7
 15995  013ECE  36E3               	rlcf	plusw1,f,c
 15996  013ED0  0EFA               	movlw	-6
 15997  013ED2  36E3               	rlcf	plusw1,f,c
 15998                           
 15999                           ;stkvar	_b @ sp[(-13)+-4]
 16000  013ED4  90D8               	bcf	status,0,c
 16001  013ED6  0EEF               	movlw	-17
 16002  013ED8  36E3               	rlcf	plusw1,f,c
 16003  013EDA  0EF0               	movlw	-16
 16004  013EDC  36E3               	rlcf	plusw1,f,c
 16005  013EDE  0EF1               	movlw	-15
 16006  013EE0  36E3               	rlcf	plusw1,f,c
 16007  013EE2  0EF2               	movlw	-14
 16008  013EE4  36E3               	rlcf	plusw1,f,c
 16009                           
 16010                           ;stkvar	_grs @ sp[(-13)+0]
 16011  013EE6  0EF6               	movlw	-10
 16012  013EE8  AEE3               	btfss	plusw1,7,c
 16013  013EEA  D002               	goto	l8508
 16014                           
 16015                           ;stkvar	_b @ sp[(-13)+-4]
 16016  013EEC  0EEF               	movlw	-17
 16017  013EEE  80E3               	bsf	plusw1,0,c
 16018  013EF0                     l8508:
 16019                           
 16020                           ;stkvar	_grs @ sp[(-13)+0]
 16021  013EF0  90D8               	bcf	status,0,c
 16022  013EF2  0EF3               	movlw	-13
 16023  013EF4  36E3               	rlcf	plusw1,f,c
 16024  013EF6  0EF4               	movlw	-12
 16025  013EF8  36E3               	rlcf	plusw1,f,c
 16026  013EFA  0EF5               	movlw	-11
 16027  013EFC  36E3               	rlcf	plusw1,f,c
 16028  013EFE  0EF6               	movlw	-10
 16029  013F00  36E3               	rlcf	plusw1,f,c
 16030  013F02                     l8510:
 16031                           
 16032                           ;stkvar	_a @ sp[(-13)+-8]
 16033                           ;stkvar	_rem @ sp[(-13)+4]
 16034  013F02  50E1               	movf	fsr1l,w,c
 16035  013F04  0FF7               	addlw	-9
 16036  013F06  6ED9               	movwf	fsr2l,c
 16037  013F08  50E2               	movf	fsr1h,w,c
 16038  013F0A  6EDA               	movwf	fsr2h,c
 16039  013F0C  0EFF               	movlw	255
 16040  013F0E  22DA               	addwfc	fsr2h,f,c
 16041  013F10  0EEB               	movlw	-21
 16042  013F12  50E3               	movf	plusw1,w,c
 16043  013F14  5CDE               	subwf	postinc2,w,c
 16044  013F16  0EEC               	movlw	-20
 16045  013F18  50E3               	movf	plusw1,w,c
 16046  013F1A  58DE               	subwfb	postinc2,w,c
 16047  013F1C  0EED               	movlw	-19
 16048  013F1E  50E3               	movf	plusw1,w,c
 16049  013F20  58DE               	subwfb	postinc2,w,c
 16050  013F22  0EEE               	movlw	-18
 16051  013F24  50E3               	movf	plusw1,w,c
 16052  013F26  58DE               	subwfb	postinc2,w,c
 16053  013F28  A0D8               	btfss	status,0,c
 16054  013F2A  D015               	goto	l8516
 16055                           
 16056                           ;stkvar	_grs @ sp[(-13)+0]
 16057  013F2C  0EF6               	movlw	-10
 16058  013F2E  8CE3               	bsf	plusw1,6,c
 16059                           
 16060                           ;stkvar	_a @ sp[(-13)+-8]
 16061                           ;stkvar	_rem @ sp[(-13)+4]
 16062  013F30  50E1               	movf	fsr1l,w,c
 16063  013F32  0FF7               	addlw	-9
 16064  013F34  6ED9               	movwf	fsr2l,c
 16065  013F36  50E2               	movf	fsr1h,w,c
 16066  013F38  6EDA               	movwf	fsr2h,c
 16067  013F3A  0EFF               	movlw	255
 16068  013F3C  22DA               	addwfc	fsr2h,f,c
 16069  013F3E  0EEB               	movlw	-21
 16070  013F40  50E3               	movf	plusw1,w,c
 16071  013F42  5EDE               	subwf	postinc2,f,c
 16072  013F44  0EEC               	movlw	-20
 16073  013F46  50E3               	movf	plusw1,w,c
 16074  013F48  5ADE               	subwfb	postinc2,f,c
 16075  013F4A  0EED               	movlw	-19
 16076  013F4C  50E3               	movf	plusw1,w,c
 16077  013F4E  5ADE               	subwfb	postinc2,f,c
 16078  013F50  0EEE               	movlw	-18
 16079  013F52  50E3               	movf	plusw1,w,c
 16080  013F54  5ADE               	subwfb	postinc2,f,c
 16081  013F56                     l8516:
 16082                           
 16083                           ;stkvar	_aexp @ sp[(-13)+10]
 16084  013F56  0EFD               	movlw	-3
 16085  013F58  2AE3               	incf	plusw1,f,c
 16086  013F5A                     l8518:
 16087                           
 16088                           ;stkvar	_aexp @ sp[(-13)+10]
 16089  013F5A  0EFD               	movlw	-3
 16090  013F5C  006F FF8C  F001    	movff	plusw1,btemp
 16091  013F62  0E19               	movlw	25
 16092  013F64  6401               	cpfsgt	btemp^0,c
 16093  013F66  D7A9               	goto	l8500
 16094                           
 16095                           ;stkvar	_rem @ sp[(-13)+4]
 16096  013F68  0EF7               	movlw	-9
 16097  013F6A  50E3               	movf	plusw1,w,c
 16098  013F6C  E10A               	bnz	u7630
 16099  013F6E  0EF8               	movlw	-8
 16100  013F70  50E3               	movf	plusw1,w,c
 16101  013F72  E107               	bnz	u7630
 16102  013F74  0EF9               	movlw	-7
 16103  013F76  50E3               	movf	plusw1,w,c
 16104  013F78  E104               	bnz	u7630
 16105  013F7A  0EFA               	movlw	-6
 16106  013F7C  50E3               	movf	plusw1,w,c
 16107  013F7E  B4D8               	btfsc	status,2,c
 16108  013F80  D024               	goto	l8534
 16109  013F82                     u7630:
 16110                           
 16111                           ;stkvar	_grs @ sp[(-13)+0]
 16112  013F82  0EF3               	movlw	-13
 16113  013F84  80E3               	bsf	plusw1,0,c
 16114  013F86  D021               	goto	l8534
 16115  013F88                     l8524:
 16116                           
 16117                           ;stkvar	_b @ sp[(-13)+-4]
 16118  013F88  90D8               	bcf	status,0,c
 16119  013F8A  0EEF               	movlw	-17
 16120  013F8C  36E3               	rlcf	plusw1,f,c
 16121  013F8E  0EF0               	movlw	-16
 16122  013F90  36E3               	rlcf	plusw1,f,c
 16123  013F92  0EF1               	movlw	-15
 16124  013F94  36E3               	rlcf	plusw1,f,c
 16125  013F96  0EF2               	movlw	-14
 16126  013F98  36E3               	rlcf	plusw1,f,c
 16127                           
 16128                           ;stkvar	_grs @ sp[(-13)+0]
 16129  013F9A  0EF6               	movlw	-10
 16130  013F9C  AEE3               	btfss	plusw1,7,c
 16131  013F9E  D002               	goto	l8530
 16132                           
 16133                           ;stkvar	_b @ sp[(-13)+-4]
 16134  013FA0  0EEF               	movlw	-17
 16135  013FA2  80E3               	bsf	plusw1,0,c
 16136  013FA4                     l8530:
 16137                           
 16138                           ;stkvar	_grs @ sp[(-13)+0]
 16139  013FA4  90D8               	bcf	status,0,c
 16140  013FA6  0EF3               	movlw	-13
 16141  013FA8  36E3               	rlcf	plusw1,f,c
 16142  013FAA  0EF4               	movlw	-12
 16143  013FAC  36E3               	rlcf	plusw1,f,c
 16144  013FAE  0EF5               	movlw	-11
 16145  013FB0  36E3               	rlcf	plusw1,f,c
 16146  013FB2  0EF6               	movlw	-10
 16147  013FB4  36E3               	rlcf	plusw1,f,c
 16148                           
 16149                           ;stkvar	_new_exp @ sp[(-13)+8]
 16150  013FB6  50E1               	movf	fsr1l,w,c
 16151  013FB8  0FFB               	addlw	-5
 16152  013FBA  6ED9               	movwf	fsr2l,c
 16153  013FBC  50E2               	movf	fsr1h,w,c
 16154  013FBE  6EDA               	movwf	fsr2h,c
 16155  013FC0  0EFF               	movlw	255
 16156  013FC2  22DA               	addwfc	fsr2h,f,c
 16157  013FC4  06DE               	decf	postinc2,f,c
 16158  013FC6  0E00               	movlw	0
 16159  013FC8  5ADD               	subwfb	postdec2,f,c
 16160  013FCA                     l8534:
 16161                           
 16162                           ;stkvar	_b @ sp[(-13)+-4]
 16163  013FCA  0EF1               	movlw	-15
 16164  013FCC  AEE3               	btfss	plusw1,7,c
 16165  013FCE  D7DC               	goto	l8524
 16166                           
 16167                           ;stkvar	_aexp @ sp[(-13)+10]
 16168  013FD0  0EFD               	movlw	-3
 16169  013FD2  6AE3               	clrf	plusw1,c
 16170                           
 16171                           ;stkvar	_grs @ sp[(-13)+0]
 16172  013FD4  0EF6               	movlw	-10
 16173  013FD6  AEE3               	btfss	plusw1,7,c
 16174  013FD8  D020               	goto	l8548
 16175                           
 16176                           ;stkvar	_grs @ sp[(-13)+0]
 16177  013FDA  50E1               	movf	fsr1l,w,c
 16178  013FDC  0FF3               	addlw	-13
 16179  013FDE  6ED9               	movwf	fsr2l,c
 16180  013FE0  50E2               	movf	fsr1h,w,c
 16181  013FE2  6EDA               	movwf	fsr2h,c
 16182  013FE4  0EFF               	movlw	255
 16183  013FE6  22DA               	addwfc	fsr2h,f,c
 16184  013FE8  0EFF               	movlw	255
 16185  013FEA  14DE               	andwf	postinc2,w,c
 16186  013FEC  6E09               	movwf	(btemp+8)^0,c
 16187  013FEE  0EFF               	movlw	255
 16188  013FF0  14DE               	andwf	postinc2,w,c
 16189  013FF2  6E0A               	movwf	(btemp+9)^0,c
 16190  013FF4  0EFF               	movlw	255
 16191  013FF6  14DE               	andwf	postinc2,w,c
 16192  013FF8  6E0B               	movwf	(btemp+10)^0,c
 16193  013FFA  0E7F               	movlw	127
 16194  013FFC  14DE               	andwf	postinc2,w,c
 16195  013FFE  6E0C               	movwf	(btemp+11)^0,c
 16196  014000  5009               	movf	(btemp+8)^0,w,c
 16197  014002  100A               	iorwf	(btemp+9)^0,w,c
 16198  014004  100B               	iorwf	(btemp+10)^0,w,c
 16199  014006  100C               	iorwf	(btemp+11)^0,w,c
 16200  014008  B4D8               	btfsc	status,2,c
 16201  01400A  D004               	goto	l8544
 16202  01400C                     u7670:
 16203                           
 16204                           ;stkvar	_aexp @ sp[(-13)+10]
 16205  01400C  0EFD               	movlw	-3
 16206  01400E  6AE3               	clrf	plusw1,c
 16207  014010  2AE3               	incf	plusw1,f,c
 16208  014012  D003               	goto	l8548
 16209  014014                     l8544:
 16210                           
 16211                           ;stkvar	_b @ sp[(-13)+-4]
 16212  014014  0EEF               	movlw	-17
 16213  014016  B0E3               	btfsc	plusw1,0,c
 16214  014018  D7F9               	goto	u7670
 16215  01401A                     l8548:
 16216                           
 16217                           ;stkvar	_aexp @ sp[(-13)+10]
 16218  01401A  0EFD               	movlw	-3
 16219  01401C  50E3               	movf	plusw1,w,c
 16220  01401E  B4D8               	btfsc	status,2,c
 16221  014020  D036               	goto	l8558
 16222                           
 16223                           ;stkvar	_b @ sp[(-13)+-4]
 16224  014022  50E1               	movf	fsr1l,w,c
 16225  014024  0FEF               	addlw	-17
 16226  014026  6ED9               	movwf	fsr2l,c
 16227  014028  50E2               	movf	fsr1h,w,c
 16228  01402A  6EDA               	movwf	fsr2h,c
 16229  01402C  0EFF               	movlw	255
 16230  01402E  22DA               	addwfc	fsr2h,f,c
 16231  014030  2ADE               	incf	postinc2,f,c
 16232  014032  0E00               	movlw	0
 16233  014034  22DE               	addwfc	postinc2,f,c
 16234  014036  22DE               	addwfc	postinc2,f,c
 16235  014038  22DE               	addwfc	postinc2,f,c
 16236                           
 16237                           ;stkvar	_b @ sp[(-13)+-4]
 16238  01403A  0EF2               	movlw	-14
 16239  01403C  A0E3               	btfss	plusw1,0,c
 16240  01403E  D027               	goto	l8558
 16241  014040  0E01               	movlw	1
 16242  014042  6E0C               	movwf	(btemp+11)^0,c
 16243                           
 16244                           ;stkvar	_b @ sp[(-13)+-4]
 16245  014044  50E1               	movf	fsr1l,w,c
 16246  014046  0FEF               	addlw	-17
 16247  014048  6ED9               	movwf	fsr2l,c
 16248  01404A  50E2               	movf	fsr1h,w,c
 16249  01404C  6EDA               	movwf	fsr2h,c
 16250  01404E  0EFF               	movlw	255
 16251  014050  22DA               	addwfc	fsr2h,f,c
 16252  014052  280C               	incf	(btemp+11)^0,w,c
 16253  014054  52DE               	movf	postinc2,f,c
 16254  014056  D008               	goto	u7710
 16255  014058                     u7715:
 16256  014058  52DE               	movf	postinc2,f,c
 16257  01405A  90D8               	bcf	status,0,c
 16258  01405C  BEDC               	btfsc	preinc2,7,c
 16259  01405E  80D8               	bsf	status,0,c
 16260  014060  32DD               	rrcf	postdec2,f,c
 16261  014062  32DD               	rrcf	postdec2,f,c
 16262  014064  32DD               	rrcf	postdec2,f,c
 16263  014066  32DE               	rrcf	postinc2,f,c
 16264  014068                     u7710:
 16265  014068  2EE8               	decfsz	wreg,f,c
 16266  01406A  D7F6               	goto	u7715
 16267                           
 16268                           ;stkvar	_new_exp @ sp[(-13)+8]
 16269  01406C  0EFB               	movlw	-5
 16270  01406E  50E3               	movf	plusw1,w,c
 16271  014070  0F01               	addlw	1
 16272  014072  6E01               	movwf	btemp^0,c
 16273  014074  0EFB               	movlw	-5
 16274  014076  0060  F007  FFE3   	movff	btemp,plusw1
 16275  01407C  6A01               	clrf	btemp^0,c
 16276  01407E  0EFC               	movlw	-4
 16277  014080  50E3               	movf	plusw1,w,c
 16278  014082  2001               	addwfc	btemp^0,w,c
 16279  014084  6E01               	movwf	btemp^0,c
 16280  014086  0EFC               	movlw	-4
 16281  014088  0060  F007  FFE3   	movff	btemp,plusw1
 16282  01408E                     l8558:
 16283                           
 16284                           ;stkvar	_new_exp @ sp[(-13)+8]
 16285  01408E  0EFC               	movlw	-4
 16286  014090  BEE3               	btfsc	plusw1,7,c
 16287  014092  D01B               	goto	l8564
 16288  014094  0EFC               	movlw	-4
 16289  014096  50E3               	movf	plusw1,w,c
 16290  014098  E104               	bnz	u7720
 16291  01409A  0EFB               	movlw	-5
 16292  01409C  28E3               	incf	plusw1,w,c
 16293  01409E  A0D8               	btfss	status,0,c
 16294  0140A0  D014               	goto	l8564
 16295  0140A2                     u7720:
 16296  0140A2  0EFF               	movlw	255
 16297  0140A4  6E0B               	movwf	(btemp+10)^0,c
 16298  0140A6  0E00               	movlw	0
 16299  0140A8  6E0C               	movwf	(btemp+11)^0,c
 16300                           
 16301                           ;stkvar	_new_exp @ sp[(-13)+8]
 16302  0140AA  0EFB               	movlw	-5
 16303  0140AC  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16304  0140B2  0EFC               	movlw	-4
 16305  0140B4  0060  F033  FFE3   	movff	btemp+11,plusw1
 16306                           
 16307                           ;stkvar	_b @ sp[(-13)+-4]
 16308  0140BA  0EEF               	movlw	-17
 16309  0140BC  6AE3               	clrf	plusw1,c
 16310  0140BE  0EF0               	movlw	-16
 16311  0140C0  6AE3               	clrf	plusw1,c
 16312  0140C2  0EF1               	movlw	-15
 16313  0140C4  6AE3               	clrf	plusw1,c
 16314  0140C6  0EF2               	movlw	-14
 16315  0140C8  6AE3               	clrf	plusw1,c
 16316  0140CA                     l8564:
 16317                           
 16318                           ;stkvar	_new_exp @ sp[(-13)+8]
 16319  0140CA  0EFC               	movlw	-4
 16320  0140CC  BEE3               	btfsc	plusw1,7,c
 16321  0140CE  D007               	goto	u7730
 16322  0140D0  0EFC               	movlw	-4
 16323  0140D2  50E3               	movf	plusw1,w,c
 16324  0140D4  E112               	bnz	l8570
 16325  0140D6  0EFB               	movlw	-5
 16326  0140D8  04E3               	decf	plusw1,w,c
 16327  0140DA  B0D8               	btfsc	status,0,c
 16328  0140DC  D00E               	goto	l8570
 16329  0140DE                     u7730:
 16330                           
 16331                           ;stkvar	_new_exp @ sp[(-13)+8]
 16332  0140DE  0EFB               	movlw	-5
 16333  0140E0  6AE3               	clrf	plusw1,c
 16334  0140E2  0EFC               	movlw	-4
 16335  0140E4  6AE3               	clrf	plusw1,c
 16336                           
 16337                           ;stkvar	_b @ sp[(-13)+-4]
 16338  0140E6  0EEF               	movlw	-17
 16339  0140E8  6AE3               	clrf	plusw1,c
 16340  0140EA  0EF0               	movlw	-16
 16341  0140EC  6AE3               	clrf	plusw1,c
 16342  0140EE  0EF1               	movlw	-15
 16343  0140F0  6AE3               	clrf	plusw1,c
 16344  0140F2  0EF2               	movlw	-14
 16345  0140F4  6AE3               	clrf	plusw1,c
 16346                           
 16347                           ;stkvar	_sign @ sp[(-13)+12]
 16348  0140F6  0EFF               	movlw	-1
 16349  0140F8  6AE3               	clrf	plusw1,c
 16350  0140FA                     l8570:
 16351                           
 16352                           ;stkvar	_new_exp @ sp[(-13)+8]
 16353                           ;stkvar	_bexp @ sp[(-13)+11]
 16354  0140FA  0EFB               	movlw	-5
 16355  0140FC  006F FF8C  F001    	movff	plusw1,btemp
 16356  014102  0EFE               	movlw	-2
 16357  014104  0060  F007  FFE3   	movff	btemp,plusw1
 16358                           
 16359                           ;stkvar	_bexp @ sp[(-13)+11]
 16360  01410A  0EFE               	movlw	-2
 16361  01410C  A0E3               	btfss	plusw1,0,c
 16362  01410E  D009               	goto	l8576
 16363                           
 16364                           ;stkvar	_b @ sp[(-13)+-4]
 16365  014110  0EF1               	movlw	241
 16366  014112  24E1               	addwf	fsr1l,w,c
 16367  014114  6ED9               	movwf	fsr2l,c
 16368  014116  0EFF               	movlw	255
 16369  014118  20E2               	addwfc	fsr1h,w,c
 16370  01411A  6EDA               	movwf	fsr2h,c
 16371  01411C  0E00               	movlw	0
 16372  01411E  8EDB               	bsf	plusw2,7,c
 16373  014120  D008               	goto	l8578
 16374  014122                     l8576:
 16375                           
 16376                           ;stkvar	_b @ sp[(-13)+-4]
 16377  014122  0EF1               	movlw	241
 16378  014124  24E1               	addwf	fsr1l,w,c
 16379  014126  6ED9               	movwf	fsr2l,c
 16380  014128  0EFF               	movlw	255
 16381  01412A  20E2               	addwfc	fsr1h,w,c
 16382  01412C  6EDA               	movwf	fsr2h,c
 16383  01412E  0E7F               	movlw	127
 16384  014130  16DF               	andwf	indf2,f,c
 16385  014132                     l8578:
 16386                           
 16387                           ;stkvar	_b @ sp[(-13)+-4]
 16388  014132  0EF2               	movlw	242
 16389  014134  24E1               	addwf	fsr1l,w,c
 16390  014136  6ED9               	movwf	fsr2l,c
 16391  014138  0EFF               	movlw	255
 16392  01413A  20E2               	addwfc	fsr1h,w,c
 16393  01413C  6EDA               	movwf	fsr2h,c
 16394                           
 16395                           ;stkvar	_bexp @ sp[(-13)+11]
 16396  01413E  0EFE               	movlw	-2
 16397  014140  006F FF8C  F00C    	movff	plusw1,btemp+11
 16398  014146  90D8               	bcf	status,0,c
 16399  014148  300C               	rrcf	(btemp+11)^0,w,c
 16400  01414A  6EDF               	movwf	indf2,c
 16401  01414C  D644               	goto	l8476
 16402  01414E                     l2833:
 16403                           
 16404                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 16405  01414E  0EEB               	movlw	235
 16406  014150  26E1               	addwf	fsr1l,f,c
 16407  014152  0EFF               	movlw	255
 16408  014154  22E2               	addwfc	fsr1h,f,c
 16409  014156  0012               	return		;funcret
 16410  014158                     __end_of___fldiv:
 16411                           	opt callstack 0
 16412                           
 16413 ;; *************** function ___awmod *****************
 16414 ;; Defined at:
 16415 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 16416 ;; Parameters:    Size  Location     Type
 16417 ;;  dividend        2  [STACK] int 
 16418 ;;  divisor         2  [STACK] int 
 16419 ;; Auto vars:     Size  Location     Type
 16420 ;;  sign            1  [STACK] unsigned char 
 16421 ;;  counter         1  [STACK] unsigned char 
 16422 ;; Return value:  Size  Location     Type
 16423 ;;                  2  [STACK] int 
 16424 ;; Registers used:
 16425 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16426 ;; Tracked objects:
 16427 ;;		On entry : 0/0
 16428 ;;		On exit  : 0/0
 16429 ;;		Unchanged: 0/0
 16430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16435 ;;Total ram usage:        0 bytes
 16436 ;; Hardware stack levels used:    1
 16437 ;; Hardware stack levels required when called:    7
 16438 ;; This function calls:
 16439 ;;		Nothing
 16440 ;; This function is called by:
 16441 ;;		_efgtoa
 16442 ;; This function uses a reentrant model
 16443 ;;
 16444                           
 16445                           	psect	text60
 16446  017232                     __ptext60:
 16447                           	opt callstack 0
 16448  017232                     ___awmod:
 16449                           	opt callstack 0
 16450                           
 16451                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16452  017232  52E6               	movf	postinc1,f,c
 16453  017234  52E6               	movf	postinc1,f,c
 16454                           
 16455                           ;stkvar	_sign @ sp[(-2)+0]
 16456                           
 16457                           ;incstack = 0
 16458  017236  0EFE               	movlw	-2
 16459  017238  6AE3               	clrf	plusw1,c
 16460                           
 16461                           ;stkvar	_dividend @ sp[(-2)+-2]
 16462  01723A  0EFD               	movlw	-3
 16463  01723C  AEE3               	btfss	plusw1,7,c
 16464  01723E  D009               	goto	l7178
 16465                           
 16466                           ;stkvar	_dividend @ sp[(-2)+-2]
 16467                           ;stkvar	_dividend @ sp[(-2)+-2]
 16468  017240  0EFC               	movlw	-4
 16469  017242  6CE3               	negf	plusw1,c
 16470  017244  0EFD               	movlw	-3
 16471  017246  1EE3               	comf	plusw1,f,c
 16472  017248  B0D8               	btfsc	status,0,c
 16473  01724A  2AE3               	incf	plusw1,f,c
 16474                           
 16475                           ;stkvar	_sign @ sp[(-2)+0]
 16476  01724C  0EFE               	movlw	-2
 16477  01724E  6AE3               	clrf	plusw1,c
 16478  017250  2AE3               	incf	plusw1,f,c
 16479  017252                     l7178:
 16480                           
 16481                           ;stkvar	_divisor @ sp[(-2)+-4]
 16482  017252  0EFB               	movlw	-5
 16483  017254  AEE3               	btfss	plusw1,7,c
 16484  017256  D006               	goto	l7182
 16485                           
 16486                           ;stkvar	_divisor @ sp[(-2)+-4]
 16487                           ;stkvar	_divisor @ sp[(-2)+-4]
 16488  017258  0EFA               	movlw	-6
 16489  01725A  6CE3               	negf	plusw1,c
 16490  01725C  0EFB               	movlw	-5
 16491  01725E  1EE3               	comf	plusw1,f,c
 16492  017260  B0D8               	btfsc	status,0,c
 16493  017262  2AE3               	incf	plusw1,f,c
 16494  017264                     l7182:
 16495                           
 16496                           ;stkvar	_divisor @ sp[(-2)+-4]
 16497  017264  0EFA               	movlw	-6
 16498  017266  006F FF8C  F001    	movff	plusw1,btemp
 16499  01726C  0EFB               	movlw	-5
 16500  01726E  50E3               	movf	plusw1,w,c
 16501  017270  1001               	iorwf	btemp^0,w,c
 16502  017272  B4D8               	btfsc	status,2,c
 16503  017274  D053               	goto	u5500
 16504                           
 16505                           ;stkvar	_counter @ sp[(-2)+1]
 16506  017276  0EFF               	movlw	-1
 16507  017278  6AE3               	clrf	plusw1,c
 16508  01727A  D012               	goto	L15
 16509  01727C                     l7186:
 16510                           
 16511                           ;stkvar	_divisor @ sp[(-2)+-4]
 16512  01727C  0EFA               	movlw	-6
 16513  01727E  50E3               	movf	plusw1,w,c
 16514  017280  90D8               	bcf	status,0,c
 16515  017282  34E8               	rlcf	wreg,w,c
 16516  017284  6E01               	movwf	btemp^0,c
 16517  017286  0EFA               	movlw	-6
 16518  017288  0060  F007  FFE3   	movff	btemp,plusw1
 16519  01728E  0EFB               	movlw	-5
 16520  017290  50E3               	movf	plusw1,w,c
 16521  017292  34E8               	rlcf	wreg,w,c
 16522  017294  6E01               	movwf	btemp^0,c
 16523  017296  0EFB               	movlw	-5
 16524  017298  0060  F007  FFE3   	movff	btemp,plusw1
 16525                           
 16526                           ;stkvar	_counter @ sp[(-2)+1]
 16527  01729E  0EFF               	movlw	-1
 16528  0172A0                     L15:
 16529  0172A0  2AE3               	incf	plusw1,f,c
 16530                           
 16531                           ;stkvar	_divisor @ sp[(-2)+-4]
 16532  0172A2  0EFB               	movlw	-5
 16533  0172A4  AEE3               	btfss	plusw1,7,c
 16534  0172A6  D7EA               	goto	l7186
 16535  0172A8                     u5480:
 16536                           
 16537                           ;stkvar	_divisor @ sp[(-2)+-4]
 16538  0172A8  0EFA               	movlw	-6
 16539  0172AA  006F FF8C  F00B    	movff	plusw1,btemp+10
 16540  0172B0  0EFB               	movlw	-5
 16541  0172B2  006F FF8C  F00C    	movff	plusw1,btemp+11
 16542                           
 16543                           ;stkvar	_dividend @ sp[(-2)+-2]
 16544  0172B8  0EFC               	movlw	-4
 16545  0172BA  006F FF8C  F009    	movff	plusw1,btemp+8
 16546  0172C0  0EFD               	movlw	-3
 16547  0172C2  006F FF8C  F00A    	movff	plusw1,btemp+9
 16548  0172C8  500B               	movf	(btemp+10)^0,w,c
 16549  0172CA  5C09               	subwf	(btemp+8)^0,w,c
 16550  0172CC  500C               	movf	(btemp+11)^0,w,c
 16551  0172CE  580A               	subwfb	(btemp+9)^0,w,c
 16552  0172D0  A0D8               	btfss	status,0,c
 16553  0172D2  D014               	goto	l7196
 16554                           
 16555                           ;stkvar	_divisor @ sp[(-2)+-4]
 16556                           ;stkvar	_dividend @ sp[(-2)+-2]
 16557  0172D4  0EFC               	movlw	-4
 16558  0172D6  50E3               	movf	plusw1,w,c
 16559  0172D8  6E01               	movwf	btemp^0,c
 16560  0172DA  0EFA               	movlw	-6
 16561  0172DC  50E3               	movf	plusw1,w,c
 16562  0172DE  5E01               	subwf	btemp^0,f,c
 16563  0172E0  0EFC               	movlw	-4
 16564  0172E2  0060  F007  FFE3   	movff	btemp,plusw1
 16565  0172E8  0EFD               	movlw	-3
 16566  0172EA  50E3               	movf	plusw1,w,c
 16567  0172EC  6E01               	movwf	btemp^0,c
 16568  0172EE  0EFB               	movlw	-5
 16569  0172F0  50E3               	movf	plusw1,w,c
 16570  0172F2  5A01               	subwfb	btemp^0,f,c
 16571  0172F4  0EFD               	movlw	-3
 16572  0172F6  0060  F007  FFE3   	movff	btemp,plusw1
 16573  0172FC                     l7196:
 16574                           
 16575                           ;stkvar	_divisor @ sp[(-2)+-4]
 16576  0172FC  90D8               	bcf	status,0,c
 16577  0172FE  0EFB               	movlw	-5
 16578  017300  32E3               	rrcf	plusw1,f,c
 16579  017302  0EFA               	movlw	-6
 16580  017304  32E3               	rrcf	plusw1,f,c
 16581                           
 16582                           ;stkvar	_counter @ sp[(-2)+1]
 16583  017306  0EFF               	movlw	-1
 16584  017308  50E3               	movf	plusw1,w,c
 16585  01730A  6E01               	movwf	btemp^0,c
 16586  01730C  0E01               	movlw	1
 16587  01730E  5E01               	subwf	btemp^0,f,c
 16588  017310  0EFF               	movlw	-1
 16589  017312  0060  F007  FFE3   	movff	btemp,plusw1
 16590  017318  A4D8               	btfss	status,2,c
 16591  01731A  D7C6               	goto	u5480
 16592  01731C                     u5500:
 16593                           
 16594                           ;stkvar	_sign @ sp[(-2)+0]
 16595  01731C  0EFE               	movlw	-2
 16596  01731E  50E3               	movf	plusw1,w,c
 16597  017320  B4D8               	btfsc	status,2,c
 16598  017322  D006               	goto	l7204
 16599                           
 16600                           ;stkvar	_dividend @ sp[(-2)+-2]
 16601                           ;stkvar	_dividend @ sp[(-2)+-2]
 16602  017324  0EFC               	movlw	-4
 16603  017326  6CE3               	negf	plusw1,c
 16604  017328  0EFD               	movlw	-3
 16605  01732A  1EE3               	comf	plusw1,f,c
 16606  01732C  B0D8               	btfsc	status,0,c
 16607  01732E  2AE3               	incf	plusw1,f,c
 16608  017330                     l7204:
 16609                           
 16610                           ;stkvar	_dividend @ sp[(-2)+-2]
 16611  017330  0EFC               	movlw	-4
 16612  017332  006F FF8C  F001    	movff	plusw1,btemp
 16613  017338  0EFD               	movlw	-3
 16614  01733A  006F FF8C  F002    	movff	plusw1,btemp+1
 16615                           
 16616                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16617  017340  0EFA               	movlw	250
 16618  017342  26E1               	addwf	fsr1l,f,c
 16619  017344  0EFF               	movlw	255
 16620  017346  22E2               	addwfc	fsr1h,f,c
 16621  017348  0012               	return		;funcret
 16622  01734A                     __end_of___awmod:
 16623                           	opt callstack 0
 16624                           
 16625 ;; *************** function ___awdiv *****************
 16626 ;; Defined at:
 16627 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 16628 ;; Parameters:    Size  Location     Type
 16629 ;;  dividend        2  [STACK] int 
 16630 ;;  divisor         2  [STACK] int 
 16631 ;; Auto vars:     Size  Location     Type
 16632 ;;  quotient        2  [STACK] int 
 16633 ;;  sign            1  [STACK] unsigned char 
 16634 ;;  counter         1  [STACK] unsigned char 
 16635 ;; Return value:  Size  Location     Type
 16636 ;;                  2  [STACK] int 
 16637 ;; Registers used:
 16638 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16639 ;; Tracked objects:
 16640 ;;		On entry : 0/0
 16641 ;;		On exit  : 0/0
 16642 ;;		Unchanged: 0/0
 16643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16648 ;;Total ram usage:        0 bytes
 16649 ;; Hardware stack levels used:    1
 16650 ;; Hardware stack levels required when called:    7
 16651 ;; This function calls:
 16652 ;;		Nothing
 16653 ;; This function is called by:
 16654 ;;		_efgtoa
 16655 ;; This function uses a reentrant model
 16656 ;;
 16657                           
 16658                           	psect	text61
 16659  016D6A                     __ptext61:
 16660                           	opt callstack 0
 16661  016D6A                     ___awdiv:
 16662                           	opt callstack 0
 16663                           
 16664                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16665  016D6A  52E6               	movf	postinc1,f,c
 16666  016D6C  52E6               	movf	postinc1,f,c
 16667  016D6E  52E6               	movf	postinc1,f,c
 16668  016D70  52E6               	movf	postinc1,f,c
 16669                           
 16670                           ;stkvar	_sign @ sp[(-4)+2]
 16671                           
 16672                           ;incstack = 0
 16673  016D72  0EFE               	movlw	-2
 16674  016D74  6AE3               	clrf	plusw1,c
 16675                           
 16676                           ;stkvar	_divisor @ sp[(-4)+-4]
 16677  016D76  0EF9               	movlw	-7
 16678  016D78  AEE3               	btfss	plusw1,7,c
 16679  016D7A  D009               	goto	l7132
 16680                           
 16681                           ;stkvar	_divisor @ sp[(-4)+-4]
 16682                           ;stkvar	_divisor @ sp[(-4)+-4]
 16683  016D7C  0EF8               	movlw	-8
 16684  016D7E  6CE3               	negf	plusw1,c
 16685  016D80  0EF9               	movlw	-7
 16686  016D82  1EE3               	comf	plusw1,f,c
 16687  016D84  B0D8               	btfsc	status,0,c
 16688  016D86  2AE3               	incf	plusw1,f,c
 16689                           
 16690                           ;stkvar	_sign @ sp[(-4)+2]
 16691  016D88  0EFE               	movlw	-2
 16692  016D8A  6AE3               	clrf	plusw1,c
 16693  016D8C  2AE3               	incf	plusw1,f,c
 16694  016D8E                     l7132:
 16695                           
 16696                           ;stkvar	_dividend @ sp[(-4)+-2]
 16697  016D8E  0EFB               	movlw	-5
 16698  016D90  AEE3               	btfss	plusw1,7,c
 16699  016D92  D008               	goto	l7138
 16700                           
 16701                           ;stkvar	_dividend @ sp[(-4)+-2]
 16702                           ;stkvar	_dividend @ sp[(-4)+-2]
 16703  016D94  0EFA               	movlw	-6
 16704  016D96  6CE3               	negf	plusw1,c
 16705  016D98  0EFB               	movlw	-5
 16706  016D9A  1EE3               	comf	plusw1,f,c
 16707  016D9C  B0D8               	btfsc	status,0,c
 16708  016D9E  2AE3               	incf	plusw1,f,c
 16709                           
 16710                           ;stkvar	_sign @ sp[(-4)+2]
 16711  016DA0  0EFE               	movlw	-2
 16712  016DA2  70E3               	btg	plusw1,0,c
 16713  016DA4                     l7138:
 16714                           
 16715                           ;stkvar	_quotient @ sp[(-4)+0]
 16716  016DA4  0EFC               	movlw	-4
 16717  016DA6  6AE3               	clrf	plusw1,c
 16718  016DA8  0EFD               	movlw	-3
 16719  016DAA  6AE3               	clrf	plusw1,c
 16720                           
 16721                           ;stkvar	_divisor @ sp[(-4)+-4]
 16722  016DAC  0EF8               	movlw	-8
 16723  016DAE  006F FF8C  F001    	movff	plusw1,btemp
 16724  016DB4  0EF9               	movlw	-7
 16725  016DB6  50E3               	movf	plusw1,w,c
 16726  016DB8  1001               	iorwf	btemp^0,w,c
 16727  016DBA  B4D8               	btfsc	status,2,c
 16728  016DBC  D066               	goto	u5430
 16729                           
 16730                           ;stkvar	_counter @ sp[(-4)+3]
 16731  016DBE  0EFF               	movlw	-1
 16732  016DC0  6AE3               	clrf	plusw1,c
 16733  016DC2  D012               	goto	L16
 16734  016DC4                     l7144:
 16735                           
 16736                           ;stkvar	_divisor @ sp[(-4)+-4]
 16737  016DC4  0EF8               	movlw	-8
 16738  016DC6  50E3               	movf	plusw1,w,c
 16739  016DC8  90D8               	bcf	status,0,c
 16740  016DCA  34E8               	rlcf	wreg,w,c
 16741  016DCC  6E01               	movwf	btemp^0,c
 16742  016DCE  0EF8               	movlw	-8
 16743  016DD0  0060  F007  FFE3   	movff	btemp,plusw1
 16744  016DD6  0EF9               	movlw	-7
 16745  016DD8  50E3               	movf	plusw1,w,c
 16746  016DDA  34E8               	rlcf	wreg,w,c
 16747  016DDC  6E01               	movwf	btemp^0,c
 16748  016DDE  0EF9               	movlw	-7
 16749  016DE0  0060  F007  FFE3   	movff	btemp,plusw1
 16750                           
 16751                           ;stkvar	_counter @ sp[(-4)+3]
 16752  016DE6  0EFF               	movlw	-1
 16753  016DE8                     L16:
 16754  016DE8  2AE3               	incf	plusw1,f,c
 16755                           
 16756                           ;stkvar	_divisor @ sp[(-4)+-4]
 16757  016DEA  0EF9               	movlw	-7
 16758  016DEC  AEE3               	btfss	plusw1,7,c
 16759  016DEE  D7EA               	goto	l7144
 16760  016DF0                     u5410:
 16761                           
 16762                           ;stkvar	_quotient @ sp[(-4)+0]
 16763  016DF0  0EFC               	movlw	-4
 16764  016DF2  50E3               	movf	plusw1,w,c
 16765  016DF4  90D8               	bcf	status,0,c
 16766  016DF6  34E8               	rlcf	wreg,w,c
 16767  016DF8  6E01               	movwf	btemp^0,c
 16768  016DFA  0EFC               	movlw	-4
 16769  016DFC  0060  F007  FFE3   	movff	btemp,plusw1
 16770  016E02  0EFD               	movlw	-3
 16771  016E04  50E3               	movf	plusw1,w,c
 16772  016E06  34E8               	rlcf	wreg,w,c
 16773  016E08  6E01               	movwf	btemp^0,c
 16774  016E0A  0EFD               	movlw	-3
 16775  016E0C  0060  F007  FFE3   	movff	btemp,plusw1
 16776                           
 16777                           ;stkvar	_divisor @ sp[(-4)+-4]
 16778  016E12  0EF8               	movlw	-8
 16779  016E14  006F FF8C  F00B    	movff	plusw1,btemp+10
 16780  016E1A  0EF9               	movlw	-7
 16781  016E1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 16782                           
 16783                           ;stkvar	_dividend @ sp[(-4)+-2]
 16784  016E22  0EFA               	movlw	-6
 16785  016E24  006F FF8C  F009    	movff	plusw1,btemp+8
 16786  016E2A  0EFB               	movlw	-5
 16787  016E2C  006F FF8C  F00A    	movff	plusw1,btemp+9
 16788  016E32  500B               	movf	(btemp+10)^0,w,c
 16789  016E34  5C09               	subwf	(btemp+8)^0,w,c
 16790  016E36  500C               	movf	(btemp+11)^0,w,c
 16791  016E38  580A               	subwfb	(btemp+9)^0,w,c
 16792  016E3A  A0D8               	btfss	status,0,c
 16793  016E3C  D016               	goto	l7158
 16794                           
 16795                           ;stkvar	_divisor @ sp[(-4)+-4]
 16796                           ;stkvar	_dividend @ sp[(-4)+-2]
 16797  016E3E  0EFA               	movlw	-6
 16798  016E40  50E3               	movf	plusw1,w,c
 16799  016E42  6E01               	movwf	btemp^0,c
 16800  016E44  0EF8               	movlw	-8
 16801  016E46  50E3               	movf	plusw1,w,c
 16802  016E48  5E01               	subwf	btemp^0,f,c
 16803  016E4A  0EFA               	movlw	-6
 16804  016E4C  0060  F007  FFE3   	movff	btemp,plusw1
 16805  016E52  0EFB               	movlw	-5
 16806  016E54  50E3               	movf	plusw1,w,c
 16807  016E56  6E01               	movwf	btemp^0,c
 16808  016E58  0EF9               	movlw	-7
 16809  016E5A  50E3               	movf	plusw1,w,c
 16810  016E5C  5A01               	subwfb	btemp^0,f,c
 16811  016E5E  0EFB               	movlw	-5
 16812  016E60  0060  F007  FFE3   	movff	btemp,plusw1
 16813                           
 16814                           ;stkvar	_quotient @ sp[(-4)+0]
 16815  016E66  0EFC               	movlw	-4
 16816  016E68  80E3               	bsf	plusw1,0,c
 16817  016E6A                     l7158:
 16818                           
 16819                           ;stkvar	_divisor @ sp[(-4)+-4]
 16820  016E6A  90D8               	bcf	status,0,c
 16821  016E6C  0EF9               	movlw	-7
 16822  016E6E  32E3               	rrcf	plusw1,f,c
 16823  016E70  0EF8               	movlw	-8
 16824  016E72  32E3               	rrcf	plusw1,f,c
 16825                           
 16826                           ;stkvar	_counter @ sp[(-4)+3]
 16827  016E74  0EFF               	movlw	-1
 16828  016E76  50E3               	movf	plusw1,w,c
 16829  016E78  6E01               	movwf	btemp^0,c
 16830  016E7A  0E01               	movlw	1
 16831  016E7C  5E01               	subwf	btemp^0,f,c
 16832  016E7E  0EFF               	movlw	-1
 16833  016E80  0060  F007  FFE3   	movff	btemp,plusw1
 16834  016E86  A4D8               	btfss	status,2,c
 16835  016E88  D7B3               	goto	u5410
 16836  016E8A                     u5430:
 16837                           
 16838                           ;stkvar	_sign @ sp[(-4)+2]
 16839  016E8A  0EFE               	movlw	-2
 16840  016E8C  50E3               	movf	plusw1,w,c
 16841  016E8E  B4D8               	btfsc	status,2,c
 16842  016E90  D006               	goto	l7166
 16843                           
 16844                           ;stkvar	_quotient @ sp[(-4)+0]
 16845                           ;stkvar	_quotient @ sp[(-4)+0]
 16846  016E92  0EFC               	movlw	-4
 16847  016E94  6CE3               	negf	plusw1,c
 16848  016E96  0EFD               	movlw	-3
 16849  016E98  1EE3               	comf	plusw1,f,c
 16850  016E9A  B0D8               	btfsc	status,0,c
 16851  016E9C  2AE3               	incf	plusw1,f,c
 16852  016E9E                     l7166:
 16853                           
 16854                           ;stkvar	_quotient @ sp[(-4)+0]
 16855  016E9E  0EFC               	movlw	-4
 16856  016EA0  006F FF8C  F001    	movff	plusw1,btemp
 16857  016EA6  0EFD               	movlw	-3
 16858  016EA8  006F FF8C  F002    	movff	plusw1,btemp+1
 16859                           
 16860                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16861  016EAE  0EF8               	movlw	248
 16862  016EB0  26E1               	addwf	fsr1l,f,c
 16863  016EB2  0EFF               	movlw	255
 16864  016EB4  22E2               	addwfc	fsr1h,f,c
 16865  016EB6  0012               	return		;funcret
 16866  016EB8                     __end_of___awdiv:
 16867                           	opt callstack 0
 16868                           
 16869 ;; *************** function _dtoa *****************
 16870 ;; Defined at:
 16871 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16872 ;; Parameters:    Size  Location     Type
 16873 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16874 ;;		 -> f(6), NULL(0), 
 16875 ;;  d               8  [STACK] long long 
 16876 ;; Auto vars:     Size  Location     Type
 16877 ;;  n               8  [STACK] long long 
 16878 ;;  i               2  [STACK] int 
 16879 ;;  s               2  [STACK] int 
 16880 ;;  w               2  [STACK] int 
 16881 ;;  p               2  [STACK] int 
 16882 ;; Return value:  Size  Location     Type
 16883 ;;                  2  [STACK] int 
 16884 ;; Registers used:
 16885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16886 ;; Tracked objects:
 16887 ;;		On entry : 0/0
 16888 ;;		On exit  : 0/0
 16889 ;;		Unchanged: 0/0
 16890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16895 ;;Total ram usage:        0 bytes
 16896 ;; Hardware stack levels used:    1
 16897 ;; Hardware stack levels required when called:   12
 16898 ;; This function calls:
 16899 ;;		___aodiv
 16900 ;;		___aomod
 16901 ;;		_abs
 16902 ;;		_pad
 16903 ;; This function is called by:
 16904 ;;		_vfpfcnvrt
 16905 ;; This function uses a reentrant model
 16906 ;;
 16907                           
 16908                           	psect	text62
 16909  014604                     __ptext62:
 16910                           	opt callstack 0
 16911  014604                     _dtoa:
 16912                           	opt callstack 0
 16913                           
 16914                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16915  014604  0E12               	movlw	18
 16916  014606  26E1               	addwf	fsr1l,f,c
 16917  014608  0E00               	movlw	0
 16918  01460A  22E2               	addwfc	fsr1h,f,c
 16919                           
 16920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16921                           ;stkvar	_d @ sp[(-18)+-10]
 16922                           
 16923                           ;incstack = 0
 16924  01460C  0EE4               	movlw	228
 16925  01460E  24E1               	addwf	fsr1l,w,c
 16926  014610  6ED9               	movwf	fsr2l,c
 16927  014612  0EFF               	movlw	255
 16928  014614  20E2               	addwfc	fsr1h,w,c
 16929  014616  6EDA               	movwf	fsr2h,c
 16930                           
 16931                           ;stkvar	_n @ sp[(-18)+2]
 16932  014618  0E08               	movlw	8
 16933  01461A  6E01               	movwf	btemp^0,c
 16934  01461C  0EF0               	movlw	-16
 16935  01461E                     us947999:
 16936  01461E  006F FF7B FFE3     	movff	postinc2,plusw1
 16937  014624  28E8               	incf	wreg,w,c
 16938  014626  2E01               	decfsz	btemp^0,f,c
 16939  014628  D7FA               	bra	us947999
 16940                           
 16941                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16942                           ;stkvar	_n @ sp[(-18)+2]
 16943  01462A  0EF7               	movlw	-9
 16944  01462C  AEE3               	btfss	plusw1,7,c
 16945  01462E  D002               	goto	u9480
 16946  014630  0E01               	movlw	1
 16947  014632  D001               	goto	u9490
 16948  014634                     u9480:
 16949  014634  0E00               	movlw	0
 16950  014636                     u9490:
 16951  014636  6E0B               	movwf	(btemp+10)^0,c
 16952  014638  6A0C               	clrf	(btemp+11)^0,c
 16953                           
 16954                           ;stkvar	_s @ sp[(-18)+12]
 16955  01463A  0EFA               	movlw	-6
 16956  01463C  0060  F02F  FFE3   	movff	btemp+10,plusw1
 16957  014642  0EFB               	movlw	-5
 16958  014644  0060  F033  FFE3   	movff	btemp+11,plusw1
 16959                           
 16960                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 16961                           ;stkvar	_s @ sp[(-18)+12]
 16962  01464A  0EFA               	movlw	-6
 16963  01464C  006F FF8C  F001    	movff	plusw1,btemp
 16964  014652  0EFB               	movlw	-5
 16965  014654  50E3               	movf	plusw1,w,c
 16966  014656  1001               	iorwf	btemp^0,w,c
 16967  014658  B4D8               	btfsc	status,2,c
 16968  01465A  D025               	goto	u9510
 16969                           
 16970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 16971                           ;stkvar	_n @ sp[(-18)+2]
 16972                           ;stkvar	_n @ sp[(-18)+2]
 16973  01465C  0EF0               	movlw	-16
 16974  01465E  6CE3               	negf	plusw1,c
 16975  014660  0EF1               	movlw	-15
 16976  014662  1EE3               	comf	plusw1,f,c
 16977  014664  0EF2               	movlw	-14
 16978  014666  1EE3               	comf	plusw1,f,c
 16979  014668  0EF3               	movlw	-13
 16980  01466A  1EE3               	comf	plusw1,f,c
 16981  01466C  0EF4               	movlw	-12
 16982  01466E  1EE3               	comf	plusw1,f,c
 16983  014670  0EF5               	movlw	-11
 16984  014672  1EE3               	comf	plusw1,f,c
 16985  014674  0EF6               	movlw	-10
 16986  014676  1EE3               	comf	plusw1,f,c
 16987  014678  0EF7               	movlw	-9
 16988  01467A  1EE3               	comf	plusw1,f,c
 16989  01467C  E314               	bnc	u9510
 16990  01467E  0EF1               	movlw	-15
 16991  014680  2AE3               	incf	plusw1,f,c
 16992  014682  E311               	bnc	u9510
 16993  014684  0EF2               	movlw	-14
 16994  014686  2AE3               	incf	plusw1,f,c
 16995  014688  E30E               	bnc	u9510
 16996  01468A  0EF3               	movlw	-13
 16997  01468C  2AE3               	incf	plusw1,f,c
 16998  01468E  E30B               	bnc	u9510
 16999  014690  0EF4               	movlw	-12
 17000  014692  2AE3               	incf	plusw1,f,c
 17001  014694  E308               	bnc	u9510
 17002  014696  0EF5               	movlw	-11
 17003  014698  2AE3               	incf	plusw1,f,c
 17004  01469A  E305               	bnc	u9510
 17005  01469C  0EF6               	movlw	-10
 17006  01469E  2AE3               	incf	plusw1,f,c
 17007  0146A0  E302               	bnc	u9510
 17008  0146A2  0EF7               	movlw	-9
 17009  0146A4  2AE3               	incf	plusw1,f,c
 17010  0146A6                     u9510:
 17011                           
 17012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17013  0146A6  AE27               	btfss	(_prec+1)^0,7,c
 17014                           
 17015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17016  0146A8  9228               	bcf	_flags^0,1,c
 17017                           
 17018                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17019  0146AA  BE27               	btfsc	(_prec+1)^0,7,c
 17020  0146AC  D005               	goto	u9530
 17021  0146AE  5027               	movf	(_prec+1)^0,w,c
 17022  0146B0  E110               	bnz	l10454
 17023  0146B2  0426               	decf	_prec^0,w,c
 17024  0146B4  B0D8               	btfsc	status,0,c
 17025  0146B6  D00D               	goto	l10454
 17026  0146B8                     u9530:
 17027  0146B8  0E01               	movlw	1
 17028  0146BA  6E0B               	movwf	(btemp+10)^0,c
 17029  0146BC  0E00               	movlw	0
 17030  0146BE  6E0C               	movwf	(btemp+11)^0,c
 17031                           
 17032                           ;stkvar	_p @ sp[(-18)+16]
 17033  0146C0  0EFE               	movlw	-2
 17034  0146C2  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17035  0146C8  0EFF               	movlw	-1
 17036  0146CA  0060  F033  FFE3   	movff	btemp+11,plusw1
 17037  0146D0  D008               	goto	l2037
 17038  0146D2                     l10454:
 17039                           
 17040                           ;stkvar	_p @ sp[(-18)+16]
 17041  0146D2  0EFE               	movlw	-2
 17042  0146D4  0060  F09B  FFE3   	movff	_prec,plusw1
 17043  0146DA  0EFF               	movlw	-1
 17044  0146DC  0060  F09F  FFE3   	movff	_prec+1,plusw1
 17045  0146E2                     l2037:
 17046                           
 17047                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 17048                           ;stkvar	_w @ sp[(-18)+14]
 17049  0146E2  0EFC               	movlw	-4
 17050  0146E4  0060  F093  FFE3   	movff	_width,plusw1
 17051  0146EA  0EFD               	movlw	-3
 17052  0146EC  0060  F097  FFE3   	movff	_width+1,plusw1
 17053                           
 17054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 17055                           ;stkvar	_s @ sp[(-18)+12]
 17056  0146F2  0EFA               	movlw	-6
 17057  0146F4  006F FF8C  F001    	movff	plusw1,btemp
 17058  0146FA  0EFB               	movlw	-5
 17059  0146FC  50E3               	movf	plusw1,w,c
 17060  0146FE  1001               	iorwf	btemp^0,w,c
 17061  014700  A4D8               	btfss	status,2,c
 17062  014702  D002               	goto	u9550
 17063  014704  A428               	btfss	_flags^0,2,c
 17064  014706  D00A               	goto	l10462
 17065  014708                     u9550:
 17066                           
 17067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 17068                           ;stkvar	_w @ sp[(-18)+14]
 17069  014708  50E1               	movf	fsr1l,w,c
 17070  01470A  0FFC               	addlw	-4
 17071  01470C  6ED9               	movwf	fsr2l,c
 17072  01470E  50E2               	movf	fsr1h,w,c
 17073  014710  6EDA               	movwf	fsr2h,c
 17074  014712  0EFF               	movlw	255
 17075  014714  22DA               	addwfc	fsr2h,f,c
 17076  014716  06DE               	decf	postinc2,f,c
 17077  014718  0E00               	movlw	0
 17078  01471A  5ADD               	subwfb	postdec2,f,c
 17079  01471C                     l10462:
 17080                           
 17081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 17082  01471C  0E4F               	movlw	79
 17083  01471E  6E0B               	movwf	(btemp+10)^0,c
 17084  014720  0E00               	movlw	0
 17085  014722  6E0C               	movwf	(btemp+11)^0,c
 17086                           
 17087                           ;stkvar	_i @ sp[(-18)+10]
 17088  014724  0EF8               	movlw	-8
 17089  014726  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17090  01472C  0EF9               	movlw	-7
 17091  01472E  0060  F033  FFE3   	movff	btemp+11,plusw1
 17092                           
 17093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 17094  014734  0103               	movlb	3	; () banked
 17095  014736  6BE3               	clrf	(_dbuf+79)& (0+255),b
 17096                           
 17097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17098  014738  D109               	goto	l10476
 17099  01473A                     l10466:
 17100                           
 17101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 17102                           ;stkvar	_i @ sp[(-18)+10]
 17103  01473A  50E1               	movf	fsr1l,w,c
 17104  01473C  0FF8               	addlw	-8
 17105  01473E  6ED9               	movwf	fsr2l,c
 17106  014740  50E2               	movf	fsr1h,w,c
 17107  014742  6EDA               	movwf	fsr2h,c
 17108  014744  0EFF               	movlw	255
 17109  014746  22DA               	addwfc	fsr2h,f,c
 17110  014748  06DE               	decf	postinc2,f,c
 17111  01474A  0E00               	movlw	0
 17112  01474C  5ADD               	subwfb	postdec2,f,c
 17113                           
 17114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 17115  01474E  0E0A               	movlw	10
 17116  014750  6EE6               	movwf	postinc1,c
 17117  014752  0E00               	movlw	0
 17118  014754  6EE6               	movwf	postinc1,c
 17119  014756  0E00               	movlw	0
 17120  014758  6EE6               	movwf	postinc1,c
 17121  01475A  0E00               	movlw	0
 17122  01475C  6EE6               	movwf	postinc1,c
 17123  01475E  0E00               	movlw	0
 17124  014760  6EE6               	movwf	postinc1,c
 17125  014762  0E00               	movlw	0
 17126  014764  6EE6               	movwf	postinc1,c
 17127  014766  0E00               	movlw	0
 17128  014768  6EE6               	movwf	postinc1,c
 17129  01476A  0E00               	movlw	0
 17130  01476C  6EE6               	movwf	postinc1,c
 17131                           
 17132                           ;stkvar	_n @ sp[(-26)+2]
 17133  01476E  50E1               	movf	fsr1l,w,c
 17134  014770  0FE8               	addlw	-24
 17135  014772  6ED9               	movwf	fsr2l,c
 17136  014774  50E2               	movf	fsr1h,w,c
 17137  014776  6EDA               	movwf	fsr2h,c
 17138  014778  0EFF               	movlw	255
 17139  01477A  22DA               	addwfc	fsr2h,f,c
 17140  01477C  006F FF7B FFE6     	movff	postinc2,postinc1
 17141  014782  006F FF7B FFE6     	movff	postinc2,postinc1
 17142  014788  006F FF7B FFE6     	movff	postinc2,postinc1
 17143  01478E  006F FF7B FFE6     	movff	postinc2,postinc1
 17144  014794  006F FF7B FFE6     	movff	postinc2,postinc1
 17145  01479A  006F FF7B FFE6     	movff	postinc2,postinc1
 17146  0147A0  006F FF7B FFE6     	movff	postinc2,postinc1
 17147  0147A6  006F FF7B FFE6     	movff	postinc2,postinc1
 17148  0147AC  EC91  F0AF         	call	___aomod	;wreg free
 17149  0147B0  52E5               	movf	postdec1,f,c
 17150  0147B2  006F FF9C  F018    	movff	indf1,btemp+23
 17151  0147B8  52E5               	movf	postdec1,f,c
 17152  0147BA  006F FF9C  F017    	movff	indf1,btemp+22
 17153  0147C0  52E5               	movf	postdec1,f,c
 17154  0147C2  006F FF9C  F016    	movff	indf1,btemp+21
 17155  0147C8  52E5               	movf	postdec1,f,c
 17156  0147CA  006F FF9C  F015    	movff	indf1,btemp+20
 17157  0147D0  52E5               	movf	postdec1,f,c
 17158  0147D2  006F FF9C  F014    	movff	indf1,btemp+19
 17159  0147D8  52E5               	movf	postdec1,f,c
 17160  0147DA  006F FF9C  F013    	movff	indf1,btemp+18
 17161  0147E0  52E5               	movf	postdec1,f,c
 17162  0147E2  006F FF9C  F012    	movff	indf1,btemp+17
 17163  0147E8  52E5               	movf	postdec1,f,c
 17164  0147EA  006F FF9C  F011    	movff	indf1,btemp+16
 17165  0147F0  0EF8               	movlw	248
 17166  0147F2  26E1               	addwf	fsr1l,f,c
 17167  0147F4  0EFF               	movlw	255
 17168  0147F6  22E2               	addwfc	fsr1h,f,c
 17169  0147F8  0060  F044  F00B   	movff	btemp+16,btemp+10
 17170  0147FE  0060  F048  F00C   	movff	btemp+17,btemp+11
 17171  014804  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17172  01480A  0060  F033  FFE6   	movff	btemp+11,postinc1
 17173  014810  EC5B  F0C6         	call	_abs	;wreg free
 17174  014814  0E30               	movlw	48
 17175  014816  2601               	addwf	btemp^0,f,c
 17176                           
 17177                           ;stkvar	_i @ sp[(-18)+10]
 17178  014818  0EF8               	movlw	-8
 17179  01481A  006F FF8C  F00B    	movff	plusw1,btemp+10
 17180  014820  0EF9               	movlw	-7
 17181  014822  006F FF8C  F00C    	movff	plusw1,btemp+11
 17182  014828  0E94               	movlw	low _dbuf
 17183  01482A  240B               	addwf	(btemp+10)^0,w,c
 17184  01482C  6ED9               	movwf	fsr2l,c
 17185  01482E  0E03               	movlw	high _dbuf
 17186  014830  200C               	addwfc	(btemp+11)^0,w,c
 17187  014832  6EDA               	movwf	fsr2h,c
 17188  014834  0060  F007  FFDF   	movff	btemp,indf2
 17189                           
 17190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 17191                           ;stkvar	_p @ sp[(-18)+16]
 17192  01483A  50E1               	movf	fsr1l,w,c
 17193  01483C  0FFE               	addlw	-2
 17194  01483E  6ED9               	movwf	fsr2l,c
 17195  014840  50E2               	movf	fsr1h,w,c
 17196  014842  6EDA               	movwf	fsr2h,c
 17197  014844  0EFF               	movlw	255
 17198  014846  22DA               	addwfc	fsr2h,f,c
 17199  014848  06DE               	decf	postinc2,f,c
 17200  01484A  0E00               	movlw	0
 17201  01484C  5ADD               	subwfb	postdec2,f,c
 17202                           
 17203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 17204                           ;stkvar	_w @ sp[(-18)+14]
 17205  01484E  50E1               	movf	fsr1l,w,c
 17206  014850  0FFC               	addlw	-4
 17207  014852  6ED9               	movwf	fsr2l,c
 17208  014854  50E2               	movf	fsr1h,w,c
 17209  014856  6EDA               	movwf	fsr2h,c
 17210  014858  0EFF               	movlw	255
 17211  01485A  22DA               	addwfc	fsr2h,f,c
 17212  01485C  06DE               	decf	postinc2,f,c
 17213  01485E  0E00               	movlw	0
 17214  014860  5ADD               	subwfb	postdec2,f,c
 17215                           
 17216                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 17217  014862  0E0A               	movlw	10
 17218  014864  6EE6               	movwf	postinc1,c
 17219  014866  0E00               	movlw	0
 17220  014868  6EE6               	movwf	postinc1,c
 17221  01486A  0E00               	movlw	0
 17222  01486C  6EE6               	movwf	postinc1,c
 17223  01486E  0E00               	movlw	0
 17224  014870  6EE6               	movwf	postinc1,c
 17225  014872  0E00               	movlw	0
 17226  014874  6EE6               	movwf	postinc1,c
 17227  014876  0E00               	movlw	0
 17228  014878  6EE6               	movwf	postinc1,c
 17229  01487A  0E00               	movlw	0
 17230  01487C  6EE6               	movwf	postinc1,c
 17231  01487E  0E00               	movlw	0
 17232  014880  6EE6               	movwf	postinc1,c
 17233                           
 17234                           ;stkvar	_n @ sp[(-26)+2]
 17235  014882  50E1               	movf	fsr1l,w,c
 17236  014884  0FE8               	addlw	-24
 17237  014886  6ED9               	movwf	fsr2l,c
 17238  014888  50E2               	movf	fsr1h,w,c
 17239  01488A  6EDA               	movwf	fsr2h,c
 17240  01488C  0EFF               	movlw	255
 17241  01488E  22DA               	addwfc	fsr2h,f,c
 17242  014890  006F FF7B FFE6     	movff	postinc2,postinc1
 17243  014896  006F FF7B FFE6     	movff	postinc2,postinc1
 17244  01489C  006F FF7B FFE6     	movff	postinc2,postinc1
 17245  0148A2  006F FF7B FFE6     	movff	postinc2,postinc1
 17246  0148A8  006F FF7B FFE6     	movff	postinc2,postinc1
 17247  0148AE  006F FF7B FFE6     	movff	postinc2,postinc1
 17248  0148B4  006F FF7B FFE6     	movff	postinc2,postinc1
 17249  0148BA  006F FF7B FFE6     	movff	postinc2,postinc1
 17250  0148C0  EC17  F0AD         	call	___aodiv	;wreg free
 17251  0148C4  52E5               	movf	postdec1,f,c
 17252  0148C6  006F FF9C  F018    	movff	indf1,btemp+23
 17253  0148CC  52E5               	movf	postdec1,f,c
 17254  0148CE  006F FF9C  F017    	movff	indf1,btemp+22
 17255  0148D4  52E5               	movf	postdec1,f,c
 17256  0148D6  006F FF9C  F016    	movff	indf1,btemp+21
 17257  0148DC  52E5               	movf	postdec1,f,c
 17258  0148DE  006F FF9C  F015    	movff	indf1,btemp+20
 17259  0148E4  52E5               	movf	postdec1,f,c
 17260  0148E6  006F FF9C  F014    	movff	indf1,btemp+19
 17261  0148EC  52E5               	movf	postdec1,f,c
 17262  0148EE  006F FF9C  F013    	movff	indf1,btemp+18
 17263  0148F4  52E5               	movf	postdec1,f,c
 17264  0148F6  006F FF9C  F012    	movff	indf1,btemp+17
 17265  0148FC  52E5               	movf	postdec1,f,c
 17266  0148FE  006F FF9C  F011    	movff	indf1,btemp+16
 17267  014904  0EF8               	movlw	248
 17268  014906  26E1               	addwf	fsr1l,f,c
 17269  014908  0EFF               	movlw	255
 17270  01490A  22E2               	addwfc	fsr1h,f,c
 17271                           
 17272                           ;stkvar	_n @ sp[(-18)+2]
 17273  01490C  0EF0               	movlw	-16
 17274  01490E  0060  F047  FFE3   	movff	btemp+16,plusw1
 17275  014914  0EF1               	movlw	-15
 17276  014916  0060  F04B  FFE3   	movff	btemp+17,plusw1
 17277  01491C  0EF2               	movlw	-14
 17278  01491E  0060  F04F  FFE3   	movff	btemp+18,plusw1
 17279  014924  0EF3               	movlw	-13
 17280  014926  0060  F053  FFE3   	movff	btemp+19,plusw1
 17281  01492C  0EF4               	movlw	-12
 17282  01492E  0060  F057  FFE3   	movff	btemp+20,plusw1
 17283  014934  0EF5               	movlw	-11
 17284  014936  0060  F05B  FFE3   	movff	btemp+21,plusw1
 17285  01493C  0EF6               	movlw	-10
 17286  01493E  0060  F05F  FFE3   	movff	btemp+22,plusw1
 17287  014944  0EF7               	movlw	-9
 17288  014946  0060  F063  FFE3   	movff	btemp+23,plusw1
 17289  01494C                     l10476:
 17290                           
 17291                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17292                           ;stkvar	_i @ sp[(-18)+10]
 17293  01494C  0EF9               	movlw	-7
 17294  01494E  BEE3               	btfsc	plusw1,7,c
 17295  014950  D036               	goto	u9600
 17296  014952  0EF9               	movlw	-7
 17297  014954  50E3               	movf	plusw1,w,c
 17298  014956  E104               	bnz	u9560
 17299  014958  0EF8               	movlw	-8
 17300  01495A  04E3               	decf	plusw1,w,c
 17301  01495C  A0D8               	btfss	status,0,c
 17302  01495E  D02F               	goto	u9600
 17303  014960                     u9560:
 17304                           
 17305                           ;stkvar	_n @ sp[(-18)+2]
 17306  014960  0EF0               	movlw	-16
 17307  014962  50E3               	movf	plusw1,w,c
 17308  014964  E115               	bnz	u9571
 17309  014966  0EF1               	movlw	-15
 17310  014968  50E3               	movf	plusw1,w,c
 17311  01496A  E112               	bnz	u9571
 17312  01496C  0EF2               	movlw	-14
 17313  01496E  50E3               	movf	plusw1,w,c
 17314  014970  E10F               	bnz	u9571
 17315  014972  0EF3               	movlw	-13
 17316  014974  50E3               	movf	plusw1,w,c
 17317  014976  E10C               	bnz	u9571
 17318  014978  0EF4               	movlw	-12
 17319  01497A  50E3               	movf	plusw1,w,c
 17320  01497C  E109               	bnz	u9571
 17321  01497E  0EF5               	movlw	-11
 17322  014980  50E3               	movf	plusw1,w,c
 17323  014982  E106               	bnz	u9571
 17324  014984  0EF6               	movlw	-10
 17325  014986  50E3               	movf	plusw1,w,c
 17326  014988  E103               	bnz	u9571
 17327  01498A  0EF7               	movlw	-9
 17328  01498C  50E3               	movf	plusw1,w,c
 17329  01498E  A4D8               	btfss	status,2,c
 17330  014990                     u9571:
 17331  014990  D6D4               	goto	l10466
 17332                           
 17333                           ;stkvar	_p @ sp[(-18)+16]
 17334  014992  0EFF               	movlw	-1
 17335  014994  BEE3               	btfsc	plusw1,7,c
 17336  014996  D007               	goto	u9580
 17337  014998  0EFF               	movlw	-1
 17338  01499A  50E3               	movf	plusw1,w,c
 17339  01499C  E103               	bnz	u9581
 17340  01499E  0EFE               	movlw	-2
 17341  0149A0  04E3               	decf	plusw1,w,c
 17342  0149A2  B0D8               	btfsc	status,0,c
 17343  0149A4                     u9581:
 17344  0149A4  D6CA               	goto	l10466
 17345  0149A6                     u9580:
 17346                           
 17347                           ;stkvar	_w @ sp[(-18)+14]
 17348  0149A6  0EFD               	movlw	-3
 17349  0149A8  BEE3               	btfsc	plusw1,7,c
 17350  0149AA  D009               	goto	u9600
 17351  0149AC  0EFD               	movlw	-3
 17352  0149AE  50E3               	movf	plusw1,w,c
 17353  0149B0  E104               	bnz	u9590
 17354  0149B2  0EFC               	movlw	-4
 17355  0149B4  04E3               	decf	plusw1,w,c
 17356  0149B6  A0D8               	btfss	status,0,c
 17357  0149B8  D002               	goto	u9600
 17358  0149BA                     u9590:
 17359  0149BA  B228               	btfsc	_flags^0,1,c
 17360  0149BC  D6BE               	goto	l10466
 17361  0149BE                     u9600:
 17362                           
 17363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 17364                           ;stkvar	_s @ sp[(-18)+12]
 17365  0149BE  0EFA               	movlw	-6
 17366  0149C0  006F FF8C  F001    	movff	plusw1,btemp
 17367  0149C6  0EFB               	movlw	-5
 17368  0149C8  50E3               	movf	plusw1,w,c
 17369  0149CA  1001               	iorwf	btemp^0,w,c
 17370  0149CC  A4D8               	btfss	status,2,c
 17371  0149CE  D002               	goto	u9620
 17372  0149D0  A428               	btfss	_flags^0,2,c
 17373  0149D2  D033               	goto	l10500
 17374  0149D4                     u9620:
 17375                           
 17376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 17377                           ;stkvar	_i @ sp[(-18)+10]
 17378  0149D4  50E1               	movf	fsr1l,w,c
 17379  0149D6  0FF8               	addlw	-8
 17380  0149D8  6ED9               	movwf	fsr2l,c
 17381  0149DA  50E2               	movf	fsr1h,w,c
 17382  0149DC  6EDA               	movwf	fsr2h,c
 17383  0149DE  0EFF               	movlw	255
 17384  0149E0  22DA               	addwfc	fsr2h,f,c
 17385  0149E2  06DE               	decf	postinc2,f,c
 17386  0149E4  0E00               	movlw	0
 17387  0149E6  5ADD               	subwfb	postdec2,f,c
 17388                           
 17389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 17390                           ;stkvar	_s @ sp[(-18)+12]
 17391  0149E8  0EFA               	movlw	-6
 17392  0149EA  006F FF8C  F001    	movff	plusw1,btemp
 17393  0149F0  0EFB               	movlw	-5
 17394  0149F2  50E3               	movf	plusw1,w,c
 17395  0149F4  1001               	iorwf	btemp^0,w,c
 17396  0149F6  A4D8               	btfss	status,2,c
 17397  0149F8  D002               	goto	l10496
 17398  0149FA  0E2B               	movlw	43
 17399  0149FC  D001               	goto	L17
 17400  0149FE                     l10496:
 17401  0149FE  0E2D               	movlw	45
 17402  014A00                     L17:
 17403  014A00  6E0B               	movwf	(btemp+10)^0,c
 17404  014A02  0E00               	movlw	0
 17405  014A04  6E0C               	movwf	(btemp+11)^0,c
 17406                           
 17407                           ;stkvar	_dtoa$5032 @ sp[(-18)+0]
 17408  014A06  0EEE               	movlw	-18
 17409  014A08  0060  F02F  FFE3   	movff	btemp+10,plusw1
 17410  014A0E  0EEF               	movlw	-17
 17411  014A10  0060  F033  FFE3   	movff	btemp+11,plusw1
 17412                           
 17413                           ;stkvar	_dtoa$5032 @ sp[(-18)+0]
 17414                           ;stkvar	_i @ sp[(-18)+10]
 17415  014A16  0EF8               	movlw	-8
 17416  014A18  006F FF8C  F00B    	movff	plusw1,btemp+10
 17417  014A1E  0EF9               	movlw	-7
 17418  014A20  006F FF8C  F00C    	movff	plusw1,btemp+11
 17419  014A26  0E94               	movlw	low _dbuf
 17420  014A28  240B               	addwf	(btemp+10)^0,w,c
 17421  014A2A  6ED9               	movwf	fsr2l,c
 17422  014A2C  0E03               	movlw	high _dbuf
 17423  014A2E  200C               	addwfc	(btemp+11)^0,w,c
 17424  014A30  6EDA               	movwf	fsr2h,c
 17425  014A32  0EEE               	movlw	-18
 17426  014A34  006F FF8F FFDF     	movff	plusw1,indf2
 17427  014A3A                     l10500:
 17428                           
 17429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 17430                           ;stkvar	_w @ sp[(-18)+14]
 17431  014A3A  0EFC               	movlw	-4
 17432  014A3C  006F FF8F FFE6     	movff	plusw1,postinc1
 17433  014A42  006F FF8F FFE6     	movff	plusw1,postinc1
 17434                           
 17435                           ;stkvar	_i @ sp[(-20)+10]
 17436  014A48  0E94               	movlw	low _dbuf
 17437  014A4A  6E0B               	movwf	(btemp+10)^0,c
 17438  014A4C  0E03               	movlw	high _dbuf
 17439  014A4E  6E0C               	movwf	(btemp+11)^0,c
 17440  014A50  0EF6               	movlw	-10
 17441  014A52  50E3               	movf	plusw1,w,c
 17442  014A54  260B               	addwf	(btemp+10)^0,f,c
 17443  014A56  0EF7               	movlw	-9
 17444  014A58  50E3               	movf	plusw1,w,c
 17445  014A5A  220C               	addwfc	(btemp+11)^0,f,c
 17446  014A5C  0060  F02F  FFE6   	movff	btemp+10,postinc1
 17447  014A62  0060  F033  FFE6   	movff	btemp+11,postinc1
 17448                           
 17449                           ;stkvar	_fp @ sp[(-22)+-2]
 17450  014A68  0EE8               	movlw	-24
 17451  014A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 17452  014A70  006F FF8F FFE6     	movff	plusw1,postinc1
 17453  014A76  ECA5  F0B9         	call	_pad	;wreg free
 17454                           
 17455                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17456  014A7A  0EE4               	movlw	228
 17457  014A7C  26E1               	addwf	fsr1l,f,c
 17458  014A7E  0EFF               	movlw	255
 17459  014A80  22E2               	addwfc	fsr1h,f,c
 17460  014A82  0012               	return		;funcret
 17461  014A84                     __end_of_dtoa:
 17462                           	opt callstack 0
 17463                           
 17464 ;; *************** function _abs *****************
 17465 ;; Defined at:
 17466 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 17467 ;; Parameters:    Size  Location     Type
 17468 ;;  a               2  [STACK] int 
 17469 ;; Auto vars:     Size  Location     Type
 17470 ;;		None
 17471 ;; Return value:  Size  Location     Type
 17472 ;;                  2  [STACK] int 
 17473 ;; Registers used:
 17474 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 17475 ;; Tracked objects:
 17476 ;;		On entry : 0/3
 17477 ;;		On exit  : 0/0
 17478 ;;		Unchanged: 0/0
 17479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17484 ;;Total ram usage:        0 bytes
 17485 ;; Hardware stack levels used:    1
 17486 ;; Hardware stack levels required when called:    7
 17487 ;; This function calls:
 17488 ;;		Nothing
 17489 ;; This function is called by:
 17490 ;;		_dtoa
 17491 ;; This function uses a reentrant model
 17492 ;;
 17493                           
 17494                           	psect	text63
 17495  018CB6                     __ptext63:
 17496                           	opt callstack 0
 17497  018CB6                     _abs:
 17498                           	opt callstack 16
 17499                           
 17500                           ;stkvar	_a @ sp[(0)+-2]
 17501                           
 17502                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17503                           ;incstack = 0
 17504  018CB6  0EFF               	movlw	-1
 17505  018CB8  BEE3               	btfsc	plusw1,7,c
 17506  018CBA  D007               	goto	u4850
 17507  018CBC  0EFF               	movlw	-1
 17508  018CBE  50E3               	movf	plusw1,w,c
 17509  018CC0  E112               	bnz	l6932
 17510  018CC2  0EFE               	movlw	-2
 17511  018CC4  04E3               	decf	plusw1,w,c
 17512  018CC6  B0D8               	btfsc	status,0,c
 17513  018CC8  D00E               	goto	l6932
 17514  018CCA                     u4850:
 17515                           
 17516                           ;stkvar	_a @ sp[(0)+-2]
 17517  018CCA  0EFE               	movlw	-2
 17518  018CCC  006F FF8C  F001    	movff	plusw1,btemp
 17519  018CD2  1E01               	comf	btemp^0,f,c
 17520  018CD4  0EFF               	movlw	-1
 17521  018CD6  006F FF8C  F002    	movff	plusw1,btemp+1
 17522  018CDC  1E02               	comf	(btemp+1)^0,f,c
 17523  018CDE  2A01               	incf	btemp^0,f,c
 17524  018CE0  B4D8               	btfsc	status,2,c
 17525  018CE2  2A02               	incf	(btemp+1)^0,f,c
 17526  018CE4  D008               	goto	l2940
 17527  018CE6                     l6932:
 17528                           
 17529                           ;stkvar	_a @ sp[(0)+-2]
 17530  018CE6  0EFE               	movlw	-2
 17531  018CE8  006F FF8C  F001    	movff	plusw1,btemp
 17532  018CEE  0EFF               	movlw	-1
 17533  018CF0  006F FF8C  F002    	movff	plusw1,btemp+1
 17534  018CF6                     l2940:
 17535                           
 17536                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 17537  018CF6  52E5               	movf	postdec1,f,c
 17538  018CF8  52E5               	movf	postdec1,f,c
 17539  018CFA  0012               	return		;funcret
 17540  018CFC                     __end_of_abs:
 17541                           	opt callstack 0
 17542                           
 17543 ;; *************** function ___aomod *****************
 17544 ;; Defined at:
 17545 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 17546 ;; Parameters:    Size  Location     Type
 17547 ;;  dividend        8  [STACK] long long 
 17548 ;;  divisor         8  [STACK] long long 
 17549 ;; Auto vars:     Size  Location     Type
 17550 ;;  sign            1  [STACK] unsigned char 
 17551 ;;  counter         1  [STACK] unsigned char 
 17552 ;; Return value:  Size  Location     Type
 17553 ;;                  8  [STACK] long long 
 17554 ;; Registers used:
 17555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17556 ;; Tracked objects:
 17557 ;;		On entry : 0/3
 17558 ;;		On exit  : 0/0
 17559 ;;		Unchanged: 0/0
 17560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17565 ;;Total ram usage:        0 bytes
 17566 ;; Hardware stack levels used:    1
 17567 ;; Hardware stack levels required when called:    7
 17568 ;; This function calls:
 17569 ;;		Nothing
 17570 ;; This function is called by:
 17571 ;;		_dtoa
 17572 ;; This function uses a reentrant model
 17573 ;;
 17574                           
 17575                           	psect	text64
 17576  015F22                     __ptext64:
 17577                           	opt callstack 0
 17578  015F22                     ___aomod:
 17579                           	opt callstack 0
 17580                           
 17581                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17582  015F22  52E6               	movf	postinc1,f,c
 17583  015F24  52E6               	movf	postinc1,f,c
 17584                           
 17585                           ;stkvar	_sign @ sp[(-2)+0]
 17586                           
 17587                           ;incstack = 0
 17588  015F26  0EFE               	movlw	-2
 17589  015F28  6AE3               	clrf	plusw1,c
 17590                           
 17591                           ;stkvar	_dividend @ sp[(-2)+-8]
 17592  015F2A  0EFD               	movlw	-3
 17593  015F2C  AEE3               	btfss	plusw1,7,c
 17594  015F2E  D028               	goto	l7090
 17595                           
 17596                           ;stkvar	_dividend @ sp[(-2)+-8]
 17597                           ;stkvar	_dividend @ sp[(-2)+-8]
 17598  015F30  0EF6               	movlw	-10
 17599  015F32  6CE3               	negf	plusw1,c
 17600  015F34  0EF7               	movlw	-9
 17601  015F36  1EE3               	comf	plusw1,f,c
 17602  015F38  0EF8               	movlw	-8
 17603  015F3A  1EE3               	comf	plusw1,f,c
 17604  015F3C  0EF9               	movlw	-7
 17605  015F3E  1EE3               	comf	plusw1,f,c
 17606  015F40  0EFA               	movlw	-6
 17607  015F42  1EE3               	comf	plusw1,f,c
 17608  015F44  0EFB               	movlw	-5
 17609  015F46  1EE3               	comf	plusw1,f,c
 17610  015F48  0EFC               	movlw	-4
 17611  015F4A  1EE3               	comf	plusw1,f,c
 17612  015F4C  0EFD               	movlw	-3
 17613  015F4E  1EE3               	comf	plusw1,f,c
 17614  015F50  E314               	bnc	u5280
 17615  015F52  0EF7               	movlw	-9
 17616  015F54  2AE3               	incf	plusw1,f,c
 17617  015F56  E311               	bnc	u5280
 17618  015F58  0EF8               	movlw	-8
 17619  015F5A  2AE3               	incf	plusw1,f,c
 17620  015F5C  E30E               	bnc	u5280
 17621  015F5E  0EF9               	movlw	-7
 17622  015F60  2AE3               	incf	plusw1,f,c
 17623  015F62  E30B               	bnc	u5280
 17624  015F64  0EFA               	movlw	-6
 17625  015F66  2AE3               	incf	plusw1,f,c
 17626  015F68  E308               	bnc	u5280
 17627  015F6A  0EFB               	movlw	-5
 17628  015F6C  2AE3               	incf	plusw1,f,c
 17629  015F6E  E305               	bnc	u5280
 17630  015F70  0EFC               	movlw	-4
 17631  015F72  2AE3               	incf	plusw1,f,c
 17632  015F74  E302               	bnc	u5280
 17633  015F76  0EFD               	movlw	-3
 17634  015F78  2AE3               	incf	plusw1,f,c
 17635  015F7A                     u5280:
 17636                           
 17637                           ;stkvar	_sign @ sp[(-2)+0]
 17638  015F7A  0EFE               	movlw	-2
 17639  015F7C  6AE3               	clrf	plusw1,c
 17640  015F7E  2AE3               	incf	plusw1,f,c
 17641  015F80                     l7090:
 17642                           
 17643                           ;stkvar	_divisor @ sp[(-2)+-16]
 17644  015F80  0EF5               	movlw	-11
 17645  015F82  AEE3               	btfss	plusw1,7,c
 17646  015F84  D025               	goto	u5300
 17647                           
 17648                           ;stkvar	_divisor @ sp[(-2)+-16]
 17649                           ;stkvar	_divisor @ sp[(-2)+-16]
 17650  015F86  0EEE               	movlw	-18
 17651  015F88  6CE3               	negf	plusw1,c
 17652  015F8A  0EEF               	movlw	-17
 17653  015F8C  1EE3               	comf	plusw1,f,c
 17654  015F8E  0EF0               	movlw	-16
 17655  015F90  1EE3               	comf	plusw1,f,c
 17656  015F92  0EF1               	movlw	-15
 17657  015F94  1EE3               	comf	plusw1,f,c
 17658  015F96  0EF2               	movlw	-14
 17659  015F98  1EE3               	comf	plusw1,f,c
 17660  015F9A  0EF3               	movlw	-13
 17661  015F9C  1EE3               	comf	plusw1,f,c
 17662  015F9E  0EF4               	movlw	-12
 17663  015FA0  1EE3               	comf	plusw1,f,c
 17664  015FA2  0EF5               	movlw	-11
 17665  015FA4  1EE3               	comf	plusw1,f,c
 17666  015FA6  E314               	bnc	u5300
 17667  015FA8  0EEF               	movlw	-17
 17668  015FAA  2AE3               	incf	plusw1,f,c
 17669  015FAC  E311               	bnc	u5300
 17670  015FAE  0EF0               	movlw	-16
 17671  015FB0  2AE3               	incf	plusw1,f,c
 17672  015FB2  E30E               	bnc	u5300
 17673  015FB4  0EF1               	movlw	-15
 17674  015FB6  2AE3               	incf	plusw1,f,c
 17675  015FB8  E30B               	bnc	u5300
 17676  015FBA  0EF2               	movlw	-14
 17677  015FBC  2AE3               	incf	plusw1,f,c
 17678  015FBE  E308               	bnc	u5300
 17679  015FC0  0EF3               	movlw	-13
 17680  015FC2  2AE3               	incf	plusw1,f,c
 17681  015FC4  E305               	bnc	u5300
 17682  015FC6  0EF4               	movlw	-12
 17683  015FC8  2AE3               	incf	plusw1,f,c
 17684  015FCA  E302               	bnc	u5300
 17685  015FCC  0EF5               	movlw	-11
 17686  015FCE  2AE3               	incf	plusw1,f,c
 17687  015FD0                     u5300:
 17688                           
 17689                           ;stkvar	_divisor @ sp[(-2)+-16]
 17690  015FD0  0EEE               	movlw	-18
 17691  015FD2  50E3               	movf	plusw1,w,c
 17692  015FD4  E116               	bnz	u5310
 17693  015FD6  0EEF               	movlw	-17
 17694  015FD8  50E3               	movf	plusw1,w,c
 17695  015FDA  E113               	bnz	u5310
 17696  015FDC  0EF0               	movlw	-16
 17697  015FDE  50E3               	movf	plusw1,w,c
 17698  015FE0  E110               	bnz	u5310
 17699  015FE2  0EF1               	movlw	-15
 17700  015FE4  50E3               	movf	plusw1,w,c
 17701  015FE6  E10D               	bnz	u5310
 17702  015FE8  0EF2               	movlw	-14
 17703  015FEA  50E3               	movf	plusw1,w,c
 17704  015FEC  E10A               	bnz	u5310
 17705  015FEE  0EF3               	movlw	-13
 17706  015FF0  50E3               	movf	plusw1,w,c
 17707  015FF2  E107               	bnz	u5310
 17708  015FF4  0EF4               	movlw	-12
 17709  015FF6  50E3               	movf	plusw1,w,c
 17710  015FF8  E104               	bnz	u5310
 17711  015FFA  0EF5               	movlw	-11
 17712  015FFC  50E3               	movf	plusw1,w,c
 17713  015FFE  B4D8               	btfsc	status,2,c
 17714  016000  D075               	goto	u5340
 17715  016002                     u5310:
 17716                           
 17717                           ;stkvar	_counter @ sp[(-2)+1]
 17718  016002  0EFF               	movlw	-1
 17719  016004  6AE3               	clrf	plusw1,c
 17720  016006  D012               	goto	L18
 17721  016008                     l7098:
 17722                           
 17723                           ;stkvar	_divisor @ sp[(-2)+-16]
 17724  016008  90D8               	bcf	status,0,c
 17725  01600A  0EEE               	movlw	-18
 17726  01600C  36E3               	rlcf	plusw1,f,c
 17727  01600E  0EEF               	movlw	-17
 17728  016010  36E3               	rlcf	plusw1,f,c
 17729  016012  0EF0               	movlw	-16
 17730  016014  36E3               	rlcf	plusw1,f,c
 17731  016016  0EF1               	movlw	-15
 17732  016018  36E3               	rlcf	plusw1,f,c
 17733  01601A  0EF2               	movlw	-14
 17734  01601C  36E3               	rlcf	plusw1,f,c
 17735  01601E  0EF3               	movlw	-13
 17736  016020  36E3               	rlcf	plusw1,f,c
 17737  016022  0EF4               	movlw	-12
 17738  016024  36E3               	rlcf	plusw1,f,c
 17739  016026  0EF5               	movlw	-11
 17740  016028  36E3               	rlcf	plusw1,f,c
 17741                           
 17742                           ;stkvar	_counter @ sp[(-2)+1]
 17743  01602A  0EFF               	movlw	-1
 17744  01602C                     L18:
 17745  01602C  2AE3               	incf	plusw1,f,c
 17746                           
 17747                           ;stkvar	_divisor @ sp[(-2)+-16]
 17748  01602E  0EF5               	movlw	-11
 17749  016030  AEE3               	btfss	plusw1,7,c
 17750  016032  D7EA               	goto	l7098
 17751  016034                     u5320:
 17752                           
 17753                           ;stkvar	_divisor @ sp[(-2)+-16]
 17754                           ;stkvar	_dividend @ sp[(-2)+-8]
 17755  016034  50E1               	movf	fsr1l,w,c
 17756  016036  0FF6               	addlw	-10
 17757  016038  6ED9               	movwf	fsr2l,c
 17758  01603A  50E2               	movf	fsr1h,w,c
 17759  01603C  6EDA               	movwf	fsr2h,c
 17760  01603E  0EFF               	movlw	255
 17761  016040  22DA               	addwfc	fsr2h,f,c
 17762  016042  0EEE               	movlw	-18
 17763  016044  50E3               	movf	plusw1,w,c
 17764  016046  5CDE               	subwf	postinc2,w,c
 17765  016048  0EEF               	movlw	-17
 17766  01604A  50E3               	movf	plusw1,w,c
 17767  01604C  58DE               	subwfb	postinc2,w,c
 17768  01604E  0EF0               	movlw	-16
 17769  016050  50E3               	movf	plusw1,w,c
 17770  016052  58DE               	subwfb	postinc2,w,c
 17771  016054  0EF1               	movlw	-15
 17772  016056  50E3               	movf	plusw1,w,c
 17773  016058  58DE               	subwfb	postinc2,w,c
 17774  01605A  0EF2               	movlw	-14
 17775  01605C  50E3               	movf	plusw1,w,c
 17776  01605E  58DE               	subwfb	postinc2,w,c
 17777  016060  0EF3               	movlw	-13
 17778  016062  50E3               	movf	plusw1,w,c
 17779  016064  58DE               	subwfb	postinc2,w,c
 17780  016066  0EF4               	movlw	-12
 17781  016068  50E3               	movf	plusw1,w,c
 17782  01606A  58DE               	subwfb	postinc2,w,c
 17783  01606C  0EF5               	movlw	-11
 17784  01606E  50E3               	movf	plusw1,w,c
 17785  016070  58DE               	subwfb	postinc2,w,c
 17786  016072  A0D8               	btfss	status,0,c
 17787  016074  D01F               	goto	l7106
 17788                           
 17789                           ;stkvar	_divisor @ sp[(-2)+-16]
 17790                           ;stkvar	_dividend @ sp[(-2)+-8]
 17791  016076  50E1               	movf	fsr1l,w,c
 17792  016078  0FF6               	addlw	-10
 17793  01607A  6ED9               	movwf	fsr2l,c
 17794  01607C  50E2               	movf	fsr1h,w,c
 17795  01607E  6EDA               	movwf	fsr2h,c
 17796  016080  0EFF               	movlw	255
 17797  016082  22DA               	addwfc	fsr2h,f,c
 17798  016084  0EEE               	movlw	-18
 17799  016086  50E3               	movf	plusw1,w,c
 17800  016088  5EDE               	subwf	postinc2,f,c
 17801  01608A  0EEF               	movlw	-17
 17802  01608C  50E3               	movf	plusw1,w,c
 17803  01608E  5ADE               	subwfb	postinc2,f,c
 17804  016090  0EF0               	movlw	-16
 17805  016092  50E3               	movf	plusw1,w,c
 17806  016094  5ADE               	subwfb	postinc2,f,c
 17807  016096  0EF1               	movlw	-15
 17808  016098  50E3               	movf	plusw1,w,c
 17809  01609A  5ADE               	subwfb	postinc2,f,c
 17810  01609C  0EF2               	movlw	-14
 17811  01609E  50E3               	movf	plusw1,w,c
 17812  0160A0  5ADE               	subwfb	postinc2,f,c
 17813  0160A2  0EF3               	movlw	-13
 17814  0160A4  50E3               	movf	plusw1,w,c
 17815  0160A6  5ADE               	subwfb	postinc2,f,c
 17816  0160A8  0EF4               	movlw	-12
 17817  0160AA  50E3               	movf	plusw1,w,c
 17818  0160AC  5ADE               	subwfb	postinc2,f,c
 17819  0160AE  0EF5               	movlw	-11
 17820  0160B0  50E3               	movf	plusw1,w,c
 17821  0160B2  5ADE               	subwfb	postinc2,f,c
 17822  0160B4                     l7106:
 17823                           
 17824                           ;stkvar	_divisor @ sp[(-2)+-16]
 17825  0160B4  90D8               	bcf	status,0,c
 17826  0160B6  0EF5               	movlw	-11
 17827  0160B8  32E3               	rrcf	plusw1,f,c
 17828  0160BA  0EF4               	movlw	-12
 17829  0160BC  32E3               	rrcf	plusw1,f,c
 17830  0160BE  0EF3               	movlw	-13
 17831  0160C0  32E3               	rrcf	plusw1,f,c
 17832  0160C2  0EF2               	movlw	-14
 17833  0160C4  32E3               	rrcf	plusw1,f,c
 17834  0160C6  0EF1               	movlw	-15
 17835  0160C8  32E3               	rrcf	plusw1,f,c
 17836  0160CA  0EF0               	movlw	-16
 17837  0160CC  32E3               	rrcf	plusw1,f,c
 17838  0160CE  0EEF               	movlw	-17
 17839  0160D0  32E3               	rrcf	plusw1,f,c
 17840  0160D2  0EEE               	movlw	-18
 17841  0160D4  32E3               	rrcf	plusw1,f,c
 17842                           
 17843                           ;stkvar	_counter @ sp[(-2)+1]
 17844  0160D6  0EFF               	movlw	-1
 17845  0160D8  50E3               	movf	plusw1,w,c
 17846  0160DA  6E01               	movwf	btemp^0,c
 17847  0160DC  0E01               	movlw	1
 17848  0160DE  5E01               	subwf	btemp^0,f,c
 17849  0160E0  0EFF               	movlw	-1
 17850  0160E2  0060  F007  FFE3   	movff	btemp,plusw1
 17851  0160E8  A4D8               	btfss	status,2,c
 17852  0160EA  D7A4               	goto	u5320
 17853  0160EC                     u5340:
 17854                           
 17855                           ;stkvar	_sign @ sp[(-2)+0]
 17856  0160EC  0EFE               	movlw	-2
 17857  0160EE  50E3               	movf	plusw1,w,c
 17858  0160F0  B4D8               	btfsc	status,2,c
 17859  0160F2  D025               	goto	u5360
 17860                           
 17861                           ;stkvar	_dividend @ sp[(-2)+-8]
 17862                           ;stkvar	_dividend @ sp[(-2)+-8]
 17863  0160F4  0EF6               	movlw	-10
 17864  0160F6  6CE3               	negf	plusw1,c
 17865  0160F8  0EF7               	movlw	-9
 17866  0160FA  1EE3               	comf	plusw1,f,c
 17867  0160FC  0EF8               	movlw	-8
 17868  0160FE  1EE3               	comf	plusw1,f,c
 17869  016100  0EF9               	movlw	-7
 17870  016102  1EE3               	comf	plusw1,f,c
 17871  016104  0EFA               	movlw	-6
 17872  016106  1EE3               	comf	plusw1,f,c
 17873  016108  0EFB               	movlw	-5
 17874  01610A  1EE3               	comf	plusw1,f,c
 17875  01610C  0EFC               	movlw	-4
 17876  01610E  1EE3               	comf	plusw1,f,c
 17877  016110  0EFD               	movlw	-3
 17878  016112  1EE3               	comf	plusw1,f,c
 17879  016114  E314               	bnc	u5360
 17880  016116  0EF7               	movlw	-9
 17881  016118  2AE3               	incf	plusw1,f,c
 17882  01611A  E311               	bnc	u5360
 17883  01611C  0EF8               	movlw	-8
 17884  01611E  2AE3               	incf	plusw1,f,c
 17885  016120  E30E               	bnc	u5360
 17886  016122  0EF9               	movlw	-7
 17887  016124  2AE3               	incf	plusw1,f,c
 17888  016126  E30B               	bnc	u5360
 17889  016128  0EFA               	movlw	-6
 17890  01612A  2AE3               	incf	plusw1,f,c
 17891  01612C  E308               	bnc	u5360
 17892  01612E  0EFB               	movlw	-5
 17893  016130  2AE3               	incf	plusw1,f,c
 17894  016132  E305               	bnc	u5360
 17895  016134  0EFC               	movlw	-4
 17896  016136  2AE3               	incf	plusw1,f,c
 17897  016138  E302               	bnc	u5360
 17898  01613A  0EFD               	movlw	-3
 17899  01613C  2AE3               	incf	plusw1,f,c
 17900  01613E                     u5360:
 17901                           
 17902                           ;stkvar	_dividend @ sp[(-2)+-8]
 17903  01613E  0EF6               	movlw	246
 17904  016140  24E1               	addwf	fsr1l,w,c
 17905  016142  6ED9               	movwf	fsr2l,c
 17906  016144  0EFF               	movlw	255
 17907  016146  20E2               	addwfc	fsr1h,w,c
 17908  016148  6EDA               	movwf	fsr2h,c
 17909                           
 17910                           ;stkvar	?___aomod @ sp[(-2)+-8]
 17911  01614A  0E08               	movlw	8
 17912  01614C  6E01               	movwf	btemp^0,c
 17913  01614E  0EF6               	movlw	-10
 17914  016150                     us537999:
 17915  016150  006F FF7B FFE3     	movff	postinc2,plusw1
 17916  016156  28E8               	incf	wreg,w,c
 17917  016158  2E01               	decfsz	btemp^0,f,c
 17918  01615A  D7FA               	bra	us537999
 17919                           
 17920                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17921  01615C  52E5               	movf	postdec1,f,c
 17922  01615E  52E5               	movf	postdec1,f,c
 17923  016160  0012               	return		;funcret
 17924  016162                     __end_of___aomod:
 17925                           	opt callstack 0
 17926                           
 17927 ;; *************** function ___aodiv *****************
 17928 ;; Defined at:
 17929 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 17930 ;; Parameters:    Size  Location     Type
 17931 ;;  dividend        8  [STACK] long long 
 17932 ;;  divisor         8  [STACK] long long 
 17933 ;; Auto vars:     Size  Location     Type
 17934 ;;  quotient        8  [STACK] long long 
 17935 ;;  sign            1  [STACK] unsigned char 
 17936 ;;  counter         1  [STACK] unsigned char 
 17937 ;; Return value:  Size  Location     Type
 17938 ;;                  8  [STACK] long long 
 17939 ;; Registers used:
 17940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17941 ;; Tracked objects:
 17942 ;;		On entry : 0/3
 17943 ;;		On exit  : 0/0
 17944 ;;		Unchanged: 0/0
 17945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17950 ;;Total ram usage:        0 bytes
 17951 ;; Hardware stack levels used:    1
 17952 ;; Hardware stack levels required when called:    7
 17953 ;; This function calls:
 17954 ;;		Nothing
 17955 ;; This function is called by:
 17956 ;;		_dtoa
 17957 ;; This function uses a reentrant model
 17958 ;;
 17959                           
 17960                           	psect	text65
 17961  015A2E                     __ptext65:
 17962                           	opt callstack 0
 17963  015A2E                     ___aodiv:
 17964                           	opt callstack 0
 17965                           
 17966                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 17967  015A2E  0E0A               	movlw	10
 17968  015A30  26E1               	addwf	fsr1l,f,c
 17969  015A32  0E00               	movlw	0
 17970  015A34  22E2               	addwfc	fsr1h,f,c
 17971                           
 17972                           ;stkvar	_sign @ sp[(-10)+8]
 17973                           
 17974                           ;incstack = 0
 17975  015A36  0EFE               	movlw	-2
 17976  015A38  6AE3               	clrf	plusw1,c
 17977                           
 17978                           ;stkvar	_divisor @ sp[(-10)+-16]
 17979  015A3A  0EED               	movlw	-19
 17980  015A3C  AEE3               	btfss	plusw1,7,c
 17981  015A3E  D028               	goto	l7046
 17982                           
 17983                           ;stkvar	_divisor @ sp[(-10)+-16]
 17984                           ;stkvar	_divisor @ sp[(-10)+-16]
 17985  015A40  0EE6               	movlw	-26
 17986  015A42  6CE3               	negf	plusw1,c
 17987  015A44  0EE7               	movlw	-25
 17988  015A46  1EE3               	comf	plusw1,f,c
 17989  015A48  0EE8               	movlw	-24
 17990  015A4A  1EE3               	comf	plusw1,f,c
 17991  015A4C  0EE9               	movlw	-23
 17992  015A4E  1EE3               	comf	plusw1,f,c
 17993  015A50  0EEA               	movlw	-22
 17994  015A52  1EE3               	comf	plusw1,f,c
 17995  015A54  0EEB               	movlw	-21
 17996  015A56  1EE3               	comf	plusw1,f,c
 17997  015A58  0EEC               	movlw	-20
 17998  015A5A  1EE3               	comf	plusw1,f,c
 17999  015A5C  0EED               	movlw	-19
 18000  015A5E  1EE3               	comf	plusw1,f,c
 18001  015A60  E314               	bnc	u5160
 18002  015A62  0EE7               	movlw	-25
 18003  015A64  2AE3               	incf	plusw1,f,c
 18004  015A66  E311               	bnc	u5160
 18005  015A68  0EE8               	movlw	-24
 18006  015A6A  2AE3               	incf	plusw1,f,c
 18007  015A6C  E30E               	bnc	u5160
 18008  015A6E  0EE9               	movlw	-23
 18009  015A70  2AE3               	incf	plusw1,f,c
 18010  015A72  E30B               	bnc	u5160
 18011  015A74  0EEA               	movlw	-22
 18012  015A76  2AE3               	incf	plusw1,f,c
 18013  015A78  E308               	bnc	u5160
 18014  015A7A  0EEB               	movlw	-21
 18015  015A7C  2AE3               	incf	plusw1,f,c
 18016  015A7E  E305               	bnc	u5160
 18017  015A80  0EEC               	movlw	-20
 18018  015A82  2AE3               	incf	plusw1,f,c
 18019  015A84  E302               	bnc	u5160
 18020  015A86  0EED               	movlw	-19
 18021  015A88  2AE3               	incf	plusw1,f,c
 18022  015A8A                     u5160:
 18023                           
 18024                           ;stkvar	_sign @ sp[(-10)+8]
 18025  015A8A  0EFE               	movlw	-2
 18026  015A8C  6AE3               	clrf	plusw1,c
 18027  015A8E  2AE3               	incf	plusw1,f,c
 18028  015A90                     l7046:
 18029                           
 18030                           ;stkvar	_dividend @ sp[(-10)+-8]
 18031  015A90  0EF5               	movlw	-11
 18032  015A92  AEE3               	btfss	plusw1,7,c
 18033  015A94  D027               	goto	l7052
 18034                           
 18035                           ;stkvar	_dividend @ sp[(-10)+-8]
 18036                           ;stkvar	_dividend @ sp[(-10)+-8]
 18037  015A96  0EEE               	movlw	-18
 18038  015A98  6CE3               	negf	plusw1,c
 18039  015A9A  0EEF               	movlw	-17
 18040  015A9C  1EE3               	comf	plusw1,f,c
 18041  015A9E  0EF0               	movlw	-16
 18042  015AA0  1EE3               	comf	plusw1,f,c
 18043  015AA2  0EF1               	movlw	-15
 18044  015AA4  1EE3               	comf	plusw1,f,c
 18045  015AA6  0EF2               	movlw	-14
 18046  015AA8  1EE3               	comf	plusw1,f,c
 18047  015AAA  0EF3               	movlw	-13
 18048  015AAC  1EE3               	comf	plusw1,f,c
 18049  015AAE  0EF4               	movlw	-12
 18050  015AB0  1EE3               	comf	plusw1,f,c
 18051  015AB2  0EF5               	movlw	-11
 18052  015AB4  1EE3               	comf	plusw1,f,c
 18053  015AB6  E314               	bnc	u5180
 18054  015AB8  0EEF               	movlw	-17
 18055  015ABA  2AE3               	incf	plusw1,f,c
 18056  015ABC  E311               	bnc	u5180
 18057  015ABE  0EF0               	movlw	-16
 18058  015AC0  2AE3               	incf	plusw1,f,c
 18059  015AC2  E30E               	bnc	u5180
 18060  015AC4  0EF1               	movlw	-15
 18061  015AC6  2AE3               	incf	plusw1,f,c
 18062  015AC8  E30B               	bnc	u5180
 18063  015ACA  0EF2               	movlw	-14
 18064  015ACC  2AE3               	incf	plusw1,f,c
 18065  015ACE  E308               	bnc	u5180
 18066  015AD0  0EF3               	movlw	-13
 18067  015AD2  2AE3               	incf	plusw1,f,c
 18068  015AD4  E305               	bnc	u5180
 18069  015AD6  0EF4               	movlw	-12
 18070  015AD8  2AE3               	incf	plusw1,f,c
 18071  015ADA  E302               	bnc	u5180
 18072  015ADC  0EF5               	movlw	-11
 18073  015ADE  2AE3               	incf	plusw1,f,c
 18074  015AE0                     u5180:
 18075                           
 18076                           ;stkvar	_sign @ sp[(-10)+8]
 18077  015AE0  0EFE               	movlw	-2
 18078  015AE2  70E3               	btg	plusw1,0,c
 18079  015AE4                     l7052:
 18080                           
 18081                           ;stkvar	_quotient @ sp[(-10)+0]
 18082  015AE4  0E07               	movlw	7
 18083  015AE6  6E01               	movwf	btemp^0,c
 18084  015AE8  0EF6               	movlw	-10
 18085  015AEA                     u5191:
 18086  015AEA  6AE3               	clrf	plusw1,c
 18087  015AEC  2AE8               	incf	wreg,f,c
 18088  015AEE  0601               	decf	btemp^0,f,c
 18089  015AF0  E2FC               	bc	u5191
 18090                           
 18091                           ;stkvar	_divisor @ sp[(-10)+-16]
 18092  015AF2  0EE6               	movlw	-26
 18093  015AF4  50E3               	movf	plusw1,w,c
 18094  015AF6  E116               	bnz	u5200
 18095  015AF8  0EE7               	movlw	-25
 18096  015AFA  50E3               	movf	plusw1,w,c
 18097  015AFC  E113               	bnz	u5200
 18098  015AFE  0EE8               	movlw	-24
 18099  015B00  50E3               	movf	plusw1,w,c
 18100  015B02  E110               	bnz	u5200
 18101  015B04  0EE9               	movlw	-23
 18102  015B06  50E3               	movf	plusw1,w,c
 18103  015B08  E10D               	bnz	u5200
 18104  015B0A  0EEA               	movlw	-22
 18105  015B0C  50E3               	movf	plusw1,w,c
 18106  015B0E  E10A               	bnz	u5200
 18107  015B10  0EEB               	movlw	-21
 18108  015B12  50E3               	movf	plusw1,w,c
 18109  015B14  E107               	bnz	u5200
 18110  015B16  0EEC               	movlw	-20
 18111  015B18  50E3               	movf	plusw1,w,c
 18112  015B1A  E104               	bnz	u5200
 18113  015B1C  0EED               	movlw	-19
 18114  015B1E  50E3               	movf	plusw1,w,c
 18115  015B20  B4D8               	btfsc	status,2,c
 18116  015B22  D088               	goto	u5230
 18117  015B24                     u5200:
 18118                           
 18119                           ;stkvar	_counter @ sp[(-10)+9]
 18120  015B24  0EFF               	movlw	-1
 18121  015B26  6AE3               	clrf	plusw1,c
 18122  015B28  D012               	goto	L19
 18123  015B2A                     l7058:
 18124                           
 18125                           ;stkvar	_divisor @ sp[(-10)+-16]
 18126  015B2A  90D8               	bcf	status,0,c
 18127  015B2C  0EE6               	movlw	-26
 18128  015B2E  36E3               	rlcf	plusw1,f,c
 18129  015B30  0EE7               	movlw	-25
 18130  015B32  36E3               	rlcf	plusw1,f,c
 18131  015B34  0EE8               	movlw	-24
 18132  015B36  36E3               	rlcf	plusw1,f,c
 18133  015B38  0EE9               	movlw	-23
 18134  015B3A  36E3               	rlcf	plusw1,f,c
 18135  015B3C  0EEA               	movlw	-22
 18136  015B3E  36E3               	rlcf	plusw1,f,c
 18137  015B40  0EEB               	movlw	-21
 18138  015B42  36E3               	rlcf	plusw1,f,c
 18139  015B44  0EEC               	movlw	-20
 18140  015B46  36E3               	rlcf	plusw1,f,c
 18141  015B48  0EED               	movlw	-19
 18142  015B4A  36E3               	rlcf	plusw1,f,c
 18143                           
 18144                           ;stkvar	_counter @ sp[(-10)+9]
 18145  015B4C  0EFF               	movlw	-1
 18146  015B4E                     L19:
 18147  015B4E  2AE3               	incf	plusw1,f,c
 18148                           
 18149                           ;stkvar	_divisor @ sp[(-10)+-16]
 18150  015B50  0EED               	movlw	-19
 18151  015B52  AEE3               	btfss	plusw1,7,c
 18152  015B54  D7EA               	goto	l7058
 18153  015B56                     u5210:
 18154                           
 18155                           ;stkvar	_quotient @ sp[(-10)+0]
 18156  015B56  90D8               	bcf	status,0,c
 18157  015B58  0EF6               	movlw	-10
 18158  015B5A  36E3               	rlcf	plusw1,f,c
 18159  015B5C  0EF7               	movlw	-9
 18160  015B5E  36E3               	rlcf	plusw1,f,c
 18161  015B60  0EF8               	movlw	-8
 18162  015B62  36E3               	rlcf	plusw1,f,c
 18163  015B64  0EF9               	movlw	-7
 18164  015B66  36E3               	rlcf	plusw1,f,c
 18165  015B68  0EFA               	movlw	-6
 18166  015B6A  36E3               	rlcf	plusw1,f,c
 18167  015B6C  0EFB               	movlw	-5
 18168  015B6E  36E3               	rlcf	plusw1,f,c
 18169  015B70  0EFC               	movlw	-4
 18170  015B72  36E3               	rlcf	plusw1,f,c
 18171  015B74  0EFD               	movlw	-3
 18172  015B76  36E3               	rlcf	plusw1,f,c
 18173                           
 18174                           ;stkvar	_divisor @ sp[(-10)+-16]
 18175                           ;stkvar	_dividend @ sp[(-10)+-8]
 18176  015B78  50E1               	movf	fsr1l,w,c
 18177  015B7A  0FEE               	addlw	-18
 18178  015B7C  6ED9               	movwf	fsr2l,c
 18179  015B7E  50E2               	movf	fsr1h,w,c
 18180  015B80  6EDA               	movwf	fsr2h,c
 18181  015B82  0EFF               	movlw	255
 18182  015B84  22DA               	addwfc	fsr2h,f,c
 18183  015B86  0EE6               	movlw	-26
 18184  015B88  50E3               	movf	plusw1,w,c
 18185  015B8A  5CDE               	subwf	postinc2,w,c
 18186  015B8C  0EE7               	movlw	-25
 18187  015B8E  50E3               	movf	plusw1,w,c
 18188  015B90  58DE               	subwfb	postinc2,w,c
 18189  015B92  0EE8               	movlw	-24
 18190  015B94  50E3               	movf	plusw1,w,c
 18191  015B96  58DE               	subwfb	postinc2,w,c
 18192  015B98  0EE9               	movlw	-23
 18193  015B9A  50E3               	movf	plusw1,w,c
 18194  015B9C  58DE               	subwfb	postinc2,w,c
 18195  015B9E  0EEA               	movlw	-22
 18196  015BA0  50E3               	movf	plusw1,w,c
 18197  015BA2  58DE               	subwfb	postinc2,w,c
 18198  015BA4  0EEB               	movlw	-21
 18199  015BA6  50E3               	movf	plusw1,w,c
 18200  015BA8  58DE               	subwfb	postinc2,w,c
 18201  015BAA  0EEC               	movlw	-20
 18202  015BAC  50E3               	movf	plusw1,w,c
 18203  015BAE  58DE               	subwfb	postinc2,w,c
 18204  015BB0  0EED               	movlw	-19
 18205  015BB2  50E3               	movf	plusw1,w,c
 18206  015BB4  58DE               	subwfb	postinc2,w,c
 18207  015BB6  A0D8               	btfss	status,0,c
 18208  015BB8  D021               	goto	l7070
 18209                           
 18210                           ;stkvar	_divisor @ sp[(-10)+-16]
 18211                           ;stkvar	_dividend @ sp[(-10)+-8]
 18212  015BBA  50E1               	movf	fsr1l,w,c
 18213  015BBC  0FEE               	addlw	-18
 18214  015BBE  6ED9               	movwf	fsr2l,c
 18215  015BC0  50E2               	movf	fsr1h,w,c
 18216  015BC2  6EDA               	movwf	fsr2h,c
 18217  015BC4  0EFF               	movlw	255
 18218  015BC6  22DA               	addwfc	fsr2h,f,c
 18219  015BC8  0EE6               	movlw	-26
 18220  015BCA  50E3               	movf	plusw1,w,c
 18221  015BCC  5EDE               	subwf	postinc2,f,c
 18222  015BCE  0EE7               	movlw	-25
 18223  015BD0  50E3               	movf	plusw1,w,c
 18224  015BD2  5ADE               	subwfb	postinc2,f,c
 18225  015BD4  0EE8               	movlw	-24
 18226  015BD6  50E3               	movf	plusw1,w,c
 18227  015BD8  5ADE               	subwfb	postinc2,f,c
 18228  015BDA  0EE9               	movlw	-23
 18229  015BDC  50E3               	movf	plusw1,w,c
 18230  015BDE  5ADE               	subwfb	postinc2,f,c
 18231  015BE0  0EEA               	movlw	-22
 18232  015BE2  50E3               	movf	plusw1,w,c
 18233  015BE4  5ADE               	subwfb	postinc2,f,c
 18234  015BE6  0EEB               	movlw	-21
 18235  015BE8  50E3               	movf	plusw1,w,c
 18236  015BEA  5ADE               	subwfb	postinc2,f,c
 18237  015BEC  0EEC               	movlw	-20
 18238  015BEE  50E3               	movf	plusw1,w,c
 18239  015BF0  5ADE               	subwfb	postinc2,f,c
 18240  015BF2  0EED               	movlw	-19
 18241  015BF4  50E3               	movf	plusw1,w,c
 18242  015BF6  5ADE               	subwfb	postinc2,f,c
 18243                           
 18244                           ;stkvar	_quotient @ sp[(-10)+0]
 18245  015BF8  0EF6               	movlw	-10
 18246  015BFA  80E3               	bsf	plusw1,0,c
 18247  015BFC                     l7070:
 18248                           
 18249                           ;stkvar	_divisor @ sp[(-10)+-16]
 18250  015BFC  90D8               	bcf	status,0,c
 18251  015BFE  0EED               	movlw	-19
 18252  015C00  32E3               	rrcf	plusw1,f,c
 18253  015C02  0EEC               	movlw	-20
 18254  015C04  32E3               	rrcf	plusw1,f,c
 18255  015C06  0EEB               	movlw	-21
 18256  015C08  32E3               	rrcf	plusw1,f,c
 18257  015C0A  0EEA               	movlw	-22
 18258  015C0C  32E3               	rrcf	plusw1,f,c
 18259  015C0E  0EE9               	movlw	-23
 18260  015C10  32E3               	rrcf	plusw1,f,c
 18261  015C12  0EE8               	movlw	-24
 18262  015C14  32E3               	rrcf	plusw1,f,c
 18263  015C16  0EE7               	movlw	-25
 18264  015C18  32E3               	rrcf	plusw1,f,c
 18265  015C1A  0EE6               	movlw	-26
 18266  015C1C  32E3               	rrcf	plusw1,f,c
 18267                           
 18268                           ;stkvar	_counter @ sp[(-10)+9]
 18269  015C1E  0EFF               	movlw	-1
 18270  015C20  50E3               	movf	plusw1,w,c
 18271  015C22  6E01               	movwf	btemp^0,c
 18272  015C24  0E01               	movlw	1
 18273  015C26  5E01               	subwf	btemp^0,f,c
 18274  015C28  0EFF               	movlw	-1
 18275  015C2A  0060  F007  FFE3   	movff	btemp,plusw1
 18276  015C30  A4D8               	btfss	status,2,c
 18277  015C32  D791               	goto	u5210
 18278  015C34                     u5230:
 18279                           
 18280                           ;stkvar	_sign @ sp[(-10)+8]
 18281  015C34  0EFE               	movlw	-2
 18282  015C36  50E3               	movf	plusw1,w,c
 18283  015C38  B4D8               	btfsc	status,2,c
 18284  015C3A  D025               	goto	u5250
 18285                           
 18286                           ;stkvar	_quotient @ sp[(-10)+0]
 18287                           ;stkvar	_quotient @ sp[(-10)+0]
 18288  015C3C  0EF6               	movlw	-10
 18289  015C3E  6CE3               	negf	plusw1,c
 18290  015C40  0EF7               	movlw	-9
 18291  015C42  1EE3               	comf	plusw1,f,c
 18292  015C44  0EF8               	movlw	-8
 18293  015C46  1EE3               	comf	plusw1,f,c
 18294  015C48  0EF9               	movlw	-7
 18295  015C4A  1EE3               	comf	plusw1,f,c
 18296  015C4C  0EFA               	movlw	-6
 18297  015C4E  1EE3               	comf	plusw1,f,c
 18298  015C50  0EFB               	movlw	-5
 18299  015C52  1EE3               	comf	plusw1,f,c
 18300  015C54  0EFC               	movlw	-4
 18301  015C56  1EE3               	comf	plusw1,f,c
 18302  015C58  0EFD               	movlw	-3
 18303  015C5A  1EE3               	comf	plusw1,f,c
 18304  015C5C  E314               	bnc	u5250
 18305  015C5E  0EF7               	movlw	-9
 18306  015C60  2AE3               	incf	plusw1,f,c
 18307  015C62  E311               	bnc	u5250
 18308  015C64  0EF8               	movlw	-8
 18309  015C66  2AE3               	incf	plusw1,f,c
 18310  015C68  E30E               	bnc	u5250
 18311  015C6A  0EF9               	movlw	-7
 18312  015C6C  2AE3               	incf	plusw1,f,c
 18313  015C6E  E30B               	bnc	u5250
 18314  015C70  0EFA               	movlw	-6
 18315  015C72  2AE3               	incf	plusw1,f,c
 18316  015C74  E308               	bnc	u5250
 18317  015C76  0EFB               	movlw	-5
 18318  015C78  2AE3               	incf	plusw1,f,c
 18319  015C7A  E305               	bnc	u5250
 18320  015C7C  0EFC               	movlw	-4
 18321  015C7E  2AE3               	incf	plusw1,f,c
 18322  015C80  E302               	bnc	u5250
 18323  015C82  0EFD               	movlw	-3
 18324  015C84  2AE3               	incf	plusw1,f,c
 18325  015C86                     u5250:
 18326                           
 18327                           ;stkvar	_quotient @ sp[(-10)+0]
 18328  015C86  0EF6               	movlw	246
 18329  015C88  24E1               	addwf	fsr1l,w,c
 18330  015C8A  6ED9               	movwf	fsr2l,c
 18331  015C8C  0EFF               	movlw	255
 18332  015C8E  20E2               	addwfc	fsr1h,w,c
 18333  015C90  6EDA               	movwf	fsr2h,c
 18334                           
 18335                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 18336  015C92  0E08               	movlw	8
 18337  015C94  6E01               	movwf	btemp^0,c
 18338  015C96  0EEE               	movlw	-18
 18339  015C98                     us526999:
 18340  015C98  006F FF7B FFE3     	movff	postinc2,plusw1
 18341  015C9E  28E8               	incf	wreg,w,c
 18342  015CA0  2E01               	decfsz	btemp^0,f,c
 18343  015CA2  D7FA               	bra	us526999
 18344                           
 18345                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 18346  015CA4  0EF6               	movlw	246
 18347  015CA6  26E1               	addwf	fsr1l,f,c
 18348  015CA8  0EFF               	movlw	255
 18349  015CAA  22E2               	addwfc	fsr1h,f,c
 18350  015CAC  0012               	return		;funcret
 18351  015CAE                     __end_of___aodiv:
 18352                           	opt callstack 0
 18353                           
 18354 ;; *************** function _ctoa *****************
 18355 ;; Defined at:
 18356 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18357 ;; Parameters:    Size  Location     Type
 18358 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18359 ;;		 -> f(6), NULL(0), 
 18360 ;;  c               1  [STACK] unsigned char 
 18361 ;; Auto vars:     Size  Location     Type
 18362 ;;  w               2  [STACK] int 
 18363 ;;  l               2    0        int 
 18364 ;; Return value:  Size  Location     Type
 18365 ;;                  2  [STACK] int 
 18366 ;; Registers used:
 18367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18368 ;; Tracked objects:
 18369 ;;		On entry : 0/0
 18370 ;;		On exit  : 0/0
 18371 ;;		Unchanged: 0/0
 18372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18377 ;;Total ram usage:        0 bytes
 18378 ;; Hardware stack levels used:    1
 18379 ;; Hardware stack levels required when called:   12
 18380 ;; This function calls:
 18381 ;;		_pad
 18382 ;; This function is called by:
 18383 ;;		_vfpfcnvrt
 18384 ;; This function uses a reentrant model
 18385 ;;
 18386                           
 18387                           	psect	text66
 18388  018486                     __ptext66:
 18389                           	opt callstack 0
 18390  018486                     _ctoa:
 18391                           	opt callstack 0
 18392                           
 18393                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18394  018486  52E6               	movf	postinc1,f,c
 18395  018488  52E6               	movf	postinc1,f,c
 18396                           
 18397                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 18398                           
 18399                           ;incstack = 0
 18400  01848A  5024               	movf	_width^0,w,c
 18401  01848C  1025               	iorwf	(_width+1)^0,w,c
 18402  01848E  A4D8               	btfss	status,2,c
 18403  018490  D009               	goto	l10428
 18404                           
 18405                           ;stkvar	_w @ sp[(-2)+0]
 18406  018492  0EFE               	movlw	-2
 18407  018494  0060  F093  FFE3   	movff	_width,plusw1
 18408  01849A  0EFF               	movlw	-1
 18409  01849C  0060  F097  FFE3   	movff	_width+1,plusw1
 18410  0184A2  D016               	goto	l10430
 18411  0184A4                     l10428:
 18412  0184A4  0EFF               	movlw	255
 18413  0184A6  6E0B               	movwf	(btemp+10)^0,c
 18414  0184A8  0EFF               	movlw	255
 18415  0184AA  6E0C               	movwf	(btemp+11)^0,c
 18416  0184AC  0060  F090  F009   	movff	_width,btemp+8
 18417  0184B2  0060  F094  F00A   	movff	_width+1,btemp+9
 18418  0184B8  500B               	movf	(btemp+10)^0,w,c
 18419  0184BA  2609               	addwf	(btemp+8)^0,f,c
 18420  0184BC  500C               	movf	(btemp+11)^0,w,c
 18421  0184BE  220A               	addwfc	(btemp+9)^0,f,c
 18422                           
 18423                           ;stkvar	_w @ sp[(-2)+0]
 18424  0184C0  0EFE               	movlw	-2
 18425  0184C2  0060  F027  FFE3   	movff	btemp+8,plusw1
 18426  0184C8  0EFF               	movlw	-1
 18427  0184CA  0060  F02B  FFE3   	movff	btemp+9,plusw1
 18428  0184D0                     l10430:
 18429                           
 18430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 18431                           ;stkvar	_c @ sp[(-2)+-3]
 18432  0184D0  0EFB               	movlw	-5
 18433  0184D2  006F FF8C  F394    	movff	plusw1,_dbuf
 18434                           
 18435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 18436  0184D8  0103               	movlb	3	; () banked
 18437  0184DA  6B95               	clrf	(_dbuf+1)& (0+255),b
 18438                           
 18439                           ; BSR set to: 3
 18440                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 18441                           ;stkvar	_w @ sp[(-2)+0]
 18442  0184DC  0EFE               	movlw	-2
 18443  0184DE  006F FF8F FFE6     	movff	plusw1,postinc1
 18444  0184E4  006F FF8F FFE6     	movff	plusw1,postinc1
 18445  0184EA  0E94               	movlw	low _dbuf
 18446  0184EC  6EE6               	movwf	postinc1,c
 18447  0184EE  0E03               	movlw	high _dbuf
 18448  0184F0  6EE6               	movwf	postinc1,c
 18449                           
 18450                           ;stkvar	_fp @ sp[(-6)+-2]
 18451  0184F2  0EF8               	movlw	-8
 18452  0184F4  006F FF8F FFE6     	movff	plusw1,postinc1
 18453  0184FA  006F FF8F FFE6     	movff	plusw1,postinc1
 18454  018500  ECA5  F0B9         	call	_pad	;wreg free
 18455                           
 18456                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 18457  018504  0EFB               	movlw	251
 18458  018506  26E1               	addwf	fsr1l,f,c
 18459  018508  0EFF               	movlw	255
 18460  01850A  22E2               	addwfc	fsr1h,f,c
 18461  01850C  0012               	return		;funcret
 18462  01850E                     __end_of_ctoa:
 18463                           	opt callstack 0
 18464                           
 18465 ;; *************** function _pad *****************
 18466 ;; Defined at:
 18467 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18468 ;; Parameters:    Size  Location     Type
 18469 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18470 ;;		 -> f(6), NULL(0), 
 18471 ;;  buf             2  [STACK] PTR unsigned char 
 18472 ;;		 -> dbuf(80), 
 18473 ;;  p               2  [STACK] int 
 18474 ;; Auto vars:     Size  Location     Type
 18475 ;;  w               2  [STACK] int 
 18476 ;;  i               2  [STACK] int 
 18477 ;; Return value:  Size  Location     Type
 18478 ;;                  2  [STACK] int 
 18479 ;; Registers used:
 18480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18481 ;; Tracked objects:
 18482 ;;		On entry : 0/3
 18483 ;;		On exit  : 0/0
 18484 ;;		Unchanged: 0/0
 18485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18490 ;;Total ram usage:        0 bytes
 18491 ;; Hardware stack levels used:    1
 18492 ;; Hardware stack levels required when called:   11
 18493 ;; This function calls:
 18494 ;;		_fputc
 18495 ;;		_fputs
 18496 ;;		_strlen
 18497 ;; This function is called by:
 18498 ;;		_ctoa
 18499 ;;		_dtoa
 18500 ;;		_efgtoa
 18501 ;;		_xtoa
 18502 ;; This function uses a reentrant model
 18503 ;;
 18504                           
 18505                           	psect	text67
 18506  01734A                     __ptext67:
 18507                           	opt callstack 0
 18508  01734A                     _pad:
 18509                           	opt callstack 0
 18510                           
 18511                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18512  01734A  52E6               	movf	postinc1,f,c
 18513  01734C  52E6               	movf	postinc1,f,c
 18514  01734E  52E6               	movf	postinc1,f,c
 18515  017350  52E6               	movf	postinc1,f,c
 18516                           
 18517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18518                           
 18519                           ;incstack = 0
 18520  017352  A028               	btfss	_flags^0,0,c
 18521  017354  D010               	goto	l10402
 18522                           
 18523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18524                           ;stkvar	_fp @ sp[(-4)+-2]
 18525  017356  0EFA               	movlw	-6
 18526  017358  006F FF8F FFE6     	movff	plusw1,postinc1
 18527  01735E  006F FF8F FFE6     	movff	plusw1,postinc1
 18528                           
 18529                           ;stkvar	_buf @ sp[(-6)+-4]
 18530  017364  0EF6               	movlw	-10
 18531  017366  006F FF8F FFE6     	movff	plusw1,postinc1
 18532  01736C  006F FF8F FFE6     	movff	plusw1,postinc1
 18533  017372  ECD2  F0C0         	call	_fputs	;wreg free
 18534  017376                     l10402:
 18535                           
 18536                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18537                           ;stkvar	_p @ sp[(-4)+-6]
 18538  017376  0EF7               	movlw	-9
 18539  017378  BEE3               	btfsc	plusw1,7,c
 18540  01737A  D011               	goto	l10406
 18541                           
 18542                           ;stkvar	_p @ sp[(-4)+-6]
 18543                           ;stkvar	_w @ sp[(-4)+0]
 18544  01737C  0EF6               	movlw	-10
 18545  01737E  006F FF8C  F001    	movff	plusw1,btemp
 18546  017384  0EFC               	movlw	-4
 18547  017386  0060  F007  FFE3   	movff	btemp,plusw1
 18548  01738C  0EF7               	movlw	-9
 18549  01738E  006F FF8C  F001    	movff	plusw1,btemp
 18550  017394  0EFD               	movlw	-3
 18551  017396  0060  F007  FFE3   	movff	btemp,plusw1
 18552  01739C  D004               	goto	l2017
 18553  01739E                     l10406:
 18554                           
 18555                           ;stkvar	_w @ sp[(-4)+0]
 18556  01739E  0EFC               	movlw	-4
 18557  0173A0  6AE3               	clrf	plusw1,c
 18558  0173A2  0EFD               	movlw	-3
 18559  0173A4  6AE3               	clrf	plusw1,c
 18560  0173A6                     l2017:
 18561                           
 18562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18563                           ;stkvar	_i @ sp[(-4)+2]
 18564  0173A6  0EFE               	movlw	-2
 18565  0173A8  6AE3               	clrf	plusw1,c
 18566  0173AA  0EFF               	movlw	-1
 18567  0173AC  6AE3               	clrf	plusw1,c
 18568                           
 18569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18570  0173AE  D01E               	goto	l10412
 18571  0173B0                     l10408:
 18572                           
 18573                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18574                           ;stkvar	_fp @ sp[(-4)+-2]
 18575  0173B0  0EFA               	movlw	-6
 18576  0173B2  006F FF8F FFE6     	movff	plusw1,postinc1
 18577  0173B8  006F FF8F FFE6     	movff	plusw1,postinc1
 18578  0173BE  0E20               	movlw	32
 18579  0173C0  6EE6               	movwf	postinc1,c
 18580  0173C2  0E00               	movlw	0
 18581  0173C4  6EE6               	movwf	postinc1,c
 18582  0173C6  EC87  F0B8         	call	_fputc	;wreg free
 18583                           
 18584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18585                           ;stkvar	_i @ sp[(-4)+2]
 18586  0173CA  0EFE               	movlw	-2
 18587  0173CC  50E3               	movf	plusw1,w,c
 18588  0173CE  0F01               	addlw	1
 18589  0173D0  6E01               	movwf	btemp^0,c
 18590  0173D2  0EFE               	movlw	-2
 18591  0173D4  0060  F007  FFE3   	movff	btemp,plusw1
 18592  0173DA  6A01               	clrf	btemp^0,c
 18593  0173DC  0EFF               	movlw	-1
 18594  0173DE  50E3               	movf	plusw1,w,c
 18595  0173E0  2001               	addwfc	btemp^0,w,c
 18596  0173E2  6E01               	movwf	btemp^0,c
 18597  0173E4  0EFF               	movlw	-1
 18598  0173E6  0060  F007  FFE3   	movff	btemp,plusw1
 18599  0173EC                     l10412:
 18600                           
 18601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18602                           ;stkvar	_w @ sp[(-4)+0]
 18603                           ;stkvar	_i @ sp[(-4)+2]
 18604  0173EC  50E1               	movf	fsr1l,w,c
 18605  0173EE  0FFE               	addlw	-2
 18606  0173F0  6ED9               	movwf	fsr2l,c
 18607  0173F2  50E2               	movf	fsr1h,w,c
 18608  0173F4  6EDA               	movwf	fsr2h,c
 18609  0173F6  0EFF               	movlw	255
 18610  0173F8  22DA               	addwfc	fsr2h,f,c
 18611  0173FA  0EFC               	movlw	-4
 18612  0173FC  50E3               	movf	plusw1,w,c
 18613  0173FE  5CDE               	subwf	postinc2,w,c
 18614  017400  50DE               	movf	postinc2,w,c
 18615  017402  0A80               	xorlw	128
 18616  017404  6E01               	movwf	btemp^0,c
 18617  017406  0EFD               	movlw	-3
 18618  017408  50E3               	movf	plusw1,w,c
 18619  01740A  0A80               	xorlw	128
 18620  01740C  5801               	subwfb	btemp^0,w,c
 18621  01740E  A0D8               	btfss	status,0,c
 18622  017410  D7CF               	goto	l10408
 18623                           
 18624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18625  017412  B028               	btfsc	_flags^0,0,c
 18626  017414  D010               	goto	l10416
 18627                           
 18628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18629                           ;stkvar	_fp @ sp[(-4)+-2]
 18630  017416  0EFA               	movlw	-6
 18631  017418  006F FF8F FFE6     	movff	plusw1,postinc1
 18632  01741E  006F FF8F FFE6     	movff	plusw1,postinc1
 18633                           
 18634                           ;stkvar	_buf @ sp[(-6)+-4]
 18635  017424  0EF6               	movlw	-10
 18636  017426  006F FF8F FFE6     	movff	plusw1,postinc1
 18637  01742C  006F FF8F FFE6     	movff	plusw1,postinc1
 18638  017432  ECD2  F0C0         	call	_fputs	;wreg free
 18639  017436                     l10416:
 18640                           
 18641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18642                           ;stkvar	_w @ sp[(-4)+0]
 18643                           ;stkvar	_buf @ sp[(-4)+-4]
 18644  017436  0EF8               	movlw	-8
 18645  017438  006F FF8F FFE6     	movff	plusw1,postinc1
 18646  01743E  006F FF8F FFE6     	movff	plusw1,postinc1
 18647  017444  EC81  F0C0         	call	_strlen	;wreg free
 18648  017448  0EFC               	movlw	-4
 18649  01744A  50E3               	movf	plusw1,w,c
 18650  01744C  2601               	addwf	btemp^0,f,c
 18651  01744E  0EFD               	movlw	-3
 18652  017450  50E3               	movf	plusw1,w,c
 18653  017452  2202               	addwfc	(btemp+1)^0,f,c
 18654                           
 18655                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 18656  017454  0EF6               	movlw	246
 18657  017456  26E1               	addwf	fsr1l,f,c
 18658  017458  0EFF               	movlw	255
 18659  01745A  22E2               	addwfc	fsr1h,f,c
 18660  01745C  0012               	return		;funcret
 18661  01745E                     __end_of_pad:
 18662                           	opt callstack 0
 18663                           
 18664 ;; *************** function _strlen *****************
 18665 ;; Defined at:
 18666 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 18667 ;; Parameters:    Size  Location     Type
 18668 ;;  s               2  [STACK] PTR const unsigned char 
 18669 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18670 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18671 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18672 ;; Auto vars:     Size  Location     Type
 18673 ;;  a               2  [STACK] PTR const unsigned char 
 18674 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18675 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18676 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18677 ;; Return value:  Size  Location     Type
 18678 ;;                  2  [STACK] unsigned int 
 18679 ;; Registers used:
 18680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 18681 ;; Tracked objects:
 18682 ;;		On entry : 0/0
 18683 ;;		On exit  : 0/0
 18684 ;;		Unchanged: 0/0
 18685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18690 ;;Total ram usage:        0 bytes
 18691 ;; Hardware stack levels used:    1
 18692 ;; Hardware stack levels required when called:    7
 18693 ;; This function calls:
 18694 ;;		Nothing
 18695 ;; This function is called by:
 18696 ;;		_eaDogM_WriteString
 18697 ;;		_pad
 18698 ;;		_stoa
 18699 ;; This function uses a reentrant model
 18700 ;;
 18701                           
 18702                           	psect	text68
 18703  018102                     __ptext68:
 18704                           	opt callstack 0
 18705  018102                     _strlen:
 18706                           	opt callstack 0
 18707                           
 18708                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18709  018102  52E6               	movf	postinc1,f,c
 18710  018104  52E6               	movf	postinc1,f,c
 18711                           
 18712                           ;stkvar	_s @ sp[(-2)+-2]
 18713                           
 18714                           ;incstack = 0
 18715  018106  0EFC               	movlw	-4
 18716  018108  006F FF8C  F00B    	movff	plusw1,btemp+10
 18717  01810E  0EFD               	movlw	-3
 18718  018110  006F FF8C  F00C    	movff	plusw1,btemp+11
 18719                           
 18720                           ;stkvar	_a @ sp[(-2)+0]
 18721  018116  0EFF               	movlw	-1
 18722  018118  0060  F033  FFE3   	movff	btemp+11,plusw1
 18723  01811E  0EFE               	movlw	-2
 18724  018120  0060  F02F  FFE3   	movff	btemp+10,plusw1
 18725  018126  D011               	goto	l6884
 18726  018128                     l6882:
 18727                           
 18728                           ;stkvar	_s @ sp[(-2)+-2]
 18729  018128  0EFC               	movlw	-4
 18730  01812A  50E3               	movf	plusw1,w,c
 18731  01812C  0F01               	addlw	1
 18732  01812E  6E01               	movwf	btemp^0,c
 18733  018130  0EFC               	movlw	-4
 18734  018132  0060  F007  FFE3   	movff	btemp,plusw1
 18735  018138  6A01               	clrf	btemp^0,c
 18736  01813A  0EFD               	movlw	-3
 18737  01813C  50E3               	movf	plusw1,w,c
 18738  01813E  2001               	addwfc	btemp^0,w,c
 18739  018140  6E01               	movwf	btemp^0,c
 18740  018142  0EFD               	movlw	-3
 18741  018144  0060  F007  FFE3   	movff	btemp,plusw1
 18742  01814A                     l6884:
 18743                           
 18744                           ;stkvar	_s @ sp[(-2)+-2]
 18745  01814A  0EFC               	movlw	-4
 18746  01814C  006F FF8F FFF6     	movff	plusw1,tblptrl
 18747  018152  0EFD               	movlw	-3
 18748  018154  006F FF8F FFF7     	movff	plusw1,tblptrh
 18749  01815A  0E00               	movlw	low (__mediumconst shr (0+16))
 18750  01815C  6EF8               	movwf	tblptru,c
 18751  01815E  0E1F               	movlw	(high __ramtop+-1)
 18752  018160  64F7               	cpfsgt	tblptrh,c
 18753  018162  D003               	bra	u4747
 18754  018164  0008               	tblrd		*
 18755  018166  50F5               	movf	tablat,w,c
 18756  018168  D007               	bra	u4740
 18757  01816A                     u4747:
 18758  01816A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18759  018170  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18760  018176  50EF               	movf	indf0,w,c
 18761  018178                     u4740:
 18762  018178  0900               	iorlw	0
 18763  01817A  A4D8               	btfss	status,2,c
 18764  01817C  D7D5               	goto	l6882
 18765                           
 18766                           ;stkvar	_a @ sp[(-2)+0]
 18767                           ;stkvar	_s @ sp[(-2)+-2]
 18768  01817E  0EFC               	movlw	-4
 18769  018180  006F FF8C  F001    	movff	plusw1,btemp
 18770  018186  0EFD               	movlw	-3
 18771  018188  006F FF8C  F002    	movff	plusw1,btemp+1
 18772  01818E  0EFE               	movlw	-2
 18773  018190  50E3               	movf	plusw1,w,c
 18774  018192  5E01               	subwf	btemp^0,f,c
 18775  018194  0EFF               	movlw	-1
 18776  018196  50E3               	movf	plusw1,w,c
 18777  018198  5A02               	subwfb	(btemp+1)^0,f,c
 18778                           
 18779                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 18780  01819A  52E5               	movf	postdec1,f,c
 18781  01819C  52E5               	movf	postdec1,f,c
 18782  01819E  52E5               	movf	postdec1,f,c
 18783  0181A0  52E5               	movf	postdec1,f,c
 18784  0181A2  0012               	return		;funcret
 18785  0181A4                     __end_of_strlen:
 18786                           	opt callstack 0
 18787                           
 18788 ;; *************** function _fputs *****************
 18789 ;; Defined at:
 18790 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 18791 ;; Parameters:    Size  Location     Type
 18792 ;;  s               2  [STACK] PTR const unsigned char 
 18793 ;;		 -> dbuf(80), 
 18794 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18795 ;;		 -> f(6), NULL(0), 
 18796 ;; Auto vars:     Size  Location     Type
 18797 ;;  i               2  [STACK] int 
 18798 ;;  c               1  [STACK] unsigned char 
 18799 ;; Return value:  Size  Location     Type
 18800 ;;                  2  [STACK] int 
 18801 ;; Registers used:
 18802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18803 ;; Tracked objects:
 18804 ;;		On entry : 0/3
 18805 ;;		On exit  : 0/0
 18806 ;;		Unchanged: 0/0
 18807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18812 ;;Total ram usage:        0 bytes
 18813 ;; Hardware stack levels used:    1
 18814 ;; Hardware stack levels required when called:   10
 18815 ;; This function calls:
 18816 ;;		_fputc
 18817 ;; This function is called by:
 18818 ;;		_pad
 18819 ;; This function uses a reentrant model
 18820 ;;
 18821                           
 18822                           	psect	text69
 18823  0181A4                     __ptext69:
 18824                           	opt callstack 0
 18825  0181A4                     _fputs:
 18826                           	opt callstack 0
 18827                           
 18828                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18829  0181A4  52E6               	movf	postinc1,f,c
 18830  0181A6  52E6               	movf	postinc1,f,c
 18831  0181A8  52E6               	movf	postinc1,f,c
 18832                           
 18833                           ;stkvar	_i @ sp[(-3)+0]
 18834                           
 18835                           ;incstack = 0
 18836  0181AA  0EFD               	movlw	-3
 18837  0181AC  6AE3               	clrf	plusw1,c
 18838  0181AE  0EFE               	movlw	-2
 18839  0181B0  6AE3               	clrf	plusw1,c
 18840  0181B2  D01F               	goto	l10396
 18841  0181B4                     l10392:
 18842                           
 18843                           ;stkvar	_fp @ sp[(-3)+-4]
 18844  0181B4  0EF9               	movlw	-7
 18845  0181B6  006F FF8F FFE6     	movff	plusw1,postinc1
 18846  0181BC  006F FF8F FFE6     	movff	plusw1,postinc1
 18847                           
 18848                           ;stkvar	_c @ sp[(-5)+2]
 18849  0181C2  0EFD               	movlw	-3
 18850  0181C4  50E3               	movf	plusw1,w,c
 18851  0181C6  6EE6               	movwf	postinc1,c
 18852  0181C8  0E00               	movlw	0
 18853  0181CA  6EE6               	movwf	postinc1,c
 18854  0181CC  EC87  F0B8         	call	_fputc	;wreg free
 18855                           
 18856                           ;stkvar	_i @ sp[(-3)+0]
 18857  0181D0  0EFD               	movlw	-3
 18858  0181D2  50E3               	movf	plusw1,w,c
 18859  0181D4  0F01               	addlw	1
 18860  0181D6  6E01               	movwf	btemp^0,c
 18861  0181D8  0EFD               	movlw	-3
 18862  0181DA  0060  F007  FFE3   	movff	btemp,plusw1
 18863  0181E0  6A01               	clrf	btemp^0,c
 18864  0181E2  0EFE               	movlw	-2
 18865  0181E4  50E3               	movf	plusw1,w,c
 18866  0181E6  2001               	addwfc	btemp^0,w,c
 18867  0181E8  6E01               	movwf	btemp^0,c
 18868  0181EA  0EFE               	movlw	-2
 18869  0181EC  0060  F007  FFE3   	movff	btemp,plusw1
 18870  0181F2                     l10396:
 18871                           
 18872                           ;stkvar	_i @ sp[(-3)+0]
 18873  0181F2  0EFD               	movlw	-3
 18874  0181F4  006F FF8C  F00B    	movff	plusw1,btemp+10
 18875  0181FA  0EFE               	movlw	-2
 18876  0181FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 18877                           
 18878                           ;stkvar	_s @ sp[(-3)+-2]
 18879  018202  0EFB               	movlw	-5
 18880  018204  006F FF8C  F009    	movff	plusw1,btemp+8
 18881  01820A  0EFC               	movlw	-4
 18882  01820C  006F FF8C  F00A    	movff	plusw1,btemp+9
 18883  018212  500B               	movf	(btemp+10)^0,w,c
 18884  018214  2409               	addwf	(btemp+8)^0,w,c
 18885  018216  6ED9               	movwf	fsr2l,c
 18886  018218  500C               	movf	(btemp+11)^0,w,c
 18887  01821A  200A               	addwfc	(btemp+9)^0,w,c
 18888  01821C  6EDA               	movwf	fsr2h,c
 18889  01821E  50DF               	movf	indf2,w,c
 18890  018220  6E0C               	movwf	(btemp+11)^0,c
 18891                           
 18892                           ;stkvar	_c @ sp[(-3)+2]
 18893  018222  0EFF               	movlw	-1
 18894  018224  0060  F033  FFE3   	movff	btemp+11,plusw1
 18895  01822A  0EFF               	movlw	-1
 18896  01822C  50E3               	movf	plusw1,w,c
 18897  01822E  A4D8               	btfss	status,2,c
 18898  018230  D7C1               	goto	l10392
 18899                           
 18900                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18901  018232  0EF9               	movlw	249
 18902  018234  26E1               	addwf	fsr1l,f,c
 18903  018236  0EFF               	movlw	255
 18904  018238  22E2               	addwfc	fsr1h,f,c
 18905  01823A  0012               	return		;funcret
 18906  01823C                     __end_of_fputs:
 18907                           	opt callstack 0
 18908                           
 18909 ;; *************** function _fputc *****************
 18910 ;; Defined at:
 18911 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 18912 ;; Parameters:    Size  Location     Type
 18913 ;;  c               2  [STACK] int 
 18914 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18915 ;;		 -> f(6), NULL(0), 
 18916 ;; Auto vars:     Size  Location     Type
 18917 ;;		None
 18918 ;; Return value:  Size  Location     Type
 18919 ;;                  2  [STACK] int 
 18920 ;; Registers used:
 18921 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18922 ;; Tracked objects:
 18923 ;;		On entry : 0/0
 18924 ;;		On exit  : 0/0
 18925 ;;		Unchanged: 0/0
 18926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18931 ;;Total ram usage:        0 bytes
 18932 ;; Hardware stack levels used:    1
 18933 ;; Hardware stack levels required when called:    9
 18934 ;; This function calls:
 18935 ;;		_putch
 18936 ;; This function is called by:
 18937 ;;		_pad
 18938 ;;		_stoa
 18939 ;;		_vfpfcnvrt
 18940 ;;		_fputs
 18941 ;; This function uses a reentrant model
 18942 ;;
 18943                           
 18944                           	psect	text70
 18945  01710E                     __ptext70:
 18946                           	opt callstack 0
 18947  01710E                     _fputc:
 18948                           	opt callstack 12
 18949                           
 18950                           ;stkvar	_fp @ sp[(0)+-4]
 18951                           
 18952                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18953                           ;incstack = 0
 18954  01710E  0EFC               	movlw	-4
 18955  017110  006F FF8C  F001    	movff	plusw1,btemp
 18956  017116  0EFD               	movlw	-3
 18957  017118  50E3               	movf	plusw1,w,c
 18958  01711A  1001               	iorwf	btemp^0,w,c
 18959  01711C  B4D8               	btfsc	status,2,c
 18960  01711E  D009               	goto	u9360
 18961                           
 18962                           ;stkvar	_fp @ sp[(0)+-4]
 18963  017120  0EFC               	movlw	-4
 18964  017122  006F FF8C  F001    	movff	plusw1,btemp
 18965  017128  0EFD               	movlw	-3
 18966  01712A  50E3               	movf	plusw1,w,c
 18967  01712C  1001               	iorwf	btemp^0,w,c
 18968  01712E  A4D8               	btfss	status,2,c
 18969  017130  D006               	goto	l10380
 18970  017132                     u9360:
 18971                           
 18972                           ;stkvar	_c @ sp[(0)+-2]
 18973  017132  0EFE               	movlw	-2
 18974  017134  50E3               	movf	plusw1,w,c
 18975  017136  6EE6               	movwf	postinc1,c
 18976  017138  ECD4  F0CB         	call	_putch	;wreg free
 18977  01713C  D075               	goto	l3035
 18978  01713E                     l10380:
 18979                           
 18980                           ;stkvar	_fp @ sp[(0)+-4]
 18981  01713E  0EFC               	movlw	-4
 18982  017140  006F FF8C  F00B    	movff	plusw1,btemp+10
 18983  017146  0EFD               	movlw	-3
 18984  017148  006F FF8C  F00C    	movff	plusw1,btemp+11
 18985  01714E  0E04               	movlw	4
 18986  017150  240B               	addwf	(btemp+10)^0,w,c
 18987  017152  6ED9               	movwf	fsr2l,c
 18988  017154  0E00               	movlw	0
 18989  017156  200C               	addwfc	(btemp+11)^0,w,c
 18990  017158  6EDA               	movwf	fsr2h,c
 18991  01715A  50DE               	movf	postinc2,w,c
 18992  01715C  10DE               	iorwf	postinc2,w,c
 18993  01715E  B4D8               	btfsc	status,2,c
 18994  017160  D026               	goto	u9380
 18995                           
 18996                           ;stkvar	_fp @ sp[(0)+-4]
 18997  017162  0EFC               	movlw	-4
 18998  017164  006F FF8C  F00B    	movff	plusw1,btemp+10
 18999  01716A  0EFD               	movlw	-3
 19000  01716C  006F FF8C  F00C    	movff	plusw1,btemp+11
 19001  017172  0E04               	movlw	4
 19002  017174  240B               	addwf	(btemp+10)^0,w,c
 19003  017176  6ED9               	movwf	fsr2l,c
 19004  017178  0E00               	movlw	0
 19005  01717A  200C               	addwfc	(btemp+11)^0,w,c
 19006  01717C  6EDA               	movwf	fsr2h,c
 19007                           
 19008                           ;stkvar	_fp @ sp[(0)+-4]
 19009  01717E  0EFC               	movlw	-4
 19010  017180  006F FF8C  F00B    	movff	plusw1,btemp+10
 19011  017186  0EFD               	movlw	-3
 19012  017188  006F FF8C  F00C    	movff	plusw1,btemp+11
 19013  01718E  0E02               	movlw	2
 19014  017190  240B               	addwf	(btemp+10)^0,w,c
 19015  017192  6EE9               	movwf	fsr0l,c
 19016  017194  0E00               	movlw	0
 19017  017196  200C               	addwfc	(btemp+11)^0,w,c
 19018  017198  6EEA               	movwf	fsr0h,c
 19019  01719A  50DE               	movf	postinc2,w,c
 19020  01719C  5CEE               	subwf	postinc0,w,c
 19021  01719E  50EE               	movf	postinc0,w,c
 19022  0171A0  0A80               	xorlw	128
 19023  0171A2  6E01               	movwf	btemp^0,c
 19024  0171A4  50DE               	movf	postinc2,w,c
 19025  0171A6  0A80               	xorlw	128
 19026  0171A8  5801               	subwfb	btemp^0,w,c
 19027  0171AA  B0D8               	btfsc	status,0,c
 19028  0171AC  D03D               	goto	l3035
 19029  0171AE                     u9380:
 19030                           
 19031                           ;stkvar	_c @ sp[(0)+-2]
 19032                           ;stkvar	_fp @ sp[(0)+-4]
 19033  0171AE  0EFC               	movlw	-4
 19034  0171B0  006F FF8C  F00B    	movff	plusw1,btemp+10
 19035  0171B6  0EFD               	movlw	-3
 19036  0171B8  006F FF8C  F00C    	movff	plusw1,btemp+11
 19037  0171BE  0E02               	movlw	2
 19038  0171C0  240B               	addwf	(btemp+10)^0,w,c
 19039  0171C2  6ED9               	movwf	fsr2l,c
 19040  0171C4  0E00               	movlw	0
 19041  0171C6  200C               	addwfc	(btemp+11)^0,w,c
 19042  0171C8  6EDA               	movwf	fsr2h,c
 19043  0171CA  006F FF78  F00B    	movff	postinc2,btemp+10
 19044  0171D0  006F FF74  F00C    	movff	postdec2,btemp+11
 19045                           
 19046                           ;stkvar	_fp @ sp[(0)+-4]
 19047  0171D6  0EFC               	movlw	-4
 19048  0171D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 19049  0171DE  0EFD               	movlw	-3
 19050  0171E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 19051  0171E6  006F FF78  F009    	movff	postinc2,btemp+8
 19052  0171EC  006F FF74  F00A    	movff	postdec2,btemp+9
 19053  0171F2  500B               	movf	(btemp+10)^0,w,c
 19054  0171F4  2409               	addwf	(btemp+8)^0,w,c
 19055  0171F6  6ED9               	movwf	fsr2l,c
 19056  0171F8  500C               	movf	(btemp+11)^0,w,c
 19057  0171FA  200A               	addwfc	(btemp+9)^0,w,c
 19058  0171FC  6EDA               	movwf	fsr2h,c
 19059  0171FE  0EFE               	movlw	-2
 19060  017200  006F FF8F FFDF     	movff	plusw1,indf2
 19061                           
 19062                           ;stkvar	_fp @ sp[(0)+-4]
 19063  017206  0EFC               	movlw	-4
 19064  017208  006F FF8C  F00B    	movff	plusw1,btemp+10
 19065  01720E  0EFD               	movlw	-3
 19066  017210  006F FF8C  F00C    	movff	plusw1,btemp+11
 19067  017216  0E02               	movlw	2
 19068  017218  240B               	addwf	(btemp+10)^0,w,c
 19069  01721A  6ED9               	movwf	fsr2l,c
 19070  01721C  0E00               	movlw	0
 19071  01721E  200C               	addwfc	(btemp+11)^0,w,c
 19072  017220  6EDA               	movwf	fsr2h,c
 19073  017222  2ADE               	incf	postinc2,f,c
 19074  017224  0E00               	movlw	0
 19075  017226  22DD               	addwfc	postdec2,f,c
 19076  017228                     l3035:
 19077                           
 19078                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19079  017228  52E5               	movf	postdec1,f,c
 19080  01722A  52E5               	movf	postdec1,f,c
 19081  01722C  52E5               	movf	postdec1,f,c
 19082  01722E  52E5               	movf	postdec1,f,c
 19083  017230  0012               	return		;funcret
 19084  017232                     __end_of_fputc:
 19085                           	opt callstack 0
 19086                           
 19087 ;; *************** function _putch *****************
 19088 ;; Defined at:
 19089 ;;		line 168 in file "eadog.c"
 19090 ;; Parameters:    Size  Location     Type
 19091 ;;  c               1  [STACK] unsigned char 
 19092 ;; Auto vars:     Size  Location     Type
 19093 ;;		None
 19094 ;; Return value:  Size  Location     Type
 19095 ;;                  1  [STACK] void 
 19096 ;; Registers used:
 19097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19098 ;; Tracked objects:
 19099 ;;		On entry : 0/0
 19100 ;;		On exit  : 0/0
 19101 ;;		Unchanged: 0/0
 19102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19107 ;;Total ram usage:        0 bytes
 19108 ;; Hardware stack levels used:    1
 19109 ;; Hardware stack levels required when called:    8
 19110 ;; This function calls:
 19111 ;;		_ringBufS_put_dma
 19112 ;; This function is called by:
 19113 ;;		_fputc
 19114 ;; This function uses a reentrant model
 19115 ;;
 19116                           
 19117                           	psect	text71
 19118  0197A8                     __ptext71:
 19119                           	opt callstack 0
 19120  0197A8                     _putch:
 19121                           	opt callstack 12
 19122                           
 19123                           ;eadog.c: 168: void putch(char c);eadog.c: 169: {;eadog.c: 170:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 19124                           ;stkvar	_c @ sp[(0)+-1]
 19125                           
 19126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19127                           ;incstack = 0
 19128  0197A8  0EFF               	movlw	-1
 19129  0197AA  50E3               	movf	plusw1,w,c
 19130  0197AC  6EE6               	movwf	postinc1,c
 19131  0197AE  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
 19132  0197B4  0060  F243  FFE6   	movff	_spi_link+7,postinc1
 19133  0197BA  ECD9  F0BF         	call	_ringBufS_put_dma	;wreg free
 19134                           
 19135                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 19136  0197BE  52E5               	movf	postdec1,f,c
 19137  0197C0  0012               	return		;funcret
 19138  0197C2                     __end_of_putch:
 19139                           	opt callstack 0
 19140                           
 19141 ;; *************** function _ringBufS_put_dma *****************
 19142 ;; Defined at:
 19143 ;;		line 67 in file "ringbufs.c"
 19144 ;; Parameters:    Size  Location     Type
 19145 ;;  _this           2  [STACK] PTR struct ringBufS_t
 19146 ;;		 -> ring_buf1(67), 
 19147 ;;  c               1  [STACK] const unsigned char 
 19148 ;; Auto vars:     Size  Location     Type
 19149 ;;		None
 19150 ;; Return value:  Size  Location     Type
 19151 ;;                  1  [STACK] void 
 19152 ;; Registers used:
 19153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 19154 ;; Tracked objects:
 19155 ;;		On entry : 0/0
 19156 ;;		On exit  : 0/0
 19157 ;;		Unchanged: 0/0
 19158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19163 ;;Total ram usage:        0 bytes
 19164 ;; Hardware stack levels used:    1
 19165 ;; Hardware stack levels required when called:    7
 19166 ;; This function calls:
 19167 ;;		Nothing
 19168 ;; This function is called by:
 19169 ;;		_putch
 19170 ;; This function uses a reentrant model
 19171 ;;
 19172                           
 19173                           	psect	text72
 19174  017FB2                     __ptext72:
 19175                           	opt callstack 0
 19176  017FB2                     _ringBufS_put_dma:
 19177                           	opt callstack 12
 19178                           
 19179                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 19180                           ;stkvar	__this @ sp[(0)+-2]
 19181                           
 19182                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19183                           ;incstack = 0
 19184  017FB2  0EFE               	movlw	-2
 19185  017FB4  006F FF8C  F00B    	movff	plusw1,btemp+10
 19186  017FBA  0EFF               	movlw	-1
 19187  017FBC  006F FF8C  F00C    	movff	plusw1,btemp+11
 19188  017FC2  0E42               	movlw	66
 19189  017FC4  240B               	addwf	(btemp+10)^0,w,c
 19190  017FC6  6ED9               	movwf	fsr2l,c
 19191  017FC8  0E00               	movlw	0
 19192  017FCA  200C               	addwfc	(btemp+11)^0,w,c
 19193  017FCC  6EDA               	movwf	fsr2h,c
 19194  017FCE  0E40               	movlw	64
 19195  017FD0  60DF               	cpfslt	indf2,c
 19196  017FD2  D040               	goto	l1580
 19197                           
 19198                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 19199                           ;stkvar	_c @ sp[(0)+-3]
 19200                           ;stkvar	__this @ sp[(0)+-2]
 19201  017FD4  0EFE               	movlw	-2
 19202  017FD6  006F FF8C  F00B    	movff	plusw1,btemp+10
 19203  017FDC  0EFF               	movlw	-1
 19204  017FDE  006F FF8C  F00C    	movff	plusw1,btemp+11
 19205  017FE4  0E40               	movlw	64
 19206  017FE6  240B               	addwf	(btemp+10)^0,w,c
 19207  017FE8  6ED9               	movwf	fsr2l,c
 19208  017FEA  0E00               	movlw	0
 19209  017FEC  200C               	addwfc	(btemp+11)^0,w,c
 19210  017FEE  6EDA               	movwf	fsr2h,c
 19211  017FF0  50DF               	movf	indf2,w,c
 19212  017FF2  6E0C               	movwf	(btemp+11)^0,c
 19213                           
 19214                           ;stkvar	__this @ sp[(0)+-2]
 19215  017FF4  0EFE               	movlw	-2
 19216  017FF6  006F FF8C  F009    	movff	plusw1,btemp+8
 19217  017FFC  0EFF               	movlw	-1
 19218  017FFE  006F FF8C  F00A    	movff	plusw1,btemp+9
 19219  018004  500C               	movf	(btemp+11)^0,w,c
 19220  018006  2409               	addwf	(btemp+8)^0,w,c
 19221  018008  6ED9               	movwf	fsr2l,c
 19222  01800A  0E00               	movlw	0
 19223  01800C  200A               	addwfc	(btemp+9)^0,w,c
 19224  01800E  6EDA               	movwf	fsr2h,c
 19225  018010  0EFD               	movlw	-3
 19226  018012  006F FF8F FFDF     	movff	plusw1,indf2
 19227                           
 19228                           ;ringbufs.c: 71:   ++_this->head;
 19229                           ;stkvar	__this @ sp[(0)+-2]
 19230  018018  0EFE               	movlw	-2
 19231  01801A  006F FF8C  F00B    	movff	plusw1,btemp+10
 19232  018020  0EFF               	movlw	-1
 19233  018022  006F FF8C  F00C    	movff	plusw1,btemp+11
 19234  018028  0E40               	movlw	64
 19235  01802A  240B               	addwf	(btemp+10)^0,w,c
 19236  01802C  6ED9               	movwf	fsr2l,c
 19237  01802E  0E00               	movlw	0
 19238  018030  200C               	addwfc	(btemp+11)^0,w,c
 19239  018032  6EDA               	movwf	fsr2h,c
 19240  018034  2ADF               	incf	indf2,f,c
 19241                           
 19242                           ;ringbufs.c: 72:   ++_this->count;
 19243                           ;stkvar	__this @ sp[(0)+-2]
 19244  018036  0EFE               	movlw	-2
 19245  018038  006F FF8C  F00B    	movff	plusw1,btemp+10
 19246  01803E  0EFF               	movlw	-1
 19247  018040  006F FF8C  F00C    	movff	plusw1,btemp+11
 19248  018046  0E42               	movlw	66
 19249  018048  240B               	addwf	(btemp+10)^0,w,c
 19250  01804A  6ED9               	movwf	fsr2l,c
 19251  01804C  0E00               	movlw	0
 19252  01804E  200C               	addwfc	(btemp+11)^0,w,c
 19253  018050  6EDA               	movwf	fsr2h,c
 19254  018052  2ADF               	incf	indf2,f,c
 19255  018054                     l1580:
 19256                           
 19257                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 19258  018054  52E5               	movf	postdec1,f,c
 19259  018056  52E5               	movf	postdec1,f,c
 19260  018058  52E5               	movf	postdec1,f,c
 19261  01805A  0012               	return		;funcret
 19262  01805C                     __end_of_ringBufS_put_dma:
 19263                           	opt callstack 0
 19264                           
 19265 ;; *************** function _atoi *****************
 19266 ;; Defined at:
 19267 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 19268 ;; Parameters:    Size  Location     Type
 19269 ;;  s               2  [STACK] PTR const unsigned char 
 19270 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
 19271 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
 19272 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
 19273 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
 19274 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
 19275 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(20), 
 19276 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
 19277 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
 19278 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
 19279 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 19280 ;; Auto vars:     Size  Location     Type
 19281 ;;  n               2  [STACK] int 
 19282 ;;  neg             2  [STACK] int 
 19283 ;; Return value:  Size  Location     Type
 19284 ;;                  2  [STACK] int 
 19285 ;; Registers used:
 19286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 19287 ;; Tracked objects:
 19288 ;;		On entry : 0/0
 19289 ;;		On exit  : 0/0
 19290 ;;		Unchanged: 0/0
 19291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19296 ;;Total ram usage:        0 bytes
 19297 ;; Hardware stack levels used:    1
 19298 ;; Hardware stack levels required when called:    8
 19299 ;; This function calls:
 19300 ;;		_isdigit
 19301 ;;		_isspace
 19302 ;; This function is called by:
 19303 ;;		_vfpfcnvrt
 19304 ;; This function uses a reentrant model
 19305 ;;
 19306                           
 19307                           	psect	text73
 19308  015CAE                     __ptext73:
 19309                           	opt callstack 0
 19310  015CAE                     _atoi:
 19311                           	opt callstack 0
 19312                           
 19313                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19314  015CAE  0E09               	movlw	9
 19315  015CB0  26E1               	addwf	fsr1l,f,c
 19316  015CB2  0E00               	movlw	0
 19317  015CB4  22E2               	addwfc	fsr1h,f,c
 19318                           
 19319                           ;stkvar	_n @ sp[(-9)+5]
 19320                           
 19321                           ;incstack = 0
 19322  015CB6  0EFC               	movlw	-4
 19323  015CB8  6AE3               	clrf	plusw1,c
 19324  015CBA  0EFD               	movlw	-3
 19325  015CBC  6AE3               	clrf	plusw1,c
 19326                           
 19327                           ;stkvar	_neg @ sp[(-9)+7]
 19328  015CBE  0EFE               	movlw	-2
 19329  015CC0  6AE3               	clrf	plusw1,c
 19330  015CC2  0EFF               	movlw	-1
 19331  015CC4  6AE3               	clrf	plusw1,c
 19332  015CC6  D011               	goto	l7748
 19333  015CC8                     l7746:
 19334                           
 19335                           ;stkvar	_s @ sp[(-9)+-2]
 19336  015CC8  0EF5               	movlw	-11
 19337  015CCA  50E3               	movf	plusw1,w,c
 19338  015CCC  0F01               	addlw	1
 19339  015CCE  6E01               	movwf	btemp^0,c
 19340  015CD0  0EF5               	movlw	-11
 19341  015CD2  0060  F007  FFE3   	movff	btemp,plusw1
 19342  015CD8  6A01               	clrf	btemp^0,c
 19343  015CDA  0EF6               	movlw	-10
 19344  015CDC  50E3               	movf	plusw1,w,c
 19345  015CDE  2001               	addwfc	btemp^0,w,c
 19346  015CE0  6E01               	movwf	btemp^0,c
 19347  015CE2  0EF6               	movlw	-10
 19348  015CE4  0060  F007  FFE3   	movff	btemp,plusw1
 19349  015CEA                     l7748:
 19350                           
 19351                           ;stkvar	_atoi$5584 @ sp[(-9)+4]
 19352  015CEA  0EFB               	movlw	-5
 19353  015CEC  6AE3               	clrf	plusw1,c
 19354  015CEE  2AE3               	incf	plusw1,f,c
 19355                           
 19356                           ;stkvar	_s @ sp[(-9)+-2]
 19357  015CF0  50E1               	movf	fsr1l,w,c
 19358  015CF2  0FF5               	addlw	-11
 19359  015CF4  6ED9               	movwf	fsr2l,c
 19360  015CF6  50E2               	movf	fsr1h,w,c
 19361  015CF8  6EDA               	movwf	fsr2h,c
 19362  015CFA  0EFF               	movlw	255
 19363  015CFC  22DA               	addwfc	fsr2h,f,c
 19364  015CFE  006F FF7B FFF6     	movff	postinc2,tblptrl
 19365  015D04  006F FF77 FFF7     	movff	postdec2,tblptrh
 19366  015D0A                     	if	0	;tblptru may be non-zero
 19367  015D0A                     	endif
 19368  015D0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19369  015D0A  0E00               	movlw	low (__mediumconst shr (0+16))
 19370  015D0C  6EF8               	movwf	tblptru,c
 19371  015D0E                     	endif
 19372  015D0E  0008               	tblrd		*
 19373  015D10  50F5               	movf	tablat,w,c
 19374  015D12  0A20               	xorlw	32
 19375  015D14  B4D8               	btfsc	status,2,c
 19376  015D16  D023               	goto	l7756
 19377  015D18  0EF7               	movlw	247
 19378  015D1A  6E0B               	movwf	(btemp+10)^0,c
 19379  015D1C  0EFF               	movlw	255
 19380  015D1E  6E0C               	movwf	(btemp+11)^0,c
 19381                           
 19382                           ;stkvar	_s @ sp[(-9)+-2]
 19383  015D20  50E1               	movf	fsr1l,w,c
 19384  015D22  0FF5               	addlw	-11
 19385  015D24  6ED9               	movwf	fsr2l,c
 19386  015D26  50E2               	movf	fsr1h,w,c
 19387  015D28  6EDA               	movwf	fsr2h,c
 19388  015D2A  0EFF               	movlw	255
 19389  015D2C  22DA               	addwfc	fsr2h,f,c
 19390  015D2E  006F FF7B FFF6     	movff	postinc2,tblptrl
 19391  015D34  006F FF77 FFF7     	movff	postdec2,tblptrh
 19392  015D3A                     	if	0	;tblptru may be non-zero
 19393  015D3A                     	endif
 19394  015D3A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19395  015D3A  0E00               	movlw	low (__mediumconst shr (0+16))
 19396  015D3C  6EF8               	movwf	tblptru,c
 19397  015D3E                     	endif
 19398  015D3E  0008               	tblrd		*
 19399  015D40  50F5               	movf	tablat,w,c
 19400  015D42  6E09               	movwf	(btemp+8)^0,c
 19401  015D44  6A0A               	clrf	(btemp+9)^0,c
 19402  015D46  500B               	movf	(btemp+10)^0,w,c
 19403  015D48  2609               	addwf	(btemp+8)^0,f,c
 19404  015D4A  500C               	movf	(btemp+11)^0,w,c
 19405  015D4C  220A               	addwfc	(btemp+9)^0,f,c
 19406  015D4E  500A               	movf	(btemp+9)^0,w,c
 19407  015D50  E104               	bnz	u6560
 19408  015D52  0E05               	movlw	5
 19409  015D54  5C09               	subwf	(btemp+8)^0,w,c
 19410  015D56  A0D8               	btfss	status,0,c
 19411  015D58  D002               	goto	l7756
 19412  015D5A                     u6560:
 19413                           
 19414                           ;stkvar	_atoi$5584 @ sp[(-9)+4]
 19415  015D5A  0EFB               	movlw	-5
 19416  015D5C  6AE3               	clrf	plusw1,c
 19417  015D5E                     l7756:
 19418                           
 19419                           ;stkvar	_atoi$5584 @ sp[(-9)+4]
 19420  015D5E  0EFB               	movlw	-5
 19421  015D60  50E3               	movf	plusw1,w,c
 19422  015D62  6E0B               	movwf	(btemp+10)^0,c
 19423  015D64  6A0C               	clrf	(btemp+11)^0,c
 19424                           
 19425                           ;stkvar	_atoi$5583 @ sp[(-9)+2]
 19426  015D66  0EF9               	movlw	-7
 19427  015D68  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19428  015D6E  0EFA               	movlw	-6
 19429  015D70  0060  F033  FFE3   	movff	btemp+11,plusw1
 19430                           
 19431                           ;stkvar	_atoi$5583 @ sp[(-9)+2]
 19432  015D76  0EF9               	movlw	-7
 19433  015D78  006F FF8C  F001    	movff	plusw1,btemp
 19434  015D7E  0EFA               	movlw	-6
 19435  015D80  50E3               	movf	plusw1,w,c
 19436  015D82  1001               	iorwf	btemp^0,w,c
 19437  015D84  B4D8               	btfsc	status,2,c
 19438  015D86  D01F               	goto	l7766
 19439  015D88  D79F               	goto	l7746
 19440  015D8A                     l7762:
 19441  015D8A  0E01               	movlw	1
 19442  015D8C  6E0B               	movwf	(btemp+10)^0,c
 19443  015D8E  0E00               	movlw	0
 19444  015D90  6E0C               	movwf	(btemp+11)^0,c
 19445                           
 19446                           ;stkvar	_neg @ sp[(-9)+7]
 19447  015D92  0EFE               	movlw	-2
 19448  015D94  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19449  015D9A  0EFF               	movlw	-1
 19450  015D9C  0060  F033  FFE3   	movff	btemp+11,plusw1
 19451  015DA2                     l7764:
 19452                           
 19453                           ;stkvar	_s @ sp[(-9)+-2]
 19454  015DA2  0EF5               	movlw	-11
 19455  015DA4  50E3               	movf	plusw1,w,c
 19456  015DA6  0F01               	addlw	1
 19457  015DA8  6E01               	movwf	btemp^0,c
 19458  015DAA  0EF5               	movlw	-11
 19459  015DAC  0060  F007  FFE3   	movff	btemp,plusw1
 19460  015DB2  6A01               	clrf	btemp^0,c
 19461  015DB4  0EF6               	movlw	-10
 19462  015DB6  50E3               	movf	plusw1,w,c
 19463  015DB8  2001               	addwfc	btemp^0,w,c
 19464  015DBA  6E01               	movwf	btemp^0,c
 19465  015DBC  0EF6               	movlw	-10
 19466  015DBE  0060  F007  FFE3   	movff	btemp,plusw1
 19467  015DC4  D053               	goto	l7772
 19468  015DC6                     l7766:
 19469                           
 19470                           ;stkvar	_s @ sp[(-9)+-2]
 19471  015DC6  50E1               	movf	fsr1l,w,c
 19472  015DC8  0FF5               	addlw	-11
 19473  015DCA  6ED9               	movwf	fsr2l,c
 19474  015DCC  50E2               	movf	fsr1h,w,c
 19475  015DCE  6EDA               	movwf	fsr2h,c
 19476  015DD0  0EFF               	movlw	255
 19477  015DD2  22DA               	addwfc	fsr2h,f,c
 19478  015DD4  006F FF7B FFF6     	movff	postinc2,tblptrl
 19479  015DDA  006F FF77 FFF7     	movff	postdec2,tblptrh
 19480  015DE0                     	if	0	;tblptru may be non-zero
 19481  015DE0                     	endif
 19482  015DE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19483  015DE0  0E00               	movlw	low (__mediumconst shr (0+16))
 19484  015DE2  6EF8               	movwf	tblptru,c
 19485  015DE4                     	endif
 19486  015DE4  0008               	tblrd		*
 19487  015DE6  50F5               	movf	tablat,w,c
 19488  015DE8  6E0B               	movwf	(btemp+10)^0,c
 19489  015DEA  6A0C               	clrf	(btemp+11)^0,c
 19490                           
 19491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19492                           ; Switch size 1, requested type "simple"
 19493                           ; Number of cases is 1, Range of values is 0 to 0
 19494                           ; switch strategies available:
 19495                           ; Name         Instructions Cycles
 19496                           ; simple_byte            4     3 (average)
 19497                           ;	Chosen strategy is simple_byte
 19498  015DEC  500C               	movf	(btemp+11)^0,w,c
 19499  015DEE  0A00               	xorlw	0	; case 0
 19500  015DF0  A4D8               	btfss	status,2,c
 19501  015DF2  D03C               	goto	l7772
 19502                           
 19503                           ; Switch size 1, requested type "simple"
 19504                           ; Number of cases is 2, Range of values is 43 to 45
 19505                           ; switch strategies available:
 19506                           ; Name         Instructions Cycles
 19507                           ; simple_byte            7     4 (average)
 19508                           ;	Chosen strategy is simple_byte
 19509  015DF4  500B               	movf	(btemp+10)^0,w,c
 19510  015DF6  0A2B               	xorlw	43	; case 43
 19511  015DF8  B4D8               	btfsc	status,2,c
 19512  015DFA  D7D3               	goto	l7764
 19513  015DFC  0A06               	xorlw	6	; case 45
 19514  015DFE  B4D8               	btfsc	status,2,c
 19515  015E00  D7C4               	goto	l7762
 19516  015E02  D034               	goto	l7772
 19517  015E04                     l7768:
 19518                           
 19519                           ;stkvar	_n @ sp[(-9)+5]
 19520  015E04  0EFC               	movlw	-4
 19521  015E06  006F FF8C  F00B    	movff	plusw1,btemp+10
 19522  015E0C  0EFD               	movlw	-3
 19523  015E0E  006F FF8C  F00C    	movff	plusw1,btemp+11
 19524  015E14  0E0A               	movlw	10
 19525  015E16  020B               	mulwf	(btemp+10)^0,c
 19526  015E18  006F FFCC  F009    	movff	prodl,btemp+8
 19527  015E1E  006F FFD0  F00A    	movff	prodh,btemp+9
 19528  015E24  020C               	mulwf	(btemp+11)^0,c
 19529  015E26  50F3               	movf	prodl,w,c
 19530  015E28  260A               	addwf	(btemp+9)^0,f,c
 19531                           
 19532                           ;stkvar	_s @ sp[(-9)+-2]
 19533  015E2A  50E1               	movf	fsr1l,w,c
 19534  015E2C  0FF5               	addlw	-11
 19535  015E2E  6ED9               	movwf	fsr2l,c
 19536  015E30  50E2               	movf	fsr1h,w,c
 19537  015E32  6EDA               	movwf	fsr2h,c
 19538  015E34  0EFF               	movlw	255
 19539  015E36  22DA               	addwfc	fsr2h,f,c
 19540  015E38  006F FF7B FFF6     	movff	postinc2,tblptrl
 19541  015E3E  006F FF77 FFF7     	movff	postdec2,tblptrh
 19542  015E44                     	if	0	;tblptru may be non-zero
 19543  015E44                     	endif
 19544  015E44                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19545  015E44  0E00               	movlw	low (__mediumconst shr (0+16))
 19546  015E46  6EF8               	movwf	tblptru,c
 19547  015E48                     	endif
 19548  015E48  0008               	tblrd		*
 19549  015E4A  50F5               	movf	tablat,w,c
 19550  015E4C  5E09               	subwf	(btemp+8)^0,f,c
 19551  015E4E  0E00               	movlw	0
 19552  015E50  5A0A               	subwfb	(btemp+9)^0,f,c
 19553  015E52  0E30               	movlw	48
 19554  015E54  2609               	addwf	(btemp+8)^0,f,c
 19555  015E56  0E00               	movlw	0
 19556  015E58  220A               	addwfc	(btemp+9)^0,f,c
 19557                           
 19558                           ;stkvar	_n @ sp[(-9)+5]
 19559  015E5A  0EFC               	movlw	-4
 19560  015E5C  0060  F027  FFE3   	movff	btemp+8,plusw1
 19561  015E62  0EFD               	movlw	-3
 19562  015E64  0060  F02B  FFE3   	movff	btemp+9,plusw1
 19563  015E6A  D79B               	goto	l7764
 19564  015E6C                     l7772:
 19565  015E6C  0ED0               	movlw	208
 19566  015E6E  6E0B               	movwf	(btemp+10)^0,c
 19567  015E70  0EFF               	movlw	255
 19568  015E72  6E0C               	movwf	(btemp+11)^0,c
 19569                           
 19570                           ;stkvar	_s @ sp[(-9)+-2]
 19571  015E74  50E1               	movf	fsr1l,w,c
 19572  015E76  0FF5               	addlw	-11
 19573  015E78  6ED9               	movwf	fsr2l,c
 19574  015E7A  50E2               	movf	fsr1h,w,c
 19575  015E7C  6EDA               	movwf	fsr2h,c
 19576  015E7E  0EFF               	movlw	255
 19577  015E80  22DA               	addwfc	fsr2h,f,c
 19578  015E82  006F FF7B FFF6     	movff	postinc2,tblptrl
 19579  015E88  006F FF77 FFF7     	movff	postdec2,tblptrh
 19580  015E8E                     	if	0	;tblptru may be non-zero
 19581  015E8E                     	endif
 19582  015E8E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19583  015E8E  0E00               	movlw	low (__mediumconst shr (0+16))
 19584  015E90  6EF8               	movwf	tblptru,c
 19585  015E92                     	endif
 19586  015E92  0008               	tblrd		*
 19587  015E94  50F5               	movf	tablat,w,c
 19588  015E96  6E09               	movwf	(btemp+8)^0,c
 19589  015E98  6A0A               	clrf	(btemp+9)^0,c
 19590  015E9A  500B               	movf	(btemp+10)^0,w,c
 19591  015E9C  2609               	addwf	(btemp+8)^0,f,c
 19592  015E9E  500C               	movf	(btemp+11)^0,w,c
 19593  015EA0  220A               	addwfc	(btemp+9)^0,f,c
 19594  015EA2  500A               	movf	(btemp+9)^0,w,c
 19595  015EA4  E106               	bnz	u6580
 19596  015EA6  0E0A               	movlw	10
 19597  015EA8  5C09               	subwf	(btemp+8)^0,w,c
 19598  015EAA  B0D8               	btfsc	status,0,c
 19599  015EAC  D002               	goto	u6580
 19600  015EAE  0E01               	movlw	1
 19601  015EB0  D001               	goto	u6590
 19602  015EB2                     u6580:
 19603  015EB2  0E00               	movlw	0
 19604  015EB4                     u6590:
 19605  015EB4  6E0B               	movwf	(btemp+10)^0,c
 19606  015EB6  6A0C               	clrf	(btemp+11)^0,c
 19607                           
 19608                           ;stkvar	_atoi$5585 @ sp[(-9)+0]
 19609  015EB8  0EF7               	movlw	-9
 19610  015EBA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 19611  015EC0  0EF8               	movlw	-8
 19612  015EC2  0060  F033  FFE3   	movff	btemp+11,plusw1
 19613                           
 19614                           ;stkvar	_atoi$5585 @ sp[(-9)+0]
 19615  015EC8  0EF7               	movlw	-9
 19616  015ECA  006F FF8C  F001    	movff	plusw1,btemp
 19617  015ED0  0EF8               	movlw	-8
 19618  015ED2  50E3               	movf	plusw1,w,c
 19619  015ED4  1001               	iorwf	btemp^0,w,c
 19620  015ED6  A4D8               	btfss	status,2,c
 19621  015ED8  D795               	goto	l7768
 19622                           
 19623                           ;stkvar	_neg @ sp[(-9)+7]
 19624  015EDA  0EFE               	movlw	-2
 19625  015EDC  006F FF8C  F001    	movff	plusw1,btemp
 19626  015EE2  0EFF               	movlw	-1
 19627  015EE4  50E3               	movf	plusw1,w,c
 19628  015EE6  1001               	iorwf	btemp^0,w,c
 19629  015EE8  A4D8               	btfss	status,2,c
 19630  015EEA  D00E               	goto	l7782
 19631                           
 19632                           ;stkvar	_n @ sp[(-9)+5]
 19633  015EEC  0EFC               	movlw	-4
 19634  015EEE  006F FF8C  F001    	movff	plusw1,btemp
 19635  015EF4  1E01               	comf	btemp^0,f,c
 19636  015EF6  0EFD               	movlw	-3
 19637  015EF8  006F FF8C  F002    	movff	plusw1,btemp+1
 19638  015EFE  1E02               	comf	(btemp+1)^0,f,c
 19639  015F00  2A01               	incf	btemp^0,f,c
 19640  015F02  B4D8               	btfsc	status,2,c
 19641  015F04  2A02               	incf	(btemp+1)^0,f,c
 19642  015F06  D008               	goto	l2971
 19643  015F08                     l7782:
 19644                           
 19645                           ;stkvar	_n @ sp[(-9)+5]
 19646  015F08  0EFC               	movlw	-4
 19647  015F0A  006F FF8C  F001    	movff	plusw1,btemp
 19648  015F10  0EFD               	movlw	-3
 19649  015F12  006F FF8C  F002    	movff	plusw1,btemp+1
 19650  015F18                     l2971:
 19651                           
 19652                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 19653  015F18  0EF5               	movlw	245
 19654  015F1A  26E1               	addwf	fsr1l,f,c
 19655  015F1C  0EFF               	movlw	255
 19656  015F1E  22E2               	addwfc	fsr1h,f,c
 19657  015F20  0012               	return		;funcret
 19658  015F22                     __end_of_atoi:
 19659                           	opt callstack 0
 19660                           
 19661 ;; *************** function _isspace *****************
 19662 ;; Defined at:
 19663 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 19664 ;; Parameters:    Size  Location     Type
 19665 ;;  c               2  [STACK] int 
 19666 ;; Auto vars:     Size  Location     Type
 19667 ;;		None
 19668 ;; Return value:  Size  Location     Type
 19669 ;;                  2  [STACK] int 
 19670 ;; Registers used:
 19671 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19672 ;; Tracked objects:
 19673 ;;		On entry : 0/0
 19674 ;;		On exit  : 0/0
 19675 ;;		Unchanged: 0/0
 19676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19681 ;;Total ram usage:        0 bytes
 19682 ;; Hardware stack levels used:    1
 19683 ;; Hardware stack levels required when called:    7
 19684 ;; This function calls:
 19685 ;;		Nothing
 19686 ;; This function is called by:
 19687 ;;		_atoi
 19688 ;; This function uses a reentrant model
 19689 ;;
 19690                           
 19691                           	psect	text74
 19692  018B84                     __ptext74:
 19693                           	opt callstack 0
 19694  018B84                     _isspace:
 19695                           	opt callstack 0
 19696                           
 19697                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19698  018B84  52E6               	movf	postinc1,f,c
 19699                           
 19700                           ;stkvar	_isspace$5623 @ sp[(-1)+0]
 19701                           
 19702                           ;incstack = 0
 19703  018B86  0EFF               	movlw	-1
 19704  018B88  6AE3               	clrf	plusw1,c
 19705  018B8A  2AE3               	incf	plusw1,f,c
 19706                           
 19707                           ;stkvar	_c @ sp[(-1)+-2]
 19708  018B8C  0EFD               	movlw	-3
 19709  018B8E  006F FF8C  F001    	movff	plusw1,btemp
 19710  018B94  0E20               	movlw	32
 19711  018B96  1801               	xorwf	btemp^0,w,c
 19712  018B98  E104               	bnz	u5550
 19713  018B9A  0EFE               	movlw	-2
 19714  018B9C  50E3               	movf	plusw1,w,c
 19715  018B9E  B4D8               	btfsc	status,2,c
 19716  018BA0  D012               	goto	l7232
 19717  018BA2                     u5550:
 19718                           
 19719                           ;stkvar	_c @ sp[(-1)+-2]
 19720  018BA2  0EFD               	movlw	-3
 19721  018BA4  50E3               	movf	plusw1,w,c
 19722  018BA6  0FF7               	addlw	247
 19723  018BA8  6E0B               	movwf	(btemp+10)^0,c
 19724  018BAA  0EFE               	movlw	-2
 19725  018BAC  006F FF8C  F00C    	movff	plusw1,btemp+11
 19726  018BB2  0EFF               	movlw	255
 19727  018BB4  220C               	addwfc	(btemp+11)^0,f,c
 19728  018BB6  500C               	movf	(btemp+11)^0,w,c
 19729  018BB8  E104               	bnz	u5560
 19730  018BBA  0E05               	movlw	5
 19731  018BBC  5C0B               	subwf	(btemp+10)^0,w,c
 19732  018BBE  A0D8               	btfss	status,0,c
 19733  018BC0  D002               	goto	l7232
 19734  018BC2                     u5560:
 19735                           
 19736                           ;stkvar	_isspace$5623 @ sp[(-1)+0]
 19737  018BC2  0EFF               	movlw	-1
 19738  018BC4  6AE3               	clrf	plusw1,c
 19739  018BC6                     l7232:
 19740                           
 19741                           ;stkvar	_isspace$5623 @ sp[(-1)+0]
 19742  018BC6  0EFF               	movlw	-1
 19743  018BC8  50E3               	movf	plusw1,w,c
 19744  018BCA  6E01               	movwf	btemp^0,c
 19745  018BCC  6A02               	clrf	(btemp+1)^0,c
 19746                           
 19747                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19748  018BCE  52E5               	movf	postdec1,f,c
 19749  018BD0  52E5               	movf	postdec1,f,c
 19750  018BD2  52E5               	movf	postdec1,f,c
 19751  018BD4  0012               	return		;funcret
 19752  018BD6                     __end_of_isspace:
 19753                           	opt callstack 0
 19754                           
 19755 ;; *************** function _isdigit *****************
 19756 ;; Defined at:
 19757 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19758 ;; Parameters:    Size  Location     Type
 19759 ;;  c               2  [STACK] int 
 19760 ;; Auto vars:     Size  Location     Type
 19761 ;;		None
 19762 ;; Return value:  Size  Location     Type
 19763 ;;                  2  [STACK] int 
 19764 ;; Registers used:
 19765 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19766 ;; Tracked objects:
 19767 ;;		On entry : 0/0
 19768 ;;		On exit  : 0/0
 19769 ;;		Unchanged: 0/0
 19770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19775 ;;Total ram usage:        0 bytes
 19776 ;; Hardware stack levels used:    1
 19777 ;; Hardware stack levels required when called:    7
 19778 ;; This function calls:
 19779 ;;		Nothing
 19780 ;; This function is called by:
 19781 ;;		_vfpfcnvrt
 19782 ;;		_atoi
 19783 ;; This function uses a reentrant model
 19784 ;;
 19785                           
 19786                           	psect	text75
 19787  019168                     __ptext75:
 19788                           	opt callstack 0
 19789  019168                     _isdigit:
 19790                           	opt callstack 17
 19791                           
 19792                           ;stkvar	_c @ sp[(0)+-2]
 19793                           
 19794                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19795                           ;incstack = 0
 19796  019168  0EFE               	movlw	-2
 19797  01916A  50E3               	movf	plusw1,w,c
 19798  01916C  0FD0               	addlw	208
 19799  01916E  6E0B               	movwf	(btemp+10)^0,c
 19800  019170  0EFF               	movlw	-1
 19801  019172  006F FF8C  F00C    	movff	plusw1,btemp+11
 19802  019178  0EFF               	movlw	255
 19803  01917A  220C               	addwfc	(btemp+11)^0,f,c
 19804  01917C  500C               	movf	(btemp+11)^0,w,c
 19805  01917E  E106               	bnz	u5130
 19806  019180  0E0A               	movlw	10
 19807  019182  5C0B               	subwf	(btemp+10)^0,w,c
 19808  019184  B0D8               	btfsc	status,0,c
 19809  019186  D002               	goto	u5130
 19810  019188  0E01               	movlw	1
 19811  01918A  D001               	goto	u5140
 19812  01918C                     u5130:
 19813  01918C  0E00               	movlw	0
 19814  01918E                     u5140:
 19815  01918E  6E01               	movwf	btemp^0,c
 19816  019190  6A02               	clrf	(btemp+1)^0,c
 19817                           
 19818                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19819  019192  52E5               	movf	postdec1,f,c
 19820  019194  52E5               	movf	postdec1,f,c
 19821  019196  0012               	return		;funcret
 19822  019198                     __end_of_isdigit:
 19823                           	opt callstack 0
 19824                           
 19825 ;; *************** function _set_vterm *****************
 19826 ;; Defined at:
 19827 ;;		line 107 in file "mconfig.c"
 19828 ;; Parameters:    Size  Location     Type
 19829 ;;  vterm           1  [STACK] const unsigned char 
 19830 ;; Auto vars:     Size  Location     Type
 19831 ;;		None
 19832 ;; Return value:  Size  Location     Type
 19833 ;;                  1  [STACK] unsigned char 
 19834 ;; Registers used:
 19835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 19836 ;; Tracked objects:
 19837 ;;		On entry : 0/1
 19838 ;;		On exit  : 0/0
 19839 ;;		Unchanged: 0/0
 19840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19845 ;;Total ram usage:        0 bytes
 19846 ;; Hardware stack levels used:    1
 19847 ;; Hardware stack levels required when called:    7
 19848 ;; This function calls:
 19849 ;;		Nothing
 19850 ;; This function is called by:
 19851 ;;		_main
 19852 ;;		_check_help
 19853 ;; This function uses a reentrant model
 19854 ;;
 19855                           
 19856                           	psect	text76
 19857  019714                     __ptext76:
 19858                           	opt callstack 0
 19859  019714                     _set_vterm:
 19860                           	opt callstack 23
 19861                           
 19862                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 19863                           ;stkvar	_vterm @ sp[(0)+-1]
 19864                           
 19865                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19866                           ;incstack = 0
 19867  019714  0EFF               	movlw	-1
 19868  019716  006F FF8C  F00C    	movff	plusw1,btemp+11
 19869  01971C  0E03               	movlw	3
 19870  01971E  160C               	andwf	(btemp+11)^0,f,c
 19871  019720  EE22  F01F         	lfsr	2,_D+288
 19872  019724  50DF               	movf	223,w,c
 19873  019726  180C               	xorwf	(btemp+11)^0,w,c
 19874  019728  0BFE               	andlw	-2
 19875  01972A  180C               	xorwf	(btemp+11)^0,w,c
 19876  01972C  6EDF               	movwf	223,c
 19877                           
 19878                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19879  01972E  52E5               	movf	postdec1,f,c
 19880  019730  0012               	return		;funcret
 19881  019732                     __end_of_set_vterm:
 19882                           	opt callstack 0
 19883                           
 19884 ;; *************** function _set_temp_display_help *****************
 19885 ;; Defined at:
 19886 ;;		line 211 in file "mconfig.c"
 19887 ;; Parameters:    Size  Location     Type
 19888 ;;  new_response    1  [STACK] const enum E16518
 19889 ;; Auto vars:     Size  Location     Type
 19890 ;;		None
 19891 ;; Return value:  Size  Location     Type
 19892 ;;                  1  [STACK] enum E16518
 19893 ;; Registers used:
 19894 ;;		wreg, fsr1l, fsr1h
 19895 ;; Tracked objects:
 19896 ;;		On entry : 0/2
 19897 ;;		On exit  : 3F/2
 19898 ;;		Unchanged: 0/0
 19899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19904 ;;Total ram usage:        0 bytes
 19905 ;; Hardware stack levels used:    1
 19906 ;; Hardware stack levels required when called:    7
 19907 ;; This function calls:
 19908 ;;		Nothing
 19909 ;; This function is called by:
 19910 ;;		_check_help
 19911 ;; This function uses a reentrant model
 19912 ;;
 19913                           
 19914                           	psect	text77
 19915  019876                     __ptext77:
 19916                           	opt callstack 0
 19917  019876                     _set_temp_display_help:
 19918                           	opt callstack 22
 19919                           
 19920                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 19921                           
 19922                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19923                           ;incstack = 0
 19924  019876  0102               	movlb	2	; () banked
 19925  019878  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 19926                           
 19927                           ; BSR set to: 2
 19928                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 19929                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19930  01987A  0EFF               	movlw	-1
 19931  01987C  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 19932                           
 19933                           ; BSR set to: 2
 19934                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 19935  019882  52E5               	movf	postdec1,f,c
 19936  019884  0012               	return		;funcret
 19937  019886                     __end_of_set_temp_display_help:
 19938                           	opt callstack 0
 19939                           
 19940 ;; *************** function _set_display_info *****************
 19941 ;; Defined at:
 19942 ;;		line 200 in file "mconfig.c"
 19943 ;; Parameters:    Size  Location     Type
 19944 ;;  new_response    1  [STACK] const enum E16518
 19945 ;; Auto vars:     Size  Location     Type
 19946 ;;		None
 19947 ;; Return value:  Size  Location     Type
 19948 ;;                  1  [STACK] enum E17003
 19949 ;; Registers used:
 19950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19951 ;; Tracked objects:
 19952 ;;		On entry : 0/1
 19953 ;;		On exit  : 0/0
 19954 ;;		Unchanged: 0/0
 19955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19960 ;;Total ram usage:        0 bytes
 19961 ;; Hardware stack levels used:    1
 19962 ;; Hardware stack levels required when called:    8
 19963 ;; This function calls:
 19964 ;;		_TimerDone
 19965 ;; This function is called by:
 19966 ;;		_main
 19967 ;;		_check_help
 19968 ;; This function uses a reentrant model
 19969 ;;
 19970                           
 19971                           	psect	text78
 19972  019732                     __ptext78:
 19973                           	opt callstack 0
 19974  019732                     _set_display_info:
 19975                           	opt callstack 22
 19976                           
 19977                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 19978                           
 19979                           ; BSR set to: 2
 19980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19981                           ;incstack = 0
 19982  019732  0E07               	movlw	7
 19983  019734  6EE6               	movwf	postinc1,c
 19984  019736  EC8B  F0C9         	call	_TimerDone	;wreg free
 19985  01973A  5001               	movf	btemp^0,w,c
 19986  01973C  B4D8               	btfsc	status,2,c
 19987  01973E  D006               	goto	l1717
 19988                           
 19989                           ;mconfig.c: 205:   old_info = V.response.info;
 19990  019740  0102               	movlb	2	; () banked
 19991  019742  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 19992                           
 19993                           ; BSR set to: 2
 19994                           ;mconfig.c: 206:   V.response.info = new_response_info;
 19995                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19996  019744  0EFF               	movlw	-1
 19997  019746  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 19998  01974C                     l1717:
 19999                           
 20000                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 20001  01974C  52E5               	movf	postdec1,f,c
 20002  01974E  0012               	return		;funcret
 20003  019750                     __end_of_set_display_info:
 20004                           	opt callstack 0
 20005                           
 20006 ;; *************** function _mode_lamp_dim *****************
 20007 ;; Defined at:
 20008 ;;		line 13 in file "mconfig.c"
 20009 ;; Parameters:    Size  Location     Type
 20010 ;;  level           2  [STACK] const unsigned short 
 20011 ;; Auto vars:     Size  Location     Type
 20012 ;;		None
 20013 ;; Return value:  Size  Location     Type
 20014 ;;                  1  [STACK] void 
 20015 ;; Registers used:
 20016 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20017 ;; Tracked objects:
 20018 ;;		On entry : 0/2
 20019 ;;		On exit  : 0/0
 20020 ;;		Unchanged: 0/0
 20021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20026 ;;Total ram usage:        0 bytes
 20027 ;; Hardware stack levels used:    1
 20028 ;; Hardware stack levels required when called:    8
 20029 ;; This function calls:
 20030 ;;		_PWM8_LoadDutyValue
 20031 ;; This function is called by:
 20032 ;;		_main
 20033 ;;		_check_help
 20034 ;; This function uses a reentrant model
 20035 ;;
 20036                           
 20037                           	psect	text79
 20038  0197DE                     __ptext79:
 20039                           	opt callstack 0
 20040  0197DE                     _mode_lamp_dim:
 20041                           	opt callstack 22
 20042                           
 20043                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 20044                           ;stkvar	_level @ sp[(0)+-2]
 20045                           
 20046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20047                           ;incstack = 0
 20048  0197DE  0EFE               	movlw	-2
 20049  0197E0  006F FF8F FFE6     	movff	plusw1,postinc1
 20050  0197E6  006F FF8F FFE6     	movff	plusw1,postinc1
 20051  0197EC  EC09  F0C7         	call	_PWM8_LoadDutyValue	;wreg free
 20052                           
 20053                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 20054  0197F0  52E5               	movf	postdec1,f,c
 20055  0197F2  52E5               	movf	postdec1,f,c
 20056  0197F4  0012               	return		;funcret
 20057  0197F6                     __end_of_mode_lamp_dim:
 20058                           	opt callstack 0
 20059                           
 20060 ;; *************** function _mode_lamp_bright *****************
 20061 ;; Defined at:
 20062 ;;		line 18 in file "mconfig.c"
 20063 ;; Parameters:    Size  Location     Type
 20064 ;;		None
 20065 ;; Auto vars:     Size  Location     Type
 20066 ;;		None
 20067 ;; Return value:  Size  Location     Type
 20068 ;;                  1  [STACK] void 
 20069 ;; Registers used:
 20070 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20071 ;; Tracked objects:
 20072 ;;		On entry : 0/0
 20073 ;;		On exit  : 0/0
 20074 ;;		Unchanged: 0/0
 20075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20080 ;;Total ram usage:        0 bytes
 20081 ;; Hardware stack levels used:    1
 20082 ;; Hardware stack levels required when called:    8
 20083 ;; This function calls:
 20084 ;;		_PWM8_LoadDutyValue
 20085 ;; This function is called by:
 20086 ;;		_check_help
 20087 ;; This function uses a reentrant model
 20088 ;;
 20089                           
 20090                           	psect	text80
 20091  019894                     __ptext80:
 20092                           	opt callstack 0
 20093  019894                     _mode_lamp_bright:
 20094                           	opt callstack 21
 20095                           
 20096                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 20097                           
 20098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20099                           ;incstack = 0
 20100  019894  0E2C               	movlw	44
 20101  019896  6EE6               	movwf	postinc1,c
 20102  019898  0E01               	movlw	1
 20103  01989A  6EE6               	movwf	postinc1,c
 20104  01989C  EC09  F0C7         	call	_PWM8_LoadDutyValue	;wreg free
 20105                           
 20106                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 20107  0198A0  0012               	return		;funcret
 20108  0198A2                     __end_of_mode_lamp_bright:
 20109                           	opt callstack 0
 20110                           
 20111 ;; *************** function _PWM8_LoadDutyValue *****************
 20112 ;; Defined at:
 20113 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 20114 ;; Parameters:    Size  Location     Type
 20115 ;;  dutyValue       2  [STACK] unsigned short 
 20116 ;; Auto vars:     Size  Location     Type
 20117 ;;		None
 20118 ;; Return value:  Size  Location     Type
 20119 ;;                  1  [STACK] void 
 20120 ;; Registers used:
 20121 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20122 ;; Tracked objects:
 20123 ;;		On entry : 0/2
 20124 ;;		On exit  : 0/0
 20125 ;;		Unchanged: 0/0
 20126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20131 ;;Total ram usage:        0 bytes
 20132 ;; Hardware stack levels used:    1
 20133 ;; Hardware stack levels required when called:    7
 20134 ;; This function calls:
 20135 ;;		Nothing
 20136 ;; This function is called by:
 20137 ;;		_mode_lamp_dim
 20138 ;;		_mode_lamp_bright
 20139 ;; This function uses a reentrant model
 20140 ;;
 20141                           
 20142                           	psect	text81
 20143  018E12                     __ptext81:
 20144                           	opt callstack 0
 20145  018E12                     _PWM8_LoadDutyValue:
 20146                           	opt callstack 22
 20147                           
 20148                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20149                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20150                           
 20151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20152                           ;incstack = 0
 20153  018E12  0EFE               	movlw	-2
 20154  018E14  006F FF8C  F00B    	movff	plusw1,btemp+10
 20155  018E1A  0EFF               	movlw	-1
 20156  018E1C  006F FF8C  F00C    	movff	plusw1,btemp+11
 20157  018E22  90D8               	bcf	status,0,c
 20158  018E24  320C               	rrcf	(btemp+11)^0,f,c
 20159  018E26  320B               	rrcf	(btemp+10)^0,f,c
 20160  018E28  90D8               	bcf	status,0,c
 20161  018E2A  320C               	rrcf	(btemp+11)^0,f,c
 20162  018E2C  320B               	rrcf	(btemp+10)^0,f,c
 20163  018E2E  500B               	movf	(btemp+10)^0,w,c
 20164  018E30  6E61               	movwf	97,c	;volatile
 20165                           
 20166                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 20167                           ;stkvar	_dutyValue @ sp[(0)+-2]
 20168  018E32  0EFE               	movlw	-2
 20169  018E34  006F FF8C  F00C    	movff	plusw1,btemp+11
 20170  018E3A  0E03               	movlw	3
 20171  018E3C  160C               	andwf	(btemp+11)^0,f,c
 20172  018E3E  0E06               	movlw	6
 20173  018E40  6E01               	movwf	btemp^0,c
 20174  018E42                     u7045:
 20175  018E42  90D8               	bcf	status,0,c
 20176  018E44  360C               	rlcf	(btemp+11)^0,f,c
 20177  018E46  2E01               	decfsz	btemp^0,f,c
 20178  018E48  D7FC               	goto	u7045
 20179  018E4A  500C               	movf	(btemp+11)^0,w,c
 20180  018E4C  6E60               	movwf	96,c	;volatile
 20181                           
 20182                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 20183  018E4E  52E5               	movf	postdec1,f,c
 20184  018E50  52E5               	movf	postdec1,f,c
 20185  018E52  0012               	return		;funcret
 20186  018E54                     __end_of_PWM8_LoadDutyValue:
 20187                           	opt callstack 0
 20188                           
 20189 ;; *************** function _help_button *****************
 20190 ;; Defined at:
 20191 ;;		line 26 in file "mconfig.c"
 20192 ;; Parameters:    Size  Location     Type
 20193 ;;		None
 20194 ;; Auto vars:     Size  Location     Type
 20195 ;;		None
 20196 ;; Return value:  Size  Location     Type
 20197 ;;                  1  [STACK] _Bool 
 20198 ;; Registers used:
 20199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20200 ;; Tracked objects:
 20201 ;;		On entry : 0/2
 20202 ;;		On exit  : 0/0
 20203 ;;		Unchanged: 0/0
 20204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20209 ;;Total ram usage:        0 bytes
 20210 ;; Hardware stack levels used:    1
 20211 ;; Hardware stack levels required when called:    8
 20212 ;; This function calls:
 20213 ;;		_StartTimer
 20214 ;;		_TimerDone
 20215 ;; This function is called by:
 20216 ;;		_check_help
 20217 ;; This function uses a reentrant model
 20218 ;;
 20219                           
 20220                           	psect	text82
 20221  018F92                     __ptext82:
 20222                           	opt callstack 0
 20223  018F92                     _help_button:
 20224                           	opt callstack 21
 20225                           
 20226                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 20227                           
 20228                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20229                           ;incstack = 0
 20230  018F92  B0CB               	btfsc	203,0,c	;volatile
 20231  018F94  D00C               	goto	l1660
 20232                           
 20233                           ;mconfig.c: 29:   V.help = 1;
 20234  018F96  0102               	movlb	2	; () banked
 20235  018F98  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 20236                           
 20237                           ; BSR set to: 2
 20238                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 20239  018F9A  0E08               	movlw	8
 20240  018F9C  6EE6               	movwf	postinc1,c
 20241  018F9E  EC8B  F0C9         	call	_TimerDone	;wreg free
 20242  018FA2  5001               	movf	btemp^0,w,c
 20243  018FA4  B4D8               	btfsc	status,2,c
 20244  018FA6  D003               	goto	l1660
 20245                           
 20246                           ;mconfig.c: 31:    return 1;
 20247  018FA8  0E01               	movlw	1
 20248  018FAA  6E01               	movwf	btemp^0,c
 20249  018FAC  0012               	return	
 20250  018FAE                     l1660:
 20251                           
 20252                           ;mconfig.c: 34:  if (!V.help)
 20253  018FAE  0102               	movlb	2	; () banked
 20254  018FB0  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 20255  018FB2  D008               	goto	l9350
 20256                           
 20257                           ; BSR set to: 2
 20258                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 20259  018FB4  0E2C               	movlw	44
 20260  018FB6  6EE6               	movwf	postinc1,c
 20261  018FB8  0E01               	movlw	1
 20262  018FBA  6EE6               	movwf	postinc1,c
 20263  018FBC  0E08               	movlw	8
 20264  018FBE  6EE6               	movwf	postinc1,c
 20265  018FC0  EC2A  F0C7         	call	_StartTimer	;wreg free
 20266  018FC4                     l9350:
 20267                           
 20268                           ;mconfig.c: 37:  return 0;
 20269  018FC4  0E00               	movlw	0
 20270  018FC6  6E01               	movwf	btemp^0,c
 20271                           
 20272                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 20273  018FC8  0012               	return		;funcret
 20274  018FCA                     __end_of_help_button:
 20275                           	opt callstack 0
 20276                           
 20277 ;; *************** function _TimerDone *****************
 20278 ;; Defined at:
 20279 ;;		line 20 in file "timers.c"
 20280 ;; Parameters:    Size  Location     Type
 20281 ;;  timer           1  [STACK] const unsigned char 
 20282 ;; Auto vars:     Size  Location     Type
 20283 ;;		None
 20284 ;; Return value:  Size  Location     Type
 20285 ;;                  1  [STACK] _Bool 
 20286 ;; Registers used:
 20287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20288 ;; Tracked objects:
 20289 ;;		On entry : 0/1
 20290 ;;		On exit  : 0/0
 20291 ;;		Unchanged: 0/0
 20292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20297 ;;Total ram usage:        0 bytes
 20298 ;; Hardware stack levels used:    1
 20299 ;; Hardware stack levels required when called:    7
 20300 ;; This function calls:
 20301 ;;		Nothing
 20302 ;; This function is called by:
 20303 ;;		_main
 20304 ;;		_WaitMs
 20305 ;;		_help_button
 20306 ;;		_check_help
 20307 ;;		_set_display_info
 20308 ;; This function uses a reentrant model
 20309 ;;
 20310                           
 20311                           	psect	text83
 20312  019316                     __ptext83:
 20313                           	opt callstack 0
 20314  019316                     _TimerDone:
 20315                           	opt callstack 22
 20316                           
 20317                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20318                           ;incstack = 0
 20319  019316  0004               	clrwdt		;# 
 20320                           
 20321                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 20322                           ;stkvar	_timer @ sp[(0)+-1]
 20323  019318  0EFF               	movlw	-1
 20324  01931A  50E3               	movf	plusw1,w,c
 20325  01931C  0D02               	mullw	2
 20326  01931E  0ED7               	movlw	low _tickCount
 20327  019320  24F3               	addwf	243,w,c
 20328  019322  6ED9               	movwf	fsr2l,c
 20329  019324  0E01               	movlw	high _tickCount
 20330  019326  20F4               	addwfc	prodh,w,c
 20331  019328  6EDA               	movwf	fsr2h,c
 20332  01932A  50DE               	movf	postinc2,w,c
 20333  01932C  10DE               	iorwf	postinc2,w,c
 20334  01932E  A4D8               	btfss	status,2,c
 20335  019330  D002               	goto	l8068
 20336                           
 20337                           ;timers.c: 24:   return 1;
 20338  019332  0E01               	movlw	1
 20339  019334  D001               	goto	L20
 20340  019336                     l8068:
 20341                           
 20342                           ;timers.c: 26:  return 0;
 20343  019336  0E00               	movlw	0
 20344  019338                     L20:
 20345  019338  6E01               	movwf	btemp^0,c
 20346                           
 20347                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20348  01933A  52E5               	movf	postdec1,f,c
 20349  01933C  0012               	return		;funcret
 20350  01933E                     __end_of_TimerDone:
 20351                           	opt callstack 0
 20352                           
 20353 ;; *************** function _StartTimer *****************
 20354 ;; Defined at:
 20355 ;;		line 12 in file "timers.c"
 20356 ;; Parameters:    Size  Location     Type
 20357 ;;  timer           1  [STACK] const unsigned char 
 20358 ;;  count           2  [STACK] const unsigned short 
 20359 ;; Auto vars:     Size  Location     Type
 20360 ;;		None
 20361 ;; Return value:  Size  Location     Type
 20362 ;;                  1  [STACK] void 
 20363 ;; Registers used:
 20364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20365 ;; Tracked objects:
 20366 ;;		On entry : 0/0
 20367 ;;		On exit  : 0/0
 20368 ;;		Unchanged: 0/0
 20369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20374 ;;Total ram usage:        0 bytes
 20375 ;; Hardware stack levels used:    1
 20376 ;; Hardware stack levels required when called:    7
 20377 ;; This function calls:
 20378 ;;		Nothing
 20379 ;; This function is called by:
 20380 ;;		_main
 20381 ;;		_WaitMs
 20382 ;;		_help_button
 20383 ;;		_check_help
 20384 ;; This function uses a reentrant model
 20385 ;;
 20386                           
 20387                           	psect	text84
 20388  018E54                     __ptext84:
 20389                           	opt callstack 0
 20390  018E54                     _StartTimer:
 20391                           	opt callstack 20
 20392                           
 20393                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 20394                           ;stkvar	_count @ sp[(0)+-3]
 20395                           
 20396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20397                           ;incstack = 0
 20398  018E54  0EFD               	movlw	-3
 20399  018E56  006F FF8C  F00B    	movff	plusw1,btemp+10
 20400  018E5C  0EFE               	movlw	-2
 20401  018E5E  006F FF8C  F00C    	movff	plusw1,btemp+11
 20402  018E64  90D8               	bcf	status,0,c
 20403  018E66  340B               	rlcf	(btemp+10)^0,w,c
 20404  018E68  6E09               	movwf	(btemp+8)^0,c
 20405  018E6A  340C               	rlcf	(btemp+11)^0,w,c
 20406  018E6C  6E0A               	movwf	(btemp+9)^0,c
 20407                           
 20408                           ;stkvar	_timer @ sp[(0)+-1]
 20409  018E6E  0EFF               	movlw	-1
 20410  018E70  50E3               	movf	plusw1,w,c
 20411  018E72  0D02               	mullw	2
 20412  018E74  0ED7               	movlw	low _tickCount
 20413  018E76  24F3               	addwf	243,w,c
 20414  018E78  6ED9               	movwf	fsr2l,c
 20415  018E7A  0E01               	movlw	high _tickCount
 20416  018E7C  20F4               	addwfc	prodh,w,c
 20417  018E7E  6EDA               	movwf	fsr2h,c
 20418  018E80  0060  F027  FFDE   	movff	btemp+8,postinc2
 20419  018E86  0060  F02B  FFDD   	movff	btemp+9,postdec2
 20420                           
 20421                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 20422  018E8C  52E5               	movf	postdec1,f,c
 20423  018E8E  52E5               	movf	postdec1,f,c
 20424  018E90  52E5               	movf	postdec1,f,c
 20425  018E92  0012               	return		;funcret
 20426  018E94                     __end_of_StartTimer:
 20427                           	opt callstack 0
 20428                           
 20429 ;; *************** function _display_info *****************
 20430 ;; Defined at:
 20431 ;;		line 190 in file "mconfig.c"
 20432 ;; Parameters:    Size  Location     Type
 20433 ;;		None
 20434 ;; Auto vars:     Size  Location     Type
 20435 ;;		None
 20436 ;; Return value:  Size  Location     Type
 20437 ;;                  1  [STACK] enum E16518
 20438 ;; Registers used:
 20439 ;;		btemp
 20440 ;; Tracked objects:
 20441 ;;		On entry : 0/2
 20442 ;;		On exit  : 0/0
 20443 ;;		Unchanged: 0/0
 20444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20449 ;;Total ram usage:        0 bytes
 20450 ;; Hardware stack levels used:    1
 20451 ;; Hardware stack levels required when called:    7
 20452 ;; This function calls:
 20453 ;;		Nothing
 20454 ;; This function is called by:
 20455 ;;		_check_help
 20456 ;; This function uses a reentrant model
 20457 ;;
 20458                           
 20459                           	psect	text85
 20460  0198F6                     __ptext85:
 20461                           	opt callstack 0
 20462  0198F6                     _display_info:
 20463                           	opt callstack 22
 20464                           
 20465                           ;mconfig.c: 192:  return V.response.info;
 20466                           
 20467                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20468                           ;incstack = 0
 20469  0198F6  0060  FA8C  F001   	movff	_V+163,btemp	;volatile
 20470                           
 20471                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20472  0198FC  0012               	return		;funcret
 20473  0198FE                     __end_of_display_info:
 20474                           	opt callstack 0
 20475                           
 20476 ;; *************** function _display_help *****************
 20477 ;; Defined at:
 20478 ;;		line 195 in file "mconfig.c"
 20479 ;; Parameters:    Size  Location     Type
 20480 ;;		None
 20481 ;; Auto vars:     Size  Location     Type
 20482 ;;		None
 20483 ;; Return value:  Size  Location     Type
 20484 ;;                  1  [STACK] enum E16518
 20485 ;; Registers used:
 20486 ;;		btemp
 20487 ;; Tracked objects:
 20488 ;;		On entry : 3F/2
 20489 ;;		On exit  : 0/0
 20490 ;;		Unchanged: 0/0
 20491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20495 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20496 ;;Total ram usage:        0 bytes
 20497 ;; Hardware stack levels used:    1
 20498 ;; Hardware stack levels required when called:    7
 20499 ;; This function calls:
 20500 ;;		Nothing
 20501 ;; This function is called by:
 20502 ;;		_check_help
 20503 ;; This function uses a reentrant model
 20504 ;;
 20505                           
 20506                           	psect	text86
 20507  0198FE                     __ptext86:
 20508                           	opt callstack 0
 20509  0198FE                     _display_help:
 20510                           	opt callstack 22
 20511                           
 20512                           ;mconfig.c: 197:  return V.response.help_temp;
 20513                           
 20514                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20515                           ;incstack = 0
 20516  0198FE  0060  FA90  F001   	movff	_V+164,btemp	;volatile
 20517                           
 20518                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20519  019904  0012               	return		;funcret
 20520  019906                     __end_of_display_help:
 20521                           	opt callstack 0
 20522                           
 20523 ;; *************** function _check_enter_button *****************
 20524 ;; Defined at:
 20525 ;;		line 42 in file "hid.c"
 20526 ;; Parameters:    Size  Location     Type
 20527 ;;  h               1  [STACK] PTR struct H_data
 20528 ;;		 -> H(7), 
 20529 ;; Auto vars:     Size  Location     Type
 20530 ;;		None
 20531 ;; Return value:  Size  Location     Type
 20532 ;;                  1  [STACK] _Bool 
 20533 ;; Registers used:
 20534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20535 ;; Tracked objects:
 20536 ;;		On entry : 0/1
 20537 ;;		On exit  : 0/0
 20538 ;;		Unchanged: 0/0
 20539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20544 ;;Total ram usage:        0 bytes
 20545 ;; Hardware stack levels used:    1
 20546 ;; Hardware stack levels required when called:    7
 20547 ;; This function calls:
 20548 ;;		Nothing
 20549 ;; This function is called by:
 20550 ;;		_main
 20551 ;; This function uses a reentrant model
 20552 ;;
 20553                           
 20554                           	psect	text87
 20555  018E94                     __ptext87:
 20556                           	opt callstack 0
 20557  018E94                     _check_enter_button:
 20558                           	opt callstack 23
 20559                           
 20560                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 20561                           ;stkvar	_h @ sp[(0)+-1]
 20562                           
 20563                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20564                           ;incstack = 0
 20565  018E94  0EFF               	movlw	-1
 20566  018E96  50E3               	movf	plusw1,w,c
 20567  018E98  6ED9               	movwf	fsr2l,c
 20568  018E9A  6ADA               	clrf	fsr2h,c
 20569  018E9C  0E04               	movlw	4
 20570  018E9E  26D9               	addwf	fsr2l,f,c
 20571  018EA0  50DF               	movf	indf2,w,c
 20572  018EA2  A4D8               	btfss	status,2,c
 20573  018EA4  D013               	goto	l9898
 20574                           
 20575                           ;stkvar	_h @ sp[(0)+-1]
 20576  018EA6  0EFF               	movlw	-1
 20577  018EA8  50E3               	movf	plusw1,w,c
 20578  018EAA  6ED9               	movwf	fsr2l,c
 20579  018EAC  6ADA               	clrf	fsr2h,c
 20580  018EAE  0E05               	movlw	5
 20581  018EB0  26D9               	addwf	fsr2l,f,c
 20582  018EB2  50DF               	movf	indf2,w,c
 20583  018EB4  A4D8               	btfss	status,2,c
 20584  018EB6  D00A               	goto	l9898
 20585                           
 20586                           ;hid.c: 45:   h->wait_enter = 1;
 20587                           ;stkvar	_h @ sp[(0)+-1]
 20588  018EB8  0EFF               	movlw	-1
 20589  018EBA  50E3               	movf	plusw1,w,c
 20590  018EBC  6ED9               	movwf	fsr2l,c
 20591  018EBE  6ADA               	clrf	fsr2h,c
 20592  018EC0  0E04               	movlw	4
 20593  018EC2  26D9               	addwf	fsr2l,f,c
 20594  018EC4  0E01               	movlw	1
 20595  018EC6  6EDF               	movwf	indf2,c
 20596                           
 20597                           ;hid.c: 46:   return 1;
 20598  018EC8  0E01               	movlw	1
 20599  018ECA  D001               	goto	L21
 20600  018ECC                     l9898:
 20601                           
 20602                           ;hid.c: 48:  return 0;
 20603  018ECC  0E00               	movlw	0
 20604  018ECE                     L21:
 20605  018ECE  6E01               	movwf	btemp^0,c
 20606                           
 20607                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 20608  018ED0  52E5               	movf	postdec1,f,c
 20609  018ED2  0012               	return		;funcret
 20610  018ED4                     __end_of_check_enter_button:
 20611                           	opt callstack 0
 20612                           
 20613 ;; *************** function _check_adc_scan *****************
 20614 ;; Defined at:
 20615 ;;		line 56 in file "daq.c"
 20616 ;; Parameters:    Size  Location     Type
 20617 ;;		None
 20618 ;; Auto vars:     Size  Location     Type
 20619 ;;		None
 20620 ;; Return value:  Size  Location     Type
 20621 ;;                  1  [STACK] _Bool 
 20622 ;; Registers used:
 20623 ;;		btemp
 20624 ;; Tracked objects:
 20625 ;;		On entry : 0/1
 20626 ;;		On exit  : 0/0
 20627 ;;		Unchanged: 0/0
 20628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20632 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20633 ;;Total ram usage:        0 bytes
 20634 ;; Hardware stack levels used:    1
 20635 ;; Hardware stack levels required when called:    7
 20636 ;; This function calls:
 20637 ;;		Nothing
 20638 ;; This function is called by:
 20639 ;;		_main
 20640 ;; This function uses a reentrant model
 20641 ;;
 20642                           
 20643                           	psect	text88
 20644  019906                     __ptext88:
 20645                           	opt callstack 0
 20646  019906                     _check_adc_scan:
 20647                           	opt callstack 23
 20648                           
 20649                           ;daq.c: 58:  return R.done;
 20650                           
 20651                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20652                           ;incstack = 0
 20653  019906  0060  F3C0  F001   	movff	_R+39,btemp	;volatile
 20654                           
 20655                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20656  01990C  0012               	return		;funcret
 20657  01990E                     __end_of_check_adc_scan:
 20658                           	opt callstack 0
 20659                           
 20660 ;; *************** function _calc_model_data *****************
 20661 ;; Defined at:
 20662 ;;		line 56 in file "mbmc.c"
 20663 ;; Parameters:    Size  Location     Type
 20664 ;;		None
 20665 ;; Auto vars:     Size  Location     Type
 20666 ;;		None
 20667 ;; Return value:  Size  Location     Type
 20668 ;;                  1  [STACK] void 
 20669 ;; Registers used:
 20670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20671 ;; Tracked objects:
 20672 ;;		On entry : 0/1
 20673 ;;		On exit  : 3F/1
 20674 ;;		Unchanged: 0/0
 20675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20680 ;;Total ram usage:        0 bytes
 20681 ;; Hardware stack levels used:    1
 20682 ;; Hardware stack levels required when called:   10
 20683 ;; This function calls:
 20684 ;;		___fladd
 20685 ;;		___flmul
 20686 ;;		___flsub
 20687 ;;		_lp_filter
 20688 ;;		_start_bsoc
 20689 ;;		_stop_bsoc
 20690 ;; This function is called by:
 20691 ;;		_main
 20692 ;; This function uses a reentrant model
 20693 ;;
 20694                           
 20695                           	psect	text89
 20696  015496                     __ptext89:
 20697                           	opt callstack 0
 20698  015496                     _calc_model_data:
 20699                           	opt callstack 20
 20700                           
 20701                           ;mbmc.c: 58:  stop_bsoc();
 20702                           
 20703                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20704                           ;incstack = 0
 20705  015496  EC94  F0CC         	call	_stop_bsoc	;wreg free
 20706                           
 20707                           ; BSR set to: 57
 20708                           ;mbmc.c: 60:  if (!V.calib) {
 20709  01549A  0102               	movlb	2	; () banked
 20710  01549C  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 20711  01549E  A4D8               	btfss	status,2,c
 20712  0154A0  D161               	goto	l9798
 20713                           
 20714                           ; BSR set to: 2
 20715                           ;mbmc.c: 61:   C.c_bat = C.calc[C_BATT];
 20716  0154A2  C100  F144         	movff	_C,_C+68	;volatile
 20717  0154A6  C101  F145         	movff	_C+1,_C+69	;volatile
 20718  0154AA  C102  F146         	movff	_C+2,_C+70	;volatile
 20719  0154AE  C103  F147         	movff	_C+3,_C+71	;volatile
 20720                           
 20721                           ;mbmc.c: 62:   C.c_pv = C.calc[C_PV];
 20722  0154B2  C104  F148         	movff	_C+4,_C+72	;volatile
 20723  0154B6  C105  F149         	movff	_C+5,_C+73	;volatile
 20724  0154BA  C106  F14A         	movff	_C+6,_C+74	;volatile
 20725  0154BE  C107  F14B         	movff	_C+7,_C+75	;volatile
 20726                           
 20727                           ;mbmc.c: 63:   C.v_bat = C.calc[V_BAT];
 20728  0154C2  C110  F154         	movff	_C+16,_C+84	;volatile
 20729  0154C6  C111  F155         	movff	_C+17,_C+85	;volatile
 20730  0154CA  C112  F156         	movff	_C+18,_C+86	;volatile
 20731  0154CE  C113  F157         	movff	_C+19,_C+87	;volatile
 20732                           
 20733                           ;mbmc.c: 64:   C.v_pv = C.calc[V_PV];
 20734  0154D2  C114  F150         	movff	_C+20,_C+80	;volatile
 20735  0154D6  C115  F151         	movff	_C+21,_C+81	;volatile
 20736  0154DA  C116  F152         	movff	_C+22,_C+82	;volatile
 20737  0154DE  C117  F153         	movff	_C+23,_C+83	;volatile
 20738                           
 20739                           ;mbmc.c: 65:   C.v_inverter = C.calc[V_INVERTER];
 20740  0154E2  C130  F164         	movff	_C+48,_C+100	;volatile
 20741  0154E6  C131  F165         	movff	_C+49,_C+101	;volatile
 20742  0154EA  C132  F166         	movff	_C+50,_C+102	;volatile
 20743  0154EE  C133  F167         	movff	_C+51,_C+103	;volatile
 20744                           
 20745                           ; BSR set to: 2
 20746                           ;mbmc.c: 66:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 20747  0154F2  0E01               	movlw	1
 20748  0154F4  6EE6               	movwf	postinc1,c
 20749  0154F6  0E10               	movlw	16
 20750  0154F8  6EE6               	movwf	postinc1,c
 20751  0154FA  0060  F403  FFE6   	movff	_C,postinc1
 20752  015500  0060  F407  FFE6   	movff	_C+1,postinc1
 20753  015506  0060  F40B  FFE6   	movff	_C+2,postinc1
 20754  01550C  0060  F40F  FFE6   	movff	_C+3,postinc1
 20755  015512  0060  F413  FFE6   	movff	_C+4,postinc1
 20756  015518  0060  F417  FFE6   	movff	_C+5,postinc1
 20757  01551E  0060  F41B  FFE6   	movff	_C+6,postinc1
 20758  015524  0060  F41F  FFE6   	movff	_C+7,postinc1
 20759  01552A  EC7E  F0C6         	call	___flsub	;wreg free
 20760  01552E  0060  F007  FFE6   	movff	btemp,postinc1
 20761  015534  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20762  01553A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20763  015540  0060  F013  FFE6   	movff	btemp+3,postinc1
 20764  015546  ECA0  F0B3         	call	_lp_filter	;wreg free
 20765  01554A  0060  F004  F140   	movff	btemp,_C+64	;volatile
 20766  015550  0060  F008  F141   	movff	btemp+1,_C+65	;volatile
 20767  015556  0060  F00C  F142   	movff	btemp+2,_C+66	;volatile
 20768  01555C  0060  F010  F143   	movff	btemp+3,_C+67	;volatile
 20769                           
 20770                           ;mbmc.c: 67:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 20771  015562  0E01               	movlw	1
 20772  015564  6EE6               	movwf	postinc1,c
 20773  015566  0E11               	movlw	17
 20774  015568  6EE6               	movwf	postinc1,c
 20775  01556A  0060  F553  FFE6   	movff	_C+84,postinc1
 20776  015570  0060  F557  FFE6   	movff	_C+85,postinc1
 20777  015576  0060  F55B  FFE6   	movff	_C+86,postinc1
 20778  01557C  0060  F55F  FFE6   	movff	_C+87,postinc1
 20779  015582  0060  F503  FFE6   	movff	_C+64,postinc1
 20780  015588  0060  F507  FFE6   	movff	_C+65,postinc1
 20781  01558E  0060  F50B  FFE6   	movff	_C+66,postinc1
 20782  015594  0060  F50F  FFE6   	movff	_C+67,postinc1
 20783  01559A  EC14  F093         	call	___flmul	;wreg free
 20784  01559E  0060  F007  FFE6   	movff	btemp,postinc1
 20785  0155A4  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20786  0155AA  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20787  0155B0  0060  F013  FFE6   	movff	btemp+3,postinc1
 20788  0155B6  ECA0  F0B3         	call	_lp_filter	;wreg free
 20789  0155BA  0060  F004  F168   	movff	btemp,_C+104	;volatile
 20790  0155C0  0060  F008  F169   	movff	btemp+1,_C+105	;volatile
 20791  0155C6  0060  F00C  F16A   	movff	btemp+2,_C+106	;volatile
 20792  0155CC  0060  F010  F16B   	movff	btemp+3,_C+107	;volatile
 20793                           
 20794                           ;mbmc.c: 68:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 20795  0155D2  0E01               	movlw	1
 20796  0155D4  6EE6               	movwf	postinc1,c
 20797  0155D6  0E12               	movlw	18
 20798  0155D8  6EE6               	movwf	postinc1,c
 20799  0155DA  0060  F543  FFE6   	movff	_C+80,postinc1
 20800  0155E0  0060  F547  FFE6   	movff	_C+81,postinc1
 20801  0155E6  0060  F54B  FFE6   	movff	_C+82,postinc1
 20802  0155EC  0060  F54F  FFE6   	movff	_C+83,postinc1
 20803  0155F2  0060  F523  FFE6   	movff	_C+72,postinc1
 20804  0155F8  0060  F527  FFE6   	movff	_C+73,postinc1
 20805  0155FE  0060  F52B  FFE6   	movff	_C+74,postinc1
 20806  015604  0060  F52F  FFE6   	movff	_C+75,postinc1
 20807  01560A  EC14  F093         	call	___flmul	;wreg free
 20808  01560E  0060  F007  FFE6   	movff	btemp,postinc1
 20809  015614  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20810  01561A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20811  015620  0060  F013  FFE6   	movff	btemp+3,postinc1
 20812  015626  ECA0  F0B3         	call	_lp_filter	;wreg free
 20813  01562A  0060  F004  F170   	movff	btemp,_C+112	;volatile
 20814  015630  0060  F008  F171   	movff	btemp+1,_C+113	;volatile
 20815  015636  0060  F00C  F172   	movff	btemp+2,_C+114	;volatile
 20816  01563C  0060  F010  F173   	movff	btemp+3,_C+115	;volatile
 20817                           
 20818                           ;mbmc.c: 69:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 20819  015642  0E01               	movlw	1
 20820  015644  6EE6               	movwf	postinc1,c
 20821  015646  0E13               	movlw	19
 20822  015648  6EE6               	movwf	postinc1,c
 20823  01564A  0E00               	movlw	0
 20824  01564C  6EE6               	movwf	postinc1,c
 20825  01564E  0E00               	movlw	0
 20826  015650  6EE6               	movwf	postinc1,c
 20827  015652  0E60               	movlw	96
 20828  015654  6EE6               	movwf	postinc1,c
 20829  015656  0EC1               	movlw	193
 20830  015658  6EE6               	movwf	postinc1,c
 20831  01565A  0060  F593  FFE6   	movff	_C+100,postinc1
 20832  015660  0060  F597  FFE6   	movff	_C+101,postinc1
 20833  015666  0060  F59B  FFE6   	movff	_C+102,postinc1
 20834  01566C  0060  F59F  FFE6   	movff	_C+103,postinc1
 20835  015672  0060  F503  FFE6   	movff	_C+64,postinc1
 20836  015678  0060  F507  FFE6   	movff	_C+65,postinc1
 20837  01567E  0060  F50B  FFE6   	movff	_C+66,postinc1
 20838  015684  0060  F50F  FFE6   	movff	_C+67,postinc1
 20839  01568A  EC14  F093         	call	___flmul	;wreg free
 20840  01568E  0060  F007  FFE6   	movff	btemp,postinc1
 20841  015694  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20842  01569A  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20843  0156A0  0060  F013  FFE6   	movff	btemp+3,postinc1
 20844  0156A6  EC29  F097         	call	___fladd	;wreg free
 20845  0156AA  0060  F007  FFE6   	movff	btemp,postinc1
 20846  0156B0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20847  0156B6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20848  0156BC  0060  F013  FFE6   	movff	btemp+3,postinc1
 20849  0156C2  ECA0  F0B3         	call	_lp_filter	;wreg free
 20850  0156C6  0060  F004  F16C   	movff	btemp,_C+108	;volatile
 20851  0156CC  0060  F008  F16D   	movff	btemp+1,_C+109	;volatile
 20852  0156D2  0060  F00C  F16E   	movff	btemp+2,_C+110	;volatile
 20853  0156D8  0060  F010  F16F   	movff	btemp+3,_C+111	;volatile
 20854                           
 20855                           ;mbmc.c: 70:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 20856  0156DE  0E01               	movlw	1
 20857  0156E0  6EE6               	movwf	postinc1,c
 20858  0156E2  0E14               	movlw	20
 20859  0156E4  6EE6               	movwf	postinc1,c
 20860  0156E6  0060  F553  FFE6   	movff	_C+84,postinc1
 20861  0156EC  0060  F557  FFE6   	movff	_C+85,postinc1
 20862  0156F2  0060  F55B  FFE6   	movff	_C+86,postinc1
 20863  0156F8  0060  F55F  FFE6   	movff	_C+87,postinc1
 20864  0156FE  0060  F513  FFE6   	movff	_C+68,postinc1
 20865  015704  0060  F517  FFE6   	movff	_C+69,postinc1
 20866  01570A  0060  F51B  FFE6   	movff	_C+70,postinc1
 20867  015710  0060  F51F  FFE6   	movff	_C+71,postinc1
 20868  015716  EC14  F093         	call	___flmul	;wreg free
 20869  01571A  0060  F007  FFE6   	movff	btemp,postinc1
 20870  015720  0060  F00B  FFE6   	movff	btemp+1,postinc1
 20871  015726  0060  F00F  FFE6   	movff	btemp+2,postinc1
 20872  01572C  0060  F013  FFE6   	movff	btemp+3,postinc1
 20873  015732  ECA0  F0B3         	call	_lp_filter	;wreg free
 20874  015736  0060  F004  F174   	movff	btemp,_C+116	;volatile
 20875  01573C  0060  F008  F175   	movff	btemp+1,_C+117	;volatile
 20876  015742  0060  F00C  F176   	movff	btemp+2,_C+118	;volatile
 20877  015748  0060  F010  F177   	movff	btemp+3,_C+119	;volatile
 20878                           
 20879                           ;mbmc.c: 74:   if (C.p_inverter < 0.0)
 20880  01574E  0101               	movlb	1	; () banked
 20881  015750  AF6F               	btfss	(_C+111)& (0+255),7,b	;volatile
 20882  015752  D008               	goto	l9798
 20883                           
 20884                           ; BSR set to: 1
 20885                           ;mbmc.c: 75:    C.p_inverter = 0.0001;
 20886  015754  0E17               	movlw	23
 20887  015756  6F6C               	movwf	(_C+108)& (0+255),b	;volatile
 20888  015758  0EB7               	movlw	183
 20889  01575A  6F6D               	movwf	(_C+109)& (0+255),b	;volatile
 20890  01575C  0ED1               	movlw	209
 20891  01575E  6F6E               	movwf	(_C+110)& (0+255),b	;volatile
 20892  015760  0E38               	movlw	56
 20893  015762  6F6F               	movwf	(_C+111)& (0+255),b	;volatile
 20894  015764                     l9798:
 20895                           
 20896                           ;mbmc.c: 77:  start_bsoc();
 20897  015764  EC3A  F0CB         	call	_start_bsoc	;wreg free
 20898                           
 20899                           ; BSR set to: 57
 20900                           ;mbmc.c: 78:  C.update = 1;
 20901  015768  0E01               	movlw	1
 20902  01576A  0101               	movlb	1	; () banked
 20903  01576C  6FA4               	movwf	(_C+164)& (0+255),b	;volatile
 20904                           
 20905                           ; BSR set to: 1
 20906                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 20907  01576E  0012               	return		;funcret
 20908  015770                     __end_of_calc_model_data:
 20909                           	opt callstack 0
 20910                           
 20911 ;; *************** function _stop_bsoc *****************
 20912 ;; Defined at:
 20913 ;;		line 91 in file "bsoc.c"
 20914 ;; Parameters:    Size  Location     Type
 20915 ;;		None
 20916 ;; Auto vars:     Size  Location     Type
 20917 ;;		None
 20918 ;; Return value:  Size  Location     Type
 20919 ;;                  1  [STACK] void 
 20920 ;; Registers used:
 20921 ;;		None
 20922 ;; Tracked objects:
 20923 ;;		On entry : 0/1
 20924 ;;		On exit  : 3F/39
 20925 ;;		Unchanged: 0/0
 20926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20931 ;;Total ram usage:        0 bytes
 20932 ;; Hardware stack levels used:    1
 20933 ;; Hardware stack levels required when called:    7
 20934 ;; This function calls:
 20935 ;;		Nothing
 20936 ;; This function is called by:
 20937 ;;		_calc_model_data
 20938 ;; This function uses a reentrant model
 20939 ;;
 20940                           
 20941                           	psect	text90
 20942  019928                     __ptext90:
 20943                           	opt callstack 0
 20944  019928                     _stop_bsoc:
 20945                           	opt callstack 22
 20946                           
 20947                           ;bsoc.c: 94:  PIE6bits.TMR3IE = 0;
 20948                           
 20949                           ; BSR set to: 1
 20950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20951                           ;incstack = 0
 20952  019928  0139               	movlb	57	; () banked
 20953  01992A  9D96               	bcf	150,6,b	;volatile
 20954                           
 20955                           ; BSR set to: 57
 20956                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 20957  01992C  0012               	return		;funcret
 20958  01992E                     __end_of_stop_bsoc:
 20959                           	opt callstack 0
 20960                           
 20961 ;; *************** function _start_bsoc *****************
 20962 ;; Defined at:
 20963 ;;		line 82 in file "bsoc.c"
 20964 ;; Parameters:    Size  Location     Type
 20965 ;;		None
 20966 ;; Auto vars:     Size  Location     Type
 20967 ;;		None
 20968 ;; Return value:  Size  Location     Type
 20969 ;;                  1  [STACK] void 
 20970 ;; Registers used:
 20971 ;;		wreg, status,2, status,0, btemp+11
 20972 ;; Tracked objects:
 20973 ;;		On entry : 3C/2
 20974 ;;		On exit  : 3F/39
 20975 ;;		Unchanged: 0/0
 20976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20981 ;;Total ram usage:        0 bytes
 20982 ;; Hardware stack levels used:    1
 20983 ;; Hardware stack levels required when called:    7
 20984 ;; This function calls:
 20985 ;;		Nothing
 20986 ;; This function is called by:
 20987 ;;		_calc_model_data
 20988 ;; This function uses a reentrant model
 20989 ;;
 20990                           
 20991                           	psect	text91
 20992  019674                     __ptext91:
 20993                           	opt callstack 0
 20994  019674                     _start_bsoc:
 20995                           	opt callstack 22
 20996                           
 20997                           ;bsoc.c: 85:  PIE6bits.TMR3IE = 1;
 20998                           
 20999                           ; BSR set to: 57
 21000                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21001                           ;incstack = 0
 21002  019674  0139               	movlb	57	; () banked
 21003  019676  8D96               	bsf	150,6,b	;volatile
 21004                           
 21005                           ; BSR set to: 57
 21006  019678  A4BE               	btfss	190,2,c	;volatile
 21007  01967A  D002               	goto	u8510
 21008  01967C  0E01               	movlw	1
 21009  01967E  D001               	goto	u8516
 21010  019680                     u8510:
 21011  019680  0E00               	movlw	0
 21012  019682                     u8516:
 21013  019682  0AFF               	xorlw	255
 21014  019684  6E0C               	movwf	(btemp+11)^0,c
 21015  019686  460C               	rlncf	(btemp+11)^0,f,c
 21016  019688  460C               	rlncf	(btemp+11)^0,f,c
 21017  01968A  50BE               	movf	190,w,c	;volatile
 21018  01968C  180C               	xorwf	(btemp+11)^0,w,c
 21019  01968E  0BFB               	andlw	-5
 21020  019690  180C               	xorwf	(btemp+11)^0,w,c
 21021  019692  6EBE               	movwf	190,c	;volatile
 21022                           
 21023                           ; BSR set to: 57
 21024                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 21025  019694  0012               	return		;funcret
 21026  019696                     __end_of_start_bsoc:
 21027                           	opt callstack 0
 21028                           
 21029 ;; *************** function _lp_filter *****************
 21030 ;; Defined at:
 21031 ;;		line 18 in file "mbmc.c"
 21032 ;; Parameters:    Size  Location     Type
 21033 ;;  new             4  [STACK] const float 
 21034 ;;  bn              1  [STACK] const unsigned char 
 21035 ;;  slow            1  [STACK] const char 
 21036 ;; Auto vars:     Size  Location     Type
 21037 ;;  lp_speed        4  [STACK] float 
 21038 ;; Return value:  Size  Location     Type
 21039 ;;                  4  [STACK] float 
 21040 ;; Registers used:
 21041 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21042 ;; Tracked objects:
 21043 ;;		On entry : 0/2
 21044 ;;		On exit  : 0/0
 21045 ;;		Unchanged: 0/0
 21046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21051 ;;Total ram usage:        0 bytes
 21052 ;; Hardware stack levels used:    1
 21053 ;; Hardware stack levels required when called:    9
 21054 ;; This function calls:
 21055 ;;		___fladd
 21056 ;;		___flmul
 21057 ;;		___flsub
 21058 ;; This function is called by:
 21059 ;;		_main
 21060 ;;		_convert_adc_data
 21061 ;;		_calc_model_data
 21062 ;; This function uses a reentrant model
 21063 ;;
 21064                           
 21065                           	psect	text92
 21066  016740                     __ptext92:
 21067                           	opt callstack 0
 21068  016740                     _lp_filter:
 21069                           	opt callstack 0
 21070                           
 21071                           ; BSR set to: 57
 21072                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21073  016740  52E6               	movf	postinc1,f,c
 21074  016742  52E6               	movf	postinc1,f,c
 21075  016744  52E6               	movf	postinc1,f,c
 21076  016746  52E6               	movf	postinc1,f,c
 21077                           
 21078                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 21079                           ;stkvar	_bn @ sp[(-4)+-5]
 21080                           
 21081                           ;incstack = 0
 21082  016748  0EF7               	movlw	-9
 21083  01674A  006F FF8C  F001    	movff	plusw1,btemp
 21084  016750  0E14               	movlw	20
 21085  016752  6401               	cpfsgt	btemp^0,c
 21086  016754  D011               	goto	l9304
 21087  016756                     u8330:
 21088                           
 21089                           ;mbmc.c: 24:   return new;
 21090                           ;stkvar	_new @ sp[(-4)+-4]
 21091  016756  0EF8               	movlw	-8
 21092  016758  006F FF8C  F001    	movff	plusw1,btemp
 21093  01675E  0EF9               	movlw	-7
 21094  016760  006F FF8C  F002    	movff	plusw1,btemp+1
 21095  016766  0EFA               	movlw	-6
 21096  016768  006F FF8C  F003    	movff	plusw1,btemp+2
 21097  01676E  0EFB               	movlw	-5
 21098  016770  006F FF8C  F004    	movff	plusw1,btemp+3
 21099  016776  D0BF               	goto	l1808
 21100  016778                     l9304:
 21101                           
 21102                           ;mbmc.c: 26:  if (slow == (-1)) {
 21103                           ;stkvar	_slow @ sp[(-4)+-6]
 21104  016778  0EF6               	movlw	-10
 21105  01677A  28E3               	incf	plusw1,w,c
 21106  01677C  A4D8               	btfss	status,2,c
 21107  01677E  D012               	goto	l9312
 21108                           
 21109                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 21110                           ;stkvar	_bn @ sp[(-4)+-5]
 21111  016780  0EF7               	movlw	-9
 21112  016782  50E3               	movf	plusw1,w,c
 21113  016784  0D04               	mullw	4
 21114  016786  0E00               	movlw	low lp_filter@smooth
 21115  016788  24F3               	addwf	243,w,c
 21116  01678A  6ED9               	movwf	fsr2l,c
 21117  01678C  0E03               	movlw	high lp_filter@smooth
 21118  01678E  20F4               	addwfc	prodh,w,c
 21119  016790  6EDA               	movwf	fsr2h,c
 21120  016792  0E00               	movlw	0
 21121  016794  6EDE               	movwf	postinc2,c
 21122  016796  0E00               	movlw	0
 21123  016798  6EDE               	movwf	postinc2,c
 21124  01679A  0E00               	movlw	0
 21125  01679C  6EDE               	movwf	postinc2,c
 21126  01679E  0E00               	movlw	0
 21127  0167A0  6EDD               	movwf	postdec2,c
 21128  0167A2  D7D9               	goto	u8330
 21129  0167A4                     l9312:
 21130                           
 21131                           ;mbmc.c: 31:  if (slow) {
 21132                           ;stkvar	_slow @ sp[(-4)+-6]
 21133  0167A4  0EF6               	movlw	-10
 21134  0167A6  50E3               	movf	plusw1,w,c
 21135  0167A8  B4D8               	btfsc	status,2,c
 21136  0167AA  D008               	goto	l9316
 21137                           
 21138                           ;mbmc.c: 32:   lp_speed = 0.033;
 21139  0167AC  0E02               	movlw	2
 21140  0167AE  6E09               	movwf	(btemp+8)^0,c
 21141  0167B0  0E2B               	movlw	43
 21142  0167B2  6E0A               	movwf	(btemp+9)^0,c
 21143  0167B4  0E07               	movlw	7
 21144  0167B6  6E0B               	movwf	(btemp+10)^0,c
 21145  0167B8  0E3D               	movlw	61
 21146  0167BA  D007               	goto	L22
 21147  0167BC                     l9316:
 21148                           
 21149                           ;mbmc.c: 34:   lp_speed = 0.125;
 21150  0167BC  0E00               	movlw	0
 21151  0167BE  6E09               	movwf	(btemp+8)^0,c
 21152  0167C0  0E00               	movlw	0
 21153  0167C2  6E0A               	movwf	(btemp+9)^0,c
 21154  0167C4  0E00               	movlw	0
 21155  0167C6  6E0B               	movwf	(btemp+10)^0,c
 21156  0167C8  0E3E               	movlw	62
 21157  0167CA                     L22:
 21158  0167CA  6E0C               	movwf	(btemp+11)^0,c
 21159                           
 21160                           ;stkvar	_lp_speed @ sp[(-4)+0]
 21161  0167CC  0EFC               	movlw	-4
 21162  0167CE  0060  F027  FFE3   	movff	btemp+8,plusw1
 21163  0167D4  0EFD               	movlw	-3
 21164  0167D6  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21165  0167DC  0EFE               	movlw	-2
 21166  0167DE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21167  0167E4  0EFF               	movlw	-1
 21168  0167E6  0060  F033  FFE3   	movff	btemp+11,plusw1
 21169                           
 21170                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 21171                           ;stkvar	_bn @ sp[(-4)+-5]
 21172  0167EC  0EF7               	movlw	-9
 21173  0167EE  50E3               	movf	plusw1,w,c
 21174  0167F0  0D04               	mullw	4
 21175  0167F2  0E00               	movlw	low lp_filter@smooth
 21176  0167F4  24F3               	addwf	243,w,c
 21177  0167F6  6ED9               	movwf	fsr2l,c
 21178  0167F8  0E03               	movlw	high lp_filter@smooth
 21179  0167FA  20F4               	addwfc	prodh,w,c
 21180  0167FC  6EDA               	movwf	fsr2h,c
 21181  0167FE  006F FF7B FFE6     	movff	postinc2,postinc1
 21182  016804  006F FF7B FFE6     	movff	postinc2,postinc1
 21183  01680A  006F FF7B FFE6     	movff	postinc2,postinc1
 21184  016810  006F FF7B FFE6     	movff	postinc2,postinc1
 21185                           
 21186                           ;stkvar	_lp_speed @ sp[(-8)+0]
 21187  016816  0EF8               	movlw	-8
 21188  016818  006F FF8F FFE6     	movff	plusw1,postinc1
 21189  01681E  006F FF8F FFE6     	movff	plusw1,postinc1
 21190  016824  006F FF8F FFE6     	movff	plusw1,postinc1
 21191  01682A  006F FF8F FFE6     	movff	plusw1,postinc1
 21192                           
 21193                           ;stkvar	_bn @ sp[(-12)+-5]
 21194  016830  0EEF               	movlw	-17
 21195  016832  50E3               	movf	plusw1,w,c
 21196  016834  0D04               	mullw	4
 21197  016836  0E00               	movlw	low lp_filter@smooth
 21198  016838  24F3               	addwf	243,w,c
 21199  01683A  6ED9               	movwf	fsr2l,c
 21200  01683C  0E03               	movlw	high lp_filter@smooth
 21201  01683E  20F4               	addwfc	prodh,w,c
 21202  016840  6EDA               	movwf	fsr2h,c
 21203  016842  006F FF7B FFE6     	movff	postinc2,postinc1
 21204  016848  006F FF7B FFE6     	movff	postinc2,postinc1
 21205  01684E  006F FF7B FFE6     	movff	postinc2,postinc1
 21206  016854  006F FF7B FFE6     	movff	postinc2,postinc1
 21207                           
 21208                           ;stkvar	_new @ sp[(-16)+-4]
 21209  01685A  0EEC               	movlw	-20
 21210  01685C  006F FF8F FFE6     	movff	plusw1,postinc1
 21211  016862  006F FF8F FFE6     	movff	plusw1,postinc1
 21212  016868  006F FF8F FFE6     	movff	plusw1,postinc1
 21213  01686E  006F FF8F FFE6     	movff	plusw1,postinc1
 21214  016874  EC7E  F0C6         	call	___flsub	;wreg free
 21215  016878  0060  F007  FFE6   	movff	btemp,postinc1
 21216  01687E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21217  016884  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21218  01688A  0060  F013  FFE6   	movff	btemp+3,postinc1
 21219  016890  EC14  F093         	call	___flmul	;wreg free
 21220  016894  0060  F007  FFE6   	movff	btemp,postinc1
 21221  01689A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 21222  0168A0  0060  F00F  FFE6   	movff	btemp+2,postinc1
 21223  0168A6  0060  F013  FFE6   	movff	btemp+3,postinc1
 21224  0168AC  EC29  F097         	call	___fladd	;wreg free
 21225                           
 21226                           ;stkvar	_bn @ sp[(-4)+-5]
 21227  0168B0  0EF7               	movlw	-9
 21228  0168B2  50E3               	movf	plusw1,w,c
 21229  0168B4  0D04               	mullw	4
 21230  0168B6  0E00               	movlw	low lp_filter@smooth
 21231  0168B8  24F3               	addwf	243,w,c
 21232  0168BA  6ED9               	movwf	fsr2l,c
 21233  0168BC  0E03               	movlw	high lp_filter@smooth
 21234  0168BE  20F4               	addwfc	prodh,w,c
 21235  0168C0  6EDA               	movwf	fsr2h,c
 21236  0168C2  0060  F007  FFDE   	movff	btemp,postinc2
 21237  0168C8  0060  F00B  FFDE   	movff	btemp+1,postinc2
 21238  0168CE  0060  F00F  FFDE   	movff	btemp+2,postinc2
 21239  0168D4  0060  F013  FFDD   	movff	btemp+3,postdec2
 21240  0168DA  52DD               	movf	postdec2,f,c
 21241  0168DC  52DD               	movf	postdec2,f,c
 21242  0168DE  006F FF78  F001    	movff	postinc2,btemp
 21243  0168E4  006F FF78  F002    	movff	postinc2,btemp+1
 21244  0168EA  006F FF78  F003    	movff	postinc2,btemp+2
 21245  0168F0  006F FF78  F004    	movff	postinc2,btemp+3
 21246  0168F6                     l1808:
 21247                           
 21248                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 21249  0168F6  0EF6               	movlw	246
 21250  0168F8  26E1               	addwf	fsr1l,f,c
 21251  0168FA  0EFF               	movlw	255
 21252  0168FC  22E2               	addwfc	fsr1h,f,c
 21253  0168FE  0012               	return		;funcret
 21254  016900                     __end_of_lp_filter:
 21255                           	opt callstack 0
 21256                           
 21257 ;; *************** function ___flsub *****************
 21258 ;; Defined at:
 21259 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 21260 ;; Parameters:    Size  Location     Type
 21261 ;;  b               4  [STACK] float 
 21262 ;;  a               4  [STACK] float 
 21263 ;; Auto vars:     Size  Location     Type
 21264 ;;		None
 21265 ;; Return value:  Size  Location     Type
 21266 ;;                  4  [STACK] float 
 21267 ;; Registers used:
 21268 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 21269 ;; Tracked objects:
 21270 ;;		On entry : 0/2
 21271 ;;		On exit  : 0/0
 21272 ;;		Unchanged: 0/0
 21273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21278 ;;Total ram usage:        0 bytes
 21279 ;; Hardware stack levels used:    1
 21280 ;; Hardware stack levels required when called:    8
 21281 ;; This function calls:
 21282 ;;		___fladd
 21283 ;; This function is called by:
 21284 ;;		_conv_raw_result
 21285 ;;		_lp_filter
 21286 ;;		_calc_model_data
 21287 ;;		_efgtoa
 21288 ;; This function uses a reentrant model
 21289 ;;
 21290                           
 21291                           	psect	text93
 21292  018CFC                     __ptext93:
 21293                           	opt callstack 0
 21294  018CFC                     ___flsub:
 21295                           	opt callstack 15
 21296                           
 21297                           ;stkvar	_a @ sp[(0)+-8]
 21298                           
 21299                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21300                           ;incstack = 0
 21301  018CFC  0EFB               	movlw	-5
 21302  018CFE  7EE3               	btg	plusw1,7,c
 21303                           
 21304                           ;stkvar	_a @ sp[(0)+-8]
 21305  018D00  0EF8               	movlw	-8
 21306  018D02  006F FF8F FFE6     	movff	plusw1,postinc1
 21307  018D08  006F FF8F FFE6     	movff	plusw1,postinc1
 21308  018D0E  006F FF8F FFE6     	movff	plusw1,postinc1
 21309  018D14  006F FF8F FFE6     	movff	plusw1,postinc1
 21310                           
 21311                           ;stkvar	_b @ sp[(-4)+-4]
 21312  018D1A  0EF8               	movlw	-8
 21313  018D1C  006F FF8F FFE6     	movff	plusw1,postinc1
 21314  018D22  006F FF8F FFE6     	movff	plusw1,postinc1
 21315  018D28  006F FF8F FFE6     	movff	plusw1,postinc1
 21316  018D2E  006F FF8F FFE6     	movff	plusw1,postinc1
 21317  018D34  EC29  F097         	call	___fladd	;wreg free
 21318                           
 21319                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 21320  018D38  0EF8               	movlw	248
 21321  018D3A  26E1               	addwf	fsr1l,f,c
 21322  018D3C  0EFF               	movlw	255
 21323  018D3E  22E2               	addwfc	fsr1h,f,c
 21324  018D40  0012               	return		;funcret
 21325  018D42                     __end_of___flsub:
 21326                           	opt callstack 0
 21327                           
 21328 ;; *************** function ___fladd *****************
 21329 ;; Defined at:
 21330 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 21331 ;; Parameters:    Size  Location     Type
 21332 ;;  b               4  [STACK] float 
 21333 ;;  a               4  [STACK] float 
 21334 ;; Auto vars:     Size  Location     Type
 21335 ;;  grs             1  [STACK] unsigned char 
 21336 ;;  bexp            1  [STACK] unsigned char 
 21337 ;;  aexp            1  [STACK] unsigned char 
 21338 ;;  signs           1  [STACK] unsigned char 
 21339 ;; Return value:  Size  Location     Type
 21340 ;;                  4  [STACK] unsigned char 
 21341 ;; Registers used:
 21342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 21343 ;; Tracked objects:
 21344 ;;		On entry : 0/0
 21345 ;;		On exit  : 0/0
 21346 ;;		Unchanged: 0/0
 21347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21352 ;;Total ram usage:        0 bytes
 21353 ;; Hardware stack levels used:    1
 21354 ;; Hardware stack levels required when called:    7
 21355 ;; This function calls:
 21356 ;;		Nothing
 21357 ;; This function is called by:
 21358 ;;		_lp_filter
 21359 ;;		_calc_model_data
 21360 ;;		_calc_bsoc
 21361 ;;		_efgtoa
 21362 ;;		___flsub
 21363 ;; This function uses a reentrant model
 21364 ;;
 21365                           
 21366                           	psect	text94
 21367  012E52                     __ptext94:
 21368                           	opt callstack 0
 21369  012E52                     ___fladd:
 21370                           	opt callstack 0
 21371                           
 21372                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21373  012E52  52E6               	movf	postinc1,f,c
 21374  012E54  52E6               	movf	postinc1,f,c
 21375  012E56  52E6               	movf	postinc1,f,c
 21376  012E58  52E6               	movf	postinc1,f,c
 21377                           
 21378                           ;stkvar	_b @ sp[(-4)+-4]
 21379                           
 21380                           ;incstack = 0
 21381  012E5A  0EFB               	movlw	251
 21382  012E5C  24E1               	addwf	fsr1l,w,c
 21383  012E5E  6ED9               	movwf	fsr2l,c
 21384  012E60  0EFF               	movlw	255
 21385  012E62  20E2               	addwfc	fsr1h,w,c
 21386  012E64  6EDA               	movwf	fsr2h,c
 21387  012E66  50DF               	movf	indf2,w,c
 21388  012E68  6E0C               	movwf	(btemp+11)^0,c
 21389  012E6A  0E80               	movlw	128
 21390  012E6C  160C               	andwf	(btemp+11)^0,f,c
 21391                           
 21392                           ;stkvar	_signs @ sp[(-4)+3]
 21393  012E6E  0EFF               	movlw	-1
 21394  012E70  0060  F033  FFE3   	movff	btemp+11,plusw1
 21395                           
 21396                           ;stkvar	_b @ sp[(-4)+-4]
 21397  012E76  0EFB               	movlw	251
 21398  012E78  24E1               	addwf	fsr1l,w,c
 21399  012E7A  6ED9               	movwf	fsr2l,c
 21400  012E7C  0EFF               	movlw	255
 21401  012E7E  20E2               	addwfc	fsr1h,w,c
 21402  012E80  6EDA               	movwf	fsr2h,c
 21403  012E82  50DF               	movf	indf2,w,c
 21404  012E84  6E0C               	movwf	(btemp+11)^0,c
 21405  012E86  90D8               	bcf	status,0,c
 21406  012E88  340C               	rlcf	(btemp+11)^0,w,c
 21407  012E8A  6E0B               	movwf	(btemp+10)^0,c
 21408                           
 21409                           ;stkvar	_bexp @ sp[(-4)+1]
 21410  012E8C  0EFD               	movlw	-3
 21411  012E8E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21412                           
 21413                           ;stkvar	_b @ sp[(-4)+-4]
 21414  012E94  0EFA               	movlw	250
 21415  012E96  24E1               	addwf	fsr1l,w,c
 21416  012E98  6ED9               	movwf	fsr2l,c
 21417  012E9A  0EFF               	movlw	255
 21418  012E9C  20E2               	addwfc	fsr1h,w,c
 21419  012E9E  6EDA               	movwf	fsr2h,c
 21420  012EA0  AEDF               	btfss	indf2,7,c
 21421  012EA2  D002               	goto	l8218
 21422                           
 21423                           ;stkvar	_bexp @ sp[(-4)+1]
 21424  012EA4  0EFD               	movlw	-3
 21425  012EA6  80E3               	bsf	plusw1,0,c
 21426  012EA8                     l8218:
 21427                           
 21428                           ;stkvar	_bexp @ sp[(-4)+1]
 21429  012EA8  0EFD               	movlw	-3
 21430  012EAA  50E3               	movf	plusw1,w,c
 21431  012EAC  B4D8               	btfsc	status,2,c
 21432  012EAE  D027               	goto	l8228
 21433                           
 21434                           ;stkvar	_bexp @ sp[(-4)+1]
 21435  012EB0  0EFD               	movlw	-3
 21436  012EB2  28E3               	incf	plusw1,w,c
 21437  012EB4  A4D8               	btfss	status,2,c
 21438  012EB6  D018               	goto	l8224
 21439  012EB8  0E00               	movlw	0
 21440  012EBA  6E09               	movwf	(btemp+8)^0,c
 21441  012EBC  0E00               	movlw	0
 21442  012EBE  6E0A               	movwf	(btemp+9)^0,c
 21443  012EC0  0E00               	movlw	0
 21444  012EC2  6E0B               	movwf	(btemp+10)^0,c
 21445  012EC4  0E00               	movlw	0
 21446  012EC6  6E0C               	movwf	(btemp+11)^0,c
 21447                           
 21448                           ;stkvar	_b @ sp[(-4)+-4]
 21449  012EC8  0EF8               	movlw	-8
 21450  012ECA  0060  F027  FFE3   	movff	btemp+8,plusw1
 21451  012ED0  0EF9               	movlw	-7
 21452  012ED2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21453  012ED8  0EFA               	movlw	-6
 21454  012EDA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21455  012EE0  0EFB               	movlw	-5
 21456  012EE2  0060  F033  FFE3   	movff	btemp+11,plusw1
 21457  012EE8                     l8224:
 21458                           
 21459                           ;stkvar	_b @ sp[(-4)+-4]
 21460  012EE8  0EFA               	movlw	-6
 21461  012EEA  8EE3               	bsf	plusw1,7,c
 21462                           
 21463                           ;stkvar	_b @ sp[(-4)+-4]
 21464  012EEC  0EFB               	movlw	251
 21465  012EEE  24E1               	addwf	fsr1l,w,c
 21466  012EF0  6ED9               	movwf	fsr2l,c
 21467  012EF2  0EFF               	movlw	255
 21468  012EF4  20E2               	addwfc	fsr1h,w,c
 21469  012EF6  6EDA               	movwf	fsr2h,c
 21470  012EF8  0E00               	movlw	0
 21471  012EFA  6EDF               	movwf	indf2,c
 21472  012EFC  D018               	goto	l8230
 21473  012EFE                     l8228:
 21474  012EFE  0E00               	movlw	0
 21475  012F00  6E09               	movwf	(btemp+8)^0,c
 21476  012F02  0E00               	movlw	0
 21477  012F04  6E0A               	movwf	(btemp+9)^0,c
 21478  012F06  0E00               	movlw	0
 21479  012F08  6E0B               	movwf	(btemp+10)^0,c
 21480  012F0A  0E00               	movlw	0
 21481  012F0C  6E0C               	movwf	(btemp+11)^0,c
 21482                           
 21483                           ;stkvar	_b @ sp[(-4)+-4]
 21484  012F0E  0EF8               	movlw	-8
 21485  012F10  0060  F027  FFE3   	movff	btemp+8,plusw1
 21486  012F16  0EF9               	movlw	-7
 21487  012F18  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21488  012F1E  0EFA               	movlw	-6
 21489  012F20  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21490  012F26  0EFB               	movlw	-5
 21491  012F28  0060  F033  FFE3   	movff	btemp+11,plusw1
 21492  012F2E                     l8230:
 21493                           
 21494                           ;stkvar	_a @ sp[(-4)+-8]
 21495  012F2E  0EF7               	movlw	247
 21496  012F30  24E1               	addwf	fsr1l,w,c
 21497  012F32  6ED9               	movwf	fsr2l,c
 21498  012F34  0EFF               	movlw	255
 21499  012F36  20E2               	addwfc	fsr1h,w,c
 21500  012F38  6EDA               	movwf	fsr2h,c
 21501  012F3A  50DF               	movf	indf2,w,c
 21502  012F3C  6E0C               	movwf	(btemp+11)^0,c
 21503  012F3E  0E80               	movlw	128
 21504  012F40  160C               	andwf	(btemp+11)^0,f,c
 21505                           
 21506                           ;stkvar	_aexp @ sp[(-4)+2]
 21507  012F42  0EFE               	movlw	-2
 21508  012F44  0060  F033  FFE3   	movff	btemp+11,plusw1
 21509                           
 21510                           ;stkvar	_signs @ sp[(-4)+3]
 21511                           ;stkvar	_aexp @ sp[(-4)+2]
 21512  012F4A  50E1               	movf	fsr1l,w,c
 21513  012F4C  0FFE               	addlw	-2
 21514  012F4E  6ED9               	movwf	fsr2l,c
 21515  012F50  50E2               	movf	fsr1h,w,c
 21516  012F52  6EDA               	movwf	fsr2h,c
 21517  012F54  0EFF               	movlw	255
 21518  012F56  22DA               	addwfc	fsr2h,f,c
 21519  012F58  0EFF               	movlw	-1
 21520  012F5A  50E3               	movf	plusw1,w,c
 21521  012F5C  18DE               	xorwf	postinc2,w,c
 21522  012F5E  B4D8               	btfsc	status,2,c
 21523  012F60  D002               	goto	l8236
 21524                           
 21525                           ;stkvar	_signs @ sp[(-4)+3]
 21526  012F62  0EFF               	movlw	-1
 21527  012F64  8CE3               	bsf	plusw1,6,c
 21528  012F66                     l8236:
 21529                           
 21530                           ;stkvar	_a @ sp[(-4)+-8]
 21531  012F66  0EF7               	movlw	247
 21532  012F68  24E1               	addwf	fsr1l,w,c
 21533  012F6A  6ED9               	movwf	fsr2l,c
 21534  012F6C  0EFF               	movlw	255
 21535  012F6E  20E2               	addwfc	fsr1h,w,c
 21536  012F70  6EDA               	movwf	fsr2h,c
 21537  012F72  50DF               	movf	indf2,w,c
 21538  012F74  6E0C               	movwf	(btemp+11)^0,c
 21539  012F76  90D8               	bcf	status,0,c
 21540  012F78  340C               	rlcf	(btemp+11)^0,w,c
 21541  012F7A  6E0B               	movwf	(btemp+10)^0,c
 21542                           
 21543                           ;stkvar	_aexp @ sp[(-4)+2]
 21544  012F7C  0EFE               	movlw	-2
 21545  012F7E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21546                           
 21547                           ;stkvar	_a @ sp[(-4)+-8]
 21548  012F84  0EF6               	movlw	246
 21549  012F86  24E1               	addwf	fsr1l,w,c
 21550  012F88  6ED9               	movwf	fsr2l,c
 21551  012F8A  0EFF               	movlw	255
 21552  012F8C  20E2               	addwfc	fsr1h,w,c
 21553  012F8E  6EDA               	movwf	fsr2h,c
 21554  012F90  AEDF               	btfss	indf2,7,c
 21555  012F92  D002               	goto	l8242
 21556                           
 21557                           ;stkvar	_aexp @ sp[(-4)+2]
 21558  012F94  0EFE               	movlw	-2
 21559  012F96  80E3               	bsf	plusw1,0,c
 21560  012F98                     l8242:
 21561                           
 21562                           ;stkvar	_aexp @ sp[(-4)+2]
 21563  012F98  0EFE               	movlw	-2
 21564  012F9A  50E3               	movf	plusw1,w,c
 21565  012F9C  B4D8               	btfsc	status,2,c
 21566  012F9E  D027               	goto	l8252
 21567                           
 21568                           ;stkvar	_aexp @ sp[(-4)+2]
 21569  012FA0  0EFE               	movlw	-2
 21570  012FA2  28E3               	incf	plusw1,w,c
 21571  012FA4  A4D8               	btfss	status,2,c
 21572  012FA6  D018               	goto	l8248
 21573  012FA8  0E00               	movlw	0
 21574  012FAA  6E09               	movwf	(btemp+8)^0,c
 21575  012FAC  0E00               	movlw	0
 21576  012FAE  6E0A               	movwf	(btemp+9)^0,c
 21577  012FB0  0E00               	movlw	0
 21578  012FB2  6E0B               	movwf	(btemp+10)^0,c
 21579  012FB4  0E00               	movlw	0
 21580  012FB6  6E0C               	movwf	(btemp+11)^0,c
 21581                           
 21582                           ;stkvar	_a @ sp[(-4)+-8]
 21583  012FB8  0EF4               	movlw	-12
 21584  012FBA  0060  F027  FFE3   	movff	btemp+8,plusw1
 21585  012FC0  0EF5               	movlw	-11
 21586  012FC2  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21587  012FC8  0EF6               	movlw	-10
 21588  012FCA  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21589  012FD0  0EF7               	movlw	-9
 21590  012FD2  0060  F033  FFE3   	movff	btemp+11,plusw1
 21591  012FD8                     l8248:
 21592                           
 21593                           ;stkvar	_a @ sp[(-4)+-8]
 21594  012FD8  0EF6               	movlw	-10
 21595  012FDA  8EE3               	bsf	plusw1,7,c
 21596                           
 21597                           ;stkvar	_a @ sp[(-4)+-8]
 21598  012FDC  0EF7               	movlw	247
 21599  012FDE  24E1               	addwf	fsr1l,w,c
 21600  012FE0  6ED9               	movwf	fsr2l,c
 21601  012FE2  0EFF               	movlw	255
 21602  012FE4  20E2               	addwfc	fsr1h,w,c
 21603  012FE6  6EDA               	movwf	fsr2h,c
 21604  012FE8  0E00               	movlw	0
 21605  012FEA  6EDF               	movwf	indf2,c
 21606  012FEC  D018               	goto	l8254
 21607  012FEE                     l8252:
 21608  012FEE  0E00               	movlw	0
 21609  012FF0  6E09               	movwf	(btemp+8)^0,c
 21610  012FF2  0E00               	movlw	0
 21611  012FF4  6E0A               	movwf	(btemp+9)^0,c
 21612  012FF6  0E00               	movlw	0
 21613  012FF8  6E0B               	movwf	(btemp+10)^0,c
 21614  012FFA  0E00               	movlw	0
 21615  012FFC  6E0C               	movwf	(btemp+11)^0,c
 21616                           
 21617                           ;stkvar	_a @ sp[(-4)+-8]
 21618  012FFE  0EF4               	movlw	-12
 21619  013000  0060  F027  FFE3   	movff	btemp+8,plusw1
 21620  013006  0EF5               	movlw	-11
 21621  013008  0060  F02B  FFE3   	movff	btemp+9,plusw1
 21622  01300E  0EF6               	movlw	-10
 21623  013010  0060  F02F  FFE3   	movff	btemp+10,plusw1
 21624  013016  0EF7               	movlw	-9
 21625  013018  0060  F033  FFE3   	movff	btemp+11,plusw1
 21626  01301E                     l8254:
 21627                           
 21628                           ;stkvar	_bexp @ sp[(-4)+1]
 21629                           ;stkvar	_aexp @ sp[(-4)+2]
 21630  01301E  50E1               	movf	fsr1l,w,c
 21631  013020  0FFE               	addlw	-2
 21632  013022  6ED9               	movwf	fsr2l,c
 21633  013024  50E2               	movf	fsr1h,w,c
 21634  013026  6EDA               	movwf	fsr2h,c
 21635  013028  0EFF               	movlw	255
 21636  01302A  22DA               	addwfc	fsr2h,f,c
 21637  01302C  0EFD               	movlw	-3
 21638  01302E  50E3               	movf	plusw1,w,c
 21639  013030  5CDE               	subwf	postinc2,w,c
 21640  013032  B0D8               	btfsc	status,0,c
 21641  013034  D0A4               	goto	l8290
 21642                           
 21643                           ;stkvar	_signs @ sp[(-4)+3]
 21644  013036  0EFF               	movlw	-1
 21645  013038  ACE3               	btfss	plusw1,6,c
 21646  01303A  D002               	goto	l8260
 21647                           
 21648                           ;stkvar	_signs @ sp[(-4)+3]
 21649  01303C  0EFF               	movlw	-1
 21650  01303E  7EE3               	btg	plusw1,7,c
 21651  013040                     l8260:
 21652                           
 21653                           ;stkvar	_bexp @ sp[(-4)+1]
 21654                           ;stkvar	_grs @ sp[(-4)+0]
 21655  013040  0EFD               	movlw	-3
 21656  013042  006F FF8C  F001    	movff	plusw1,btemp
 21657  013048  0EFC               	movlw	-4
 21658  01304A  0060  F007  FFE3   	movff	btemp,plusw1
 21659                           
 21660                           ;stkvar	_aexp @ sp[(-4)+2]
 21661                           ;stkvar	_bexp @ sp[(-4)+1]
 21662  013050  0EFE               	movlw	-2
 21663  013052  006F FF8C  F001    	movff	plusw1,btemp
 21664  013058  0EFD               	movlw	-3
 21665  01305A  0060  F007  FFE3   	movff	btemp,plusw1
 21666                           
 21667                           ;stkvar	_grs @ sp[(-4)+0]
 21668                           ;stkvar	_aexp @ sp[(-4)+2]
 21669  013060  0EFC               	movlw	-4
 21670  013062  006F FF8C  F001    	movff	plusw1,btemp
 21671  013068  0EFE               	movlw	-2
 21672  01306A  0060  F007  FFE3   	movff	btemp,plusw1
 21673                           
 21674                           ;stkvar	_b @ sp[(-4)+-4]
 21675                           ;stkvar	_grs @ sp[(-4)+0]
 21676  013070  0EF8               	movlw	-8
 21677  013072  006F FF8C  F001    	movff	plusw1,btemp
 21678  013078  0EFC               	movlw	-4
 21679  01307A  0060  F007  FFE3   	movff	btemp,plusw1
 21680                           
 21681                           ;stkvar	_a @ sp[(-4)+-8]
 21682                           ;stkvar	_b @ sp[(-4)+-4]
 21683  013080  0EF4               	movlw	-12
 21684  013082  006F FF8C  F001    	movff	plusw1,btemp
 21685  013088  0EF8               	movlw	-8
 21686  01308A  0060  F007  FFE3   	movff	btemp,plusw1
 21687                           
 21688                           ;stkvar	_grs @ sp[(-4)+0]
 21689                           ;stkvar	_a @ sp[(-4)+-8]
 21690  013090  0EFC               	movlw	-4
 21691  013092  006F FF8C  F001    	movff	plusw1,btemp
 21692  013098  0EF4               	movlw	-12
 21693  01309A  0060  F007  FFE3   	movff	btemp,plusw1
 21694                           
 21695                           ;stkvar	_b @ sp[(-4)+-4]
 21696  0130A0  0EF9               	movlw	249
 21697  0130A2  24E1               	addwf	fsr1l,w,c
 21698  0130A4  6ED9               	movwf	fsr2l,c
 21699  0130A6  0EFF               	movlw	255
 21700  0130A8  20E2               	addwfc	fsr1h,w,c
 21701  0130AA  6EDA               	movwf	fsr2h,c
 21702  0130AC  50DF               	movf	indf2,w,c
 21703  0130AE  6E0C               	movwf	(btemp+11)^0,c
 21704                           
 21705                           ;stkvar	_grs @ sp[(-4)+0]
 21706  0130B0  0EFC               	movlw	-4
 21707  0130B2  0060  F033  FFE3   	movff	btemp+11,plusw1
 21708                           
 21709                           ;stkvar	_a @ sp[(-4)+-8]
 21710  0130B8  0EF5               	movlw	245
 21711  0130BA  24E1               	addwf	fsr1l,w,c
 21712  0130BC  6ED9               	movwf	fsr2l,c
 21713  0130BE  0EFF               	movlw	255
 21714  0130C0  20E2               	addwfc	fsr1h,w,c
 21715  0130C2  6EDA               	movwf	fsr2h,c
 21716                           
 21717                           ;stkvar	_b @ sp[(-4)+-4]
 21718  0130C4  0EF9               	movlw	249
 21719  0130C6  24E1               	addwf	fsr1l,w,c
 21720  0130C8  6EE9               	movwf	fsr0l,c
 21721  0130CA  0EFF               	movlw	255
 21722  0130CC  20E2               	addwfc	fsr1h,w,c
 21723  0130CE  6EEA               	movwf	fsr0h,c
 21724  0130D0  006F FF7F FFEF     	movff	indf2,indf0
 21725                           
 21726                           ;stkvar	_grs @ sp[(-4)+0]
 21727                           ;stkvar	_a @ sp[(-4)+-8]
 21728  0130D6  0EF5               	movlw	245
 21729  0130D8  24E1               	addwf	fsr1l,w,c
 21730  0130DA  6ED9               	movwf	fsr2l,c
 21731  0130DC  0EFF               	movlw	255
 21732  0130DE  20E2               	addwfc	fsr1h,w,c
 21733  0130E0  6EDA               	movwf	fsr2h,c
 21734  0130E2  0EFC               	movlw	-4
 21735  0130E4  006F FF8F FFDF     	movff	plusw1,indf2
 21736                           
 21737                           ;stkvar	_b @ sp[(-4)+-4]
 21738  0130EA  0EFA               	movlw	250
 21739  0130EC  24E1               	addwf	fsr1l,w,c
 21740  0130EE  6ED9               	movwf	fsr2l,c
 21741  0130F0  0EFF               	movlw	255
 21742  0130F2  20E2               	addwfc	fsr1h,w,c
 21743  0130F4  6EDA               	movwf	fsr2h,c
 21744  0130F6  50DF               	movf	indf2,w,c
 21745  0130F8  6E0C               	movwf	(btemp+11)^0,c
 21746                           
 21747                           ;stkvar	_grs @ sp[(-4)+0]
 21748  0130FA  0EFC               	movlw	-4
 21749  0130FC  0060  F033  FFE3   	movff	btemp+11,plusw1
 21750                           
 21751                           ;stkvar	_a @ sp[(-4)+-8]
 21752  013102  0EF6               	movlw	246
 21753  013104  24E1               	addwf	fsr1l,w,c
 21754  013106  6ED9               	movwf	fsr2l,c
 21755  013108  0EFF               	movlw	255
 21756  01310A  20E2               	addwfc	fsr1h,w,c
 21757  01310C  6EDA               	movwf	fsr2h,c
 21758                           
 21759                           ;stkvar	_b @ sp[(-4)+-4]
 21760  01310E  0EFA               	movlw	250
 21761  013110  24E1               	addwf	fsr1l,w,c
 21762  013112  6EE9               	movwf	fsr0l,c
 21763  013114  0EFF               	movlw	255
 21764  013116  20E2               	addwfc	fsr1h,w,c
 21765  013118  6EEA               	movwf	fsr0h,c
 21766  01311A  006F FF7F FFEF     	movff	indf2,indf0
 21767                           
 21768                           ;stkvar	_grs @ sp[(-4)+0]
 21769                           ;stkvar	_a @ sp[(-4)+-8]
 21770  013120  0EF6               	movlw	246
 21771  013122  24E1               	addwf	fsr1l,w,c
 21772  013124  6ED9               	movwf	fsr2l,c
 21773  013126  0EFF               	movlw	255
 21774  013128  20E2               	addwfc	fsr1h,w,c
 21775  01312A  6EDA               	movwf	fsr2h,c
 21776  01312C  0EFC               	movlw	-4
 21777  01312E  006F FF8F FFDF     	movff	plusw1,indf2
 21778                           
 21779                           ;stkvar	_b @ sp[(-4)+-4]
 21780  013134  0EFB               	movlw	251
 21781  013136  24E1               	addwf	fsr1l,w,c
 21782  013138  6ED9               	movwf	fsr2l,c
 21783  01313A  0EFF               	movlw	255
 21784  01313C  20E2               	addwfc	fsr1h,w,c
 21785  01313E  6EDA               	movwf	fsr2h,c
 21786  013140  50DF               	movf	indf2,w,c
 21787  013142  6E0C               	movwf	(btemp+11)^0,c
 21788                           
 21789                           ;stkvar	_grs @ sp[(-4)+0]
 21790  013144  0EFC               	movlw	-4
 21791  013146  0060  F033  FFE3   	movff	btemp+11,plusw1
 21792                           
 21793                           ;stkvar	_a @ sp[(-4)+-8]
 21794  01314C  0EF7               	movlw	247
 21795  01314E  24E1               	addwf	fsr1l,w,c
 21796  013150  6ED9               	movwf	fsr2l,c
 21797  013152  0EFF               	movlw	255
 21798  013154  20E2               	addwfc	fsr1h,w,c
 21799  013156  6EDA               	movwf	fsr2h,c
 21800                           
 21801                           ;stkvar	_b @ sp[(-4)+-4]
 21802  013158  0EFB               	movlw	251
 21803  01315A  24E1               	addwf	fsr1l,w,c
 21804  01315C  6EE9               	movwf	fsr0l,c
 21805  01315E  0EFF               	movlw	255
 21806  013160  20E2               	addwfc	fsr1h,w,c
 21807  013162  6EEA               	movwf	fsr0h,c
 21808  013164  006F FF7F FFEF     	movff	indf2,indf0
 21809                           
 21810                           ;stkvar	_grs @ sp[(-4)+0]
 21811                           ;stkvar	_a @ sp[(-4)+-8]
 21812  01316A  0EF7               	movlw	247
 21813  01316C  24E1               	addwf	fsr1l,w,c
 21814  01316E  6ED9               	movwf	fsr2l,c
 21815  013170  0EFF               	movlw	255
 21816  013172  20E2               	addwfc	fsr1h,w,c
 21817  013174  6EDA               	movwf	fsr2h,c
 21818  013176  0EFC               	movlw	-4
 21819  013178  006F FF8F FFDF     	movff	plusw1,indf2
 21820  01317E                     l8290:
 21821                           
 21822                           ;stkvar	_grs @ sp[(-4)+0]
 21823  01317E  0EFC               	movlw	-4
 21824  013180  6AE3               	clrf	plusw1,c
 21825                           
 21826                           ;stkvar	_aexp @ sp[(-4)+2]
 21827  013182  0EFE               	movlw	-2
 21828  013184  50E3               	movf	plusw1,w,c
 21829  013186  6E0B               	movwf	(btemp+10)^0,c
 21830  013188  6A0C               	clrf	(btemp+11)^0,c
 21831                           
 21832                           ;stkvar	_bexp @ sp[(-4)+1]
 21833  01318A  0EFD               	movlw	-3
 21834  01318C  50E3               	movf	plusw1,w,c
 21835  01318E  5E0B               	subwf	(btemp+10)^0,f,c
 21836  013190  0E00               	movlw	0
 21837  013192  5A0C               	subwfb	(btemp+11)^0,f,c
 21838  013194  BE0C               	btfsc	(btemp+11)^0,7,c
 21839  013196  D062               	goto	l8314
 21840  013198  500C               	movf	(btemp+11)^0,w,c
 21841  01319A  E104               	bnz	u7180
 21842  01319C  0E1A               	movlw	26
 21843  01319E  5C0B               	subwf	(btemp+10)^0,w,c
 21844  0131A0  A0D8               	btfss	status,0,c
 21845  0131A2  D05C               	goto	l8314
 21846  0131A4                     u7180:
 21847                           
 21848                           ;stkvar	_b @ sp[(-4)+-4]
 21849  0131A4  0EF8               	movlw	-8
 21850  0131A6  50E3               	movf	plusw1,w,c
 21851  0131A8  E10A               	bnz	u7191
 21852  0131AA  0EF9               	movlw	-7
 21853  0131AC  50E3               	movf	plusw1,w,c
 21854  0131AE  E107               	bnz	u7191
 21855  0131B0  0EFA               	movlw	-6
 21856  0131B2  50E3               	movf	plusw1,w,c
 21857  0131B4  E104               	bnz	u7191
 21858  0131B6  0EFB               	movlw	-5
 21859  0131B8  50E3               	movf	plusw1,w,c
 21860  0131BA  B4D8               	btfsc	status,2,c
 21861  0131BC  D003               	goto	u7190
 21862  0131BE                     u7191:
 21863  0131BE  6A0C               	clrf	(btemp+11)^0,c
 21864  0131C0  2A0C               	incf	(btemp+11)^0,f,c
 21865  0131C2  D001               	goto	u7208
 21866  0131C4                     u7190:
 21867  0131C4  6A0C               	clrf	(btemp+11)^0,c
 21868  0131C6                     u7208:
 21869                           
 21870                           ;stkvar	_grs @ sp[(-4)+0]
 21871  0131C6  0EFC               	movlw	-4
 21872  0131C8  0060  F033  FFE3   	movff	btemp+11,plusw1
 21873                           
 21874                           ;stkvar	_b @ sp[(-4)+-4]
 21875  0131CE  0EF8               	movlw	-8
 21876  0131D0  6AE3               	clrf	plusw1,c
 21877  0131D2  0EF9               	movlw	-7
 21878  0131D4  6AE3               	clrf	plusw1,c
 21879  0131D6  0EFA               	movlw	-6
 21880  0131D8  6AE3               	clrf	plusw1,c
 21881  0131DA  0EFB               	movlw	-5
 21882  0131DC  6AE3               	clrf	plusw1,c
 21883                           
 21884                           ;stkvar	_aexp @ sp[(-4)+2]
 21885                           ;stkvar	_bexp @ sp[(-4)+1]
 21886  0131DE  0EFE               	movlw	-2
 21887  0131E0  006F FF8C  F001    	movff	plusw1,btemp
 21888  0131E6  0EFD               	movlw	-3
 21889  0131E8  0060  F007  FFE3   	movff	btemp,plusw1
 21890  0131EE  D042               	goto	u7240
 21891  0131F0                     l8300:
 21892                           
 21893                           ;stkvar	_grs @ sp[(-4)+0]
 21894  0131F0  0EFC               	movlw	-4
 21895  0131F2  A0E3               	btfss	plusw1,0,c
 21896  0131F4  D00D               	goto	l8304
 21897                           
 21898                           ;stkvar	_grs @ sp[(-4)+0]
 21899  0131F6  0EFC               	movlw	-4
 21900  0131F8  006F FF8C  F00C    	movff	plusw1,btemp+11
 21901  0131FE  90D8               	bcf	status,0,c
 21902  013200  320C               	rrcf	(btemp+11)^0,f,c
 21903  013202  0E01               	movlw	1
 21904  013204  120C               	iorwf	(btemp+11)^0,f,c
 21905                           
 21906                           ;stkvar	_grs @ sp[(-4)+0]
 21907  013206  0EFC               	movlw	-4
 21908  013208  0060  F033  FFE3   	movff	btemp+11,plusw1
 21909  01320E  D009               	goto	l8306
 21910  013210                     l8304:
 21911                           
 21912                           ;stkvar	_grs @ sp[(-4)+0]
 21913  013210  50E1               	movf	fsr1l,w,c
 21914  013212  0FFC               	addlw	-4
 21915  013214  6ED9               	movwf	fsr2l,c
 21916  013216  50E2               	movf	fsr1h,w,c
 21917  013218  6EDA               	movwf	fsr2h,c
 21918  01321A  0EFF               	movlw	255
 21919  01321C  22DA               	addwfc	fsr2h,f,c
 21920  01321E  90D8               	bcf	status,0,c
 21921  013220  32DF               	rrcf	indf2,f,c
 21922  013222                     l8306:
 21923                           
 21924                           ;stkvar	_b @ sp[(-4)+-4]
 21925  013222  0EF8               	movlw	-8
 21926  013224  A0E3               	btfss	plusw1,0,c
 21927  013226  D002               	goto	l8310
 21928                           
 21929                           ;stkvar	_grs @ sp[(-4)+0]
 21930  013228  0EFC               	movlw	-4
 21931  01322A  8EE3               	bsf	plusw1,7,c
 21932  01322C                     l8310:
 21933  01322C  0E01               	movlw	1
 21934  01322E  6E0C               	movwf	(btemp+11)^0,c
 21935                           
 21936                           ;stkvar	_b @ sp[(-4)+-4]
 21937  013230  50E1               	movf	fsr1l,w,c
 21938  013232  0FF8               	addlw	-8
 21939  013234  6ED9               	movwf	fsr2l,c
 21940  013236  50E2               	movf	fsr1h,w,c
 21941  013238  6EDA               	movwf	fsr2h,c
 21942  01323A  0EFF               	movlw	255
 21943  01323C  22DA               	addwfc	fsr2h,f,c
 21944  01323E  280C               	incf	(btemp+11)^0,w,c
 21945  013240  52DE               	movf	postinc2,f,c
 21946  013242  D008               	goto	u7230
 21947  013244                     u7235:
 21948  013244  52DE               	movf	postinc2,f,c
 21949  013246  90D8               	bcf	status,0,c
 21950  013248  BEDC               	btfsc	preinc2,7,c
 21951  01324A  80D8               	bsf	status,0,c
 21952  01324C  32DD               	rrcf	postdec2,f,c
 21953  01324E  32DD               	rrcf	postdec2,f,c
 21954  013250  32DD               	rrcf	postdec2,f,c
 21955  013252  32DE               	rrcf	postinc2,f,c
 21956  013254                     u7230:
 21957  013254  2EE8               	decfsz	wreg,f,c
 21958  013256  D7F6               	goto	u7235
 21959                           
 21960                           ;stkvar	_bexp @ sp[(-4)+1]
 21961  013258  0EFD               	movlw	-3
 21962  01325A  2AE3               	incf	plusw1,f,c
 21963  01325C                     l8314:
 21964                           
 21965                           ;stkvar	_aexp @ sp[(-4)+2]
 21966                           ;stkvar	_bexp @ sp[(-4)+1]
 21967  01325C  50E1               	movf	fsr1l,w,c
 21968  01325E  0FFD               	addlw	-3
 21969  013260  6ED9               	movwf	fsr2l,c
 21970  013262  50E2               	movf	fsr1h,w,c
 21971  013264  6EDA               	movwf	fsr2h,c
 21972  013266  0EFF               	movlw	255
 21973  013268  22DA               	addwfc	fsr2h,f,c
 21974  01326A  0EFE               	movlw	-2
 21975  01326C  50E3               	movf	plusw1,w,c
 21976  01326E  5CDE               	subwf	postinc2,w,c
 21977  013270  A0D8               	btfss	status,0,c
 21978  013272  D7BE               	goto	l8300
 21979  013274                     u7240:
 21980                           
 21981                           ;stkvar	_signs @ sp[(-4)+3]
 21982  013274  0EFF               	movlw	-1
 21983  013276  BCE3               	btfsc	plusw1,6,c
 21984  013278  D066               	goto	l8342
 21985                           
 21986                           ;stkvar	_bexp @ sp[(-4)+1]
 21987  01327A  0EFD               	movlw	-3
 21988  01327C  50E3               	movf	plusw1,w,c
 21989  01327E  B4D8               	btfsc	status,2,c
 21990  013280  D0F2               	goto	u7340
 21991                           
 21992                           ;stkvar	_a @ sp[(-4)+-8]
 21993                           ;stkvar	_b @ sp[(-4)+-4]
 21994  013282  0EF8               	movlw	-8
 21995  013284  50E3               	movf	plusw1,w,c
 21996  013286  6E01               	movwf	btemp^0,c
 21997  013288  0EF4               	movlw	-12
 21998  01328A  50E3               	movf	plusw1,w,c
 21999  01328C  2601               	addwf	btemp^0,f,c
 22000  01328E  0EF8               	movlw	-8
 22001  013290  0060  F007  FFE3   	movff	btemp,plusw1
 22002  013296  0EF9               	movlw	-7
 22003  013298  50E3               	movf	plusw1,w,c
 22004  01329A  6E01               	movwf	btemp^0,c
 22005  01329C  0EF5               	movlw	-11
 22006  01329E  50E3               	movf	plusw1,w,c
 22007  0132A0  2201               	addwfc	btemp^0,f,c
 22008  0132A2  0EF9               	movlw	-7
 22009  0132A4  0060  F007  FFE3   	movff	btemp,plusw1
 22010  0132AA  0EFA               	movlw	-6
 22011  0132AC  50E3               	movf	plusw1,w,c
 22012  0132AE  6E01               	movwf	btemp^0,c
 22013  0132B0  0EF6               	movlw	-10
 22014  0132B2  50E3               	movf	plusw1,w,c
 22015  0132B4  2201               	addwfc	btemp^0,f,c
 22016  0132B6  0EFA               	movlw	-6
 22017  0132B8  0060  F007  FFE3   	movff	btemp,plusw1
 22018  0132BE  0EFB               	movlw	-5
 22019  0132C0  50E3               	movf	plusw1,w,c
 22020  0132C2  6E01               	movwf	btemp^0,c
 22021  0132C4  0EF7               	movlw	-9
 22022  0132C6  50E3               	movf	plusw1,w,c
 22023  0132C8  2201               	addwfc	btemp^0,f,c
 22024  0132CA  0EFB               	movlw	-5
 22025  0132CC  0060  F007  FFE3   	movff	btemp,plusw1
 22026                           
 22027                           ;stkvar	_b @ sp[(-4)+-4]
 22028  0132D2  0EFB               	movlw	-5
 22029  0132D4  A0E3               	btfss	plusw1,0,c
 22030  0132D6  D101               	goto	u7380
 22031                           
 22032                           ;stkvar	_grs @ sp[(-4)+0]
 22033  0132D8  0EFC               	movlw	-4
 22034  0132DA  A0E3               	btfss	plusw1,0,c
 22035  0132DC  D00D               	goto	l8332
 22036                           
 22037                           ;stkvar	_grs @ sp[(-4)+0]
 22038  0132DE  0EFC               	movlw	-4
 22039  0132E0  006F FF8C  F00C    	movff	plusw1,btemp+11
 22040  0132E6  90D8               	bcf	status,0,c
 22041  0132E8  320C               	rrcf	(btemp+11)^0,f,c
 22042  0132EA  0E01               	movlw	1
 22043  0132EC  120C               	iorwf	(btemp+11)^0,f,c
 22044                           
 22045                           ;stkvar	_grs @ sp[(-4)+0]
 22046  0132EE  0EFC               	movlw	-4
 22047  0132F0  0060  F033  FFE3   	movff	btemp+11,plusw1
 22048  0132F6  D009               	goto	l8334
 22049  0132F8                     l8332:
 22050                           
 22051                           ;stkvar	_grs @ sp[(-4)+0]
 22052  0132F8  50E1               	movf	fsr1l,w,c
 22053  0132FA  0FFC               	addlw	-4
 22054  0132FC  6ED9               	movwf	fsr2l,c
 22055  0132FE  50E2               	movf	fsr1h,w,c
 22056  013300  6EDA               	movwf	fsr2h,c
 22057  013302  0EFF               	movlw	255
 22058  013304  22DA               	addwfc	fsr2h,f,c
 22059  013306  90D8               	bcf	status,0,c
 22060  013308  32DF               	rrcf	indf2,f,c
 22061  01330A                     l8334:
 22062                           
 22063                           ;stkvar	_b @ sp[(-4)+-4]
 22064  01330A  0EF8               	movlw	-8
 22065  01330C  A0E3               	btfss	plusw1,0,c
 22066  01330E  D002               	goto	l8338
 22067                           
 22068                           ;stkvar	_grs @ sp[(-4)+0]
 22069  013310  0EFC               	movlw	-4
 22070  013312  8EE3               	bsf	plusw1,7,c
 22071  013314                     l8338:
 22072  013314  0E01               	movlw	1
 22073  013316  6E0C               	movwf	(btemp+11)^0,c
 22074                           
 22075                           ;stkvar	_b @ sp[(-4)+-4]
 22076  013318  50E1               	movf	fsr1l,w,c
 22077  01331A  0FF8               	addlw	-8
 22078  01331C  6ED9               	movwf	fsr2l,c
 22079  01331E  50E2               	movf	fsr1h,w,c
 22080  013320  6EDA               	movwf	fsr2h,c
 22081  013322  0EFF               	movlw	255
 22082  013324  22DA               	addwfc	fsr2h,f,c
 22083  013326  280C               	incf	(btemp+11)^0,w,c
 22084  013328  52DE               	movf	postinc2,f,c
 22085  01332A  D008               	goto	u7300
 22086  01332C                     u7305:
 22087  01332C  52DE               	movf	postinc2,f,c
 22088  01332E  90D8               	bcf	status,0,c
 22089  013330  BEDC               	btfsc	preinc2,7,c
 22090  013332  80D8               	bsf	status,0,c
 22091  013334  32DD               	rrcf	postdec2,f,c
 22092  013336  32DD               	rrcf	postdec2,f,c
 22093  013338  32DD               	rrcf	postdec2,f,c
 22094  01333A  32DE               	rrcf	postinc2,f,c
 22095  01333C                     u7300:
 22096  01333C  2EE8               	decfsz	wreg,f,c
 22097  01333E  D7F6               	goto	u7305
 22098                           
 22099                           ;stkvar	_bexp @ sp[(-4)+1]
 22100  013340  0EFD               	movlw	-3
 22101  013342  2AE3               	incf	plusw1,f,c
 22102  013344  D0CA               	goto	u7380
 22103  013346                     l8342:
 22104                           
 22105                           ;stkvar	_a @ sp[(-4)+-8]
 22106                           ;stkvar	_b @ sp[(-4)+-4]
 22107  013346  50E1               	movf	fsr1l,w,c
 22108  013348  0FF8               	addlw	-8
 22109  01334A  6ED9               	movwf	fsr2l,c
 22110  01334C  50E2               	movf	fsr1h,w,c
 22111  01334E  6EDA               	movwf	fsr2h,c
 22112  013350  0EFF               	movlw	255
 22113  013352  22DA               	addwfc	fsr2h,f,c
 22114  013354  0EF4               	movlw	-12
 22115  013356  50E3               	movf	plusw1,w,c
 22116  013358  5CDE               	subwf	postinc2,w,c
 22117  01335A  0EF5               	movlw	-11
 22118  01335C  50E3               	movf	plusw1,w,c
 22119  01335E  58DE               	subwfb	postinc2,w,c
 22120  013360  0EF6               	movlw	-10
 22121  013362  50E3               	movf	plusw1,w,c
 22122  013364  58DE               	subwfb	postinc2,w,c
 22123  013366  50DE               	movf	postinc2,w,c
 22124  013368  0A80               	xorlw	128
 22125  01336A  6E01               	movwf	btemp^0,c
 22126  01336C  0EF7               	movlw	-9
 22127  01336E  50E3               	movf	plusw1,w,c
 22128  013370  0A80               	xorlw	128
 22129  013372  5801               	subwfb	btemp^0,w,c
 22130  013374  B0D8               	btfsc	status,0,c
 22131  013376  D053               	goto	l8354
 22132                           
 22133                           ;stkvar	_b @ sp[(-4)+-4]
 22134                           ;stkvar	_a @ sp[(-4)+-8]
 22135  013378  0EF4               	movlw	-12
 22136  01337A  006F FF8C  F009    	movff	plusw1,btemp+8
 22137  013380  0EF5               	movlw	-11
 22138  013382  006F FF8C  F00A    	movff	plusw1,btemp+9
 22139  013388  0EF6               	movlw	-10
 22140  01338A  006F FF8C  F00B    	movff	plusw1,btemp+10
 22141  013390  0EF7               	movlw	-9
 22142  013392  006F FF8C  F00C    	movff	plusw1,btemp+11
 22143  013398  0EF8               	movlw	-8
 22144  01339A  50E3               	movf	plusw1,w,c
 22145  01339C  5E09               	subwf	(btemp+8)^0,f,c
 22146  01339E  0EF9               	movlw	-7
 22147  0133A0  50E3               	movf	plusw1,w,c
 22148  0133A2  5A0A               	subwfb	(btemp+9)^0,f,c
 22149  0133A4  0EFA               	movlw	-6
 22150  0133A6  50E3               	movf	plusw1,w,c
 22151  0133A8  5A0B               	subwfb	(btemp+10)^0,f,c
 22152  0133AA  0EFB               	movlw	-5
 22153  0133AC  50E3               	movf	plusw1,w,c
 22154  0133AE  5A0C               	subwfb	(btemp+11)^0,f,c
 22155  0133B0  0EFF               	movlw	255
 22156  0133B2  2409               	addwf	(btemp+8)^0,w,c
 22157  0133B4  6E05               	movwf	(btemp+4)^0,c
 22158  0133B6  0EFF               	movlw	255
 22159  0133B8  200A               	addwfc	(btemp+9)^0,w,c
 22160  0133BA  6E06               	movwf	(btemp+5)^0,c
 22161  0133BC  0EFF               	movlw	255
 22162  0133BE  200B               	addwfc	(btemp+10)^0,w,c
 22163  0133C0  6E07               	movwf	(btemp+6)^0,c
 22164  0133C2  0EFF               	movlw	255
 22165  0133C4  200C               	addwfc	(btemp+11)^0,w,c
 22166  0133C6  6E08               	movwf	(btemp+7)^0,c
 22167                           
 22168                           ;stkvar	_b @ sp[(-4)+-4]
 22169  0133C8  0EF8               	movlw	-8
 22170  0133CA  0060  F017  FFE3   	movff	btemp+4,plusw1
 22171  0133D0  0EF9               	movlw	-7
 22172  0133D2  0060  F01B  FFE3   	movff	btemp+5,plusw1
 22173  0133D8  0EFA               	movlw	-6
 22174  0133DA  0060  F01F  FFE3   	movff	btemp+6,plusw1
 22175  0133E0  0EFB               	movlw	-5
 22176  0133E2  0060  F023  FFE3   	movff	btemp+7,plusw1
 22177                           
 22178                           ;stkvar	_signs @ sp[(-4)+3]
 22179  0133E8  0EFF               	movlw	-1
 22180  0133EA  7EE3               	btg	plusw1,7,c
 22181                           
 22182                           ;stkvar	_grs @ sp[(-4)+0]
 22183  0133EC  0EFC               	movlw	-4
 22184  0133EE  50E3               	movf	plusw1,w,c
 22185  0133F0  0800               	sublw	0
 22186  0133F2  6E0C               	movwf	(btemp+11)^0,c
 22187                           
 22188                           ;stkvar	_grs @ sp[(-4)+0]
 22189  0133F4  0EFC               	movlw	-4
 22190  0133F6  0060  F033  FFE3   	movff	btemp+11,plusw1
 22191                           
 22192                           ;stkvar	_grs @ sp[(-4)+0]
 22193  0133FC  0EFC               	movlw	-4
 22194  0133FE  50E3               	movf	plusw1,w,c
 22195  013400  A4D8               	btfss	status,2,c
 22196  013402  D020               	goto	l8356
 22197                           
 22198                           ;stkvar	_b @ sp[(-4)+-4]
 22199  013404  50E1               	movf	fsr1l,w,c
 22200  013406  0FF8               	addlw	-8
 22201  013408  6ED9               	movwf	fsr2l,c
 22202  01340A  50E2               	movf	fsr1h,w,c
 22203  01340C  6EDA               	movwf	fsr2h,c
 22204  01340E  0EFF               	movlw	255
 22205  013410  22DA               	addwfc	fsr2h,f,c
 22206  013412  2ADE               	incf	postinc2,f,c
 22207  013414  0E00               	movlw	0
 22208  013416  22DE               	addwfc	postinc2,f,c
 22209  013418  22DE               	addwfc	postinc2,f,c
 22210  01341A  22DE               	addwfc	postinc2,f,c
 22211  01341C  D013               	goto	l8356
 22212  01341E                     l8354:
 22213                           
 22214                           ;stkvar	_a @ sp[(-4)+-8]
 22215                           ;stkvar	_b @ sp[(-4)+-4]
 22216  01341E  50E1               	movf	fsr1l,w,c
 22217  013420  0FF8               	addlw	-8
 22218  013422  6ED9               	movwf	fsr2l,c
 22219  013424  50E2               	movf	fsr1h,w,c
 22220  013426  6EDA               	movwf	fsr2h,c
 22221  013428  0EFF               	movlw	255
 22222  01342A  22DA               	addwfc	fsr2h,f,c
 22223  01342C  0EF4               	movlw	-12
 22224  01342E  50E3               	movf	plusw1,w,c
 22225  013430  5EDE               	subwf	postinc2,f,c
 22226  013432  0EF5               	movlw	-11
 22227  013434  50E3               	movf	plusw1,w,c
 22228  013436  5ADE               	subwfb	postinc2,f,c
 22229  013438  0EF6               	movlw	-10
 22230  01343A  50E3               	movf	plusw1,w,c
 22231  01343C  5ADE               	subwfb	postinc2,f,c
 22232  01343E  0EF7               	movlw	-9
 22233  013440  50E3               	movf	plusw1,w,c
 22234  013442  5ADE               	subwfb	postinc2,f,c
 22235  013444                     l8356:
 22236                           
 22237                           ;stkvar	_b @ sp[(-4)+-4]
 22238  013444  0EF8               	movlw	-8
 22239  013446  50E3               	movf	plusw1,w,c
 22240  013448  E145               	bnz	l8378
 22241  01344A  0EF9               	movlw	-7
 22242  01344C  50E3               	movf	plusw1,w,c
 22243  01344E  E142               	bnz	l8378
 22244  013450  0EFA               	movlw	-6
 22245  013452  50E3               	movf	plusw1,w,c
 22246  013454  E13F               	bnz	l8378
 22247  013456  0EFB               	movlw	-5
 22248  013458  50E3               	movf	plusw1,w,c
 22249  01345A  A4D8               	btfss	status,2,c
 22250  01345C  D03B               	goto	l8378
 22251                           
 22252                           ;stkvar	_grs @ sp[(-4)+0]
 22253  01345E  0EFC               	movlw	-4
 22254  013460  50E3               	movf	plusw1,w,c
 22255  013462  A4D8               	btfss	status,2,c
 22256  013464  D037               	goto	l8378
 22257  013466                     u7340:
 22258  013466  0E00               	movlw	0
 22259  013468  6E01               	movwf	btemp^0,c
 22260  01346A  0E00               	movlw	0
 22261  01346C  6E02               	movwf	(btemp+1)^0,c
 22262  01346E  0E00               	movlw	0
 22263  013470  6E03               	movwf	(btemp+2)^0,c
 22264  013472  0E00               	movlw	0
 22265  013474  6E04               	movwf	(btemp+3)^0,c
 22266  013476  D0C6               	goto	l2788
 22267  013478                     l8364:
 22268                           
 22269                           ;stkvar	_b @ sp[(-4)+-4]
 22270  013478  90D8               	bcf	status,0,c
 22271  01347A  0EF8               	movlw	-8
 22272  01347C  36E3               	rlcf	plusw1,f,c
 22273  01347E  0EF9               	movlw	-7
 22274  013480  36E3               	rlcf	plusw1,f,c
 22275  013482  0EFA               	movlw	-6
 22276  013484  36E3               	rlcf	plusw1,f,c
 22277  013486  0EFB               	movlw	-5
 22278  013488  36E3               	rlcf	plusw1,f,c
 22279                           
 22280                           ;stkvar	_grs @ sp[(-4)+0]
 22281  01348A  0EFC               	movlw	-4
 22282  01348C  AEE3               	btfss	plusw1,7,c
 22283  01348E  D002               	goto	l2800
 22284                           
 22285                           ;stkvar	_b @ sp[(-4)+-4]
 22286  013490  0EF8               	movlw	-8
 22287  013492  80E3               	bsf	plusw1,0,c
 22288  013494                     l2800:
 22289                           
 22290                           ;stkvar	_grs @ sp[(-4)+0]
 22291  013494  0EFC               	movlw	-4
 22292  013496  A0E3               	btfss	plusw1,0,c
 22293  013498  D00E               	goto	l8372
 22294                           
 22295                           ;stkvar	_grs @ sp[(-4)+0]
 22296  01349A  0EFC               	movlw	-4
 22297  01349C  006F FF8C  F00C    	movff	plusw1,btemp+11
 22298  0134A2  90D8               	bcf	status,0,c
 22299  0134A4  340C               	rlcf	(btemp+11)^0,w,c
 22300  0134A6  6E0B               	movwf	(btemp+10)^0,c
 22301  0134A8  0E01               	movlw	1
 22302  0134AA  120B               	iorwf	(btemp+10)^0,f,c
 22303                           
 22304                           ;stkvar	_grs @ sp[(-4)+0]
 22305  0134AC  0EFC               	movlw	-4
 22306  0134AE  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22307  0134B4  D009               	goto	l8374
 22308  0134B6                     l8372:
 22309                           
 22310                           ;stkvar	_grs @ sp[(-4)+0]
 22311  0134B6  50E1               	movf	fsr1l,w,c
 22312  0134B8  0FFC               	addlw	-4
 22313  0134BA  6ED9               	movwf	fsr2l,c
 22314  0134BC  50E2               	movf	fsr1h,w,c
 22315  0134BE  6EDA               	movwf	fsr2h,c
 22316  0134C0  0EFF               	movlw	255
 22317  0134C2  22DA               	addwfc	fsr2h,f,c
 22318  0134C4  90D8               	bcf	status,0,c
 22319  0134C6  36DF               	rlcf	indf2,f,c
 22320  0134C8                     l8374:
 22321                           
 22322                           ;stkvar	_bexp @ sp[(-4)+1]
 22323  0134C8  0EFD               	movlw	-3
 22324  0134CA  50E3               	movf	plusw1,w,c
 22325  0134CC  B4D8               	btfsc	status,2,c
 22326  0134CE  D002               	goto	l8378
 22327                           
 22328                           ;stkvar	_bexp @ sp[(-4)+1]
 22329  0134D0  0EFD               	movlw	-3
 22330  0134D2  06E3               	decf	plusw1,f,c
 22331  0134D4                     l8378:
 22332                           
 22333                           ;stkvar	_b @ sp[(-4)+-4]
 22334  0134D4  0EFA               	movlw	-6
 22335  0134D6  AEE3               	btfss	plusw1,7,c
 22336  0134D8  D7CF               	goto	l8364
 22337  0134DA                     u7380:
 22338                           
 22339                           ;stkvar	_aexp @ sp[(-4)+2]
 22340  0134DA  0EFE               	movlw	-2
 22341  0134DC  6AE3               	clrf	plusw1,c
 22342                           
 22343                           ;stkvar	_grs @ sp[(-4)+0]
 22344  0134DE  0EFC               	movlw	-4
 22345  0134E0  AEE3               	btfss	plusw1,7,c
 22346  0134E2  D00F               	goto	l8392
 22347                           
 22348                           ;stkvar	_grs @ sp[(-4)+0]
 22349  0134E4  0EFC               	movlw	-4
 22350  0134E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 22351  0134EC  0E7F               	movlw	127
 22352  0134EE  160C               	andwf	(btemp+11)^0,f,c
 22353  0134F0  B4D8               	btfsc	status,2,c
 22354  0134F2  D004               	goto	l8388
 22355  0134F4                     u7400:
 22356                           
 22357                           ;stkvar	_aexp @ sp[(-4)+2]
 22358  0134F4  0EFE               	movlw	-2
 22359  0134F6  6AE3               	clrf	plusw1,c
 22360  0134F8  2AE3               	incf	plusw1,f,c
 22361  0134FA  D003               	goto	l8392
 22362  0134FC                     l8388:
 22363                           
 22364                           ;stkvar	_b @ sp[(-4)+-4]
 22365  0134FC  0EF8               	movlw	-8
 22366  0134FE  B0E3               	btfsc	plusw1,0,c
 22367  013500  D7F9               	goto	u7400
 22368  013502                     l8392:
 22369                           
 22370                           ;stkvar	_aexp @ sp[(-4)+2]
 22371  013502  0EFE               	movlw	-2
 22372  013504  50E3               	movf	plusw1,w,c
 22373  013506  B4D8               	btfsc	status,2,c
 22374  013508  D02B               	goto	l8404
 22375                           
 22376                           ;stkvar	_b @ sp[(-4)+-4]
 22377  01350A  50E1               	movf	fsr1l,w,c
 22378  01350C  0FF8               	addlw	-8
 22379  01350E  6ED9               	movwf	fsr2l,c
 22380  013510  50E2               	movf	fsr1h,w,c
 22381  013512  6EDA               	movwf	fsr2h,c
 22382  013514  0EFF               	movlw	255
 22383  013516  22DA               	addwfc	fsr2h,f,c
 22384  013518  2ADE               	incf	postinc2,f,c
 22385  01351A  0E00               	movlw	0
 22386  01351C  22DE               	addwfc	postinc2,f,c
 22387  01351E  22DE               	addwfc	postinc2,f,c
 22388  013520  22DE               	addwfc	postinc2,f,c
 22389                           
 22390                           ;stkvar	_b @ sp[(-4)+-4]
 22391  013522  0EFB               	movlw	-5
 22392  013524  A0E3               	btfss	plusw1,0,c
 22393  013526  D01C               	goto	l8404
 22394  013528  0E01               	movlw	1
 22395  01352A  6E0C               	movwf	(btemp+11)^0,c
 22396                           
 22397                           ;stkvar	_b @ sp[(-4)+-4]
 22398  01352C  50E1               	movf	fsr1l,w,c
 22399  01352E  0FF8               	addlw	-8
 22400  013530  6ED9               	movwf	fsr2l,c
 22401  013532  50E2               	movf	fsr1h,w,c
 22402  013534  6EDA               	movwf	fsr2h,c
 22403  013536  0EFF               	movlw	255
 22404  013538  22DA               	addwfc	fsr2h,f,c
 22405  01353A  280C               	incf	(btemp+11)^0,w,c
 22406  01353C  52DE               	movf	postinc2,f,c
 22407  01353E  D008               	goto	u7440
 22408  013540                     u7445:
 22409  013540  52DE               	movf	postinc2,f,c
 22410  013542  90D8               	bcf	status,0,c
 22411  013544  BEDC               	btfsc	preinc2,7,c
 22412  013546  80D8               	bsf	status,0,c
 22413  013548  32DD               	rrcf	postdec2,f,c
 22414  01354A  32DD               	rrcf	postdec2,f,c
 22415  01354C  32DD               	rrcf	postdec2,f,c
 22416  01354E  32DE               	rrcf	postinc2,f,c
 22417  013550                     u7440:
 22418  013550  2EE8               	decfsz	wreg,f,c
 22419  013552  D7F6               	goto	u7445
 22420                           
 22421                           ;stkvar	_bexp @ sp[(-4)+1]
 22422  013554  0EFD               	movlw	-3
 22423  013556  28E3               	incf	plusw1,w,c
 22424  013558  B4D8               	btfsc	status,2,c
 22425  01355A  D002               	goto	l8404
 22426                           
 22427                           ;stkvar	_bexp @ sp[(-4)+1]
 22428  01355C  0EFD               	movlw	-3
 22429  01355E  2AE3               	incf	plusw1,f,c
 22430  013560                     l8404:
 22431                           
 22432                           ;stkvar	_bexp @ sp[(-4)+1]
 22433  013560  0EFD               	movlw	-3
 22434  013562  28E3               	incf	plusw1,w,c
 22435  013564  B4D8               	btfsc	status,2,c
 22436  013566  D004               	goto	u7470
 22437                           
 22438                           ;stkvar	_bexp @ sp[(-4)+1]
 22439  013568  0EFD               	movlw	-3
 22440  01356A  50E3               	movf	plusw1,w,c
 22441  01356C  A4D8               	btfss	status,2,c
 22442  01356E  D00E               	goto	l8414
 22443  013570                     u7470:
 22444                           
 22445                           ;stkvar	_b @ sp[(-4)+-4]
 22446  013570  0EF8               	movlw	-8
 22447  013572  6AE3               	clrf	plusw1,c
 22448  013574  0EF9               	movlw	-7
 22449  013576  6AE3               	clrf	plusw1,c
 22450  013578  0EFA               	movlw	-6
 22451  01357A  6AE3               	clrf	plusw1,c
 22452  01357C  0EFB               	movlw	-5
 22453  01357E  6AE3               	clrf	plusw1,c
 22454                           
 22455                           ;stkvar	_bexp @ sp[(-4)+1]
 22456  013580  0EFD               	movlw	-3
 22457  013582  50E3               	movf	plusw1,w,c
 22458  013584  A4D8               	btfss	status,2,c
 22459  013586  D002               	goto	l8414
 22460                           
 22461                           ;stkvar	_signs @ sp[(-4)+3]
 22462  013588  0EFF               	movlw	-1
 22463  01358A  6AE3               	clrf	plusw1,c
 22464  01358C                     l8414:
 22465                           
 22466                           ;stkvar	_bexp @ sp[(-4)+1]
 22467  01358C  0EFD               	movlw	-3
 22468  01358E  A0E3               	btfss	plusw1,0,c
 22469  013590  D009               	goto	l8418
 22470                           
 22471                           ;stkvar	_b @ sp[(-4)+-4]
 22472  013592  0EFA               	movlw	250
 22473  013594  24E1               	addwf	fsr1l,w,c
 22474  013596  6ED9               	movwf	fsr2l,c
 22475  013598  0EFF               	movlw	255
 22476  01359A  20E2               	addwfc	fsr1h,w,c
 22477  01359C  6EDA               	movwf	fsr2h,c
 22478  01359E  0E00               	movlw	0
 22479  0135A0  8EDB               	bsf	plusw2,7,c
 22480  0135A2  D008               	goto	l8420
 22481  0135A4                     l8418:
 22482                           
 22483                           ;stkvar	_b @ sp[(-4)+-4]
 22484  0135A4  0EFA               	movlw	250
 22485  0135A6  24E1               	addwf	fsr1l,w,c
 22486  0135A8  6ED9               	movwf	fsr2l,c
 22487  0135AA  0EFF               	movlw	255
 22488  0135AC  20E2               	addwfc	fsr1h,w,c
 22489  0135AE  6EDA               	movwf	fsr2h,c
 22490  0135B0  0E7F               	movlw	127
 22491  0135B2  16DF               	andwf	indf2,f,c
 22492  0135B4                     l8420:
 22493                           
 22494                           ;stkvar	_b @ sp[(-4)+-4]
 22495  0135B4  0EFB               	movlw	251
 22496  0135B6  24E1               	addwf	fsr1l,w,c
 22497  0135B8  6ED9               	movwf	fsr2l,c
 22498  0135BA  0EFF               	movlw	255
 22499  0135BC  20E2               	addwfc	fsr1h,w,c
 22500  0135BE  6EDA               	movwf	fsr2h,c
 22501                           
 22502                           ;stkvar	_bexp @ sp[(-4)+1]
 22503  0135C0  0EFD               	movlw	-3
 22504  0135C2  006F FF8C  F00C    	movff	plusw1,btemp+11
 22505  0135C8  90D8               	bcf	status,0,c
 22506  0135CA  300C               	rrcf	(btemp+11)^0,w,c
 22507  0135CC  6EDF               	movwf	indf2,c
 22508                           
 22509                           ;stkvar	_signs @ sp[(-4)+3]
 22510  0135CE  0EFF               	movlw	-1
 22511  0135D0  AEE3               	btfss	plusw1,7,c
 22512  0135D2  D008               	goto	l8426
 22513                           
 22514                           ;stkvar	_b @ sp[(-4)+-4]
 22515  0135D4  0EFB               	movlw	251
 22516  0135D6  24E1               	addwf	fsr1l,w,c
 22517  0135D8  6ED9               	movwf	fsr2l,c
 22518  0135DA  0EFF               	movlw	255
 22519  0135DC  20E2               	addwfc	fsr1h,w,c
 22520  0135DE  6EDA               	movwf	fsr2h,c
 22521  0135E0  0E00               	movlw	0
 22522  0135E2  8EDB               	bsf	plusw2,7,c
 22523  0135E4                     l8426:
 22524                           
 22525                           ;stkvar	_b @ sp[(-4)+-4]
 22526  0135E4  0EF8               	movlw	-8
 22527  0135E6  006F FF8C  F001    	movff	plusw1,btemp
 22528  0135EC  0EF9               	movlw	-7
 22529  0135EE  006F FF8C  F002    	movff	plusw1,btemp+1
 22530  0135F4  0EFA               	movlw	-6
 22531  0135F6  006F FF8C  F003    	movff	plusw1,btemp+2
 22532  0135FC  0EFB               	movlw	-5
 22533  0135FE  006F FF8C  F004    	movff	plusw1,btemp+3
 22534  013604                     l2788:
 22535                           
 22536                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 22537  013604  0EF4               	movlw	244
 22538  013606  26E1               	addwf	fsr1l,f,c
 22539  013608  0EFF               	movlw	255
 22540  01360A  22E2               	addwfc	fsr1h,f,c
 22541  01360C  0012               	return		;funcret
 22542  01360E                     __end_of___fladd:
 22543                           	opt callstack 0
 22544                           
 22545 ;; *************** function ___flmul *****************
 22546 ;; Defined at:
 22547 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 22548 ;; Parameters:    Size  Location     Type
 22549 ;;  b               4  [STACK] unsigned char 
 22550 ;;  a               4  [STACK] unsigned char 
 22551 ;; Auto vars:     Size  Location     Type
 22552 ;;  prod            4  [STACK] struct .
 22553 ;;  grs             4  [STACK] unsigned long 
 22554 ;;  temp            2  [STACK] struct .
 22555 ;;  bexp            1  [STACK] unsigned char 
 22556 ;;  aexp            1  [STACK] unsigned char 
 22557 ;;  sign            1  [STACK] unsigned char 
 22558 ;; Return value:  Size  Location     Type
 22559 ;;                  4  [STACK] unsigned char 
 22560 ;; Registers used:
 22561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22562 ;; Tracked objects:
 22563 ;;		On entry : 0/1
 22564 ;;		On exit  : 0/0
 22565 ;;		Unchanged: 0/0
 22566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22571 ;;Total ram usage:        0 bytes
 22572 ;; Hardware stack levels used:    1
 22573 ;; Hardware stack levels required when called:    7
 22574 ;; This function calls:
 22575 ;;		Nothing
 22576 ;; This function is called by:
 22577 ;;		_conv_raw_result
 22578 ;;		_lp_filter
 22579 ;;		_calc_model_data
 22580 ;;		_calc_bsoc
 22581 ;;		_init_bsoc
 22582 ;;		_efgtoa
 22583 ;; This function uses a reentrant model
 22584 ;;
 22585                           
 22586                           	psect	text95
 22587  012628                     __ptext95:
 22588                           	opt callstack 0
 22589  012628                     ___flmul:
 22590                           	opt callstack 0
 22591                           
 22592                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 22593  012628  0E0D               	movlw	13
 22594  01262A  26E1               	addwf	fsr1l,f,c
 22595  01262C  0E00               	movlw	0
 22596  01262E  22E2               	addwfc	fsr1h,f,c
 22597                           
 22598                           ;stkvar	_b @ sp[(-13)+-4]
 22599                           
 22600                           ;incstack = 0
 22601  012630  0EF2               	movlw	242
 22602  012632  24E1               	addwf	fsr1l,w,c
 22603  012634  6ED9               	movwf	fsr2l,c
 22604  012636  0EFF               	movlw	255
 22605  012638  20E2               	addwfc	fsr1h,w,c
 22606  01263A  6EDA               	movwf	fsr2h,c
 22607  01263C  50DF               	movf	indf2,w,c
 22608  01263E  6E0C               	movwf	(btemp+11)^0,c
 22609  012640  0E80               	movlw	128
 22610  012642  160C               	andwf	(btemp+11)^0,f,c
 22611                           
 22612                           ;stkvar	_sign @ sp[(-13)+12]
 22613  012644  0EFF               	movlw	-1
 22614  012646  0060  F033  FFE3   	movff	btemp+11,plusw1
 22615                           
 22616                           ;stkvar	_b @ sp[(-13)+-4]
 22617  01264C  0EF2               	movlw	242
 22618  01264E  24E1               	addwf	fsr1l,w,c
 22619  012650  6ED9               	movwf	fsr2l,c
 22620  012652  0EFF               	movlw	255
 22621  012654  20E2               	addwfc	fsr1h,w,c
 22622  012656  6EDA               	movwf	fsr2h,c
 22623  012658  50DF               	movf	indf2,w,c
 22624  01265A  6E0C               	movwf	(btemp+11)^0,c
 22625  01265C  90D8               	bcf	status,0,c
 22626  01265E  340C               	rlcf	(btemp+11)^0,w,c
 22627  012660  6E0B               	movwf	(btemp+10)^0,c
 22628                           
 22629                           ;stkvar	_bexp @ sp[(-13)+10]
 22630  012662  0EFD               	movlw	-3
 22631  012664  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22632                           
 22633                           ;stkvar	_b @ sp[(-13)+-4]
 22634  01266A  0EF1               	movlw	241
 22635  01266C  24E1               	addwf	fsr1l,w,c
 22636  01266E  6ED9               	movwf	fsr2l,c
 22637  012670  0EFF               	movlw	255
 22638  012672  20E2               	addwfc	fsr1h,w,c
 22639  012674  6EDA               	movwf	fsr2h,c
 22640  012676  AEDF               	btfss	indf2,7,c
 22641  012678  D002               	goto	l8594
 22642                           
 22643                           ;stkvar	_bexp @ sp[(-13)+10]
 22644  01267A  0EFD               	movlw	-3
 22645  01267C  80E3               	bsf	plusw1,0,c
 22646  01267E                     l8594:
 22647                           
 22648                           ;stkvar	_bexp @ sp[(-13)+10]
 22649  01267E  0EFD               	movlw	-3
 22650  012680  50E3               	movf	plusw1,w,c
 22651  012682  B4D8               	btfsc	status,2,c
 22652  012684  D01F               	goto	l8602
 22653                           
 22654                           ;stkvar	_bexp @ sp[(-13)+10]
 22655  012686  0EFD               	movlw	-3
 22656  012688  28E3               	incf	plusw1,w,c
 22657  01268A  A4D8               	btfss	status,2,c
 22658  01268C  D018               	goto	l8600
 22659  01268E  0E00               	movlw	0
 22660  012690  6E09               	movwf	(btemp+8)^0,c
 22661  012692  0E00               	movlw	0
 22662  012694  6E0A               	movwf	(btemp+9)^0,c
 22663  012696  0E00               	movlw	0
 22664  012698  6E0B               	movwf	(btemp+10)^0,c
 22665  01269A  0E00               	movlw	0
 22666  01269C  6E0C               	movwf	(btemp+11)^0,c
 22667                           
 22668                           ;stkvar	_b @ sp[(-13)+-4]
 22669  01269E  0EEF               	movlw	-17
 22670  0126A0  0060  F027  FFE3   	movff	btemp+8,plusw1
 22671  0126A6  0EF0               	movlw	-16
 22672  0126A8  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22673  0126AE  0EF1               	movlw	-15
 22674  0126B0  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22675  0126B6  0EF2               	movlw	-14
 22676  0126B8  0060  F033  FFE3   	movff	btemp+11,plusw1
 22677  0126BE                     l8600:
 22678                           
 22679                           ;stkvar	_b @ sp[(-13)+-4]
 22680  0126BE  0EF1               	movlw	-15
 22681  0126C0  8EE3               	bsf	plusw1,7,c
 22682  0126C2  D018               	goto	l8604
 22683  0126C4                     l8602:
 22684  0126C4  0E00               	movlw	0
 22685  0126C6  6E09               	movwf	(btemp+8)^0,c
 22686  0126C8  0E00               	movlw	0
 22687  0126CA  6E0A               	movwf	(btemp+9)^0,c
 22688  0126CC  0E00               	movlw	0
 22689  0126CE  6E0B               	movwf	(btemp+10)^0,c
 22690  0126D0  0E00               	movlw	0
 22691  0126D2  6E0C               	movwf	(btemp+11)^0,c
 22692                           
 22693                           ;stkvar	_b @ sp[(-13)+-4]
 22694  0126D4  0EEF               	movlw	-17
 22695  0126D6  0060  F027  FFE3   	movff	btemp+8,plusw1
 22696  0126DC  0EF0               	movlw	-16
 22697  0126DE  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22698  0126E4  0EF1               	movlw	-15
 22699  0126E6  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22700  0126EC  0EF2               	movlw	-14
 22701  0126EE  0060  F033  FFE3   	movff	btemp+11,plusw1
 22702  0126F4                     l8604:
 22703                           
 22704                           ;stkvar	_a @ sp[(-13)+-8]
 22705  0126F4  0EEE               	movlw	238
 22706  0126F6  24E1               	addwf	fsr1l,w,c
 22707  0126F8  6ED9               	movwf	fsr2l,c
 22708  0126FA  0EFF               	movlw	255
 22709  0126FC  20E2               	addwfc	fsr1h,w,c
 22710  0126FE  6EDA               	movwf	fsr2h,c
 22711  012700  50DF               	movf	indf2,w,c
 22712  012702  6E0C               	movwf	(btemp+11)^0,c
 22713  012704  0E80               	movlw	128
 22714  012706  160C               	andwf	(btemp+11)^0,f,c
 22715                           
 22716                           ;stkvar	_sign @ sp[(-13)+12]
 22717  012708  50E1               	movf	fsr1l,w,c
 22718  01270A  0FFF               	addlw	-1
 22719  01270C  6ED9               	movwf	fsr2l,c
 22720  01270E  50E2               	movf	fsr1h,w,c
 22721  012710  6EDA               	movwf	fsr2h,c
 22722  012712  0EFF               	movlw	255
 22723  012714  22DA               	addwfc	fsr2h,f,c
 22724  012716  500C               	movf	(btemp+11)^0,w,c
 22725  012718  1ADF               	xorwf	indf2,f,c
 22726                           
 22727                           ;stkvar	_a @ sp[(-13)+-8]
 22728  01271A  0EEE               	movlw	238
 22729  01271C  24E1               	addwf	fsr1l,w,c
 22730  01271E  6ED9               	movwf	fsr2l,c
 22731  012720  0EFF               	movlw	255
 22732  012722  20E2               	addwfc	fsr1h,w,c
 22733  012724  6EDA               	movwf	fsr2h,c
 22734  012726  50DF               	movf	indf2,w,c
 22735  012728  6E0C               	movwf	(btemp+11)^0,c
 22736  01272A  90D8               	bcf	status,0,c
 22737  01272C  340C               	rlcf	(btemp+11)^0,w,c
 22738  01272E  6E0B               	movwf	(btemp+10)^0,c
 22739                           
 22740                           ;stkvar	_aexp @ sp[(-13)+11]
 22741  012730  0EFE               	movlw	-2
 22742  012732  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22743                           
 22744                           ;stkvar	_a @ sp[(-13)+-8]
 22745  012738  0EED               	movlw	237
 22746  01273A  24E1               	addwf	fsr1l,w,c
 22747  01273C  6ED9               	movwf	fsr2l,c
 22748  01273E  0EFF               	movlw	255
 22749  012740  20E2               	addwfc	fsr1h,w,c
 22750  012742  6EDA               	movwf	fsr2h,c
 22751  012744  AEDF               	btfss	indf2,7,c
 22752  012746  D002               	goto	l8612
 22753                           
 22754                           ;stkvar	_aexp @ sp[(-13)+11]
 22755  012748  0EFE               	movlw	-2
 22756  01274A  80E3               	bsf	plusw1,0,c
 22757  01274C                     l8612:
 22758                           
 22759                           ;stkvar	_aexp @ sp[(-13)+11]
 22760  01274C  0EFE               	movlw	-2
 22761  01274E  50E3               	movf	plusw1,w,c
 22762  012750  B4D8               	btfsc	status,2,c
 22763  012752  D01F               	goto	l8620
 22764                           
 22765                           ;stkvar	_aexp @ sp[(-13)+11]
 22766  012754  0EFE               	movlw	-2
 22767  012756  28E3               	incf	plusw1,w,c
 22768  012758  A4D8               	btfss	status,2,c
 22769  01275A  D018               	goto	l8618
 22770  01275C  0E00               	movlw	0
 22771  01275E  6E09               	movwf	(btemp+8)^0,c
 22772  012760  0E00               	movlw	0
 22773  012762  6E0A               	movwf	(btemp+9)^0,c
 22774  012764  0E00               	movlw	0
 22775  012766  6E0B               	movwf	(btemp+10)^0,c
 22776  012768  0E00               	movlw	0
 22777  01276A  6E0C               	movwf	(btemp+11)^0,c
 22778                           
 22779                           ;stkvar	_a @ sp[(-13)+-8]
 22780  01276C  0EEB               	movlw	-21
 22781  01276E  0060  F027  FFE3   	movff	btemp+8,plusw1
 22782  012774  0EEC               	movlw	-20
 22783  012776  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22784  01277C  0EED               	movlw	-19
 22785  01277E  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22786  012784  0EEE               	movlw	-18
 22787  012786  0060  F033  FFE3   	movff	btemp+11,plusw1
 22788  01278C                     l8618:
 22789                           
 22790                           ;stkvar	_a @ sp[(-13)+-8]
 22791  01278C  0EED               	movlw	-19
 22792  01278E  8EE3               	bsf	plusw1,7,c
 22793  012790  D018               	goto	l8622
 22794  012792                     l8620:
 22795  012792  0E00               	movlw	0
 22796  012794  6E09               	movwf	(btemp+8)^0,c
 22797  012796  0E00               	movlw	0
 22798  012798  6E0A               	movwf	(btemp+9)^0,c
 22799  01279A  0E00               	movlw	0
 22800  01279C  6E0B               	movwf	(btemp+10)^0,c
 22801  01279E  0E00               	movlw	0
 22802  0127A0  6E0C               	movwf	(btemp+11)^0,c
 22803                           
 22804                           ;stkvar	_a @ sp[(-13)+-8]
 22805  0127A2  0EEB               	movlw	-21
 22806  0127A4  0060  F027  FFE3   	movff	btemp+8,plusw1
 22807  0127AA  0EEC               	movlw	-20
 22808  0127AC  0060  F02B  FFE3   	movff	btemp+9,plusw1
 22809  0127B2  0EED               	movlw	-19
 22810  0127B4  0060  F02F  FFE3   	movff	btemp+10,plusw1
 22811  0127BA  0EEE               	movlw	-18
 22812  0127BC  0060  F033  FFE3   	movff	btemp+11,plusw1
 22813  0127C2                     l8622:
 22814                           
 22815                           ;stkvar	_aexp @ sp[(-13)+11]
 22816  0127C2  0EFE               	movlw	-2
 22817  0127C4  50E3               	movf	plusw1,w,c
 22818  0127C6  B4D8               	btfsc	status,2,c
 22819  0127C8  D004               	goto	u7820
 22820                           
 22821                           ;stkvar	_bexp @ sp[(-13)+10]
 22822  0127CA  0EFD               	movlw	-3
 22823  0127CC  50E3               	movf	plusw1,w,c
 22824  0127CE  A4D8               	btfss	status,2,c
 22825  0127D0  D009               	goto	l8630
 22826  0127D2                     u7820:
 22827  0127D2  0E00               	movlw	0
 22828  0127D4  6E01               	movwf	btemp^0,c
 22829  0127D6  0E00               	movlw	0
 22830  0127D8  6E02               	movwf	(btemp+1)^0,c
 22831  0127DA  0E00               	movlw	0
 22832  0127DC  6E03               	movwf	(btemp+2)^0,c
 22833  0127DE  0E00               	movlw	0
 22834  0127E0  6E04               	movwf	(btemp+3)^0,c
 22835  0127E2  D332               	goto	l2869
 22836  0127E4                     l8630:
 22837                           
 22838                           ;stkvar	_b @ sp[(-13)+-4]
 22839  0127E4  0EEF               	movlw	-17
 22840  0127E6  006F FF8C  F00C    	movff	plusw1,btemp+11
 22841                           
 22842                           ;stkvar	_a @ sp[(-13)+-8]
 22843  0127EC  0EED               	movlw	237
 22844  0127EE  24E1               	addwf	fsr1l,w,c
 22845  0127F0  6ED9               	movwf	fsr2l,c
 22846  0127F2  0EFF               	movlw	255
 22847  0127F4  20E2               	addwfc	fsr1h,w,c
 22848  0127F6  6EDA               	movwf	fsr2h,c
 22849  0127F8  50DF               	movf	indf2,w,c
 22850  0127FA  020C               	mulwf	(btemp+11)^0,c
 22851                           
 22852                           ;stkvar	_temp @ sp[(-13)+8]
 22853  0127FC  0EFB               	movlw	-5
 22854  0127FE  006F FFCF FFE3     	movff	prodl,plusw1
 22855  012804  0EFC               	movlw	-4
 22856  012806  006F FFD3 FFE3     	movff	prodh,plusw1
 22857                           
 22858                           ;stkvar	_temp @ sp[(-13)+8]
 22859  01280C  0EFB               	movlw	-5
 22860  01280E  006F FF8C  F00C    	movff	plusw1,btemp+11
 22861  012814  0060  F030  F005   	movff	btemp+11,btemp+4
 22862  01281A  6A06               	clrf	(btemp+5)^0,c
 22863  01281C  6A07               	clrf	(btemp+6)^0,c
 22864  01281E  6A08               	clrf	(btemp+7)^0,c
 22865                           
 22866                           ;stkvar	_grs @ sp[(-13)+4]
 22867  012820  0EF7               	movlw	-9
 22868  012822  0060  F017  FFE3   	movff	btemp+4,plusw1
 22869  012828  0EF8               	movlw	-8
 22870  01282A  0060  F01B  FFE3   	movff	btemp+5,plusw1
 22871  012830  0EF9               	movlw	-7
 22872  012832  0060  F01F  FFE3   	movff	btemp+6,plusw1
 22873  012838  0EFA               	movlw	-6
 22874  01283A  0060  F023  FFE3   	movff	btemp+7,plusw1
 22875                           
 22876                           ;stkvar	_temp @ sp[(-13)+8]
 22877  012840  0EFC               	movlw	252
 22878  012842  24E1               	addwf	fsr1l,w,c
 22879  012844  6ED9               	movwf	fsr2l,c
 22880  012846  0EFF               	movlw	255
 22881  012848  20E2               	addwfc	fsr1h,w,c
 22882  01284A  6EDA               	movwf	fsr2h,c
 22883  01284C  50DF               	movf	indf2,w,c
 22884  01284E  6E0C               	movwf	(btemp+11)^0,c
 22885  012850  0060  F030  F005   	movff	btemp+11,btemp+4
 22886  012856  6A06               	clrf	(btemp+5)^0,c
 22887  012858  6A07               	clrf	(btemp+6)^0,c
 22888  01285A  6A08               	clrf	(btemp+7)^0,c
 22889                           
 22890                           ;stkvar	_prod @ sp[(-13)+0]
 22891  01285C  0EF3               	movlw	-13
 22892  01285E  0060  F017  FFE3   	movff	btemp+4,plusw1
 22893  012864  0EF4               	movlw	-12
 22894  012866  0060  F01B  FFE3   	movff	btemp+5,plusw1
 22895  01286C  0EF5               	movlw	-11
 22896  01286E  0060  F01F  FFE3   	movff	btemp+6,plusw1
 22897  012874  0EF6               	movlw	-10
 22898  012876  0060  F023  FFE3   	movff	btemp+7,plusw1
 22899                           
 22900                           ;stkvar	_b @ sp[(-13)+-4]
 22901  01287C  0EF0               	movlw	240
 22902  01287E  24E1               	addwf	fsr1l,w,c
 22903  012880  6ED9               	movwf	fsr2l,c
 22904  012882  0EFF               	movlw	255
 22905  012884  20E2               	addwfc	fsr1h,w,c
 22906  012886  6EDA               	movwf	fsr2h,c
 22907  012888  50DF               	movf	indf2,w,c
 22908  01288A  6E0C               	movwf	(btemp+11)^0,c
 22909                           
 22910                           ;stkvar	_a @ sp[(-13)+-8]
 22911  01288C  0EEC               	movlw	236
 22912  01288E  24E1               	addwf	fsr1l,w,c
 22913  012890  6ED9               	movwf	fsr2l,c
 22914  012892  0EFF               	movlw	255
 22915  012894  20E2               	addwfc	fsr1h,w,c
 22916  012896  6EDA               	movwf	fsr2h,c
 22917  012898  50DF               	movf	indf2,w,c
 22918  01289A  020C               	mulwf	(btemp+11)^0,c
 22919                           
 22920                           ;stkvar	_temp @ sp[(-13)+8]
 22921  01289C  0EFB               	movlw	-5
 22922  01289E  006F FFCF FFE3     	movff	prodl,plusw1
 22923  0128A4  0EFC               	movlw	-4
 22924  0128A6  006F FFD3 FFE3     	movff	prodh,plusw1
 22925                           
 22926                           ;stkvar	_grs @ sp[(-13)+4]
 22927  0128AC  50E1               	movf	fsr1l,w,c
 22928  0128AE  0FF7               	addlw	-9
 22929  0128B0  6ED9               	movwf	fsr2l,c
 22930  0128B2  50E2               	movf	fsr1h,w,c
 22931  0128B4  6EDA               	movwf	fsr2h,c
 22932  0128B6  0EFF               	movlw	255
 22933  0128B8  22DA               	addwfc	fsr2h,f,c
 22934                           
 22935                           ;stkvar	_temp @ sp[(-13)+8]
 22936  0128BA  0EFB               	movlw	-5
 22937  0128BC  50E3               	movf	plusw1,w,c
 22938  0128BE  26DE               	addwf	postinc2,f,c
 22939  0128C0  0E00               	movlw	0
 22940  0128C2  22DE               	addwfc	postinc2,f,c
 22941  0128C4  22DE               	addwfc	postinc2,f,c
 22942  0128C6  22DE               	addwfc	postinc2,f,c
 22943                           
 22944                           ;stkvar	_prod @ sp[(-13)+0]
 22945  0128C8  50E1               	movf	fsr1l,w,c
 22946  0128CA  0FF3               	addlw	-13
 22947  0128CC  6ED9               	movwf	fsr2l,c
 22948  0128CE  50E2               	movf	fsr1h,w,c
 22949  0128D0  6EDA               	movwf	fsr2h,c
 22950  0128D2  0EFF               	movlw	255
 22951  0128D4  22DA               	addwfc	fsr2h,f,c
 22952                           
 22953                           ;stkvar	_temp @ sp[(-13)+8]
 22954  0128D6  0EFC               	movlw	252
 22955  0128D8  24E1               	addwf	fsr1l,w,c
 22956  0128DA  6EE9               	movwf	fsr0l,c
 22957  0128DC  0EFF               	movlw	255
 22958  0128DE  20E2               	addwfc	fsr1h,w,c
 22959  0128E0  6EEA               	movwf	fsr0h,c
 22960  0128E2  50EF               	movf	indf0,w,c
 22961  0128E4  26DE               	addwf	postinc2,f,c
 22962  0128E6  0E00               	movlw	0
 22963  0128E8  22DE               	addwfc	postinc2,f,c
 22964  0128EA  22DE               	addwfc	postinc2,f,c
 22965  0128EC  22DE               	addwfc	postinc2,f,c
 22966                           
 22967                           ;stkvar	_b @ sp[(-13)+-4]
 22968  0128EE  0EF1               	movlw	241
 22969  0128F0  24E1               	addwf	fsr1l,w,c
 22970  0128F2  6ED9               	movwf	fsr2l,c
 22971  0128F4  0EFF               	movlw	255
 22972  0128F6  20E2               	addwfc	fsr1h,w,c
 22973  0128F8  6EDA               	movwf	fsr2h,c
 22974  0128FA  50DF               	movf	indf2,w,c
 22975  0128FC  6E0C               	movwf	(btemp+11)^0,c
 22976                           
 22977                           ;stkvar	_a @ sp[(-13)+-8]
 22978  0128FE  0EEB               	movlw	-21
 22979  012900  50E3               	movf	plusw1,w,c
 22980  012902  020C               	mulwf	(btemp+11)^0,c
 22981                           
 22982                           ;stkvar	_temp @ sp[(-13)+8]
 22983  012904  0EFB               	movlw	-5
 22984  012906  006F FFCF FFE3     	movff	prodl,plusw1
 22985  01290C  0EFC               	movlw	-4
 22986  01290E  006F FFD3 FFE3     	movff	prodh,plusw1
 22987                           
 22988                           ;stkvar	_grs @ sp[(-13)+4]
 22989  012914  50E1               	movf	fsr1l,w,c
 22990  012916  0FF7               	addlw	-9
 22991  012918  6ED9               	movwf	fsr2l,c
 22992  01291A  50E2               	movf	fsr1h,w,c
 22993  01291C  6EDA               	movwf	fsr2h,c
 22994  01291E  0EFF               	movlw	255
 22995  012920  22DA               	addwfc	fsr2h,f,c
 22996                           
 22997                           ;stkvar	_temp @ sp[(-13)+8]
 22998  012922  0EFB               	movlw	-5
 22999  012924  50E3               	movf	plusw1,w,c
 23000  012926  26DE               	addwf	postinc2,f,c
 23001  012928  0E00               	movlw	0
 23002  01292A  22DE               	addwfc	postinc2,f,c
 23003  01292C  22DE               	addwfc	postinc2,f,c
 23004  01292E  22DE               	addwfc	postinc2,f,c
 23005                           
 23006                           ;stkvar	_prod @ sp[(-13)+0]
 23007  012930  50E1               	movf	fsr1l,w,c
 23008  012932  0FF3               	addlw	-13
 23009  012934  6ED9               	movwf	fsr2l,c
 23010  012936  50E2               	movf	fsr1h,w,c
 23011  012938  6EDA               	movwf	fsr2h,c
 23012  01293A  0EFF               	movlw	255
 23013  01293C  22DA               	addwfc	fsr2h,f,c
 23014                           
 23015                           ;stkvar	_temp @ sp[(-13)+8]
 23016  01293E  0EFC               	movlw	252
 23017  012940  24E1               	addwf	fsr1l,w,c
 23018  012942  6EE9               	movwf	fsr0l,c
 23019  012944  0EFF               	movlw	255
 23020  012946  20E2               	addwfc	fsr1h,w,c
 23021  012948  6EEA               	movwf	fsr0h,c
 23022  01294A  50EF               	movf	indf0,w,c
 23023  01294C  26DE               	addwf	postinc2,f,c
 23024  01294E  0E00               	movlw	0
 23025  012950  22DE               	addwfc	postinc2,f,c
 23026  012952  22DE               	addwfc	postinc2,f,c
 23027  012954  22DE               	addwfc	postinc2,f,c
 23028                           
 23029                           ;stkvar	_grs @ sp[(-13)+4]
 23030  012956  50E1               	movf	fsr1l,w,c
 23031  012958  0FF7               	addlw	-9
 23032  01295A  6ED9               	movwf	fsr2l,c
 23033  01295C  50E2               	movf	fsr1h,w,c
 23034  01295E  6EDA               	movwf	fsr2h,c
 23035  012960  0EFF               	movlw	255
 23036  012962  22DA               	addwfc	fsr2h,f,c
 23037  012964  0E08               	movlw	8
 23038  012966                     u7835:
 23039  012966  90D8               	bcf	status,0,c
 23040  012968  36DE               	rlcf	postinc2,f,c
 23041  01296A  36DE               	rlcf	postinc2,f,c
 23042  01296C  36DE               	rlcf	postinc2,f,c
 23043  01296E  36DD               	rlcf	postdec2,f,c
 23044  012970  52DD               	movf	postdec2,f,c
 23045  012972  52DD               	movf	postdec2,f,c
 23046  012974  2EE8               	decfsz	wreg,f,c
 23047  012976  D7F7               	goto	u7835
 23048                           
 23049                           ;stkvar	_b @ sp[(-13)+-4]
 23050  012978  0EF0               	movlw	240
 23051  01297A  24E1               	addwf	fsr1l,w,c
 23052  01297C  6ED9               	movwf	fsr2l,c
 23053  01297E  0EFF               	movlw	255
 23054  012980  20E2               	addwfc	fsr1h,w,c
 23055  012982  6EDA               	movwf	fsr2h,c
 23056  012984  50DF               	movf	indf2,w,c
 23057  012986  6E0C               	movwf	(btemp+11)^0,c
 23058                           
 23059                           ;stkvar	_a @ sp[(-13)+-8]
 23060  012988  0EEB               	movlw	-21
 23061  01298A  50E3               	movf	plusw1,w,c
 23062  01298C  020C               	mulwf	(btemp+11)^0,c
 23063                           
 23064                           ;stkvar	_temp @ sp[(-13)+8]
 23065  01298E  0EFB               	movlw	-5
 23066  012990  006F FFCF FFE3     	movff	prodl,plusw1
 23067  012996  0EFC               	movlw	-4
 23068  012998  006F FFD3 FFE3     	movff	prodh,plusw1
 23069                           
 23070                           ;stkvar	_temp @ sp[(-13)+8]
 23071  01299E  0EFB               	movlw	-5
 23072  0129A0  006F FF8C  F00B    	movff	plusw1,btemp+10
 23073  0129A6  0EFC               	movlw	-4
 23074  0129A8  006F FF8C  F00C    	movff	plusw1,btemp+11
 23075                           
 23076                           ;stkvar	_grs @ sp[(-13)+4]
 23077  0129AE  50E1               	movf	fsr1l,w,c
 23078  0129B0  0FF7               	addlw	-9
 23079  0129B2  6ED9               	movwf	fsr2l,c
 23080  0129B4  50E2               	movf	fsr1h,w,c
 23081  0129B6  6EDA               	movwf	fsr2h,c
 23082  0129B8  0EFF               	movlw	255
 23083  0129BA  22DA               	addwfc	fsr2h,f,c
 23084  0129BC  500B               	movf	(btemp+10)^0,w,c
 23085  0129BE  26DE               	addwf	postinc2,f,c
 23086  0129C0  500C               	movf	(btemp+11)^0,w,c
 23087  0129C2  22DE               	addwfc	postinc2,f,c
 23088  0129C4  0E00               	movlw	0
 23089  0129C6  22DE               	addwfc	postinc2,f,c
 23090  0129C8  22DE               	addwfc	postinc2,f,c
 23091                           
 23092                           ;stkvar	_b @ sp[(-13)+-4]
 23093  0129CA  0EEF               	movlw	-17
 23094  0129CC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23095                           
 23096                           ;stkvar	_a @ sp[(-13)+-8]
 23097  0129D2  0EEC               	movlw	236
 23098  0129D4  24E1               	addwf	fsr1l,w,c
 23099  0129D6  6ED9               	movwf	fsr2l,c
 23100  0129D8  0EFF               	movlw	255
 23101  0129DA  20E2               	addwfc	fsr1h,w,c
 23102  0129DC  6EDA               	movwf	fsr2h,c
 23103  0129DE  50DF               	movf	indf2,w,c
 23104  0129E0  020C               	mulwf	(btemp+11)^0,c
 23105                           
 23106                           ;stkvar	_temp @ sp[(-13)+8]
 23107  0129E2  0EFB               	movlw	-5
 23108  0129E4  006F FFCF FFE3     	movff	prodl,plusw1
 23109  0129EA  0EFC               	movlw	-4
 23110  0129EC  006F FFD3 FFE3     	movff	prodh,plusw1
 23111                           
 23112                           ;stkvar	_temp @ sp[(-13)+8]
 23113  0129F2  0EFB               	movlw	-5
 23114  0129F4  006F FF8C  F00B    	movff	plusw1,btemp+10
 23115  0129FA  0EFC               	movlw	-4
 23116  0129FC  006F FF8C  F00C    	movff	plusw1,btemp+11
 23117                           
 23118                           ;stkvar	_grs @ sp[(-13)+4]
 23119  012A02  50E1               	movf	fsr1l,w,c
 23120  012A04  0FF7               	addlw	-9
 23121  012A06  6ED9               	movwf	fsr2l,c
 23122  012A08  50E2               	movf	fsr1h,w,c
 23123  012A0A  6EDA               	movwf	fsr2h,c
 23124  012A0C  0EFF               	movlw	255
 23125  012A0E  22DA               	addwfc	fsr2h,f,c
 23126  012A10  500B               	movf	(btemp+10)^0,w,c
 23127  012A12  26DE               	addwf	postinc2,f,c
 23128  012A14  500C               	movf	(btemp+11)^0,w,c
 23129  012A16  22DE               	addwfc	postinc2,f,c
 23130  012A18  0E00               	movlw	0
 23131  012A1A  22DE               	addwfc	postinc2,f,c
 23132  012A1C  22DE               	addwfc	postinc2,f,c
 23133                           
 23134                           ;stkvar	_grs @ sp[(-13)+4]
 23135  012A1E  50E1               	movf	fsr1l,w,c
 23136  012A20  0FF7               	addlw	-9
 23137  012A22  6ED9               	movwf	fsr2l,c
 23138  012A24  50E2               	movf	fsr1h,w,c
 23139  012A26  6EDA               	movwf	fsr2h,c
 23140  012A28  0EFF               	movlw	255
 23141  012A2A  22DA               	addwfc	fsr2h,f,c
 23142  012A2C  0E08               	movlw	8
 23143  012A2E                     u7845:
 23144  012A2E  90D8               	bcf	status,0,c
 23145  012A30  36DE               	rlcf	postinc2,f,c
 23146  012A32  36DE               	rlcf	postinc2,f,c
 23147  012A34  36DE               	rlcf	postinc2,f,c
 23148  012A36  36DD               	rlcf	postdec2,f,c
 23149  012A38  52DD               	movf	postdec2,f,c
 23150  012A3A  52DD               	movf	postdec2,f,c
 23151  012A3C  2EE8               	decfsz	wreg,f,c
 23152  012A3E  D7F7               	goto	u7845
 23153                           
 23154                           ;stkvar	_b @ sp[(-13)+-4]
 23155  012A40  0EEF               	movlw	-17
 23156  012A42  006F FF8C  F00C    	movff	plusw1,btemp+11
 23157                           
 23158                           ;stkvar	_a @ sp[(-13)+-8]
 23159  012A48  0EEB               	movlw	-21
 23160  012A4A  50E3               	movf	plusw1,w,c
 23161  012A4C  020C               	mulwf	(btemp+11)^0,c
 23162                           
 23163                           ;stkvar	_temp @ sp[(-13)+8]
 23164  012A4E  0EFB               	movlw	-5
 23165  012A50  006F FFCF FFE3     	movff	prodl,plusw1
 23166  012A56  0EFC               	movlw	-4
 23167  012A58  006F FFD3 FFE3     	movff	prodh,plusw1
 23168                           
 23169                           ;stkvar	_temp @ sp[(-13)+8]
 23170  012A5E  0EFB               	movlw	-5
 23171  012A60  006F FF8C  F00B    	movff	plusw1,btemp+10
 23172  012A66  0EFC               	movlw	-4
 23173  012A68  006F FF8C  F00C    	movff	plusw1,btemp+11
 23174                           
 23175                           ;stkvar	_grs @ sp[(-13)+4]
 23176  012A6E  50E1               	movf	fsr1l,w,c
 23177  012A70  0FF7               	addlw	-9
 23178  012A72  6ED9               	movwf	fsr2l,c
 23179  012A74  50E2               	movf	fsr1h,w,c
 23180  012A76  6EDA               	movwf	fsr2h,c
 23181  012A78  0EFF               	movlw	255
 23182  012A7A  22DA               	addwfc	fsr2h,f,c
 23183  012A7C  500B               	movf	(btemp+10)^0,w,c
 23184  012A7E  26DE               	addwf	postinc2,f,c
 23185  012A80  500C               	movf	(btemp+11)^0,w,c
 23186  012A82  22DE               	addwfc	postinc2,f,c
 23187  012A84  0E00               	movlw	0
 23188  012A86  22DE               	addwfc	postinc2,f,c
 23189  012A88  22DE               	addwfc	postinc2,f,c
 23190                           
 23191                           ;stkvar	_b @ sp[(-13)+-4]
 23192  012A8A  0EF0               	movlw	240
 23193  012A8C  24E1               	addwf	fsr1l,w,c
 23194  012A8E  6ED9               	movwf	fsr2l,c
 23195  012A90  0EFF               	movlw	255
 23196  012A92  20E2               	addwfc	fsr1h,w,c
 23197  012A94  6EDA               	movwf	fsr2h,c
 23198  012A96  50DF               	movf	indf2,w,c
 23199  012A98  6E0C               	movwf	(btemp+11)^0,c
 23200                           
 23201                           ;stkvar	_a @ sp[(-13)+-8]
 23202  012A9A  0EED               	movlw	237
 23203  012A9C  24E1               	addwf	fsr1l,w,c
 23204  012A9E  6ED9               	movwf	fsr2l,c
 23205  012AA0  0EFF               	movlw	255
 23206  012AA2  20E2               	addwfc	fsr1h,w,c
 23207  012AA4  6EDA               	movwf	fsr2h,c
 23208  012AA6  50DF               	movf	indf2,w,c
 23209  012AA8  020C               	mulwf	(btemp+11)^0,c
 23210                           
 23211                           ;stkvar	_temp @ sp[(-13)+8]
 23212  012AAA  0EFB               	movlw	-5
 23213  012AAC  006F FFCF FFE3     	movff	prodl,plusw1
 23214  012AB2  0EFC               	movlw	-4
 23215  012AB4  006F FFD3 FFE3     	movff	prodh,plusw1
 23216                           
 23217                           ;stkvar	_temp @ sp[(-13)+8]
 23218  012ABA  0EFB               	movlw	-5
 23219  012ABC  006F FF8C  F00B    	movff	plusw1,btemp+10
 23220  012AC2  0EFC               	movlw	-4
 23221  012AC4  006F FF8C  F00C    	movff	plusw1,btemp+11
 23222                           
 23223                           ;stkvar	_prod @ sp[(-13)+0]
 23224  012ACA  50E1               	movf	fsr1l,w,c
 23225  012ACC  0FF3               	addlw	-13
 23226  012ACE  6ED9               	movwf	fsr2l,c
 23227  012AD0  50E2               	movf	fsr1h,w,c
 23228  012AD2  6EDA               	movwf	fsr2h,c
 23229  012AD4  0EFF               	movlw	255
 23230  012AD6  22DA               	addwfc	fsr2h,f,c
 23231  012AD8  500B               	movf	(btemp+10)^0,w,c
 23232  012ADA  26DE               	addwf	postinc2,f,c
 23233  012ADC  500C               	movf	(btemp+11)^0,w,c
 23234  012ADE  22DE               	addwfc	postinc2,f,c
 23235  012AE0  0E00               	movlw	0
 23236  012AE2  22DE               	addwfc	postinc2,f,c
 23237  012AE4  22DE               	addwfc	postinc2,f,c
 23238                           
 23239                           ;stkvar	_b @ sp[(-13)+-4]
 23240  012AE6  0EF1               	movlw	241
 23241  012AE8  24E1               	addwf	fsr1l,w,c
 23242  012AEA  6ED9               	movwf	fsr2l,c
 23243  012AEC  0EFF               	movlw	255
 23244  012AEE  20E2               	addwfc	fsr1h,w,c
 23245  012AF0  6EDA               	movwf	fsr2h,c
 23246  012AF2  50DF               	movf	indf2,w,c
 23247  012AF4  6E0C               	movwf	(btemp+11)^0,c
 23248                           
 23249                           ;stkvar	_a @ sp[(-13)+-8]
 23250  012AF6  0EEC               	movlw	236
 23251  012AF8  24E1               	addwf	fsr1l,w,c
 23252  012AFA  6ED9               	movwf	fsr2l,c
 23253  012AFC  0EFF               	movlw	255
 23254  012AFE  20E2               	addwfc	fsr1h,w,c
 23255  012B00  6EDA               	movwf	fsr2h,c
 23256  012B02  50DF               	movf	indf2,w,c
 23257  012B04  020C               	mulwf	(btemp+11)^0,c
 23258                           
 23259                           ;stkvar	_temp @ sp[(-13)+8]
 23260  012B06  0EFB               	movlw	-5
 23261  012B08  006F FFCF FFE3     	movff	prodl,plusw1
 23262  012B0E  0EFC               	movlw	-4
 23263  012B10  006F FFD3 FFE3     	movff	prodh,plusw1
 23264                           
 23265                           ;stkvar	_temp @ sp[(-13)+8]
 23266  012B16  0EFB               	movlw	-5
 23267  012B18  006F FF8C  F00B    	movff	plusw1,btemp+10
 23268  012B1E  0EFC               	movlw	-4
 23269  012B20  006F FF8C  F00C    	movff	plusw1,btemp+11
 23270                           
 23271                           ;stkvar	_prod @ sp[(-13)+0]
 23272  012B26  50E1               	movf	fsr1l,w,c
 23273  012B28  0FF3               	addlw	-13
 23274  012B2A  6ED9               	movwf	fsr2l,c
 23275  012B2C  50E2               	movf	fsr1h,w,c
 23276  012B2E  6EDA               	movwf	fsr2h,c
 23277  012B30  0EFF               	movlw	255
 23278  012B32  22DA               	addwfc	fsr2h,f,c
 23279  012B34  500B               	movf	(btemp+10)^0,w,c
 23280  012B36  26DE               	addwf	postinc2,f,c
 23281  012B38  500C               	movf	(btemp+11)^0,w,c
 23282  012B3A  22DE               	addwfc	postinc2,f,c
 23283  012B3C  0E00               	movlw	0
 23284  012B3E  22DE               	addwfc	postinc2,f,c
 23285  012B40  22DE               	addwfc	postinc2,f,c
 23286                           
 23287                           ;stkvar	_b @ sp[(-13)+-4]
 23288  012B42  0EF1               	movlw	241
 23289  012B44  24E1               	addwf	fsr1l,w,c
 23290  012B46  6ED9               	movwf	fsr2l,c
 23291  012B48  0EFF               	movlw	255
 23292  012B4A  20E2               	addwfc	fsr1h,w,c
 23293  012B4C  6EDA               	movwf	fsr2h,c
 23294  012B4E  50DF               	movf	indf2,w,c
 23295  012B50  6E0C               	movwf	(btemp+11)^0,c
 23296                           
 23297                           ;stkvar	_a @ sp[(-13)+-8]
 23298  012B52  0EED               	movlw	237
 23299  012B54  24E1               	addwf	fsr1l,w,c
 23300  012B56  6ED9               	movwf	fsr2l,c
 23301  012B58  0EFF               	movlw	255
 23302  012B5A  20E2               	addwfc	fsr1h,w,c
 23303  012B5C  6EDA               	movwf	fsr2h,c
 23304  012B5E  50DF               	movf	indf2,w,c
 23305  012B60  020C               	mulwf	(btemp+11)^0,c
 23306                           
 23307                           ;stkvar	_temp @ sp[(-13)+8]
 23308  012B62  0EFB               	movlw	-5
 23309  012B64  006F FFCF FFE3     	movff	prodl,plusw1
 23310  012B6A  0EFC               	movlw	-4
 23311  012B6C  006F FFD3 FFE3     	movff	prodh,plusw1
 23312                           
 23313                           ;stkvar	_temp @ sp[(-13)+8]
 23314  012B72  0EFB               	movlw	-5
 23315  012B74  006F FF8C  F00B    	movff	plusw1,btemp+10
 23316  012B7A  0EFC               	movlw	-4
 23317  012B7C  006F FF8C  F00C    	movff	plusw1,btemp+11
 23318  012B82  500B               	movf	(btemp+10)^0,w,c
 23319  012B84  6E05               	movwf	(btemp+4)^0,c
 23320  012B86  500C               	movf	(btemp+11)^0,w,c
 23321  012B88  6E06               	movwf	(btemp+5)^0,c
 23322  012B8A  6A07               	clrf	(btemp+6)^0,c
 23323  012B8C  6A08               	clrf	(btemp+7)^0,c
 23324  012B8E  0060  F01C  F008   	movff	btemp+6,btemp+7
 23325  012B94  0060  F018  F007   	movff	btemp+5,btemp+6
 23326  012B9A  0060  F014  F006   	movff	btemp+4,btemp+5
 23327  012BA0  6A05               	clrf	(btemp+4)^0,c
 23328                           
 23329                           ;stkvar	_prod @ sp[(-13)+0]
 23330  012BA2  50E1               	movf	fsr1l,w,c
 23331  012BA4  0FF3               	addlw	-13
 23332  012BA6  6ED9               	movwf	fsr2l,c
 23333  012BA8  50E2               	movf	fsr1h,w,c
 23334  012BAA  6EDA               	movwf	fsr2h,c
 23335  012BAC  0EFF               	movlw	255
 23336  012BAE  22DA               	addwfc	fsr2h,f,c
 23337  012BB0  5005               	movf	(btemp+4)^0,w,c
 23338  012BB2  26DE               	addwf	postinc2,f,c
 23339  012BB4  5006               	movf	(btemp+5)^0,w,c
 23340  012BB6  22DE               	addwfc	postinc2,f,c
 23341  012BB8  5007               	movf	(btemp+6)^0,w,c
 23342  012BBA  22DE               	addwfc	postinc2,f,c
 23343  012BBC  5008               	movf	(btemp+7)^0,w,c
 23344  012BBE  22DE               	addwfc	postinc2,f,c
 23345                           
 23346                           ;stkvar	_prod @ sp[(-13)+0]
 23347  012BC0  50E1               	movf	fsr1l,w,c
 23348  012BC2  0FF3               	addlw	-13
 23349  012BC4  6ED9               	movwf	fsr2l,c
 23350  012BC6  50E2               	movf	fsr1h,w,c
 23351  012BC8  6EDA               	movwf	fsr2h,c
 23352  012BCA  0EFF               	movlw	255
 23353  012BCC  22DA               	addwfc	fsr2h,f,c
 23354                           
 23355                           ;stkvar	_grs @ sp[(-13)+4]
 23356  012BCE  0EFA               	movlw	250
 23357  012BD0  24E1               	addwf	fsr1l,w,c
 23358  012BD2  6EE9               	movwf	fsr0l,c
 23359  012BD4  0EFF               	movlw	255
 23360  012BD6  20E2               	addwfc	fsr1h,w,c
 23361  012BD8  6EEA               	movwf	fsr0h,c
 23362  012BDA  50EF               	movf	indf0,w,c
 23363  012BDC  26DE               	addwf	postinc2,f,c
 23364  012BDE  0E00               	movlw	0
 23365  012BE0  22DE               	addwfc	postinc2,f,c
 23366  012BE2  22DE               	addwfc	postinc2,f,c
 23367  012BE4  22DE               	addwfc	postinc2,f,c
 23368                           
 23369                           ;stkvar	_grs @ sp[(-13)+4]
 23370  012BE6  50E1               	movf	fsr1l,w,c
 23371  012BE8  0FF7               	addlw	-9
 23372  012BEA  6ED9               	movwf	fsr2l,c
 23373  012BEC  50E2               	movf	fsr1h,w,c
 23374  012BEE  6EDA               	movwf	fsr2h,c
 23375  012BF0  0EFF               	movlw	255
 23376  012BF2  22DA               	addwfc	fsr2h,f,c
 23377  012BF4  0E08               	movlw	8
 23378  012BF6                     u7855:
 23379  012BF6  90D8               	bcf	status,0,c
 23380  012BF8  36DE               	rlcf	postinc2,f,c
 23381  012BFA  36DE               	rlcf	postinc2,f,c
 23382  012BFC  36DE               	rlcf	postinc2,f,c
 23383  012BFE  36DD               	rlcf	postdec2,f,c
 23384  012C00  52DD               	movf	postdec2,f,c
 23385  012C02  52DD               	movf	postdec2,f,c
 23386  012C04  2EE8               	decfsz	wreg,f,c
 23387  012C06  D7F7               	goto	u7855
 23388  012C08  0E82               	movlw	130
 23389  012C0A  6E0B               	movwf	(btemp+10)^0,c
 23390  012C0C  0EFF               	movlw	255
 23391  012C0E  6E0C               	movwf	(btemp+11)^0,c
 23392                           
 23393                           ;stkvar	_bexp @ sp[(-13)+10]
 23394  012C10  0EFD               	movlw	-3
 23395  012C12  50E3               	movf	plusw1,w,c
 23396  012C14  6E09               	movwf	(btemp+8)^0,c
 23397  012C16  6A0A               	clrf	(btemp+9)^0,c
 23398                           
 23399                           ;stkvar	_aexp @ sp[(-13)+11]
 23400  012C18  0EFE               	movlw	-2
 23401  012C1A  50E3               	movf	plusw1,w,c
 23402  012C1C  2609               	addwf	(btemp+8)^0,f,c
 23403  012C1E  0E00               	movlw	0
 23404  012C20  220A               	addwfc	(btemp+9)^0,f,c
 23405  012C22  500B               	movf	(btemp+10)^0,w,c
 23406  012C24  2609               	addwf	(btemp+8)^0,f,c
 23407  012C26  500C               	movf	(btemp+11)^0,w,c
 23408  012C28  220A               	addwfc	(btemp+9)^0,f,c
 23409                           
 23410                           ;stkvar	_temp @ sp[(-13)+8]
 23411  012C2A  0EFB               	movlw	-5
 23412  012C2C  0060  F027  FFE3   	movff	btemp+8,plusw1
 23413  012C32  0EFC               	movlw	-4
 23414  012C34  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23415  012C3A  D021               	goto	l8692
 23416  012C3C                     l8682:
 23417                           
 23418                           ;stkvar	_prod @ sp[(-13)+0]
 23419  012C3C  90D8               	bcf	status,0,c
 23420  012C3E  0EF3               	movlw	-13
 23421  012C40  36E3               	rlcf	plusw1,f,c
 23422  012C42  0EF4               	movlw	-12
 23423  012C44  36E3               	rlcf	plusw1,f,c
 23424  012C46  0EF5               	movlw	-11
 23425  012C48  36E3               	rlcf	plusw1,f,c
 23426  012C4A  0EF6               	movlw	-10
 23427  012C4C  36E3               	rlcf	plusw1,f,c
 23428                           
 23429                           ;stkvar	_grs @ sp[(-13)+4]
 23430  012C4E  0EFA               	movlw	-6
 23431  012C50  AEE3               	btfss	plusw1,7,c
 23432  012C52  D002               	goto	l8688
 23433                           
 23434                           ;stkvar	_prod @ sp[(-13)+0]
 23435  012C54  0EF3               	movlw	-13
 23436  012C56  80E3               	bsf	plusw1,0,c
 23437  012C58                     l8688:
 23438                           
 23439                           ;stkvar	_grs @ sp[(-13)+4]
 23440  012C58  90D8               	bcf	status,0,c
 23441  012C5A  0EF7               	movlw	-9
 23442  012C5C  36E3               	rlcf	plusw1,f,c
 23443  012C5E  0EF8               	movlw	-8
 23444  012C60  36E3               	rlcf	plusw1,f,c
 23445  012C62  0EF9               	movlw	-7
 23446  012C64  36E3               	rlcf	plusw1,f,c
 23447  012C66  0EFA               	movlw	-6
 23448  012C68  36E3               	rlcf	plusw1,f,c
 23449                           
 23450                           ;stkvar	_temp @ sp[(-13)+8]
 23451  012C6A  50E1               	movf	fsr1l,w,c
 23452  012C6C  0FFB               	addlw	-5
 23453  012C6E  6ED9               	movwf	fsr2l,c
 23454  012C70  50E2               	movf	fsr1h,w,c
 23455  012C72  6EDA               	movwf	fsr2h,c
 23456  012C74  0EFF               	movlw	255
 23457  012C76  22DA               	addwfc	fsr2h,f,c
 23458  012C78  06DE               	decf	postinc2,f,c
 23459  012C7A  0E00               	movlw	0
 23460  012C7C  5ADD               	subwfb	postdec2,f,c
 23461  012C7E                     l8692:
 23462                           
 23463                           ;stkvar	_prod @ sp[(-13)+0]
 23464  012C7E  0EF5               	movlw	-11
 23465  012C80  AEE3               	btfss	plusw1,7,c
 23466  012C82  D7DC               	goto	l8682
 23467                           
 23468                           ;stkvar	_aexp @ sp[(-13)+11]
 23469  012C84  0EFE               	movlw	-2
 23470  012C86  6AE3               	clrf	plusw1,c
 23471                           
 23472                           ;stkvar	_grs @ sp[(-13)+4]
 23473  012C88  0EFA               	movlw	-6
 23474  012C8A  AEE3               	btfss	plusw1,7,c
 23475  012C8C  D020               	goto	l8706
 23476                           
 23477                           ;stkvar	_grs @ sp[(-13)+4]
 23478  012C8E  50E1               	movf	fsr1l,w,c
 23479  012C90  0FF7               	addlw	-9
 23480  012C92  6ED9               	movwf	fsr2l,c
 23481  012C94  50E2               	movf	fsr1h,w,c
 23482  012C96  6EDA               	movwf	fsr2h,c
 23483  012C98  0EFF               	movlw	255
 23484  012C9A  22DA               	addwfc	fsr2h,f,c
 23485  012C9C  0EFF               	movlw	255
 23486  012C9E  14DE               	andwf	postinc2,w,c
 23487  012CA0  6E09               	movwf	(btemp+8)^0,c
 23488  012CA2  0EFF               	movlw	255
 23489  012CA4  14DE               	andwf	postinc2,w,c
 23490  012CA6  6E0A               	movwf	(btemp+9)^0,c
 23491  012CA8  0EFF               	movlw	255
 23492  012CAA  14DE               	andwf	postinc2,w,c
 23493  012CAC  6E0B               	movwf	(btemp+10)^0,c
 23494  012CAE  0E7F               	movlw	127
 23495  012CB0  14DE               	andwf	postinc2,w,c
 23496  012CB2  6E0C               	movwf	(btemp+11)^0,c
 23497  012CB4  5009               	movf	(btemp+8)^0,w,c
 23498  012CB6  100A               	iorwf	(btemp+9)^0,w,c
 23499  012CB8  100B               	iorwf	(btemp+10)^0,w,c
 23500  012CBA  100C               	iorwf	(btemp+11)^0,w,c
 23501  012CBC  B4D8               	btfsc	status,2,c
 23502  012CBE  D004               	goto	l8702
 23503  012CC0                     u7890:
 23504                           
 23505                           ;stkvar	_aexp @ sp[(-13)+11]
 23506  012CC0  0EFE               	movlw	-2
 23507  012CC2  6AE3               	clrf	plusw1,c
 23508  012CC4  2AE3               	incf	plusw1,f,c
 23509  012CC6  D003               	goto	l8706
 23510  012CC8                     l8702:
 23511                           
 23512                           ;stkvar	_prod @ sp[(-13)+0]
 23513  012CC8  0EF3               	movlw	-13
 23514  012CCA  B0E3               	btfsc	plusw1,0,c
 23515  012CCC  D7F9               	goto	u7890
 23516  012CCE                     l8706:
 23517                           
 23518                           ;stkvar	_aexp @ sp[(-13)+11]
 23519  012CCE  0EFE               	movlw	-2
 23520  012CD0  50E3               	movf	plusw1,w,c
 23521  012CD2  B4D8               	btfsc	status,2,c
 23522  012CD4  D036               	goto	l8716
 23523                           
 23524                           ;stkvar	_prod @ sp[(-13)+0]
 23525  012CD6  50E1               	movf	fsr1l,w,c
 23526  012CD8  0FF3               	addlw	-13
 23527  012CDA  6ED9               	movwf	fsr2l,c
 23528  012CDC  50E2               	movf	fsr1h,w,c
 23529  012CDE  6EDA               	movwf	fsr2h,c
 23530  012CE0  0EFF               	movlw	255
 23531  012CE2  22DA               	addwfc	fsr2h,f,c
 23532  012CE4  2ADE               	incf	postinc2,f,c
 23533  012CE6  0E00               	movlw	0
 23534  012CE8  22DE               	addwfc	postinc2,f,c
 23535  012CEA  22DE               	addwfc	postinc2,f,c
 23536  012CEC  22DE               	addwfc	postinc2,f,c
 23537                           
 23538                           ;stkvar	_prod @ sp[(-13)+0]
 23539  012CEE  0EF6               	movlw	-10
 23540  012CF0  A0E3               	btfss	plusw1,0,c
 23541  012CF2  D027               	goto	l8716
 23542  012CF4  0E01               	movlw	1
 23543  012CF6  6E0C               	movwf	(btemp+11)^0,c
 23544                           
 23545                           ;stkvar	_prod @ sp[(-13)+0]
 23546  012CF8  50E1               	movf	fsr1l,w,c
 23547  012CFA  0FF3               	addlw	-13
 23548  012CFC  6ED9               	movwf	fsr2l,c
 23549  012CFE  50E2               	movf	fsr1h,w,c
 23550  012D00  6EDA               	movwf	fsr2h,c
 23551  012D02  0EFF               	movlw	255
 23552  012D04  22DA               	addwfc	fsr2h,f,c
 23553  012D06  280C               	incf	(btemp+11)^0,w,c
 23554  012D08  52DE               	movf	postinc2,f,c
 23555  012D0A  D008               	goto	u7930
 23556  012D0C                     u7935:
 23557  012D0C  52DE               	movf	postinc2,f,c
 23558  012D0E  90D8               	bcf	status,0,c
 23559  012D10  BEDC               	btfsc	preinc2,7,c
 23560  012D12  80D8               	bsf	status,0,c
 23561  012D14  32DD               	rrcf	postdec2,f,c
 23562  012D16  32DD               	rrcf	postdec2,f,c
 23563  012D18  32DD               	rrcf	postdec2,f,c
 23564  012D1A  32DE               	rrcf	postinc2,f,c
 23565  012D1C                     u7930:
 23566  012D1C  2EE8               	decfsz	wreg,f,c
 23567  012D1E  D7F6               	goto	u7935
 23568                           
 23569                           ;stkvar	_temp @ sp[(-13)+8]
 23570  012D20  0EFB               	movlw	-5
 23571  012D22  50E3               	movf	plusw1,w,c
 23572  012D24  0F01               	addlw	1
 23573  012D26  6E01               	movwf	btemp^0,c
 23574  012D28  0EFB               	movlw	-5
 23575  012D2A  0060  F007  FFE3   	movff	btemp,plusw1
 23576  012D30  6A01               	clrf	btemp^0,c
 23577  012D32  0EFC               	movlw	-4
 23578  012D34  50E3               	movf	plusw1,w,c
 23579  012D36  2001               	addwfc	btemp^0,w,c
 23580  012D38  6E01               	movwf	btemp^0,c
 23581  012D3A  0EFC               	movlw	-4
 23582  012D3C  0060  F007  FFE3   	movff	btemp,plusw1
 23583  012D42                     l8716:
 23584                           
 23585                           ;stkvar	_temp @ sp[(-13)+8]
 23586  012D42  0EFC               	movlw	-4
 23587  012D44  BEE3               	btfsc	plusw1,7,c
 23588  012D46  D020               	goto	l8720
 23589  012D48  0EFC               	movlw	-4
 23590  012D4A  50E3               	movf	plusw1,w,c
 23591  012D4C  E104               	bnz	u7940
 23592  012D4E  0EFB               	movlw	-5
 23593  012D50  28E3               	incf	plusw1,w,c
 23594  012D52  A0D8               	btfss	status,0,c
 23595  012D54  D019               	goto	l8720
 23596  012D56                     u7940:
 23597  012D56  0E00               	movlw	0
 23598  012D58  6E09               	movwf	(btemp+8)^0,c
 23599  012D5A  0E00               	movlw	0
 23600  012D5C  6E0A               	movwf	(btemp+9)^0,c
 23601  012D5E  0E80               	movlw	128
 23602  012D60  6E0B               	movwf	(btemp+10)^0,c
 23603  012D62  0E7F               	movlw	127
 23604  012D64  6E0C               	movwf	(btemp+11)^0,c
 23605                           
 23606                           ;stkvar	_prod @ sp[(-13)+0]
 23607  012D66  0EF3               	movlw	-13
 23608  012D68  0060  F027  FFE3   	movff	btemp+8,plusw1
 23609  012D6E  0EF4               	movlw	-12
 23610  012D70  0060  F02B  FFE3   	movff	btemp+9,plusw1
 23611  012D76  0EF5               	movlw	-11
 23612  012D78  0060  F02F  FFE3   	movff	btemp+10,plusw1
 23613  012D7E  0EF6               	movlw	-10
 23614  012D80  0060  F033  FFE3   	movff	btemp+11,plusw1
 23615  012D86  D044               	goto	l8736
 23616  012D88                     l8720:
 23617                           
 23618                           ;stkvar	_temp @ sp[(-13)+8]
 23619  012D88  0EFC               	movlw	-4
 23620  012D8A  BEE3               	btfsc	plusw1,7,c
 23621  012D8C  D007               	goto	u7950
 23622  012D8E  0EFC               	movlw	-4
 23623  012D90  50E3               	movf	plusw1,w,c
 23624  012D92  E10F               	bnz	l8726
 23625  012D94  0EFB               	movlw	-5
 23626  012D96  04E3               	decf	plusw1,w,c
 23627  012D98  B0D8               	btfsc	status,0,c
 23628  012D9A  D00B               	goto	l8726
 23629  012D9C                     u7950:
 23630                           
 23631                           ;stkvar	_prod @ sp[(-13)+0]
 23632  012D9C  0EF3               	movlw	-13
 23633  012D9E  6AE3               	clrf	plusw1,c
 23634  012DA0  0EF4               	movlw	-12
 23635  012DA2  6AE3               	clrf	plusw1,c
 23636  012DA4  0EF5               	movlw	-11
 23637  012DA6  6AE3               	clrf	plusw1,c
 23638  012DA8  0EF6               	movlw	-10
 23639  012DAA  6AE3               	clrf	plusw1,c
 23640                           
 23641                           ;stkvar	_sign @ sp[(-13)+12]
 23642  012DAC  0EFF               	movlw	-1
 23643  012DAE  6AE3               	clrf	plusw1,c
 23644  012DB0  D02F               	goto	l8736
 23645  012DB2                     l8726:
 23646                           
 23647                           ;stkvar	_temp @ sp[(-13)+8]
 23648                           ;stkvar	_bexp @ sp[(-13)+10]
 23649  012DB2  0EFB               	movlw	-5
 23650  012DB4  006F FF8C  F001    	movff	plusw1,btemp
 23651  012DBA  0EFD               	movlw	-3
 23652  012DBC  0060  F007  FFE3   	movff	btemp,plusw1
 23653                           
 23654                           ;stkvar	_prod @ sp[(-13)+0]
 23655  012DC2  50E1               	movf	fsr1l,w,c
 23656  012DC4  0FF3               	addlw	-13
 23657  012DC6  6ED9               	movwf	fsr2l,c
 23658  012DC8  50E2               	movf	fsr1h,w,c
 23659  012DCA  6EDA               	movwf	fsr2h,c
 23660  012DCC  0EFF               	movlw	255
 23661  012DCE  22DA               	addwfc	fsr2h,f,c
 23662  012DD0  0EFF               	movlw	255
 23663  012DD2  16DE               	andwf	postinc2,f,c
 23664  012DD4  0EFF               	movlw	255
 23665  012DD6  16DE               	andwf	postinc2,f,c
 23666  012DD8  0E7F               	movlw	127
 23667  012DDA  16DE               	andwf	postinc2,f,c
 23668  012DDC  0E00               	movlw	0
 23669  012DDE  16DE               	andwf	postinc2,f,c
 23670                           
 23671                           ;stkvar	_bexp @ sp[(-13)+10]
 23672  012DE0  0EFD               	movlw	-3
 23673  012DE2  A0E3               	btfss	plusw1,0,c
 23674  012DE4  D008               	goto	l8734
 23675                           
 23676                           ;stkvar	_prod @ sp[(-13)+0]
 23677  012DE6  0EF5               	movlw	245
 23678  012DE8  24E1               	addwf	fsr1l,w,c
 23679  012DEA  6ED9               	movwf	fsr2l,c
 23680  012DEC  0EFF               	movlw	255
 23681  012DEE  20E2               	addwfc	fsr1h,w,c
 23682  012DF0  6EDA               	movwf	fsr2h,c
 23683  012DF2  0E00               	movlw	0
 23684  012DF4  8EDB               	bsf	plusw2,7,c
 23685  012DF6                     l8734:
 23686                           
 23687                           ;stkvar	_prod @ sp[(-13)+0]
 23688  012DF6  0EF6               	movlw	246
 23689  012DF8  24E1               	addwf	fsr1l,w,c
 23690  012DFA  6ED9               	movwf	fsr2l,c
 23691  012DFC  0EFF               	movlw	255
 23692  012DFE  20E2               	addwfc	fsr1h,w,c
 23693  012E00  6EDA               	movwf	fsr2h,c
 23694                           
 23695                           ;stkvar	_bexp @ sp[(-13)+10]
 23696  012E02  0EFD               	movlw	-3
 23697  012E04  006F FF8C  F00C    	movff	plusw1,btemp+11
 23698  012E0A  90D8               	bcf	status,0,c
 23699  012E0C  300C               	rrcf	(btemp+11)^0,w,c
 23700  012E0E  6EDF               	movwf	indf2,c
 23701  012E10                     l8736:
 23702                           
 23703                           ;stkvar	_sign @ sp[(-13)+12]
 23704  012E10  0EFF               	movlw	-1
 23705  012E12  006F FF8C  F00C    	movff	plusw1,btemp+11
 23706                           
 23707                           ;stkvar	_prod @ sp[(-13)+0]
 23708  012E18  0EF6               	movlw	246
 23709  012E1A  24E1               	addwf	fsr1l,w,c
 23710  012E1C  6ED9               	movwf	fsr2l,c
 23711  012E1E  0EFF               	movlw	255
 23712  012E20  20E2               	addwfc	fsr1h,w,c
 23713  012E22  6EDA               	movwf	fsr2h,c
 23714  012E24  500C               	movf	(btemp+11)^0,w,c
 23715  012E26  12DF               	iorwf	indf2,f,c
 23716                           
 23717                           ;stkvar	_prod @ sp[(-13)+0]
 23718  012E28  0EF3               	movlw	-13
 23719  012E2A  006F FF8C  F001    	movff	plusw1,btemp
 23720  012E30  0EF4               	movlw	-12
 23721  012E32  006F FF8C  F002    	movff	plusw1,btemp+1
 23722  012E38  0EF5               	movlw	-11
 23723  012E3A  006F FF8C  F003    	movff	plusw1,btemp+2
 23724  012E40  0EF6               	movlw	-10
 23725  012E42  006F FF8C  F004    	movff	plusw1,btemp+3
 23726  012E48                     l2869:
 23727                           
 23728                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 23729  012E48  0EEB               	movlw	235
 23730  012E4A  26E1               	addwf	fsr1l,f,c
 23731  012E4C  0EFF               	movlw	255
 23732  012E4E  22E2               	addwfc	fsr1h,f,c
 23733  012E50  0012               	return		;funcret
 23734  012E52                     __end_of___flmul:
 23735                           	opt callstack 0
 23736                           
 23737 ;; *************** function _SYSTEM_Initialize *****************
 23738 ;; Defined at:
 23739 ;;		line 50 in file "mcc_generated_files/mcc.c"
 23740 ;; Parameters:    Size  Location     Type
 23741 ;;		None
 23742 ;; Auto vars:     Size  Location     Type
 23743 ;;		None
 23744 ;; Return value:  Size  Location     Type
 23745 ;;                  1  [STACK] void 
 23746 ;; Registers used:
 23747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 23748 ;; Tracked objects:
 23749 ;;		On entry : 0/0
 23750 ;;		On exit  : 3F/3C
 23751 ;;		Unchanged: 0/0
 23752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23757 ;;Total ram usage:        0 bytes
 23758 ;; Hardware stack levels used:    1
 23759 ;; Hardware stack levels required when called:    9
 23760 ;; This function calls:
 23761 ;;		_ADCC_Initialize
 23762 ;;		_CLKREF_Initialize
 23763 ;;		_DMA1_Initialize
 23764 ;;		_DMA2_Initialize
 23765 ;;		_EXT_INT_Initialize
 23766 ;;		_FVR_Initialize
 23767 ;;		_INTERRUPT_Initialize
 23768 ;;		_OSCILLATOR_Initialize
 23769 ;;		_PIN_MANAGER_Initialize
 23770 ;;		_PMD_Initialize
 23771 ;;		_PWM8_Initialize
 23772 ;;		_SPI1_Initialize
 23773 ;;		_TMR2_Initialize
 23774 ;;		_TMR3_Initialize
 23775 ;;		_TMR5_Initialize
 23776 ;;		_TMR6_Initialize
 23777 ;;		_UART1_Initialize
 23778 ;;		_UART2_Initialize
 23779 ;; This function is called by:
 23780 ;;		_main
 23781 ;; This function uses a reentrant model
 23782 ;;
 23783                           
 23784                           	psect	text96
 23785  018C24                     __ptext96:
 23786                           	opt callstack 0
 23787  018C24                     _SYSTEM_Initialize:
 23788                           	opt callstack 21
 23789                           
 23790                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 23791                           
 23792                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23793                           ;incstack = 0
 23794  018C24  ECE9  F0C3         	call	_INTERRUPT_Initialize	;wreg free
 23795                           
 23796                           ; BSR set to: 57
 23797                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 23798  018C28  EC28  F0CC         	call	_PMD_Initialize	;wreg free
 23799                           
 23800                           ; BSR set to: 57
 23801                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 23802  018C2C  ECB2  F0C1         	call	_PIN_MANAGER_Initialize	;wreg free
 23803                           
 23804                           ; BSR set to: 58
 23805                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 23806  018C30  EC1D  F0CC         	call	_OSCILLATOR_Initialize	;wreg free
 23807                           
 23808                           ; BSR set to: 57
 23809                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 23810  018C34  EC87  F0CC         	call	_FVR_Initialize	;wreg free
 23811                           
 23812                           ; BSR set to: 62
 23813                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 23814  018C38  EC7F  F0C3         	call	_ADCC_Initialize	;wreg free
 23815                           
 23816                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 23817  018C3C  EC12  F0CC         	call	_PWM8_Initialize	;wreg free
 23818                           
 23819                           ; BSR set to: 63
 23820                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 23821  018C40  ECFB  F0CB         	call	_TMR2_Initialize	;wreg free
 23822                           
 23823                           ; BSR set to: 57
 23824                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 23825  018C44  EC6A  F0C8         	call	_EXT_INT_Initialize	;wreg free
 23826                           
 23827                           ; BSR set to: 57
 23828                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 23829  018C48  EC26  F0C9         	call	_TMR6_Initialize	;wreg free
 23830                           
 23831                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 23832  018C4C  ECC4  F0C6         	call	_TMR3_Initialize	;wreg free
 23833                           
 23834                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 23835  018C50  ECA1  F0C6         	call	_TMR5_Initialize	;wreg free
 23836                           
 23837                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 23838  018C54  EC4F  F0C4         	call	_UART1_Initialize	;wreg free
 23839                           
 23840                           ; BSR set to: 57
 23841                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 23842  018C58  ECE3  F0C4         	call	_UART2_Initialize	;wreg free
 23843                           
 23844                           ; BSR set to: 57
 23845                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 23846  018C5C  EC07  F0CC         	call	_SPI1_Initialize	;wreg free
 23847                           
 23848                           ; BSR set to: 61
 23849                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 23850  018C60  EC3F  F0C5         	call	_DMA2_Initialize	;wreg free
 23851                           
 23852                           ; BSR set to: 59
 23853                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 23854  018C64  EC4A  F0C3         	call	_DMA1_Initialize	;wreg free
 23855                           
 23856                           ; BSR set to: 59
 23857                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 23858  018C68  EC61  F0CC         	call	_CLKREF_Initialize	;wreg free
 23859                           
 23860                           ; BSR set to: 60
 23861                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23862  018C6C  0012               	return		;funcret
 23863  018C6E                     __end_of_SYSTEM_Initialize:
 23864                           	opt callstack 0
 23865                           
 23866 ;; *************** function _UART2_Initialize *****************
 23867 ;; Defined at:
 23868 ;;		line 78 in file "mcc_generated_files/uart2.c"
 23869 ;; Parameters:    Size  Location     Type
 23870 ;;		None
 23871 ;; Auto vars:     Size  Location     Type
 23872 ;;		None
 23873 ;; Return value:  Size  Location     Type
 23874 ;;                  1  [STACK] void 
 23875 ;; Registers used:
 23876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23877 ;; Tracked objects:
 23878 ;;		On entry : 3F/39
 23879 ;;		On exit  : 3F/39
 23880 ;;		Unchanged: 0/0
 23881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23886 ;;Total ram usage:        0 bytes
 23887 ;; Hardware stack levels used:    1
 23888 ;; Hardware stack levels required when called:    8
 23889 ;; This function calls:
 23890 ;;		_UART2_SetRxInterruptHandler
 23891 ;;		_UART2_SetTxInterruptHandler
 23892 ;; This function is called by:
 23893 ;;		_SYSTEM_Initialize
 23894 ;; This function uses a reentrant model
 23895 ;;
 23896                           
 23897                           	psect	text97
 23898  0189C6                     __ptext97:
 23899                           	opt callstack 0
 23900  0189C6                     _UART2_Initialize:
 23901                           	opt callstack 21
 23902                           
 23903                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 23904                           
 23905                           ; BSR set to: 60
 23906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23907                           ;incstack = 0
 23908  0189C6  0139               	movlb	57	; () banked
 23909  0189C8  9596               	bcf	150,2,b	;volatile
 23910                           
 23911                           ; BSR set to: 57
 23912                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 23913  0189CA  0E6E               	movlw	low _UART2_Receive_ISR
 23914  0189CC  6EE6               	movwf	postinc1,c
 23915  0189CE  0E97               	movlw	high _UART2_Receive_ISR
 23916  0189D0  6EE6               	movwf	postinc1,c
 23917  0189D2  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 23918  0189D4  6EE6               	movwf	postinc1,c
 23919  0189D6  ECB3  F0C9         	call	_UART2_SetRxInterruptHandler	;wreg free
 23920                           
 23921                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 23922  0189DA  0139               	movlb	57	; () banked
 23923  0189DC  9796               	bcf	150,3,b	;volatile
 23924                           
 23925                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 23926  0189DE  0E20               	movlw	low _UART2_Transmit_ISR
 23927  0189E0  6EE6               	movwf	postinc1,c
 23928  0189E2  0E92               	movlw	high _UART2_Transmit_ISR
 23929  0189E4  6EE6               	movwf	postinc1,c
 23930  0189E6  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 23931  0189E8  6EE6               	movwf	postinc1,c
 23932  0189EA  EC9F  F0C9         	call	_UART2_SetTxInterruptHandler	;wreg free
 23933                           
 23934                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 23935  0189EE  013D               	movlb	61	; () banked
 23936  0189F0  6BD4               	clrf	212,b	;volatile
 23937                           
 23938                           ; BSR set to: 61
 23939                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 23940  0189F2  6BD6               	clrf	214,b	;volatile
 23941                           
 23942                           ; BSR set to: 61
 23943                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 23944  0189F4  6BD8               	clrf	216,b	;volatile
 23945                           
 23946                           ; BSR set to: 61
 23947                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 23948  0189F6  0EB0               	movlw	176
 23949  0189F8  6FDA               	movwf	218,b	;volatile
 23950                           
 23951                           ; BSR set to: 61
 23952                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 23953  0189FA  0E80               	movlw	128
 23954  0189FC  6FDB               	movwf	219,b	;volatile
 23955                           
 23956                           ; BSR set to: 61
 23957                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 23958  0189FE  6BDC               	clrf	220,b	;volatile
 23959                           
 23960                           ; BSR set to: 61
 23961                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 23962  018A00  0E82               	movlw	130
 23963  018A02  6FDD               	movwf	221,b	;volatile
 23964                           
 23965                           ; BSR set to: 61
 23966                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 23967  018A04  0E06               	movlw	6
 23968  018A06  6FDE               	movwf	222,b	;volatile
 23969                           
 23970                           ; BSR set to: 61
 23971                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 23972  018A08  6BDF               	clrf	223,b	;volatile
 23973                           
 23974                           ; BSR set to: 61
 23975                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 23976  018A0A  6BE0               	clrf	224,b	;volatile
 23977                           
 23978                           ; BSR set to: 61
 23979                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 23980  018A0C  6BE1               	clrf	225,b	;volatile
 23981                           
 23982                           ; BSR set to: 61
 23983                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 23984  018A0E  6BE2               	clrf	226,b	;volatile
 23985                           
 23986                           ; BSR set to: 61
 23987                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 23988  018A10  6A39               	clrf	_uart2TxHead^0,c	;volatile
 23989                           
 23990                           ; BSR set to: 61
 23991                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 23992  018A12  6A38               	clrf	_uart2TxTail^0,c	;volatile
 23993                           
 23994                           ; BSR set to: 61
 23995                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 23996  018A14  0E40               	movlw	64
 23997  018A16  6E37               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 23998                           
 23999                           ; BSR set to: 61
 24000                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 24001  018A18  6A36               	clrf	_uart2RxHead^0,c	;volatile
 24002                           
 24003                           ; BSR set to: 61
 24004                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 24005  018A1A  6A35               	clrf	_uart2RxTail^0,c	;volatile
 24006                           
 24007                           ; BSR set to: 61
 24008                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 24009  018A1C  6A34               	clrf	_uart2RxCount^0,c	;volatile
 24010                           
 24011                           ; BSR set to: 61
 24012                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 24013  018A1E  0139               	movlb	57	; () banked
 24014  018A20  8596               	bsf	150,2,b	;volatile
 24015                           
 24016                           ; BSR set to: 57
 24017                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 24018  018A22  0012               	return		;funcret
 24019  018A24                     __end_of_UART2_Initialize:
 24020                           	opt callstack 0
 24021                           
 24022 ;; *************** function _UART2_SetTxInterruptHandler *****************
 24023 ;; Defined at:
 24024 ;;		line 252 in file "mcc_generated_files/uart2.c"
 24025 ;; Parameters:    Size  Location     Type
 24026 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24027 ;;		 -> UART2_Transmit_ISR(1), 
 24028 ;; Auto vars:     Size  Location     Type
 24029 ;;		None
 24030 ;; Return value:  Size  Location     Type
 24031 ;;                  1  [STACK] void 
 24032 ;; Registers used:
 24033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24034 ;; Tracked objects:
 24035 ;;		On entry : 3F/39
 24036 ;;		On exit  : 0/0
 24037 ;;		Unchanged: 0/0
 24038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24043 ;;Total ram usage:        0 bytes
 24044 ;; Hardware stack levels used:    1
 24045 ;; Hardware stack levels required when called:    7
 24046 ;; This function calls:
 24047 ;;		Nothing
 24048 ;; This function is called by:
 24049 ;;		_UART2_Initialize
 24050 ;; This function uses a reentrant model
 24051 ;;
 24052                           
 24053                           	psect	text98
 24054  01933E                     __ptext98:
 24055                           	opt callstack 0
 24056  01933E                     _UART2_SetTxInterruptHandler:
 24057                           	opt callstack 21
 24058                           
 24059                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 24060                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24061                           
 24062                           ; BSR set to: 57
 24063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24064                           ;incstack = 0
 24065  01933E  50E1               	movf	fsr1l,w,c
 24066  019340  0FFD               	addlw	-3
 24067  019342  6ED9               	movwf	fsr2l,c
 24068  019344  50E2               	movf	fsr1h,w,c
 24069  019346  6EDA               	movwf	fsr2h,c
 24070  019348  0EFF               	movlw	255
 24071  01934A  22DA               	addwfc	fsr2h,f,c
 24072  01934C  006F FF78  F0BE    	movff	postinc2,_UART2_TxInterruptHandler
 24073  019352  006F FF78  F0BF    	movff	postinc2,_UART2_TxInterruptHandler+1
 24074  019358  006F FF74  F0C0    	movff	postdec2,_UART2_TxInterruptHandler+2
 24075                           
 24076                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24077  01935E  52E5               	movf	postdec1,f,c
 24078  019360  52E5               	movf	postdec1,f,c
 24079  019362  52E5               	movf	postdec1,f,c
 24080  019364  0012               	return		;funcret
 24081  019366                     __end_of_UART2_SetTxInterruptHandler:
 24082                           	opt callstack 0
 24083                           
 24084 ;; *************** function _UART2_SetRxInterruptHandler *****************
 24085 ;; Defined at:
 24086 ;;		line 248 in file "mcc_generated_files/uart2.c"
 24087 ;; Parameters:    Size  Location     Type
 24088 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24089 ;;		 -> UART2_Receive_ISR(1), 
 24090 ;; Auto vars:     Size  Location     Type
 24091 ;;		None
 24092 ;; Return value:  Size  Location     Type
 24093 ;;                  1  [STACK] void 
 24094 ;; Registers used:
 24095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24096 ;; Tracked objects:
 24097 ;;		On entry : 3F/39
 24098 ;;		On exit  : 0/0
 24099 ;;		Unchanged: 0/0
 24100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24105 ;;Total ram usage:        0 bytes
 24106 ;; Hardware stack levels used:    1
 24107 ;; Hardware stack levels required when called:    7
 24108 ;; This function calls:
 24109 ;;		Nothing
 24110 ;; This function is called by:
 24111 ;;		_UART2_Initialize
 24112 ;; This function uses a reentrant model
 24113 ;;
 24114                           
 24115                           	psect	text99
 24116  019366                     __ptext99:
 24117                           	opt callstack 0
 24118  019366                     _UART2_SetRxInterruptHandler:
 24119                           	opt callstack 21
 24120                           
 24121                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 24122                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24123                           
 24124                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24125                           ;incstack = 0
 24126  019366  50E1               	movf	fsr1l,w,c
 24127  019368  0FFD               	addlw	-3
 24128  01936A  6ED9               	movwf	fsr2l,c
 24129  01936C  50E2               	movf	fsr1h,w,c
 24130  01936E  6EDA               	movwf	fsr2h,c
 24131  019370  0EFF               	movlw	255
 24132  019372  22DA               	addwfc	fsr2h,f,c
 24133  019374  006F FF78  F0C1    	movff	postinc2,_UART2_RxInterruptHandler
 24134  01937A  006F FF78  F0C2    	movff	postinc2,_UART2_RxInterruptHandler+1
 24135  019380  006F FF74  F0C3    	movff	postdec2,_UART2_RxInterruptHandler+2
 24136                           
 24137                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24138  019386  52E5               	movf	postdec1,f,c
 24139  019388  52E5               	movf	postdec1,f,c
 24140  01938A  52E5               	movf	postdec1,f,c
 24141  01938C  0012               	return		;funcret
 24142  01938E                     __end_of_UART2_SetRxInterruptHandler:
 24143                           	opt callstack 0
 24144                           
 24145 ;; *************** function _UART1_Initialize *****************
 24146 ;; Defined at:
 24147 ;;		line 79 in file "mcc_generated_files/uart1.c"
 24148 ;; Parameters:    Size  Location     Type
 24149 ;;		None
 24150 ;; Auto vars:     Size  Location     Type
 24151 ;;		None
 24152 ;; Return value:  Size  Location     Type
 24153 ;;                  1  [STACK] void 
 24154 ;; Registers used:
 24155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24156 ;; Tracked objects:
 24157 ;;		On entry : 0/39
 24158 ;;		On exit  : 3F/39
 24159 ;;		Unchanged: 0/0
 24160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24165 ;;Total ram usage:        0 bytes
 24166 ;; Hardware stack levels used:    1
 24167 ;; Hardware stack levels required when called:    8
 24168 ;; This function calls:
 24169 ;;		_UART1_SetRxInterruptHandler
 24170 ;;		_UART1_SetTxInterruptHandler
 24171 ;; This function is called by:
 24172 ;;		_SYSTEM_Initialize
 24173 ;; This function uses a reentrant model
 24174 ;;
 24175                           
 24176                           	psect	text100
 24177  01889E                     __ptext100:
 24178                           	opt callstack 0
 24179  01889E                     _UART1_Initialize:
 24180                           	opt callstack 21
 24181                           
 24182                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 24183                           
 24184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24185                           ;incstack = 0
 24186  01889E  0139               	movlb	57	; () banked
 24187  0188A0  9793               	bcf	147,3,b	;volatile
 24188                           
 24189                           ; BSR set to: 57
 24190                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 24191  0188A2  0E50               	movlw	low _UART1_Receive_ISR
 24192  0188A4  6EE6               	movwf	postinc1,c
 24193  0188A6  0E97               	movlw	high _UART1_Receive_ISR
 24194  0188A8  6EE6               	movwf	postinc1,c
 24195  0188AA  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 24196  0188AC  6EE6               	movwf	postinc1,c
 24197  0188AE  ECDB  F0C9         	call	_UART1_SetRxInterruptHandler	;wreg free
 24198                           
 24199                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 24200  0188B2  0139               	movlb	57	; () banked
 24201  0188B4  9993               	bcf	147,4,b	;volatile
 24202                           
 24203                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 24204  0188B6  0EF4               	movlw	low _UART1_Transmit_ISR
 24205  0188B8  6EE6               	movwf	postinc1,c
 24206  0188BA  0E91               	movlw	high _UART1_Transmit_ISR
 24207  0188BC  6EE6               	movwf	postinc1,c
 24208  0188BE  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 24209  0188C0  6EE6               	movwf	postinc1,c
 24210  0188C2  ECC7  F0C9         	call	_UART1_SetTxInterruptHandler	;wreg free
 24211                           
 24212                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 24213  0188C6  013D               	movlb	61	; () banked
 24214  0188C8  6BEC               	clrf	236,b	;volatile
 24215                           
 24216                           ; BSR set to: 61
 24217                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 24218  0188CA  6BED               	clrf	237,b	;volatile
 24219                           
 24220                           ; BSR set to: 61
 24221                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 24222  0188CC  6BEE               	clrf	238,b	;volatile
 24223                           
 24224                           ; BSR set to: 61
 24225                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 24226  0188CE  6BEF               	clrf	239,b	;volatile
 24227                           
 24228                           ; BSR set to: 61
 24229                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 24230  0188D0  6BF0               	clrf	240,b	;volatile
 24231                           
 24232                           ; BSR set to: 61
 24233                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 24234  0188D2  6BF1               	clrf	241,b	;volatile
 24235                           
 24236                           ; BSR set to: 61
 24237                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 24238  0188D4  0EB0               	movlw	176
 24239  0188D6  6FF2               	movwf	242,b	;volatile
 24240                           
 24241                           ; BSR set to: 61
 24242                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 24243  0188D8  0E80               	movlw	128
 24244  0188DA  6FF3               	movwf	243,b	;volatile
 24245                           
 24246                           ; BSR set to: 61
 24247                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 24248  0188DC  6BF4               	clrf	244,b	;volatile
 24249                           
 24250                           ; BSR set to: 61
 24251                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 24252  0188DE  0E82               	movlw	130
 24253  0188E0  6FF5               	movwf	245,b	;volatile
 24254                           
 24255                           ; BSR set to: 61
 24256                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 24257  0188E2  0E06               	movlw	6
 24258  0188E4  6FF6               	movwf	246,b	;volatile
 24259                           
 24260                           ; BSR set to: 61
 24261                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 24262  0188E6  6BF7               	clrf	247,b	;volatile
 24263                           
 24264                           ; BSR set to: 61
 24265                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 24266  0188E8  6BF8               	clrf	248,b	;volatile
 24267                           
 24268                           ; BSR set to: 61
 24269                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 24270  0188EA  6BF9               	clrf	249,b	;volatile
 24271                           
 24272                           ; BSR set to: 61
 24273                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 24274  0188EC  6BFA               	clrf	250,b	;volatile
 24275                           
 24276                           ; BSR set to: 61
 24277                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 24278  0188EE  6A3F               	clrf	_uart1TxHead^0,c	;volatile
 24279                           
 24280                           ; BSR set to: 61
 24281                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 24282  0188F0  6A3E               	clrf	_uart1TxTail^0,c	;volatile
 24283                           
 24284                           ; BSR set to: 61
 24285                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 24286  0188F2  0E40               	movlw	64
 24287  0188F4  6E3D               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 24288                           
 24289                           ; BSR set to: 61
 24290                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 24291  0188F6  6A3C               	clrf	_uart1RxHead^0,c	;volatile
 24292                           
 24293                           ; BSR set to: 61
 24294                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 24295  0188F8  6A3B               	clrf	_uart1RxTail^0,c	;volatile
 24296                           
 24297                           ; BSR set to: 61
 24298                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 24299  0188FA  6A3A               	clrf	_uart1RxCount^0,c	;volatile
 24300                           
 24301                           ; BSR set to: 61
 24302                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 24303  0188FC  0139               	movlb	57	; () banked
 24304  0188FE  8793               	bsf	147,3,b	;volatile
 24305                           
 24306                           ; BSR set to: 57
 24307                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 24308  018900  0012               	return		;funcret
 24309  018902                     __end_of_UART1_Initialize:
 24310                           	opt callstack 0
 24311                           
 24312 ;; *************** function _UART1_SetTxInterruptHandler *****************
 24313 ;; Defined at:
 24314 ;;		line 246 in file "mcc_generated_files/uart1.c"
 24315 ;; Parameters:    Size  Location     Type
 24316 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24317 ;;		 -> UART1_Transmit_ISR(1), 
 24318 ;; Auto vars:     Size  Location     Type
 24319 ;;		None
 24320 ;; Return value:  Size  Location     Type
 24321 ;;                  1  [STACK] void 
 24322 ;; Registers used:
 24323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24324 ;; Tracked objects:
 24325 ;;		On entry : 3F/39
 24326 ;;		On exit  : 0/0
 24327 ;;		Unchanged: 0/0
 24328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24333 ;;Total ram usage:        0 bytes
 24334 ;; Hardware stack levels used:    1
 24335 ;; Hardware stack levels required when called:    7
 24336 ;; This function calls:
 24337 ;;		Nothing
 24338 ;; This function is called by:
 24339 ;;		_UART1_Initialize
 24340 ;; This function uses a reentrant model
 24341 ;;
 24342                           
 24343                           	psect	text101
 24344  01938E                     __ptext101:
 24345                           	opt callstack 0
 24346  01938E                     _UART1_SetTxInterruptHandler:
 24347                           	opt callstack 21
 24348                           
 24349                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 24350                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24351                           
 24352                           ; BSR set to: 57
 24353                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24354                           ;incstack = 0
 24355  01938E  50E1               	movf	fsr1l,w,c
 24356  019390  0FFD               	addlw	-3
 24357  019392  6ED9               	movwf	fsr2l,c
 24358  019394  50E2               	movf	fsr1h,w,c
 24359  019396  6EDA               	movwf	fsr2h,c
 24360  019398  0EFF               	movlw	255
 24361  01939A  22DA               	addwfc	fsr2h,f,c
 24362  01939C  006F FF78  F0B8    	movff	postinc2,_UART1_TxInterruptHandler
 24363  0193A2  006F FF78  F0B9    	movff	postinc2,_UART1_TxInterruptHandler+1
 24364  0193A8  006F FF74  F0BA    	movff	postdec2,_UART1_TxInterruptHandler+2
 24365                           
 24366                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24367  0193AE  52E5               	movf	postdec1,f,c
 24368  0193B0  52E5               	movf	postdec1,f,c
 24369  0193B2  52E5               	movf	postdec1,f,c
 24370  0193B4  0012               	return		;funcret
 24371  0193B6                     __end_of_UART1_SetTxInterruptHandler:
 24372                           	opt callstack 0
 24373                           
 24374 ;; *************** function _UART1_SetRxInterruptHandler *****************
 24375 ;; Defined at:
 24376 ;;		line 241 in file "mcc_generated_files/uart1.c"
 24377 ;; Parameters:    Size  Location     Type
 24378 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24379 ;;		 -> UART1_Receive_ISR(1), 
 24380 ;; Auto vars:     Size  Location     Type
 24381 ;;		None
 24382 ;; Return value:  Size  Location     Type
 24383 ;;                  1  [STACK] void 
 24384 ;; Registers used:
 24385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24386 ;; Tracked objects:
 24387 ;;		On entry : 3F/39
 24388 ;;		On exit  : 0/0
 24389 ;;		Unchanged: 0/0
 24390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24395 ;;Total ram usage:        0 bytes
 24396 ;; Hardware stack levels used:    1
 24397 ;; Hardware stack levels required when called:    7
 24398 ;; This function calls:
 24399 ;;		Nothing
 24400 ;; This function is called by:
 24401 ;;		_UART1_Initialize
 24402 ;; This function uses a reentrant model
 24403 ;;
 24404                           
 24405                           	psect	text102
 24406  0193B6                     __ptext102:
 24407                           	opt callstack 0
 24408  0193B6                     _UART1_SetRxInterruptHandler:
 24409                           	opt callstack 21
 24410                           
 24411                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 24412                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24413                           
 24414                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24415                           ;incstack = 0
 24416  0193B6  50E1               	movf	fsr1l,w,c
 24417  0193B8  0FFD               	addlw	-3
 24418  0193BA  6ED9               	movwf	fsr2l,c
 24419  0193BC  50E2               	movf	fsr1h,w,c
 24420  0193BE  6EDA               	movwf	fsr2h,c
 24421  0193C0  0EFF               	movlw	255
 24422  0193C2  22DA               	addwfc	fsr2h,f,c
 24423  0193C4  006F FF78  F0BB    	movff	postinc2,_UART1_RxInterruptHandler
 24424  0193CA  006F FF78  F0BC    	movff	postinc2,_UART1_RxInterruptHandler+1
 24425  0193D0  006F FF74  F0BD    	movff	postdec2,_UART1_RxInterruptHandler+2
 24426                           
 24427                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24428  0193D6  52E5               	movf	postdec1,f,c
 24429  0193D8  52E5               	movf	postdec1,f,c
 24430  0193DA  52E5               	movf	postdec1,f,c
 24431  0193DC  0012               	return		;funcret
 24432  0193DE                     __end_of_UART1_SetRxInterruptHandler:
 24433                           	opt callstack 0
 24434                           
 24435 ;; *************** function _TMR6_Initialize *****************
 24436 ;; Defined at:
 24437 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 24438 ;; Parameters:    Size  Location     Type
 24439 ;;		None
 24440 ;; Auto vars:     Size  Location     Type
 24441 ;;		None
 24442 ;; Return value:  Size  Location     Type
 24443 ;;                  1  [STACK] void 
 24444 ;; Registers used:
 24445 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24446 ;; Tracked objects:
 24447 ;;		On entry : 3F/39
 24448 ;;		On exit  : 0/0
 24449 ;;		Unchanged: 0/0
 24450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24455 ;;Total ram usage:        0 bytes
 24456 ;; Hardware stack levels used:    1
 24457 ;; Hardware stack levels required when called:    8
 24458 ;; This function calls:
 24459 ;;		_TMR6_SetInterruptHandler
 24460 ;; This function is called by:
 24461 ;;		_SYSTEM_Initialize
 24462 ;; This function uses a reentrant model
 24463 ;;
 24464                           
 24465                           	psect	text103
 24466  01924C                     __ptext103:
 24467                           	opt callstack 0
 24468  01924C                     _TMR6_Initialize:
 24469                           	opt callstack 21
 24470                           
 24471                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 24472                           
 24473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24474                           ;incstack = 0
 24475  01924C  0E01               	movlw	1
 24476  01924E  6E96               	movwf	150,c	;volatile
 24477                           
 24478                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 24479  019250  6A95               	clrf	149,c	;volatile
 24480                           
 24481                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 24482  019252  6A97               	clrf	151,c	;volatile
 24483                           
 24484                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 24485  019254  0E7C               	movlw	124
 24486  019256  6E93               	movwf	147,c	;volatile
 24487                           
 24488                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 24489  019258  6A92               	clrf	146,c	;volatile
 24490                           
 24491                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 24492  01925A  0139               	movlb	57	; () banked
 24493  01925C  91A9               	bcf	169,0,b	;volatile
 24494                           
 24495                           ; BSR set to: 57
 24496                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 24497  01925E  8199               	bsf	153,0,b	;volatile
 24498                           
 24499                           ; BSR set to: 57
 24500                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 24501  019260  0ED6               	movlw	low _TMR6_DefaultInterruptHandler
 24502  019262  6EE6               	movwf	postinc1,c
 24503  019264  0E8B               	movlw	high _TMR6_DefaultInterruptHandler
 24504  019266  6EE6               	movwf	postinc1,c
 24505  019268  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 24506  01926A  6EE6               	movwf	postinc1,c
 24507  01926C  ECEF  F0C9         	call	_TMR6_SetInterruptHandler	;wreg free
 24508                           
 24509                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 24510  019270  0EE0               	movlw	224
 24511  019272  6E94               	movwf	148,c	;volatile
 24512                           
 24513                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24514  019274  0012               	return		;funcret
 24515  019276                     __end_of_TMR6_Initialize:
 24516                           	opt callstack 0
 24517                           
 24518 ;; *************** function _TMR6_SetInterruptHandler *****************
 24519 ;; Defined at:
 24520 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 24521 ;; Parameters:    Size  Location     Type
 24522 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24523 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 24524 ;; Auto vars:     Size  Location     Type
 24525 ;;		None
 24526 ;; Return value:  Size  Location     Type
 24527 ;;                  1  [STACK] void 
 24528 ;; Registers used:
 24529 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24530 ;; Tracked objects:
 24531 ;;		On entry : 3F/39
 24532 ;;		On exit  : 0/0
 24533 ;;		Unchanged: 0/0
 24534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24539 ;;Total ram usage:        0 bytes
 24540 ;; Hardware stack levels used:    1
 24541 ;; Hardware stack levels required when called:    7
 24542 ;; This function calls:
 24543 ;;		Nothing
 24544 ;; This function is called by:
 24545 ;;		_TMR6_Initialize
 24546 ;; This function uses a reentrant model
 24547 ;;
 24548                           
 24549                           	psect	text104
 24550  0193DE                     __ptext104:
 24551                           	opt callstack 0
 24552  0193DE                     _TMR6_SetInterruptHandler:
 24553                           	opt callstack 21
 24554                           
 24555                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 24556                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24557                           
 24558                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24559                           ;incstack = 0
 24560  0193DE  50E1               	movf	fsr1l,w,c
 24561  0193E0  0FFD               	addlw	-3
 24562  0193E2  6ED9               	movwf	fsr2l,c
 24563  0193E4  50E2               	movf	fsr1h,w,c
 24564  0193E6  6EDA               	movwf	fsr2h,c
 24565  0193E8  0EFF               	movlw	255
 24566  0193EA  22DA               	addwfc	fsr2h,f,c
 24567  0193EC  006F FF78  F0AF    	movff	postinc2,_TMR6_InterruptHandler
 24568  0193F2  006F FF78  F0B0    	movff	postinc2,_TMR6_InterruptHandler+1
 24569  0193F8  006F FF74  F0B1    	movff	postdec2,_TMR6_InterruptHandler+2
 24570                           
 24571                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24572  0193FE  52E5               	movf	postdec1,f,c
 24573  019400  52E5               	movf	postdec1,f,c
 24574  019402  52E5               	movf	postdec1,f,c
 24575  019404  0012               	return		;funcret
 24576  019406                     __end_of_TMR6_SetInterruptHandler:
 24577                           	opt callstack 0
 24578                           
 24579 ;; *************** function _TMR5_Initialize *****************
 24580 ;; Defined at:
 24581 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 24582 ;; Parameters:    Size  Location     Type
 24583 ;;		None
 24584 ;; Auto vars:     Size  Location     Type
 24585 ;;		None
 24586 ;; Return value:  Size  Location     Type
 24587 ;;                  1  [STACK] void 
 24588 ;; Registers used:
 24589 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 24590 ;; Tracked objects:
 24591 ;;		On entry : 0/39
 24592 ;;		On exit  : 0/0
 24593 ;;		Unchanged: 0/0
 24594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24599 ;;Total ram usage:        0 bytes
 24600 ;; Hardware stack levels used:    1
 24601 ;; Hardware stack levels required when called:    8
 24602 ;; This function calls:
 24603 ;;		_TMR5_SetInterruptHandler
 24604 ;; This function is called by:
 24605 ;;		_SYSTEM_Initialize
 24606 ;; This function uses a reentrant model
 24607 ;;
 24608                           
 24609                           	psect	text105
 24610  018D42                     __ptext105:
 24611                           	opt callstack 0
 24612  018D42                     _TMR5_Initialize:
 24613                           	opt callstack 21
 24614                           
 24615                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 24616                           
 24617                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24618                           ;incstack = 0
 24619  018D42  6A9B               	clrf	155,c	;volatile
 24620                           
 24621                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 24622  018D44  6A9C               	clrf	156,c	;volatile
 24623                           
 24624                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 24625  018D46  0E01               	movlw	1
 24626  018D48  6E9D               	movwf	157,c	;volatile
 24627                           
 24628                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 24629  018D4A  0E63               	movlw	99
 24630  018D4C  6E99               	movwf	153,c	;volatile
 24631                           
 24632                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 24633  018D4E  0EC0               	movlw	192
 24634  018D50  6E98               	movwf	152,c	;volatile
 24635                           
 24636                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 24637  018D52  5098               	movf	152,w,c	;volatile
 24638  018D54  006F FE64  F001    	movff	16281,btemp	;volatile
 24639  018D5A  6A02               	clrf	(btemp+1)^0,c
 24640  018D5C  0060  F004  F002   	movff	btemp,btemp+1
 24641  018D62  6A01               	clrf	btemp^0,c
 24642  018D64  1001               	iorwf	btemp^0,w,c
 24643  018D66  6E30               	movwf	_timer5ReloadVal^0,c	;volatile
 24644  018D68  5002               	movf	(btemp+1)^0,w,c
 24645  018D6A  6E31               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 24646                           
 24647                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 24648  018D6C  0139               	movlb	57	; () banked
 24649  018D6E  9DA8               	bcf	168,6,b	;volatile
 24650                           
 24651                           ; BSR set to: 57
 24652                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 24653  018D70  8D98               	bsf	152,6,b	;volatile
 24654                           
 24655                           ; BSR set to: 57
 24656                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 24657  018D72  0EF6               	movlw	low _TMR5_DefaultInterruptHandler
 24658  018D74  6EE6               	movwf	postinc1,c
 24659  018D76  0E94               	movlw	high _TMR5_DefaultInterruptHandler
 24660  018D78  6EE6               	movwf	postinc1,c
 24661  018D7A  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 24662  018D7C  6EE6               	movwf	postinc1,c
 24663  018D7E  EC03  F0CA         	call	_TMR5_SetInterruptHandler	;wreg free
 24664                           
 24665                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 24666  018D82  0E31               	movlw	49
 24667  018D84  6E9A               	movwf	154,c	;volatile
 24668                           
 24669                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24670  018D86  0012               	return		;funcret
 24671  018D88                     __end_of_TMR5_Initialize:
 24672                           	opt callstack 0
 24673                           
 24674 ;; *************** function _TMR5_SetInterruptHandler *****************
 24675 ;; Defined at:
 24676 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 24677 ;; Parameters:    Size  Location     Type
 24678 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24679 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 24680 ;; Auto vars:     Size  Location     Type
 24681 ;;		None
 24682 ;; Return value:  Size  Location     Type
 24683 ;;                  1  [STACK] void 
 24684 ;; Registers used:
 24685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24686 ;; Tracked objects:
 24687 ;;		On entry : 3F/39
 24688 ;;		On exit  : 0/0
 24689 ;;		Unchanged: 0/0
 24690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24695 ;;Total ram usage:        0 bytes
 24696 ;; Hardware stack levels used:    1
 24697 ;; Hardware stack levels required when called:    7
 24698 ;; This function calls:
 24699 ;;		Nothing
 24700 ;; This function is called by:
 24701 ;;		_TMR5_Initialize
 24702 ;; This function uses a reentrant model
 24703 ;;
 24704                           
 24705                           	psect	text106
 24706  019406                     __ptext106:
 24707                           	opt callstack 0
 24708  019406                     _TMR5_SetInterruptHandler:
 24709                           	opt callstack 21
 24710                           
 24711                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 24712                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24713                           
 24714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24715                           ;incstack = 0
 24716  019406  50E1               	movf	fsr1l,w,c
 24717  019408  0FFD               	addlw	-3
 24718  01940A  6ED9               	movwf	fsr2l,c
 24719  01940C  50E2               	movf	fsr1h,w,c
 24720  01940E  6EDA               	movwf	fsr2h,c
 24721  019410  0EFF               	movlw	255
 24722  019412  22DA               	addwfc	fsr2h,f,c
 24723  019414  006F FF78  F0AC    	movff	postinc2,_TMR5_InterruptHandler
 24724  01941A  006F FF78  F0AD    	movff	postinc2,_TMR5_InterruptHandler+1
 24725  019420  006F FF74  F0AE    	movff	postdec2,_TMR5_InterruptHandler+2
 24726                           
 24727                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24728  019426  52E5               	movf	postdec1,f,c
 24729  019428  52E5               	movf	postdec1,f,c
 24730  01942A  52E5               	movf	postdec1,f,c
 24731  01942C  0012               	return		;funcret
 24732  01942E                     __end_of_TMR5_SetInterruptHandler:
 24733                           	opt callstack 0
 24734                           
 24735 ;; *************** function _TMR3_Initialize *****************
 24736 ;; Defined at:
 24737 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 24738 ;; Parameters:    Size  Location     Type
 24739 ;;		None
 24740 ;; Auto vars:     Size  Location     Type
 24741 ;;		None
 24742 ;; Return value:  Size  Location     Type
 24743 ;;                  1  [STACK] void 
 24744 ;; Registers used:
 24745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 24746 ;; Tracked objects:
 24747 ;;		On entry : 0/39
 24748 ;;		On exit  : 0/0
 24749 ;;		Unchanged: 0/0
 24750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24755 ;;Total ram usage:        0 bytes
 24756 ;; Hardware stack levels used:    1
 24757 ;; Hardware stack levels required when called:    8
 24758 ;; This function calls:
 24759 ;;		_TMR3_SetInterruptHandler
 24760 ;; This function is called by:
 24761 ;;		_SYSTEM_Initialize
 24762 ;; This function uses a reentrant model
 24763 ;;
 24764                           
 24765                           	psect	text107
 24766  018D88                     __ptext107:
 24767                           	opt callstack 0
 24768  018D88                     _TMR3_Initialize:
 24769                           	opt callstack 21
 24770                           
 24771                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 24772                           
 24773                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24774                           ;incstack = 0
 24775  018D88  6AA7               	clrf	167,c	;volatile
 24776                           
 24777                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 24778  018D8A  6AA8               	clrf	168,c	;volatile
 24779                           
 24780                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 24781  018D8C  0E01               	movlw	1
 24782  018D8E  6EA9               	movwf	169,c	;volatile
 24783                           
 24784                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 24785  018D90  0E3C               	movlw	60
 24786  018D92  6EA5               	movwf	165,c	;volatile
 24787                           
 24788                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 24789  018D94  0EB0               	movlw	176
 24790  018D96  6EA4               	movwf	164,c	;volatile
 24791                           
 24792                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 24793  018D98  50A4               	movf	164,w,c	;volatile
 24794  018D9A  006F FE94  F001    	movff	16293,btemp	;volatile
 24795  018DA0  6A02               	clrf	(btemp+1)^0,c
 24796  018DA2  0060  F004  F002   	movff	btemp,btemp+1
 24797  018DA8  6A01               	clrf	btemp^0,c
 24798  018DAA  1001               	iorwf	btemp^0,w,c
 24799  018DAC  6E2C               	movwf	_timer3ReloadVal^0,c	;volatile
 24800  018DAE  5002               	movf	(btemp+1)^0,w,c
 24801  018DB0  6E2D               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 24802                           
 24803                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 24804  018DB2  0139               	movlb	57	; () banked
 24805  018DB4  9DA6               	bcf	166,6,b	;volatile
 24806                           
 24807                           ; BSR set to: 57
 24808                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 24809  018DB6  8D96               	bsf	150,6,b	;volatile
 24810                           
 24811                           ; BSR set to: 57
 24812                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 24813  018DB8  0E38               	movlw	low _TMR3_DefaultInterruptHandler
 24814  018DBA  6EE6               	movwf	postinc1,c
 24815  018DBC  0E99               	movlw	high _TMR3_DefaultInterruptHandler
 24816  018DBE  6EE6               	movwf	postinc1,c
 24817  018DC0  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 24818  018DC2  6EE6               	movwf	postinc1,c
 24819  018DC4  EC17  F0CA         	call	_TMR3_SetInterruptHandler	;wreg free
 24820                           
 24821                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 24822  018DC8  0E31               	movlw	49
 24823  018DCA  6EA6               	movwf	166,c	;volatile
 24824                           
 24825                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24826  018DCC  0012               	return		;funcret
 24827  018DCE                     __end_of_TMR3_Initialize:
 24828                           	opt callstack 0
 24829                           
 24830 ;; *************** function _TMR3_SetInterruptHandler *****************
 24831 ;; Defined at:
 24832 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 24833 ;; Parameters:    Size  Location     Type
 24834 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24835 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 24836 ;; Auto vars:     Size  Location     Type
 24837 ;;		None
 24838 ;; Return value:  Size  Location     Type
 24839 ;;                  1  [STACK] void 
 24840 ;; Registers used:
 24841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24842 ;; Tracked objects:
 24843 ;;		On entry : 0/1
 24844 ;;		On exit  : 0/0
 24845 ;;		Unchanged: 0/0
 24846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24851 ;;Total ram usage:        0 bytes
 24852 ;; Hardware stack levels used:    1
 24853 ;; Hardware stack levels required when called:    7
 24854 ;; This function calls:
 24855 ;;		Nothing
 24856 ;; This function is called by:
 24857 ;;		_TMR3_Initialize
 24858 ;;		_init_bsoc
 24859 ;; This function uses a reentrant model
 24860 ;;
 24861                           
 24862                           	psect	text108
 24863  01942E                     __ptext108:
 24864                           	opt callstack 0
 24865  01942E                     _TMR3_SetInterruptHandler:
 24866                           	opt callstack 22
 24867                           
 24868                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 24869                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24870                           
 24871                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24872                           ;incstack = 0
 24873  01942E  50E1               	movf	fsr1l,w,c
 24874  019430  0FFD               	addlw	-3
 24875  019432  6ED9               	movwf	fsr2l,c
 24876  019434  50E2               	movf	fsr1h,w,c
 24877  019436  6EDA               	movwf	fsr2h,c
 24878  019438  0EFF               	movlw	255
 24879  01943A  22DA               	addwfc	fsr2h,f,c
 24880  01943C  006F FF78  F0A9    	movff	postinc2,_TMR3_InterruptHandler
 24881  019442  006F FF78  F0AA    	movff	postinc2,_TMR3_InterruptHandler+1
 24882  019448  006F FF74  F0AB    	movff	postdec2,_TMR3_InterruptHandler+2
 24883                           
 24884                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24885  01944E  52E5               	movf	postdec1,f,c
 24886  019450  52E5               	movf	postdec1,f,c
 24887  019452  52E5               	movf	postdec1,f,c
 24888  019454  0012               	return		;funcret
 24889  019456                     __end_of_TMR3_SetInterruptHandler:
 24890                           	opt callstack 0
 24891                           
 24892 ;; *************** function _TMR2_Initialize *****************
 24893 ;; Defined at:
 24894 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 24895 ;; Parameters:    Size  Location     Type
 24896 ;;		None
 24897 ;; Auto vars:     Size  Location     Type
 24898 ;;		None
 24899 ;; Return value:  Size  Location     Type
 24900 ;;                  1  [STACK] void 
 24901 ;; Registers used:
 24902 ;;		wreg, status,2
 24903 ;; Tracked objects:
 24904 ;;		On entry : 3F/3F
 24905 ;;		On exit  : 3F/39
 24906 ;;		Unchanged: 0/0
 24907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24912 ;;Total ram usage:        0 bytes
 24913 ;; Hardware stack levels used:    1
 24914 ;; Hardware stack levels required when called:    7
 24915 ;; This function calls:
 24916 ;;		Nothing
 24917 ;; This function is called by:
 24918 ;;		_SYSTEM_Initialize
 24919 ;; This function uses a reentrant model
 24920 ;;
 24921                           
 24922                           	psect	text109
 24923  0197F6                     __ptext109:
 24924                           	opt callstack 0
 24925  0197F6                     _TMR2_Initialize:
 24926                           	opt callstack 22
 24927                           
 24928                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 24929                           
 24930                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24931                           ;incstack = 0
 24932  0197F6  0E01               	movlw	1
 24933  0197F8  6EAE               	movwf	174,c	;volatile
 24934                           
 24935                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 24936  0197FA  6AAD               	clrf	173,c	;volatile
 24937                           
 24938                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 24939  0197FC  6AAF               	clrf	175,c	;volatile
 24940                           
 24941                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 24942  0197FE  0E63               	movlw	99
 24943  019800  6EAB               	movwf	171,c	;volatile
 24944                           
 24945                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 24946  019802  6AAA               	clrf	170,c	;volatile
 24947                           
 24948                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 24949  019804  0139               	movlb	57	; () banked
 24950  019806  95A4               	bcf	164,2,b	;volatile
 24951                           
 24952                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 24953  019808  0EC0               	movlw	192
 24954  01980A  6EAC               	movwf	172,c	;volatile
 24955                           
 24956                           ; BSR set to: 57
 24957                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24958  01980C  0012               	return		;funcret
 24959  01980E                     __end_of_TMR2_Initialize:
 24960                           	opt callstack 0
 24961                           
 24962 ;; *************** function _SPI1_Initialize *****************
 24963 ;; Defined at:
 24964 ;;		line 64 in file "mcc_generated_files/spi1.c"
 24965 ;; Parameters:    Size  Location     Type
 24966 ;;		None
 24967 ;; Auto vars:     Size  Location     Type
 24968 ;;		None
 24969 ;; Return value:  Size  Location     Type
 24970 ;;                  1  [STACK] void 
 24971 ;; Registers used:
 24972 ;;		wreg, status,2
 24973 ;; Tracked objects:
 24974 ;;		On entry : 3F/39
 24975 ;;		On exit  : 3F/3D
 24976 ;;		Unchanged: 0/0
 24977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24982 ;;Total ram usage:        0 bytes
 24983 ;; Hardware stack levels used:    1
 24984 ;; Hardware stack levels required when called:    7
 24985 ;; This function calls:
 24986 ;;		Nothing
 24987 ;; This function is called by:
 24988 ;;		_SYSTEM_Initialize
 24989 ;; This function uses a reentrant model
 24990 ;;
 24991                           
 24992                           	psect	text110
 24993  01980E                     __ptext110:
 24994                           	opt callstack 0
 24995  01980E                     _SPI1_Initialize:
 24996                           	opt callstack 22
 24997                           
 24998                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 24999                           
 25000                           ; BSR set to: 57
 25001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25002                           ;incstack = 0
 25003  01980E  0E40               	movlw	64
 25004  019810  013D               	movlb	61	; () banked
 25005  019812  6F15               	movwf	21,b	;volatile
 25006                           
 25007                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 25008  019814  0E03               	movlw	3
 25009  019816  6F16               	movwf	22,b	;volatile
 25010                           
 25011                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 25012  019818  0E4F               	movlw	79
 25013  01981A  6F19               	movwf	25,b	;volatile
 25014                           
 25015                           ; BSR set to: 61
 25016                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 25017  01981C  6B1C               	clrf	28,b	;volatile
 25018                           
 25019                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 25020  01981E  0E83               	movlw	131
 25021  019820  6F14               	movwf	20,b	;volatile
 25022                           
 25023                           ; BSR set to: 61
 25024                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25025  019822  0012               	return		;funcret
 25026  019824                     __end_of_SPI1_Initialize:
 25027                           	opt callstack 0
 25028                           
 25029 ;; *************** function _PWM8_Initialize *****************
 25030 ;; Defined at:
 25031 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 25032 ;; Parameters:    Size  Location     Type
 25033 ;;		None
 25034 ;; Auto vars:     Size  Location     Type
 25035 ;;		None
 25036 ;; Return value:  Size  Location     Type
 25037 ;;                  1  [STACK] void 
 25038 ;; Registers used:
 25039 ;;		wreg, status,2
 25040 ;; Tracked objects:
 25041 ;;		On entry : 0/3E
 25042 ;;		On exit  : 3F/3F
 25043 ;;		Unchanged: 0/0
 25044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25049 ;;Total ram usage:        0 bytes
 25050 ;; Hardware stack levels used:    1
 25051 ;; Hardware stack levels required when called:    7
 25052 ;; This function calls:
 25053 ;;		Nothing
 25054 ;; This function is called by:
 25055 ;;		_SYSTEM_Initialize
 25056 ;; This function uses a reentrant model
 25057 ;;
 25058                           
 25059                           	psect	text111
 25060  019824                     __ptext111:
 25061                           	opt callstack 0
 25062  019824                     _PWM8_Initialize:
 25063                           	opt callstack 22
 25064                           
 25065                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 25066                           
 25067                           ; BSR set to: 61
 25068                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25069                           ;incstack = 0
 25070  019824  0E80               	movlw	128
 25071  019826  6E62               	movwf	98,c	;volatile
 25072                           
 25073                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 25074  019828  6A61               	clrf	97,c	;volatile
 25075                           
 25076                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 25077  01982A  0E40               	movlw	64
 25078  01982C  6E60               	movwf	96,c	;volatile
 25079                           
 25080                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 25081  01982E  013F               	movlb	63	; () banked
 25082  019830  515F               	movf	95,w,b	;volatile
 25083  019832  0B3F               	andlw	-193
 25084  019834  0940               	iorlw	64
 25085  019836  6F5F               	movwf	95,b	;volatile
 25086                           
 25087                           ; BSR set to: 63
 25088                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25089  019838  0012               	return		;funcret
 25090  01983A                     __end_of_PWM8_Initialize:
 25091                           	opt callstack 0
 25092                           
 25093 ;; *************** function _PMD_Initialize *****************
 25094 ;; Defined at:
 25095 ;;		line 90 in file "mcc_generated_files/mcc.c"
 25096 ;; Parameters:    Size  Location     Type
 25097 ;;		None
 25098 ;; Auto vars:     Size  Location     Type
 25099 ;;		None
 25100 ;; Return value:  Size  Location     Type
 25101 ;;                  1  [STACK] void 
 25102 ;; Registers used:
 25103 ;;		None
 25104 ;; Tracked objects:
 25105 ;;		On entry : 3F/39
 25106 ;;		On exit  : 3F/39
 25107 ;;		Unchanged: 0/0
 25108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25113 ;;Total ram usage:        0 bytes
 25114 ;; Hardware stack levels used:    1
 25115 ;; Hardware stack levels required when called:    7
 25116 ;; This function calls:
 25117 ;;		Nothing
 25118 ;; This function is called by:
 25119 ;;		_SYSTEM_Initialize
 25120 ;; This function uses a reentrant model
 25121 ;;
 25122                           
 25123                           	psect	text112
 25124  019850                     __ptext112:
 25125                           	opt callstack 0
 25126  019850                     _PMD_Initialize:
 25127                           	opt callstack 22
 25128                           
 25129                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 25130                           
 25131                           ; BSR set to: 63
 25132                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25133                           ;incstack = 0
 25134  019850  0139               	movlb	57	; () banked
 25135  019852  6BC0               	clrf	192,b	;volatile
 25136                           
 25137                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 25138  019854  6BC1               	clrf	193,b	;volatile
 25139                           
 25140                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 25141  019856  6BC2               	clrf	194,b	;volatile
 25142                           
 25143                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 25144  019858  6BC3               	clrf	195,b	;volatile
 25145                           
 25146                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 25147  01985A  6BC4               	clrf	196,b	;volatile
 25148                           
 25149                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 25150  01985C  6BC5               	clrf	197,b	;volatile
 25151                           
 25152                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 25153  01985E  6BC6               	clrf	198,b	;volatile
 25154                           
 25155                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 25156  019860  6BC7               	clrf	199,b	;volatile
 25157                           
 25158                           ; BSR set to: 57
 25159                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25160  019862  0012               	return		;funcret
 25161  019864                     __end_of_PMD_Initialize:
 25162                           	opt callstack 0
 25163                           
 25164 ;; *************** function _PIN_MANAGER_Initialize *****************
 25165 ;; Defined at:
 25166 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 25167 ;; Parameters:    Size  Location     Type
 25168 ;;		None
 25169 ;; Auto vars:     Size  Location     Type
 25170 ;;		None
 25171 ;; Return value:  Size  Location     Type
 25172 ;;                  1  [STACK] void 
 25173 ;; Registers used:
 25174 ;;		wreg, status,2
 25175 ;; Tracked objects:
 25176 ;;		On entry : 3F/39
 25177 ;;		On exit  : 3F/3A
 25178 ;;		Unchanged: 0/0
 25179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25184 ;;Total ram usage:        0 bytes
 25185 ;; Hardware stack levels used:    1
 25186 ;; Hardware stack levels required when called:    7
 25187 ;; This function calls:
 25188 ;;		Nothing
 25189 ;; This function is called by:
 25190 ;;		_SYSTEM_Initialize
 25191 ;; This function uses a reentrant model
 25192 ;;
 25193                           
 25194                           	psect	text113
 25195  018364                     __ptext113:
 25196                           	opt callstack 0
 25197  018364                     _PIN_MANAGER_Initialize:
 25198                           	opt callstack 22
 25199                           
 25200                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 25201                           
 25202                           ; BSR set to: 57
 25203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25204                           ;incstack = 0
 25205  018364  0E07               	movlw	7
 25206  018366  6EBE               	movwf	190,c	;volatile
 25207                           
 25208                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 25209  018368  0E80               	movlw	128
 25210  01836A  6EBD               	movwf	189,c	;volatile
 25211                           
 25212                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 25213  01836C  6ABA               	clrf	186,c	;volatile
 25214                           
 25215                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 25216  01836E  6ABF               	clrf	191,c	;volatile
 25217                           
 25218                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 25219  018370  6ABB               	clrf	187,c	;volatile
 25220                           
 25221                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 25222  018372  0E07               	movlw	7
 25223  018374  6EBC               	movwf	188,c	;volatile
 25224                           
 25225                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 25226  018376  6AC6               	clrf	198,c	;volatile
 25227                           
 25228                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 25229  018378  0E0F               	movlw	15
 25230  01837A  6EC7               	movwf	199,c	;volatile
 25231                           
 25232                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 25233  01837C  68C2               	setf	194,c	;volatile
 25234                           
 25235                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 25236  01837E  0EBF               	movlw	191
 25237  018380  6EC3               	movwf	195,c	;volatile
 25238                           
 25239                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 25240  018382  0E90               	movlw	144
 25241  018384  6EC4               	movwf	196,c	;volatile
 25242                           
 25243                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 25244  018386  0E0C               	movlw	12
 25245  018388  6EC5               	movwf	197,c	;volatile
 25246                           
 25247                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 25248  01838A  013A               	movlb	58	; () banked
 25249  01838C  6B70               	clrf	112,b	;volatile
 25250                           
 25251                           ; BSR set to: 58
 25252                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 25253  01838E  6B60               	clrf	96,b	;volatile
 25254                           
 25255                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 25256  018390  0E3C               	movlw	60
 25257  018392  6F50               	movwf	80,b	;volatile
 25258                           
 25259                           ; BSR set to: 58
 25260                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 25261  018394  6B80               	clrf	128,b	;volatile
 25262                           
 25263                           ; BSR set to: 58
 25264                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 25265  018396  6B90               	clrf	144,b	;volatile
 25266                           
 25267                           ; BSR set to: 58
 25268                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 25269  018398  6940               	setf	64,b	;volatile
 25270                           
 25271                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 25272  01839A  0E0C               	movlw	12
 25273  01839C  6F71               	movwf	113,b	;volatile
 25274                           
 25275                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 25276  01839E  0E0F               	movlw	15
 25277  0183A0  6F91               	movwf	145,b	;volatile
 25278                           
 25279                           ; BSR set to: 58
 25280                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 25281  0183A2  6B81               	clrf	129,b	;volatile
 25282                           
 25283                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 25284  0183A4  0E83               	movlw	131
 25285  0183A6  6F51               	movwf	81,b	;volatile
 25286                           
 25287                           ; BSR set to: 58
 25288                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 25289  0183A8  6B41               	clrf	65,b	;volatile
 25290                           
 25291                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 25292  0183AA  0E97               	movlw	151
 25293  0183AC  6F61               	movwf	97,b	;volatile
 25294                           
 25295                           ; BSR set to: 58
 25296                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 25297  0183AE  6B82               	clrf	130,b	;volatile
 25298                           
 25299                           ; BSR set to: 58
 25300                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 25301  0183B0  6B92               	clrf	146,b	;volatile
 25302                           
 25303                           ; BSR set to: 58
 25304                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 25305  0183B2  6B42               	clrf	66,b	;volatile
 25306                           
 25307                           ; BSR set to: 58
 25308                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 25309  0183B4  6B52               	clrf	82,b	;volatile
 25310                           
 25311                           ; BSR set to: 58
 25312                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 25313  0183B6  6B62               	clrf	98,b	;volatile
 25314                           
 25315                           ; BSR set to: 58
 25316                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 25317  0183B8  6B72               	clrf	114,b	;volatile
 25318                           
 25319                           ; BSR set to: 58
 25320                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 25321  0183BA  6943               	setf	67,b	;volatile
 25322                           
 25323                           ; BSR set to: 58
 25324                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 25325  0183BC  6953               	setf	83,b	;volatile
 25326                           
 25327                           ; BSR set to: 58
 25328                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 25329  0183BE  6963               	setf	99,b	;volatile
 25330                           
 25331                           ; BSR set to: 58
 25332                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 25333  0183C0  6973               	setf	115,b	;volatile
 25334                           
 25335                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 25336  0183C2  0E07               	movlw	7
 25337  0183C4  6F83               	movwf	131,b	;volatile
 25338                           
 25339                           ; BSR set to: 58
 25340                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 25341  0183C6  6993               	setf	147,b	;volatile
 25342                           
 25343                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 25344  0183C8  0E0F               	movlw	15
 25345  0183CA  6FE8               	movwf	232,b	;volatile
 25346                           
 25347                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 25348  0183CC  0E13               	movlw	19
 25349  0183CE  6FDE               	movwf	222,b	;volatile
 25350                           
 25351                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 25352  0183D0  0E16               	movlw	22
 25353  0183D2  6F0E               	movwf	14,b	;volatile
 25354                           
 25355                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 25356  0183D4  0E1E               	movlw	30
 25357  0183D6  6F13               	movwf	19,b	;volatile
 25358                           
 25359                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 25360  0183D8  0E08               	movlw	8
 25361  0183DA  6FC0               	movwf	192,b	;volatile
 25362                           
 25363                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 25364  0183DC  0E10               	movlw	16
 25365  0183DE  6F19               	movwf	25,b	;volatile
 25366                           
 25367                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 25368  0183E0  0E09               	movlw	9
 25369  0183E2  6FC1               	movwf	193,b	;volatile
 25370                           
 25371                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 25372  0183E4  0E1F               	movlw	31
 25373  0183E6  6F15               	movwf	21,b	;volatile
 25374                           
 25375                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 25376  0183E8  0E13               	movlw	19
 25377  0183EA  6F16               	movwf	22,b	;volatile
 25378                           
 25379                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 25380  0183EC  0E17               	movlw	23
 25381  0183EE  6FE5               	movwf	229,b	;volatile
 25382                           
 25383                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 25384  0183F0  0E14               	movlw	20
 25385  0183F2  6FDF               	movwf	223,b	;volatile
 25386                           
 25387                           ; BSR set to: 58
 25388                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 25389  0183F4  0012               	return		;funcret
 25390  0183F6                     __end_of_PIN_MANAGER_Initialize:
 25391                           	opt callstack 0
 25392                           
 25393 ;; *************** function _OSCILLATOR_Initialize *****************
 25394 ;; Defined at:
 25395 ;;		line 72 in file "mcc_generated_files/mcc.c"
 25396 ;; Parameters:    Size  Location     Type
 25397 ;;		None
 25398 ;; Auto vars:     Size  Location     Type
 25399 ;;		None
 25400 ;; Return value:  Size  Location     Type
 25401 ;;                  1  [STACK] void 
 25402 ;; Registers used:
 25403 ;;		wreg, status,2
 25404 ;; Tracked objects:
 25405 ;;		On entry : 3F/3A
 25406 ;;		On exit  : 3F/39
 25407 ;;		Unchanged: 0/0
 25408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25413 ;;Total ram usage:        0 bytes
 25414 ;; Hardware stack levels used:    1
 25415 ;; Hardware stack levels required when called:    7
 25416 ;; This function calls:
 25417 ;;		Nothing
 25418 ;; This function is called by:
 25419 ;;		_SYSTEM_Initialize
 25420 ;; This function uses a reentrant model
 25421 ;;
 25422                           
 25423                           	psect	text114
 25424  01983A                     __ptext114:
 25425                           	opt callstack 0
 25426  01983A                     _OSCILLATOR_Initialize:
 25427                           	opt callstack 22
 25428                           
 25429                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 25430                           
 25431                           ; BSR set to: 58
 25432                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25433                           ;incstack = 0
 25434  01983A  0E20               	movlw	32
 25435  01983C  0139               	movlb	57	; () banked
 25436  01983E  6FD9               	movwf	217,b	;volatile
 25437                           
 25438                           ; BSR set to: 57
 25439                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 25440  019840  6BDB               	clrf	219,b	;volatile
 25441                           
 25442                           ; BSR set to: 57
 25443                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 25444  019842  6BDD               	clrf	221,b	;volatile
 25445                           
 25446                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 25447  019844  0E02               	movlw	2
 25448  019846  6FDF               	movwf	223,b	;volatile
 25449                           
 25450                           ; BSR set to: 57
 25451                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 25452  019848  6BDE               	clrf	222,b	;volatile
 25453  01984A                     l173:
 25454                           
 25455                           ; BSR set to: 57
 25456                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 25457  01984A  B1DC               	btfsc	220,0,b	;volatile
 25458  01984C  0012               	return	
 25459  01984E  D7FD               	goto	l173
 25460  019850                     __end_of_OSCILLATOR_Initialize:
 25461                           	opt callstack 0
 25462                           
 25463 ;; *************** function _INTERRUPT_Initialize *****************
 25464 ;; Defined at:
 25465 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 25466 ;; Parameters:    Size  Location     Type
 25467 ;;		None
 25468 ;; Auto vars:     Size  Location     Type
 25469 ;;  state           1  [STACK] _Bool 
 25470 ;; Return value:  Size  Location     Type
 25471 ;;                  1  [STACK] void 
 25472 ;; Registers used:
 25473 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 25474 ;; Tracked objects:
 25475 ;;		On entry : 0/0
 25476 ;;		On exit  : 3F/39
 25477 ;;		Unchanged: 0/0
 25478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25483 ;;Total ram usage:        0 bytes
 25484 ;; Hardware stack levels used:    1
 25485 ;; Hardware stack levels required when called:    7
 25486 ;; This function calls:
 25487 ;;		Nothing
 25488 ;; This function is called by:
 25489 ;;		_SYSTEM_Initialize
 25490 ;; This function uses a reentrant model
 25491 ;;
 25492                           
 25493                           	psect	text115
 25494  0187D2                     __ptext115:
 25495                           	opt callstack 0
 25496  0187D2                     _INTERRUPT_Initialize:
 25497                           	opt callstack 0
 25498                           
 25499                           ; BSR set to: 57
 25500                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25501  0187D2  52E6               	movf	postinc1,f,c
 25502                           
 25503                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 25504                           
 25505                           ;incstack = 0
 25506  0187D4  8AD2               	bsf	210,5,c	;volatile
 25507                           
 25508                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 25509  0187D6  AED2               	btfss	16338,7,c	;volatile
 25510  0187D8  D003               	goto	u8230
 25511  0187DA  6A0C               	clrf	(btemp+11)^0,c
 25512  0187DC  2A0C               	incf	(btemp+11)^0,f,c
 25513  0187DE  D001               	goto	u8248
 25514  0187E0                     u8230:
 25515  0187E0  6A0C               	clrf	(btemp+11)^0,c
 25516  0187E2                     u8248:
 25517                           
 25518                           ;stkvar	_state @ sp[(-1)+0]
 25519  0187E2  0EFF               	movlw	-1
 25520  0187E4  0060  F033  FFE3   	movff	btemp+11,plusw1
 25521                           
 25522                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 25523  0187EA  9ED2               	bcf	16338,7,c	;volatile
 25524                           
 25525                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 25526  0187EC  0E55               	movlw	85
 25527  0187EE  6ED4               	movwf	212,c	;volatile
 25528                           
 25529                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 25530  0187F0  0EAA               	movlw	170
 25531  0187F2  6ED4               	movwf	212,c	;volatile
 25532                           
 25533                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 25534  0187F4  90D4               	bcf	212,0,c	;volatile
 25535                           
 25536                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 25537  0187F6  0138               	movlb	56	; () banked
 25538  0187F8  6B9F               	clrf	159,b	;volatile
 25539                           
 25540                           ; BSR set to: 56
 25541                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 25542  0187FA  6B9E               	clrf	158,b	;volatile
 25543                           
 25544                           ; BSR set to: 56
 25545                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 25546  0187FC  0E08               	movlw	8
 25547  0187FE  6F9D               	movwf	157,b	;volatile
 25548                           
 25549                           ; BSR set to: 56
 25550                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 25551  018800  0E55               	movlw	85
 25552  018802  6ED4               	movwf	212,c	;volatile
 25553                           
 25554                           ; BSR set to: 56
 25555                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 25556  018804  0EAA               	movlw	170
 25557  018806  6ED4               	movwf	212,c	;volatile
 25558                           
 25559                           ; BSR set to: 56
 25560                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 25561  018808  80D4               	bsf	212,0,c	;volatile
 25562                           
 25563                           ; BSR set to: 56
 25564                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 25565                           ;stkvar	_state @ sp[(-1)+0]
 25566  01880A  0EFF               	movlw	-1
 25567  01880C  B0E3               	btfsc	plusw1,0,c
 25568  01880E  D002               	bra	u8255
 25569  018810  9ED2               	bcf	16338,7,c	;volatile
 25570  018812  D001               	bra	u8256
 25571  018814                     u8255:
 25572  018814  8ED2               	bsf	16338,7,c	;volatile
 25573  018816                     u8256:
 25574                           
 25575                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 25576  018816  0139               	movlb	57	; () banked
 25577  018818  8782               	bsf	130,3,b	;volatile
 25578                           
 25579                           ; BSR set to: 57
 25580                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 25581  01881A  8382               	bsf	130,1,b	;volatile
 25582                           
 25583                           ; BSR set to: 57
 25584                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 25585  01881C  8182               	bsf	130,0,b	;volatile
 25586                           
 25587                           ; BSR set to: 57
 25588                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 25589  01881E  8582               	bsf	130,2,b	;volatile
 25590                           
 25591                           ; BSR set to: 57
 25592                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 25593  018820  8786               	bsf	134,3,b	;volatile
 25594                           
 25595                           ; BSR set to: 57
 25596                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 25597  018822  8586               	bsf	134,2,b	;volatile
 25598                           
 25599                           ; BSR set to: 57
 25600                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 25601  018824  8983               	bsf	131,4,b	;volatile
 25602                           
 25603                           ; BSR set to: 57
 25604                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 25605  018826  8783               	bsf	131,3,b	;volatile
 25606                           
 25607                           ; BSR set to: 57
 25608                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 25609  018828  8181               	bsf	129,0,b	;volatile
 25610                           
 25611                           ; BSR set to: 57
 25612                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 25613  01882A  9185               	bcf	133,0,b	;volatile
 25614                           
 25615                           ; BSR set to: 57
 25616                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 25617  01882C  8189               	bsf	137,0,b	;volatile
 25618                           
 25619                           ; BSR set to: 57
 25620                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 25621  01882E  9D88               	bcf	136,6,b	;volatile
 25622                           
 25623                           ; BSR set to: 57
 25624                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 25625  018830  8581               	bsf	129,2,b	;volatile
 25626                           
 25627                           ; BSR set to: 57
 25628                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 25629  018832  8781               	bsf	129,3,b	;volatile
 25630                           
 25631                           ; BSR set to: 57
 25632                           ;mcc_generated_files/interrupt_manager.c: 86:     IPR6bits.TMR3IP = 0;
 25633  018834  9D86               	bcf	134,6,b	;volatile
 25634                           
 25635                           ; BSR set to: 57
 25636                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 25637  018836  52E5               	movf	postdec1,f,c
 25638  018838  0012               	return		;funcret
 25639  01883A                     __end_of_INTERRUPT_Initialize:
 25640                           	opt callstack 0
 25641                           
 25642 ;; *************** function _FVR_Initialize *****************
 25643 ;; Defined at:
 25644 ;;		line 58 in file "mcc_generated_files/fvr.c"
 25645 ;; Parameters:    Size  Location     Type
 25646 ;;		None
 25647 ;; Auto vars:     Size  Location     Type
 25648 ;;		None
 25649 ;; Return value:  Size  Location     Type
 25650 ;;                  1  [STACK] void 
 25651 ;; Registers used:
 25652 ;;		wreg, status,2
 25653 ;; Tracked objects:
 25654 ;;		On entry : 3F/39
 25655 ;;		On exit  : 3F/3E
 25656 ;;		Unchanged: 0/0
 25657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25662 ;;Total ram usage:        0 bytes
 25663 ;; Hardware stack levels used:    1
 25664 ;; Hardware stack levels required when called:    7
 25665 ;; This function calls:
 25666 ;;		Nothing
 25667 ;; This function is called by:
 25668 ;;		_SYSTEM_Initialize
 25669 ;; This function uses a reentrant model
 25670 ;;
 25671                           
 25672                           	psect	text116
 25673  01990E                     __ptext116:
 25674                           	opt callstack 0
 25675  01990E                     _FVR_Initialize:
 25676                           	opt callstack 22
 25677                           
 25678                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 25679                           
 25680                           ; BSR set to: 57
 25681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25682                           ;incstack = 0
 25683  01990E  0EAF               	movlw	175
 25684  019910  013E               	movlb	62	; () banked
 25685  019912  6FC1               	movwf	193,b	;volatile
 25686                           
 25687                           ; BSR set to: 62
 25688                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25689  019914  0012               	return		;funcret
 25690  019916                     __end_of_FVR_Initialize:
 25691                           	opt callstack 0
 25692                           
 25693 ;; *************** function _EXT_INT_Initialize *****************
 25694 ;; Defined at:
 25695 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 25696 ;; Parameters:    Size  Location     Type
 25697 ;;		None
 25698 ;; Auto vars:     Size  Location     Type
 25699 ;;		None
 25700 ;; Return value:  Size  Location     Type
 25701 ;;                  1  [STACK] void 
 25702 ;; Registers used:
 25703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25704 ;; Tracked objects:
 25705 ;;		On entry : 3F/39
 25706 ;;		On exit  : 3F/39
 25707 ;;		Unchanged: 0/0
 25708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25713 ;;Total ram usage:        0 bytes
 25714 ;; Hardware stack levels used:    1
 25715 ;; Hardware stack levels required when called:    8
 25716 ;; This function calls:
 25717 ;;		_INT0_SetInterruptHandler
 25718 ;;		_INT1_SetInterruptHandler
 25719 ;; This function is called by:
 25720 ;;		_SYSTEM_Initialize
 25721 ;; This function uses a reentrant model
 25722 ;;
 25723                           
 25724                           	psect	text117
 25725  0190D4                     __ptext117:
 25726                           	opt callstack 0
 25727  0190D4                     _EXT_INT_Initialize:
 25728                           	opt callstack 21
 25729                           
 25730                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 25731                           
 25732                           ; BSR set to: 62
 25733                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25734                           ;incstack = 0
 25735  0190D4  0139               	movlb	57	; () banked
 25736  0190D6  91A1               	bcf	161,0,b	;volatile
 25737                           
 25738                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 25739  0190D8  90D2               	bcf	210,0,c	;volatile
 25740                           
 25741                           ; BSR set to: 57
 25742                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 25743  0190DA  0E3A               	movlw	low _INT0_DefaultInterruptHandler
 25744  0190DC  6EE6               	movwf	postinc1,c
 25745  0190DE  0E99               	movlw	high _INT0_DefaultInterruptHandler
 25746  0190E0  6EE6               	movwf	postinc1,c
 25747  0190E2  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 25748  0190E4  6EE6               	movwf	postinc1,c
 25749  0190E6  EC3F  F0CA         	call	_INT0_SetInterruptHandler	;wreg free
 25750                           
 25751                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 25752  0190EA  0139               	movlb	57	; () banked
 25753  0190EC  8191               	bsf	145,0,b	;volatile
 25754                           
 25755                           ; BSR set to: 57
 25756                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 25757  0190EE  91A5               	bcf	165,0,b	;volatile
 25758                           
 25759                           ; BSR set to: 57
 25760                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 25761  0190F0  92D2               	bcf	210,1,c	;volatile
 25762                           
 25763                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 25764  0190F2  0E36               	movlw	low _INT1_DefaultInterruptHandler
 25765  0190F4  6EE6               	movwf	postinc1,c
 25766  0190F6  0E99               	movlw	high _INT1_DefaultInterruptHandler
 25767  0190F8  6EE6               	movwf	postinc1,c
 25768  0190FA  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 25769  0190FC  6EE6               	movwf	postinc1,c
 25770  0190FE  EC2B  F0CA         	call	_INT1_SetInterruptHandler	;wreg free
 25771                           
 25772                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 25773  019102  0139               	movlb	57	; () banked
 25774  019104  8195               	bsf	149,0,b	;volatile
 25775                           
 25776                           ; BSR set to: 57
 25777                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25778  019106  0012               	return		;funcret
 25779  019108                     __end_of_EXT_INT_Initialize:
 25780                           	opt callstack 0
 25781                           
 25782 ;; *************** function _INT1_SetInterruptHandler *****************
 25783 ;; Defined at:
 25784 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 25785 ;; Parameters:    Size  Location     Type
 25786 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25787 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 25788 ;; Auto vars:     Size  Location     Type
 25789 ;;		None
 25790 ;; Return value:  Size  Location     Type
 25791 ;;                  1  [STACK] void 
 25792 ;; Registers used:
 25793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25794 ;; Tracked objects:
 25795 ;;		On entry : 3F/39
 25796 ;;		On exit  : 0/0
 25797 ;;		Unchanged: 0/0
 25798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25803 ;;Total ram usage:        0 bytes
 25804 ;; Hardware stack levels used:    1
 25805 ;; Hardware stack levels required when called:    7
 25806 ;; This function calls:
 25807 ;;		Nothing
 25808 ;; This function is called by:
 25809 ;;		_EXT_INT_Initialize
 25810 ;;		_start_switch_handler
 25811 ;; This function uses a reentrant model
 25812 ;;
 25813                           
 25814                           	psect	text118
 25815  019456                     __ptext118:
 25816                           	opt callstack 0
 25817  019456                     _INT1_SetInterruptHandler:
 25818                           	opt callstack 22
 25819                           
 25820                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 25821                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25822                           
 25823                           ; BSR set to: 57
 25824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25825                           ;incstack = 0
 25826  019456  50E1               	movf	fsr1l,w,c
 25827  019458  0FFD               	addlw	-3
 25828  01945A  6ED9               	movwf	fsr2l,c
 25829  01945C  50E2               	movf	fsr1h,w,c
 25830  01945E  6EDA               	movwf	fsr2h,c
 25831  019460  0EFF               	movlw	255
 25832  019462  22DA               	addwfc	fsr2h,f,c
 25833  019464  006F FF78  F0C4    	movff	postinc2,_INT1_InterruptHandler
 25834  01946A  006F FF78  F0C5    	movff	postinc2,_INT1_InterruptHandler+1
 25835  019470  006F FF74  F0C6    	movff	postdec2,_INT1_InterruptHandler+2
 25836                           
 25837                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25838  019476  52E5               	movf	postdec1,f,c
 25839  019478  52E5               	movf	postdec1,f,c
 25840  01947A  52E5               	movf	postdec1,f,c
 25841  01947C  0012               	return		;funcret
 25842  01947E                     __end_of_INT1_SetInterruptHandler:
 25843                           	opt callstack 0
 25844                           
 25845 ;; *************** function _INT0_SetInterruptHandler *****************
 25846 ;; Defined at:
 25847 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 25848 ;; Parameters:    Size  Location     Type
 25849 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25850 ;;		 -> INT0_DefaultInterruptHandler(1), 
 25851 ;; Auto vars:     Size  Location     Type
 25852 ;;		None
 25853 ;; Return value:  Size  Location     Type
 25854 ;;                  1  [STACK] void 
 25855 ;; Registers used:
 25856 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25857 ;; Tracked objects:
 25858 ;;		On entry : 3F/39
 25859 ;;		On exit  : 0/0
 25860 ;;		Unchanged: 0/0
 25861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25866 ;;Total ram usage:        0 bytes
 25867 ;; Hardware stack levels used:    1
 25868 ;; Hardware stack levels required when called:    7
 25869 ;; This function calls:
 25870 ;;		Nothing
 25871 ;; This function is called by:
 25872 ;;		_EXT_INT_Initialize
 25873 ;; This function uses a reentrant model
 25874 ;;
 25875                           
 25876                           	psect	text119
 25877  01947E                     __ptext119:
 25878                           	opt callstack 0
 25879  01947E                     _INT0_SetInterruptHandler:
 25880                           	opt callstack 21
 25881                           
 25882                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 25883                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25884                           
 25885                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25886                           ;incstack = 0
 25887  01947E  50E1               	movf	fsr1l,w,c
 25888  019480  0FFD               	addlw	-3
 25889  019482  6ED9               	movwf	fsr2l,c
 25890  019484  50E2               	movf	fsr1h,w,c
 25891  019486  6EDA               	movwf	fsr2h,c
 25892  019488  0EFF               	movlw	255
 25893  01948A  22DA               	addwfc	fsr2h,f,c
 25894  01948C  006F FF78  F021    	movff	postinc2,_INT0_InterruptHandler
 25895  019492  006F FF78  F022    	movff	postinc2,_INT0_InterruptHandler+1
 25896  019498  006F FF74  F023    	movff	postdec2,_INT0_InterruptHandler+2
 25897                           
 25898                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25899  01949E  52E5               	movf	postdec1,f,c
 25900  0194A0  52E5               	movf	postdec1,f,c
 25901  0194A2  52E5               	movf	postdec1,f,c
 25902  0194A4  0012               	return		;funcret
 25903  0194A6                     __end_of_INT0_SetInterruptHandler:
 25904                           	opt callstack 0
 25905                           
 25906 ;; *************** function _DMA2_Initialize *****************
 25907 ;; Defined at:
 25908 ;;		line 61 in file "mcc_generated_files/dma2.c"
 25909 ;; Parameters:    Size  Location     Type
 25910 ;;		None
 25911 ;; Auto vars:     Size  Location     Type
 25912 ;;		None
 25913 ;; Return value:  Size  Location     Type
 25914 ;;                  1  [STACK] void 
 25915 ;; Registers used:
 25916 ;;		wreg, status,2
 25917 ;; Tracked objects:
 25918 ;;		On entry : 3F/3D
 25919 ;;		On exit  : 3F/3B
 25920 ;;		Unchanged: 0/0
 25921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25926 ;;Total ram usage:        0 bytes
 25927 ;; Hardware stack levels used:    1
 25928 ;; Hardware stack levels required when called:    7
 25929 ;; This function calls:
 25930 ;;		Nothing
 25931 ;; This function is called by:
 25932 ;;		_SYSTEM_Initialize
 25933 ;; This function uses a reentrant model
 25934 ;;
 25935                           
 25936                           	psect	text120
 25937  018A7E                     __ptext120:
 25938                           	opt callstack 0
 25939  018A7E                     _DMA2_Initialize:
 25940                           	opt callstack 22
 25941                           
 25942                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 25943                           
 25944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25945                           ;incstack = 0
 25946  018A7E  0E00               	movlw	0
 25947  018A80  013B               	movlb	59	; () banked
 25948  018A82  6FD9               	movwf	217,b	;volatile
 25949  018A84  0E10               	movlw	16
 25950  018A86  6FDA               	movwf	218,b	;volatile
 25951  018A88  0E00               	movlw	0
 25952  018A8A  6FDB               	movwf	219,b	;volatile
 25953                           
 25954                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 25955  018A8C  0E3F               	movlw	63
 25956  018A8E  6FD1               	movwf	209,b	;volatile
 25957  018A90  0EBB               	movlw	187
 25958  018A92  6FD0               	movwf	208,b	;volatile
 25959                           
 25960                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 25961  018A94  0E03               	movlw	3
 25962  018A96  6FDD               	movwf	221,b	;volatile
 25963                           
 25964                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 25965  018A98  0E00               	movlw	0
 25966  018A9A  6FD8               	movwf	216,b	;volatile
 25967  018A9C  0E01               	movlw	1
 25968  018A9E  6FD7               	movwf	215,b	;volatile
 25969                           
 25970                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 25971  018AA0  0E00               	movlw	0
 25972  018AA2  6FCF               	movwf	207,b	;volatile
 25973  018AA4  0E01               	movlw	1
 25974  018AA6  6FCE               	movwf	206,b	;volatile
 25975                           
 25976                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 25977  018AA8  0E46               	movlw	70
 25978  018AAA  6FDF               	movwf	223,b	;volatile
 25979                           
 25980                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 25981  018AAC  0E3D               	movlw	61
 25982  018AAE  6FDE               	movwf	222,b	;volatile
 25983                           
 25984                           ; BSR set to: 59
 25985                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 25986  018AB0  0139               	movlb	57	; () banked
 25987  018AB2  97A5               	bcf	165,3,b	;volatile
 25988                           
 25989                           ; BSR set to: 57
 25990                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 25991  018AB4  95A5               	bcf	165,2,b	;volatile
 25992                           
 25993                           ; BSR set to: 57
 25994                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 25995  018AB6  9BA5               	bcf	165,5,b	;volatile
 25996                           
 25997                           ; BSR set to: 57
 25998                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 25999  018AB8  99A5               	bcf	165,4,b	;volatile
 26000                           
 26001                           ; BSR set to: 57
 26002                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 26003  018ABA  9795               	bcf	149,3,b	;volatile
 26004                           
 26005                           ; BSR set to: 57
 26006                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 26007  018ABC  9595               	bcf	149,2,b	;volatile
 26008                           
 26009                           ; BSR set to: 57
 26010                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 26011  018ABE  9B95               	bcf	149,5,b	;volatile
 26012                           
 26013                           ; BSR set to: 57
 26014                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 26015  018AC0  9995               	bcf	149,4,b	;volatile
 26016  018AC2  9ED2               	bcf	16338,7,c	;# 
 26017  018AC4  0139               	banksel	14831	;# 
 26018  018AC6  0E55               	movlw	85	;# 
 26019  018AC8  6FEF               	movwf	14831,b	;# 
 26020  018ACA  0EAA               	movlw	170	;# 
 26021  018ACC  6FEF               	movwf	14831,b	;# 
 26022  018ACE  81EF               	bsf	14831,0,b	;# 
 26023  018AD0  8ED2               	bsf	16338,7,c	;# 
 26024                           
 26025                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 26026  018AD2  013B               	movlb	59	; () banked
 26027  018AD4  6BDC               	clrf	220,b	;volatile
 26028                           
 26029                           ; BSR set to: 59
 26030                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26031  018AD6  0012               	return		;funcret
 26032  018AD8                     __end_of_DMA2_Initialize:
 26033                           	opt callstack 0
 26034                           
 26035 ;; *************** function _DMA1_Initialize *****************
 26036 ;; Defined at:
 26037 ;;		line 86 in file "mcc_generated_files/dma1.c"
 26038 ;; Parameters:    Size  Location     Type
 26039 ;;		None
 26040 ;; Auto vars:     Size  Location     Type
 26041 ;;		None
 26042 ;; Return value:  Size  Location     Type
 26043 ;;                  1  [STACK] void 
 26044 ;; Registers used:
 26045 ;;		wreg, status,2
 26046 ;; Tracked objects:
 26047 ;;		On entry : 3F/3B
 26048 ;;		On exit  : 3F/3B
 26049 ;;		Unchanged: 0/0
 26050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26055 ;;Total ram usage:        0 bytes
 26056 ;; Hardware stack levels used:    1
 26057 ;; Hardware stack levels required when called:    7
 26058 ;; This function calls:
 26059 ;;		Nothing
 26060 ;; This function is called by:
 26061 ;;		_SYSTEM_Initialize
 26062 ;; This function uses a reentrant model
 26063 ;;
 26064                           
 26065                           	psect	text121
 26066  018694                     __ptext121:
 26067                           	opt callstack 0
 26068  018694                     _DMA1_Initialize:
 26069                           	opt callstack 22
 26070                           
 26071                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 26072                           
 26073                           ; BSR set to: 59
 26074                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26075                           ;incstack = 0
 26076  018694  0E00               	movlw	0
 26077  018696  013B               	movlb	59	; () banked
 26078  018698  6FF9               	movwf	249,b	;volatile
 26079  01869A  0E10               	movlw	16
 26080  01869C  6FFA               	movwf	250,b	;volatile
 26081  01869E  0E00               	movlw	0
 26082  0186A0  6FFB               	movwf	251,b	;volatile
 26083                           
 26084                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 26085  0186A2  0E3D               	movlw	61
 26086  0186A4  6FF1               	movwf	241,b	;volatile
 26087  0186A6  0E11               	movlw	17
 26088  0186A8  6FF0               	movwf	240,b	;volatile
 26089                           
 26090                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 26091  0186AA  0E03               	movlw	3
 26092  0186AC  6FFD               	movwf	253,b	;volatile
 26093                           
 26094                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 26095  0186AE  0E00               	movlw	0
 26096  0186B0  6FF8               	movwf	248,b	;volatile
 26097  0186B2  0E01               	movlw	1
 26098  0186B4  6FF7               	movwf	247,b	;volatile
 26099                           
 26100                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 26101  0186B6  0E00               	movlw	0
 26102  0186B8  6FEF               	movwf	239,b	;volatile
 26103  0186BA  0E01               	movlw	1
 26104  0186BC  6FEE               	movwf	238,b	;volatile
 26105                           
 26106                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 26107  0186BE  0E15               	movlw	21
 26108  0186C0  6FFF               	movwf	255,b	;volatile
 26109                           
 26110                           ; BSR set to: 59
 26111                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 26112  0186C2  6BFE               	clrf	254,b	;volatile
 26113                           
 26114                           ; BSR set to: 59
 26115                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 26116  0186C4  0139               	movlb	57	; () banked
 26117  0186C6  93A2               	bcf	162,1,b	;volatile
 26118                           
 26119                           ; BSR set to: 57
 26120                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 26121  0186C8  91A2               	bcf	162,0,b	;volatile
 26122                           
 26123                           ; BSR set to: 57
 26124                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 26125  0186CA  97A2               	bcf	162,3,b	;volatile
 26126                           
 26127                           ; BSR set to: 57
 26128                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 26129  0186CC  95A2               	bcf	162,2,b	;volatile
 26130                           
 26131                           ; BSR set to: 57
 26132                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 26133  0186CE  8392               	bsf	146,1,b	;volatile
 26134                           
 26135                           ; BSR set to: 57
 26136                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 26137  0186D0  8192               	bsf	146,0,b	;volatile
 26138                           
 26139                           ; BSR set to: 57
 26140                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 26141  0186D2  8792               	bsf	146,3,b	;volatile
 26142                           
 26143                           ; BSR set to: 57
 26144                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 26145  0186D4  8592               	bsf	146,2,b	;volatile
 26146                           
 26147                           ; BSR set to: 57
 26148                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 26149  0186D6  6BF1               	clrf	241,b	;volatile
 26150                           
 26151                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 26152  0186D8  0E01               	movlw	1
 26153  0186DA  6FF2               	movwf	242,b	;volatile
 26154                           
 26155                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 26156  0186DC  0E04               	movlw	4
 26157  0186DE  6FF3               	movwf	243,b	;volatile
 26158                           
 26159                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 26160  0186E0  0E02               	movlw	2
 26161  0186E2  6FF4               	movwf	244,b	;volatile
 26162                           
 26163                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 26164  0186E4  0E03               	movlw	3
 26165  0186E6  6FF7               	movwf	247,b	;volatile
 26166  0186E8  9ED2               	bcf	16338,7,c	;# 
 26167  0186EA  0139               	banksel	14831	;# 
 26168  0186EC  0E55               	movlw	85	;# 
 26169  0186EE  6FEF               	movwf	14831,b	;# 
 26170  0186F0  0EAA               	movlw	170	;# 
 26171  0186F2  6FEF               	movwf	14831,b	;# 
 26172  0186F4  81EF               	bsf	14831,0,b	;# 
 26173  0186F6  8ED2               	bsf	16338,7,c	;# 
 26174                           
 26175                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 26176  0186F8  013B               	movlb	59	; () banked
 26177  0186FA  6BFC               	clrf	252,b	;volatile
 26178                           
 26179                           ; BSR set to: 59
 26180                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26181  0186FC  0012               	return		;funcret
 26182  0186FE                     __end_of_DMA1_Initialize:
 26183                           	opt callstack 0
 26184                           
 26185 ;; *************** function _CLKREF_Initialize *****************
 26186 ;; Defined at:
 26187 ;;		line 58 in file "mcc_generated_files/clkref.c"
 26188 ;; Parameters:    Size  Location     Type
 26189 ;;		None
 26190 ;; Auto vars:     Size  Location     Type
 26191 ;;		None
 26192 ;; Return value:  Size  Location     Type
 26193 ;;                  1  [STACK] void 
 26194 ;; Registers used:
 26195 ;;		wreg, status,2
 26196 ;; Tracked objects:
 26197 ;;		On entry : 3F/3B
 26198 ;;		On exit  : 3F/3C
 26199 ;;		Unchanged: 0/0
 26200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26205 ;;Total ram usage:        0 bytes
 26206 ;; Hardware stack levels used:    1
 26207 ;; Hardware stack levels required when called:    7
 26208 ;; This function calls:
 26209 ;;		Nothing
 26210 ;; This function is called by:
 26211 ;;		_SYSTEM_Initialize
 26212 ;; This function uses a reentrant model
 26213 ;;
 26214                           
 26215                           	psect	text122
 26216  0198C2                     __ptext122:
 26217                           	opt callstack 0
 26218  0198C2                     _CLKREF_Initialize:
 26219                           	opt callstack 22
 26220                           
 26221                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 26222                           
 26223                           ; BSR set to: 59
 26224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26225                           ;incstack = 0
 26226  0198C2  013C               	movlb	60	; () banked
 26227  0198C4  6BE6               	clrf	230,b	;volatile
 26228                           
 26229                           ; BSR set to: 60
 26230                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 26231  0198C6  0E94               	movlw	148
 26232  0198C8  6FE5               	movwf	229,b	;volatile
 26233                           
 26234                           ; BSR set to: 60
 26235                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26236  0198CA  0012               	return		;funcret
 26237  0198CC                     __end_of_CLKREF_Initialize:
 26238                           	opt callstack 0
 26239                           
 26240 ;; *************** function _ADCC_Initialize *****************
 26241 ;; Defined at:
 26242 ;;		line 65 in file "mcc_generated_files/adcc.c"
 26243 ;; Parameters:    Size  Location     Type
 26244 ;;		None
 26245 ;; Auto vars:     Size  Location     Type
 26246 ;;		None
 26247 ;; Return value:  Size  Location     Type
 26248 ;;                  1  [STACK] void 
 26249 ;; Registers used:
 26250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 26251 ;; Tracked objects:
 26252 ;;		On entry : 3F/3E
 26253 ;;		On exit  : 0/0
 26254 ;;		Unchanged: 0/0
 26255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26260 ;;Total ram usage:        0 bytes
 26261 ;; Hardware stack levels used:    1
 26262 ;; Hardware stack levels required when called:    8
 26263 ;; This function calls:
 26264 ;;		_ADCC_SetADIInterruptHandler
 26265 ;;		_ADCC_SetADTIInterruptHandler
 26266 ;; This function is called by:
 26267 ;;		_SYSTEM_Initialize
 26268 ;; This function uses a reentrant model
 26269 ;;
 26270                           
 26271                           	psect	text123
 26272  0186FE                     __ptext123:
 26273                           	opt callstack 0
 26274  0186FE                     _ADCC_Initialize:
 26275                           	opt callstack 21
 26276                           
 26277                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 26278                           
 26279                           ; BSR set to: 60
 26280                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26281                           ;incstack = 0
 26282  0186FE  013E               	movlb	62	; () banked
 26283  018700  6BDE               	clrf	222,b	;volatile
 26284                           
 26285                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 26286  018702  6BDF               	clrf	223,b	;volatile
 26287                           
 26288                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 26289  018704  6BE0               	clrf	224,b	;volatile
 26290                           
 26291                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 26292  018706  6BE1               	clrf	225,b	;volatile
 26293                           
 26294                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 26295  018708  6BE4               	clrf	228,b	;volatile
 26296                           
 26297                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 26298  01870A  6BE5               	clrf	229,b	;volatile
 26299                           
 26300                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 26301  01870C  6BEA               	clrf	234,b	;volatile
 26302                           
 26303                           ; BSR set to: 62
 26304                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 26305  01870E  0E40               	movlw	64
 26306  018710  6FEC               	movwf	236,b	;volatile
 26307                           
 26308                           ; BSR set to: 62
 26309                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 26310  018712  6BF1               	clrf	241,b	;volatile
 26311                           
 26312                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 26313  018714  0E20               	movlw	32
 26314  018716  6FF3               	movwf	243,b	;volatile
 26315                           
 26316                           ; BSR set to: 62
 26317                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 26318  018718  6BF4               	clrf	244,b	;volatile
 26319                           
 26320                           ; BSR set to: 62
 26321                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 26322  01871A  6BF5               	clrf	245,b	;volatile
 26323                           
 26324                           ; BSR set to: 62
 26325                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 26326  01871C  6BF6               	clrf	246,b	;volatile
 26327                           
 26328                           ; BSR set to: 62
 26329                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 26330  01871E  6BF7               	clrf	247,b	;volatile
 26331                           
 26332                           ; BSR set to: 62
 26333                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 26334  018720  6BF9               	clrf	249,b	;volatile
 26335                           
 26336                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 26337  018722  0E5B               	movlw	91
 26338  018724  6FFA               	movwf	250,b	;volatile
 26339                           
 26340                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 26341  018726  0E27               	movlw	39
 26342  018728  6FFB               	movwf	251,b	;volatile
 26343                           
 26344                           ; BSR set to: 62
 26345                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 26346  01872A  6BFC               	clrf	252,b	;volatile
 26347                           
 26348                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 26349  01872C  0E02               	movlw	2
 26350  01872E  6FFD               	movwf	253,b	;volatile
 26351                           
 26352                           ; BSR set to: 62
 26353                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 26354  018730  6BFE               	clrf	254,b	;volatile
 26355                           
 26356                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 26357  018732  0E07               	movlw	7
 26358  018734  6FFF               	movwf	255,b	;volatile
 26359                           
 26360                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 26361  018736  0E84               	movlw	132
 26362  018738  6FF8               	movwf	248,b	;volatile
 26363                           
 26364                           ; BSR set to: 62
 26365                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 26366  01873A  0139               	movlb	57	; () banked
 26367  01873C  95A1               	bcf	161,2,b	;volatile
 26368                           
 26369                           ; BSR set to: 57
 26370                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 26371  01873E  8591               	bsf	145,2,b	;volatile
 26372                           
 26373                           ; BSR set to: 57
 26374                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 26375  018740  0E3C               	movlw	low _ADCC_DefaultInterruptHandler
 26376  018742  6EE6               	movwf	postinc1,c
 26377  018744  0E99               	movlw	high _ADCC_DefaultInterruptHandler
 26378  018746  6EE6               	movwf	postinc1,c
 26379  018748  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 26380  01874A  6EE6               	movwf	postinc1,c
 26381  01874C  EC67  F0CA         	call	_ADCC_SetADIInterruptHandler	;wreg free
 26382                           
 26383                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 26384  018750  0139               	movlb	57	; () banked
 26385  018752  97A1               	bcf	161,3,b	;volatile
 26386                           
 26387                           ; BSR set to: 57
 26388                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 26389  018754  8791               	bsf	145,3,b	;volatile
 26390                           
 26391                           ; BSR set to: 57
 26392                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 26393  018756  0E3C               	movlw	low _ADCC_DefaultInterruptHandler
 26394  018758  6EE6               	movwf	postinc1,c
 26395  01875A  0E99               	movlw	high _ADCC_DefaultInterruptHandler
 26396  01875C  6EE6               	movwf	postinc1,c
 26397  01875E  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 26398  018760  6EE6               	movwf	postinc1,c
 26399  018762  EC53  F0CA         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 26400                           
 26401                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26402  018766  0012               	return		;funcret
 26403  018768                     __end_of_ADCC_Initialize:
 26404                           	opt callstack 0
 26405                           
 26406 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 26407 ;; Defined at:
 26408 ;;		line 336 in file "mcc_generated_files/adcc.c"
 26409 ;; Parameters:    Size  Location     Type
 26410 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26411 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 26412 ;; Auto vars:     Size  Location     Type
 26413 ;;		None
 26414 ;; Return value:  Size  Location     Type
 26415 ;;                  1  [STACK] void 
 26416 ;; Registers used:
 26417 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26418 ;; Tracked objects:
 26419 ;;		On entry : 0/0
 26420 ;;		On exit  : 0/0
 26421 ;;		Unchanged: 0/0
 26422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26427 ;;Total ram usage:        0 bytes
 26428 ;; Hardware stack levels used:    1
 26429 ;; Hardware stack levels required when called:    7
 26430 ;; This function calls:
 26431 ;;		Nothing
 26432 ;; This function is called by:
 26433 ;;		_ADCC_Initialize
 26434 ;;		_start_adc_scan
 26435 ;; This function uses a reentrant model
 26436 ;;
 26437                           
 26438                           	psect	text124
 26439  0194A6                     __ptext124:
 26440                           	opt callstack 0
 26441  0194A6                     _ADCC_SetADTIInterruptHandler:
 26442                           	opt callstack 22
 26443                           
 26444                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 26445                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26446                           
 26447                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26448                           ;incstack = 0
 26449  0194A6  50E1               	movf	fsr1l,w,c
 26450  0194A8  0FFD               	addlw	-3
 26451  0194AA  6ED9               	movwf	fsr2l,c
 26452  0194AC  50E2               	movf	fsr1h,w,c
 26453  0194AE  6EDA               	movwf	fsr2h,c
 26454  0194B0  0EFF               	movlw	255
 26455  0194B2  22DA               	addwfc	fsr2h,f,c
 26456  0194B4  006F FF78  F0B2    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 26457  0194BA  006F FF78  F0B3    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 26458  0194C0  006F FF74  F0B4    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 26459                           
 26460                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 26461  0194C6  52E5               	movf	postdec1,f,c
 26462  0194C8  52E5               	movf	postdec1,f,c
 26463  0194CA  52E5               	movf	postdec1,f,c
 26464  0194CC  0012               	return		;funcret
 26465  0194CE                     __end_of_ADCC_SetADTIInterruptHandler:
 26466                           	opt callstack 0
 26467                           
 26468 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 26469 ;; Defined at:
 26470 ;;		line 323 in file "mcc_generated_files/adcc.c"
 26471 ;; Parameters:    Size  Location     Type
 26472 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26473 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 26474 ;; Auto vars:     Size  Location     Type
 26475 ;;		None
 26476 ;; Return value:  Size  Location     Type
 26477 ;;                  1  [STACK] void 
 26478 ;; Registers used:
 26479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26480 ;; Tracked objects:
 26481 ;;		On entry : 6/0
 26482 ;;		On exit  : 0/0
 26483 ;;		Unchanged: 0/0
 26484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26489 ;;Total ram usage:        0 bytes
 26490 ;; Hardware stack levels used:    1
 26491 ;; Hardware stack levels required when called:    7
 26492 ;; This function calls:
 26493 ;;		Nothing
 26494 ;; This function is called by:
 26495 ;;		_ADCC_Initialize
 26496 ;;		_start_adc_scan
 26497 ;; This function uses a reentrant model
 26498 ;;
 26499                           
 26500                           	psect	text125
 26501  0194CE                     __ptext125:
 26502                           	opt callstack 0
 26503  0194CE                     _ADCC_SetADIInterruptHandler:
 26504                           	opt callstack 22
 26505                           
 26506                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 26507                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26508                           
 26509                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26510                           ;incstack = 0
 26511  0194CE  50E1               	movf	fsr1l,w,c
 26512  0194D0  0FFD               	addlw	-3
 26513  0194D2  6ED9               	movwf	fsr2l,c
 26514  0194D4  50E2               	movf	fsr1h,w,c
 26515  0194D6  6EDA               	movwf	fsr2h,c
 26516  0194D8  0EFF               	movlw	255
 26517  0194DA  22DA               	addwfc	fsr2h,f,c
 26518  0194DC  006F FF78  F0B5    	movff	postinc2,_ADCC_ADI_InterruptHandler
 26519  0194E2  006F FF78  F0B6    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 26520  0194E8  006F FF74  F0B7    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 26521                           
 26522                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26523  0194EE  52E5               	movf	postdec1,f,c
 26524  0194F0  52E5               	movf	postdec1,f,c
 26525  0194F2  52E5               	movf	postdec1,f,c
 26526  0194F4  0012               	return		;funcret
 26527  0194F6                     __end_of_ADCC_SetADIInterruptHandler:
 26528                           	opt callstack 0
 26529                           
 26530 ;; *************** function _INT1_ISR *****************
 26531 ;; Defined at:
 26532 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 26533 ;; Parameters:    Size  Location     Type
 26534 ;;		None
 26535 ;; Auto vars:     Size  Location     Type
 26536 ;;		None
 26537 ;; Return value:  Size  Location     Type
 26538 ;;                  1    wreg      void 
 26539 ;; Registers used:
 26540 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 26541 ;; Tracked objects:
 26542 ;;		On entry : 0/0
 26543 ;;		On exit  : 0/0
 26544 ;;		Unchanged: 0/0
 26545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26548 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26549 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26550 ;;Total ram usage:        4 bytes
 26551 ;; Hardware stack levels used:    1
 26552 ;; Hardware stack levels required when called:    5
 26553 ;; This function calls:
 26554 ;;		_INT1_CallBack
 26555 ;; This function is called by:
 26556 ;;		Interrupt level 1
 26557 ;; This function uses a non-reentrant model
 26558 ;;
 26559                           
 26560                           	psect	text126
 26561  018F54                     __ptext126:
 26562                           	opt callstack 0
 26563  018F54                     _INT1_ISR:
 26564                           	opt callstack 12
 26565                           
 26566                           ;incstack = 0
 26567  018F54  006F FF60  F046    	movff	status,??_INT1_ISR
 26568  018F5A  0060  F004  F047   	movff	btemp,??_INT1_ISR+1
 26569  018F60  0060  F02C  F048   	movff	btemp+10,??_INT1_ISR+2
 26570  018F66  0060  F030  F049   	movff	btemp+11,??_INT1_ISR+3
 26571  018F6C  EE16  F00B         	lfsr	1,___intlo_sp
 26572                           
 26573                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 26574  018F70  0139               	movlb	57	; () banked
 26575  018F72  91A5               	bcf	165,0,b	;volatile
 26576                           
 26577                           ; BSR set to: 57
 26578                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 26579  018F74  ECF2  F0CA         	call	_INT1_CallBack	;wreg free
 26580  018F78  0060  F124  F00C   	movff	??_INT1_ISR+3,btemp+11
 26581  018F7E  0060  F120  F00B   	movff	??_INT1_ISR+2,btemp+10
 26582  018F84  0060  F11C  F001   	movff	??_INT1_ISR+1,btemp
 26583  018F8A  0060  F11B  FFD8   	movff	??_INT1_ISR,status
 26584  018F90  0011               	retfie		f
 26585  018F92                     __end_of_INT1_ISR:
 26586                           	opt callstack 0
 26587                           
 26588 ;; *************** function _INT1_CallBack *****************
 26589 ;; Defined at:
 26590 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 26591 ;; Parameters:    Size  Location     Type
 26592 ;;		None
 26593 ;; Auto vars:     Size  Location     Type
 26594 ;;		None
 26595 ;; Return value:  Size  Location     Type
 26596 ;;                  1  [STACK] void 
 26597 ;; Registers used:
 26598 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 26599 ;; Tracked objects:
 26600 ;;		On entry : 3F/39
 26601 ;;		On exit  : 0/0
 26602 ;;		Unchanged: 0/0
 26603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26608 ;;Total ram usage:        0 bytes
 26609 ;; Hardware stack levels used:    1
 26610 ;; Hardware stack levels required when called:    4
 26611 ;; This function calls:
 26612 ;;		Absolute function
 26613 ;;		_INT1_DefaultInterruptHandler
 26614 ;;		_switch_handler
 26615 ;; This function is called by:
 26616 ;;		_INT1_ISR
 26617 ;; This function uses a reentrant model
 26618 ;;
 26619                           
 26620                           	psect	text127
 26621  0195E4                     __ptext127:
 26622                           	opt callstack 0
 26623  0195E4                     _INT1_CallBack:
 26624                           	opt callstack 12
 26625                           
 26626                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 26627                           
 26628                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26629                           ;incstack = 0
 26630  0195E4  0100               	movlb	0	; () banked
 26631  0195E6  51C4               	movf	_INT1_InterruptHandler& (0+255),w,b
 26632  0195E8  11C5               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 26633  0195EA  11C6               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 26634  0195EC  B4D8               	btfsc	status,2,c
 26635  0195EE  0012               	return	
 26636                           
 26637                           ; BSR set to: 0
 26638                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 26639  0195F0  D801               	call	u875_28
 26640  0195F2  0012               	return	
 26641  0195F4                     u875_28:
 26642  0195F4  0005               	push	
 26643  0195F6  6EFA               	movwf	pclath,c
 26644  0195F8  51C4               	movf	_INT1_InterruptHandler& (0+255),w,b
 26645  0195FA  6EFD               	movwf	tosl,c
 26646  0195FC  51C5               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 26647  0195FE  6EFE               	movwf	tosh,c
 26648  019600  51C6               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 26649  019602  6EFF               	movwf	tosu,c
 26650  019604  50FA               	movf	pclath,w,c
 26651  019606  0012               	return		;indir
 26652  019608                     __end_of_INT1_CallBack:
 26653                           	opt callstack 0
 26654                           
 26655 ;; *************** function _INT1_DefaultInterruptHandler *****************
 26656 ;; Defined at:
 26657 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 26658 ;; Parameters:    Size  Location     Type
 26659 ;;		None
 26660 ;; Auto vars:     Size  Location     Type
 26661 ;;		None
 26662 ;; Return value:  Size  Location     Type
 26663 ;;                  1  [STACK] void 
 26664 ;; Registers used:
 26665 ;;		None
 26666 ;; Tracked objects:
 26667 ;;		On entry : 3F/0
 26668 ;;		On exit  : 0/0
 26669 ;;		Unchanged: 0/0
 26670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26675 ;;Total ram usage:        0 bytes
 26676 ;; Hardware stack levels used:    1
 26677 ;; Hardware stack levels required when called:    3
 26678 ;; This function calls:
 26679 ;;		Nothing
 26680 ;; This function is called by:
 26681 ;;		_EXT_INT_Initialize
 26682 ;;		_INT1_CallBack
 26683 ;; This function uses a reentrant model
 26684 ;;
 26685                           
 26686                           	psect	text128
 26687  019936                     __ptext128:
 26688                           	opt callstack 0
 26689  019936                     _INT1_DefaultInterruptHandler:
 26690                           	opt callstack 12
 26691                           
 26692                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26693                           
 26694                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26695                           ;incstack = 0
 26696  019936  0012               	return		;funcret
 26697  019938                     __end_of_INT1_DefaultInterruptHandler:
 26698                           	opt callstack 0
 26699                           
 26700 ;; *************** function _switch_handler *****************
 26701 ;; Defined at:
 26702 ;;		line 58 in file "dio.c"
 26703 ;; Parameters:    Size  Location     Type
 26704 ;;		None
 26705 ;; Auto vars:     Size  Location     Type
 26706 ;;  i               1  [STACK] unsigned char 
 26707 ;;  sw_value        1  [STACK] unsigned char 
 26708 ;; Return value:  Size  Location     Type
 26709 ;;                  1  [STACK] void 
 26710 ;; Registers used:
 26711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 26712 ;; Tracked objects:
 26713 ;;		On entry : 3F/0
 26714 ;;		On exit  : 0/0
 26715 ;;		Unchanged: 0/0
 26716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26721 ;;Total ram usage:        0 bytes
 26722 ;; Hardware stack levels used:    1
 26723 ;; Hardware stack levels required when called:    3
 26724 ;; This function calls:
 26725 ;;		Nothing
 26726 ;; This function is called by:
 26727 ;;		_start_switch_handler
 26728 ;;		_INT1_CallBack
 26729 ;; This function uses a reentrant model
 26730 ;;
 26731                           
 26732                           	psect	text129
 26733  016FE6                     __ptext129:
 26734                           	opt callstack 0
 26735  016FE6                     _switch_handler:
 26736                           	opt callstack 0
 26737                           
 26738                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26739  016FE6  52E6               	movf	postinc1,f,c
 26740  016FE8  52E6               	movf	postinc1,f,c
 26741                           
 26742                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 26743                           ;stkvar	_i @ sp[(-2)+0]
 26744                           
 26745                           ;incstack = 0
 26746  016FEA  0EFE               	movlw	-2
 26747  016FEC  6AE3               	clrf	plusw1,c
 26748  016FEE  9EBD               	bcf	189,7,c	;volatile
 26749                           
 26750                           ;dio.c: 72:  __nop();
 26751  016FF0  F000               	nop	
 26752                           
 26753                           ;dio.c: 73:  __nop();
 26754  016FF2  F000               	nop	
 26755                           
 26756                           ;dio.c: 74:  __nop();
 26757  016FF4  F000               	nop	
 26758  016FF6  D019               	goto	l9478
 26759  016FF8                     l9466:
 26760                           
 26761                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 26762  016FF8  A6CF               	btfss	207,3,c	;volatile
 26763  016FFA  D011               	goto	u855_20
 26764  016FFC  D00D               	goto	u855_21
 26765  016FFE                     u852_28:
 26766                           
 26767                           ;stkvar	_sw_value @ sp[(-2)+1]
 26768  016FFE  0EFF               	movlw	-1
 26769  017000  0060  F033  FFE3   	movff	btemp+11,plusw1
 26770                           
 26771                           ;dio.c: 80:    break;
 26772  017006  D027               	goto	l9480
 26773  017008                     l9468:
 26774                           
 26775                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 26776  017008  A4CF               	btfss	207,2,c	;volatile
 26777  01700A  D009               	goto	u855_20
 26778  01700C  D005               	goto	u855_21
 26779  01700E                     l9470:
 26780                           
 26781                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 26782  01700E  A2CF               	btfss	207,1,c	;volatile
 26783  017010  D006               	goto	u855_20
 26784  017012  D002               	goto	u855_21
 26785  017014                     l9472:
 26786                           
 26787                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 26788  017014  A0CF               	btfss	207,0,c	;volatile
 26789  017016  D003               	goto	u855_20
 26790  017018                     u855_21:
 26791  017018  6A0C               	clrf	(btemp+11)^0,c
 26792  01701A  2A0C               	incf	(btemp+11)^0,f,c
 26793  01701C  D7F0               	goto	u852_28
 26794  01701E                     u855_20:
 26795  01701E  6A0C               	clrf	(btemp+11)^0,c
 26796  017020  D7EE               	goto	u852_28
 26797  017022                     l9474:
 26798                           
 26799                           ;dio.c: 91:    sw_value = 1;
 26800                           ;stkvar	_sw_value @ sp[(-2)+1]
 26801  017022  0EFF               	movlw	-1
 26802  017024  6AE3               	clrf	plusw1,c
 26803  017026  2AE3               	incf	plusw1,f,c
 26804                           
 26805                           ;dio.c: 92:    break;
 26806  017028  D016               	goto	l9480
 26807  01702A                     l9478:
 26808                           
 26809                           ;stkvar	_i @ sp[(-2)+0]
 26810  01702A  0EFE               	movlw	-2
 26811  01702C  50E3               	movf	plusw1,w,c
 26812  01702E  6E0B               	movwf	(btemp+10)^0,c
 26813  017030  6A0C               	clrf	(btemp+11)^0,c
 26814                           
 26815                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26816                           ; Switch size 1, requested type "simple"
 26817                           ; Number of cases is 1, Range of values is 0 to 0
 26818                           ; switch strategies available:
 26819                           ; Name         Instructions Cycles
 26820                           ; simple_byte            4     3 (average)
 26821                           ;	Chosen strategy is simple_byte
 26822  017032  500C               	movf	(btemp+11)^0,w,c
 26823  017034  0A00               	xorlw	0	; case 0
 26824  017036  A4D8               	btfss	status,2,c
 26825  017038  D7F4               	goto	l9474
 26826                           
 26827                           ; Switch size 1, requested type "simple"
 26828                           ; Number of cases is 4, Range of values is 0 to 3
 26829                           ; switch strategies available:
 26830                           ; Name         Instructions Cycles
 26831                           ; simple_byte           13     7 (average)
 26832                           ;	Chosen strategy is simple_byte
 26833  01703A  500B               	movf	(btemp+10)^0,w,c
 26834  01703C  0A00               	xorlw	0	; case 0
 26835  01703E  B4D8               	btfsc	status,2,c
 26836  017040  D7E9               	goto	l9472
 26837  017042  0A01               	xorlw	1	; case 1
 26838  017044  B4D8               	btfsc	status,2,c
 26839  017046  D7E3               	goto	l9470
 26840  017048  0A03               	xorlw	3	; case 2
 26841  01704A  B4D8               	btfsc	status,2,c
 26842  01704C  D7DD               	goto	l9468
 26843  01704E  0A01               	xorlw	1	; case 3
 26844  017050  B4D8               	btfsc	status,2,c
 26845  017052  D7D2               	goto	l9466
 26846  017054  D7E6               	goto	l9474
 26847  017056                     l9480:
 26848                           
 26849                           ;dio.c: 96:   if (sw_value) {
 26850                           ;stkvar	_sw_value @ sp[(-2)+1]
 26851  017056  0EFF               	movlw	-1
 26852  017058  50E3               	movf	plusw1,w,c
 26853  01705A  B4D8               	btfsc	status,2,c
 26854  01705C  D014               	goto	l9486
 26855                           
 26856                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 26857                           ;stkvar	_i @ sp[(-2)+0]
 26858  01705E  0EFE               	movlw	-2
 26859  017060  50E3               	movf	plusw1,w,c
 26860  017062  0D05               	mullw	5
 26861  017064  50F3               	movf	243,w,c
 26862  017066  0F60               	addlw	low _S
 26863  017068  6ED9               	movwf	fsr2l,c
 26864  01706A  6ADA               	clrf	fsr2h,c
 26865  01706C  04DE               	decf	postinc2,w,c
 26866  01706E  A4D8               	btfss	status,2,c
 26867  017070  D041               	goto	l9494
 26868                           
 26869                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 26870                           ;stkvar	_i @ sp[(-2)+0]
 26871  017072  0EFE               	movlw	-2
 26872  017074  50E3               	movf	plusw1,w,c
 26873  017076  0D05               	mullw	5
 26874  017078  50F3               	movf	243,w,c
 26875  01707A  0F60               	addlw	low _S
 26876  01707C  6ED9               	movwf	fsr2l,c
 26877  01707E  6ADA               	clrf	fsr2h,c
 26878  017080  0E00               	movlw	0
 26879  017082  6EDF               	movwf	indf2,c
 26880  017084  D037               	goto	l9494
 26881  017086                     l9486:
 26882                           
 26883                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 26884                           ;stkvar	_i @ sp[(-2)+0]
 26885  017086  0EFE               	movlw	-2
 26886  017088  50E3               	movf	plusw1,w,c
 26887  01708A  0D05               	mullw	5
 26888  01708C  50F3               	movf	243,w,c
 26889  01708E  0F60               	addlw	low _S
 26890  017090  6ED9               	movwf	fsr2l,c
 26891  017092  6ADA               	clrf	fsr2h,c
 26892  017094  50DF               	movf	indf2,w,c
 26893  017096  A4D8               	btfss	status,2,c
 26894  017098  D02D               	goto	l9494
 26895                           
 26896                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 26897                           ;stkvar	_i @ sp[(-2)+0]
 26898  01709A  0EFE               	movlw	-2
 26899  01709C  50E3               	movf	plusw1,w,c
 26900  01709E  0D05               	mullw	5
 26901  0170A0  50F3               	movf	243,w,c
 26902  0170A2  0F60               	addlw	low _S
 26903  0170A4  6ED9               	movwf	fsr2l,c
 26904  0170A6  6ADA               	clrf	fsr2h,c
 26905  0170A8  0E01               	movlw	1
 26906  0170AA  6EDF               	movwf	indf2,c
 26907                           
 26908                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 26909  0170AC  EE20  F2B8         	lfsr	2,_V+184	;volatile
 26910                           
 26911                           ;stkvar	_i @ sp[(-2)+0]
 26912  0170B0  0EFE               	movlw	-2
 26913  0170B2  50E3               	movf	plusw1,w,c
 26914  0170B4  0D05               	mullw	5
 26915  0170B6  50F3               	movf	243,w,c
 26916  0170B8  0F61               	addlw	low (_S+1)
 26917  0170BA  6EE9               	movwf	fsr0l,c
 26918  0170BC  6AEA               	clrf	fsr0h,c
 26919  0170BE  006F FF7B FFEE     	movff	postinc2,postinc0
 26920  0170C4  006F FF7B FFEE     	movff	postinc2,postinc0
 26921  0170CA  006F FF7B FFEE     	movff	postinc2,postinc0
 26922  0170D0  006F FF7B FFEE     	movff	postinc2,postinc0
 26923                           
 26924                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 26925                           ;stkvar	_i @ sp[(-2)+0]
 26926  0170D6  0EFE               	movlw	-2
 26927  0170D8  006F FF8C  F00C    	movff	plusw1,btemp+11
 26928  0170DE  0E01               	movlw	1
 26929  0170E0  6E0B               	movwf	(btemp+10)^0,c
 26930  0170E2  2A0C               	incf	(btemp+11)^0,f,c
 26931  0170E4  D002               	goto	u859_24
 26932  0170E6                     u859_25:
 26933  0170E6  90D8               	bcf	status,0,c
 26934  0170E8  360B               	rlcf	(btemp+10)^0,f,c
 26935  0170EA                     u859_24:
 26936  0170EA  2E0C               	decfsz	(btemp+11)^0,f,c
 26937  0170EC  D7FC               	goto	u859_25
 26938  0170EE  500B               	movf	(btemp+10)^0,w,c
 26939  0170F0  0100               	movlb	0	; () banked
 26940  0170F2  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 26941  0170F4                     l9494:
 26942                           
 26943                           ;dio.c: 107:  } while (++i < 4);
 26944                           ;stkvar	_i @ sp[(-2)+0]
 26945  0170F4  0EFE               	movlw	-2
 26946  0170F6  2AE3               	incf	plusw1,f,c
 26947  0170F8  0EFE               	movlw	-2
 26948  0170FA  006F FF8C  F001    	movff	plusw1,btemp
 26949  017100  0E03               	movlw	3
 26950  017102  6401               	cpfsgt	btemp^0,c
 26951  017104  D792               	goto	l9478
 26952                           
 26953                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 26954  017106  8EBD               	bsf	189,7,c	;volatile
 26955                           
 26956                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 26957  017108  52E5               	movf	postdec1,f,c
 26958  01710A  52E5               	movf	postdec1,f,c
 26959  01710C  0012               	return		;funcret
 26960  01710E                     __end_of_switch_handler:
 26961                           	opt callstack 0
 26962                           
 26963 ;; *************** function _TMR5_ISR *****************
 26964 ;; Defined at:
 26965 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 26966 ;; Parameters:    Size  Location     Type
 26967 ;;		None
 26968 ;; Auto vars:     Size  Location     Type
 26969 ;;		None
 26970 ;; Return value:  Size  Location     Type
 26971 ;;                  1    wreg      void 
 26972 ;; Registers used:
 26973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 26974 ;; Tracked objects:
 26975 ;;		On entry : 0/0
 26976 ;;		On exit  : 0/0
 26977 ;;		Unchanged: 0/0
 26978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26981 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26982 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26983 ;;Total ram usage:        4 bytes
 26984 ;; Hardware stack levels used:    1
 26985 ;; Hardware stack levels required when called:    5
 26986 ;; This function calls:
 26987 ;;		_TMR5_CallBack
 26988 ;;		_TMR5_WriteTimer
 26989 ;; This function is called by:
 26990 ;;		Interrupt level 1
 26991 ;; This function uses a non-reentrant model
 26992 ;;
 26993                           
 26994                           	psect	text130
 26995  018AD8                     __ptext130:
 26996                           	opt callstack 0
 26997  018AD8                     _TMR5_ISR:
 26998                           	opt callstack 12
 26999                           
 27000                           ;incstack = 0
 27001  018AD8  006F FF60  F04C    	movff	status,??_TMR5_ISR+2
 27002  018ADE  0060  F030  F04D   	movff	btemp+11,??_TMR5_ISR+3
 27003  018AE4  EE16  F00B         	lfsr	1,___intlo_sp
 27004                           
 27005                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 27006  018AE8  0139               	movlb	57	; () banked
 27007  018AEA  9DA8               	bcf	168,6,b	;volatile
 27008                           
 27009                           ; BSR set to: 57
 27010                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 27011  018AEC  0060  F0C3  FFE6   	movff	_timer5ReloadVal,postinc1
 27012  018AF2  0060  F0C7  FFE6   	movff	_timer5ReloadVal+1,postinc1
 27013  018AF8  EC6A  F0C7         	call	_TMR5_WriteTimer	;wreg free
 27014                           
 27015                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 27016  018AFC  0102               	movlb	2	; () banked
 27017  018AFE  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 27018  018B00  6E4A               	movwf	??_TMR5_ISR^0,c
 27019  018B02  6A4B               	clrf	(??_TMR5_ISR+1)^0,c
 27020  018B04  0E05               	movlw	5
 27021  018B06  264A               	addwf	??_TMR5_ISR^0,f,c
 27022  018B08  0E00               	movlw	0
 27023  018B0A  224B               	addwfc	(??_TMR5_ISR+1)^0,f,c
 27024  018B0C  4A2E               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 27025  018B0E  2A2F               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 27026  018B10  504A               	movf	??_TMR5_ISR^0,w,c
 27027  018B12  5C2E               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 27028  018B14  504B               	movf	(??_TMR5_ISR+1)^0,w,c
 27029  018B16  582F               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 27030  018B18  A0D8               	btfss	status,0,c
 27031  018B1A  D004               	goto	i1l1047
 27032                           
 27033                           ; BSR set to: 2
 27034                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 27035  018B1C  EC04  F0CB         	call	_TMR5_CallBack	;wreg free
 27036                           
 27037                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 27038  018B20  6A2E               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 27039  018B22  6A2F               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 27040  018B24                     i1l1047:
 27041  018B24  0060  F134  F00C   	movff	??_TMR5_ISR+3,btemp+11
 27042  018B2A  0060  F133  FFD8   	movff	??_TMR5_ISR+2,status
 27043  018B30  0011               	retfie		f
 27044  018B32                     __end_of_TMR5_ISR:
 27045                           	opt callstack 0
 27046                           
 27047 ;; *************** function _TMR5_WriteTimer *****************
 27048 ;; Defined at:
 27049 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 27050 ;; Parameters:    Size  Location     Type
 27051 ;;  timerVal        2  [STACK] unsigned short 
 27052 ;; Auto vars:     Size  Location     Type
 27053 ;;		None
 27054 ;; Return value:  Size  Location     Type
 27055 ;;                  1  [STACK] void 
 27056 ;; Registers used:
 27057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27058 ;; Tracked objects:
 27059 ;;		On entry : 3F/39
 27060 ;;		On exit  : 0/0
 27061 ;;		Unchanged: 0/0
 27062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27067 ;;Total ram usage:        0 bytes
 27068 ;; Hardware stack levels used:    1
 27069 ;; Hardware stack levels required when called:    3
 27070 ;; This function calls:
 27071 ;;		Nothing
 27072 ;; This function is called by:
 27073 ;;		_TMR5_ISR
 27074 ;; This function uses a reentrant model
 27075 ;;
 27076                           
 27077                           	psect	text131
 27078  018ED4                     __ptext131:
 27079                           	opt callstack 0
 27080  018ED4                     _TMR5_WriteTimer:
 27081                           	opt callstack 13
 27082                           
 27083                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 27084                           
 27085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27086                           ;incstack = 0
 27087  018ED4  A49A               	btfss	154,2,c	;volatile
 27088  018ED6  D00F               	goto	l9660
 27089                           
 27090                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 27091  018ED8  909A               	bcf	154,0,c	;volatile
 27092                           
 27093                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 27094                           ;stkvar	_timerVal @ sp[(0)+-2]
 27095  018EDA  0EFF               	movlw	255
 27096  018EDC  24E1               	addwf	fsr1l,w,c
 27097  018EDE  6ED9               	movwf	fsr2l,c
 27098  018EE0  0EFF               	movlw	255
 27099  018EE2  20E2               	addwfc	fsr1h,w,c
 27100  018EE4  6EDA               	movwf	fsr2h,c
 27101  018EE6  50DF               	movf	indf2,w,c
 27102  018EE8  6E99               	movwf	153,c	;volatile
 27103                           
 27104                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 27105                           ;stkvar	_timerVal @ sp[(0)+-2]
 27106  018EEA  0EFE               	movlw	-2
 27107  018EEC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 27108                           
 27109                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 27110  018EF2  809A               	bsf	154,0,c	;volatile
 27111                           
 27112                           ;mcc_generated_files/tmr5.c: 142:  } else {
 27113  018EF4  D00C               	goto	l1030
 27114  018EF6                     l9660:
 27115                           
 27116                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 27117                           ;stkvar	_timerVal @ sp[(0)+-2]
 27118  018EF6  0EFF               	movlw	255
 27119  018EF8  24E1               	addwf	fsr1l,w,c
 27120  018EFA  6ED9               	movwf	fsr2l,c
 27121  018EFC  0EFF               	movlw	255
 27122  018EFE  20E2               	addwfc	fsr1h,w,c
 27123  018F00  6EDA               	movwf	fsr2h,c
 27124  018F02  50DF               	movf	indf2,w,c
 27125  018F04  6E99               	movwf	153,c	;volatile
 27126                           
 27127                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 27128                           ;stkvar	_timerVal @ sp[(0)+-2]
 27129  018F06  0EFE               	movlw	-2
 27130  018F08  006F FF8F FF98     	movff	plusw1,16280	;volatile
 27131  018F0E                     l1030:
 27132                           
 27133                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 27134  018F0E  52E5               	movf	postdec1,f,c
 27135  018F10  52E5               	movf	postdec1,f,c
 27136  018F12  0012               	return		;funcret
 27137  018F14                     __end_of_TMR5_WriteTimer:
 27138                           	opt callstack 0
 27139                           
 27140 ;; *************** function _TMR5_CallBack *****************
 27141 ;; Defined at:
 27142 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 27143 ;; Parameters:    Size  Location     Type
 27144 ;;		None
 27145 ;; Auto vars:     Size  Location     Type
 27146 ;;		None
 27147 ;; Return value:  Size  Location     Type
 27148 ;;                  1  [STACK] void 
 27149 ;; Registers used:
 27150 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 27151 ;; Tracked objects:
 27152 ;;		On entry : 3F/2
 27153 ;;		On exit  : 0/0
 27154 ;;		Unchanged: 0/0
 27155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27160 ;;Total ram usage:        0 bytes
 27161 ;; Hardware stack levels used:    1
 27162 ;; Hardware stack levels required when called:    4
 27163 ;; This function calls:
 27164 ;;		Absolute function
 27165 ;;		_TMR5_DefaultInterruptHandler
 27166 ;; This function is called by:
 27167 ;;		_TMR5_ISR
 27168 ;; This function uses a reentrant model
 27169 ;;
 27170                           
 27171                           	psect	text132
 27172  019608                     __ptext132:
 27173                           	opt callstack 0
 27174  019608                     _TMR5_CallBack:
 27175                           	opt callstack 12
 27176                           
 27177                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 27178                           
 27179                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27180                           ;incstack = 0
 27181  019608  0100               	movlb	0	; () banked
 27182  01960A  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 27183  01960C  11AD               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 27184  01960E  11AE               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 27185  019610  B4D8               	btfsc	status,2,c
 27186  019612  0012               	return	
 27187                           
 27188                           ; BSR set to: 0
 27189                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 27190  019614  D801               	call	u886_28
 27191  019616  0012               	return	
 27192  019618                     u886_28:
 27193  019618  0005               	push	
 27194  01961A  6EFA               	movwf	pclath,c
 27195  01961C  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 27196  01961E  6EFD               	movwf	tosl,c
 27197  019620  51AD               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 27198  019622  6EFE               	movwf	tosh,c
 27199  019624  51AE               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 27200  019626  6EFF               	movwf	tosu,c
 27201  019628  50FA               	movf	pclath,w,c
 27202  01962A  0012               	return		;indir
 27203  01962C                     __end_of_TMR5_CallBack:
 27204                           	opt callstack 0
 27205                           
 27206 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 27207 ;; Defined at:
 27208 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 27209 ;; Parameters:    Size  Location     Type
 27210 ;;		None
 27211 ;; Auto vars:     Size  Location     Type
 27212 ;;		None
 27213 ;; Return value:  Size  Location     Type
 27214 ;;                  1  [STACK] void 
 27215 ;; Registers used:
 27216 ;;		wreg, status,2, status,0, btemp+11
 27217 ;; Tracked objects:
 27218 ;;		On entry : 3F/0
 27219 ;;		On exit  : 3F/2
 27220 ;;		Unchanged: 0/0
 27221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27226 ;;Total ram usage:        0 bytes
 27227 ;; Hardware stack levels used:    1
 27228 ;; Hardware stack levels required when called:    3
 27229 ;; This function calls:
 27230 ;;		Nothing
 27231 ;; This function is called by:
 27232 ;;		_TMR5_Initialize
 27233 ;;		_TMR5_CallBack
 27234 ;; This function uses a reentrant model
 27235 ;;
 27236                           
 27237                           	psect	text133
 27238  0194F6                     __ptext133:
 27239                           	opt callstack 0
 27240  0194F6                     _TMR5_DefaultInterruptHandler:
 27241                           	opt callstack 12
 27242                           
 27243                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 27244                           
 27245                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27246                           ;incstack = 0
 27247  0194F6  A0BE               	btfss	190,0,c	;volatile
 27248  0194F8  D002               	goto	u829_20
 27249  0194FA  0E01               	movlw	1
 27250  0194FC  D001               	goto	u829_26
 27251  0194FE                     u829_20:
 27252  0194FE  0E00               	movlw	0
 27253  019500                     u829_26:
 27254  019500  0AFF               	xorlw	255
 27255  019502  6E0C               	movwf	(btemp+11)^0,c
 27256  019504  50BE               	movf	190,w,c	;volatile
 27257  019506  180C               	xorwf	(btemp+11)^0,w,c
 27258  019508  0BFE               	andlw	-2
 27259  01950A  180C               	xorwf	(btemp+11)^0,w,c
 27260  01950C  6EBE               	movwf	190,c	;volatile
 27261                           
 27262                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 27263  01950E  0E01               	movlw	1
 27264  019510  0102               	movlb	2	; () banked
 27265  019512  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 27266  019514  0E00               	movlw	0
 27267  019516  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 27268  019518  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 27269  01951A  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 27270                           
 27271                           ; BSR set to: 2
 27272                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27273  01951C  0012               	return		;funcret
 27274  01951E                     __end_of_TMR5_DefaultInterruptHandler:
 27275                           	opt callstack 0
 27276                           
 27277 ;; *************** function _TMR3_ISR *****************
 27278 ;; Defined at:
 27279 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 27280 ;; Parameters:    Size  Location     Type
 27281 ;;		None
 27282 ;; Auto vars:     Size  Location     Type
 27283 ;;		None
 27284 ;; Return value:  Size  Location     Type
 27285 ;;                  1    wreg      void 
 27286 ;; Registers used:
 27287 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 27288 ;; Tracked objects:
 27289 ;;		On entry : 0/0
 27290 ;;		On exit  : 0/0
 27291 ;;		Unchanged: 0/0
 27292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27295 ;;      Temps:          0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27296 ;;      Totals:         0       0       0      17       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27297 ;;Total ram usage:       17 bytes
 27298 ;; Hardware stack levels used:    1
 27299 ;; Hardware stack levels required when called:    6
 27300 ;; This function calls:
 27301 ;;		_TMR3_CallBack
 27302 ;;		_TMR3_WriteTimer
 27303 ;; This function is called by:
 27304 ;;		Interrupt level 1
 27305 ;; This function uses a non-reentrant model
 27306 ;;
 27307                           
 27308                           	psect	text134
 27309  01777C                     __ptext134:
 27310                           	opt callstack 0
 27311  01777C                     _TMR3_ISR:
 27312                           	opt callstack 11
 27313                           
 27314                           ; BSR set to: 2
 27315                           ;incstack = 0
 27316  01777C  006F FF60  F2CC    	movff	status,??_TMR3_ISR
 27317  017782  006F FFD8  F2CD    	movff	tblptrl,??_TMR3_ISR+1
 27318  017788  006F FFDC  F2CE    	movff	tblptrh,??_TMR3_ISR+2
 27319  01778E  006F FFE0  F2CF    	movff	tblptru,??_TMR3_ISR+3
 27320  017794  006F FFD4  F2D0    	movff	tablat,??_TMR3_ISR+4
 27321  01779A  0060  F004  F2D1   	movff	btemp,??_TMR3_ISR+5
 27322  0177A0  0060  F008  F2D2   	movff	btemp+1,??_TMR3_ISR+6
 27323  0177A6  0060  F00C  F2D3   	movff	btemp+2,??_TMR3_ISR+7
 27324  0177AC  0060  F010  F2D4   	movff	btemp+3,??_TMR3_ISR+8
 27325  0177B2  0060  F014  F2D5   	movff	btemp+4,??_TMR3_ISR+9
 27326  0177B8  0060  F018  F2D6   	movff	btemp+5,??_TMR3_ISR+10
 27327  0177BE  0060  F01C  F2D7   	movff	btemp+6,??_TMR3_ISR+11
 27328  0177C4  0060  F020  F2D8   	movff	btemp+7,??_TMR3_ISR+12
 27329  0177CA  0060  F024  F2D9   	movff	btemp+8,??_TMR3_ISR+13
 27330  0177D0  0060  F028  F2DA   	movff	btemp+9,??_TMR3_ISR+14
 27331  0177D6  0060  F02C  F2DB   	movff	btemp+10,??_TMR3_ISR+15
 27332  0177DC  0060  F030  F2DC   	movff	btemp+11,??_TMR3_ISR+16
 27333  0177E2  EE16  F00B         	lfsr	1,___intlo_sp
 27334                           
 27335                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 27336  0177E6  0139               	movlb	57	; () banked
 27337  0177E8  9DA6               	bcf	166,6,b	;volatile
 27338                           
 27339                           ; BSR set to: 57
 27340                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 27341  0177EA  0060  F0B3  FFE6   	movff	_timer3ReloadVal,postinc1
 27342  0177F0  0060  F0B7  FFE6   	movff	_timer3ReloadVal+1,postinc1
 27343  0177F6  EC8A  F0C7         	call	_TMR3_WriteTimer	;wreg free
 27344                           
 27345                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 27346  0177FA  4A2A               	infsnz	TMR3_ISR@CountCallBack^0,f,c	;volatile
 27347  0177FC  2A2B               	incf	(TMR3_ISR@CountCallBack+1)^0,f,c	;volatile
 27348  0177FE  502B               	movf	(TMR3_ISR@CountCallBack+1)^0,w,c	;volatile
 27349  017800  E104               	bnz	i1u1087_20
 27350  017802  0E28               	movlw	40
 27351  017804  5C2A               	subwf	TMR3_ISR@CountCallBack^0,w,c	;volatile
 27352  017806  A0D8               	btfss	status,0,c
 27353  017808  D004               	goto	i1l1235
 27354  01780A                     i1u1087_20:
 27355                           
 27356                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 27357  01780A  EC16  F0CB         	call	_TMR3_CallBack	;wreg free
 27358                           
 27359                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 27360  01780E  6A2A               	clrf	TMR3_ISR@CountCallBack^0,c	;volatile
 27361  017810  6A2B               	clrf	(TMR3_ISR@CountCallBack+1)^0,c	;volatile
 27362  017812                     i1l1235:
 27363  017812  0060  FB70  F00C   	movff	??_TMR3_ISR+16,btemp+11
 27364  017818  0060  FB6C  F00B   	movff	??_TMR3_ISR+15,btemp+10
 27365  01781E  0060  FB68  F00A   	movff	??_TMR3_ISR+14,btemp+9
 27366  017824  0060  FB64  F009   	movff	??_TMR3_ISR+13,btemp+8
 27367  01782A  0060  FB60  F008   	movff	??_TMR3_ISR+12,btemp+7
 27368  017830  0060  FB5C  F007   	movff	??_TMR3_ISR+11,btemp+6
 27369  017836  0060  FB58  F006   	movff	??_TMR3_ISR+10,btemp+5
 27370  01783C  0060  FB54  F005   	movff	??_TMR3_ISR+9,btemp+4
 27371  017842  0060  FB50  F004   	movff	??_TMR3_ISR+8,btemp+3
 27372  017848  0060  FB4C  F003   	movff	??_TMR3_ISR+7,btemp+2
 27373  01784E  0060  FB48  F002   	movff	??_TMR3_ISR+6,btemp+1
 27374  017854  0060  FB44  F001   	movff	??_TMR3_ISR+5,btemp
 27375  01785A  0060  FB43  FFF5   	movff	??_TMR3_ISR+4,tablat
 27376  017860  0060  FB3F  FFF8   	movff	??_TMR3_ISR+3,tblptru
 27377  017866  0060  FB3B  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 27378  01786C  0060  FB37  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 27379  017872  0060  FB33  FFD8   	movff	??_TMR3_ISR,status
 27380  017878  0011               	retfie		f
 27381  01787A                     __end_of_TMR3_ISR:
 27382                           	opt callstack 0
 27383                           
 27384 ;; *************** function _TMR3_WriteTimer *****************
 27385 ;; Defined at:
 27386 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 27387 ;; Parameters:    Size  Location     Type
 27388 ;;  timerVal        2  [STACK] unsigned short 
 27389 ;; Auto vars:     Size  Location     Type
 27390 ;;		None
 27391 ;; Return value:  Size  Location     Type
 27392 ;;                  1  [STACK] void 
 27393 ;; Registers used:
 27394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27395 ;; Tracked objects:
 27396 ;;		On entry : 3F/39
 27397 ;;		On exit  : 0/0
 27398 ;;		Unchanged: 0/0
 27399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27404 ;;Total ram usage:        0 bytes
 27405 ;; Hardware stack levels used:    1
 27406 ;; Hardware stack levels required when called:    3
 27407 ;; This function calls:
 27408 ;;		Nothing
 27409 ;; This function is called by:
 27410 ;;		_TMR3_ISR
 27411 ;; This function uses a reentrant model
 27412 ;;
 27413                           
 27414                           	psect	text135
 27415  018F14                     __ptext135:
 27416                           	opt callstack 0
 27417  018F14                     _TMR3_WriteTimer:
 27418                           	opt callstack 13
 27419                           
 27420                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 27421                           
 27422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27423                           ;incstack = 0
 27424  018F14  A4A6               	btfss	166,2,c	;volatile
 27425  018F16  D00F               	goto	l6178
 27426                           
 27427                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 27428  018F18  90A6               	bcf	166,0,c	;volatile
 27429                           
 27430                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 27431                           ;stkvar	_timerVal @ sp[(0)+-2]
 27432  018F1A  0EFF               	movlw	255
 27433  018F1C  24E1               	addwf	fsr1l,w,c
 27434  018F1E  6ED9               	movwf	fsr2l,c
 27435  018F20  0EFF               	movlw	255
 27436  018F22  20E2               	addwfc	fsr1h,w,c
 27437  018F24  6EDA               	movwf	fsr2h,c
 27438  018F26  50DF               	movf	indf2,w,c
 27439  018F28  6EA5               	movwf	165,c	;volatile
 27440                           
 27441                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 27442                           ;stkvar	_timerVal @ sp[(0)+-2]
 27443  018F2A  0EFE               	movlw	-2
 27444  018F2C  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 27445                           
 27446                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 27447  018F32  80A6               	bsf	166,0,c	;volatile
 27448                           
 27449                           ;mcc_generated_files/tmr3.c: 141:     }
 27450  018F34  D00C               	goto	l1218
 27451  018F36                     l6178:
 27452                           
 27453                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 27454                           ;stkvar	_timerVal @ sp[(0)+-2]
 27455  018F36  0EFF               	movlw	255
 27456  018F38  24E1               	addwf	fsr1l,w,c
 27457  018F3A  6ED9               	movwf	fsr2l,c
 27458  018F3C  0EFF               	movlw	255
 27459  018F3E  20E2               	addwfc	fsr1h,w,c
 27460  018F40  6EDA               	movwf	fsr2h,c
 27461  018F42  50DF               	movf	indf2,w,c
 27462  018F44  6EA5               	movwf	165,c	;volatile
 27463                           
 27464                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 27465                           ;stkvar	_timerVal @ sp[(0)+-2]
 27466  018F46  0EFE               	movlw	-2
 27467  018F48  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 27468  018F4E                     l1218:
 27469                           
 27470                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 27471  018F4E  52E5               	movf	postdec1,f,c
 27472  018F50  52E5               	movf	postdec1,f,c
 27473  018F52  0012               	return		;funcret
 27474  018F54                     __end_of_TMR3_WriteTimer:
 27475                           	opt callstack 0
 27476                           
 27477 ;; *************** function _TMR3_CallBack *****************
 27478 ;; Defined at:
 27479 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 27480 ;; Parameters:    Size  Location     Type
 27481 ;;		None
 27482 ;; Auto vars:     Size  Location     Type
 27483 ;;		None
 27484 ;; Return value:  Size  Location     Type
 27485 ;;                  1  [STACK] void 
 27486 ;; Registers used:
 27487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 27488 ;; Tracked objects:
 27489 ;;		On entry : 0/39
 27490 ;;		On exit  : 0/0
 27491 ;;		Unchanged: 0/0
 27492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27497 ;;Total ram usage:        0 bytes
 27498 ;; Hardware stack levels used:    1
 27499 ;; Hardware stack levels required when called:    5
 27500 ;; This function calls:
 27501 ;;		Absolute function
 27502 ;;		_TMR3_DefaultInterruptHandler
 27503 ;;		_calc_bsoc
 27504 ;; This function is called by:
 27505 ;;		_TMR3_ISR
 27506 ;; This function uses a reentrant model
 27507 ;;
 27508                           
 27509                           	psect	text136
 27510  01962C                     __ptext136:
 27511                           	opt callstack 0
 27512  01962C                     _TMR3_CallBack:
 27513                           	opt callstack 11
 27514                           
 27515                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 27516                           
 27517                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27518                           ;incstack = 0
 27519  01962C  0100               	movlb	0	; () banked
 27520  01962E  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 27521  019630  11AA               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 27522  019632  11AB               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 27523  019634  B4D8               	btfsc	status,2,c
 27524  019636  0012               	return	
 27525                           
 27526                           ; BSR set to: 0
 27527                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 27528  019638  D801               	call	u888_28
 27529  01963A  0012               	return	
 27530  01963C                     u888_28:
 27531  01963C  0005               	push	
 27532  01963E  6EFA               	movwf	pclath,c
 27533  019640  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 27534  019642  6EFD               	movwf	tosl,c
 27535  019644  51AA               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 27536  019646  6EFE               	movwf	tosh,c
 27537  019648  51AB               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 27538  01964A  6EFF               	movwf	tosu,c
 27539  01964C  50FA               	movf	pclath,w,c
 27540  01964E  0012               	return		;indir
 27541  019650                     __end_of_TMR3_CallBack:
 27542                           	opt callstack 0
 27543                           
 27544 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 27545 ;; Defined at:
 27546 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 27547 ;; Parameters:    Size  Location     Type
 27548 ;;		None
 27549 ;; Auto vars:     Size  Location     Type
 27550 ;;		None
 27551 ;; Return value:  Size  Location     Type
 27552 ;;                  1  [STACK] void 
 27553 ;; Registers used:
 27554 ;;		None
 27555 ;; Tracked objects:
 27556 ;;		On entry : 3F/0
 27557 ;;		On exit  : 0/0
 27558 ;;		Unchanged: 0/0
 27559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27564 ;;Total ram usage:        0 bytes
 27565 ;; Hardware stack levels used:    1
 27566 ;; Hardware stack levels required when called:    3
 27567 ;; This function calls:
 27568 ;;		Nothing
 27569 ;; This function is called by:
 27570 ;;		_TMR3_Initialize
 27571 ;;		_TMR3_CallBack
 27572 ;; This function uses a reentrant model
 27573 ;;
 27574                           
 27575                           	psect	text137
 27576  019938                     __ptext137:
 27577                           	opt callstack 0
 27578  019938                     _TMR3_DefaultInterruptHandler:
 27579                           	opt callstack 12
 27580                           
 27581                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27582                           
 27583                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27584                           ;incstack = 0
 27585  019938  0012               	return		;funcret
 27586  01993A                     __end_of_TMR3_DefaultInterruptHandler:
 27587                           	opt callstack 0
 27588                           
 27589 ;; *************** function _calc_bsoc *****************
 27590 ;; Defined at:
 27591 ;;		line 36 in file "bsoc.c"
 27592 ;; Parameters:    Size  Location     Type
 27593 ;;		None
 27594 ;; Auto vars:     Size  Location     Type
 27595 ;;  temp            2  [STACK] unsigned short 
 27596 ;; Return value:  Size  Location     Type
 27597 ;;                  1  [STACK] void 
 27598 ;; Registers used:
 27599 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 27600 ;; Tracked objects:
 27601 ;;		On entry : 3F/0
 27602 ;;		On exit  : 3F/1
 27603 ;;		Unchanged: 0/0
 27604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27609 ;;Total ram usage:        0 bytes
 27610 ;; Hardware stack levels used:    1
 27611 ;; Hardware stack levels required when called:    4
 27612 ;; This function calls:
 27613 ;;		_Volts_to_SOC
 27614 ;;		___fladd
 27615 ;;		___fldiv
 27616 ;;		___flge
 27617 ;;		___flmul
 27618 ;;		___flneg
 27619 ;;		___fltol
 27620 ;;		___xxtofl
 27621 ;; This function is called by:
 27622 ;;		_init_bsoc
 27623 ;;		_TMR3_CallBack
 27624 ;; This function uses a reentrant model
 27625 ;;
 27626                           
 27627                           	psect	text138
 27628  01360E                     __ptext138:
 27629                           	opt callstack 0
 27630  01360E                     _calc_bsoc:
 27631                           	opt callstack 0
 27632                           
 27633                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27634  01360E  52E6               	movf	postinc1,f,c
 27635  013610  52E6               	movf	postinc1,f,c
 27636                           
 27637                           ;incstack = 0
 27638                           ;bsoc.c: 38:  uint16_t temp;;bsoc.c: 40:  do { LATEbits.LATE1 = 1; } while(0);
 27639  013612  82BE               	bsf	190,1,c	;volatile
 27640                           
 27641                           ;bsoc.c: 42:  C.dynamic_ah += (C.c_bat / 3600.0);
 27642  013614  0E00               	movlw	0
 27643  013616  6EE6               	movwf	postinc1,c
 27644  013618  0E00               	movlw	0
 27645  01361A  6EE6               	movwf	postinc1,c
 27646  01361C  0E61               	movlw	97
 27647  01361E  6EE6               	movwf	postinc1,c
 27648  013620  0E45               	movlw	69
 27649  013622  6EE6               	movwf	postinc1,c
 27650  013624  0060  F513  FFE6   	movff	_C+68,postinc1
 27651  01362A  0060  F517  FFE6   	movff	_C+69,postinc1
 27652  013630  0060  F51B  FFE6   	movff	_C+70,postinc1
 27653  013636  0060  F51F  FFE6   	movff	_C+71,postinc1
 27654  01363C  ECEF  F09D         	call	___fldiv	;wreg free
 27655  013640  0060  F007  FFE6   	movff	btemp,postinc1
 27656  013646  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27657  01364C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27658  013652  0060  F013  FFE6   	movff	btemp+3,postinc1
 27659  013658  0060  F613  FFE6   	movff	_C+132,postinc1
 27660  01365E  0060  F617  FFE6   	movff	_C+133,postinc1
 27661  013664  0060  F61B  FFE6   	movff	_C+134,postinc1
 27662  01366A  0060  F61F  FFE6   	movff	_C+135,postinc1
 27663  013670  EC29  F097         	call	___fladd	;wreg free
 27664  013674  0060  F004  F184   	movff	btemp,_C+132	;volatile
 27665  01367A  0060  F008  F185   	movff	btemp+1,_C+133	;volatile
 27666  013680  0060  F00C  F186   	movff	btemp+2,_C+134	;volatile
 27667  013686  0060  F010  F187   	movff	btemp+3,_C+135	;volatile
 27668                           
 27669                           ;bsoc.c: 43:  if (C.dynamic_ah > (C.bank_ah))
 27670  01368C  0060  F613  FFE6   	movff	_C+132,postinc1
 27671  013692  0060  F617  FFE6   	movff	_C+133,postinc1
 27672  013698  0060  F61B  FFE6   	movff	_C+134,postinc1
 27673  01369E  0060  F61F  FFE6   	movff	_C+135,postinc1
 27674  0136A4  0060  F5F3  FFE6   	movff	_C+124,postinc1
 27675  0136AA  0060  F5F7  FFE6   	movff	_C+125,postinc1
 27676  0136B0  0060  F5FB  FFE6   	movff	_C+126,postinc1
 27677  0136B6  0060  F5FF  FFE6   	movff	_C+127,postinc1
 27678  0136BC  EC04  F0B6         	call	___flge	;wreg free
 27679  0136C0  B001               	btfsc	btemp& (0+255),0,c
 27680  0136C2  D008               	goto	l9520
 27681                           
 27682                           ;bsoc.c: 44:   C.dynamic_ah = C.bank_ah;
 27683  0136C4  C17C  F184         	movff	_C+124,_C+132	;volatile
 27684  0136C8  C17D  F185         	movff	_C+125,_C+133	;volatile
 27685  0136CC  C17E  F186         	movff	_C+126,_C+134	;volatile
 27686  0136D0  C17F  F187         	movff	_C+127,_C+135	;volatile
 27687  0136D4                     l9520:
 27688                           
 27689                           ;bsoc.c: 45:  if (C.dynamic_ah < 0.1)
 27690  0136D4  0ECD               	movlw	205
 27691  0136D6  6EE6               	movwf	postinc1,c
 27692  0136D8  0ECC               	movlw	204
 27693  0136DA  6EE6               	movwf	postinc1,c
 27694  0136DC  0ECC               	movlw	204
 27695  0136DE  6EE6               	movwf	postinc1,c
 27696  0136E0  0E3D               	movlw	61
 27697  0136E2  6EE6               	movwf	postinc1,c
 27698  0136E4  0060  F613  FFE6   	movff	_C+132,postinc1
 27699  0136EA  0060  F617  FFE6   	movff	_C+133,postinc1
 27700  0136F0  0060  F61B  FFE6   	movff	_C+134,postinc1
 27701  0136F6  0060  F61F  FFE6   	movff	_C+135,postinc1
 27702  0136FC  EC04  F0B6         	call	___flge	;wreg free
 27703  013700  B001               	btfsc	btemp& (0+255),0,c
 27704  013702  D009               	goto	l9524
 27705                           
 27706                           ;bsoc.c: 46:   C.dynamic_ah = 0.1;
 27707  013704  0ECD               	movlw	205
 27708  013706  0101               	movlb	1	; () banked
 27709  013708  6F84               	movwf	(_C+132)& (0+255),b	;volatile
 27710  01370A  0ECC               	movlw	204
 27711  01370C  6F85               	movwf	(_C+133)& (0+255),b	;volatile
 27712  01370E  0ECC               	movlw	204
 27713  013710  6F86               	movwf	(_C+134)& (0+255),b	;volatile
 27714  013712  0E3D               	movlw	61
 27715  013714  6F87               	movwf	(_C+135)& (0+255),b	;volatile
 27716  013716                     l9524:
 27717                           
 27718                           ;bsoc.c: 48:  C.pv_ah += (C.c_pv / 3600.0);
 27719  013716  0E00               	movlw	0
 27720  013718  6EE6               	movwf	postinc1,c
 27721  01371A  0E00               	movlw	0
 27722  01371C  6EE6               	movwf	postinc1,c
 27723  01371E  0E61               	movlw	97
 27724  013720  6EE6               	movwf	postinc1,c
 27725  013722  0E45               	movlw	69
 27726  013724  6EE6               	movwf	postinc1,c
 27727  013726  0060  F523  FFE6   	movff	_C+72,postinc1
 27728  01372C  0060  F527  FFE6   	movff	_C+73,postinc1
 27729  013732  0060  F52B  FFE6   	movff	_C+74,postinc1
 27730  013738  0060  F52F  FFE6   	movff	_C+75,postinc1
 27731  01373E  ECEF  F09D         	call	___fldiv	;wreg free
 27732  013742  0060  F007  FFE6   	movff	btemp,postinc1
 27733  013748  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27734  01374E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27735  013754  0060  F013  FFE6   	movff	btemp+3,postinc1
 27736  01375A  0060  F623  FFE6   	movff	_C+136,postinc1
 27737  013760  0060  F627  FFE6   	movff	_C+137,postinc1
 27738  013766  0060  F62B  FFE6   	movff	_C+138,postinc1
 27739  01376C  0060  F62F  FFE6   	movff	_C+139,postinc1
 27740  013772  EC29  F097         	call	___fladd	;wreg free
 27741  013776  0060  F004  F188   	movff	btemp,_C+136	;volatile
 27742  01377C  0060  F008  F189   	movff	btemp+1,_C+137	;volatile
 27743  013782  0060  F00C  F18A   	movff	btemp+2,_C+138	;volatile
 27744  013788  0060  F010  F18B   	movff	btemp+3,_C+139	;volatile
 27745                           
 27746                           ;bsoc.c: 49:  C.pvkw += (C.p_pv / 3600.0);
 27747  01378E  0E00               	movlw	0
 27748  013790  6EE6               	movwf	postinc1,c
 27749  013792  0E00               	movlw	0
 27750  013794  6EE6               	movwf	postinc1,c
 27751  013796  0E61               	movlw	97
 27752  013798  6EE6               	movwf	postinc1,c
 27753  01379A  0E45               	movlw	69
 27754  01379C  6EE6               	movwf	postinc1,c
 27755  01379E  0060  F5C3  FFE6   	movff	_C+112,postinc1
 27756  0137A4  0060  F5C7  FFE6   	movff	_C+113,postinc1
 27757  0137AA  0060  F5CB  FFE6   	movff	_C+114,postinc1
 27758  0137B0  0060  F5CF  FFE6   	movff	_C+115,postinc1
 27759  0137B6  ECEF  F09D         	call	___fldiv	;wreg free
 27760  0137BA  0060  F007  FFE6   	movff	btemp,postinc1
 27761  0137C0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27762  0137C6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27763  0137CC  0060  F013  FFE6   	movff	btemp+3,postinc1
 27764  0137D2  0060  F663  FFE6   	movff	_C+152,postinc1
 27765  0137D8  0060  F667  FFE6   	movff	_C+153,postinc1
 27766  0137DE  0060  F66B  FFE6   	movff	_C+154,postinc1
 27767  0137E4  0060  F66F  FFE6   	movff	_C+155,postinc1
 27768  0137EA  EC29  F097         	call	___fladd	;wreg free
 27769  0137EE  0060  F004  F198   	movff	btemp,_C+152	;volatile
 27770  0137F4  0060  F008  F199   	movff	btemp+1,_C+153	;volatile
 27771  0137FA  0060  F00C  F19A   	movff	btemp+2,_C+154	;volatile
 27772  013800  0060  F010  F19B   	movff	btemp+3,_C+155	;volatile
 27773                           
 27774                           ;bsoc.c: 50:  C.invkw += (C.p_inverter / 3600.0);
 27775  013806  0E00               	movlw	0
 27776  013808  6EE6               	movwf	postinc1,c
 27777  01380A  0E00               	movlw	0
 27778  01380C  6EE6               	movwf	postinc1,c
 27779  01380E  0E61               	movlw	97
 27780  013810  6EE6               	movwf	postinc1,c
 27781  013812  0E45               	movlw	69
 27782  013814  6EE6               	movwf	postinc1,c
 27783  013816  0060  F5B3  FFE6   	movff	_C+108,postinc1
 27784  01381C  0060  F5B7  FFE6   	movff	_C+109,postinc1
 27785  013822  0060  F5BB  FFE6   	movff	_C+110,postinc1
 27786  013828  0060  F5BF  FFE6   	movff	_C+111,postinc1
 27787  01382E  ECEF  F09D         	call	___fldiv	;wreg free
 27788  013832  0060  F007  FFE6   	movff	btemp,postinc1
 27789  013838  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27790  01383E  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27791  013844  0060  F013  FFE6   	movff	btemp+3,postinc1
 27792  01384A  0060  F673  FFE6   	movff	_C+156,postinc1
 27793  013850  0060  F677  FFE6   	movff	_C+157,postinc1
 27794  013856  0060  F67B  FFE6   	movff	_C+158,postinc1
 27795  01385C  0060  F67F  FFE6   	movff	_C+159,postinc1
 27796  013862  EC29  F097         	call	___fladd	;wreg free
 27797  013866  0060  F004  F19C   	movff	btemp,_C+156	;volatile
 27798  01386C  0060  F008  F19D   	movff	btemp+1,_C+157	;volatile
 27799  013872  0060  F00C  F19E   	movff	btemp+2,_C+158	;volatile
 27800  013878  0060  F010  F19F   	movff	btemp+3,_C+159	;volatile
 27801                           
 27802                           ;bsoc.c: 51:  if (C.p_bat > 0.0)
 27803  01387E  0060  F5D3  FFE6   	movff	_C+116,postinc1
 27804  013884  0060  F5D7  FFE6   	movff	_C+117,postinc1
 27805  01388A  0060  F5DB  FFE6   	movff	_C+118,postinc1
 27806  013890  0060  F5DF  FFE6   	movff	_C+119,postinc1
 27807  013896  0E00               	movlw	0
 27808  013898  6EE6               	movwf	postinc1,c
 27809  01389A  0E00               	movlw	0
 27810  01389C  6EE6               	movwf	postinc1,c
 27811  01389E  0E00               	movlw	0
 27812  0138A0  6EE6               	movwf	postinc1,c
 27813  0138A2  0E00               	movlw	0
 27814  0138A4  6EE6               	movwf	postinc1,c
 27815  0138A6  EC04  F0B6         	call	___flge	;wreg free
 27816  0138AA  B001               	btfsc	btemp& (0+255),0,c
 27817  0138AC  D03C               	goto	l9534
 27818                           
 27819                           ;bsoc.c: 52:   C.bkwi += (C.p_bat / 3600.0);
 27820  0138AE  0E00               	movlw	0
 27821  0138B0  6EE6               	movwf	postinc1,c
 27822  0138B2  0E00               	movlw	0
 27823  0138B4  6EE6               	movwf	postinc1,c
 27824  0138B6  0E61               	movlw	97
 27825  0138B8  6EE6               	movwf	postinc1,c
 27826  0138BA  0E45               	movlw	69
 27827  0138BC  6EE6               	movwf	postinc1,c
 27828  0138BE  0060  F5D3  FFE6   	movff	_C+116,postinc1
 27829  0138C4  0060  F5D7  FFE6   	movff	_C+117,postinc1
 27830  0138CA  0060  F5DB  FFE6   	movff	_C+118,postinc1
 27831  0138D0  0060  F5DF  FFE6   	movff	_C+119,postinc1
 27832  0138D6  ECEF  F09D         	call	___fldiv	;wreg free
 27833  0138DA  0060  F007  FFE6   	movff	btemp,postinc1
 27834  0138E0  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27835  0138E6  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27836  0138EC  0060  F013  FFE6   	movff	btemp+3,postinc1
 27837  0138F2  0060  F643  FFE6   	movff	_C+144,postinc1
 27838  0138F8  0060  F647  FFE6   	movff	_C+145,postinc1
 27839  0138FE  0060  F64B  FFE6   	movff	_C+146,postinc1
 27840  013904  0060  F64F  FFE6   	movff	_C+147,postinc1
 27841  01390A  EC29  F097         	call	___fladd	;wreg free
 27842  01390E  0060  F004  F190   	movff	btemp,_C+144	;volatile
 27843  013914  0060  F008  F191   	movff	btemp+1,_C+145	;volatile
 27844  01391A  0060  F00C  F192   	movff	btemp+2,_C+146	;volatile
 27845  013920  0060  F010  F193   	movff	btemp+3,_C+147	;volatile
 27846  013926                     l9534:
 27847                           
 27848                           ;bsoc.c: 53:  if (C.p_bat < 0.0)
 27849  013926  0101               	movlb	1	; () banked
 27850  013928  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 27851  01392A  D03C               	goto	l9538
 27852                           
 27853                           ; BSR set to: 1
 27854                           ;bsoc.c: 54:   C.bkwo += (C.p_bat / 3600.0);
 27855  01392C  0E00               	movlw	0
 27856  01392E  6EE6               	movwf	postinc1,c
 27857  013930  0E00               	movlw	0
 27858  013932  6EE6               	movwf	postinc1,c
 27859  013934  0E61               	movlw	97
 27860  013936  6EE6               	movwf	postinc1,c
 27861  013938  0E45               	movlw	69
 27862  01393A  6EE6               	movwf	postinc1,c
 27863  01393C  0060  F5D3  FFE6   	movff	_C+116,postinc1
 27864  013942  0060  F5D7  FFE6   	movff	_C+117,postinc1
 27865  013948  0060  F5DB  FFE6   	movff	_C+118,postinc1
 27866  01394E  0060  F5DF  FFE6   	movff	_C+119,postinc1
 27867  013954  ECEF  F09D         	call	___fldiv	;wreg free
 27868  013958  0060  F007  FFE6   	movff	btemp,postinc1
 27869  01395E  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27870  013964  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27871  01396A  0060  F013  FFE6   	movff	btemp+3,postinc1
 27872  013970  0060  F653  FFE6   	movff	_C+148,postinc1
 27873  013976  0060  F657  FFE6   	movff	_C+149,postinc1
 27874  01397C  0060  F65B  FFE6   	movff	_C+150,postinc1
 27875  013982  0060  F65F  FFE6   	movff	_C+151,postinc1
 27876  013988  EC29  F097         	call	___fladd	;wreg free
 27877  01398C  0060  F004  F194   	movff	btemp,_C+148	;volatile
 27878  013992  0060  F008  F195   	movff	btemp+1,_C+149	;volatile
 27879  013998  0060  F00C  F196   	movff	btemp+2,_C+150	;volatile
 27880  01399E  0060  F010  F197   	movff	btemp+3,_C+151	;volatile
 27881  0139A4                     l9538:
 27882                           
 27883                           ;bsoc.c: 56:  temp = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 27884  0139A4  0E00               	movlw	0
 27885  0139A6  6EE6               	movwf	postinc1,c
 27886  0139A8  0E00               	movlw	0
 27887  0139AA  6EE6               	movwf	postinc1,c
 27888  0139AC  0EC8               	movlw	200
 27889  0139AE  6EE6               	movwf	postinc1,c
 27890  0139B0  0E42               	movlw	66
 27891  0139B2  6EE6               	movwf	postinc1,c
 27892  0139B4  0060  F5F3  FFE6   	movff	_C+124,postinc1
 27893  0139BA  0060  F5F7  FFE6   	movff	_C+125,postinc1
 27894  0139C0  0060  F5FB  FFE6   	movff	_C+126,postinc1
 27895  0139C6  0060  F5FF  FFE6   	movff	_C+127,postinc1
 27896  0139CC  0060  F613  FFE6   	movff	_C+132,postinc1
 27897  0139D2  0060  F617  FFE6   	movff	_C+133,postinc1
 27898  0139D8  0060  F61B  FFE6   	movff	_C+134,postinc1
 27899  0139DE  0060  F61F  FFE6   	movff	_C+135,postinc1
 27900  0139E4  ECEF  F09D         	call	___fldiv	;wreg free
 27901  0139E8  0060  F007  FFE6   	movff	btemp,postinc1
 27902  0139EE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27903  0139F4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27904  0139FA  0060  F013  FFE6   	movff	btemp+3,postinc1
 27905  013A00  EC14  F093         	call	___flmul	;wreg free
 27906  013A04  0060  F007  FFE6   	movff	btemp,postinc1
 27907  013A0A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27908  013A10  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27909  013A16  0060  F013  FFE6   	movff	btemp+3,postinc1
 27910  013A1C  EC4B  F0B5         	call	___fltol	;wreg free
 27911  013A20  0060  F004  F00B   	movff	btemp,btemp+10
 27912  013A26  0060  F008  F00C   	movff	btemp+1,btemp+11
 27913  013A2C  0E01               	movlw	1
 27914  013A2E  260B               	addwf	(btemp+10)^0,f,c
 27915  013A30  0E00               	movlw	0
 27916  013A32  220C               	addwfc	(btemp+11)^0,f,c
 27917                           
 27918                           ;stkvar	_temp @ sp[(-2)+0]
 27919  013A34  0EFE               	movlw	-2
 27920  013A36  0060  F02F  FFE3   	movff	btemp+10,plusw1
 27921  013A3C  0EFF               	movlw	-1
 27922  013A3E  0060  F033  FFE3   	movff	btemp+11,plusw1
 27923                           
 27924                           ;bsoc.c: 57:  C.soc = (Volts_to_SOC((uint32_t) C.v_bat * 1000.0) + temp) / 2;
 27925                           ;stkvar	_temp @ sp[(-2)+0]
 27926  013A44  0E00               	movlw	0
 27927  013A46  6EE6               	movwf	postinc1,c
 27928  013A48  0E00               	movlw	0
 27929  013A4A  6EE6               	movwf	postinc1,c
 27930  013A4C  0E7A               	movlw	122
 27931  013A4E  6EE6               	movwf	postinc1,c
 27932  013A50  0E44               	movlw	68
 27933  013A52  6EE6               	movwf	postinc1,c
 27934  013A54  0060  F553  FFE6   	movff	_C+84,postinc1
 27935  013A5A  0060  F557  FFE6   	movff	_C+85,postinc1
 27936  013A60  0060  F55B  FFE6   	movff	_C+86,postinc1
 27937  013A66  0060  F55F  FFE6   	movff	_C+87,postinc1
 27938  013A6C  EC4B  F0B5         	call	___fltol	;wreg free
 27939  013A70  0060  F007  FFE6   	movff	btemp,postinc1
 27940  013A76  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27941  013A7C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27942  013A82  0060  F013  FFE6   	movff	btemp+3,postinc1
 27943  013A88  0E00               	movlw	0
 27944  013A8A  6EE6               	movwf	postinc1,c
 27945  013A8C  ECBA  F0B1         	call	___xxtofl	;wreg free
 27946  013A90  0060  F007  FFE6   	movff	btemp,postinc1
 27947  013A96  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27948  013A9C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27949  013AA2  0060  F013  FFE6   	movff	btemp+3,postinc1
 27950  013AA8  EC14  F093         	call	___flmul	;wreg free
 27951  013AAC  0060  F007  FFE6   	movff	btemp,postinc1
 27952  013AB2  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27953  013AB8  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27954  013ABE  0060  F013  FFE6   	movff	btemp+3,postinc1
 27955  013AC4  EC4B  F0B5         	call	___fltol	;wreg free
 27956  013AC8  0060  F007  FFE6   	movff	btemp,postinc1
 27957  013ACE  0060  F00B  FFE6   	movff	btemp+1,postinc1
 27958  013AD4  0060  F00F  FFE6   	movff	btemp+2,postinc1
 27959  013ADA  0060  F013  FFE6   	movff	btemp+3,postinc1
 27960  013AE0  EC1E  F0C1         	call	_Volts_to_SOC	;wreg free
 27961  013AE4  0EFE               	movlw	-2
 27962  013AE6  50E3               	movf	plusw1,w,c
 27963  013AE8  2601               	addwf	btemp^0,f,c
 27964  013AEA  0EFF               	movlw	-1
 27965  013AEC  50E3               	movf	plusw1,w,c
 27966  013AEE  2202               	addwfc	(btemp+1)^0,f,c
 27967  013AF0  90D8               	bcf	status,0,c
 27968  013AF2  3002               	rrcf	(btemp+1)^0,w,c
 27969  013AF4  6E0C               	movwf	(btemp+11)^0,c
 27970  013AF6  3001               	rrcf	btemp^0,w,c
 27971  013AF8  6E0B               	movwf	(btemp+10)^0,c
 27972  013AFA  0060  F02C  F1A2   	movff	btemp+10,_C+162	;volatile
 27973  013B00  0060  F030  F1A3   	movff	btemp+11,_C+163	;volatile
 27974                           
 27975                           ;bsoc.c: 58:  if (C.soc > 100)
 27976  013B06  0101               	movlb	1	; () banked
 27977  013B08  51A3               	movf	(_C+163)& (0+255),w,b	;volatile
 27978  013B0A  E104               	bnz	u871_20
 27979  013B0C  0E65               	movlw	101
 27980  013B0E  5DA2               	subwf	(_C+162)& (0+255),w,b	;volatile
 27981  013B10  A0D8               	btfss	status,0,c
 27982  013B12  D004               	goto	l9546
 27983  013B14                     u871_20:
 27984                           
 27985                           ; BSR set to: 1
 27986                           ;bsoc.c: 59:   C.soc = 100;
 27987  013B14  0E00               	movlw	0
 27988  013B16  6FA3               	movwf	(_C+163)& (0+255),b	;volatile
 27989  013B18  0E64               	movlw	100
 27990  013B1A  6FA2               	movwf	(_C+162)& (0+255),b	;volatile
 27991  013B1C                     l9546:
 27992                           
 27993                           ; BSR set to: 1
 27994                           ;bsoc.c: 61:  if (C.c_bat < 0.0) {
 27995  013B1C  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 27996  013B1E  D043               	goto	l9550
 27997                           
 27998                           ; BSR set to: 1
 27999                           ;bsoc.c: 62:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 28000  013B20  0060  F513  FFE6   	movff	_C+68,postinc1
 28001  013B26  0060  F517  FFE6   	movff	_C+69,postinc1
 28002  013B2C  0060  F51B  FFE6   	movff	_C+70,postinc1
 28003  013B32  0060  F51F  FFE6   	movff	_C+71,postinc1
 28004  013B38  0060  F613  FFE6   	movff	_C+132,postinc1
 28005  013B3E  0060  F617  FFE6   	movff	_C+133,postinc1
 28006  013B44  0060  F61B  FFE6   	movff	_C+134,postinc1
 28007  013B4A  0060  F61F  FFE6   	movff	_C+135,postinc1
 28008  013B50  ECEF  F09D         	call	___fldiv	;wreg free
 28009  013B54  0060  F007  FFE6   	movff	btemp,postinc1
 28010  013B5A  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28011  013B60  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28012  013B66  0060  F013  FFE6   	movff	btemp+3,postinc1
 28013  013B6C  EC37  F0C6         	call	___flneg	;wreg free
 28014  013B70  0060  F007  FFE6   	movff	btemp,postinc1
 28015  013B76  0060  F00B  FFE6   	movff	btemp+1,postinc1
 28016  013B7C  0060  F00F  FFE6   	movff	btemp+2,postinc1
 28017  013B82  0060  F013  FFE6   	movff	btemp+3,postinc1
 28018  013B88  EC4B  F0B5         	call	___fltol	;wreg free
 28019  013B8C  0060  F004  F00B   	movff	btemp,btemp+10
 28020  013B92  0060  F008  F00C   	movff	btemp+1,btemp+11
 28021  013B98  0060  F02C  F1A0   	movff	btemp+10,_C+160	;volatile
 28022  013B9E  0060  F030  F1A1   	movff	btemp+11,_C+161	;volatile
 28023                           
 28024                           ;bsoc.c: 63:  } else {
 28025  013BA4  D004               	goto	l9552
 28026  013BA6                     l9550:
 28027                           
 28028                           ; BSR set to: 1
 28029                           ;bsoc.c: 64:   C.runtime = 120;
 28030  013BA6  0E00               	movlw	0
 28031  013BA8  6FA1               	movwf	(_C+161)& (0+255),b	;volatile
 28032  013BAA  0E78               	movlw	120
 28033  013BAC  6FA0               	movwf	(_C+160)& (0+255),b	;volatile
 28034  013BAE                     l9552:
 28035                           
 28036                           ;bsoc.c: 66:  if (C.runtime > 120)
 28037  013BAE  0101               	movlb	1	; () banked
 28038  013BB0  51A1               	movf	(_C+161)& (0+255),w,b	;volatile
 28039  013BB2  E104               	bnz	u873_20
 28040  013BB4  0E79               	movlw	121
 28041  013BB6  5DA0               	subwf	(_C+160)& (0+255),w,b	;volatile
 28042  013BB8  A0D8               	btfss	status,0,c
 28043  013BBA  D004               	goto	l9556
 28044  013BBC                     u873_20:
 28045                           
 28046                           ; BSR set to: 1
 28047                           ;bsoc.c: 67:   C.runtime = 120;
 28048  013BBC  0E00               	movlw	0
 28049  013BBE  6FA1               	movwf	(_C+161)& (0+255),b	;volatile
 28050  013BC0  0E78               	movlw	120
 28051  013BC2  6FA0               	movwf	(_C+160)& (0+255),b	;volatile
 28052  013BC4                     l9556:
 28053                           
 28054                           ; BSR set to: 1
 28055                           ;bsoc.c: 69:  V.lowint_count++;
 28056  013BC4  0E01               	movlw	1
 28057  013BC6  0102               	movlb	2	; () banked
 28058  013BC8  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 28059  013BCA  0E00               	movlw	0
 28060  013BCC  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 28061  013BCE  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 28062  013BD0  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 28063                           
 28064                           ; BSR set to: 2
 28065                           ;bsoc.c: 70:  C.update = 0;
 28066  013BD2  0101               	movlb	1	; () banked
 28067  013BD4  6BA4               	clrf	(_C+164)& (0+255),b	;volatile
 28068                           
 28069                           ; BSR set to: 1
 28070  013BD6  92BE               	bcf	190,1,c	;volatile
 28071                           
 28072                           ; BSR set to: 1
 28073                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 28074  013BD8  52E5               	movf	postdec1,f,c
 28075  013BDA  52E5               	movf	postdec1,f,c
 28076  013BDC  0012               	return		;funcret
 28077  013BDE                     __end_of_calc_bsoc:
 28078                           	opt callstack 0
 28079                           
 28080 ;; *************** function _INT0_ISR *****************
 28081 ;; Defined at:
 28082 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 28083 ;; Parameters:    Size  Location     Type
 28084 ;;		None
 28085 ;; Auto vars:     Size  Location     Type
 28086 ;;		None
 28087 ;; Return value:  Size  Location     Type
 28088 ;;                  1    wreg      void 
 28089 ;; Registers used:
 28090 ;;		wreg, status,2, status,0, pclath, tosl
 28091 ;; Tracked objects:
 28092 ;;		On entry : 0/0
 28093 ;;		On exit  : 0/0
 28094 ;;		Unchanged: 0/0
 28095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28100 ;;Total ram usage:        0 bytes
 28101 ;; Hardware stack levels used:    1
 28102 ;; Hardware stack levels required when called:    2
 28103 ;; This function calls:
 28104 ;;		_INT0_CallBack
 28105 ;; This function is called by:
 28106 ;;		Interrupt level 2
 28107 ;; This function uses a non-reentrant model
 28108 ;;
 28109                           
 28110                           	psect	text139
 28111  0198A4                     __ptext139:
 28112                           	opt callstack 0
 28113  0198A4                     _INT0_ISR:
 28114                           	opt callstack 11
 28115                           
 28116                           ; BSR set to: 1
 28117                           ;incstack = 0
 28118  0198A4  EE14  F016         	lfsr	1,___inthi_sp
 28119                           
 28120                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 28121  0198A8  0139               	movlb	57	; () banked
 28122  0198AA  91A1               	bcf	161,0,b	;volatile
 28123                           
 28124                           ; BSR set to: 57
 28125                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 28126  0198AC  EC4B  F0CB         	call	_INT0_CallBack	;wreg free
 28127  0198B0  0011               	retfie		f
 28128  0198B2                     __end_of_INT0_ISR:
 28129                           	opt callstack 0
 28130                           
 28131 ;; *************** function _INT0_CallBack *****************
 28132 ;; Defined at:
 28133 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 28134 ;; Parameters:    Size  Location     Type
 28135 ;;		None
 28136 ;; Auto vars:     Size  Location     Type
 28137 ;;		None
 28138 ;; Return value:  Size  Location     Type
 28139 ;;                  1  [STACK] void 
 28140 ;; Registers used:
 28141 ;;		wreg, status,2, status,0, pclath, tosl
 28142 ;; Tracked objects:
 28143 ;;		On entry : 3F/39
 28144 ;;		On exit  : 0/0
 28145 ;;		Unchanged: 0/0
 28146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28151 ;;Total ram usage:        0 bytes
 28152 ;; Hardware stack levels used:    1
 28153 ;; Hardware stack levels required when called:    1
 28154 ;; This function calls:
 28155 ;;		Absolute function
 28156 ;;		_INT0_DefaultInterruptHandler
 28157 ;; This function is called by:
 28158 ;;		_INT0_ISR
 28159 ;; This function uses a reentrant model
 28160 ;;
 28161                           
 28162                           	psect	text140
 28163  019696                     __ptext140:
 28164                           	opt callstack 0
 28165  019696                     _INT0_CallBack:
 28166                           	opt callstack 11
 28167                           
 28168                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 28169                           
 28170                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28171                           ;incstack = 0
 28172  019696  5021               	movf	_INT0_InterruptHandler^0,w,c
 28173  019698  1022               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 28174  01969A  1023               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 28175  01969C  B4D8               	btfsc	status,2,c
 28176  01969E  0012               	return	
 28177                           
 28178                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 28179  0196A0  D801               	call	u407_48
 28180  0196A2  0012               	return	
 28181  0196A4                     u407_48:
 28182  0196A4  0005               	push	
 28183  0196A6  6EFA               	movwf	pclath,c
 28184  0196A8  5021               	movf	_INT0_InterruptHandler^0,w,c
 28185  0196AA  6EFD               	movwf	tosl,c
 28186  0196AC  5022               	movf	(_INT0_InterruptHandler+1)^0,w,c
 28187  0196AE  6EFE               	movwf	tosh,c
 28188  0196B0  5023               	movf	(_INT0_InterruptHandler+2)^0,w,c
 28189  0196B2  6EFF               	movwf	tosu,c
 28190  0196B4  50FA               	movf	pclath,w,c
 28191  0196B6  0012               	return		;indir
 28192  0196B8                     __end_of_INT0_CallBack:
 28193                           	opt callstack 0
 28194                           
 28195 ;; *************** function _INT0_DefaultInterruptHandler *****************
 28196 ;; Defined at:
 28197 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 28198 ;; Parameters:    Size  Location     Type
 28199 ;;		None
 28200 ;; Auto vars:     Size  Location     Type
 28201 ;;		None
 28202 ;; Return value:  Size  Location     Type
 28203 ;;                  1  [STACK] void 
 28204 ;; Registers used:
 28205 ;;		None
 28206 ;; Tracked objects:
 28207 ;;		On entry : 0/39
 28208 ;;		On exit  : 0/0
 28209 ;;		Unchanged: 0/0
 28210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28215 ;;Total ram usage:        0 bytes
 28216 ;; Hardware stack levels used:    1
 28217 ;; This function calls:
 28218 ;;		Nothing
 28219 ;; This function is called by:
 28220 ;;		_EXT_INT_Initialize
 28221 ;;		_INT0_CallBack
 28222 ;; This function uses a reentrant model
 28223 ;;
 28224                           
 28225                           	psect	text141
 28226  01993A                     __ptext141:
 28227                           	opt callstack 0
 28228  01993A                     _INT0_DefaultInterruptHandler:
 28229                           	opt callstack 11
 28230                           
 28231                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28232                           
 28233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28234                           ;incstack = 0
 28235  01993A  0012               	return		;funcret
 28236  01993C                     __end_of_INT0_DefaultInterruptHandler:
 28237                           	opt callstack 0
 28238                           
 28239 ;; *************** function _Default_ISR *****************
 28240 ;; Defined at:
 28241 ;;		line 89 in file "mcc_generated_files/interrupt_manager.c"
 28242 ;; Parameters:    Size  Location     Type
 28243 ;;		None
 28244 ;; Auto vars:     Size  Location     Type
 28245 ;;		None
 28246 ;; Return value:  Size  Location     Type
 28247 ;;                  1    wreg      void 
 28248 ;; Registers used:
 28249 ;;		None
 28250 ;; Tracked objects:
 28251 ;;		On entry : 0/0
 28252 ;;		On exit  : 0/0
 28253 ;;		Unchanged: 0/0
 28254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28259 ;;Total ram usage:        0 bytes
 28260 ;; Hardware stack levels used:    1
 28261 ;; This function calls:
 28262 ;;		Nothing
 28263 ;; This function is called by:
 28264 ;;		Interrupt level 2
 28265 ;; This function uses a non-reentrant model
 28266 ;;
 28267                           
 28268                           	psect	text142
 28269  019930                     __ptext142:
 28270                           	opt callstack 0
 28271  019930                     _Default_ISR:
 28272                           	opt callstack 13
 28273                           
 28274                           ;incstack = 0
 28275  019930  EE14  F016         	lfsr	1,___inthi_sp
 28276  019934  0011               	retfie		f
 28277  019936                     __end_of_Default_ISR:
 28278                           	opt callstack 0
 28279                           
 28280 ;; *************** function _ADCC_ISR *****************
 28281 ;; Defined at:
 28282 ;;		line 314 in file "mcc_generated_files/adcc.c"
 28283 ;; Parameters:    Size  Location     Type
 28284 ;;		None
 28285 ;; Auto vars:     Size  Location     Type
 28286 ;;		None
 28287 ;; Return value:  Size  Location     Type
 28288 ;;                  1    wreg      void 
 28289 ;; Registers used:
 28290 ;;		wreg, status,2, status,0, pclath, tosl
 28291 ;; Tracked objects:
 28292 ;;		On entry : 0/0
 28293 ;;		On exit  : 0/0
 28294 ;;		Unchanged: 0/0
 28295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28300 ;;Total ram usage:        0 bytes
 28301 ;; Hardware stack levels used:    1
 28302 ;; Hardware stack levels required when called:    1
 28303 ;; This function calls:
 28304 ;;		Absolute function
 28305 ;;		_ADCC_DefaultInterruptHandler
 28306 ;;		_adc_int_handler
 28307 ;; This function is called by:
 28308 ;;		Interrupt level 2
 28309 ;; This function uses a non-reentrant model
 28310 ;;
 28311                           
 28312                           	psect	text143
 28313  0191C8                     __ptext143:
 28314                           	opt callstack 0
 28315  0191C8                     _ADCC_ISR:
 28316                           	opt callstack 12
 28317                           
 28318                           ;incstack = 0
 28319  0191C8  EE14  F016         	lfsr	1,___inthi_sp
 28320                           
 28321                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 28322  0191CC  0139               	movlb	57	; () banked
 28323  0191CE  95A1               	bcf	161,2,b	;volatile
 28324                           
 28325                           ; BSR set to: 57
 28326                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 28327  0191D0  0100               	movlb	0	; () banked
 28328  0191D2  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 28329  0191D4  11B6               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 28330  0191D6  11B7               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 28331  0191D8  B4D8               	btfsc	status,2,c
 28332  0191DA  0011               	retfie		f
 28333                           
 28334                           ; BSR set to: 0
 28335                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 28336  0191DC  D801               	call	i2u910_48
 28337  0191DE  0011               	retfie		f
 28338  0191E0                     i2u910_48:
 28339  0191E0  0005               	push	
 28340  0191E2  6EFA               	movwf	pclath,c
 28341  0191E4  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 28342  0191E6  6EFD               	movwf	tosl,c
 28343  0191E8  51B6               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 28344  0191EA  6EFE               	movwf	tosh,c
 28345  0191EC  51B7               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 28346  0191EE  6EFF               	movwf	tosu,c
 28347  0191F0  50FA               	movf	pclath,w,c
 28348  0191F2  0012               	return		;indir
 28349  0191F4                     __end_of_ADCC_ISR:
 28350                           	opt callstack 0
 28351                           
 28352 ;; *************** function _adc_int_t_handler *****************
 28353 ;; Defined at:
 28354 ;;		line 128 in file "daq.c"
 28355 ;; Parameters:    Size  Location     Type
 28356 ;;		None
 28357 ;; Auto vars:     Size  Location     Type
 28358 ;;		None
 28359 ;; Return value:  Size  Location     Type
 28360 ;;                  1  [STACK] void 
 28361 ;; Registers used:
 28362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 28363 ;; Tracked objects:
 28364 ;;		On entry : 3F/0
 28365 ;;		On exit  : 1/0
 28366 ;;		Unchanged: 0/0
 28367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28372 ;;Total ram usage:        0 bytes
 28373 ;; Hardware stack levels used:    1
 28374 ;; Hardware stack levels required when called:    1
 28375 ;; This function calls:
 28376 ;;		_ADCC_DischargeSampleCapacitor
 28377 ;;		_ADCC_StartConversion
 28378 ;; This function is called by:
 28379 ;;		_start_adc_scan
 28380 ;;		_ADCC_ThresholdISR
 28381 ;; This function uses a reentrant model
 28382 ;;
 28383                           
 28384                           	psect	text144
 28385  018616                     __ptext144:
 28386                           	opt callstack 0
 28387  018616                     _adc_int_t_handler:
 28388                           	opt callstack 11
 28389                           
 28390                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 28391                           
 28392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28393                           ;incstack = 0
 28394  018616  013E               	movlb	62	; () banked
 28395  018618  51E6               	movf	230,w,b	;volatile
 28396  01861A  006F FB9C  F001    	movff	16103,btemp	;volatile
 28397  018620  6A02               	clrf	(btemp+1)^0,c
 28398  018622  0060  F004  F002   	movff	btemp,btemp+1
 28399  018628  6A01               	clrf	btemp^0,c
 28400  01862A  2601               	addwf	btemp^0,f,c
 28401  01862C  0E00               	movlw	0
 28402  01862E  2202               	addwfc	(btemp+1)^0,f,c
 28403  018630  0100               	movlb	0	; () banked
 28404  018632  51ED               	movf	(_R+36)& (0+255),w,b	;volatile
 28405  018634  0D02               	mullw	2
 28406  018636  50F3               	movf	243,w,c
 28407  018638  0FC9               	addlw	low _R
 28408  01863A  6ED9               	movwf	fsr2l,c
 28409  01863C  6ADA               	clrf	fsr2h,c
 28410  01863E  0060  F007  FFDE   	movff	btemp,postinc2
 28411  018644  0060  F00B  FFDD   	movff	btemp+1,postdec2
 28412  01864A                     l9904:
 28413                           
 28414                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 28415  01864A  0100               	movlb	0	; () banked
 28416  01864C  2BED               	incf	(_R+36)& (0+255),f,b	;volatile
 28417  01864E  0E0D               	movlw	13
 28418  018650  65ED               	cpfsgt	(_R+36)& (0+255),b	;volatile
 28419  018652  D003               	goto	l9910
 28420                           
 28421                           ; BSR set to: 0
 28422                           ;daq.c: 136:    R.done = 1;
 28423  018654  0E01               	movlw	1
 28424  018656  6FF0               	movwf	(_R+39)& (0+255),b	;volatile
 28425  018658  0012               	return	
 28426  01865A                     l9910:
 28427                           
 28428                           ; BSR set to: 0
 28429                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 28430  01865A  0060  F3B4  F00C   	movff	_R+36,btemp+11	;volatile
 28431  018660  EE20  F0EE         	lfsr	2,_R+37	;volatile
 28432  018664  006F FF78  F009    	movff	postinc2,btemp+8
 28433  01866A  006F FF74  F00A    	movff	postdec2,btemp+9
 28434  018670  2A0C               	incf	(btemp+11)^0,f,c
 28435  018672  D003               	goto	u907_44
 28436  018674                     u907_45:
 28437  018674  90D8               	bcf	status,0,c
 28438  018676  320A               	rrcf	(btemp+9)^0,f,c
 28439  018678  3209               	rrcf	(btemp+8)^0,f,c
 28440  01867A                     u907_44:
 28441  01867A  2E0C               	decfsz	(btemp+11)^0,f,c
 28442  01867C  D7FB               	goto	u907_45
 28443  01867E  A009               	btfss	(btemp+8)^0,0,c
 28444  018680  D7E4               	goto	l9904
 28445                           
 28446                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 28447  018682  EC77  F0CC         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 28448                           
 28449                           ; BSR set to: 62
 28450                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 28451  018686  0100               	movlb	0	; () banked
 28452  018688  51ED               	movf	(_R+36)& (0+255),w,b	;volatile
 28453  01868A  0B0F               	andlw	15
 28454  01868C  6EE6               	movwf	postinc1,c
 28455  01868E  EC32  F0CC         	call	_ADCC_StartConversion	;wreg free
 28456                           
 28457                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28458  018692  0012               	return		;funcret
 28459  018694                     __end_of_adc_int_t_handler:
 28460                           	opt callstack 0
 28461                           
 28462 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 28463 ;; Defined at:
 28464 ;;		line 339 in file "mcc_generated_files/adcc.c"
 28465 ;; Parameters:    Size  Location     Type
 28466 ;;		None
 28467 ;; Auto vars:     Size  Location     Type
 28468 ;;		None
 28469 ;; Return value:  Size  Location     Type
 28470 ;;                  1  [STACK] void 
 28471 ;; Registers used:
 28472 ;;		None
 28473 ;; Tracked objects:
 28474 ;;		On entry : 3F/0
 28475 ;;		On exit  : 0/0
 28476 ;;		Unchanged: 0/0
 28477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28482 ;;Total ram usage:        0 bytes
 28483 ;; Hardware stack levels used:    1
 28484 ;; This function calls:
 28485 ;;		Nothing
 28486 ;; This function is called by:
 28487 ;;		_ADCC_Initialize
 28488 ;;		_ADCC_ISR
 28489 ;;		_ADCC_ThresholdISR
 28490 ;; This function uses a reentrant model
 28491 ;;
 28492                           
 28493                           	psect	text145
 28494  01993C                     __ptext145:
 28495                           	opt callstack 0
 28496  01993C                     _ADCC_DefaultInterruptHandler:
 28497                           	opt callstack 12
 28498                           
 28499                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28500                           
 28501                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28502                           ;incstack = 0
 28503  01993C  0012               	return		;funcret
 28504  01993E                     __end_of_ADCC_DefaultInterruptHandler:
 28505                           	opt callstack 0
 28506                           
 28507 ;; *************** function _adc_int_handler *****************
 28508 ;; Defined at:
 28509 ;;		line 118 in file "daq.c"
 28510 ;; Parameters:    Size  Location     Type
 28511 ;;		None
 28512 ;; Auto vars:     Size  Location     Type
 28513 ;;		None
 28514 ;; Return value:  Size  Location     Type
 28515 ;;                  1  [STACK] void 
 28516 ;; Registers used:
 28517 ;;		None
 28518 ;; Tracked objects:
 28519 ;;		On entry : 3F/0
 28520 ;;		On exit  : 0/0
 28521 ;;		Unchanged: 0/0
 28522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28527 ;;Total ram usage:        0 bytes
 28528 ;; Hardware stack levels used:    1
 28529 ;; This function calls:
 28530 ;;		Nothing
 28531 ;; This function is called by:
 28532 ;;		_start_adc_scan
 28533 ;;		_ADCC_ISR
 28534 ;; This function uses a reentrant model
 28535 ;;
 28536                           
 28537                           	psect	text146
 28538  01993E                     __ptext146:
 28539                           	opt callstack 0
 28540  01993E                     _adc_int_handler:
 28541                           	opt callstack 12
 28542                           
 28543                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 28544                           
 28545                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28546                           ;incstack = 0
 28547  01993E  0012               	return		;funcret
 28548  019940                     __end_of_adc_int_handler:
 28549                           	opt callstack 0
 28550                           
 28551 ;; *************** function _ADCC_ThresholdISR *****************
 28552 ;; Defined at:
 28553 ;;		line 327 in file "mcc_generated_files/adcc.c"
 28554 ;; Parameters:    Size  Location     Type
 28555 ;;		None
 28556 ;; Auto vars:     Size  Location     Type
 28557 ;;		None
 28558 ;; Return value:  Size  Location     Type
 28559 ;;                  1    wreg      void 
 28560 ;; Registers used:
 28561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 28562 ;; Tracked objects:
 28563 ;;		On entry : 0/0
 28564 ;;		On exit  : 0/0
 28565 ;;		Unchanged: 0/0
 28566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28569 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28570 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28571 ;;Total ram usage:        5 bytes
 28572 ;; Hardware stack levels used:    1
 28573 ;; Hardware stack levels required when called:    2
 28574 ;; This function calls:
 28575 ;;		Absolute function
 28576 ;;		_ADCC_DefaultInterruptHandler
 28577 ;;		_adc_int_t_handler
 28578 ;; This function is called by:
 28579 ;;		Interrupt level 2
 28580 ;; This function uses a non-reentrant model
 28581 ;;
 28582                           
 28583                           	psect	text147
 28584  018768                     __ptext147:
 28585                           	opt callstack 0
 28586  018768                     _ADCC_ThresholdISR:
 28587                           	opt callstack 11
 28588                           
 28589                           ;incstack = 0
 28590  018768  0060  F004  F040   	movff	btemp,??_ADCC_ThresholdISR
 28591  01876E  0060  F008  F041   	movff	btemp+1,??_ADCC_ThresholdISR+1
 28592  018774  0060  F024  F042   	movff	btemp+8,??_ADCC_ThresholdISR+2
 28593  01877A  0060  F028  F043   	movff	btemp+9,??_ADCC_ThresholdISR+3
 28594  018780  0060  F030  F044   	movff	btemp+11,??_ADCC_ThresholdISR+4
 28595  018786  EE14  F016         	lfsr	1,___inthi_sp
 28596                           
 28597                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 28598  01878A  0139               	movlb	57	; () banked
 28599  01878C  97A1               	bcf	161,3,b	;volatile
 28600                           
 28601                           ; BSR set to: 57
 28602                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 28603  01878E  0100               	movlb	0	; () banked
 28604  018790  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 28605  018792  11B3               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 28606  018794  11B4               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 28607  018796  B4D8               	btfsc	status,2,c
 28608  018798  D00C               	goto	i2u912_49
 28609                           
 28610                           ; BSR set to: 0
 28611                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 28612  01879A  D801               	call	i2u912_48
 28613  01879C  D00A               	goto	i2u912_49
 28614  01879E                     i2u912_48:
 28615  01879E  0005               	push	
 28616  0187A0  6EFA               	movwf	pclath,c
 28617  0187A2  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 28618  0187A4  6EFD               	movwf	tosl,c
 28619  0187A6  51B3               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 28620  0187A8  6EFE               	movwf	tosh,c
 28621  0187AA  51B4               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 28622  0187AC  6EFF               	movwf	tosu,c
 28623  0187AE  50FA               	movf	pclath,w,c
 28624  0187B0  0012               	return		;indir
 28625  0187B2                     i2u912_49:
 28626  0187B2  0060  F110  F00C   	movff	??_ADCC_ThresholdISR+4,btemp+11
 28627  0187B8  0060  F10C  F00A   	movff	??_ADCC_ThresholdISR+3,btemp+9
 28628  0187BE  0060  F108  F009   	movff	??_ADCC_ThresholdISR+2,btemp+8
 28629  0187C4  0060  F104  F002   	movff	??_ADCC_ThresholdISR+1,btemp+1
 28630  0187CA  0060  F100  F001   	movff	??_ADCC_ThresholdISR,btemp
 28631  0187D0  0011               	retfie		f
 28632  0187D2                     __end_of_ADCC_ThresholdISR:
 28633                           	opt callstack 0
 28634                           
 28635 ;; *************** function _UART1_tx_vect_isr *****************
 28636 ;; Defined at:
 28637 ;;		line 199 in file "mcc_generated_files/uart1.c"
 28638 ;; Parameters:    Size  Location     Type
 28639 ;;		None
 28640 ;; Auto vars:     Size  Location     Type
 28641 ;;		None
 28642 ;; Return value:  Size  Location     Type
 28643 ;;                  1    wreg      void 
 28644 ;; Registers used:
 28645 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28646 ;; Tracked objects:
 28647 ;;		On entry : 0/0
 28648 ;;		On exit  : 0/0
 28649 ;;		Unchanged: 0/0
 28650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28655 ;;Total ram usage:        0 bytes
 28656 ;; Hardware stack levels used:    1
 28657 ;; Hardware stack levels required when called:    1
 28658 ;; This function calls:
 28659 ;;		Absolute function
 28660 ;;		_UART1_Transmit_ISR
 28661 ;; This function is called by:
 28662 ;;		Interrupt level 2
 28663 ;; This function uses a non-reentrant model
 28664 ;;
 28665                           
 28666                           	psect	text148
 28667  019520                     __ptext148:
 28668                           	opt callstack 0
 28669  019520                     _UART1_tx_vect_isr:
 28670                           	opt callstack 12
 28671                           
 28672                           ;incstack = 0
 28673  019520  EE14  F016         	lfsr	1,___inthi_sp
 28674                           
 28675                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 28676  019524  0100               	movlb	0	; () banked
 28677  019526  51B8               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 28678  019528  11B9               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 28679  01952A  11BA               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 28680  01952C  B4D8               	btfsc	status,2,c
 28681  01952E  0011               	retfie		f
 28682                           
 28683                           ; BSR set to: 0
 28684                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 28685  019530  D801               	call	i2u914_48
 28686  019532  0011               	retfie		f
 28687  019534                     i2u914_48:
 28688  019534  0005               	push	
 28689  019536  6EFA               	movwf	pclath,c
 28690  019538  51B8               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 28691  01953A  6EFD               	movwf	tosl,c
 28692  01953C  51B9               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 28693  01953E  6EFE               	movwf	tosh,c
 28694  019540  51BA               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 28695  019542  6EFF               	movwf	tosu,c
 28696  019544  50FA               	movf	pclath,w,c
 28697  019546  0012               	return		;indir
 28698  019548                     __end_of_UART1_tx_vect_isr:
 28699                           	opt callstack 0
 28700                           
 28701 ;; *************** function _UART1_Transmit_ISR *****************
 28702 ;; Defined at:
 28703 ;;		line 213 in file "mcc_generated_files/uart1.c"
 28704 ;; Parameters:    Size  Location     Type
 28705 ;;		None
 28706 ;; Auto vars:     Size  Location     Type
 28707 ;;		None
 28708 ;; Return value:  Size  Location     Type
 28709 ;;                  1  [STACK] void 
 28710 ;; Registers used:
 28711 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28712 ;; Tracked objects:
 28713 ;;		On entry : 3F/0
 28714 ;;		On exit  : 3B/39
 28715 ;;		Unchanged: 0/0
 28716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28721 ;;Total ram usage:        0 bytes
 28722 ;; Hardware stack levels used:    1
 28723 ;; This function calls:
 28724 ;;		Nothing
 28725 ;; This function is called by:
 28726 ;;		_UART1_Initialize
 28727 ;;		_UART1_tx_vect_isr
 28728 ;; This function uses a reentrant model
 28729 ;;
 28730                           
 28731                           	psect	text149
 28732  0191F4                     __ptext149:
 28733                           	opt callstack 0
 28734  0191F4                     _UART1_Transmit_ISR:
 28735                           	opt callstack 12
 28736                           
 28737                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 28738                           
 28739                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28740                           ;incstack = 0
 28741  0191F4  0E40               	movlw	64
 28742  0191F6  603D               	cpfslt	_uart1TxBufferRemaining^0,c
 28743  0191F8  D010               	goto	l583
 28744                           
 28745                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 28746  0191FA  0E54               	movlw	low _uart1TxBuffer
 28747  0191FC  243E               	addwf	_uart1TxTail^0,w,c	;volatile
 28748  0191FE  6ED9               	movwf	fsr2l,c
 28749  019200  6ADA               	clrf	fsr2h,c
 28750  019202  0E03               	movlw	high _uart1TxBuffer
 28751  019204  22DA               	addwfc	fsr2h,f,c
 28752  019206  50DF               	movf	indf2,w,c
 28753  019208  013D               	movlb	61	; () banked
 28754  01920A  6FEA               	movwf	234,b	;volatile
 28755                           
 28756                           ; BSR set to: 61
 28757  01920C  2A3E               	incf	_uart1TxTail^0,f,c	;volatile
 28758                           
 28759                           ; BSR set to: 61
 28760                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 28761  01920E  0E3F               	movlw	63
 28762  019210  643E               	cpfsgt	_uart1TxTail^0,c
 28763  019212  D001               	goto	l9612
 28764                           
 28765                           ; BSR set to: 61
 28766                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 28767  019214  6A3E               	clrf	_uart1TxTail^0,c	;volatile
 28768  019216                     l9612:
 28769                           
 28770                           ; BSR set to: 61
 28771                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 28772  019216  2A3D               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 28773                           
 28774                           ;mcc_generated_files/uart1.c: 222:  } else {
 28775  019218  0012               	return	
 28776  01921A                     l583:
 28777                           
 28778                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 28779  01921A  0139               	movlb	57	; () banked
 28780  01921C  9993               	bcf	147,4,b	;volatile
 28781                           
 28782                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28783  01921E  0012               	return		;funcret
 28784  019220                     __end_of_UART1_Transmit_ISR:
 28785                           	opt callstack 0
 28786                           
 28787 ;; *************** function _UART1_rx_vect_isr *****************
 28788 ;; Defined at:
 28789 ;;		line 206 in file "mcc_generated_files/uart1.c"
 28790 ;; Parameters:    Size  Location     Type
 28791 ;;		None
 28792 ;; Auto vars:     Size  Location     Type
 28793 ;;		None
 28794 ;; Return value:  Size  Location     Type
 28795 ;;                  1    wreg      void 
 28796 ;; Registers used:
 28797 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28798 ;; Tracked objects:
 28799 ;;		On entry : 0/0
 28800 ;;		On exit  : 0/0
 28801 ;;		Unchanged: 0/0
 28802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28807 ;;Total ram usage:        0 bytes
 28808 ;; Hardware stack levels used:    1
 28809 ;; Hardware stack levels required when called:    1
 28810 ;; This function calls:
 28811 ;;		Absolute function
 28812 ;;		_UART1_Receive_ISR
 28813 ;; This function is called by:
 28814 ;;		Interrupt level 2
 28815 ;; This function uses a non-reentrant model
 28816 ;;
 28817                           
 28818                           	psect	text150
 28819  019548                     __ptext150:
 28820                           	opt callstack 0
 28821  019548                     _UART1_rx_vect_isr:
 28822                           	opt callstack 12
 28823                           
 28824                           ;incstack = 0
 28825  019548  EE14  F016         	lfsr	1,___inthi_sp
 28826                           
 28827                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 28828  01954C  0100               	movlb	0	; () banked
 28829  01954E  51BB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 28830  019550  11BC               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 28831  019552  11BD               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 28832  019554  B4D8               	btfsc	status,2,c
 28833  019556  0011               	retfie		f
 28834                           
 28835                           ; BSR set to: 0
 28836                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 28837  019558  D801               	call	i2u916_48
 28838  01955A  0011               	retfie		f
 28839  01955C                     i2u916_48:
 28840  01955C  0005               	push	
 28841  01955E  6EFA               	movwf	pclath,c
 28842  019560  51BB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 28843  019562  6EFD               	movwf	tosl,c
 28844  019564  51BC               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 28845  019566  6EFE               	movwf	tosh,c
 28846  019568  51BD               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 28847  01956A  6EFF               	movwf	tosu,c
 28848  01956C  50FA               	movf	pclath,w,c
 28849  01956E  0012               	return		;indir
 28850  019570                     __end_of_UART1_rx_vect_isr:
 28851                           	opt callstack 0
 28852                           
 28853 ;; *************** function _UART1_Receive_ISR *****************
 28854 ;; Defined at:
 28855 ;;		line 229 in file "mcc_generated_files/uart1.c"
 28856 ;; Parameters:    Size  Location     Type
 28857 ;;		None
 28858 ;; Auto vars:     Size  Location     Type
 28859 ;;		None
 28860 ;; Return value:  Size  Location     Type
 28861 ;;                  1  [STACK] void 
 28862 ;; Registers used:
 28863 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28864 ;; Tracked objects:
 28865 ;;		On entry : 3F/0
 28866 ;;		On exit  : 0/0
 28867 ;;		Unchanged: 0/0
 28868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28873 ;;Total ram usage:        0 bytes
 28874 ;; Hardware stack levels used:    1
 28875 ;; This function calls:
 28876 ;;		Nothing
 28877 ;; This function is called by:
 28878 ;;		_UART1_Initialize
 28879 ;;		_UART1_rx_vect_isr
 28880 ;; This function uses a reentrant model
 28881 ;;
 28882                           
 28883                           	psect	text151
 28884  019750                     __ptext151:
 28885                           	opt callstack 0
 28886  019750                     _UART1_Receive_ISR:
 28887                           	opt callstack 12
 28888                           
 28889                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 28890                           
 28891                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28892                           ;incstack = 0
 28893  019750  0E00               	movlw	low _uart1RxBuffer
 28894  019752  243C               	addwf	_uart1RxHead^0,w,c	;volatile
 28895  019754  6ED9               	movwf	fsr2l,c
 28896  019756  6ADA               	clrf	fsr2h,c
 28897  019758  0E05               	movlw	high _uart1RxBuffer
 28898  01975A  22DA               	addwfc	fsr2h,f,c
 28899  01975C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 28900  019762  2A3C               	incf	_uart1RxHead^0,f,c	;volatile
 28901                           
 28902                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 28903  019764  283C               	incf	_uart1RxHead^0,w,c
 28904  019766  B4D8               	btfsc	status,2,c
 28905                           
 28906                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 28907  019768  6A3C               	clrf	_uart1RxHead^0,c	;volatile
 28908                           
 28909                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 28910  01976A  2A3A               	incf	_uart1RxCount^0,f,c	;volatile
 28911                           
 28912                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28913  01976C  0012               	return		;funcret
 28914  01976E                     __end_of_UART1_Receive_ISR:
 28915                           	opt callstack 0
 28916                           
 28917 ;; *************** function _UART2_tx_vect_isr *****************
 28918 ;; Defined at:
 28919 ;;		line 195 in file "mcc_generated_files/uart2.c"
 28920 ;; Parameters:    Size  Location     Type
 28921 ;;		None
 28922 ;; Auto vars:     Size  Location     Type
 28923 ;;		None
 28924 ;; Return value:  Size  Location     Type
 28925 ;;                  1    wreg      void 
 28926 ;; Registers used:
 28927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28928 ;; Tracked objects:
 28929 ;;		On entry : 0/0
 28930 ;;		On exit  : 0/0
 28931 ;;		Unchanged: 0/0
 28932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28937 ;;Total ram usage:        0 bytes
 28938 ;; Hardware stack levels used:    1
 28939 ;; Hardware stack levels required when called:    1
 28940 ;; This function calls:
 28941 ;;		Absolute function
 28942 ;;		_UART2_Transmit_ISR
 28943 ;; This function is called by:
 28944 ;;		Interrupt level 2
 28945 ;; This function uses a non-reentrant model
 28946 ;;
 28947                           
 28948                           	psect	text152
 28949  019570                     __ptext152:
 28950                           	opt callstack 0
 28951  019570                     _UART2_tx_vect_isr:
 28952                           	opt callstack 12
 28953                           
 28954                           ;incstack = 0
 28955  019570  EE14  F016         	lfsr	1,___inthi_sp
 28956                           
 28957                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 28958  019574  0100               	movlb	0	; () banked
 28959  019576  51BE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 28960  019578  11BF               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 28961  01957A  11C0               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 28962  01957C  B4D8               	btfsc	status,2,c
 28963  01957E  0011               	retfie		f
 28964                           
 28965                           ; BSR set to: 0
 28966                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 28967  019580  D801               	call	i2u918_48
 28968  019582  0011               	retfie		f
 28969  019584                     i2u918_48:
 28970  019584  0005               	push	
 28971  019586  6EFA               	movwf	pclath,c
 28972  019588  51BE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 28973  01958A  6EFD               	movwf	tosl,c
 28974  01958C  51BF               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 28975  01958E  6EFE               	movwf	tosh,c
 28976  019590  51C0               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 28977  019592  6EFF               	movwf	tosu,c
 28978  019594  50FA               	movf	pclath,w,c
 28979  019596  0012               	return		;indir
 28980  019598                     __end_of_UART2_tx_vect_isr:
 28981                           	opt callstack 0
 28982                           
 28983 ;; *************** function _UART2_Transmit_ISR *****************
 28984 ;; Defined at:
 28985 ;;		line 213 in file "mcc_generated_files/uart2.c"
 28986 ;; Parameters:    Size  Location     Type
 28987 ;;		None
 28988 ;; Auto vars:     Size  Location     Type
 28989 ;;		None
 28990 ;; Return value:  Size  Location     Type
 28991 ;;                  1  [STACK] void 
 28992 ;; Registers used:
 28993 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28994 ;; Tracked objects:
 28995 ;;		On entry : 3F/0
 28996 ;;		On exit  : 3B/39
 28997 ;;		Unchanged: 0/0
 28998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29003 ;;Total ram usage:        0 bytes
 29004 ;; Hardware stack levels used:    1
 29005 ;; This function calls:
 29006 ;;		Nothing
 29007 ;; This function is called by:
 29008 ;;		_UART2_Initialize
 29009 ;;		_UART2_tx_vect_isr
 29010 ;; This function uses a reentrant model
 29011 ;;
 29012                           
 29013                           	psect	text153
 29014  019220                     __ptext153:
 29015                           	opt callstack 0
 29016  019220                     _UART2_Transmit_ISR:
 29017                           	opt callstack 12
 29018                           
 29019                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 29020                           
 29021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29022                           ;incstack = 0
 29023  019220  0E40               	movlw	64
 29024  019222  6037               	cpfslt	_uart2TxBufferRemaining^0,c
 29025  019224  D010               	goto	l703
 29026                           
 29027                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 29028  019226  0E00               	movlw	low _uart2TxBuffer
 29029  019228  2438               	addwf	_uart2TxTail^0,w,c	;volatile
 29030  01922A  6ED9               	movwf	fsr2l,c
 29031  01922C  6ADA               	clrf	fsr2h,c
 29032  01922E  0E04               	movlw	high _uart2TxBuffer
 29033  019230  22DA               	addwfc	fsr2h,f,c
 29034  019232  50DF               	movf	indf2,w,c
 29035  019234  013D               	movlb	61	; () banked
 29036  019236  6FD2               	movwf	210,b	;volatile
 29037                           
 29038                           ; BSR set to: 61
 29039  019238  2A38               	incf	_uart2TxTail^0,f,c	;volatile
 29040                           
 29041                           ; BSR set to: 61
 29042                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 29043  01923A  0E3F               	movlw	63
 29044  01923C  6438               	cpfsgt	_uart2TxTail^0,c
 29045  01923E  D001               	goto	l9634
 29046                           
 29047                           ; BSR set to: 61
 29048                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 29049  019240  6A38               	clrf	_uart2TxTail^0,c	;volatile
 29050  019242                     l9634:
 29051                           
 29052                           ; BSR set to: 61
 29053                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 29054  019242  2A37               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 29055                           
 29056                           ;mcc_generated_files/uart2.c: 224:     }
 29057  019244  0012               	return	
 29058  019246                     l703:
 29059                           
 29060                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 29061  019246  0139               	movlb	57	; () banked
 29062  019248  9796               	bcf	150,3,b	;volatile
 29063                           
 29064                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 29065  01924A  0012               	return		;funcret
 29066  01924C                     __end_of_UART2_Transmit_ISR:
 29067                           	opt callstack 0
 29068                           
 29069 ;; *************** function _UART2_rx_vect_isr *****************
 29070 ;; Defined at:
 29071 ;;		line 203 in file "mcc_generated_files/uart2.c"
 29072 ;; Parameters:    Size  Location     Type
 29073 ;;		None
 29074 ;; Auto vars:     Size  Location     Type
 29075 ;;		None
 29076 ;; Return value:  Size  Location     Type
 29077 ;;                  1    wreg      void 
 29078 ;; Registers used:
 29079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 29080 ;; Tracked objects:
 29081 ;;		On entry : 0/0
 29082 ;;		On exit  : 0/0
 29083 ;;		Unchanged: 0/0
 29084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29089 ;;Total ram usage:        0 bytes
 29090 ;; Hardware stack levels used:    1
 29091 ;; Hardware stack levels required when called:    1
 29092 ;; This function calls:
 29093 ;;		Absolute function
 29094 ;;		_UART2_Receive_ISR
 29095 ;; This function is called by:
 29096 ;;		Interrupt level 2
 29097 ;; This function uses a non-reentrant model
 29098 ;;
 29099                           
 29100                           	psect	text154
 29101  019598                     __ptext154:
 29102                           	opt callstack 0
 29103  019598                     _UART2_rx_vect_isr:
 29104                           	opt callstack 12
 29105                           
 29106                           ;incstack = 0
 29107  019598  EE14  F016         	lfsr	1,___inthi_sp
 29108                           
 29109                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 29110  01959C  0100               	movlb	0	; () banked
 29111  01959E  51C1               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 29112  0195A0  11C2               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 29113  0195A2  11C3               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 29114  0195A4  B4D8               	btfsc	status,2,c
 29115  0195A6  0011               	retfie		f
 29116                           
 29117                           ; BSR set to: 0
 29118                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 29119  0195A8  D801               	call	i2u920_48
 29120  0195AA  0011               	retfie		f
 29121  0195AC                     i2u920_48:
 29122  0195AC  0005               	push	
 29123  0195AE  6EFA               	movwf	pclath,c
 29124  0195B0  51C1               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 29125  0195B2  6EFD               	movwf	tosl,c
 29126  0195B4  51C2               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 29127  0195B6  6EFE               	movwf	tosh,c
 29128  0195B8  51C3               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 29129  0195BA  6EFF               	movwf	tosu,c
 29130  0195BC  50FA               	movf	pclath,w,c
 29131  0195BE  0012               	return		;indir
 29132  0195C0                     __end_of_UART2_rx_vect_isr:
 29133                           	opt callstack 0
 29134                           
 29135 ;; *************** function _UART2_Receive_ISR *****************
 29136 ;; Defined at:
 29137 ;;		line 233 in file "mcc_generated_files/uart2.c"
 29138 ;; Parameters:    Size  Location     Type
 29139 ;;		None
 29140 ;; Auto vars:     Size  Location     Type
 29141 ;;		None
 29142 ;; Return value:  Size  Location     Type
 29143 ;;                  1  [STACK] void 
 29144 ;; Registers used:
 29145 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29146 ;; Tracked objects:
 29147 ;;		On entry : 3F/0
 29148 ;;		On exit  : 0/0
 29149 ;;		Unchanged: 0/0
 29150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29155 ;;Total ram usage:        0 bytes
 29156 ;; Hardware stack levels used:    1
 29157 ;; This function calls:
 29158 ;;		Nothing
 29159 ;; This function is called by:
 29160 ;;		_UART2_Initialize
 29161 ;;		_UART2_rx_vect_isr
 29162 ;; This function uses a reentrant model
 29163 ;;
 29164                           
 29165                           	psect	text155
 29166  01976E                     __ptext155:
 29167                           	opt callstack 0
 29168  01976E                     _UART2_Receive_ISR:
 29169                           	opt callstack 12
 29170                           
 29171                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 29172                           
 29173                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29174                           ;incstack = 0
 29175  01976E  0E00               	movlw	low _uart2RxBuffer
 29176  019770  2436               	addwf	_uart2RxHead^0,w,c	;volatile
 29177  019772  6ED9               	movwf	fsr2l,c
 29178  019774  6ADA               	clrf	fsr2h,c
 29179  019776  0E06               	movlw	high _uart2RxBuffer
 29180  019778  22DA               	addwfc	fsr2h,f,c
 29181  01977A  006F F743 FFDF     	movff	15824,indf2	;volatile
 29182  019780  2A36               	incf	_uart2RxHead^0,f,c	;volatile
 29183                           
 29184                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 29185  019782  2836               	incf	_uart2RxHead^0,w,c
 29186  019784  B4D8               	btfsc	status,2,c
 29187                           
 29188                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 29189  019786  6A36               	clrf	_uart2RxHead^0,c	;volatile
 29190                           
 29191                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 29192  019788  2A34               	incf	_uart2RxCount^0,f,c	;volatile
 29193                           
 29194                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 29195  01978A  0012               	return		;funcret
 29196  01978C                     __end_of_UART2_Receive_ISR:
 29197                           	opt callstack 0
 29198                           
 29199 ;; *************** function _TMR6_ISR *****************
 29200 ;; Defined at:
 29201 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 29202 ;; Parameters:    Size  Location     Type
 29203 ;;		None
 29204 ;; Auto vars:     Size  Location     Type
 29205 ;;		None
 29206 ;; Return value:  Size  Location     Type
 29207 ;;                  1    wreg      void 
 29208 ;; Registers used:
 29209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 29210 ;; Tracked objects:
 29211 ;;		On entry : 0/0
 29212 ;;		On exit  : 0/0
 29213 ;;		Unchanged: 0/0
 29214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29217 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29218 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29219 ;;Total ram usage:        1 bytes
 29220 ;; Hardware stack levels used:    1
 29221 ;; Hardware stack levels required when called:    2
 29222 ;; This function calls:
 29223 ;;		_TMR6_CallBack
 29224 ;; This function is called by:
 29225 ;;		Interrupt level 2
 29226 ;; This function uses a non-reentrant model
 29227 ;;
 29228                           
 29229                           	psect	text156
 29230  0197C4                     __ptext156:
 29231                           	opt callstack 0
 29232  0197C4                     _TMR6_ISR:
 29233                           	opt callstack 11
 29234                           
 29235                           ;incstack = 0
 29236  0197C4  0060  F004  F045   	movff	btemp,??_TMR6_ISR
 29237  0197CA  EE14  F016         	lfsr	1,___inthi_sp
 29238                           
 29239                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 29240  0197CE  0139               	movlb	57	; () banked
 29241  0197D0  91A9               	bcf	169,0,b	;volatile
 29242                           
 29243                           ; BSR set to: 57
 29244                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 29245  0197D2  EC28  F0CB         	call	_TMR6_CallBack	;wreg free
 29246  0197D6  0060  F114  F001   	movff	??_TMR6_ISR,btemp
 29247  0197DC  0011               	retfie		f
 29248  0197DE                     __end_of_TMR6_ISR:
 29249                           	opt callstack 0
 29250                           
 29251 ;; *************** function _TMR6_CallBack *****************
 29252 ;; Defined at:
 29253 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 29254 ;; Parameters:    Size  Location     Type
 29255 ;;		None
 29256 ;; Auto vars:     Size  Location     Type
 29257 ;;		None
 29258 ;; Return value:  Size  Location     Type
 29259 ;;                  1  [STACK] void 
 29260 ;; Registers used:
 29261 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 29262 ;; Tracked objects:
 29263 ;;		On entry : 3F/39
 29264 ;;		On exit  : 0/0
 29265 ;;		Unchanged: 0/0
 29266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29271 ;;Total ram usage:        0 bytes
 29272 ;; Hardware stack levels used:    1
 29273 ;; Hardware stack levels required when called:    1
 29274 ;; This function calls:
 29275 ;;		Absolute function
 29276 ;;		_TMR6_DefaultInterruptHandler
 29277 ;; This function is called by:
 29278 ;;		_TMR6_ISR
 29279 ;; This function uses a reentrant model
 29280 ;;
 29281                           
 29282                           	psect	text157
 29283  019650                     __ptext157:
 29284                           	opt callstack 0
 29285  019650                     _TMR6_CallBack:
 29286                           	opt callstack 11
 29287                           
 29288                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 29289                           
 29290                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29291                           ;incstack = 0
 29292  019650  0100               	movlb	0	; () banked
 29293  019652  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 29294  019654  11B0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 29295  019656  11B1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 29296  019658  B4D8               	btfsc	status,2,c
 29297  01965A  0012               	return	
 29298                           
 29299                           ; BSR set to: 0
 29300                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 29301  01965C  D801               	call	u883_48
 29302  01965E  0012               	return	
 29303  019660                     u883_48:
 29304  019660  0005               	push	
 29305  019662  6EFA               	movwf	pclath,c
 29306  019664  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 29307  019666  6EFD               	movwf	tosl,c
 29308  019668  51B0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 29309  01966A  6EFE               	movwf	tosh,c
 29310  01966C  51B1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 29311  01966E  6EFF               	movwf	tosu,c
 29312  019670  50FA               	movf	pclath,w,c
 29313  019672  0012               	return		;indir
 29314  019674                     __end_of_TMR6_CallBack:
 29315                           	opt callstack 0
 29316                           
 29317 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 29318 ;; Defined at:
 29319 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 29320 ;; Parameters:    Size  Location     Type
 29321 ;;		None
 29322 ;; Auto vars:     Size  Location     Type
 29323 ;;  i               1  [STACK] unsigned char 
 29324 ;; Return value:  Size  Location     Type
 29325 ;;                  1  [STACK] void 
 29326 ;; Registers used:
 29327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 29328 ;; Tracked objects:
 29329 ;;		On entry : 3F/0
 29330 ;;		On exit  : 0/0
 29331 ;;		Unchanged: 0/0
 29332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29337 ;;Total ram usage:        0 bytes
 29338 ;; Hardware stack levels used:    1
 29339 ;; This function calls:
 29340 ;;		Nothing
 29341 ;; This function is called by:
 29342 ;;		_TMR6_Initialize
 29343 ;;		_TMR6_CallBack
 29344 ;; This function uses a reentrant model
 29345 ;;
 29346                           
 29347                           	psect	text158
 29348  018BD6                     __ptext158:
 29349                           	opt callstack 0
 29350  018BD6                     _TMR6_DefaultInterruptHandler:
 29351                           	opt callstack 0
 29352                           
 29353                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29354  018BD6  52E6               	movf	postinc1,f,c
 29355                           
 29356                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 29357                           ;stkvar	_i @ sp[(-1)+0]
 29358                           
 29359                           ;incstack = 0
 29360  018BD8  0EFF               	movlw	-1
 29361  018BDA  6AE3               	clrf	plusw1,c
 29362  018BDC                     l9248:
 29363                           
 29364                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 29365                           ;stkvar	_i @ sp[(-1)+0]
 29366  018BDC  0EFF               	movlw	-1
 29367  018BDE  50E3               	movf	plusw1,w,c
 29368  018BE0  0D02               	mullw	2
 29369  018BE2  0ED7               	movlw	low _tickCount
 29370  018BE4  24F3               	addwf	243,w,c
 29371  018BE6  6ED9               	movwf	fsr2l,c
 29372  018BE8  0E01               	movlw	high _tickCount
 29373  018BEA  20F4               	addwfc	prodh,w,c
 29374  018BEC  6EDA               	movwf	fsr2h,c
 29375  018BEE  50DE               	movf	postinc2,w,c
 29376  018BF0  10DE               	iorwf	postinc2,w,c
 29377  018BF2  B4D8               	btfsc	status,2,c
 29378  018BF4  D00C               	goto	l9252
 29379                           
 29380                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 29381                           ;stkvar	_i @ sp[(-1)+0]
 29382  018BF6  0EFF               	movlw	-1
 29383  018BF8  50E3               	movf	plusw1,w,c
 29384  018BFA  0D02               	mullw	2
 29385  018BFC  0ED7               	movlw	low _tickCount
 29386  018BFE  24F3               	addwf	243,w,c
 29387  018C00  6ED9               	movwf	fsr2l,c
 29388  018C02  0E01               	movlw	high _tickCount
 29389  018C04  20F4               	addwfc	prodh,w,c
 29390  018C06  6EDA               	movwf	fsr2h,c
 29391  018C08  06DE               	decf	postinc2,f,c
 29392  018C0A  0E00               	movlw	0
 29393  018C0C  5ADD               	subwfb	postdec2,f,c
 29394  018C0E                     l9252:
 29395                           
 29396                           ;mcc_generated_files/tmr6.c: 207:  }
 29397                           ;stkvar	_i @ sp[(-1)+0]
 29398  018C0E  0EFF               	movlw	-1
 29399  018C10  2AE3               	incf	plusw1,f,c
 29400                           
 29401                           ;stkvar	_i @ sp[(-1)+0]
 29402  018C12  0EFF               	movlw	-1
 29403  018C14  006F FF8C  F001    	movff	plusw1,btemp
 29404  018C1A  0E0B               	movlw	11
 29405  018C1C  6401               	cpfsgt	btemp^0,c
 29406  018C1E  D7DE               	goto	l9248
 29407                           
 29408                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 29409  018C20  52E5               	movf	postdec1,f,c
 29410  018C22  0012               	return		;funcret
 29411  018C24                     __end_of_TMR6_DefaultInterruptHandler:
 29412                           	opt callstack 0
 29413                           
 29414 ;; *************** function _DMA1_DMASCNT_ISR *****************
 29415 ;; Defined at:
 29416 ;;		line 126 in file "mcc_generated_files/dma1.c"
 29417 ;; Parameters:    Size  Location     Type
 29418 ;;		None
 29419 ;; Auto vars:     Size  Location     Type
 29420 ;;		None
 29421 ;; Return value:  Size  Location     Type
 29422 ;;                  1    wreg      void 
 29423 ;; Registers used:
 29424 ;;		None
 29425 ;; Tracked objects:
 29426 ;;		On entry : 0/0
 29427 ;;		On exit  : 3F/0
 29428 ;;		Unchanged: 0/0
 29429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29434 ;;Total ram usage:        0 bytes
 29435 ;; Hardware stack levels used:    1
 29436 ;; This function calls:
 29437 ;;		Nothing
 29438 ;; This function is called by:
 29439 ;;		Interrupt level 2
 29440 ;; This function uses a non-reentrant model
 29441 ;;
 29442                           
 29443                           	psect	text159
 29444  0198B4                     __ptext159:
 29445                           	opt callstack 0
 29446  0198B4                     _DMA1_DMASCNT_ISR:
 29447                           	opt callstack 13
 29448                           
 29449                           ;incstack = 0
 29450  0198B4  EE14  F016         	lfsr	1,___inthi_sp
 29451                           
 29452                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 29453  0198B8  0139               	movlb	57	; () banked
 29454  0198BA  91A2               	bcf	162,0,b	;volatile
 29455                           
 29456                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 29457  0198BC  0100               	movlb	0	; () banked
 29458  0198BE  9789               	bcf	_spi_link& (0+255),3,b	;volatile
 29459                           
 29460                           ; BSR set to: 0
 29461  0198C0  0011               	retfie		f
 29462  0198C2                     __end_of_DMA1_DMASCNT_ISR:
 29463                           	opt callstack 0
 29464                           
 29465 ;; *************** function _DMA1_DMADCNT_ISR *****************
 29466 ;; Defined at:
 29467 ;;		line 134 in file "mcc_generated_files/dma1.c"
 29468 ;; Parameters:    Size  Location     Type
 29469 ;;		None
 29470 ;; Auto vars:     Size  Location     Type
 29471 ;;		None
 29472 ;; Return value:  Size  Location     Type
 29473 ;;                  1    wreg      void 
 29474 ;; Registers used:
 29475 ;;		None
 29476 ;; Tracked objects:
 29477 ;;		On entry : 0/0
 29478 ;;		On exit  : 3F/39
 29479 ;;		Unchanged: 0/0
 29480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29485 ;;Total ram usage:        0 bytes
 29486 ;; Hardware stack levels used:    1
 29487 ;; This function calls:
 29488 ;;		Nothing
 29489 ;; This function is called by:
 29490 ;;		Interrupt level 2
 29491 ;; This function uses a non-reentrant model
 29492 ;;
 29493                           
 29494                           	psect	text160
 29495  0198CC                     __ptext160:
 29496                           	opt callstack 0
 29497  0198CC                     _DMA1_DMADCNT_ISR:
 29498                           	opt callstack 13
 29499                           
 29500                           ; BSR set to: 0
 29501                           ;incstack = 0
 29502  0198CC  EE14  F016         	lfsr	1,___inthi_sp
 29503                           
 29504                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 29505  0198D0  0139               	movlb	57	; () banked
 29506  0198D2  93A2               	bcf	162,1,b	;volatile
 29507                           
 29508                           ; BSR set to: 57
 29509  0198D4  0011               	retfie		f
 29510  0198D6                     __end_of_DMA1_DMADCNT_ISR:
 29511                           	opt callstack 0
 29512                           
 29513 ;; *************** function _DMA1_DMAA_ISR *****************
 29514 ;; Defined at:
 29515 ;;		line 144 in file "mcc_generated_files/dma1.c"
 29516 ;; Parameters:    Size  Location     Type
 29517 ;;		None
 29518 ;; Auto vars:     Size  Location     Type
 29519 ;;		None
 29520 ;; Return value:  Size  Location     Type
 29521 ;;                  1    wreg      void 
 29522 ;; Registers used:
 29523 ;;		None
 29524 ;; Tracked objects:
 29525 ;;		On entry : 0/0
 29526 ;;		On exit  : 3F/39
 29527 ;;		Unchanged: 0/0
 29528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29533 ;;Total ram usage:        0 bytes
 29534 ;; Hardware stack levels used:    1
 29535 ;; This function calls:
 29536 ;;		Nothing
 29537 ;; This function is called by:
 29538 ;;		Interrupt level 2
 29539 ;; This function uses a non-reentrant model
 29540 ;;
 29541                           
 29542                           	psect	text161
 29543  0198D8                     __ptext161:
 29544                           	opt callstack 0
 29545  0198D8                     _DMA1_DMAA_ISR:
 29546                           	opt callstack 13
 29547                           
 29548                           ; BSR set to: 57
 29549                           ;incstack = 0
 29550  0198D8  EE14  F016         	lfsr	1,___inthi_sp
 29551                           
 29552                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 29553  0198DC  0139               	movlb	57	; () banked
 29554  0198DE  97A2               	bcf	162,3,b	;volatile
 29555                           
 29556                           ; BSR set to: 57
 29557  0198E0  0011               	retfie		f
 29558  0198E2                     __end_of_DMA1_DMAA_ISR:
 29559                           	opt callstack 0
 29560                           
 29561 ;; *************** function _DMA1_DMAOR_ISR *****************
 29562 ;; Defined at:
 29563 ;;		line 155 in file "mcc_generated_files/dma1.c"
 29564 ;; Parameters:    Size  Location     Type
 29565 ;;		None
 29566 ;; Auto vars:     Size  Location     Type
 29567 ;;		None
 29568 ;; Return value:  Size  Location     Type
 29569 ;;                  1    wreg      void 
 29570 ;; Registers used:
 29571 ;;		None
 29572 ;; Tracked objects:
 29573 ;;		On entry : 0/0
 29574 ;;		On exit  : 3F/39
 29575 ;;		Unchanged: 0/0
 29576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29581 ;;Total ram usage:        0 bytes
 29582 ;; Hardware stack levels used:    1
 29583 ;; This function calls:
 29584 ;;		Nothing
 29585 ;; This function is called by:
 29586 ;;		Interrupt level 2
 29587 ;; This function uses a non-reentrant model
 29588 ;;
 29589                           
 29590                           	psect	text162
 29591  0198E4                     __ptext162:
 29592                           	opt callstack 0
 29593  0198E4                     _DMA1_DMAOR_ISR:
 29594                           	opt callstack 13
 29595                           
 29596                           ; BSR set to: 57
 29597                           ;incstack = 0
 29598  0198E4  EE14  F016         	lfsr	1,___inthi_sp
 29599                           
 29600                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 29601  0198E8  0139               	movlb	57	; () banked
 29602  0198EA  95A2               	bcf	162,2,b	;volatile
 29603                           
 29604                           ; BSR set to: 57
 29605  0198EC  0011               	retfie		f
 29606  0198EE                     __end_of_DMA1_DMAOR_ISR:
 29607                           	opt callstack 0
 29608                           
 29609                           ;
 29610                           ; Interrupt Vector Table @ 0x8
 29611                           ;
 29612                           
 29613                           	psect	ivt0x8
 29614  000008                     __pivt0x8:
 29615                           	opt callstack 0
 29616  000008                     ivt0x8_base:
 29617                           	opt callstack 0
 29618                           
 29619                           ; Vector 0 : SWINT
 29620  000008  664C               	dw	_Default_ISR shr (0+2)
 29621                           
 29622                           ; Vector 1 : HLVD
 29623  00000A  664C               	dw	_Default_ISR shr (0+2)
 29624                           
 29625                           ; Vector 2 : OSF
 29626  00000C  664C               	dw	_Default_ISR shr (0+2)
 29627                           
 29628                           ; Vector 3 : CSW
 29629  00000E  664C               	dw	_Default_ISR shr (0+2)
 29630                           
 29631                           ; Vector 4 : NVM
 29632  000010  664C               	dw	_Default_ISR shr (0+2)
 29633                           
 29634                           ; Vector 5 : SCAN
 29635  000012  664C               	dw	_Default_ISR shr (0+2)
 29636                           
 29637                           ; Vector 6 : CRC
 29638  000014  664C               	dw	_Default_ISR shr (0+2)
 29639                           
 29640                           ; Vector 7 : IOC
 29641  000016  664C               	dw	_Default_ISR shr (0+2)
 29642                           
 29643                           ; Vector 8 : INT0
 29644  000018  6629               	dw	_INT0_ISR shr (0+2)
 29645                           
 29646                           ; Vector 9 : ZCD
 29647  00001A  664C               	dw	_Default_ISR shr (0+2)
 29648                           
 29649                           ; Vector 10 : AD
 29650  00001C  6472               	dw	_ADCC_ISR shr (0+2)
 29651                           
 29652                           ; Vector 11 : ADT
 29653  00001E  61DA               	dw	_ADCC_ThresholdISR shr (0+2)
 29654                           
 29655                           ; Vector 12 : CMP1
 29656  000020  664C               	dw	_Default_ISR shr (0+2)
 29657                           
 29658                           ; Vector 13 : SMT1
 29659  000022  664C               	dw	_Default_ISR shr (0+2)
 29660                           
 29661                           ; Vector 14 : SMT1PRA
 29662  000024  664C               	dw	_Default_ISR shr (0+2)
 29663                           
 29664                           ; Vector 15 : SMT1PRW
 29665  000026  664C               	dw	_Default_ISR shr (0+2)
 29666                           
 29667                           ; Vector 16 : DMA1SCNT
 29668  000028  662D               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 29669                           
 29670                           ; Vector 17 : DMA1DCNT
 29671  00002A  6633               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 29672                           
 29673                           ; Vector 18 : DMA1OR
 29674  00002C  6639               	dw	_DMA1_DMAOR_ISR shr (0+2)
 29675                           
 29676                           ; Vector 19 : DMA1A
 29677  00002E  6636               	dw	_DMA1_DMAA_ISR shr (0+2)
 29678                           
 29679                           ; Vector 20 : SPI1RX
 29680  000030  664C               	dw	_Default_ISR shr (0+2)
 29681                           
 29682                           ; Vector 21 : SPI1TX
 29683  000032  664C               	dw	_Default_ISR shr (0+2)
 29684                           
 29685                           ; Vector 22 : SPI1
 29686  000034  664C               	dw	_Default_ISR shr (0+2)
 29687                           
 29688                           ; Vector 23 : I2C1RX
 29689  000036  664C               	dw	_Default_ISR shr (0+2)
 29690                           
 29691                           ; Vector 24 : I2C1TX
 29692  000038  664C               	dw	_Default_ISR shr (0+2)
 29693                           
 29694                           ; Vector 25 : I2C1
 29695  00003A  664C               	dw	_Default_ISR shr (0+2)
 29696                           
 29697                           ; Vector 26 : I2C1E
 29698  00003C  664C               	dw	_Default_ISR shr (0+2)
 29699                           
 29700                           ; Vector 27 : U1RX
 29701  00003E  6552               	dw	_UART1_rx_vect_isr shr (0+2)
 29702                           
 29703                           ; Vector 28 : U1TX
 29704  000040  6548               	dw	_UART1_tx_vect_isr shr (0+2)
 29705                           
 29706                           ; Vector 29 : U1E
 29707  000042  664C               	dw	_Default_ISR shr (0+2)
 29708                           
 29709                           ; Vector 30 : U1
 29710  000044  664C               	dw	_Default_ISR shr (0+2)
 29711                           
 29712                           ; Vector 31 : TMR0
 29713  000046  664C               	dw	_Default_ISR shr (0+2)
 29714                           
 29715                           ; Vector 32 : TMR1
 29716  000048  664C               	dw	_Default_ISR shr (0+2)
 29717                           
 29718                           ; Vector 33 : TMR1G
 29719  00004A  664C               	dw	_Default_ISR shr (0+2)
 29720                           
 29721                           ; Vector 34 : TMR2
 29722  00004C  664C               	dw	_Default_ISR shr (0+2)
 29723                           
 29724                           ; Vector 35 : CCP1
 29725  00004E  664C               	dw	_Default_ISR shr (0+2)
 29726                           
 29727                           ; Vector 36 : Undefined
 29728  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 29729                           
 29730                           ; Vector 37 : NCO1
 29731  000052  664C               	dw	_Default_ISR shr (0+2)
 29732                           
 29733                           ; Vector 38 : CWG1
 29734  000054  664C               	dw	_Default_ISR shr (0+2)
 29735                           
 29736                           ; Vector 39 : CLC1
 29737  000056  664C               	dw	_Default_ISR shr (0+2)
 29738                           
 29739                           ; Vector 40 : INT1
 29740  000058  63D5               	dw	_INT1_ISR shr (0+2)
 29741                           
 29742                           ; Vector 41 : CMP2
 29743  00005A  664C               	dw	_Default_ISR shr (0+2)
 29744                           
 29745                           ; Vector 42 : DMA2SCNT
 29746  00005C  664C               	dw	_Default_ISR shr (0+2)
 29747                           
 29748                           ; Vector 43 : DMA2DCNT
 29749  00005E  664C               	dw	_Default_ISR shr (0+2)
 29750                           
 29751                           ; Vector 44 : DMA2OR
 29752  000060  664C               	dw	_Default_ISR shr (0+2)
 29753                           
 29754                           ; Vector 45 : DMA2A
 29755  000062  664C               	dw	_Default_ISR shr (0+2)
 29756                           
 29757                           ; Vector 46 : I2C2RX
 29758  000064  664C               	dw	_Default_ISR shr (0+2)
 29759                           
 29760                           ; Vector 47 : I2C2TX
 29761  000066  664C               	dw	_Default_ISR shr (0+2)
 29762                           
 29763                           ; Vector 48 : I2C2
 29764  000068  664C               	dw	_Default_ISR shr (0+2)
 29765                           
 29766                           ; Vector 49 : I2C2E
 29767  00006A  664C               	dw	_Default_ISR shr (0+2)
 29768                           
 29769                           ; Vector 50 : U2RX
 29770  00006C  6566               	dw	_UART2_rx_vect_isr shr (0+2)
 29771                           
 29772                           ; Vector 51 : U2TX
 29773  00006E  655C               	dw	_UART2_tx_vect_isr shr (0+2)
 29774                           
 29775                           ; Vector 52 : U2E
 29776  000070  664C               	dw	_Default_ISR shr (0+2)
 29777                           
 29778                           ; Vector 53 : U2
 29779  000072  664C               	dw	_Default_ISR shr (0+2)
 29780                           
 29781                           ; Vector 54 : TMR3
 29782  000074  5DDF               	dw	_TMR3_ISR shr (0+2)
 29783                           
 29784                           ; Vector 55 : TMR3G
 29785  000076  664C               	dw	_Default_ISR shr (0+2)
 29786                           
 29787                           ; Vector 56 : TMR4
 29788  000078  664C               	dw	_Default_ISR shr (0+2)
 29789                           
 29790                           ; Vector 57 : CCP2
 29791  00007A  664C               	dw	_Default_ISR shr (0+2)
 29792                           
 29793                           ; Vector 58 : Undefined
 29794  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 29795                           
 29796                           ; Vector 59 : CWG2
 29797  00007E  664C               	dw	_Default_ISR shr (0+2)
 29798                           
 29799                           ; Vector 60 : CLC2
 29800  000080  664C               	dw	_Default_ISR shr (0+2)
 29801                           
 29802                           ; Vector 61 : INT2
 29803  000082  664C               	dw	_Default_ISR shr (0+2)
 29804                           
 29805                           ; Vector 62 : Undefined
 29806  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 29807                           
 29808                           ; Vector 63 : Undefined
 29809  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 29810                           
 29811                           ; Vector 64 : Undefined
 29812  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 29813                           
 29814                           ; Vector 65 : Undefined
 29815  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 29816                           
 29817                           ; Vector 66 : Undefined
 29818  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 29819                           
 29820                           ; Vector 67 : Undefined
 29821  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 29822                           
 29823                           ; Vector 68 : Undefined
 29824  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 29825                           
 29826                           ; Vector 69 : Undefined
 29827  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 29828                           
 29829                           ; Vector 70 : TMR5
 29830  000094  62B6               	dw	_TMR5_ISR shr (0+2)
 29831                           
 29832                           ; Vector 71 : TMR5G
 29833  000096  664C               	dw	_Default_ISR shr (0+2)
 29834                           
 29835                           ; Vector 72 : TMR6
 29836  000098  65F1               	dw	_TMR6_ISR shr (0+2)
 29837                           
 29838                           ; Vector 73 : CCP3
 29839  00009A  664C               	dw	_Default_ISR shr (0+2)
 29840                           
 29841                           ; Vector 74 : CWG3
 29842  00009C  664C               	dw	_Default_ISR shr (0+2)
 29843                           
 29844                           ; Vector 75 : CLC3
 29845  00009E  664C               	dw	_Default_ISR shr (0+2)
 29846                           
 29847                           ; Vector 76 : Undefined
 29848  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 29849                           
 29850                           ; Vector 77 : Undefined
 29851  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 29852                           
 29853                           ; Vector 78 : Undefined
 29854  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 29855                           
 29856                           ; Vector 79 : Undefined
 29857  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 29858                           
 29859                           ; Vector 80 : CCP4
 29860  0000A8  664C               	dw	_Default_ISR shr (0+2)
 29861                           
 29862                           ; Vector 81 : CLC4
 29863  0000AA  664C               	dw	_Default_ISR shr (0+2)
 29864  0000AC                     ivt0x8_undefint:
 29865                           	opt callstack 0
 29866  0000AC  00FF               	reset	
 29867                           
 29868                           	psect	text163
 29869  000000                     __ptext163:
 29870                           	opt callstack 0
 29871                           
 29872                           	psect	rparam
 29873  0000                     
 29874                           	psect	temp
 29875  000001                     btemp:
 29876                           	opt callstack 0
 29877  000001                     	ds	32
 29878  0000                     wtemp0	set	btemp
 29879  0000                     wtemp1	set	btemp+2
 29880  0000                     wtemp2	set	btemp+4
 29881  0000                     wtemp3	set	btemp+6
 29882  0000                     wtemp4	set	btemp+8
 29883  0000                     wtemp5	set	btemp+10
 29884  0000                     wtemp8	set	btemp+1
 29885  0000                     ttemp0	set	btemp
 29886  0000                     ttemp1	set	btemp+3
 29887  0000                     ttemp2	set	btemp+6
 29888  0000                     ttemp3	set	btemp+9
 29889  0000                     ttemp5	set	btemp+1
 29890  0000                     ttemp6	set	btemp+4
 29891  0000                     ttemp7	set	btemp+8
 29892  0000                     ltemp0	set	btemp
 29893  0000                     ltemp1	set	btemp+4
 29894  0000                     ltemp2	set	btemp+8
 29895  0000                     lltemp0	set	btemp
 29896  0000                     lltemp1	set	btemp+8
 29897  0000                     lltemp2	set	btemp+16
 29898  0000                     lltemp3	set	btemp+24
 29899                           tosu	equ	0x3FFF
 29900                           tosh	equ	0x3FFE
 29901                           tosl	equ	0x3FFD
 29902                           stkptr	equ	0x3FFC
 29903                           pclatu	equ	0x3FFB
 29904                           pclath	equ	0x3FFA
 29905                           pcl	equ	0x3FF9
 29906                           tblptru	equ	0x3FF8
 29907                           tblptrh	equ	0x3FF7
 29908                           tblptrl	equ	0x3FF6
 29909                           tablat	equ	0x3FF5
 29910                           prodh	equ	0x3FF4
 29911                           prodl	equ	0x3FF3
 29912                           indf0	equ	0x3FEF
 29913                           postinc0	equ	0x3FEE
 29914                           postdec0	equ	0x3FED
 29915                           preinc0	equ	0x3FEC
 29916                           plusw0	equ	0x3FEB
 29917                           fsr0h	equ	0x3FEA
 29918                           fsr0l	equ	0x3FE9
 29919                           wreg	equ	0x3FE8
 29920                           indf1	equ	0x3FE7
 29921                           postinc1	equ	0x3FE6
 29922                           postdec1	equ	0x3FE5
 29923                           preinc1	equ	0x3FE4
 29924                           plusw1	equ	0x3FE3
 29925                           fsr1h	equ	0x3FE2
 29926                           fsr1l	equ	0x3FE1
 29927                           bsr	equ	0x3FE0
 29928                           indf2	equ	0x3FDF
 29929                           postinc2	equ	0x3FDE
 29930                           postdec2	equ	0x3FDD
 29931                           preinc2	equ	0x3FDC
 29932                           plusw2	equ	0x3FDB
 29933                           fsr2h	equ	0x3FDA
 29934                           fsr2l	equ	0x3FD9
 29935                           status	equ	0x3FD8


Data Sizes:
    Strings     446
    Constant    372
    Data        473
    BSS         1394
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      45
    BANK0           160      0     159
    BANK1           256      0     247
    BANK2           256     17     221
    BANK3           256      0     228
    BANK4           256      0     198
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_59(CODE[1]), STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[20]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5651_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[20]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4318tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1934spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1934spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  311332
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (20) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (20) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    2040
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (17) _Volts_to_SOC                                        4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  166948
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (17) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (17) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (17) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (17) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     265
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           17    17      0    5389
                                              0 BANK2     17    17      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0    5329
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0    5329
                       _Volts_to_SOC
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (17) ___xxtofl                                           10     5      5     322
 ---------------------------------------------------------------------------------
 (17) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (17) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (17) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (17) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (17) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (17) _Volts_to_SOC                                        4     0      4      22
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (19) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (19) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (19) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (20) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (20) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (19) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___flmul
     ___fltol
     ___xxtofl
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _Volts_to_SOC
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       ___xxtofl
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     122      69        3.5%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C6      13       77.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     11      DD       9       86.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F7       7       96.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9F       5       99.4%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      2D       1       71.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     648      58        0.0%
DATA                 0      0     76A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Dec  6 16:42:28 2019

                     _SPI1_Exchange8bit 96D8                __end_of_set_display_info 9750  
                                     _C 0100                                       _D 06FF  
                                     _H 00F8                                       _P 00A5  
                                     _R 00C9                                       _S 0060  
                                     _T FD9D                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 942E            __end_of_start_switch_handler 96D8  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FE2D                  __end_of_FVR_Initialize 9916  
                           __CFG_LVP$ON 000000                                     l173 984A  
                                   l703 9246                                     l583 921A  
                                   l837 96E6                                     _GIE 01FE97  
                                   _abs 8CB6                                     _pad 734A  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize 97F6  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack 9696  
                    _UART1_Transmit_ISR 91F4                           __CFG_BBEN$OFF 000000  
                 __size_of_Volts_to_SOC 0096                           _INT1_CallBack 95E4  
                          __CFG_ZCD$OFF 000000                                    l1030 8F0E  
                                  l2102 066A                                    l2017 73A6  
                                  l1218 8F4E                                    l2037 46E2  
                                  l2117 0B1A                                    l2073 123A  
                                  l2226 1D78                                    l1346 1F98  
                                  l1338 1DE0                                    l3035 7228  
                                  l2155 585A                                    l1363 25EC  
                       _timer3ReloadVal 002C                                    l1444 8A2E  
                                  l1356 2036                                    l1348 1F9E  
                                  l2510 7D86                                    l3302 6736  
                                  l1358 20FC                                    l1359 220A  
                                  l2176 4AC8                                    l2521 6D60  
                                  l2514 6C8C                                    l3330 8588  
                                  l1660 8FAE                                    l1580 8054  
                                  l1717 974C                                    l3317 860C  
                                  l1670 6370                                    l2800 3494  
                                  l1808 68F6                                    l1584 835C  
                                  l2548 6BFE                                    l1677 756A  
                                  l1669 6214                                    l1765 45FE  
                  _ADCC_StartConversion 9864                                    l1599 9018  
                                  l2833 414E                                    l7002 507A  
                                  l2940 8CF6                                    l2932 6A8C  
                                  l7012 5180                                    l7004 50CA  
                                  l2909 656E                                    l1885 8482  
                                  l7030 8578                                    l1894 7776  
                                  l7008 5112                                    l7106 60B4  
                                  l2971 5F18                                    l2788 3604  
                                  l7052 5AE4                                    l7132 6D8E  
                                  l7204 7330                                    l7220 7D84  
                                  l7212 7D0E                                    l2869 2E48  
                                  l7070 5BFC                                    l7046 5A90  
                                  l7232 8BC6                                    l7144 6DC4  
                                  l7216 7D50                                    l6178 8F36  
                                  l7058 5B2A                                    l7090 5F80  
                                  l7138 6DA4                                    l8202 82B4  
                                  l8300 31F0                                    l8310 322C  
                                  l8230 2F2E                                    l7166 6E9E  
                                  l7158 6E6A                                    l7182 7264  
                                  l8150 9022                                    l8206 82B8  
                                  l8304 3210                                    l8224 2EE8  
                                  l8306 3222                                    l8314 325C  
                                  l8242 2F98                                    l8218 2EA8  
                                  l7098 6008                                    l7186 727C  
                                  l7178 7252                                    l8420 35B4  
                                  l8404 3560                                    l8332 32F8  
                                  l8260 3040                                    l8252 2FEE  
                                  l8236 2F66                                    l8228 2EFE  
                                  l8068 9336                                    l7196 72FC  
                                  l8500 3EBA                                    l8180 9300  
                                  l8414 358C                                    l8334 330A  
                                  l8342 3346                                    l8254 301E  
                                  l8510 3F02                                    l8600 26BE  
                                  l8248 2FD8                                    l9312 67A4  
                                  l9304 6778                                    l7800 666C  
                                  l8602 26C4                                    l8426 35E4  
                                  l8418 35A4                                    l8354 341E  
                                  l8338 3314                                    l8290 317E  
                                  l8530 3FA4                                    l8450 3CBA  
                                  l9402 42A8                                    l8194 8244  
                                  l9252 8C0E                                    l8620 2792  
                                  l8612 274C                                    l8604 26F4  
                                  l8372 34B6                                    l8364 3478  
                                  l8356 3444                                    l9316 67BC  
                                  l6932 8CE6                                    l8524 3F88  
                                  l8516 3F56                                    l8508 3EF0  
                                  l8444 3C74                                    l8702 2CC8  
                                  l8630 27E4                                    l8622 27C2  
                                  l8374 34C8                                    l9350 8FC4  
                                  l8534 3FCA                                    l8518 3F5A  
                                  l8470 3D98                                    l8438 3C34  
                                  l6950 6A2E                                    l9414 43B4  
                                  l9406 4382                                    l8198 824C  
                                  l9248 8BDC                                    l9520 36D4  
                                  l8720 2D88                                    l8392 3502  
                                  l8544 4014                                    l8464 3D52  
                                  l8448 3C8A                                    l8800 6B86  
                                  l9432 45CC                                    l9440 45DE  
                                  l8706 2CCE                                    l8618 278C  
                                  l8378 34D4                                    l7762 5D8A  
                                  l7746 5CC8                                    l6882 8128  
                                  l8570 40FA                                    l8490 3E2A  
                                  l8482 3E10                                    l8458 3D12  
                                  l6946 6A2A                                    l9426 4530  
                                  l9418 4450                                    l9506 843C  
                                  l9612 9216                                    l9524 3716  
                                  l8716 2D42                                    l8388 34FC  
                                  l7772 5E6C                                    l7764 5DA2  
                                  l7756 5D5E                                    l7748 5CEA  
                                  l6884 814A                                    l8564 40CA  
                                  l8548 401A                                    l8476 3DD6  
                                  l8468 3D68                                    l6956 6A84  
                                  l9550 3BA6                                    l9534 3926  
                                  l9470 700E                                    l8734 2DF6  
                                  l8726 2DB2                                    l7782 5F08  
                                  l7766 5DC6                                    l8558 408E  
                                  l8806 6B96                                    l6974 85FC  
                                  l9552 3BAE                                    l9472 7014  
                                  l9480 7056                                    l8736 2E10  
                                  l7768 5E04                                    l8576 4122  
                                  l8752 6CDA                                    l8808 6BAC  
                                  l8832 642A                                    l8824 63BE  
                                  l9392 418A                                    l9634 9242  
                                  l9546 3B1C                                    l9538 39A4  
                                  l9474 7022                                    l9466 6FF8  
                                  l8682 2C3C                                    l8594 267E  
                                  l8578 4132                                    l8746 6C4A  
                                  l8834 6438                                    l9386 415A  
                                  l9556 3BC4                                    l9660 8EF6  
                                  l9468 7008                                    l8692 2C7E  
                                  l8764 6D5E                                    l8756 6D28  
                                  l8772 8C8C                                    l6988 4F5C  
                                  l8844 649A                                    l8836 644E  
                                  l9804 7684                                    l9910 865A  
                                  l9494 70F4                                    l9486 7086  
                                  l9478 702A                                    l8782 6AE8  
                                  l7798 6600                                    l8846 64B8  
                                  l8838 646C                                    l9904 864A  
                                  l8688 2C58                                    l8856 64EC  
                                  l8848 64CE                                    l9816 76E0  
                                  l8866 654E                                    l9826 7750  
                                  l9780 7E92                                    l8798 6B6A  
                                  STR_1 FF60                                    l9776 7E54  
                                  STR_2 FFB2                                    STR_3 FFE0  
                                  STR_4 FF4F                                    STR_5 FF71  
                                  STR_6 FFB2                                    STR_7 FFE0  
                                  l9798 5764                                    STR_8 FF3E  
                                  STR_9 FF93                                    l9898 8ECC  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u5100 8536  
                                  u5030 5020                                    u5110 8538  
                                  u5015 4F7A                                    u5200 5B24  
                                  u5016 4F80                                    u5017 4F8E  
                                  u5130 918C                                    u5210 5B56  
                                  u5050 50F8                                    u5035 5016  
                                  u5140 918E                                    u5300 5FD0  
                                  u5230 5C34                                    u5310 6002  
                                  u5055 50EE                                    u5160 5A8A  
                                  u5320 6034                                    u5080 8E06  
                                  u5250 5C86                                    u5410 6DF0  
                                  u5090 8E08                                    _T6PR 003F93  
                                  u5180 5AE0                                    u5340 60EC  
                                  u5500 731C                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u5430 6E8A  
                                  _PMD2 0039C2                                    u5191 5AEA  
                                  _PMD3 0039C3                                    u5360 613E  
                                  u5280 5F7A                                    u4800 912E  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  u7300 333C                                    u4740 8178  
                                  u5540 7D80                                    u8020 8C88  
                                  u8100 6BB4                                    u7045 8E42  
                                  u7230 3254                                    u5550 8BA2  
                                  u8030 6AC8                                    u4910 6A7C  
                                  u7400 34F4                                    u7240 3274  
                                  u7208 31C6                                    u5560 8BC2  
                                  u5480 72A8                                    u8120 6BDE  
                                  u8040 6ADC                                    u4920 6A7E  
                                  u7305 332C                                    u4905 6A5E  
                                  u4850 8CCA                                    u8050 6B16  
                                  u4770 915C                                    u7235 3244  
                                  u4747 816A                                    u8035 6ABE  
                                  u7340 3466                                    u7180 31A4  
                                  u4860 69AE                                    u4780 915E  
                                  u8230 87E0                                    u7190 31C4  
                                  u4950 85BA                                    u4790 912C  
                                  u7191 31BE                                    u8055 6B0C  
                                  u7440 3550                                    u6560 5D5A  
                                  u4960 85BC                                    u4865 69A4  
                                  u8330 6756                                    u7380 34DA  
                                  u6580 5EB2                                    u4980 4EF4  
                                  u6660 66F8                                    u8500 4494  
                                  u7445 3540                                    u7470 3570  
                                  u8510 9680                                    u6590 5EB4  
                                  u7710 4068                                    u7630 3F82  
                                  u4990 4F40                                    u8190 64E2  
                                  u8414 41A4                                    u8255 8814  
                                  u8415 419E                                    u8256 8816  
                                  u8248 87E2                                    u7720 40A2  
                                  u4985 4EEA                                    u7730 40DE  
                                  u8434 41C6                                    u7715 4058  
                                  u8435 41C0                                    u7820 27D2  
                                  u8516 9682                                    u8620 8428  
                                  u9510 46A6                                    u7670 400C  
                                  u8454 439C                                    u8455 4396  
                                  u9360 7132                                    u9600 49BE  
                                  u9440 7BEE                                    u7930 2D1C  
                                  u9530 46B8                                    u8474 446A  
                                  u8394 4174                                    u8650 846E  
                                  u7835 2966                                    u8475 4464  
                                  u8395 416E                                    u7940 2D56  
                                  u9380 71AE                                    u9620 49D4  
                                  u9700 0196                                    u7845 2A2E  
                                  u7950 2D9C                                    u9550 4708  
                                  u8494 448C                                    u8638 842A  
                                  u7935 2D0C                                    u7855 2BF6  
                                  u9447 7BE0                                    u8495 4486  
                                  u9560 4960                                    u9480 4634  
                                  u7890 2CC0                                    u9490 4636  
                                  u9810 0562                                    u9730 02A6  
                                  _PLLR 01CEE0                                    u9571 4990  
                                  u9580 49A6                                    u9740 02A8  
                                  u9660 00DA                                    u8668 8470  
                                  u9581 49A4                                    u9590 49BA  
                                  u9840 05C6                                    u9690 0194  
                                  u9780 050E                                    u9950 0A18  
                                  u9880 0648                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 91F4  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                                  _cp_h FE3D                                    _cp_l FE39  
                                  _atoi 5CAE                                    _ctoa 8486  
                                  _main 1D82                                    _dtoa 4604  
                                  _nanf 8902                                    _seed 01EF  
                                  _prec 0026                                    _nout 00C7  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 5770  
                                  btemp 0001                                    _xtoa 4A84  
                __end_of_check_adc_scan 990E                           ___fpclassifyf 6900  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0030  
             __end_of_SPI1_Exchange8bit 96F6               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize 8D88                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 9548                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0040                        __end_of_INT0_ISR 98B2  
                      __end_of_INT1_ISR 8F92          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 805C           __end_of_OSCILLATOR_Initialize 9850  
                                 l11002 16F2                                   l11022 18E8  
                                 l11014 1830                                   l11120 536A  
                                 l10402 7376                                   l11026 191C  
                                 l11114 5300                                   l10412 73EC  
                                 l10500 4A3A                                   l11140 7F32  
                                 l11108 5242                                   l10406 739E  
                                 l10430 84D0                                   l10422 7B74  
                                 l11070 1CA6                                   l11046 1A7C  
                                 l11142 7F74                                   l10416 7436  
                                 l10408 73B0                                   l10600 0554  
                                 l11080 1D04                                   l11056 1B2A  
                                 l11128 5418                                   l10514 00AC  
                                 l11226 7482                                   l10380 713E  
                                 l10428 84A4                                   l10620 05F6  
                                 l10612 0594                                   l10604 057C  
                                 l11076 1D00                                   l11412 1DE8  
                                 l10462 471C                                   l10454 46D2  
                                 l10622 0602                                   l10606 058E  
                                 l10526 00F0                                   l10534 0146  
                                 l11086 1D24                                   l11510 24F0  
                                 l11414 1DFA                                   l11406 1DC2  
                                 l10392 81B4                                   l10544 01EA  
                                 l10552 0258                                   l11192 80B4  
                                 l11344 61E4                                   l11408 1DCA  
                                 l10466 473A                                   l10642 06F0  
                                 l10562 02FC                                   l10570 032A  
                                 l10546 0216                                   l10396 81F2  
                                 l10476 494C                                   l10708 0CBA  
                                 l10716 0D24                                   l10724 0D90  
                                 l10732 0EA2                                   l10548 022C  
                                 l11540 259C                                   l11532 2566  
                                 l11508 24C6                                   l11516 2510  
                                 l11460 1FA2                                   l10638 06B8  
                                 l10582 0406                                   l11358 630C  
                                 l11534 257E                                   l11526 2554  
                                 l11462 1FD0                                   l10496 49FE  
                                 l10760 0FF0                                   l10744 0F3A  
                                 l10680 0B12                                   l10672 0A48  
                                 l10648 077A                                   l10584 0470  
                                 l10840 58FC                                   l10832 5890  
                                 l10816 57DC                                   l10904 4C84  
                                 l10912 4D0A                                   l11544 25C2  
                                 l10770 1092                                   l10682 0B34  
                                 l10658 0926                                   l10578 0396  
                                 l10850 59B2                                   l11554 2616  
                                 l11482 2028                                   l11474 2004  
                                 l10780 10E2                                   l10588 04D2  
                                 l10836 58CC                                   PRLOCK 0039EF  
                                 l10758 0FD6                                   l10854 59EE  
                                 l10846 5986                                   l10950 1326  
                                 l11494 22E8                                   l10696 0C32  
                                 l10928 4DF4                                   l10880 4B2E  
                                 l10952 1360                                   l10874 4AF2  
                                 l10954 1376                                   l11498 234A  
                                 l10796 119A                                   l10868 4AB8  
                                 l10972 14A8                                   l10974 14E2  
                                 l10888 4B8E                                   l10992 165C  
                                 l10976 14F8                         __end_of___aodiv 5CAE  
                          _Volts_to_SOC 823C                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 360E  
                                 _ADCLK 003EFF                         __end_of___aomod 6162  
                                 _ADPCH 003EF1                         __end_of___fldiv 4158  
                                 _ADREF 003EFD                         __end_of___awdiv 6EB8  
                       __end_of___flneg 8CB6                                   STR_11 FF82  
                                 STR_12 FEB9                                   STR_20 FEA6  
                                 STR_21 FF93                                   STR_13 FEDF  
                                 STR_30 FE80                                   STR_22 FF93  
                                 STR_14 FECC                                   STR_23 FF82  
                                 STR_31 FFCD                                   STR_15 FF2B  
                                 STR_32 FFCD                                   STR_24 FFFC  
                                 STR_16 FF05                                   STR_25 FFF9  
                                 STR_33 FFA3                                   STR_17 FF18  
                         __CFG_WDTE$OFF 000000                                   STR_34 FFA3  
                                 STR_50 FFEA                                   STR_18 FEF2  
                                 STR_35 FFA3                                   STR_51 FFF2  
                                 STR_27 FFC1                                   STR_19 FE59  
                                 STR_28 FFD7                                   STR_36 FE41  
                       __end_of___awmod 734A                                   STR_45 FE7F  
                                 STR_29 FE80                                   STR_54 FFF6  
                                 STR_46 FFE6                                   STR_38 FE93  
                                 STR_47 FFEE                                   STR_39 FE6D  
                                 STR_56 FFF6                                   _ADRPT 003EEC  
                       __end_of___flmul 2E52                         __end_of___flsub 8D42  
                       __end_of___fltol 6C08                                   u10110 10B8  
                                 u10130 116E                                   u10050 0EE4  
                                 u10210 58F2                                   u10140 1170  
                                 u10220 5938                                   u10300 4B86  
                                 u10310 4BDA                                   u10400 4D6C  
                                 u10320 4BDC                                   u10401 4D6A  
                                 u10250 5A14                                   u10410 4D80  
                                 u10227 592A                                   u10420 4D84  
                                 u10340 4C3A                                   u10350 4C3C  
                                 u10270 4A9E                                   u10520 1540  
                                 u10370 4D06                                   u10530 1542  
                                 u10380 4D26                                   u10620 19D6  
                                 u10540 1568                                   u10630 19D8  
                                 u10470 13BE                                   u10391 4D56  
                                 u10375 4CE8                                   u10480 13C0  
                                 u10490 13E6                                   u10730 548C  
                                 _U1P1H 003DED                                   _U1P2H 003DEF  
                                 u10670 1B7E                                   u10590 1746  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   u10760 8094  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 u10850 635C                                   _U1P3L 003DF0  
                                 u10860 635E                                   _U2P1L 003DD4  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 _U2P3L 003DD8                                   _T5CLK 003F9D  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00B2  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U1TXB 003DEA  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0045                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR 9930  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 9520  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 787A  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 8B32                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 97DE                            _DMA1CON1bits 003BFD  
                                 _flags 0028                __size_of_calc_model_data 02DA  
                                 _fputc 710E              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha 8E12                                   _fputs 81A4  
                       __end_of_isdigit 9198                         __end_of_ivln2_h FE39  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0040  
                                 _srand 90A0                                   _width 0024  
                                 _putch 97A8                         __end_of_islower 9138  
                       __end_of_isspace 8BD6                _INT1_SetInterruptHandler 9456  
                       __end_of_isupper 9168                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0001  
                                 ltemp1 0005                                   ltemp2 0009  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0001  
                                 ttemp1 0004                                   ttemp2 0007  
                                 ttemp3 000A                                   ttemp5 0002  
                                 ttemp6 0005                                   ttemp7 0009  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 93DE  
           _UART1_SetRxInterruptHandler 93B6                                   wtemp0 0001  
                                 wtemp1 0003                                   wtemp2 0005  
                                 wtemp3 0007                                   wtemp4 0009  
                                 wtemp5 000B                                   wtemp8 0002  
                       __end_of_sprintf 7678                         __end_of_tolower 8616  
                       __end_of_strncmp 6740                         __end_of_toupper 8592  
                   ??_UART1_tx_vect_isr 0045               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 9570                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 8D42                   __end_of_ringBufS_init 92EE  
                       __initialization 787A                       _UART2_rx_vect_isr 9598  
                          __end_of_cp_h FE41                            __end_of_cp_l FE3D  
                          __end_of_atoi 5F22                            __end_of_ctoa 850E  
                          __end_of_main 2628                            __end_of_dtoa 4A84  
                          __end_of_nanf 8964                            __end_of_stoa 5A2E  
                          __end_of_xtoa 4E3E                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0040                 __end_of_TMR2_Initialize 980E  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button 8ED4  
              _TMR5_SetInterruptHandler 9406                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A9  
  __size_of_UART1_SetTxInterruptHandler 0028                     ??_UART2_rx_vect_isr 0045  
             __end_of_UART1_tx_vect_isr 9548                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize 924C                         _PWM8_Initialize 9824  
                      _UART1_Initialize 889E                       _UART2_tx_vect_isr 9570  
                    _UART2_Transmit_ISR 9220                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan 883A                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue 8E12                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0040  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  _RB6PPS 003A0E  
                                i1l1047 8B24                    _start_switch_handler 96B8  
                                i1l1235 7812                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize 8DCE  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 9894                                  _SCANPR 0039F7  
                                u407_48 96A4                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u907_44 867A                                  u907_45 8674  
                                u829_20 94FE                                  u852_28 6FFE  
                                u829_26 9500                                  u871_20 3B14  
                                u855_20 701E                                  u855_21 7018  
                                u873_20 3BBC                                  u859_24 70EA  
                                u859_25 70E6                                  u875_28 95F4  
                  __size_of_hid_display 0102                                  u883_48 9660  
                                u886_28 9618                                  u888_28 963C  
                      __end_of___xxtofl 6578   __end_of_ADCC_DischargeSampleCapacitor 98F6  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor 98EE  
              __end_of_send_lcd_cmd_dma 8B84                         _TMR3_WriteTimer 8F14  
                   ??_UART2_tx_vect_isr 0045               __end_of_UART2_rx_vect_isr 95C0  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 98C2  
                      _UART2_Initialize 89C6                                  _WaitMs 9000  
                       _conv_raw_result 4158                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 6C08  
                                ___fleq 7CCC                       _ADCC_ThresholdISR 8768  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 82D2  
                                _efgtoa 0000                                  _floorf 4E3E  
                    ?_ADCC_ThresholdISR 0040                                  _memset 51AA  
                  __size_of_help_button 0038                                  clear_0 78E8  
                                clear_1 78FC                                  clear_2 7910  
                                clear_3 7922                                  clear_4 792E  
                                clear_5 793A                                  clear_6 7946  
                                clear_7 7952                                  _printf 8964  
                    _eaDogM_WriteString 805C                                  _strcpy 7B2C  
                             ?_ADCC_ISR 0040                                  _strlen 8102  
                    __size_of_TimerDone 0028                         _ADCC_Initialize 86FE  
                        _PMD_Initialize 9850               __end_of_UART2_tx_vect_isr 9598  
                                lltemp0 0001                                  lltemp1 0009  
                                lltemp2 0011                                  lltemp3 0019  
                   ??_ADCC_ThresholdISR 0040                  __end_of_start_adc_scan 889E  
                          __mediumconst FCCC                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 8A7E  
                      __end_of_vfprintf 7FB2                              _StartTimer 8E54  
         __size_of_INTERRUPT_Initialize 0068                 __end_of_TMR5_Initialize 8D88  
                     _SYSTEM_Initialize 8C24                              __accesstop 0060  
               __end_of__initialization 7964                               ?_INT0_ISR 0040  
                             ?_INT1_ISR 0040                    __end_of_display_help 9906  
                  __end_of_display_info 98FE               __end_of_CLKREF_Initialize 98CC  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer 8ED4                   _set_temp_display_help 9876  
                      _clear_hid_pflags 95C0                   __end_of_TMR3_CallBack 9650  
             __end_of_ADCC_ThresholdISR 87D2                      __size_of_calc_bsoc 05D0  
                __end_of_ringBufS_flush 8364                          __pcstackCOMRAM 0040  
                            ___inthi_sp 1016                              ___intlo_sp 180B  
                          __pidataBANK0 8FCA                            __pidataBANK1 7A54  
                          __pidataBANK2 7C00                               ?_TMR3_ISR 0040  
                             ?_TMR5_ISR 0040                               ?_TMR6_ISR 0040  
                        ivt0x8_undefint 00AC                           __end_of_fputc 7232  
                         __end_of_fputs 823C                           __end_of_srand 90D4  
                 __end_of_TMR5_CallBack 962C                           __end_of_putch 97C2  
               __end_of_PWM8_Initialize 983A                 __end_of_TMR6_Initialize 9276  
                     _adc_int_t_handler 8616                  __end_of_PMD_Initialize 9864  
                            __end_of_bp FE35                              ??_ADCC_ISR 0040  
                 __end_of_TMR6_CallBack 9674             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0028                           _DMA1_DMAA_ISR 98D8  
                 TMR3_ISR@CountCallBack 002A                          _clear_adc_scan 9916  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 00C1               __end_of_SYSTEM_Initialize 8C6E  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer 8F54                              __pbssBANK0 0060  
                            __pbssBANK1 01D7                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              _check_help 6162  
               __end_of_conv_raw_result 4604                   _INT0_InterruptHandler 0021  
                            ??_INT0_ISR 0040                              ??_INT1_ISR 0046  
                     __end_of_TimerDone 933E                        _DMA1_DMADCNT_ISR 98CC  
                    __size_of_init_bsoc 00BE              __size_of_UART2_rx_vect_isr 0028  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01C0  
                 __end_of_wait_lcd_done 97A8        __end_of_TMR3_SetInterruptHandler 9456  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 9406  
                            ??_TMR3_ISR 02CC                 __end_of_ADCC_Initialize 8768  
                            ??_TMR5_ISR 004A               __end_of_adc_int_t_handler 8694  
                            ??_TMR6_ISR 0045                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 94CE  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 94A6  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR 9750                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan 991C  
                        ?_DMA1_DMAA_ISR 0040                        _DMA1_DMASCNT_ISR 98B4  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0040              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 3BDE                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch 92EE                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 8F14                 __size_of_switch_handler 0128  
                    __size_of_stop_bsoc 0006       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim 97DE                                 __Lparam 0000  
              __end_of_UART1_Initialize 8902                       __end_of_hid_input 8486  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 5A2E  
                               ___fladd 2E52                                 ___aomod 5F22  
                               ___fldiv 3BDE                                 ___awdiv 6D6A  
                               ___flneg 8C6E                                 ___awmod 7232  
                               ___flmul 2628                                 ___flsub 8CFC  
                               ___fltol 6A96               __end_of_UART1_Receive_ISR 976E  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 7A54                                 __pcinit 787A  
              __end_of_mode_lamp_bright 98A2                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 9886  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 1D82                                 __ptext1 906C  
                               __ptext2 96B8                                 __ptext3 883A  
                               __ptext4 9864                                 __ptext5 98EE  
                               __ptext6 90A0                                 __ptext7 796A  
                               __ptext8 9276                                 __ptext9 929E  
                     _UART2_Receive_ISR 976E                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize 983A  
                               us526999 5C98                            __size_of_abs 0046  
                               us537999 6150                            __size_of_pad 0114  
                     __end_of_init_bsoc 7E4E                                 _isalpha 8DCE  
                               _isdigit 9168                                 _ivln2_h FE35  
                             _T3CONbits 003FA6                                 _mode_sw 0033  
                               us947999 461E                       __end_of_lp_filter 6900  
                               _islower 9108                                 _isspace 8B84  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 8A24                                 _isupper 9138  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 756E  
                               _tolower 8592                   __size_of_display_help 0008  
                               _utctime 009D                   __size_of_display_info 0008  
                               _strncmp 6578                                 _toupper 850E  
                  end_of_initialization 7964               __size_of_convert_adc_data 00B8  
                    _check_enter_button 8E94     __end_of_UART1_SetTxInterruptHandler 93B6  
           _UART1_SetTxInterruptHandler 938E                               i1u1087_20 780A  
   __end_of_UART2_SetRxInterruptHandler 938E             _UART2_SetRxInterruptHandler 9366  
                     __end_of_set_vterm 9732                       __end_of_vfpfcnvrt 1D82  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 0040                       __end_of_start_lcd 9928  
             __end_of_UART2_Receive_ISR 978C                          wdtdelay@dcount 00A1  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0046  
                 _INT1_InterruptHandler 00C4                               _PORTBbits 003FCB  
                     __end_of_stop_bsoc 992E                _TMR3_SetInterruptHandler 942E  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler 93DE  
                          _display_help 98FE                   _TMR5_InterruptHandler 00AC  
                          _display_info 98F6    __size_of_UART2_SetTxInterruptHandler 0028  
              __end_of_clear_hid_pflags 95E4                       __size_of_ADCC_ISR 002C  
   __end_of_ADCC_SetADIInterruptHandler 94F6             _ADCC_SetADIInterruptHandler 94CE  
                            _update_lcd 745E                         _calc_model_data 5496  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                            _static_soc 906C                         _DMA1_Initialize 8694  
                            _start_bsoc 9674                         _SPI1_Initialize 980E  
                 __end_of_get_vterm_ptr 91C6                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs 9036  
          __end_of_INTERRUPT_Initialize 883A                              _vterm_dump 6EB8  
                        __end_of___flge 6D6A                          __end_of___fleq 7D90  
  __end_of_INT0_DefaultInterruptHandler 993C   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler 993A              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize 8A7E                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 00FE                       __size_of_TMR5_ISR 005A  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 51AA             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 0095                          __end_of_memset 5496  
                        __end_of_printf 89C6                __end_of_DMA1_DMADCNT_ISR 98D6  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack 96B8  
                        __end_of_strcpy 7C00                          __end_of_strlen 81A4  
                   start_initialization 787A    __end_of_TMR5_DefaultInterruptHandler 951E  
 __size_of_TMR5_DefaultInterruptHandler 0028            _TMR5_DefaultInterruptHandler 94F6  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs 8CFC  
                 __end_of_INT1_CallBack 9608               __size_of_set_display_info 001E  
                           __end_of_pad 745E                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd 92C6                          _switch_handler 6FE6  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 0500                   __end_of___fpclassifyf 6A96  
                         _uart2RxBuffer 0600                           _uart1TxBuffer 0354  
              __end_of_DMA1_DMASCNT_ISR 98C2                           _uart2TxBuffer 0400  
                        _DMA1_DMAOR_ISR 98E4                     __end_of_hid_display 777A  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 9316  
                         _ringBufS_init 92C6                             __pdataBANK0 00C9  
                           __pdataBANK1 0100                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 0028  
            __end_of_EXT_INT_Initialize 9108                 __end_of_calc_model_data 5770  
                   __end_of_help_button 8FCA         __end_of_eaDogM_WriteStringAtPos 906C  
                   __end_of_BVSOC_TABLE FD9D                             __pbssBIGRAM 06FF  
               __end_of_DMA1_Initialize 86FE                             __pbssCOMRAM 0021  
      __end_of_INT0_SetInterruptHandler 94A6                           __pcstackBANK2 02CC  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 710E                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 9824                _UART1_RxInterruptHandler 00BB  
              _UART2_TxInterruptHandler 00BE                               __end_of_T FE2D  
                      _convert_adc_data 7E4E                               _calc_bsoc 360E  
             __size_of_ringBufS_put_dma 00AA                            _init_display 796A  
                __end_of_DMA1_DMAOR_ISR 98EE                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00AF                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize 8AD8                  _PIN_MANAGER_Initialize 8364  
              __size_of_TMR3_Initialize 0046                    __end_of_wait_lcd_set 9922  
                         __pmediumconst FCCC                               __ptext100 889E  
                             __ptext101 938E                               __ptext110 980E  
                             __ptext102 93B6                               __ptext111 9824  
                             __ptext103 924C                               __ptext120 8A7E  
                             __ptext112 9850                               __ptext104 93DE  
                             __ptext121 8694                               __ptext113 8364  
                             __ptext105 8D42                               __ptext130 8AD8  
                             __ptext122 98C2                               __ptext114 983A  
                             __ptext106 9406                               __ptext131 8ED4  
                             __ptext123 86FE                               __ptext115 87D2  
                             __ptext107 8D88                               __ptext140 9696  
                             __ptext132 9608                               __ptext124 94A6  
                             __ptext116 990E                               __ptext108 942E  
                             __ptext141 993A                               __ptext133 94F6  
                             __ptext125 94CE                               __ptext117 90D4  
                             __ptext109 97F6                               __ptext150 9548  
                             __ptext142 9930                               __ptext134 777C  
                             __ptext126 8F54                               __ptext118 9456  
                             __ptext151 9750                               __ptext143 91C8  
                             __ptext135 8F14                               __ptext127 95E4  
                             __ptext119 947E                               __ptext160 98CC  
                             __ptext152 9570                               __ptext144 8616  
                             __ptext136 962C                               __ptext128 9936  
                             __ptext161 98D8                               __ptext153 9220  
                             __ptext145 993C                               __ptext137 9938  
                             __ptext129 6FE6                               __ptext162 98E4  
                             __ptext154 9598                               __ptext146 993E  
                             __ptext138 360E                               __ptext163 0000  
                             __ptext155 976E                               __ptext147 8768  
                             __ptext139 98A4                               __ptext156 97C4  
                             __ptext148 9520                               __ptext157 9650  
                             __ptext149 91F4                               __ptext158 8BD6  
                             __ptext159 98B4                               _hid_input 83F6  
                    __end_of_StartTimer 8E94                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00AC                                _ADCC_ISR 91C8  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                             _init_bsoc 7D90                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 6740  
                           _hid_display 7678                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 87D2  
                              _T6CLKCON 003F96           __size_of_start_switch_handler 0020  
                       ?_DMA1_DMAOR_ISR 0040                                _INT0_ISR 98A4  
                              _INT1_ISR 8F54                                _LATCbits 003FBC  
                              _LATDbits 003FBD                                _LATEbits 003FBE  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 01D7                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0483  
                             _ring_buf2 0440                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack 962C                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                i2u910_48 91E0  
                              _PIR8bits 0039A8                                i2u920_48 95AC  
                              i2u912_48 879E                                i2u912_49 87B2  
                              _PIR9bits 0039A9                                i2u914_48 9534  
                              i2u916_48 955C                                i2u918_48 9584  
              __size_of_TMR5_Initialize 0046                               _set_vterm 9714  
                   __size_of_update_lcd 0110                             _help_button 8F92  
                              _TMR3_ISR 777C                             _BVSOC_TABLE FCCD  
            __end_of_UART1_Transmit_ISR 9220                                _TMR5_ISR 8AD8  
                              _TMR6_ISR 97C4                               _port_data 02BC  
                   __size_of_static_soc 0034                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack 9608                              _ADCON0bits 003EF8  
                    __end_of_check_help 6374                               _start_lcd 9922  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 9650                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc 9928  
                      _set_display_info 9732                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 788E                               copy_data1 78B0  
                             copy_data2 78D2                _INT0_SetInterruptHandler 947E  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 003D  
   __end_of_UART2_SetTxInterruptHandler 9366             _UART2_SetTxInterruptHandler 933E  
                          _uart1RxCount 003A                            _uart2RxCount 0034  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done 978C                            _send_lcd_cmd 929E  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler 993E  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                      __end_of_get_switch 9316  
                 __end_of_DMA1_DMAA_ISR 98E2                      ___fpclassifyf@F463 0099  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 6374                       ?_DMA1_DMADCNT_ISR 0040  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 9894                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0046                                __ptext10 96D8  
                              __ptext11 92C6                                __ptext20 8902  
                              __ptext12 7D90                                __ptext21 96F6  
                              __ptext13 823C                                __ptext30 745E  
                              __ptext22 6374                                __ptext14 7678  
                              __ptext31 9036                                __ptext23 95C0  
                              __ptext15 83F6                                __ptext40 8964  
                              __ptext32 8B32                                __ptext24 9916  
                              __ptext16 92EE                                __ptext41 7F06  
                              __ptext33 978C                                __ptext25 6162  
                              __ptext17 9886                                __ptext50 8592  
                              __ptext42 1244                                __ptext34 8A24  
                              __ptext26 6EB8                                __ptext18 7E4E  
                              __ptext51 9138                                __ptext43 4A84  
                              __ptext35 805C                                __ptext27 756E  
                              __ptext19 4158                                __ptext60 7232  
                              __ptext52 7B2C                                __ptext44 850E  
                              __ptext36 991C                                __ptext28 9198  
                              __ptext61 6D6A                                __ptext53 4E3E  
                              __ptext45 9108                                __ptext37 9922  
                              __ptext29 9000                                __ptext70 710E  
                              __ptext62 4604                                __ptext54 6900  
                              __ptext46 8DCE                                __ptext38 82D2  
                              __ptext71 97A8                                __ptext63 8CB6  
                              __ptext55 6A96                                __ptext47 6578  
                              __ptext39 51AA                                __ptext80 9894  
                              __ptext72 7FB2                                __ptext64 5F22  
                              __ptext56 8C6E                                __ptext48 5770  
                              __ptext81 8E12                                __ptext73 5CAE  
                              __ptext65 5A2E                                __ptext57 6C08  
                              __ptext49 0000                                __ptext90 9928  
                              __ptext82 8F92                                __ptext74 8B84  
                              __ptext66 8486                                __ptext58 7CCC  
                              __ptext91 9674                                __ptext83 9316  
                              __ptext75 9168                                __ptext67 734A  
                              __ptext59 3BDE                                __ptext92 6740  
                              __ptext84 8E54                                __ptext76 9714  
                              __ptext68 8102                                __ptext93 8CFC  
                              __ptext85 98F6                                __ptext77 9876  
                              __ptext69 81A4                                __ptext94 2E52  
                              __ptext86 98FE                                __ptext78 9732  
                              __ptext95 2628                                __ptext87 8E94  
                              __ptext79 97DE                                __ptext96 8C24  
                              __ptext88 9906                                __ptext97 89C6  
                              __ptext89 5496                                __ptext98 933E  
                              __ptext99 9366                        __size_of_isupper 0030  
                              us1016999 5782                                us1029999 4B04  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 7FB2                    __end_of_Volts_to_SOC 82D2  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 08A6                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0040  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00B5                               stoa@F1166 00F1  
                    ??_DMA1_DMASCNT_ISR 0046            __end_of_ADCC_StartConversion 9876  
                              _spi_link 0089                                _wdtdelay 8A24  
            __end_of_UART2_Transmit_ISR 924C                                _vfprintf 7F06  
              __end_of_convert_adc_data 7F06              __end_of_PWM8_LoadDutyValue 8E54  
  __end_of_TMR3_DefaultInterruptHandler 993A   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler 9938    __end_of_INT1_DefaultInterruptHandler 9938  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler 9936  
                         ??_Default_ISR 0040                             _uart1RxHead 003C  
                __size_of_get_vterm_ptr 002E                             _uart1TxHead 003F  
                           _uart2RxHead 0036                             _uart1RxTail 003B  
                        _get_raw_result 96F6                             _uart2TxHead 0039  
                           _uart1TxTail 003E                             _uart2RxTail 0035  
                           _uart2TxTail 0038                            _wait_lcd_set 991C  
                      Volts_to_SOC@slot 0032                      _EXT_INT_Initialize 90D4  
  __end_of_TMR6_DefaultInterruptHandler 8C24   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler 8BD6    __end_of_ADCC_DefaultInterruptHandler 993E  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 993C  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 9276          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 9886                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 8102                   __end_of_mode_lamp_dim 97F6  
               __end_of_adc_int_handler 9940                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd 756E  
                _uart2TxBufferRemaining 0037                      __end_of_static_soc 90A0  
                    __end_of_start_bsoc 9696                          _FVR_Initialize 990E  
                __end_of_get_raw_result 9714                        _send_lcd_cmd_dma 8B32  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 002E  
      __end_of_INT1_SetInterruptHandler 947E               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 0046                _UART1_TxInterruptHandler 00B8  
             __end_of_send_lcd_cmd_long 929E                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR 9936          __end_of_PIN_MANAGER_Initialize 83F6  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 6FE6  
               _eaDogM_WriteStringAtPos 9036                           _get_vterm_ptr 9198  
                        _check_adc_scan 9906               __size_of_UART2_Initialize 005E  
