

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Nov 27 01:03:06 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=4,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=4,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=4,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=4,class=CODE,delta=1
   151                           	psect	text126,global,reloc=4,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=4,class=CODE,delta=1
   156                           	psect	text131,global,reloc=4,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=4,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=4,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=4,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=4,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=4,class=CODE,delta=1
   168                           	psect	text143,global,reloc=4,class=CODE,delta=1
   169                           	psect	text144,global,reloc=4,class=CODE,delta=1
   170                           	psect	text145,global,reloc=4,class=CODE,delta=1
   171                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   172                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   173                           	psect	text146,global,reloc=4,class=CODE,delta=1
   174                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   175                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   176  0000                     
   177                           ; Version 2.10
   178                           ; Generated 31/07/2019 GMT
   179                           ; 
   180                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   181                           ; All rights reserved.
   182                           ; 
   183                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   184                           ; 
   185                           ; Redistribution and use in source and binary forms, with or without modification, are
   186                           ; permitted provided that the following conditions are met:
   187                           ; 
   188                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   189                           ;        conditions and the following disclaimer.
   190                           ; 
   191                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   192                           ;        of conditions and the following disclaimer in the documentation and/or other
   193                           ;        materials provided with the distribution.
   194                           ; 
   195                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   196                           ;        software without specific prior written permission.
   197                           ; 
   198                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   199                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   200                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   201                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   202                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   203                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   204                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   205                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   206                           ; 
   207                           ; 
   208                           ; Code-generator required, PIC18F57K42 Definitions
   209                           ; 
   210                           ; SFR Addresses
   211  0000                     
   212 ;;_inp_index	offset	0
   213 ;;_k	offset	1
   214 ;;_j	offset	2
   215 ;;_i	offset	3
   216 ;;_mode	offset	4
   217 ;;_channel	offset=-1 (param)
   218 ;;_s	offset=-2 (param)
   219 ;;_cmd	offset=-1 (param)
   220 ;;_cmd	offset=-1 (param)
   221 ;;_data	offset=-1 (param)
   222 ;;__this	offset=-2 (param)
   223 ;;_i	offset=-1 (param)
   224 ;;_cmd	offset=-1 (param)
   225 ;;_i	offset	0
   226 ;;_lp_speed	offset	0
   227 ;;_new	offset=-4 (param)
   228 ;;_bn	offset=-5 (param)
   229 ;;_slow	offset=-6 (param)
   230 ;;_chan	offset=-1 (param)
   231 ;;_to_what	offset=-2 (param)
   232 ;;_u	offset	0
   233 ;;_s	offset=-2 (param)
   234 ;;_index	offset=-1 (param)
   235 ;;_arg	offset	0
   236 ;;_exp	offset	4
   237 ;;_sign	offset=-1 (param)
   238 ;;_val	offset=-5 (param)
   239 ;;_estatus	offset	0
   240 ;;_flipper	offset=-1 (param)
   241 ;;_f	offset	0
   242 ;;_ap	offset	6
   243 ;;_s	offset=-3 (param)
   244 ;;_fmt	offset=-5 (param)
   245 ;;_line	offset=-1 (param)
   246 ;;_vterm	offset=-2 (param)
   247 ;;_numMilliseconds	offset=-2 (param)
   248 ;;_vterm	offset=-1 (param)
   249 ;;_r	offset=-1 (param)
   250 ;;_c	offset=-2 (param)
   251 ;;_strPtr	offset=-4 (param)
   252 ;;_strPtr	offset=-1 (param)
   253 ;;_delay	offset=-4 (param)
   254 ;;_strPtr	offset=-2 (param)
   255 ;;__this	offset=-2 (param)
   256 ;;_clearBuffer	offset=-3 (param)
   257 ;;_s	offset	0
   258 ;;_k	offset	2
   259 ;;_dest	offset=-2 (param)
   260 ;;_c	offset=-4 (param)
   261 ;;_n	offset=-6 (param)
   262 ;;_ap	offset	0
   263 ;;_fmt	offset=-3 (param)
   264 ;;_cfmt	offset	0
   265 ;;_fp	offset=-2 (param)
   266 ;;_fmt	offset=-4 (param)
   267 ;;_ap	offset=-6 (param)
   268 ;;_vfpfcnvrt$4426	offset	0
   269 ;;_vfpfcnvrt$4432	offset	2
   270 ;;_vfpfcnvrt$4425	offset	4
   271 ;;_llu	offset	6
   272 ;;_ll	offset	14
   273 ;;_f	offset	22
   274 ;;_ct	offset	26
   275 ;;_cp	offset	29
   276 ;;_c	offset	31
   277 ;;_fp	offset=-2 (param)
   278 ;;_fmt	offset=-4 (param)
   279 ;;_ap	offset=-6 (param)
   280 ;;_xtoa$4411	offset	0
   281 ;;_xtoa$4410	offset	2
   282 ;;_n	offset	4
   283 ;;_c	offset	12
   284 ;;_i	offset	14
   285 ;;_w	offset	16
   286 ;;_p	offset	18
   287 ;;_fp	offset=-2 (param)
   288 ;;_d	offset=-10 (param)
   289 ;;_x	offset=-11 (param)
   290 ;;_toupper$5071	offset	0
   291 ;;_c	offset=-2 (param)
   292 ;;_c	offset=-2 (param)
   293 ;;_c	offset=-2 (param)
   294 ;;_r	offset	0
   295 ;;_l	offset	2
   296 ;;__l	offset=-2 (param)
   297 ;;__r	offset=-4 (param)
   298 ;;_n	offset=-6 (param)
   299 ;;_nuls	offset	0
   300 ;;_l	offset	7
   301 ;;_p	offset	9
   302 ;;_cp	offset	11
   303 ;;_w	offset	13
   304 ;;_i	offset	15
   305 ;;_fp	offset=-2 (param)
   306 ;;_s	offset=-4 (param)
   307 ;;_efgtoa$4390	offset	0
   308 ;;_efgtoa$4389	offset	2
   309 ;;_efgtoa$4388	offset	4
   310 ;;_efgtoa$4384	offset	6
   311 ;;_efgtoa$4380	offset	8
   312 ;;_efgtoa$4379	offset	10
   313 ;;_u	offset	12
   314 ;;_g	offset	16
   315 ;;_l	offset	20
   316 ;;_h	offset	24
   317 ;;_ou	offset	28
   318 ;;_n	offset	32
   319 ;;_e	offset	34
   320 ;;_i	offset	36
   321 ;;_w	offset	38
   322 ;;_p	offset	40
   323 ;;_sign	offset	42
   324 ;;_d	offset	44
   325 ;;_ne	offset	46
   326 ;;_m	offset	48
   327 ;;_pp	offset	50
   328 ;;_t	offset	52
   329 ;;_mode	offset	54
   330 ;;_nmode	offset	55
   331 ;;_fp	offset=-2 (param)
   332 ;;_f	offset=-6 (param)
   333 ;;_c	offset=-7 (param)
   334 ;;_tolower$5056	offset	0
   335 ;;_c	offset=-2 (param)
   336 ;;_c	offset=-2 (param)
   337 ;;_d	offset	0
   338 ;;_s	offset	2
   339 ;;_dest	offset=-2 (param)
   340 ;;_src	offset=-4 (param)
   341 ;;_u	offset	0
   342 ;;_m	offset	4
   343 ;;_e	offset	8
   344 ;;_x	offset=-4 (param)
   345 ;;_u	offset	0
   346 ;;_e	offset	4
   347 ;;_x	offset=-4 (param)
   348 ;;_exp1	offset	0
   349 ;;_sign1	offset	1
   350 ;;_f1	offset=-4 (param)
   351 ;;_b	offset=-4 (param)
   352 ;;_a	offset=-8 (param)
   353 ;;_grs	offset	0
   354 ;;_bexp	offset	1
   355 ;;_aexp	offset	2
   356 ;;_signs	offset	3
   357 ;;_b	offset=-4 (param)
   358 ;;_a	offset=-8 (param)
   359 ;;_f1	offset=-4 (param)
   360 ;;_prod	offset	0
   361 ;;_grs	offset	4
   362 ;;_temp	offset	8
   363 ;;_bexp	offset	10
   364 ;;_aexp	offset	11
   365 ;;_sign	offset	12
   366 ;;_b	offset=-4 (param)
   367 ;;_a	offset=-8 (param)
   368 ;;_ff1	offset=-4 (param)
   369 ;;_ff2	offset=-8 (param)
   370 ;;_ff1	offset=-4 (param)
   371 ;;_ff2	offset=-8 (param)
   372 ;;_grs	offset	0
   373 ;;_rem	offset	4
   374 ;;_new_exp	offset	8
   375 ;;_aexp	offset	10
   376 ;;_bexp	offset	11
   377 ;;_sign	offset	12
   378 ;;_b	offset=-4 (param)
   379 ;;_a	offset=-8 (param)
   380 ;;_sign	offset	0
   381 ;;_counter	offset	1
   382 ;;_dividend	offset=-2 (param)
   383 ;;_divisor	offset=-4 (param)
   384 ;;_quotient	offset	0
   385 ;;_sign	offset	2
   386 ;;_counter	offset	3
   387 ;;_dividend	offset=-2 (param)
   388 ;;_divisor	offset=-4 (param)
   389 ;;_dtoa$4356	offset	0
   390 ;;_n	offset	2
   391 ;;_i	offset	10
   392 ;;_s	offset	12
   393 ;;_w	offset	14
   394 ;;_p	offset	16
   395 ;;_fp	offset=-2 (param)
   396 ;;_d	offset=-10 (param)
   397 ;;_a	offset=-2 (param)
   398 ;;_sign	offset	0
   399 ;;_counter	offset	1
   400 ;;_dividend	offset=-8 (param)
   401 ;;_divisor	offset=-16 (param)
   402 ;;_quotient	offset	0
   403 ;;_sign	offset	8
   404 ;;_counter	offset	9
   405 ;;_dividend	offset=-8 (param)
   406 ;;_divisor	offset=-16 (param)
   407 ;;_w	offset	0
   408 ;;_fp	offset=-2 (param)
   409 ;;_c	offset=-3 (param)
   410 ;;_w	offset	0
   411 ;;_i	offset	2
   412 ;;_fp	offset=-2 (param)
   413 ;;_buf	offset=-4 (param)
   414 ;;_p	offset=-6 (param)
   415 ;;_a	offset	0
   416 ;;_s	offset=-2 (param)
   417 ;;_i	offset	0
   418 ;;_c	offset	2
   419 ;;_s	offset=-2 (param)
   420 ;;_fp	offset=-4 (param)
   421 ;;_c	offset=-2 (param)
   422 ;;_fp	offset=-4 (param)
   423 ;;_c	offset=-1 (param)
   424 ;;__this	offset=-2 (param)
   425 ;;_c	offset=-3 (param)
   426 ;;_atoi$4909	offset	0
   427 ;;_atoi$4907	offset	2
   428 ;;_atoi$4908	offset	4
   429 ;;_n	offset	5
   430 ;;_neg	offset	7
   431 ;;_s	offset=-2 (param)
   432 ;;_isspace$4947	offset	0
   433 ;;_c	offset=-2 (param)
   434 ;;_c	offset=-2 (param)
   435 ;;_vterm	offset=-1 (param)
   436 ;;_new_response_info	offset=-1 (param)
   437 ;;_new_response_info	offset=-1 (param)
   438 ;;_level	offset=-2 (param)
   439 ;;_dutyValue	offset=-2 (param)
   440 ;;_timer	offset=-1 (param)
   441 ;;_timer	offset=-1 (param)
   442 ;;_count	offset=-3 (param)
   443 ;;_InterruptHandler	offset=-3 (param)
   444 ;;_InterruptHandler	offset=-3 (param)
   445 ;;_InterruptHandler	offset=-3 (param)
   446 ;;_InterruptHandler	offset=-3 (param)
   447 ;;_InterruptHandler	offset=-3 (param)
   448 ;;_InterruptHandler	offset=-3 (param)
   449 ;;_state	offset	0
   450 ;;_InterruptHandler	offset=-3 (param)
   451 ;;_InterruptHandler	offset=-3 (param)
   452 ;;_InterruptHandler	offset=-3 (param)
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_i	offset	0
   455 ;;_sw_value	offset	1
   456 ;;_timerVal	offset=-2 (param)
   457 ;;_channel	offset=-1 (param)
   458 ;;_i	offset	0
   459                           
   460                           	psect	idataBANK0
   461  017F52                     __pidataBANK0:
   462                           	opt callstack 0
   463                           
   464                           ;initializer for _R
   465  017F52  0000               	dw	0
   466  017F54  0000               	dw	0
   467  017F56  0000               	dw	0
   468  017F58  0000               	dw	0
   469  017F5A  0000               	dw	0
   470  017F5C  0000               	dw	0
   471  017F5E  0000               	dw	0
   472  017F60  0000               	dw	0
   473  017F62  0000               	dw	0
   474  017F64  0000               	dw	0
   475  017F66  0000               	dw	0
   476  017F68  0000               	dw	0
   477  017F6A  0000               	dw	0
   478  017F6C  0000               	dw	0
   479  017F6E  0000               	dw	0
   480  017F70  0000               	dw	0
   481  017F72  0F6C               	dw	3948
   482  017F74  0F99               	dw	3993
   483  017F76  00                 	db	0
   484  017F77  0000               	dw	0
   485  017F79  00                 	db	0
   486                           
   487                           ;initializer for stoa@F1166
   488  017F7A  28                 	db	40
   489  017F7B  6E                 	db	110
   490  017F7C  75                 	db	117
   491  017F7D  6C                 	db	108
   492  017F7E  6C                 	db	108
   493  017F7F  29                 	db	41
   494  017F80  00                 	db	0
   495                           
   496                           	psect	idataBANK1
   497  016DF6                     __pidataBANK1:
   498                           	opt callstack 0
   499                           
   500                           ;initializer for _V
   501  016DF6  00                 	db	0
   502  016DF7  00                 	db	0
   503  016DF8  00                 	db	0
   504  016DF9  00                 	db	0
   505  016DFA  00                 	db	0
   506  016DFB  00                 	db	0
   507  016DFC  00                 	db	0
   508  016DFD  00                 	db	0
   509  016DFE  00                 	db	0
   510  016DFF  00                 	db	0
   511  016E00  00                 	db	0
   512  016E01  00                 	db	0
   513  016E02  00                 	db	0
   514  016E03  00                 	db	0
   515  016E04  00                 	db	0
   516  016E05  00                 	db	0
   517  016E06  00                 	db	0
   518  016E07  00                 	db	0
   519  016E08  00                 	db	0
   520  016E09  00                 	db	0
   521  016E0A  00                 	db	0
   522  016E0B  00                 	db	0
   523  016E0C  00                 	db	0
   524  016E0D  00                 	db	0
   525  016E0E  00                 	db	0
   526  016E0F  00                 	db	0
   527  016E10  00                 	db	0
   528  016E11  00                 	db	0
   529  016E12  00                 	db	0
   530  016E13  00                 	db	0
   531  016E14  00                 	db	0
   532  016E15  00                 	db	0
   533  016E16  00                 	db	0
   534  016E17  00                 	db	0
   535  016E18  00                 	db	0
   536  016E19  00                 	db	0
   537  016E1A  00                 	db	0
   538  016E1B  00                 	db	0
   539  016E1C  00                 	db	0
   540  016E1D  00                 	db	0
   541  016E1E  00                 	db	0
   542  016E1F  00                 	db	0
   543  016E20  00                 	db	0
   544  016E21  00                 	db	0
   545  016E22  00                 	db	0
   546  016E23  00                 	db	0
   547  016E24  00                 	db	0
   548  016E25  00                 	db	0
   549  016E26  00                 	db	0
   550  016E27  00                 	db	0
   551  016E28  00                 	db	0
   552  016E29  00                 	db	0
   553  016E2A  00                 	db	0
   554  016E2B  00                 	db	0
   555  016E2C  00                 	db	0
   556  016E2D  00                 	db	0
   557  016E2E  00                 	db	0
   558  016E2F  00                 	db	0
   559  016E30  00                 	db	0
   560  016E31  00                 	db	0
   561  016E32  00                 	db	0
   562  016E33  00                 	db	0
   563  016E34  00                 	db	0
   564  016E35  00                 	db	0
   565  016E36  00                 	db	0
   566  016E37  00                 	db	0
   567  016E38  00                 	db	0
   568  016E39  00                 	db	0
   569  016E3A  00                 	db	0
   570  016E3B  00                 	db	0
   571  016E3C  00                 	db	0
   572  016E3D  00                 	db	0
   573  016E3E  00                 	db	0
   574  016E3F  00                 	db	0
   575  016E40  00                 	db	0
   576  016E41  00                 	db	0
   577  016E42  00                 	db	0
   578  016E43  00                 	db	0
   579  016E44  00                 	db	0
   580  016E45  00                 	db	0
   581  016E46  00                 	db	0
   582  016E47  00                 	db	0
   583  016E48  00                 	db	0
   584  016E49  00                 	db	0
   585  016E4A  00                 	db	0
   586  016E4B  00                 	db	0
   587  016E4C  00                 	db	0
   588  016E4D  00                 	db	0
   589  016E4E  00                 	db	0
   590  016E4F  00                 	db	0
   591  016E50  00                 	db	0
   592  016E51  00                 	db	0
   593  016E52  00                 	db	0
   594  016E53  00                 	db	0
   595  016E54  00                 	db	0
   596  016E55  00                 	db	0
   597  016E56  00                 	db	0
   598  016E57  00                 	db	0
   599  016E58  00                 	db	0
   600  016E59  00                 	db	0
   601  016E5A  00                 	db	0
   602  016E5B  00                 	db	0
   603  016E5C  00                 	db	0
   604  016E5D  00                 	db	0
   605  016E5E  00                 	db	0
   606  016E5F  00                 	db	0
   607  016E60  00                 	db	0
   608  016E61  00                 	db	0
   609  016E62  00                 	db	0
   610  016E63  00                 	db	0
   611  016E64  00                 	db	0
   612  016E65  00                 	db	0
   613  016E66  00                 	db	0
   614  016E67  00                 	db	0
   615  016E68  00                 	db	0
   616  016E69  00                 	db	0
   617  016E6A  00                 	db	0
   618  016E6B  00                 	db	0
   619  016E6C  00                 	db	0
   620  016E6D  00                 	db	0
   621  016E6E  00                 	db	0
   622  016E6F  00                 	db	0
   623  016E70  00                 	db	0
   624  016E71  00                 	db	0
   625  016E72  00                 	db	0
   626  016E73  00                 	db	0
   627  016E74  00                 	db	0
   628  016E75  00                 	db	0
   629  016E76  00                 	db	0
   630  016E77  0000               	dw	0
   631  016E79  0000               	dw	0
   632  016E7B  0000               	dw	0
   633  016E7D  0000               	dw	0
   634  016E7F  00                 	db	0
   635  016E80  00                 	db	0
   636  016E81  00                 	db	0
   637  016E82  00                 	db	0
   638  016E83  00                 	db	0
   639  016E84  00                 	db	0
   640  016E85  0000               	dw	0
   641  016E87  0000               	dw	0
   642  016E89  0000               	dw	0
   643  016E8B  0000               	dw	0
   644  016E8D  0000               	dw	0
   645  016E8F  0000               	dw	0
   646  016E91  00                 	db	0
   647  016E92  00                 	db	0
   648  016E93  00                 	db	0
   649  016E94  00                 	db	0
   650  016E95  00                 	db	0
   651  016E96  00                 	db	0
   652  016E97  00                 	db	0
   653  016E98  00                 	db	0
   654  016E99  00                 	db	0
   655  016E9A  00                 	db	0
   656  016E9B  0000               	dw	0
   657  016E9D  0000               	dw	0
   658  016E9F  2D                 	db	45
   659  016EA0  00                 	db	0
   660  016EA1  0000               	dw	0
   661  016EA3  0000               	dw	0
   662  016EA5  0000               	dw	0
   663  016EA7  0000               	dw	0
   664  016EA9  0000               	dw	0
   665  016EAB  0000               	dw	0
   666  016EAD  0000               	dw	0
   667  016EAF  0000               	dw	0
   668                           
   669                           	psect	idataBANK2
   670  0185C2                     __pidataBANK2:
   671                           	opt callstack 0
   672                           
   673                           ;initializer for _port_data
   674  0185C2  FF                 	db	255
   675  0185C3  00                 	db	0
   676  0185C4  FF                 	db	255
   677  0185C5  00                 	db	0
   678  0185C6  FF                 	db	255
   679  0185C7  00                 	db	0
   680  0185C8  FF                 	db	255
   681  0185C9  00                 	db	0
   682  0185CA  FF                 	db	255
   683  0185CB  00                 	db	0
   684  0185CC  FF                 	db	255
   685  0185CD  00                 	db	0
   686  0185CE  FF                 	db	255
   687  0185CF  00                 	db	0
   688  0185D0  FF                 	db	255
   689  0185D1  00                 	db	0
   690                           
   691                           	psect	mediumconst
   692  00FE5C                     __pmediumconst:
   693                           	opt callstack 0
   694  00FE5C  00                 	db	0
   695  00FE5D                     _T:
   696                           	opt callstack 0
   697  00FE5D  63                 	db	99
   698  00FE5E  6F                 	db	111
   699  00FE5F  6D                 	db	109
   700  00FE60  6D                 	db	109
   701  00FE61  61                 	db	97
   702  00FE62  6E                 	db	110
   703  00FE63  64                 	db	100
   704  00FE64  73                 	db	115
   705  00FE65  20                 	db	32
   706  00FE66  31                 	db	49
   707  00FE67  00                 	db	0
   708  00FE68  00                 	db	0
   709  00FE69  00                 	db	0
   710  00FE6A  00                 	db	0
   711  00FE6B  00                 	db	0
   712  00FE6C  00                 	db	0
   713  00FE6D  00                 	db	0
   714  00FE6E  00                 	db	0
   715  00FE6F  64                 	db	100
   716  00FE70  69                 	db	105
   717  00FE71  73                 	db	115
   718  00FE72  70                 	db	112
   719  00FE73  6C                 	db	108
   720  00FE74  61                 	db	97
   721  00FE75  79                 	db	121
   722  00FE76  73                 	db	115
   723  00FE77  20                 	db	32
   724  00FE78  31                 	db	49
   725  00FE79  00                 	db	0
   726  00FE7A  00                 	db	0
   727  00FE7B  00                 	db	0
   728  00FE7C  00                 	db	0
   729  00FE7D  00                 	db	0
   730  00FE7E  00                 	db	0
   731  00FE7F  00                 	db	0
   732  00FE80  00                 	db	0
   733  00FE81  63                 	db	99
   734  00FE82  6F                 	db	111
   735  00FE83  6D                 	db	109
   736  00FE84  6D                 	db	109
   737  00FE85  61                 	db	97
   738  00FE86  6E                 	db	110
   739  00FE87  64                 	db	100
   740  00FE88  73                 	db	115
   741  00FE89  20                 	db	32
   742  00FE8A  32                 	db	50
   743  00FE8B  00                 	db	0
   744  00FE8C  00                 	db	0
   745  00FE8D  00                 	db	0
   746  00FE8E  00                 	db	0
   747  00FE8F  00                 	db	0
   748  00FE90  00                 	db	0
   749  00FE91  00                 	db	0
   750  00FE92  00                 	db	0
   751  00FE93  64                 	db	100
   752  00FE94  69                 	db	105
   753  00FE95  73                 	db	115
   754  00FE96  70                 	db	112
   755  00FE97  6C                 	db	108
   756  00FE98  61                 	db	97
   757  00FE99  79                 	db	121
   758  00FE9A  73                 	db	115
   759  00FE9B  20                 	db	32
   760  00FE9C  32                 	db	50
   761  00FE9D  00                 	db	0
   762  00FE9E  00                 	db	0
   763  00FE9F  00                 	db	0
   764  00FEA0  00                 	db	0
   765  00FEA1  00                 	db	0
   766  00FEA2  00                 	db	0
   767  00FEA3  00                 	db	0
   768  00FEA4  00                 	db	0
   769  00FEA5  63                 	db	99
   770  00FEA6  6F                 	db	111
   771  00FEA7  6D                 	db	109
   772  00FEA8  6D                 	db	109
   773  00FEA9  61                 	db	97
   774  00FEAA  6E                 	db	110
   775  00FEAB  64                 	db	100
   776  00FEAC  73                 	db	115
   777  00FEAD  20                 	db	32
   778  00FEAE  33                 	db	51
   779  00FEAF  00                 	db	0
   780  00FEB0  00                 	db	0
   781  00FEB1  00                 	db	0
   782  00FEB2  00                 	db	0
   783  00FEB3  00                 	db	0
   784  00FEB4  00                 	db	0
   785  00FEB5  00                 	db	0
   786  00FEB6  00                 	db	0
   787  00FEB7  64                 	db	100
   788  00FEB8  69                 	db	105
   789  00FEB9  73                 	db	115
   790  00FEBA  70                 	db	112
   791  00FEBB  6C                 	db	108
   792  00FEBC  61                 	db	97
   793  00FEBD  79                 	db	121
   794  00FEBE  73                 	db	115
   795  00FEBF  20                 	db	32
   796  00FEC0  33                 	db	51
   797  00FEC1  00                 	db	0
   798  00FEC2  00                 	db	0
   799  00FEC3  00                 	db	0
   800  00FEC4  00                 	db	0
   801  00FEC5  00                 	db	0
   802  00FEC6  00                 	db	0
   803  00FEC7  00                 	db	0
   804  00FEC8  00                 	db	0
   805  00FEC9  63                 	db	99
   806  00FECA  6F                 	db	111
   807  00FECB  6D                 	db	109
   808  00FECC  6D                 	db	109
   809  00FECD  61                 	db	97
   810  00FECE  6E                 	db	110
   811  00FECF  64                 	db	100
   812  00FED0  73                 	db	115
   813  00FED1  20                 	db	32
   814  00FED2  34                 	db	52
   815  00FED3  00                 	db	0
   816  00FED4  00                 	db	0
   817  00FED5  00                 	db	0
   818  00FED6  00                 	db	0
   819  00FED7  00                 	db	0
   820  00FED8  00                 	db	0
   821  00FED9  00                 	db	0
   822  00FEDA  00                 	db	0
   823  00FEDB  64                 	db	100
   824  00FEDC  69                 	db	105
   825  00FEDD  73                 	db	115
   826  00FEDE  70                 	db	112
   827  00FEDF  6C                 	db	108
   828  00FEE0  61                 	db	97
   829  00FEE1  79                 	db	121
   830  00FEE2  73                 	db	115
   831  00FEE3  20                 	db	32
   832  00FEE4  34                 	db	52
   833  00FEE5  00                 	db	0
   834  00FEE6  00                 	db	0
   835  00FEE7  00                 	db	0
   836  00FEE8  00                 	db	0
   837  00FEE9  00                 	db	0
   838  00FEEA  00                 	db	0
   839  00FEEB  00                 	db	0
   840  00FEEC  00                 	db	0
   841  00FEED                     __end_of_T:
   842                           	opt callstack 0
   843  0000                     _IVTADL	set	14493
   844  0000                     _IVTADH	set	14494
   845  0000                     _IVTADU	set	14495
   846  0000                     _PIR4bits	set	14756
   847  0000                     _PIE8bits	set	14744
   848  0000                     _PIR8bits	set	14760
   849  0000                     _SCANPR	set	14839
   850  0000                     _DMA2PR	set	14836
   851  0000                     _DMA1PR	set	14835
   852  0000                     _MAINPR	set	14834
   853  0000                     _ISRPR	set	14833
   854  0000                     _PIE2bits	set	14738
   855  0000                     _PIR2bits	set	14754
   856  0000                     _PIE9bits	set	14745
   857  0000                     _PIR9bits	set	14761
   858  0000                     _PIE6bits	set	14742
   859  0000                     _PIE3bits	set	14739
   860  0000                     _PMD7	set	14791
   861  0000                     _PMD6	set	14790
   862  0000                     _PMD5	set	14789
   863  0000                     _PMD4	set	14788
   864  0000                     _PMD3	set	14787
   865  0000                     _PMD2	set	14786
   866  0000                     _PMD1	set	14785
   867  0000                     _PMD0	set	14784
   868  0000                     _OSCTUNE	set	14814
   869  0000                     _OSCFRQ	set	14815
   870  0000                     _OSCEN	set	14813
   871  0000                     _OSCCON3	set	14811
   872  0000                     _OSCCON1	set	14809
   873  0000                     _IPR8bits	set	14728
   874  0000                     _IPR9bits	set	14729
   875  0000                     _IPR5bits	set	14725
   876  0000                     _IPR1bits	set	14721
   877  0000                     _IPR3bits	set	14723
   878  0000                     _IPR6bits	set	14726
   879  0000                     _IPR2bits	set	14722
   880  0000                     _PIE5bits	set	14741
   881  0000                     _PIE1bits	set	14737
   882  0000                     _PIR5bits	set	14757
   883  0000                     _PIR1bits	set	14753
   884  0000                     _PLLR	set	118496
   885  0000                     _SPI1SDIPPS	set	15071
   886  0000                     _U1RXPPS	set	15077
   887  0000                     _RC6PPS	set	14870
   888  0000                     _RC5PPS	set	14869
   889  0000                     _INT1PPS	set	15041
   890  0000                     _RD1PPS	set	14873
   891  0000                     _INT0PPS	set	15040
   892  0000                     _RC3PPS	set	14867
   893  0000                     _RB6PPS	set	14862
   894  0000                     _SPI1SCKPPS	set	15070
   895  0000                     _U2RXPPS	set	15080
   896  0000                     _SLRCONF	set	14995
   897  0000                     _SLRCONE	set	14979
   898  0000                     _SLRCOND	set	14963
   899  0000                     _SLRCONC	set	14947
   900  0000                     _SLRCONB	set	14931
   901  0000                     _SLRCONA	set	14915
   902  0000                     _ODCOND	set	14962
   903  0000                     _ODCONC	set	14946
   904  0000                     _ODCONB	set	14930
   905  0000                     _ODCONA	set	14914
   906  0000                     _ODCONF	set	14994
   907  0000                     _ODCONE	set	14978
   908  0000                     _WPUC	set	14945
   909  0000                     _WPUA	set	14913
   910  0000                     _WPUB	set	14929
   911  0000                     _WPUE	set	14977
   912  0000                     _WPUF	set	14993
   913  0000                     _WPUD	set	14961
   914  0000                     _ANSELA	set	14912
   915  0000                     _ANSELF	set	14992
   916  0000                     _ANSELE	set	14976
   917  0000                     _ANSELB	set	14928
   918  0000                     _ANSELC	set	14944
   919  0000                     _ANSELD	set	14960
   920  0000                     _DMA2SSA	set	15321
   921  0000                     _DMA1SSA	set	15353
   922  0000                     _DMA2DSZ	set	15310
   923  0000                     _DMA2SSZ	set	15319
   924  0000                     _DMA2DSA	set	15312
   925  0000                     _DMA1DSZ	set	15342
   926  0000                     _DMA1SSZ	set	15351
   927  0000                     _DMA1DSA	set	15344
   928  0000                     _DMA1CON0bits	set	15356
   929  0000                     _DMA1CON1bits	set	15357
   930  0000                     _DMA2CON0	set	15324
   931  0000                     _DMA2AIRQ	set	15326
   932  0000                     _DMA2SIRQ	set	15327
   933  0000                     _DMA2CON1	set	15325
   934  0000                     _DMA1CON0	set	15356
   935  0000                     _DMA1AIRQ	set	15358
   936  0000                     _DMA1SIRQ	set	15359
   937  0000                     _DMA1CON1	set	15357
   938  0000                     _CLKRCON	set	15589
   939  0000                     _CLKRCLK	set	15590
   940  0000                     _SPI1INTFbits	set	15642
   941  0000                     _SPI1RXB	set	15632
   942  0000                     _SPI1TXB	set	15633
   943  0000                     _SPI1TCNTL	set	15634
   944  0000                     _SPI1CON0	set	15636
   945  0000                     _SPI1CLK	set	15644
   946  0000                     _SPI1BAUD	set	15641
   947  0000                     _SPI1CON2	set	15638
   948  0000                     _SPI1CON1	set	15637
   949  0000                     _U2RXB	set	15824
   950  0000                     _U2TXB	set	15826
   951  0000                     _U2ERRIE	set	15842
   952  0000                     _U2ERRIR	set	15841
   953  0000                     _U2UIR	set	15840
   954  0000                     _U2FIFO	set	15839
   955  0000                     _U2BRGH	set	15838
   956  0000                     _U2BRGL	set	15837
   957  0000                     _U2CON2	set	15836
   958  0000                     _U2CON1	set	15835
   959  0000                     _U2CON0	set	15834
   960  0000                     _U2P3L	set	15832
   961  0000                     _U2P2L	set	15830
   962  0000                     _U2P1L	set	15828
   963  0000                     _U1RXB	set	15848
   964  0000                     _U1TXB	set	15850
   965  0000                     _U1ERRIE	set	15866
   966  0000                     _U1ERRIR	set	15865
   967  0000                     _U1UIR	set	15864
   968  0000                     _U1FIFO	set	15863
   969  0000                     _U1BRGH	set	15862
   970  0000                     _U1BRGL	set	15861
   971  0000                     _U1CON2	set	15860
   972  0000                     _U1CON1	set	15859
   973  0000                     _U1CON0	set	15858
   974  0000                     _U1P3H	set	15857
   975  0000                     _U1P3L	set	15856
   976  0000                     _U1P2H	set	15855
   977  0000                     _U1P2L	set	15854
   978  0000                     _U1P1H	set	15853
   979  0000                     _U1P1L	set	15852
   980  0000                     _FVRCON	set	16065
   981  0000                     _ADFLTRL	set	16102
   982  0000                     _ADFLTRH	set	16103
   983  0000                     _ADCON0bits	set	16120
   984  0000                     _ADCON0	set	16120
   985  0000                     _ADCLK	set	16127
   986  0000                     _ADACT	set	16126
   987  0000                     _ADREF	set	16125
   988  0000                     _ADSTAT	set	16124
   989  0000                     _ADCON3	set	16123
   990  0000                     _ADCON2	set	16122
   991  0000                     _ADCON1	set	16121
   992  0000                     _ADPREH	set	16119
   993  0000                     _ADPREL	set	16118
   994  0000                     _ADCAP	set	16117
   995  0000                     _ADACQH	set	16116
   996  0000                     _ADACQL	set	16115
   997  0000                     _ADPCH	set	16113
   998  0000                     _ADRPT	set	16108
   999  0000                     _ADACCU	set	16106
  1000  0000                     _ADSTPTH	set	16101
  1001  0000                     _ADSTPTL	set	16100
  1002  0000                     _ADUTHH	set	16097
  1003  0000                     _ADUTHL	set	16096
  1004  0000                     _ADLTHH	set	16095
  1005  0000                     _ADLTHL	set	16094
  1006  0000                     _CCPTMRS1bits	set	16223
  1007  0000                     _PORTFbits	set	16335
  1008  0000                     _LATCbits	set	16316
  1009  0000                     _LATDbits	set	16317
  1010  0000                     _PORTBbits	set	16331
  1011  0000                     _T2CON	set	16300
  1012  0000                     _T2TMR	set	16298
  1013  0000                     _T2PR	set	16299
  1014  0000                     _T2RST	set	16303
  1015  0000                     _T2HLT	set	16301
  1016  0000                     _T2CLKCON	set	16302
  1017  0000                     _PWM8DCL	set	16224
  1018  0000                     _PWM8DCH	set	16225
  1019  0000                     _PWM8CON	set	16226
  1020  0000                     _LATEbits	set	16318
  1021  0000                     _T5CONbits	set	16282
  1022  0000                     _T5CON	set	16282
  1023  0000                     _TMR5L	set	16280
  1024  0000                     _TMR5H	set	16281
  1025  0000                     _T5CLK	set	16285
  1026  0000                     _T5GATE	set	16284
  1027  0000                     _T5GCON	set	16283
  1028  0000                     _T6CON	set	16276
  1029  0000                     _T6TMR	set	16274
  1030  0000                     _T6PR	set	16275
  1031  0000                     _T6RST	set	16279
  1032  0000                     _T6HLT	set	16277
  1033  0000                     _T6CLKCON	set	16278
  1034  0000                     _TRISD	set	16325
  1035  0000                     _TRISC	set	16324
  1036  0000                     _TRISB	set	16323
  1037  0000                     _TRISA	set	16322
  1038  0000                     _TRISF	set	16327
  1039  0000                     _TRISE	set	16326
  1040  0000                     _LATC	set	16316
  1041  0000                     _LATB	set	16315
  1042  0000                     _LATF	set	16319
  1043  0000                     _LATA	set	16314
  1044  0000                     _LATD	set	16317
  1045  0000                     _LATE	set	16318
  1046  0000                     _IVTLOCKbits	set	16340
  1047  0000                     _IVTLOCK	set	16340
  1048  0000                     _INTCON0bits	set	16338
  1049  0000                     _GIE	set	130711
  1050  00FEED                     
  1051                           ; BSR set to: 57
  1052  00FEED  20                 	db	32
  1053  00FEEE  4D                 	db	77	;'M'
  1054  00FEEF  65                 	db	101	;'e'
  1055  00FEF0  73                 	db	115	;'s'
  1056  00FEF1  67                 	db	103	;'g'
  1057  00FEF2  20                 	db	32
  1058  00FEF3  25                 	db	37
  1059  00FEF4  64                 	db	100	;'d'
  1060  00FEF5  20                 	db	32
  1061  00FEF6  53                 	db	83	;'S'
  1062  00FEF7  74                 	db	116	;'t'
  1063  00FEF8  61                 	db	97	;'a'
  1064  00FEF9  63                 	db	99	;'c'
  1065  00FEFA  6B                 	db	107	;'k'
  1066  00FEFB  20                 	db	32
  1067  00FEFC  25                 	db	37
  1068  00FEFD  64                 	db	100	;'d'
  1069  00FEFE  20                 	db	32
  1070  00FEFF  20                 	db	32
  1071  00FF00  20                 	db	32
  1072  00FF01  20                 	db	32
  1073  00FF02  20                 	db	32
  1074  00FF03  20                 	db	32
  1075  00FF04  00                 	db	0
  1076  00FF05                     STR_27:
  1077                           
  1078                           ; BSR set to: 57
  1079  00FF05  20                 	db	32
  1080  00FF06  20                 	db	32
  1081  00FF07  20                 	db	32
  1082  00FF08  20                 	db	32
  1083  00FF09  20                 	db	32
  1084  00FF0A  20                 	db	32
  1085  00FF0B  20                 	db	32
  1086  00FF0C  20                 	db	32
  1087  00FF0D  20                 	db	32
  1088  00FF0E  20                 	db	32
  1089  00FF0F  20                 	db	32
  1090  00FF10  20                 	db	32
  1091  00FF11  20                 	db	32
  1092  00FF12  20                 	db	32
  1093  00FF13  20                 	db	32
  1094  00FF14  20                 	db	32
  1095  00FF15  20                 	db	32
  1096  00FF16  20                 	db	32
  1097  00FF17  00                 	db	0
  1098  00FF18                     STR_17:
  1099                           
  1100                           ; BSR set to: 57
  1101  00FF18  48                 	db	72	;'H'
  1102  00FF19  45                 	db	69	;'E'
  1103  00FF1A  4C                 	db	76	;'L'
  1104  00FF1B  50                 	db	80	;'P'
  1105  00FF1C  20                 	db	32
  1106  00FF1D  25                 	db	37
  1107  00FF1E  73                 	db	115	;'s'
  1108  00FF1F  20                 	db	32
  1109  00FF20  20                 	db	32
  1110  00FF21  20                 	db	32
  1111  00FF22  20                 	db	32
  1112  00FF23  20                 	db	32
  1113  00FF24  20                 	db	32
  1114  00FF25  20                 	db	32
  1115  00FF26  20                 	db	32
  1116  00FF27  20                 	db	32
  1117  00FF28  20                 	db	32
  1118  00FF29  20                 	db	32
  1119  00FF2A  00                 	db	0
  1120  00FF2B                     
  1121                           ; BSR set to: 57
  1122  00FF2B  44                 	db	68	;'D'
  1123  00FF2C  49                 	db	73	;'I'
  1124  00FF2D  53                 	db	83	;'S'
  1125  00FF2E  50                 	db	80	;'P'
  1126  00FF2F  4C                 	db	76	;'L'
  1127  00FF30  41                 	db	65	;'A'
  1128  00FF31  59                 	db	89	;'Y'
  1129  00FF32  20                 	db	32
  1130  00FF33  25                 	db	37
  1131  00FF34  73                 	db	115	;'s'
  1132  00FF35  20                 	db	32
  1133  00FF36  20                 	db	32
  1134  00FF37  20                 	db	32
  1135  00FF38  20                 	db	32
  1136  00FF39  20                 	db	32
  1137  00FF3A  20                 	db	32
  1138  00FF3B  20                 	db	32
  1139  00FF3C  20                 	db	32
  1140  00FF3D  00                 	db	0
  1141  00FF3E                     STR_8:
  1142                           
  1143                           ; BSR set to: 57
  1144  00FF3E  20                 	db	32
  1145  00FF3F  56                 	db	86	;'V'
  1146  00FF40  54                 	db	84	;'T'
  1147  00FF41  45                 	db	69	;'E'
  1148  00FF42  52                 	db	82	;'R'
  1149  00FF43  4D                 	db	77	;'M'
  1150  00FF44  20                 	db	32
  1151  00FF45  23                 	db	35
  1152  00FF46  32                 	db	50	;'2'
  1153  00FF47  20                 	db	32
  1154  00FF48  20                 	db	32
  1155  00FF49  20                 	db	32
  1156  00FF4A  20                 	db	32
  1157  00FF4B  20                 	db	32
  1158  00FF4C  20                 	db	32
  1159  00FF4D  20                 	db	32
  1160  00FF4E  00                 	db	0
  1161  00FF4F                     STR_4:
  1162                           
  1163                           ; BSR set to: 57
  1164  00FF4F  20                 	db	32
  1165  00FF50  4E                 	db	78	;'N'
  1166  00FF51  53                 	db	83	;'S'
  1167  00FF52  41                 	db	65	;'A'
  1168  00FF53  53                 	db	83	;'S'
  1169  00FF54  50                 	db	80	;'P'
  1170  00FF55  4F                 	db	79	;'O'
  1171  00FF56  4F                 	db	79	;'O'
  1172  00FF57  4B                 	db	75	;'K'
  1173  00FF58  20                 	db	32
  1174  00FF59  20                 	db	32
  1175  00FF5A  20                 	db	32
  1176  00FF5B  20                 	db	32
  1177  00FF5C  20                 	db	32
  1178  00FF5D  20                 	db	32
  1179  00FF5E  20                 	db	32
  1180  00FF5F  00                 	db	0
  1181  00FF60                     STR_1:
  1182                           
  1183                           ; BSR set to: 57
  1184  00FF60  20                 	db	32
  1185  00FF61  4D                 	db	77	;'M'
  1186  00FF62  42                 	db	66	;'B'
  1187  00FF63  4D                 	db	77	;'M'
  1188  00FF64  43                 	db	67	;'C'
  1189  00FF65  20                 	db	32
  1190  00FF66  53                 	db	83	;'S'
  1191  00FF67  4F                 	db	79	;'O'
  1192  00FF68  4C                 	db	76	;'L'
  1193  00FF69  41                 	db	65	;'A'
  1194  00FF6A  52                 	db	82	;'R'
  1195  00FF6B  4D                 	db	77	;'M'
  1196  00FF6C  4F                 	db	79	;'O'
  1197  00FF6D  4E                 	db	78	;'N'
  1198  00FF6E  20                 	db	32
  1199  00FF6F  20                 	db	32
  1200  00FF70  00                 	db	0
  1201  00FF71                     STR_5:
  1202                           
  1203                           ; BSR set to: 57
  1204  00FF71  20                 	db	32
  1205  00FF72  53                 	db	83	;'S'
  1206  00FF73  45                 	db	69	;'E'
  1207  00FF74  51                 	db	81	;'Q'
  1208  00FF75  55                 	db	85	;'U'
  1209  00FF76  45                 	db	69	;'E'
  1210  00FF77  4E                 	db	78	;'N'
  1211  00FF78  43                 	db	67	;'C'
  1212  00FF79  45                 	db	69	;'E'
  1213  00FF7A  20                 	db	32
  1214  00FF7B  54                 	db	84	;'T'
  1215  00FF7C  45                 	db	69	;'E'
  1216  00FF7D  53                 	db	83	;'S'
  1217  00FF7E  54                 	db	84	;'T'
  1218  00FF7F  20                 	db	32
  1219  00FF80  20                 	db	32
  1220  00FF81  00                 	db	0
  1221  00FF82                     STR_11:
  1222                           
  1223                           ; BSR set to: 57
  1224  00FF82  25                 	db	37
  1225  00FF83  64                 	db	100	;'d'
  1226  00FF84  20                 	db	32
  1227  00FF85  25                 	db	37
  1228  00FF86  32                 	db	50	;'2'
  1229  00FF87  2E                 	db	46
  1230  00FF88  34                 	db	52	;'4'
  1231  00FF89  66                 	db	102	;'f'
  1232  00FF8A  2C                 	db	44
  1233  00FF8B  20                 	db	32
  1234  00FF8C  25                 	db	37
  1235  00FF8D  64                 	db	100	;'d'
  1236  00FF8E  20                 	db	32
  1237  00FF8F  20                 	db	32
  1238  00FF90  20                 	db	32
  1239  00FF91  23                 	db	35
  1240  00FF92  00                 	db	0
  1241  00FF93                     STR_9:
  1242                           
  1243                           ; BSR set to: 57
  1244  00FF93  25                 	db	37
  1245  00FF94  64                 	db	100	;'d'
  1246  00FF95  20                 	db	32
  1247  00FF96  25                 	db	37
  1248  00FF97  32                 	db	50	;'2'
  1249  00FF98  2E                 	db	46
  1250  00FF99  34                 	db	52	;'4'
  1251  00FF9A  66                 	db	102	;'f'
  1252  00FF9B  20                 	db	32
  1253  00FF9C  20                 	db	32
  1254  00FF9D  20                 	db	32
  1255  00FF9E  25                 	db	37
  1256  00FF9F  64                 	db	100	;'d'
  1257  00FFA0  20                 	db	32
  1258  00FFA1  20                 	db	32
  1259  00FFA2  00                 	db	0
  1260  00FFA3                     STR_21:
  1261                           
  1262                           ; BSR set to: 57
  1263  00FFA3  76                 	db	118	;'v'
  1264  00FFA4  74                 	db	116	;'t'
  1265  00FFA5  65                 	db	101	;'e'
  1266  00FFA6  72                 	db	114	;'r'
  1267  00FFA7  6D                 	db	109	;'m'
  1268  00FFA8  20                 	db	32
  1269  00FFA9  25                 	db	37
  1270  00FFAA  78                 	db	120	;'x'
  1271  00FFAB  3A                 	db	58	;':'
  1272  00FFAC  25                 	db	37
  1273  00FFAD  78                 	db	120	;'x'
  1274  00FFAE  20                 	db	32
  1275  00FFAF  20                 	db	32
  1276  00FFB0  20                 	db	32
  1277  00FFB1  00                 	db	0
  1278  00FFB2                     STR_2:
  1279                           
  1280                           ; BSR set to: 57
  1281  00FFB2  20                 	db	32
  1282  00FFB3  56                 	db	86	;'V'
  1283  00FFB4  65                 	db	101	;'e'
  1284  00FFB5  72                 	db	114	;'r'
  1285  00FFB6  73                 	db	115	;'s'
  1286  00FFB7  69                 	db	105	;'i'
  1287  00FFB8  6F                 	db	111	;'o'
  1288  00FFB9  6E                 	db	110	;'n'
  1289  00FFBA  20                 	db	32
  1290  00FFBB  25                 	db	37
  1291  00FFBC  73                 	db	115	;'s'
  1292  00FFBD  20                 	db	32
  1293  00FFBE  20                 	db	32
  1294  00FFBF  20                 	db	32
  1295  00FFC0  00                 	db	0
  1296  00FFC1                     STR_15:
  1297                           
  1298                           ; BSR set to: 57
  1299  00FFC1  4E                 	db	78	;'N'
  1300  00FFC2  6F                 	db	111	;'o'
  1301  00FFC3  76                 	db	118	;'v'
  1302  00FFC4  20                 	db	32
  1303  00FFC5  32                 	db	50	;'2'
  1304  00FFC6  36                 	db	54	;'6'
  1305  00FFC7  20                 	db	32
  1306  00FFC8  32                 	db	50	;'2'
  1307  00FFC9  30                 	db	48	;'0'
  1308  00FFCA  31                 	db	49	;'1'
  1309  00FFCB  39                 	db	57	;'9'
  1310  00FFCC  00                 	db	0
  1311  00FFCD                     STR_19:
  1312                           
  1313                           ; BSR set to: 57
  1314  00FFCD  25                 	db	37
  1315  00FFCE  73                 	db	115	;'s'
  1316  00FFCF  20                 	db	32
  1317  00FFD0  20                 	db	32
  1318  00FFD1  20                 	db	32
  1319  00FFD2  20                 	db	32
  1320  00FFD3  20                 	db	32
  1321  00FFD4  20                 	db	32
  1322  00FFD5  20                 	db	32
  1323  00FFD6  00                 	db	0
  1324  00FFD7                     STR_16:
  1325                           
  1326                           ; BSR set to: 57
  1327  00FFD7  31                 	db	49	;'1'
  1328  00FFD8  31                 	db	49	;'1'
  1329  00FFD9  3A                 	db	58	;':'
  1330  00FFDA  33                 	db	51	;'3'
  1331  00FFDB  30                 	db	48	;'0'
  1332  00FFDC  3A                 	db	58	;':'
  1333  00FFDD  33                 	db	51	;'3'
  1334  00FFDE  38                 	db	56	;'8'
  1335  00FFDF  00                 	db	0
  1336  00FFE0                     STR_3:
  1337                           
  1338                           ; BSR set to: 57
  1339  00FFE0  30                 	db	48	;'0'
  1340  00FFE1  2E                 	db	46
  1341  00FFE2  39                 	db	57	;'9'
  1342  00FFE3  37                 	db	55	;'7'
  1343  00FFE4  00                 	db	0
  1344  00FFE5                     STR_34:
  1345                           
  1346                           ; BSR set to: 57
  1347  00FFE5  49                 	db	73	;'I'
  1348  00FFE6  4E                 	db	78	;'N'
  1349  00FFE7  46                 	db	70	;'F'
  1350  00FFE8  00                 	db	0
  1351  00FFE9                     STR_38:
  1352                           
  1353                           ; BSR set to: 57
  1354  00FFE9  4E                 	db	78	;'N'
  1355  00FFEA  41                 	db	65	;'A'
  1356  00FFEB  4E                 	db	78	;'N'
  1357  00FFEC  00                 	db	0
  1358  00FFED                     STR_35:
  1359                           
  1360                           ; BSR set to: 57
  1361  00FFED  69                 	db	105	;'i'
  1362  00FFEE  6E                 	db	110	;'n'
  1363  00FFEF  66                 	db	102	;'f'
  1364  00FFF0  00                 	db	0
  1365  00FFF1                     STR_39:
  1366                           
  1367                           ; BSR set to: 57
  1368  00FFF1  6E                 	db	110	;'n'
  1369  00FFF2  61                 	db	97	;'a'
  1370  00FFF3  6E                 	db	110	;'n'
  1371  00FFF4  00                 	db	0
  1372  00FFF5                     STR_42:
  1373                           
  1374                           ; BSR set to: 57
  1375  00FFF5  6C                 	db	108	;'l'
  1376  00FFF6  66                 	db	102	;'f'
  1377  00FFF7  00                 	db	0
  1378  00FFF8                     STR_13:
  1379                           
  1380                           ; BSR set to: 57
  1381  00FFF8  25                 	db	37
  1382  00FFF9  63                 	db	99	;'c'
  1383  00FFFA  00                 	db	0
  1384  00FFFB                     STR_12:
  1385                           
  1386                           ; BSR set to: 57
  1387  00FFFB  25                 	db	37
  1388  00FFFC  73                 	db	115	;'s'
  1389  00FFFD  00                 	db	0
  1390  0000                     
  1391                           ; #config settings
  1392  00FFFE  00                 	db	0	; dummy byte at the end
  1393  0000                     
  1394                           	psect	cinit
  1395  016A80                     __pcinit:
  1396                           	opt callstack 0
  1397  016A80                     start_initialization:
  1398                           	opt callstack 0
  1399  016A80                     __initialization:
  1400                           	opt callstack 0
  1401                           
  1402                           ; Initialize objects allocated to BANK2 (16 bytes)
  1403                           ; load TBLPTR registers with __pidataBANK2
  1404  016A80  0EC2               	movlw	low __pidataBANK2
  1405  016A82  6EF6               	movwf	tblptrl,c
  1406  016A84  0E85               	movlw	high __pidataBANK2
  1407  016A86  6EF7               	movwf	tblptrh,c
  1408  016A88  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1409  016A8A  6EF8               	movwf	tblptru,c
  1410  016A8C  EE00  F290         	lfsr	0,__pdataBANK2
  1411  016A90  EE20 F010          	lfsr	2,16
  1412  016A94                     copy_data0:
  1413  016A94  0009               	tblrd		*+
  1414  016A96  006F FFD7 FFEE     	movff	tablat,postinc0
  1415  016A9C  50DD               	movf	postdec2,w,c
  1416  016A9E  50D9               	movf	fsr2l,w,c
  1417  016AA0  E1F9               	bnz	copy_data0
  1418                           
  1419                           ; Initialize objects allocated to BANK1 (187 bytes)
  1420                           ; load TBLPTR registers with __pidataBANK1
  1421  016AA2  0EF6               	movlw	low __pidataBANK1
  1422  016AA4  6EF6               	movwf	tblptrl,c
  1423  016AA6  0E6D               	movlw	high __pidataBANK1
  1424  016AA8  6EF7               	movwf	tblptrh,c
  1425  016AAA  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1426  016AAC  6EF8               	movwf	tblptru,c
  1427  016AAE  EE00  F100         	lfsr	0,__pdataBANK1
  1428  016AB2  EE20 F0BB          	lfsr	2,187
  1429  016AB6                     copy_data1:
  1430  016AB6  0009               	tblrd		*+
  1431  016AB8  006F FFD7 FFEE     	movff	tablat,postinc0
  1432  016ABE  50DD               	movf	postdec2,w,c
  1433  016AC0  50D9               	movf	fsr2l,w,c
  1434  016AC2  E1F9               	bnz	copy_data1
  1435                           
  1436                           ; Initialize objects allocated to BANK0 (47 bytes)
  1437                           ; load TBLPTR registers with __pidataBANK0
  1438  016AC4  0E52               	movlw	low __pidataBANK0
  1439  016AC6  6EF6               	movwf	tblptrl,c
  1440  016AC8  0E7F               	movlw	high __pidataBANK0
  1441  016ACA  6EF7               	movwf	tblptrh,c
  1442  016ACC  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1443  016ACE  6EF8               	movwf	tblptru,c
  1444  016AD0  EE00  F0C7         	lfsr	0,__pdataBANK0
  1445  016AD4  EE20 F02F          	lfsr	2,47
  1446  016AD8                     copy_data2:
  1447  016AD8  0009               	tblrd		*+
  1448  016ADA  006F FFD7 FFEE     	movff	tablat,postinc0
  1449  016AE0  50DD               	movf	postdec2,w,c
  1450  016AE2  50D9               	movf	fsr2l,w,c
  1451  016AE4  E1F9               	bnz	copy_data2
  1452                           
  1453                           ; Clear objects allocated to BANK7 (255 bytes)
  1454  016AE6  EE01  F300         	lfsr	0,__pbssBANK7
  1455  016AEA  EE20 F0FF          	lfsr	2,255
  1456  016AEE                     clear_0:
  1457  016AEE  6AEE               	clrf	postinc0,c
  1458  016AF0  50DD               	movf	postdec2,w,c
  1459  016AF2  50D9               	movf	fsr2l,w,c
  1460  016AF4  E1FC               	bnz	clear_0
  1461  016AF6  50DA               	movf	fsr2h,w,c
  1462  016AF8  E1FA               	bnz	clear_0
  1463                           
  1464                           ; Clear objects allocated to BANK6 (255 bytes)
  1465  016AFA  EE01  F200         	lfsr	0,__pbssBANK6
  1466  016AFE  EE20 F0FF          	lfsr	2,255
  1467  016B02                     clear_1:
  1468  016B02  6AEE               	clrf	postinc0,c
  1469  016B04  50DD               	movf	postdec2,w,c
  1470  016B06  50D9               	movf	fsr2l,w,c
  1471  016B08  E1FC               	bnz	clear_1
  1472  016B0A  50DA               	movf	fsr2h,w,c
  1473  016B0C  E1FA               	bnz	clear_1
  1474                           
  1475                           ; Clear objects allocated to BANK5 (218 bytes)
  1476  016B0E  EE01  F100         	lfsr	0,__pbssBANK5
  1477  016B12  0EDA               	movlw	218
  1478  016B14                     clear_2:
  1479  016B14  6AEE               	clrf	postinc0,c
  1480  016B16  06E8               	decf	wreg,f,c
  1481  016B18  E1FD               	bnz	clear_2
  1482                           
  1483                           ; Clear objects allocated to BANK4 (134 bytes)
  1484  016B1A  EE01  F000         	lfsr	0,__pbssBANK4
  1485  016B1E  0E86               	movlw	134
  1486  016B20                     clear_3:
  1487  016B20  6AEE               	clrf	postinc0,c
  1488  016B22  06E8               	decf	wreg,f,c
  1489  016B24  E1FD               	bnz	clear_3
  1490                           
  1491                           ; Clear objects allocated to BANK3 (236 bytes)
  1492  016B26  EE00  F300         	lfsr	0,__pbssBANK3
  1493  016B2A  0EEC               	movlw	236
  1494  016B2C                     clear_4:
  1495  016B2C  6AEE               	clrf	postinc0,c
  1496  016B2E  06E8               	decf	wreg,f,c
  1497  016B30  E1FD               	bnz	clear_4
  1498                           
  1499                           ; Clear objects allocated to BANK2 (144 bytes)
  1500  016B32  EE00  F200         	lfsr	0,__pbssBANK2
  1501  016B36  0E90               	movlw	144
  1502  016B38                     clear_5:
  1503  016B38  6AEE               	clrf	postinc0,c
  1504  016B3A  06E8               	decf	wreg,f,c
  1505  016B3C  E1FD               	bnz	clear_5
  1506                           
  1507                           ; Clear objects allocated to BANK1 (8 bytes)
  1508  016B3E  EE00  F1BB         	lfsr	0,__pbssBANK1
  1509  016B42  0E08               	movlw	8
  1510  016B44                     clear_6:
  1511  016B44  6AEE               	clrf	postinc0,c
  1512  016B46  06E8               	decf	wreg,f,c
  1513  016B48  E1FD               	bnz	clear_6
  1514                           
  1515                           ; Clear objects allocated to BANK0 (103 bytes)
  1516  016B4A  EE00  F060         	lfsr	0,__pbssBANK0
  1517  016B4E  0E67               	movlw	103
  1518  016B50                     clear_7:
  1519  016B50  6AEE               	clrf	postinc0,c
  1520  016B52  06E8               	decf	wreg,f,c
  1521  016B54  E1FD               	bnz	clear_7
  1522                           
  1523                           ; Clear objects allocated to COMRAM (49 bytes)
  1524  016B56  EE00  F001         	lfsr	0,__pbssCOMRAM
  1525  016B5A  0E31               	movlw	49
  1526  016B5C                     clear_8:
  1527  016B5C  6AEE               	clrf	postinc0,c
  1528  016B5E  06E8               	decf	wreg,f,c
  1529  016B60  E1FD               	bnz	clear_8
  1530                           
  1531                           ;
  1532                           ; Setup IVTBASE
  1533                           ;
  1534  016B62  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1535  016B64  6ED5               	movwf	213,c
  1536  016B66  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1537  016B68  6ED6               	movwf	214,c
  1538  016B6A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1539  016B6C  6ED7               	movwf	215,c
  1540  016B6E                     end_of_initialization:
  1541                           	opt callstack 0
  1542  016B6E                     __end_of__initialization:
  1543                           	opt callstack 0
  1544  016B6E  0100               	movlb	0
  1545  016B70  EF71  F099         	goto	_main	;jump to C main() function
  1546                           
  1547                           	psect	bssCOMRAM
  1548  000001                     __pbssCOMRAM:
  1549                           	opt callstack 0
  1550  000001                     _ADCC_ADTI_InterruptHandler:
  1551                           	opt callstack 0
  1552  000001                     	ds	3
  1553  000004                     _ADCC_ADI_InterruptHandler:
  1554                           	opt callstack 0
  1555  000004                     	ds	3
  1556  000007                     _UART1_TxInterruptHandler:
  1557                           	opt callstack 0
  1558  000007                     	ds	3
  1559  00000A                     _UART1_RxInterruptHandler:
  1560                           	opt callstack 0
  1561  00000A                     	ds	3
  1562  00000D                     _UART2_TxInterruptHandler:
  1563                           	opt callstack 0
  1564  00000D                     	ds	3
  1565  000010                     _UART2_RxInterruptHandler:
  1566                           	opt callstack 0
  1567  000010                     	ds	3
  1568  000013                     _INT1_InterruptHandler:
  1569                           	opt callstack 0
  1570  000013                     	ds	3
  1571  000016                     _INT0_InterruptHandler:
  1572                           	opt callstack 0
  1573  000016                     	ds	3
  1574  000019                     _nout:
  1575                           	opt callstack 0
  1576  000019                     	ds	2
  1577  00001B                     _width:
  1578                           	opt callstack 0
  1579  00001B                     	ds	2
  1580  00001D                     _prec:
  1581                           	opt callstack 0
  1582  00001D                     	ds	2
  1583  00001F                     _flags:
  1584                           	opt callstack 0
  1585  00001F                     	ds	2
  1586  000021                     TMR5_ISR@CountCallBack:
  1587                           	opt callstack 0
  1588  000021                     	ds	2
  1589  000023                     _timer5ReloadVal:
  1590                           	opt callstack 0
  1591  000023                     	ds	2
  1592  000025                     _mode_sw:
  1593                           	opt callstack 0
  1594  000025                     	ds	1
  1595  000026                     _uart2RxCount:
  1596                           	opt callstack 0
  1597  000026                     	ds	1
  1598  000027                     _uart2RxTail:
  1599                           	opt callstack 0
  1600  000027                     	ds	1
  1601  000028                     _uart2RxHead:
  1602                           	opt callstack 0
  1603  000028                     	ds	1
  1604  000029                     _uart2TxBufferRemaining:
  1605                           	opt callstack 0
  1606  000029                     	ds	1
  1607  00002A                     _uart2TxTail:
  1608                           	opt callstack 0
  1609  00002A                     	ds	1
  1610  00002B                     _uart2TxHead:
  1611                           	opt callstack 0
  1612  00002B                     	ds	1
  1613  00002C                     _uart1RxCount:
  1614                           	opt callstack 0
  1615  00002C                     	ds	1
  1616  00002D                     _uart1RxTail:
  1617                           	opt callstack 0
  1618  00002D                     	ds	1
  1619  00002E                     _uart1RxHead:
  1620                           	opt callstack 0
  1621  00002E                     	ds	1
  1622  00002F                     _uart1TxBufferRemaining:
  1623                           	opt callstack 0
  1624  00002F                     	ds	1
  1625  000030                     _uart1TxTail:
  1626                           	opt callstack 0
  1627  000030                     	ds	1
  1628  000031                     _uart1TxHead:
  1629                           	opt callstack 0
  1630  000031                     	ds	1
  1631                           
  1632                           	psect	bssBANK0
  1633  000060                     __pbssBANK0:
  1634                           	opt callstack 0
  1635  000060                     _S:
  1636                           	opt callstack 0
  1637  000060                     	ds	41
  1638  000089                     _tickCount:
  1639                           	opt callstack 0
  1640  000089                     	ds	24
  1641  0000A1                     _spi_link:
  1642                           	opt callstack 0
  1643  0000A1                     	ds	12
  1644  0000AD                     floorf@F524:
  1645                           	opt callstack 0
  1646  0000AD                     	ds	4
  1647  0000B1                     ___fpclassifyf@F463:
  1648                           	opt callstack 0
  1649  0000B1                     	ds	4
  1650  0000B5                     _utctime:
  1651                           	opt callstack 0
  1652  0000B5                     	ds	4
  1653  0000B9                     wdtdelay@dcount:
  1654                           	opt callstack 0
  1655  0000B9                     	ds	4
  1656  0000BD                     _P:
  1657                           	opt callstack 0
  1658  0000BD                     	ds	4
  1659  0000C1                     _TMR5_InterruptHandler:
  1660                           	opt callstack 0
  1661  0000C1                     	ds	3
  1662  0000C4                     _TMR6_InterruptHandler:
  1663                           	opt callstack 0
  1664  0000C4                     	ds	3
  1665                           
  1666                           	psect	dataBANK0
  1667  0000C7                     __pdataBANK0:
  1668                           	opt callstack 0
  1669  0000C7                     _R:
  1670                           	opt callstack 0
  1671  0000C7                     	ds	40
  1672  0000EF                     stoa@F1166:
  1673                           	opt callstack 0
  1674  0000EF                     	ds	7
  1675                           
  1676                           	psect	bssBANK1
  1677  0001BB                     __pbssBANK1:
  1678                           	opt callstack 0
  1679  0001BB                     _seed:
  1680                           	opt callstack 0
  1681  0001BB                     	ds	8
  1682                           
  1683                           	psect	dataBANK1
  1684  000100                     __pdataBANK1:
  1685                           	opt callstack 0
  1686  000100                     _V:
  1687                           	opt callstack 0
  1688  000100                     	ds	187
  1689                           
  1690                           	psect	bssBANK2
  1691  000200                     __pbssBANK2:
  1692                           	opt callstack 0
  1693  000200                     lp_filter@smooth:
  1694                           	opt callstack 0
  1695  000200                     	ds	64
  1696  000240                     _dbuf:
  1697                           	opt callstack 0
  1698  000240                     	ds	80
  1699                           
  1700                           	psect	dataBANK2
  1701  000290                     __pdataBANK2:
  1702                           	opt callstack 0
  1703  000290                     _port_data:
  1704                           	opt callstack 0
  1705  000290                     	ds	16
  1706                           
  1707                           	psect	bssBANK3
  1708  000300                     __pbssBANK3:
  1709                           	opt callstack 0
  1710  000300                     _C:
  1711                           	opt callstack 0
  1712  000300                     	ds	108
  1713  00036C                     _uart2TxBuffer:
  1714                           	opt callstack 0
  1715  00036C                     	ds	64
  1716  0003AC                     _uart1TxBuffer:
  1717                           	opt callstack 0
  1718  0003AC                     	ds	64
  1719                           
  1720                           	psect	bssBANK4
  1721  000400                     __pbssBANK4:
  1722                           	opt callstack 0
  1723  000400                     _ring_buf2:
  1724                           	opt callstack 0
  1725  000400                     	ds	67
  1726  000443                     _ring_buf1:
  1727                           	opt callstack 0
  1728  000443                     	ds	67
  1729                           
  1730                           	psect	bssBANK5
  1731  000500                     __pbssBANK5:
  1732                           	opt callstack 0
  1733  000500                     _D:
  1734                           	opt callstack 0
  1735  000500                     	ds	218
  1736                           
  1737                           	psect	bssBANK6
  1738  000600                     __pbssBANK6:
  1739                           	opt callstack 0
  1740  000600                     _uart1RxBuffer:
  1741                           	opt callstack 0
  1742  000600                     	ds	255
  1743                           
  1744                           	psect	bssBANK7
  1745  000700                     __pbssBANK7:
  1746                           	opt callstack 0
  1747  000700                     _uart2RxBuffer:
  1748                           	opt callstack 0
  1749  000700                     	ds	255
  1750                           
  1751                           	psect	cstackBANK1
  1752  0001C3                     __pcstackBANK1:
  1753                           	opt callstack 0
  1754  0001C3                     ??_TMR5_ISR:
  1755                           
  1756                           ; 1 bytes @ 0x0
  1757  0001C3                     	ds	4
  1758                           
  1759                           	psect	cstackBANK0
  1760  0000F6                     __pcstackBANK0:
  1761                           	opt callstack 0
  1762  0000F6                     ??_INT1_ISR:
  1763                           
  1764                           ; 1 bytes @ 0x0
  1765  0000F6                     	ds	4
  1766                           
  1767                           	psect	cstackCOMRAM
  1768  000052                     __pcstackCOMRAM:
  1769                           	opt callstack 0
  1770  000052                     ??_ADCC_ThresholdISR:
  1771  000052                     
  1772                           ; 1 bytes @ 0x0
  1773  000052                     	ds	5
  1774  000057                     ??_TMR6_ISR:
  1775                           
  1776                           ; 1 bytes @ 0x5
  1777  000057                     	ds	1
  1778  000058                     
  1779                           ; 1 bytes @ 0x6
  1780 ;;
  1781 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  1782 ;;
  1783 ;; *************** function _main *****************
  1784 ;; Defined at:
  1785 ;;		line 158 in file "main.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  inp_index       1  [STACK] unsigned char 
  1790 ;;  k               1  [STACK] unsigned char 
  1791 ;;  j               1  [STACK] unsigned char 
  1792 ;;  i               1  [STACK] unsigned char 
  1793 ;;  mode            1  [STACK] enum E17005
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1  [STACK] void 
  1796 ;; Registers used:
  1797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 1/1
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1806 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1807 ;;Total ram usage:        0 bytes
  1808 ;; Hardware stack levels required when called:   19
  1809 ;; This function calls:
  1810 ;;		_SYSTEM_Initialize
  1811 ;;		_StartTimer
  1812 ;;		_TimerDone
  1813 ;;		_WaitMs
  1814 ;;		_check_adc_scan
  1815 ;;		_check_help
  1816 ;;		_clear_adc_scan
  1817 ;;		_convert_adc_data
  1818 ;;		_eaDogM_WriteCommand
  1819 ;;		_get_raw_result
  1820 ;;		_get_switch
  1821 ;;		_get_vterm_ptr
  1822 ;;		_init_display
  1823 ;;		_mode_lamp_dim
  1824 ;;		_set_display_info
  1825 ;;		_set_vterm
  1826 ;;		_sprintf
  1827 ;;		_srand
  1828 ;;		_start_adc_scan
  1829 ;;		_start_switch_handler
  1830 ;;		_update_lcd
  1831 ;; This function is called by:
  1832 ;;		Startup code after reset
  1833 ;; This function uses a reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text0
  1837  0132E2                     __ptext0:
  1838                           	opt callstack 0
  1839  0132E2                     _main:
  1840                           	opt callstack 0
  1841                           
  1842                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1843  0132E2  0E05               	movlw	5
  1844  0132E4  26E1               	addwf	fsr1l,f,c
  1845  0132E6  0E00               	movlw	0
  1846  0132E8  22E2               	addwfc	fsr1h,f,c
  1847                           
  1848                           ;main.c: 160:  UI_STATES mode;;main.c: 161:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  1849                           ;stkvar	_inp_index @ sp[(-5)+0]
  1850                           
  1851                           ;incstack = 0
  1852  0132EA  0EFB               	movlw	-5
  1853  0132EC  6AE3               	clrf	plusw1,c
  1854                           
  1855                           ;stkvar	_i @ sp[(-5)+3]
  1856  0132EE  0EFE               	movlw	-2
  1857  0132F0  6AE3               	clrf	plusw1,c
  1858                           
  1859                           ;stkvar	_j @ sp[(-5)+2]
  1860  0132F2  0EFD               	movlw	-3
  1861  0132F4  6AE3               	clrf	plusw1,c
  1862  0132F6  2AE3               	incf	plusw1,f,c
  1863                           
  1864                           ;stkvar	_k @ sp[(-5)+1]
  1865  0132F8  0EFC               	movlw	-4
  1866  0132FA  6AE3               	clrf	plusw1,c
  1867  0132FC  82E3               	bsf	plusw1,1,c
  1868                           
  1869                           ;main.c: 163:  SYSTEM_Initialize();
  1870  0132FE  ECD1  F0BD         	call	_SYSTEM_Initialize	;wreg free
  1871                           
  1872                           ; BSR set to: 60
  1873                           ;main.c: 166:  (INTCON0bits.GIEH = 1);
  1874  013302  8ED2               	bsf	210,7,c	;volatile
  1875                           
  1876                           ; BSR set to: 60
  1877                           ;main.c: 169:  (INTCON0bits.GIEL = 1);
  1878  013304  8CD2               	bsf	210,6,c	;volatile
  1879                           
  1880                           ; BSR set to: 60
  1881                           ;main.c: 171:  V.ui_state = UI_STATE_INIT;
  1882  013306  0101               	movlb	1	; () banked
  1883  013308  6B00               	clrf	_V& (0+255),b	;volatile
  1884                           
  1885                           ; BSR set to: 1
  1886                           ;main.c: 176:  WaitMs(300);
  1887  01330A  0E2C               	movlw	44
  1888  01330C  6EE6               	movwf	postinc1,c
  1889  01330E  0E01               	movlw	1
  1890  013310  6EE6               	movwf	postinc1,c
  1891  013312  ECF7  F0BE         	call	_WaitMs	;wreg free
  1892                           
  1893                           ;main.c: 177:  if (PORTBbits.RB0) {
  1894  013316  A0CB               	btfss	203,0,c	;volatile
  1895  013318  D004               	goto	l12134
  1896                           
  1897                           ;main.c: 178:   mode = UI_STATE_HOST;
  1898                           ;stkvar	_mode @ sp[(-5)+4]
  1899  01331A  0EFF               	movlw	-1
  1900  01331C  6AE3               	clrf	plusw1,c
  1901  01331E  2AE3               	incf	plusw1,f,c
  1902                           
  1903                           ;main.c: 179:  } else {
  1904  013320  D004               	goto	l12136
  1905  013322                     l12134:
  1906                           
  1907                           ;main.c: 180:   mode = UI_STATE_LOG;
  1908                           ;stkvar	_mode @ sp[(-5)+4]
  1909  013322  0EFF               	movlw	-1
  1910  013324  6AE3               	clrf	plusw1,c
  1911  013326  80E3               	bsf	plusw1,0,c
  1912  013328  82E3               	bsf	plusw1,1,c	;indir
  1913  01332A                     l12136:
  1914                           
  1915                           ;main.c: 183:  if (mode == UI_STATE_HOST) {
  1916                           ;stkvar	_mode @ sp[(-5)+4]
  1917  01332A  0EFF               	movlw	-1
  1918  01332C  04E3               	decf	plusw1,w,c
  1919  01332E  A4D8               	btfss	status,2,c
  1920  013330  D007               	goto	l1246
  1921                           
  1922                           ;main.c: 184:   do { LATDbits.LATD0 = 1; } while(0);
  1923  013332  80BD               	bsf	189,0,c	;volatile
  1924                           
  1925                           ;main.c: 185:   V.mode_pwm = 70;
  1926  013334  0E00               	movlw	0
  1927  013336  0101               	movlb	1	; () banked
  1928  013338  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  1929  01333A  0E46               	movlw	70
  1930  01333C  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  1931                           
  1932                           ;main.c: 186:  } else {
  1933  01333E  D004               	goto	l12140
  1934  013340                     l1246:
  1935  013340  90BD               	bcf	189,0,c	;volatile
  1936                           
  1937                           ;main.c: 188:   V.mode_pwm = 0;
  1938  013342  0101               	movlb	1	; () banked
  1939  013344  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  1940  013346  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  1941  013348                     l12140:
  1942                           
  1943                           ; BSR set to: 1
  1944                           ;main.c: 190:  mode_lamp_dim(V.mode_pwm);
  1945  013348  0060  F657  FFE6   	movff	_V+149,postinc1
  1946  01334E  0060  F65B  FFE6   	movff	_V+150,postinc1
  1947  013354  EC95  F0C2         	call	_mode_lamp_dim	;wreg free
  1948  013358  D0D0               	goto	l12184
  1949  01335A                     l12142:
  1950                           
  1951                           ; BSR set to: 1
  1952                           ;main.c: 201:    init_display();
  1953  01335A  ECBA  F0B5         	call	_init_display	;wreg free
  1954                           
  1955                           ; BSR set to: 61
  1956                           ;main.c: 202:    eaDogM_WriteCommand(0b00001100);
  1957  01335E  0E0C               	movlw	12
  1958  013360  6EE6               	movwf	postinc1,c
  1959  013362  ECF1  F0C2         	call	_eaDogM_WriteCommand	;wreg free
  1960                           
  1961                           ; BSR set to: 0
  1962                           ;main.c: 204:    V.ui_state = mode;
  1963                           ;stkvar	_mode @ sp[(-5)+4]
  1964  013366  0EFF               	movlw	-1
  1965  013368  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1966                           
  1967                           ; BSR set to: 0
  1968                           ;main.c: 205:    srand(1957);
  1969  01336E  0EA5               	movlw	165
  1970  013370  6EE6               	movwf	postinc1,c
  1971  013372  0E07               	movlw	7
  1972  013374  6EE6               	movwf	postinc1,c
  1973  013376  EC2D  F0BF         	call	_srand	;wreg free
  1974                           
  1975                           ; BSR set to: 1
  1976                           ;main.c: 206:    set_vterm(0);
  1977  01337A  0E00               	movlw	0
  1978  01337C  6EE6               	movwf	postinc1,c
  1979  01337E  EC6C  F0C2         	call	_set_vterm	;wreg free
  1980                           
  1981                           ; BSR set to: 5
  1982                           ;main.c: 207:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1983  013382  0E60               	movlw	low STR_1
  1984  013384  6EE6               	movwf	postinc1,c
  1985  013386  0EFF               	movlw	high STR_1
  1986  013388  6EE6               	movwf	postinc1,c
  1987  01338A  0E00               	movlw	0
  1988  01338C  6EE6               	movwf	postinc1,c
  1989  01338E  0E00               	movlw	0
  1990  013390  6EE6               	movwf	postinc1,c
  1991  013392  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  1992  013396  0060  F0CB  FFE6   	movff	btemp,postinc1
  1993  01339C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  1994  0133A2  0E04               	movlw	4
  1995  0133A4  6EE6               	movwf	postinc1,c
  1996  0133A6  ECBB  F0B4         	call	_sprintf	;wreg free
  1997                           
  1998                           ;main.c: 208:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.97");
  1999  0133AA  0EE0               	movlw	low STR_3
  2000  0133AC  6EE6               	movwf	postinc1,c
  2001  0133AE  0EFF               	movlw	high STR_3
  2002  0133B0  6EE6               	movwf	postinc1,c
  2003  0133B2  0EB2               	movlw	low STR_2
  2004  0133B4  6EE6               	movwf	postinc1,c
  2005  0133B6  0EFF               	movlw	high STR_2
  2006  0133B8  6EE6               	movwf	postinc1,c
  2007  0133BA  0E00               	movlw	0
  2008  0133BC  6EE6               	movwf	postinc1,c
  2009  0133BE  0E01               	movlw	1
  2010  0133C0  6EE6               	movwf	postinc1,c
  2011  0133C2  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  2012  0133C6  0060  F0CB  FFE6   	movff	btemp,postinc1
  2013  0133CC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2014  0133D2  0E06               	movlw	6
  2015  0133D4  6EE6               	movwf	postinc1,c
  2016  0133D6  ECBB  F0B4         	call	_sprintf	;wreg free
  2017                           
  2018                           ;main.c: 209:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2019  0133DA  0E4F               	movlw	low STR_4
  2020  0133DC  6EE6               	movwf	postinc1,c
  2021  0133DE  0EFF               	movlw	high STR_4
  2022  0133E0  6EE6               	movwf	postinc1,c
  2023  0133E2  0E00               	movlw	0
  2024  0133E4  6EE6               	movwf	postinc1,c
  2025  0133E6  0E02               	movlw	2
  2026  0133E8  6EE6               	movwf	postinc1,c
  2027  0133EA  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  2028  0133EE  0060  F0CB  FFE6   	movff	btemp,postinc1
  2029  0133F4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2030  0133FA  0E04               	movlw	4
  2031  0133FC  6EE6               	movwf	postinc1,c
  2032  0133FE  ECBB  F0B4         	call	_sprintf	;wreg free
  2033                           
  2034                           ;main.c: 210:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2035  013402  0E71               	movlw	low STR_5
  2036  013404  6EE6               	movwf	postinc1,c
  2037  013406  0EFF               	movlw	high STR_5
  2038  013408  6EE6               	movwf	postinc1,c
  2039  01340A  0E02               	movlw	2
  2040  01340C  6EE6               	movwf	postinc1,c
  2041  01340E  0E00               	movlw	0
  2042  013410  6EE6               	movwf	postinc1,c
  2043  013412  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  2044  013416  0060  F0CB  FFE6   	movff	btemp,postinc1
  2045  01341C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2046  013422  0E04               	movlw	4
  2047  013424  6EE6               	movwf	postinc1,c
  2048  013426  ECBB  F0B4         	call	_sprintf	;wreg free
  2049                           
  2050                           ;main.c: 211:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.97");
  2051  01342A  0EE0               	movlw	low STR_3
  2052  01342C  6EE6               	movwf	postinc1,c
  2053  01342E  0EFF               	movlw	high STR_3
  2054  013430  6EE6               	movwf	postinc1,c
  2055  013432  0EB2               	movlw	low STR_2
  2056  013434  6EE6               	movwf	postinc1,c
  2057  013436  0EFF               	movlw	high STR_2
  2058  013438  6EE6               	movwf	postinc1,c
  2059  01343A  0E02               	movlw	2
  2060  01343C  6EE6               	movwf	postinc1,c
  2061  01343E  0E01               	movlw	1
  2062  013440  6EE6               	movwf	postinc1,c
  2063  013442  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  2064  013446  0060  F0CB  FFE6   	movff	btemp,postinc1
  2065  01344C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2066  013452  0E06               	movlw	6
  2067  013454  6EE6               	movwf	postinc1,c
  2068  013456  ECBB  F0B4         	call	_sprintf	;wreg free
  2069                           
  2070                           ;main.c: 212:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2071  01345A  0E3E               	movlw	low STR_8
  2072  01345C  6EE6               	movwf	postinc1,c
  2073  01345E  0EFF               	movlw	high STR_8
  2074  013460  6EE6               	movwf	postinc1,c
  2075  013462  0E02               	movlw	2
  2076  013464  6EE6               	movwf	postinc1,c
  2077  013466  0E02               	movlw	2
  2078  013468  6EE6               	movwf	postinc1,c
  2079  01346A  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  2080  01346E  0060  F0CB  FFE6   	movff	btemp,postinc1
  2081  013474  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2082  01347A  0E04               	movlw	4
  2083  01347C  6EE6               	movwf	postinc1,c
  2084  01347E  ECBB  F0B4         	call	_sprintf	;wreg free
  2085                           
  2086                           ;main.c: 213:    update_lcd(0);
  2087  013482  0E00               	movlw	0
  2088  013484  6EE6               	movwf	postinc1,c
  2089  013486  EC34  F0B4         	call	_update_lcd	;wreg free
  2090                           
  2091                           ;main.c: 214:    WaitMs(3000);
  2092  01348A  0EB8               	movlw	184
  2093  01348C  6EE6               	movwf	postinc1,c
  2094  01348E  0E0B               	movlw	11
  2095  013490  6EE6               	movwf	postinc1,c
  2096  013492  ECF7  F0BE         	call	_WaitMs	;wreg free
  2097                           
  2098                           ;main.c: 215:    StartTimer(TMR_DISPLAY, 250);
  2099  013496  0EFA               	movlw	250
  2100  013498  6EE6               	movwf	postinc1,c
  2101  01349A  0E00               	movlw	0
  2102  01349C  6EE6               	movwf	postinc1,c
  2103  01349E  0E0A               	movlw	10
  2104  0134A0  6EE6               	movwf	postinc1,c
  2105  0134A2  ECBD  F0BE         	call	_StartTimer	;wreg free
  2106                           
  2107                           ;main.c: 216:    StartTimer(TMR_ADC, 200);
  2108  0134A6  0EC8               	movlw	200
  2109  0134A8  6EE6               	movwf	postinc1,c
  2110  0134AA  0E00               	movlw	0
  2111  0134AC  6EE6               	movwf	postinc1,c
  2112  0134AE  0E01               	movlw	1
  2113  0134B0  6EE6               	movwf	postinc1,c
  2114  0134B2  ECBD  F0BE         	call	_StartTimer	;wreg free
  2115                           
  2116                           ;main.c: 217:    StartTimer(TMR_INFO, 3000);
  2117  0134B6  0EB8               	movlw	184
  2118  0134B8  6EE6               	movwf	postinc1,c
  2119  0134BA  0E0B               	movlw	11
  2120  0134BC  6EE6               	movwf	postinc1,c
  2121  0134BE  0E07               	movlw	7
  2122  0134C0  6EE6               	movwf	postinc1,c
  2123  0134C2  ECBD  F0BE         	call	_StartTimer	;wreg free
  2124                           
  2125                           ;main.c: 218:    StartTimer(TMR_FLIPPER, 1500);
  2126  0134C6  0EDC               	movlw	220
  2127  0134C8  6EE6               	movwf	postinc1,c
  2128  0134CA  0E05               	movlw	5
  2129  0134CC  6EE6               	movwf	postinc1,c
  2130  0134CE  0E0B               	movlw	11
  2131  0134D0  6EE6               	movwf	postinc1,c
  2132  0134D2  ECBD  F0BE         	call	_StartTimer	;wreg free
  2133                           
  2134                           ;main.c: 219:    StartTimer(TMR_HELPDIS, 3000);
  2135  0134D6  0EB8               	movlw	184
  2136  0134D8  6EE6               	movwf	postinc1,c
  2137  0134DA  0E0B               	movlw	11
  2138  0134DC  6EE6               	movwf	postinc1,c
  2139  0134DE  0E09               	movlw	9
  2140  0134E0  6EE6               	movwf	postinc1,c
  2141  0134E2  ECBD  F0BE         	call	_StartTimer	;wreg free
  2142                           
  2143                           ;main.c: 221:    start_adc_scan();
  2144  0134E6  EC99  F0BB         	call	_start_adc_scan	;wreg free
  2145                           
  2146                           ;main.c: 222:    start_switch_handler();
  2147  0134EA  EC03  F0C2         	call	_start_switch_handler	;wreg free
  2148                           
  2149                           ;main.c: 224:    break;
  2150  0134EE  D01C               	goto	l12186
  2151  0134F0                     l1254:
  2152                           
  2153                           ; BSR set to: 1
  2154                           ;main.c: 230:    P.SYSTEM_STABLE = 1;
  2155  0134F0  0100               	movlb	0	; () banked
  2156  0134F2  81BE               	bsf	(_P+1)& (0+255),0,b	;volatile
  2157                           
  2158                           ;main.c: 231:    break;
  2159  0134F4  D019               	goto	l12186
  2160  0134F6                     l1256:
  2161                           
  2162                           ; BSR set to: 1
  2163                           ;main.c: 234:    V.ui_state = UI_STATE_INIT;
  2164  0134F6  6B00               	clrf	_V& (0+255),b	;volatile
  2165                           
  2166                           ;main.c: 235:    break;
  2167  0134F8  D017               	goto	l12186
  2168  0134FA                     l12184:
  2169  0134FA  0101               	movlb	1	; () banked
  2170  0134FC  5100               	movf	_V& (0+255),w,b	;volatile
  2171  0134FE  6E3C               	movwf	(btemp+10)^0,c
  2172  013500  6A3D               	clrf	(btemp+11)^0,c
  2173                           
  2174                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2175                           ; Switch size 1, requested type "simple"
  2176                           ; Number of cases is 1, Range of values is 0 to 0
  2177                           ; switch strategies available:
  2178                           ; Name         Instructions Cycles
  2179                           ; simple_byte            4     3 (average)
  2180                           ;	Chosen strategy is simple_byte
  2181  013502  503D               	movf	(btemp+11)^0,w,c
  2182  013504  0A00               	xorlw	0	; case 0
  2183  013506  A4D8               	btfss	status,2,c
  2184  013508  D7F6               	goto	l1256
  2185                           
  2186                           ; BSR set to: 1
  2187                           ; Switch size 1, requested type "simple"
  2188                           ; Number of cases is 5, Range of values is 0 to 5
  2189                           ; switch strategies available:
  2190                           ; Name         Instructions Cycles
  2191                           ; simple_byte           16     9 (average)
  2192                           ;	Chosen strategy is simple_byte
  2193  01350A  503C               	movf	(btemp+10)^0,w,c
  2194  01350C  0A00               	xorlw	0	; case 0
  2195  01350E  B4D8               	btfsc	status,2,c
  2196  013510  D724               	goto	l12142
  2197  013512  0A01               	xorlw	1	; case 1
  2198  013514  B4D8               	btfsc	status,2,c
  2199  013516  D008               	goto	l12186
  2200  013518  0A02               	xorlw	2	; case 3
  2201  01351A  B4D8               	btfsc	status,2,c
  2202  01351C  D005               	goto	l12186
  2203  01351E  0A07               	xorlw	7	; case 4
  2204  013520  B4D8               	btfsc	status,2,c
  2205  013522  D7E6               	goto	l1254
  2206  013524  0A01               	xorlw	1	; case 5
  2207  013526  D7E7               	goto	l1256
  2208  013528                     l12186:
  2209                           
  2210                           ;main.c: 238:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2211  013528  0E01               	movlw	1
  2212  01352A  6EE6               	movwf	postinc1,c
  2213  01352C  ECAB  F0C1         	call	_TimerDone	;wreg free
  2214  013530  5032               	movf	btemp^0,w,c
  2215  013532  B4D8               	btfsc	status,2,c
  2216  013534  D013               	goto	l12198
  2217  013536  EC31  F0C3         	call	_check_adc_scan	;wreg free
  2218  01353A  5032               	movf	btemp^0,w,c
  2219  01353C  B4D8               	btfsc	status,2,c
  2220  01353E  D00E               	goto	l12198
  2221                           
  2222                           ;main.c: 242:    convert_adc_data();
  2223  013540  EC8B  F0BA         	call	_convert_adc_data	;wreg free
  2224                           
  2225                           ;main.c: 246:    clear_adc_scan();
  2226  013544  EC39  F0C3         	call	_clear_adc_scan	;wreg free
  2227                           
  2228                           ; BSR set to: 0
  2229                           ;main.c: 247:    start_adc_scan();
  2230  013548  EC99  F0BB         	call	_start_adc_scan	;wreg free
  2231                           
  2232                           ;main.c: 248:    StartTimer(TMR_ADC, 200);
  2233  01354C  0EC8               	movlw	200
  2234  01354E  6EE6               	movwf	postinc1,c
  2235  013550  0E00               	movlw	0
  2236  013552  6EE6               	movwf	postinc1,c
  2237  013554  0E01               	movlw	1
  2238  013556  6EE6               	movwf	postinc1,c
  2239  013558  ECBD  F0BE         	call	_StartTimer	;wreg free
  2240  01355C                     l12198:
  2241                           
  2242                           ;main.c: 255:   if (TimerDone(TMR_DISPLAY)) {
  2243                           
  2244                           ;main.c: 251:   if (V.ticks) {
  2245  01355C  0E0A               	movlw	10
  2246  01355E  6EE6               	movwf	postinc1,c
  2247  013560  ECAB  F0C1         	call	_TimerDone	;wreg free
  2248  013564  5032               	movf	btemp^0,w,c
  2249  013566  B4D8               	btfsc	status,2,c
  2250  013568  D0C8               	goto	l12216
  2251                           
  2252                           ;main.c: 256:    if (TimerDone(TMR_HELPDIS)) {
  2253  01356A  0E09               	movlw	9
  2254  01356C  6EE6               	movwf	postinc1,c
  2255  01356E  ECAB  F0C1         	call	_TimerDone	;wreg free
  2256  013572  5032               	movf	btemp^0,w,c
  2257  013574  B4D8               	btfsc	status,2,c
  2258  013576  D004               	goto	l12206
  2259                           
  2260                           ;main.c: 257:     set_display_info(DIS_STR);
  2261  013578  0E00               	movlw	0
  2262  01357A  6EE6               	movwf	postinc1,c
  2263  01357C  EC31  F0C2         	call	_set_display_info	;wreg free
  2264  013580                     l12206:
  2265                           
  2266                           ;main.c: 259:    sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.ca
      +                          lc[i], get_switch(SSELECT));
  2267  013580  0E02               	movlw	2
  2268  013582  6EE6               	movwf	postinc1,c
  2269  013584  EC6B  F0C0         	call	_get_switch	;wreg free
  2270  013588  5032               	movf	btemp^0,w,c
  2271  01358A  6EE6               	movwf	postinc1,c
  2272  01358C  0E00               	movlw	0
  2273  01358E  6EE6               	movwf	postinc1,c
  2274                           
  2275                           ;stkvar	_i @ sp[(-7)+3]
  2276  013590  0EFC               	movlw	-4
  2277  013592  50E3               	movf	plusw1,w,c
  2278  013594  0D04               	mullw	4
  2279  013596  0E00               	movlw	low _C
  2280  013598  24F3               	addwf	243,w,c
  2281  01359A  6ED9               	movwf	fsr2l,c
  2282  01359C  0E03               	movlw	high _C
  2283  01359E  20F4               	addwfc	prodh,w,c
  2284  0135A0  6EDA               	movwf	fsr2h,c
  2285  0135A2  006F FF7B FFE6     	movff	postinc2,postinc1
  2286  0135A8  006F FF7B FFE6     	movff	postinc2,postinc1
  2287  0135AE  006F FF7B FFE6     	movff	postinc2,postinc1
  2288  0135B4  006F FF7B FFE6     	movff	postinc2,postinc1
  2289                           
  2290                           ;stkvar	_i @ sp[(-11)+3]
  2291  0135BA  0EF8               	movlw	-8
  2292  0135BC  50E3               	movf	plusw1,w,c
  2293  0135BE  6EE6               	movwf	postinc1,c
  2294  0135C0  EC22  F0C2         	call	_get_raw_result	;wreg free
  2295  0135C4  0060  F0CB  FFE6   	movff	btemp,postinc1
  2296  0135CA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2297  0135D0  0E93               	movlw	low STR_9
  2298  0135D2  6EE6               	movwf	postinc1,c
  2299  0135D4  0EFF               	movlw	high STR_9
  2300  0135D6  6EE6               	movwf	postinc1,c
  2301  0135D8  0E00               	movlw	0
  2302  0135DA  6EE6               	movwf	postinc1,c
  2303  0135DC  0E00               	movlw	0
  2304  0135DE  6EE6               	movwf	postinc1,c
  2305  0135E0  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  2306  0135E4  0060  F0CB  FFE6   	movff	btemp,postinc1
  2307  0135EA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2308  0135F0  0E0C               	movlw	12
  2309  0135F2  6EE6               	movwf	postinc1,c
  2310  0135F4  ECBB  F0B4         	call	_sprintf	;wreg free
  2311                           
  2312                           ;main.c: 260:    sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.ca
      +                          lc[j], get_switch(SENTER));
  2313  0135F8  0E03               	movlw	3
  2314  0135FA  6EE6               	movwf	postinc1,c
  2315  0135FC  EC6B  F0C0         	call	_get_switch	;wreg free
  2316  013600  5032               	movf	btemp^0,w,c
  2317  013602  6EE6               	movwf	postinc1,c
  2318  013604  0E00               	movlw	0
  2319  013606  6EE6               	movwf	postinc1,c
  2320                           
  2321                           ;stkvar	_j @ sp[(-7)+2]
  2322  013608  0EFB               	movlw	-5
  2323  01360A  50E3               	movf	plusw1,w,c
  2324  01360C  0D04               	mullw	4
  2325  01360E  0E00               	movlw	low _C
  2326  013610  24F3               	addwf	243,w,c
  2327  013612  6ED9               	movwf	fsr2l,c
  2328  013614  0E03               	movlw	high _C
  2329  013616  20F4               	addwfc	prodh,w,c
  2330  013618  6EDA               	movwf	fsr2h,c
  2331  01361A  006F FF7B FFE6     	movff	postinc2,postinc1
  2332  013620  006F FF7B FFE6     	movff	postinc2,postinc1
  2333  013626  006F FF7B FFE6     	movff	postinc2,postinc1
  2334  01362C  006F FF7B FFE6     	movff	postinc2,postinc1
  2335                           
  2336                           ;stkvar	_j @ sp[(-11)+2]
  2337  013632  0EF7               	movlw	-9
  2338  013634  50E3               	movf	plusw1,w,c
  2339  013636  6EE6               	movwf	postinc1,c
  2340  013638  EC22  F0C2         	call	_get_raw_result	;wreg free
  2341  01363C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2342  013642  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2343  013648  0E93               	movlw	low STR_9
  2344  01364A  6EE6               	movwf	postinc1,c
  2345  01364C  0EFF               	movlw	high STR_9
  2346  01364E  6EE6               	movwf	postinc1,c
  2347  013650  0E00               	movlw	0
  2348  013652  6EE6               	movwf	postinc1,c
  2349  013654  0E01               	movlw	1
  2350  013656  6EE6               	movwf	postinc1,c
  2351  013658  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  2352  01365C  0060  F0CB  FFE6   	movff	btemp,postinc1
  2353  013662  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2354  013668  0E0C               	movlw	12
  2355  01366A  6EE6               	movwf	postinc1,c
  2356  01366C  ECBB  F0B4         	call	_sprintf	;wreg free
  2357                           
  2358                           ;main.c: 262:    sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C.c
      +                          alc[k], inp_index);
  2359                           ;stkvar	_inp_index @ sp[(-5)+0]
  2360  013670  0EFB               	movlw	-5
  2361  013672  50E3               	movf	plusw1,w,c
  2362  013674  6EE6               	movwf	postinc1,c
  2363  013676  0E00               	movlw	0
  2364  013678  6EE6               	movwf	postinc1,c
  2365                           
  2366                           ;stkvar	_k @ sp[(-7)+1]
  2367  01367A  0EFA               	movlw	-6
  2368  01367C  50E3               	movf	plusw1,w,c
  2369  01367E  0D04               	mullw	4
  2370  013680  0E00               	movlw	low _C
  2371  013682  24F3               	addwf	243,w,c
  2372  013684  6ED9               	movwf	fsr2l,c
  2373  013686  0E03               	movlw	high _C
  2374  013688  20F4               	addwfc	prodh,w,c
  2375  01368A  6EDA               	movwf	fsr2h,c
  2376  01368C  006F FF7B FFE6     	movff	postinc2,postinc1
  2377  013692  006F FF7B FFE6     	movff	postinc2,postinc1
  2378  013698  006F FF7B FFE6     	movff	postinc2,postinc1
  2379  01369E  006F FF7B FFE6     	movff	postinc2,postinc1
  2380                           
  2381                           ;stkvar	_k @ sp[(-11)+1]
  2382  0136A4  0EF6               	movlw	-10
  2383  0136A6  50E3               	movf	plusw1,w,c
  2384  0136A8  6EE6               	movwf	postinc1,c
  2385  0136AA  EC22  F0C2         	call	_get_raw_result	;wreg free
  2386  0136AE  0060  F0CB  FFE6   	movff	btemp,postinc1
  2387  0136B4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2388  0136BA  0E82               	movlw	low STR_11
  2389  0136BC  6EE6               	movwf	postinc1,c
  2390  0136BE  0EFF               	movlw	high STR_11
  2391  0136C0  6EE6               	movwf	postinc1,c
  2392  0136C2  0E00               	movlw	0
  2393  0136C4  6EE6               	movwf	postinc1,c
  2394  0136C6  0E02               	movlw	2
  2395  0136C8  6EE6               	movwf	postinc1,c
  2396  0136CA  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  2397  0136CE  0060  F0CB  FFE6   	movff	btemp,postinc1
  2398  0136D4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  2399  0136DA  0E0C               	movlw	12
  2400  0136DC  6EE6               	movwf	postinc1,c
  2401  0136DE  ECBB  F0B4         	call	_sprintf	;wreg free
  2402                           
  2403                           ;main.c: 263:    StartTimer(TMR_DISPLAY, 250);
  2404  0136E2  0EFA               	movlw	250
  2405  0136E4  6EE6               	movwf	postinc1,c
  2406  0136E6  0E00               	movlw	0
  2407  0136E8  6EE6               	movwf	postinc1,c
  2408  0136EA  0E0A               	movlw	10
  2409  0136EC  6EE6               	movwf	postinc1,c
  2410  0136EE  ECBD  F0BE         	call	_StartTimer	;wreg free
  2411                           
  2412                           ;main.c: 264:    update_lcd(0);
  2413  0136F2  0E00               	movlw	0
  2414  0136F4  6EE6               	movwf	postinc1,c
  2415  0136F6  EC34  F0B4         	call	_update_lcd	;wreg free
  2416  0136FA                     l12216:
  2417                           
  2418                           ;main.c: 270:   if (check_help(V.flipper)) {
  2419  0136FA  0101               	movlb	1	; () banked
  2420  0136FC  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2421  0136FE  6EE6               	movwf	postinc1,c
  2422  013700  EC9B  F0AA         	call	_check_help	;wreg free
  2423  013704  5032               	movf	btemp^0,w,c
  2424  013706  B4D8               	btfsc	status,2,c
  2425  013708  D060               	goto	l1261
  2426                           
  2427                           ;main.c: 272:    inp_index += 3;
  2428                           ;stkvar	_inp_index @ sp[(-5)+0]
  2429  01370A  0EFB               	movlw	-5
  2430  01370C  006F FF8C  F032    	movff	plusw1,btemp
  2431  013712  0E03               	movlw	3
  2432  013714  2632               	addwf	btemp^0,f,c
  2433  013716  0EFB               	movlw	-5
  2434  013718  0060  F0CB  FFE3   	movff	btemp,plusw1
  2435                           
  2436                           ;main.c: 273:    if (inp_index > 9)
  2437                           ;stkvar	_inp_index @ sp[(-5)+0]
  2438  01371E  0EFB               	movlw	-5
  2439  013720  006F FF8C  F032    	movff	plusw1,btemp
  2440  013726  0E09               	movlw	9
  2441  013728  6432               	cpfsgt	btemp^0,c
  2442  01372A  D03A               	goto	l12240
  2443                           
  2444                           ;main.c: 274:     inp_index = 0;
  2445                           ;stkvar	_inp_index @ sp[(-5)+0]
  2446  01372C  0EFB               	movlw	-5
  2447  01372E  6AE3               	clrf	plusw1,c
  2448  013730  D037               	goto	l12240
  2449  013732                     l12222:
  2450                           
  2451                           ;main.c: 277:     i = C_BATT;
  2452                           ;stkvar	_i @ sp[(-5)+3]
  2453  013732  0EFE               	movlw	-2
  2454  013734  6AE3               	clrf	plusw1,c
  2455                           
  2456                           ;main.c: 278:     j = C_PV;
  2457                           ;stkvar	_j @ sp[(-5)+2]
  2458  013736  0EFD               	movlw	-3
  2459  013738  6AE3               	clrf	plusw1,c
  2460  01373A  2AE3               	incf	plusw1,f,c
  2461                           
  2462                           ;main.c: 279:     k = V_CC;
  2463                           ;stkvar	_k @ sp[(-5)+1]
  2464  01373C  0EFC               	movlw	-4
  2465  01373E  6AE3               	clrf	plusw1,c
  2466  013740  82E3               	bsf	plusw1,1,c
  2467                           
  2468                           ;main.c: 280:     break;
  2469  013742  D043               	goto	l1261
  2470  013744                     l12228:
  2471                           
  2472                           ;main.c: 282:     i = V_BAT;
  2473                           ;stkvar	_i @ sp[(-5)+3]
  2474  013744  0EFE               	movlw	-2
  2475  013746  6AE3               	clrf	plusw1,c
  2476  013748  84E3               	bsf	plusw1,2,c
  2477                           
  2478                           ;main.c: 283:     j = V_PV;
  2479                           ;stkvar	_j @ sp[(-5)+2]
  2480  01374A  0EFD               	movlw	-3
  2481  01374C  6AE3               	clrf	plusw1,c
  2482  01374E  80E3               	bsf	plusw1,0,c
  2483  013750  84E3               	bsf	plusw1,2,c	;indir
  2484                           
  2485                           ;main.c: 284:     k = V_CBUS;
  2486                           ;stkvar	_k @ sp[(-5)+1]
  2487  013752  0EFC               	movlw	-4
  2488  013754  6AE3               	clrf	plusw1,c
  2489  013756  82E3               	bsf	plusw1,1,c
  2490  013758  84E3               	bsf	plusw1,2,c	;indir
  2491                           
  2492                           ;main.c: 285:     break;
  2493  01375A  D037               	goto	l1261
  2494  01375C                     l12230:
  2495                           
  2496                           ;main.c: 287:     i = V_BBAT;
  2497                           ;stkvar	_i @ sp[(-5)+3]
  2498  01375C  0EFE               	movlw	-2
  2499  01375E  6AE3               	clrf	plusw1,c
  2500  013760  82E3               	bsf	plusw1,1,c
  2501  013762  86E3               	bsf	plusw1,3,c	;indir
  2502                           
  2503                           ;main.c: 288:     j = V_TEMP;
  2504  013764  0E0B               	movlw	11
  2505  013766  6E3D               	movwf	(btemp+11)^0,c
  2506                           
  2507                           ;stkvar	_j @ sp[(-5)+2]
  2508  013768  0EFD               	movlw	-3
  2509  01376A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  2510                           
  2511                           ;main.c: 289:     k = V_INVERTER;
  2512                           ;stkvar	_k @ sp[(-5)+1]
  2513  013770  0EFC               	movlw	-4
  2514  013772  6AE3               	clrf	plusw1,c
  2515  013774  84E3               	bsf	plusw1,2,c
  2516  013776  86E3               	bsf	plusw1,3,c	;indir
  2517                           
  2518                           ;main.c: 290:     break;
  2519  013778  D028               	goto	l1261
  2520  01377A                     l12236:
  2521                           
  2522                           ;main.c: 292:     i = channel_ANB5;
  2523  01377A  0E0D               	movlw	13
  2524  01377C  6E3D               	movwf	(btemp+11)^0,c
  2525                           
  2526                           ;stkvar	_i @ sp[(-5)+3]
  2527  01377E  0EFE               	movlw	-2
  2528  013780  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  2529                           
  2530                           ;main.c: 293:     j = channel_ANB5;
  2531  013786  0E0D               	movlw	13
  2532  013788  6E3D               	movwf	(btemp+11)^0,c
  2533                           
  2534                           ;stkvar	_j @ sp[(-5)+2]
  2535  01378A  0EFD               	movlw	-3
  2536  01378C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  2537                           
  2538                           ;main.c: 294:     k = channel_ANB5;
  2539  013792  0E0D               	movlw	13
  2540  013794  6E3D               	movwf	(btemp+11)^0,c
  2541                           
  2542                           ;stkvar	_k @ sp[(-5)+1]
  2543  013796  0EFC               	movlw	-4
  2544  013798  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  2545                           
  2546                           ;main.c: 295:     break;
  2547  01379E  D015               	goto	l1261
  2548  0137A0                     l12240:
  2549                           
  2550                           ;stkvar	_inp_index @ sp[(-5)+0]
  2551  0137A0  0EFB               	movlw	-5
  2552  0137A2  50E3               	movf	plusw1,w,c
  2553  0137A4  6E3C               	movwf	(btemp+10)^0,c
  2554  0137A6  6A3D               	clrf	(btemp+11)^0,c
  2555                           
  2556                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2557                           ; Switch size 1, requested type "simple"
  2558                           ; Number of cases is 1, Range of values is 0 to 0
  2559                           ; switch strategies available:
  2560                           ; Name         Instructions Cycles
  2561                           ; simple_byte            4     3 (average)
  2562                           ;	Chosen strategy is simple_byte
  2563  0137A8  503D               	movf	(btemp+11)^0,w,c
  2564  0137AA  0A00               	xorlw	0	; case 0
  2565  0137AC  A4D8               	btfss	status,2,c
  2566  0137AE  D00D               	goto	l1261
  2567                           
  2568                           ; Switch size 1, requested type "simple"
  2569                           ; Number of cases is 4, Range of values is 0 to 9
  2570                           ; switch strategies available:
  2571                           ; Name         Instructions Cycles
  2572                           ; simple_byte           13     7 (average)
  2573                           ;	Chosen strategy is simple_byte
  2574  0137B0  503C               	movf	(btemp+10)^0,w,c
  2575  0137B2  0A00               	xorlw	0	; case 0
  2576  0137B4  B4D8               	btfsc	status,2,c
  2577  0137B6  D7BD               	goto	l12222
  2578  0137B8  0A03               	xorlw	3	; case 3
  2579  0137BA  B4D8               	btfsc	status,2,c
  2580  0137BC  D7C3               	goto	l12228
  2581  0137BE  0A05               	xorlw	5	; case 6
  2582  0137C0  B4D8               	btfsc	status,2,c
  2583  0137C2  D7CC               	goto	l12230
  2584  0137C4  0A0F               	xorlw	15	; case 9
  2585  0137C6  B4D8               	btfsc	status,2,c
  2586  0137C8  D7D8               	goto	l12236
  2587  0137CA                     l1261:
  2588                           
  2589                           ;main.c: 306:   if (V.set_sequ) {
  2590  0137CA  0101               	movlb	1	; () banked
  2591  0137CC  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2592  0137CE  D695               	goto	l12184
  2593                           
  2594                           ; BSR set to: 1
  2595                           ;main.c: 307:    if (TimerDone(TMR_INFO)) {
  2596  0137D0  0E07               	movlw	7
  2597  0137D2  6EE6               	movwf	postinc1,c
  2598  0137D4  ECAB  F0C1         	call	_TimerDone	;wreg free
  2599  0137D8  5032               	movf	btemp^0,w,c
  2600  0137DA  B4D8               	btfsc	status,2,c
  2601  0137DC  D00B               	goto	l12250
  2602                           
  2603                           ;main.c: 308:     V.set_sequ = 0;
  2604  0137DE  0101               	movlb	1	; () banked
  2605  0137E0  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2606                           
  2607                           ; BSR set to: 1
  2608                           ;main.c: 309:     set_vterm(0);
  2609  0137E2  0E00               	movlw	0
  2610  0137E4  6EE6               	movwf	postinc1,c
  2611  0137E6  EC6C  F0C2         	call	_set_vterm	;wreg free
  2612                           
  2613                           ; BSR set to: 5
  2614                           ;main.c: 310:     update_lcd(0);
  2615  0137EA  0E00               	movlw	0
  2616  0137EC  6EE6               	movwf	postinc1,c
  2617  0137EE  EC34  F0B4         	call	_update_lcd	;wreg free
  2618                           
  2619                           ;main.c: 311:    } else {
  2620  0137F2  D683               	goto	l12184
  2621  0137F4                     l12250:
  2622                           
  2623                           ;main.c: 312:     set_vterm(2);
  2624  0137F4  0E02               	movlw	2
  2625  0137F6  6EE6               	movwf	postinc1,c
  2626  0137F8  EC6C  F0C2         	call	_set_vterm	;wreg free
  2627                           
  2628                           ; BSR set to: 5
  2629                           ;main.c: 313:     update_lcd(2);
  2630  0137FC  0E02               	movlw	2
  2631  0137FE  6EE6               	movwf	postinc1,c
  2632  013800  EC34  F0B4         	call	_update_lcd	;wreg free
  2633  013804  D67A               	goto	l12184
  2634  013806                     __end_of_main:
  2635                           	opt callstack 0
  2636                           
  2637 ;; *************** function _start_switch_handler *****************
  2638 ;; Defined at:
  2639 ;;		line 119 in file "dio.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;		None
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1  [STACK] void 
  2646 ;; Registers used:
  2647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  2648 ;; Tracked objects:
  2649 ;;		On entry : 1/4
  2650 ;;		On exit  : 3F/39
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2657 ;;Total ram usage:        0 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; Hardware stack levels required when called:    7
  2660 ;; This function calls:
  2661 ;;		_INT1_SetInterruptHandler
  2662 ;; This function is called by:
  2663 ;;		_main
  2664 ;; This function uses a reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text1
  2668  018406                     __ptext1:
  2669                           	opt callstack 0
  2670  018406                     _start_switch_handler:
  2671                           	opt callstack 23
  2672                           
  2673                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  2674                           
  2675                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2676                           ;incstack = 0
  2677  018406  0139               	movlb	57	; () banked
  2678  018408  9195               	bcf	149,0,b	;volatile
  2679                           
  2680                           ; BSR set to: 57
  2681                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  2682  01840A  0EA2               	movlw	low _switch_handler
  2683  01840C  6EE6               	movwf	postinc1,c
  2684  01840E  0E62               	movlw	high _switch_handler
  2685  018410  6EE6               	movwf	postinc1,c
  2686  018412  0E01               	movlw	low (_switch_handler shr (0+16))
  2687  018414  6EE6               	movwf	postinc1,c
  2688  018416  ECF7  F0C0         	call	_INT1_SetInterruptHandler	;wreg free
  2689                           
  2690                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  2691  01841A  0E02               	movlw	2
  2692  01841C  0100               	movlb	0	; () banked
  2693  01841E  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  2697  018420  0139               	movlb	57	; () banked
  2698  018422  8195               	bsf	149,0,b	;volatile
  2699                           
  2700                           ; BSR set to: 57
  2701                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  2702  018424  0012               	return		;funcret
  2703  018426                     __end_of_start_switch_handler:
  2704                           	opt callstack 0
  2705                           
  2706 ;; *************** function _start_adc_scan *****************
  2707 ;; Defined at:
  2708 ;;		line 33 in file "daq.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;		None
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;		None
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1  [STACK] _Bool 
  2715 ;; Registers used:
  2716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/5
  2719 ;;		On exit  : 1/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2726 ;;Total ram usage:        0 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:    7
  2729 ;; This function calls:
  2730 ;;		_ADCC_DischargeSampleCapacitor
  2731 ;;		_ADCC_SetADIInterruptHandler
  2732 ;;		_ADCC_SetADTIInterruptHandler
  2733 ;;		_ADCC_StartConversion
  2734 ;; This function is called by:
  2735 ;;		_main
  2736 ;; This function uses a reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text2
  2740  017732                     __ptext2:
  2741                           	opt callstack 0
  2742  017732                     _start_adc_scan:
  2743                           	opt callstack 23
  2744                           
  2745                           ;daq.c: 35:  if (R.done)
  2746                           
  2747                           ; BSR set to: 57
  2748                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2749                           ;incstack = 0
  2750  017732  0100               	movlb	0	; () banked
  2751  017734  51EE               	movf	(_R+39)& (0+255),w,b	;volatile
  2752  017736  A4D8               	btfss	status,2,c
  2753  017738  0012               	return	
  2754                           
  2755                           ; BSR set to: 0
  2756                           ;daq.c: 38:  R.scan_index = 0;
  2757  01773A  6BEB               	clrf	(_R+36)& (0+255),b	;volatile
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2761  01773C  013A               	movlb	58	; () banked
  2762  01773E  5140               	movf	64,w,b	;volatile
  2763  017740  006E F940  F032    	movff	14928,btemp	;volatile
  2764  017746  6A33               	clrf	(btemp+1)^0,c
  2765  017748  0060  F0C8  F033   	movff	btemp,btemp+1
  2766  01774E  6A32               	clrf	btemp^0,c
  2767  017750  2632               	addwf	btemp^0,f,c
  2768  017752  0E00               	movlw	0
  2769  017754  2233               	addwfc	(btemp+1)^0,f,c
  2770  017756  0E77               	movlw	119
  2771  017758  1432               	andwf	btemp^0,w,c
  2772  01775A  0100               	movlb	0	; () banked
  2773  01775C  6FEC               	movwf	(_R+37)& (0+255),b	;volatile
  2774  01775E  0E3C               	movlw	60
  2775  017760  1433               	andwf	(btemp+1)^0,w,c
  2776  017762  6FED               	movwf	(_R+38)& (0+255),b	;volatile
  2777                           
  2778                           ; BSR set to: 0
  2779                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2780  017764  0E90               	movlw	low _adc_int_handler
  2781  017766  6EE6               	movwf	postinc1,c
  2782  017768  0E86               	movlw	high _adc_int_handler
  2783  01776A  6EE6               	movwf	postinc1,c
  2784  01776C  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2785  01776E  6EE6               	movwf	postinc1,c
  2786  017770  EC33  F0C1         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2787                           
  2788                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2789  017774  0E98               	movlw	low _adc_int_t_handler
  2790  017776  6EE6               	movwf	postinc1,c
  2791  017778  0E74               	movlw	high _adc_int_t_handler
  2792  01777A  6EE6               	movwf	postinc1,c
  2793  01777C  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2794  01777E  6EE6               	movwf	postinc1,c
  2795  017780  EC1F  F0C1         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2796                           
  2797                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2798  017784  EC25  F0C3         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2799                           
  2800                           ; BSR set to: 62
  2801                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2802  017788  0100               	movlb	0	; () banked
  2803  01778A  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
  2804  01778C  0B0F               	andlw	15
  2805  01778E  6EE6               	movwf	postinc1,c
  2806  017790  ECD8  F0C2         	call	_ADCC_StartConversion	;wreg free
  2807                           
  2808                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2809  017794  0012               	return		;funcret
  2810  017796                     __end_of_start_adc_scan:
  2811                           	opt callstack 0
  2812                           
  2813 ;; *************** function _ADCC_StartConversion *****************
  2814 ;; Defined at:
  2815 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;  channel         1  [STACK] enum E16136
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;		None
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  1  [STACK] void 
  2822 ;; Registers used:
  2823 ;;		fsr1l, fsr1h
  2824 ;; Tracked objects:
  2825 ;;		On entry : 3F/0
  2826 ;;		On exit  : 3F/3E
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2833 ;;Total ram usage:        0 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    6
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		_start_adc_scan
  2840 ;;		_adc_int_t_handler
  2841 ;; This function uses a reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text3
  2845  0185B0                     __ptext3:
  2846                           	opt callstack 0
  2847  0185B0                     _ADCC_StartConversion:
  2848                           	opt callstack 6
  2849                           
  2850                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2851                           ;stkvar	_channel @ sp[(0)+-1]
  2852                           
  2853                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2854                           ;incstack = 0
  2855  0185B0  0EFF               	movlw	-1
  2856  0185B2  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2857                           
  2858                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2859  0185B8  013E               	movlb	62	; () banked
  2860  0185BA  8FF8               	bsf	248,7,b	;volatile
  2861                           
  2862                           ; BSR set to: 62
  2863                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2864  0185BC  81F8               	bsf	248,0,b	;volatile
  2865                           
  2866                           ; BSR set to: 62
  2867                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2868  0185BE  52E5               	movf	postdec1,f,c
  2869  0185C0  0012               	return		;funcret
  2870  0185C2                     __end_of_ADCC_StartConversion:
  2871                           	opt callstack 0
  2872                           
  2873 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  2874 ;; Defined at:
  2875 ;;		line 189 in file "mcc_generated_files/adcc.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1  [STACK] void 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 3F/3E
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2893 ;;Total ram usage:        0 bytes
  2894 ;; Hardware stack levels used:    1
  2895 ;; Hardware stack levels required when called:    6
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_start_adc_scan
  2900 ;;		_adc_int_t_handler
  2901 ;; This function uses a reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text4
  2905  01864A                     __ptext4:
  2906                           	opt callstack 0
  2907  01864A                     _ADCC_DischargeSampleCapacitor:
  2908                           	opt callstack 6
  2909                           
  2910                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  2911                           
  2912                           ; BSR set to: 62
  2913                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2914                           ;incstack = 0
  2915  01864A  0E3B               	movlw	59
  2916  01864C  013E               	movlb	62	; () banked
  2917  01864E  6FF1               	movwf	241,b	;volatile
  2918                           
  2919                           ; BSR set to: 62
  2920                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  2921  018650  0012               	return		;funcret
  2922  018652                     __end_of_ADCC_DischargeSampleCapacitor:
  2923                           	opt callstack 0
  2924                           
  2925 ;; *************** function _srand *****************
  2926 ;; Defined at:
  2927 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2928 ;; Parameters:    Size  Location     Type
  2929 ;;  s               2  [STACK] unsigned int 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;		None
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  1  [STACK] void 
  2934 ;; Registers used:
  2935 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2936 ;; Tracked objects:
  2937 ;;		On entry : 3F/0
  2938 ;;		On exit  : 3F/1
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2945 ;;Total ram usage:        0 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    6
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_main
  2952 ;; This function uses a reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text5
  2956  017E5A                     __ptext5:
  2957                           	opt callstack 0
  2958  017E5A                     _srand:
  2959                           	opt callstack 24
  2960                           
  2961                           ;stkvar	_s @ sp[(0)+-2]
  2962                           
  2963                           ; BSR set to: 62
  2964                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2965                           ;incstack = 0
  2966  017E5A  0EFE               	movlw	-2
  2967  017E5C  50E3               	movf	plusw1,w,c
  2968  017E5E  0FFF               	addlw	255
  2969  017E60  6E3C               	movwf	(btemp+10)^0,c
  2970  017E62  0EFF               	movlw	-1
  2971  017E64  006F FF8C  F03D    	movff	plusw1,btemp+11
  2972  017E6A  0EFF               	movlw	255
  2973  017E6C  223D               	addwfc	(btemp+11)^0,f,c
  2974  017E6E  0060  F0F0  F1BB   	movff	btemp+10,_seed
  2975  017E74  0060  F0F4  F1BC   	movff	btemp+11,_seed+1
  2976  017E7A  0101               	movlb	1	; () banked
  2977  017E7C  6BBD               	clrf	(_seed+2)& (0+255),b
  2978  017E7E  6BBE               	clrf	(_seed+3)& (0+255),b
  2979  017E80  6BBF               	clrf	(_seed+4)& (0+255),b
  2980  017E82  6BC0               	clrf	(_seed+5)& (0+255),b
  2981  017E84  6BC1               	clrf	(_seed+6)& (0+255),b
  2982  017E86  6BC2               	clrf	(_seed+7)& (0+255),b
  2983                           
  2984                           ; BSR set to: 1
  2985                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2986  017E88  52E5               	movf	postdec1,f,c
  2987  017E8A  52E5               	movf	postdec1,f,c
  2988  017E8C  0012               	return		;funcret
  2989  017E8E                     __end_of_srand:
  2990                           	opt callstack 0
  2991                           
  2992 ;; *************** function _init_display *****************
  2993 ;; Defined at:
  2994 ;;		line 37 in file "eadog.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;		None
  2997 ;; Auto vars:     Size  Location     Type
  2998 ;;		None
  2999 ;; Return value:  Size  Location     Type
  3000 ;;                  1  [STACK] void 
  3001 ;; Registers used:
  3002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3003 ;; Tracked objects:
  3004 ;;		On entry : 0/1
  3005 ;;		On exit  : 3F/3D
  3006 ;;		Unchanged: 0/0
  3007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3012 ;;Total ram usage:        0 bytes
  3013 ;; Hardware stack levels used:    1
  3014 ;; Hardware stack levels required when called:    8
  3015 ;; This function calls:
  3016 ;;		_ringBufS_init
  3017 ;;		_send_lcd_cmd
  3018 ;;		_send_lcd_cmd_long
  3019 ;;		_wdtdelay
  3020 ;; This function is called by:
  3021 ;;		_main
  3022 ;; This function uses a reentrant model
  3023 ;;
  3024                           
  3025                           	psect	text6
  3026  016B74                     __ptext6:
  3027                           	opt callstack 0
  3028  016B74                     _init_display:
  3029                           	opt callstack 22
  3030                           
  3031                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  3032                           
  3033                           ; BSR set to: 1
  3034                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3035                           ;incstack = 0
  3036  016B74  0E43               	movlw	low _ring_buf1
  3037  016B76  0100               	movlb	0	; () banked
  3038  016B78  6FA7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3039  016B7A  0E04               	movlw	high _ring_buf1
  3040  016B7C  6FA8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3041                           
  3042                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3043  016B7E  0E00               	movlw	low _ring_buf2
  3044  016B80  6FA5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3045  016B82  0E04               	movlw	high _ring_buf2
  3046  016B84  6FA6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3047                           
  3048                           ; BSR set to: 0
  3049                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3050  016B86  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  3051  016B8C  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  3052  016B92  EC57  F0C0         	call	_ringBufS_init	;wreg free
  3053                           
  3054                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3055  016B96  0060  F297  FFE6   	movff	_spi_link+4,postinc1
  3056  016B9C  0060  F29B  FFE6   	movff	_spi_link+5,postinc1
  3057  016BA2  EC57  F0C0         	call	_ringBufS_init	;wreg free
  3058                           
  3059                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3060  016BA6  84BE               	bsf	190,2,c	;volatile
  3061  016BA8  84BC               	bsf	188,2,c	;volatile
  3062                           
  3063                           ;eadog.c: 46:  wdtdelay(350000);
  3064  016BAA  0E30               	movlw	48
  3065  016BAC  6EE6               	movwf	postinc1,c
  3066  016BAE  0E57               	movlw	87
  3067  016BB0  6EE6               	movwf	postinc1,c
  3068  016BB2  0E05               	movlw	5
  3069  016BB4  6EE6               	movwf	postinc1,c
  3070  016BB6  0E00               	movlw	0
  3071  016BB8  6EE6               	movwf	postinc1,c
  3072  016BBA  EC8E  F0BC         	call	_wdtdelay	;wreg free
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  3076  016BBE  0E39               	movlw	57
  3077  016BC0  6EE6               	movwf	postinc1,c
  3078  016BC2  EC43  F0C0         	call	_send_lcd_cmd	;wreg free
  3079                           
  3080                           ; BSR set to: 0
  3081                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  3082  016BC6  0E1D               	movlw	29
  3083  016BC8  6EE6               	movwf	postinc1,c
  3084  016BCA  EC43  F0C0         	call	_send_lcd_cmd	;wreg free
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  3088  016BCE  0E50               	movlw	80
  3089  016BD0  6EE6               	movwf	postinc1,c
  3090  016BD2  EC43  F0C0         	call	_send_lcd_cmd	;wreg free
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  3094  016BD6  0E6C               	movlw	108
  3095  016BD8  6EE6               	movwf	postinc1,c
  3096  016BDA  EC43  F0C0         	call	_send_lcd_cmd	;wreg free
  3097                           
  3098                           ; BSR set to: 0
  3099                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  3100  016BDE  0E76               	movlw	118
  3101  016BE0  6EE6               	movwf	postinc1,c
  3102  016BE2  EC43  F0C0         	call	_send_lcd_cmd	;wreg free
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  3106  016BE6  0E38               	movlw	56
  3107  016BE8  6EE6               	movwf	postinc1,c
  3108  016BEA  EC2F  F0C0         	call	_send_lcd_cmd_long	;wreg free
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  3112  016BEE  0E0F               	movlw	15
  3113  016BF0  6EE6               	movwf	postinc1,c
  3114  016BF2  EC43  F0C0         	call	_send_lcd_cmd	;wreg free
  3115                           
  3116                           ; BSR set to: 0
  3117                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  3118  016BF6  0E01               	movlw	1
  3119  016BF8  6EE6               	movwf	postinc1,c
  3120  016BFA  EC2F  F0C0         	call	_send_lcd_cmd_long	;wreg free
  3121                           
  3122                           ; BSR set to: 0
  3123                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  3124  016BFE  0E02               	movlw	2
  3125  016C00  6EE6               	movwf	postinc1,c
  3126  016C02  EC43  F0C0         	call	_send_lcd_cmd	;wreg free
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  3130  016C06  0E06               	movlw	6
  3131  016C08  6EE6               	movwf	postinc1,c
  3132  016C0A  EC43  F0C0         	call	_send_lcd_cmd	;wreg free
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;eadog.c: 57:  wdtdelay(30);
  3136  016C0E  0E1E               	movlw	30
  3137  016C10  6EE6               	movwf	postinc1,c
  3138  016C12  0E00               	movlw	0
  3139  016C14  6EE6               	movwf	postinc1,c
  3140  016C16  0E00               	movlw	0
  3141  016C18  6EE6               	movwf	postinc1,c
  3142  016C1A  0E00               	movlw	0
  3143  016C1C  6EE6               	movwf	postinc1,c
  3144  016C1E  EC8E  F0BC         	call	_wdtdelay	;wreg free
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  3148  016C22  0E02               	movlw	2
  3149  016C24  013D               	movlb	61	; () banked
  3150  016C26  6F16               	movwf	22,b	;volatile
  3151                           
  3152                           ; BSR set to: 61
  3153                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  3154  016C28  0E40               	movlw	64
  3155  016C2A  6F15               	movwf	21,b	;volatile
  3156                           
  3157                           ; BSR set to: 61
  3158                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  3159  016C2C  0E83               	movlw	131
  3160  016C2E  6F14               	movwf	20,b	;volatile
  3161                           
  3162                           ; BSR set to: 61
  3163                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  3164  016C30  931A               	bcf	26,1,b	;volatile
  3165                           
  3166                           ; BSR set to: 61
  3167                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  3168  016C32  0E3F               	movlw	-193
  3169  016C34  013B               	movlb	59	; () banked
  3170  016C36  17FD               	andwf	253,f,b	;volatile
  3171                           
  3172                           ; BSR set to: 59
  3173                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  3174  016C38  9BFD               	bcf	253,5,b	;volatile
  3175                           
  3176                           ; BSR set to: 59
  3177                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  3178  016C3A  51FD               	movf	253,w,b	;volatile
  3179  016C3C  0BF9               	andlw	-7
  3180  016C3E  0902               	iorlw	2
  3181  016C40  6FFD               	movwf	253,b	;volatile
  3182                           
  3183                           ; BSR set to: 59
  3184                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  3185  016C42  0EE7               	movlw	-25
  3186  016C44  17FD               	andwf	253,f,b	;volatile
  3187                           
  3188                           ; BSR set to: 59
  3189                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  3190  016C46  81FD               	bsf	253,0,b	;volatile
  3191                           
  3192                           ; BSR set to: 59
  3193                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  3194  016C48  0E43               	movlw	low _ring_buf1
  3195  016C4A  6FF9               	movwf	249,b	;volatile
  3196  016C4C  0E04               	movlw	high _ring_buf1
  3197  016C4E  6FFA               	movwf	250,b	;volatile
  3198  016C50  0E00               	movlw	low (_ring_buf1 shr (0+16))
  3199  016C52  6FFB               	movwf	251,b	;volatile
  3200                           
  3201                           ; BSR set to: 59
  3202                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  3203  016C54  9BFC               	bcf	252,5,b	;volatile
  3204                           
  3205                           ; BSR set to: 59
  3206                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  3207  016C56  013D               	movlb	61	; () banked
  3208  016C58  831A               	bsf	26,1,b	;volatile
  3209                           
  3210                           ; BSR set to: 61
  3211                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  3212  016C5A  94BE               	bcf	190,2,c	;volatile
  3213                           
  3214                           ; BSR set to: 61
  3215                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3216  016C5C  0012               	return		;funcret
  3217  016C5E                     __end_of_init_display:
  3218                           	opt callstack 0
  3219                           
  3220 ;; *************** function _send_lcd_cmd_long *****************
  3221 ;; Defined at:
  3222 ;;		line 114 in file "eadog.c"
  3223 ;; Parameters:    Size  Location     Type
  3224 ;;  cmd             1  [STACK] const unsigned char 
  3225 ;; Auto vars:     Size  Location     Type
  3226 ;;		None
  3227 ;; Return value:  Size  Location     Type
  3228 ;;                  1  [STACK] void 
  3229 ;; Registers used:
  3230 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3231 ;; Tracked objects:
  3232 ;;		On entry : 3F/0
  3233 ;;		On exit  : 3F/0
  3234 ;;		Unchanged: 0/0
  3235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3240 ;;Total ram usage:        0 bytes
  3241 ;; Hardware stack levels used:    1
  3242 ;; Hardware stack levels required when called:    7
  3243 ;; This function calls:
  3244 ;;		_SPI1_Exchange8bit
  3245 ;;		_wdtdelay
  3246 ;; This function is called by:
  3247 ;;		_init_display
  3248 ;; This function uses a reentrant model
  3249 ;;
  3250                           
  3251                           	psect	text7
  3252  01805E                     __ptext7:
  3253                           	opt callstack 0
  3254  01805E                     _send_lcd_cmd_long:
  3255                           	opt callstack 22
  3256                           
  3257                           ; BSR set to: 61
  3258                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3259                           ;incstack = 0
  3260                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  3261  01805E  92BC               	bcf	188,1,c	;volatile
  3262                           
  3263                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  3264  018060  94BC               	bcf	188,2,c	;volatile
  3265                           
  3266                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  3267                           ;stkvar	_cmd @ sp[(0)+-1]
  3268  018062  0EFF               	movlw	-1
  3269  018064  50E3               	movf	plusw1,w,c
  3270  018066  6EE6               	movwf	postinc1,c
  3271  018068  EC13  F0C2         	call	_SPI1_Exchange8bit	;wreg free
  3272                           
  3273                           ; BSR set to: 57
  3274                           ;eadog.c: 119:  wdtdelay(800);
  3275  01806C  0E20               	movlw	32
  3276  01806E  6EE6               	movwf	postinc1,c
  3277  018070  0E03               	movlw	3
  3278  018072  6EE6               	movwf	postinc1,c
  3279  018074  0E00               	movlw	0
  3280  018076  6EE6               	movwf	postinc1,c
  3281  018078  0E00               	movlw	0
  3282  01807A  6EE6               	movwf	postinc1,c
  3283  01807C  EC8E  F0BC         	call	_wdtdelay	;wreg free
  3284                           
  3285                           ; BSR set to: 0
  3286  018080  82BC               	bsf	188,1,c	;volatile
  3287                           
  3288                           ; BSR set to: 0
  3289                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3290  018082  52E5               	movf	postdec1,f,c
  3291  018084  0012               	return		;funcret
  3292  018086                     __end_of_send_lcd_cmd_long:
  3293                           	opt callstack 0
  3294                           
  3295 ;; *************** function _send_lcd_cmd *****************
  3296 ;; Defined at:
  3297 ;;		line 102 in file "eadog.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  cmd             1  [STACK] const unsigned char 
  3300 ;; Auto vars:     Size  Location     Type
  3301 ;;		None
  3302 ;; Return value:  Size  Location     Type
  3303 ;;                  1  [STACK] void 
  3304 ;; Registers used:
  3305 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3306 ;; Tracked objects:
  3307 ;;		On entry : 3F/0
  3308 ;;		On exit  : 3F/0
  3309 ;;		Unchanged: 0/0
  3310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3315 ;;Total ram usage:        0 bytes
  3316 ;; Hardware stack levels used:    1
  3317 ;; Hardware stack levels required when called:    7
  3318 ;; This function calls:
  3319 ;;		_SPI1_Exchange8bit
  3320 ;;		_wdtdelay
  3321 ;; This function is called by:
  3322 ;;		_init_display
  3323 ;; This function uses a reentrant model
  3324 ;;
  3325                           
  3326                           	psect	text8
  3327  018086                     __ptext8:
  3328                           	opt callstack 0
  3329  018086                     _send_lcd_cmd:
  3330                           	opt callstack 22
  3331                           
  3332                           ; BSR set to: 0
  3333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3334                           ;incstack = 0
  3335                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3336  018086  92BC               	bcf	188,1,c	;volatile
  3337                           
  3338                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3339  018088  94BC               	bcf	188,2,c	;volatile
  3340                           
  3341                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3342                           ;stkvar	_cmd @ sp[(0)+-1]
  3343  01808A  0EFF               	movlw	-1
  3344  01808C  50E3               	movf	plusw1,w,c
  3345  01808E  6EE6               	movwf	postinc1,c
  3346  018090  EC13  F0C2         	call	_SPI1_Exchange8bit	;wreg free
  3347                           
  3348                           ; BSR set to: 57
  3349                           ;eadog.c: 107:  wdtdelay(30);
  3350  018094  0E1E               	movlw	30
  3351  018096  6EE6               	movwf	postinc1,c
  3352  018098  0E00               	movlw	0
  3353  01809A  6EE6               	movwf	postinc1,c
  3354  01809C  0E00               	movlw	0
  3355  01809E  6EE6               	movwf	postinc1,c
  3356  0180A0  0E00               	movlw	0
  3357  0180A2  6EE6               	movwf	postinc1,c
  3358  0180A4  EC8E  F0BC         	call	_wdtdelay	;wreg free
  3359                           
  3360                           ; BSR set to: 0
  3361  0180A8  82BC               	bsf	188,1,c	;volatile
  3362                           
  3363                           ; BSR set to: 0
  3364                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3365  0180AA  52E5               	movf	postdec1,f,c
  3366  0180AC  0012               	return		;funcret
  3367  0180AE                     __end_of_send_lcd_cmd:
  3368                           	opt callstack 0
  3369                           
  3370 ;; *************** function _SPI1_Exchange8bit *****************
  3371 ;; Defined at:
  3372 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;  data            1  [STACK] unsigned char 
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1  [STACK] unsigned char 
  3379 ;; Registers used:
  3380 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 3F/39
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3390 ;;Total ram usage:        0 bytes
  3391 ;; Hardware stack levels used:    1
  3392 ;; Hardware stack levels required when called:    6
  3393 ;; This function calls:
  3394 ;;		Nothing
  3395 ;; This function is called by:
  3396 ;;		_send_lcd_cmd
  3397 ;;		_send_lcd_cmd_long
  3398 ;; This function uses a reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text9
  3402  018426                     __ptext9:
  3403                           	opt callstack 0
  3404  018426                     _SPI1_Exchange8bit:
  3405                           	opt callstack 22
  3406                           
  3407                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3408                           
  3409                           ; BSR set to: 0
  3410                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3411                           ;incstack = 0
  3412  018426  0E01               	movlw	1
  3413  018428  013D               	movlb	61	; () banked
  3414  01842A  6F12               	movwf	18,b	;volatile
  3415                           
  3416                           ; BSR set to: 61
  3417                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3418                           ;stkvar	_data @ sp[(0)+-1]
  3419  01842C  0EFF               	movlw	-1
  3420  01842E  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3421  018434                     l835:
  3422                           
  3423                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3424  018434  0139               	movlb	57	; () banked
  3425  018436  A9A2               	btfss	162,4,b	;volatile
  3426  018438  D7FD               	goto	l835
  3427                           
  3428                           ; BSR set to: 57
  3429                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3430  01843A  006F F440  F032    	movff	15632,btemp	;volatile
  3431                           
  3432                           ; BSR set to: 57
  3433                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3434  018440  52E5               	movf	postdec1,f,c
  3435  018442  0012               	return		;funcret
  3436  018444                     __end_of_SPI1_Exchange8bit:
  3437                           	opt callstack 0
  3438                           
  3439 ;; *************** function _ringBufS_init *****************
  3440 ;; Defined at:
  3441 ;;		line 22 in file "ringbufs.c"
  3442 ;; Parameters:    Size  Location     Type
  3443 ;;  _this           2  [STACK] PTR volatile struct ring
  3444 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3445 ;; Auto vars:     Size  Location     Type
  3446 ;;		None
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  1  [STACK] void 
  3449 ;; Registers used:
  3450 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3460 ;;Total ram usage:        0 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; Hardware stack levels required when called:    7
  3463 ;; This function calls:
  3464 ;;		_memset
  3465 ;; This function is called by:
  3466 ;;		_init_display
  3467 ;; This function uses a reentrant model
  3468 ;;
  3469                           
  3470                           	psect	text10
  3471  0180AE                     __ptext10:
  3472                           	opt callstack 0
  3473  0180AE                     _ringBufS_init:
  3474                           	opt callstack 22
  3475                           
  3476                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3477                           
  3478                           ; BSR set to: 57
  3479                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3480                           ;incstack = 0
  3481  0180AE  0E43               	movlw	67
  3482  0180B0  6EE6               	movwf	postinc1,c
  3483  0180B2  0E00               	movlw	0
  3484  0180B4  6EE6               	movwf	postinc1,c
  3485  0180B6  0E00               	movlw	0
  3486  0180B8  6EE6               	movwf	postinc1,c
  3487  0180BA  0E00               	movlw	0
  3488  0180BC  6EE6               	movwf	postinc1,c
  3489                           
  3490                           ;stkvar	__this @ sp[(-4)+-2]
  3491  0180BE  0EFA               	movlw	-6
  3492  0180C0  006F FF8F FFE6     	movff	plusw1,postinc1
  3493  0180C6  006F FF8F FFE6     	movff	plusw1,postinc1
  3494  0180CC  EC2C  F0A4         	call	_memset	;wreg free
  3495                           
  3496                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3497  0180D0  52E5               	movf	postdec1,f,c
  3498  0180D2  52E5               	movf	postdec1,f,c
  3499  0180D4  0012               	return		;funcret
  3500  0180D6                     __end_of_ringBufS_init:
  3501                           	opt callstack 0
  3502                           
  3503 ;; *************** function _get_switch *****************
  3504 ;; Defined at:
  3505 ;;		line 18 in file "dio.c"
  3506 ;; Parameters:    Size  Location     Type
  3507 ;;  i               1  [STACK] unsigned char 
  3508 ;; Auto vars:     Size  Location     Type
  3509 ;;		None
  3510 ;; Return value:  Size  Location     Type
  3511 ;;                  1  [STACK] enum E17013
  3512 ;; Registers used:
  3513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  3514 ;; Tracked objects:
  3515 ;;		On entry : 0/39
  3516 ;;		On exit  : 0/0
  3517 ;;		Unchanged: 0/0
  3518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3523 ;;Total ram usage:        0 bytes
  3524 ;; Hardware stack levels used:    1
  3525 ;; Hardware stack levels required when called:    6
  3526 ;; This function calls:
  3527 ;;		Nothing
  3528 ;; This function is called by:
  3529 ;;		_main
  3530 ;; This function uses a reentrant model
  3531 ;;
  3532                           
  3533                           	psect	text11
  3534  0180D6                     __ptext11:
  3535                           	opt callstack 0
  3536  0180D6                     _get_switch:
  3537                           	opt callstack 24
  3538                           
  3539                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  3540                           ;stkvar	_i @ sp[(0)+-1]
  3541                           
  3542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3543                           ;incstack = 0
  3544  0180D6  0EFF               	movlw	-1
  3545  0180D8  006F FF8C  F032    	movff	plusw1,btemp
  3546  0180DE  0E03               	movlw	3
  3547  0180E0  6432               	cpfsgt	btemp^0,c
  3548  0180E2  D002               	goto	l12020
  3549                           
  3550                           ;dio.c: 21:   return SW_OFF;
  3551  0180E4  0E00               	movlw	0
  3552  0180E6  D008               	goto	L1
  3553  0180E8                     l12020:
  3554                           
  3555                           ;dio.c: 23:  return S.button[i].sw;
  3556                           ;stkvar	_i @ sp[(0)+-1]
  3557  0180E8  0EFF               	movlw	-1
  3558  0180EA  50E3               	movf	plusw1,w,c
  3559  0180EC  0D05               	mullw	5
  3560  0180EE  50F3               	movf	243,w,c
  3561  0180F0  0F60               	addlw	low _S
  3562  0180F2  6ED9               	movwf	fsr2l,c
  3563  0180F4  6ADA               	clrf	fsr2h,c
  3564  0180F6  50DF               	movf	indf2,w,c
  3565  0180F8                     L1:
  3566  0180F8  6E32               	movwf	btemp^0,c
  3567                           
  3568                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3569  0180FA  52E5               	movf	postdec1,f,c
  3570  0180FC  0012               	return		;funcret
  3571  0180FE                     __end_of_get_switch:
  3572                           	opt callstack 0
  3573                           
  3574 ;; *************** function _eaDogM_WriteCommand *****************
  3575 ;; Defined at:
  3576 ;;		line 160 in file "eadog.c"
  3577 ;; Parameters:    Size  Location     Type
  3578 ;;  cmd             1  [STACK] const unsigned char 
  3579 ;; Auto vars:     Size  Location     Type
  3580 ;;		None
  3581 ;; Return value:  Size  Location     Type
  3582 ;;                  1  [STACK] void 
  3583 ;; Registers used:
  3584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3585 ;; Tracked objects:
  3586 ;;		On entry : 3F/3D
  3587 ;;		On exit  : 3F/0
  3588 ;;		Unchanged: 0/0
  3589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3594 ;;Total ram usage:        0 bytes
  3595 ;; Hardware stack levels used:    1
  3596 ;; Hardware stack levels required when called:   16
  3597 ;; This function calls:
  3598 ;;		_send_lcd_cmd_dma
  3599 ;; This function is called by:
  3600 ;;		_main
  3601 ;; This function uses a reentrant model
  3602 ;;
  3603                           
  3604                           	psect	text12
  3605  0185E2                     __ptext12:
  3606                           	opt callstack 0
  3607  0185E2                     _eaDogM_WriteCommand:
  3608                           	opt callstack 14
  3609                           
  3610                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3611                           ;stkvar	_cmd @ sp[(0)+-1]
  3612                           
  3613                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3614                           ;incstack = 0
  3615  0185E2  0EFF               	movlw	-1
  3616  0185E4  50E3               	movf	plusw1,w,c
  3617  0185E6  6EE6               	movwf	postinc1,c
  3618  0185E8  EC15  F0BD         	call	_send_lcd_cmd_dma	;wreg free
  3619                           
  3620                           ; BSR set to: 0
  3621                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3622  0185EC  52E5               	movf	postdec1,f,c
  3623  0185EE  0012               	return		;funcret
  3624  0185F0                     __end_of_eaDogM_WriteCommand:
  3625                           	opt callstack 0
  3626                           
  3627 ;; *************** function _convert_adc_data *****************
  3628 ;; Defined at:
  3629 ;;		line 38 in file "mbmc.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;		None
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  i               1  [STACK] unsigned char 
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1  [STACK] void 
  3636 ;; Registers used:
  3637 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/39
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3647 ;;Total ram usage:        0 bytes
  3648 ;; Hardware stack levels used:    1
  3649 ;; Hardware stack levels required when called:    9
  3650 ;; This function calls:
  3651 ;;		_conv_raw_result
  3652 ;;		_lp_filter
  3653 ;; This function is called by:
  3654 ;;		_main
  3655 ;; This function uses a reentrant model
  3656 ;;
  3657                           
  3658                           	psect	text13
  3659  017516                     __ptext13:
  3660                           	opt callstack 0
  3661  017516                     _convert_adc_data:
  3662                           	opt callstack 0
  3663                           
  3664                           ; BSR set to: 0
  3665                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3666  017516  52E6               	movf	postinc1,f,c
  3667                           
  3668                           ;mbmc.c: 40:  uint8_t i = 0;
  3669                           ;stkvar	_i @ sp[(-1)+0]
  3670                           
  3671                           ;incstack = 0
  3672  017518  0EFF               	movlw	-1
  3673  01751A  6AE3               	clrf	plusw1,c
  3674  01751C                     l12008:
  3675                           
  3676                           ;mbmc.c: 44:   C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  3677  01751C  0E01               	movlw	1
  3678  01751E  6EE6               	movwf	postinc1,c
  3679                           
  3680                           ;stkvar	_i @ sp[(-2)+0]
  3681  017520  0EFE               	movlw	-2
  3682  017522  50E3               	movf	plusw1,w,c
  3683  017524  6EE6               	movwf	postinc1,c
  3684  017526  0E01               	movlw	1
  3685  017528  6EE6               	movwf	postinc1,c
  3686                           
  3687                           ;stkvar	_i @ sp[(-4)+0]
  3688  01752A  0EFC               	movlw	-4
  3689  01752C  50E3               	movf	plusw1,w,c
  3690  01752E  6EE6               	movwf	postinc1,c
  3691  017530  EC03  F09C         	call	_conv_raw_result	;wreg free
  3692  017534  0060  F0CB  FFE6   	movff	btemp,postinc1
  3693  01753A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3694  017540  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3695  017546  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3696  01754C  EC95  F0AD         	call	_lp_filter	;wreg free
  3697                           
  3698                           ;stkvar	_i @ sp[(-1)+0]
  3699  017550  0EFF               	movlw	-1
  3700  017552  50E3               	movf	plusw1,w,c
  3701  017554  0D04               	mullw	4
  3702  017556  0E00               	movlw	low _C
  3703  017558  24F3               	addwf	243,w,c
  3704  01755A  6ED9               	movwf	fsr2l,c
  3705  01755C  0E03               	movlw	high _C
  3706  01755E  20F4               	addwfc	prodh,w,c
  3707  017560  6EDA               	movwf	fsr2h,c
  3708  017562  0060  F0CB  FFDE   	movff	btemp,postinc2
  3709  017568  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3710  01756E  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3711  017574  0060  F0D7  FFDE   	movff	btemp+3,postinc2
  3712                           
  3713                           ;mbmc.c: 48:  } while (++i < 16);
  3714                           ;stkvar	_i @ sp[(-1)+0]
  3715  01757A  0EFF               	movlw	-1
  3716  01757C  2AE3               	incf	plusw1,f,c
  3717  01757E  0EFF               	movlw	-1
  3718  017580  006F FF8C  F032    	movff	plusw1,btemp
  3719  017586  0E0F               	movlw	15
  3720  017588  6432               	cpfsgt	btemp^0,c
  3721  01758A  D7C8               	goto	l12008
  3722                           
  3723                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3724  01758C  52E5               	movf	postdec1,f,c
  3725  01758E  0012               	return		;funcret
  3726  017590                     __end_of_convert_adc_data:
  3727                           	opt callstack 0
  3728                           
  3729 ;; *************** function _lp_filter *****************
  3730 ;; Defined at:
  3731 ;;		line 16 in file "mbmc.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  new             4  [STACK] const float 
  3734 ;;  bn              1  [STACK] const unsigned char 
  3735 ;;  slow            1  [STACK] const char 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;  lp_speed        4  [STACK] float 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  4  [STACK] float 
  3740 ;; Registers used:
  3741 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/39
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3751 ;;Total ram usage:        0 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:    8
  3754 ;; This function calls:
  3755 ;;		___fladd
  3756 ;;		___flmul
  3757 ;;		___flsub
  3758 ;; This function is called by:
  3759 ;;		_convert_adc_data
  3760 ;; This function uses a reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text14
  3764  015B2A                     __ptext14:
  3765                           	opt callstack 0
  3766  015B2A                     _lp_filter:
  3767                           	opt callstack 0
  3768                           
  3769                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3770  015B2A  52E6               	movf	postinc1,f,c
  3771  015B2C  52E6               	movf	postinc1,f,c
  3772  015B2E  52E6               	movf	postinc1,f,c
  3773  015B30  52E6               	movf	postinc1,f,c
  3774                           
  3775                           ;mbmc.c: 16: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 17: {;mbmc.c: 18:  static float smooth[16];;mbmc.c: 19:  float lp_speed;;mbmc.c: 21: 
      +                           if (bn >= 16)
  3776                           ;stkvar	_bn @ sp[(-4)+-5]
  3777                           
  3778                           ;incstack = 0
  3779  015B32  0EF7               	movlw	-9
  3780  015B34  006F FF8C  F032    	movff	plusw1,btemp
  3781  015B3A  0E0F               	movlw	15
  3782  015B3C  6432               	cpfsgt	btemp^0,c
  3783  015B3E  D011               	goto	l11862
  3784  015B40                     u12520:
  3785                           
  3786                           ;mbmc.c: 22:   return new;
  3787                           ;stkvar	_new @ sp[(-4)+-4]
  3788  015B40  0EF8               	movlw	-8
  3789  015B42  006F FF8C  F032    	movff	plusw1,btemp
  3790  015B48  0EF9               	movlw	-7
  3791  015B4A  006F FF8C  F033    	movff	plusw1,btemp+1
  3792  015B50  0EFA               	movlw	-6
  3793  015B52  006F FF8C  F034    	movff	plusw1,btemp+2
  3794  015B58  0EFB               	movlw	-5
  3795  015B5A  006F FF8C  F035    	movff	plusw1,btemp+3
  3796  015B60  D0BF               	goto	l1700
  3797  015B62                     l11862:
  3798                           
  3799                           ;mbmc.c: 24:  if (slow == (-1)) {
  3800                           ;stkvar	_slow @ sp[(-4)+-6]
  3801  015B62  0EF6               	movlw	-10
  3802  015B64  28E3               	incf	plusw1,w,c
  3803  015B66  A4D8               	btfss	status,2,c
  3804  015B68  D012               	goto	l11870
  3805                           
  3806                           ;mbmc.c: 25:   smooth[bn] = 0.0;
  3807                           ;stkvar	_bn @ sp[(-4)+-5]
  3808  015B6A  0EF7               	movlw	-9
  3809  015B6C  50E3               	movf	plusw1,w,c
  3810  015B6E  0D04               	mullw	4
  3811  015B70  0E00               	movlw	low lp_filter@smooth
  3812  015B72  24F3               	addwf	243,w,c
  3813  015B74  6ED9               	movwf	fsr2l,c
  3814  015B76  0E02               	movlw	high lp_filter@smooth
  3815  015B78  20F4               	addwfc	prodh,w,c
  3816  015B7A  6EDA               	movwf	fsr2h,c
  3817  015B7C  0E00               	movlw	0
  3818  015B7E  6EDE               	movwf	postinc2,c
  3819  015B80  0E00               	movlw	0
  3820  015B82  6EDE               	movwf	postinc2,c
  3821  015B84  0E00               	movlw	0
  3822  015B86  6EDE               	movwf	postinc2,c
  3823  015B88  0E00               	movlw	0
  3824  015B8A  6EDD               	movwf	postdec2,c
  3825  015B8C  D7D9               	goto	u12520
  3826  015B8E                     l11870:
  3827                           
  3828                           ;mbmc.c: 29:  if (slow) {
  3829                           ;stkvar	_slow @ sp[(-4)+-6]
  3830  015B8E  0EF6               	movlw	-10
  3831  015B90  50E3               	movf	plusw1,w,c
  3832  015B92  B4D8               	btfsc	status,2,c
  3833  015B94  D008               	goto	l11874
  3834                           
  3835                           ;mbmc.c: 30:   lp_speed = 0.066;
  3836  015B96  0E02               	movlw	2
  3837  015B98  6E3A               	movwf	(btemp+8)^0,c
  3838  015B9A  0E2B               	movlw	43
  3839  015B9C  6E3B               	movwf	(btemp+9)^0,c
  3840  015B9E  0E87               	movlw	135
  3841  015BA0  6E3C               	movwf	(btemp+10)^0,c
  3842  015BA2  0E3D               	movlw	61
  3843  015BA4  D007               	goto	L2
  3844  015BA6                     l11874:
  3845                           
  3846                           ;mbmc.c: 32:   lp_speed = 0.125;
  3847  015BA6  0E00               	movlw	0
  3848  015BA8  6E3A               	movwf	(btemp+8)^0,c
  3849  015BAA  0E00               	movlw	0
  3850  015BAC  6E3B               	movwf	(btemp+9)^0,c
  3851  015BAE  0E00               	movlw	0
  3852  015BB0  6E3C               	movwf	(btemp+10)^0,c
  3853  015BB2  0E3E               	movlw	62
  3854  015BB4                     L2:
  3855  015BB4  6E3D               	movwf	(btemp+11)^0,c
  3856                           
  3857                           ;stkvar	_lp_speed @ sp[(-4)+0]
  3858  015BB6  0EFC               	movlw	-4
  3859  015BB8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  3860  015BBE  0EFD               	movlw	-3
  3861  015BC0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  3862  015BC6  0EFE               	movlw	-2
  3863  015BC8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  3864  015BCE  0EFF               	movlw	-1
  3865  015BD0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  3866                           
  3867                           ;mbmc.c: 35:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
  3868                           ;stkvar	_bn @ sp[(-4)+-5]
  3869  015BD6  0EF7               	movlw	-9
  3870  015BD8  50E3               	movf	plusw1,w,c
  3871  015BDA  0D04               	mullw	4
  3872  015BDC  0E00               	movlw	low lp_filter@smooth
  3873  015BDE  24F3               	addwf	243,w,c
  3874  015BE0  6ED9               	movwf	fsr2l,c
  3875  015BE2  0E02               	movlw	high lp_filter@smooth
  3876  015BE4  20F4               	addwfc	prodh,w,c
  3877  015BE6  6EDA               	movwf	fsr2h,c
  3878  015BE8  006F FF7B FFE6     	movff	postinc2,postinc1
  3879  015BEE  006F FF7B FFE6     	movff	postinc2,postinc1
  3880  015BF4  006F FF7B FFE6     	movff	postinc2,postinc1
  3881  015BFA  006F FF7B FFE6     	movff	postinc2,postinc1
  3882                           
  3883                           ;stkvar	_lp_speed @ sp[(-8)+0]
  3884  015C00  0EF8               	movlw	-8
  3885  015C02  006F FF8F FFE6     	movff	plusw1,postinc1
  3886  015C08  006F FF8F FFE6     	movff	plusw1,postinc1
  3887  015C0E  006F FF8F FFE6     	movff	plusw1,postinc1
  3888  015C14  006F FF8F FFE6     	movff	plusw1,postinc1
  3889                           
  3890                           ;stkvar	_bn @ sp[(-12)+-5]
  3891  015C1A  0EEF               	movlw	-17
  3892  015C1C  50E3               	movf	plusw1,w,c
  3893  015C1E  0D04               	mullw	4
  3894  015C20  0E00               	movlw	low lp_filter@smooth
  3895  015C22  24F3               	addwf	243,w,c
  3896  015C24  6ED9               	movwf	fsr2l,c
  3897  015C26  0E02               	movlw	high lp_filter@smooth
  3898  015C28  20F4               	addwfc	prodh,w,c
  3899  015C2A  6EDA               	movwf	fsr2h,c
  3900  015C2C  006F FF7B FFE6     	movff	postinc2,postinc1
  3901  015C32  006F FF7B FFE6     	movff	postinc2,postinc1
  3902  015C38  006F FF7B FFE6     	movff	postinc2,postinc1
  3903  015C3E  006F FF7B FFE6     	movff	postinc2,postinc1
  3904                           
  3905                           ;stkvar	_new @ sp[(-16)+-4]
  3906  015C44  0EEC               	movlw	-20
  3907  015C46  006F FF8F FFE6     	movff	plusw1,postinc1
  3908  015C4C  006F FF8F FFE6     	movff	plusw1,postinc1
  3909  015C52  006F FF8F FFE6     	movff	plusw1,postinc1
  3910  015C58  006F FF8F FFE6     	movff	plusw1,postinc1
  3911  015C5E  EC8B  F0BD         	call	___flsub	;wreg free
  3912  015C62  0060  F0CB  FFE6   	movff	btemp,postinc1
  3913  015C68  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3914  015C6E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3915  015C74  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3916  015C7A  ECC1  F08E         	call	___flmul	;wreg free
  3917  015C7E  0060  F0CB  FFE6   	movff	btemp,postinc1
  3918  015C84  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  3919  015C8A  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  3920  015C90  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  3921  015C96  ECD6  F092         	call	___fladd	;wreg free
  3922                           
  3923                           ;stkvar	_bn @ sp[(-4)+-5]
  3924  015C9A  0EF7               	movlw	-9
  3925  015C9C  50E3               	movf	plusw1,w,c
  3926  015C9E  0D04               	mullw	4
  3927  015CA0  0E00               	movlw	low lp_filter@smooth
  3928  015CA2  24F3               	addwf	243,w,c
  3929  015CA4  6ED9               	movwf	fsr2l,c
  3930  015CA6  0E02               	movlw	high lp_filter@smooth
  3931  015CA8  20F4               	addwfc	prodh,w,c
  3932  015CAA  6EDA               	movwf	fsr2h,c
  3933  015CAC  0060  F0CB  FFDE   	movff	btemp,postinc2
  3934  015CB2  0060  F0CF  FFDE   	movff	btemp+1,postinc2
  3935  015CB8  0060  F0D3  FFDE   	movff	btemp+2,postinc2
  3936  015CBE  0060  F0D7  FFDD   	movff	btemp+3,postdec2
  3937  015CC4  52DD               	movf	postdec2,f,c
  3938  015CC6  52DD               	movf	postdec2,f,c
  3939  015CC8  006F FF78  F032    	movff	postinc2,btemp
  3940  015CCE  006F FF78  F033    	movff	postinc2,btemp+1
  3941  015CD4  006F FF78  F034    	movff	postinc2,btemp+2
  3942  015CDA  006F FF78  F035    	movff	postinc2,btemp+3
  3943  015CE0                     l1700:
  3944                           
  3945                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  3946  015CE0  0EF6               	movlw	246
  3947  015CE2  26E1               	addwf	fsr1l,f,c
  3948  015CE4  0EFF               	movlw	255
  3949  015CE6  22E2               	addwfc	fsr1h,f,c
  3950  015CE8  0012               	return		;funcret
  3951  015CEA                     __end_of_lp_filter:
  3952                           	opt callstack 0
  3953                           
  3954 ;; *************** function _conv_raw_result *****************
  3955 ;; Defined at:
  3956 ;;		line 80 in file "daq.c"
  3957 ;; Parameters:    Size  Location     Type
  3958 ;;  chan            1  [STACK] const enum E16136
  3959 ;;  to_what         1  [STACK] const enum E16198
  3960 ;; Auto vars:     Size  Location     Type
  3961 ;;		None
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  4  [STACK] float 
  3964 ;; Registers used:
  3965 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/39
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3975 ;;Total ram usage:        0 bytes
  3976 ;; Hardware stack levels used:    1
  3977 ;; Hardware stack levels required when called:    8
  3978 ;; This function calls:
  3979 ;;		___fldiv
  3980 ;;		___flmul
  3981 ;;		___flsub
  3982 ;;		___xxtofl
  3983 ;;		_get_raw_result
  3984 ;;		_nanf
  3985 ;; This function is called by:
  3986 ;;		_convert_adc_data
  3987 ;; This function uses a reentrant model
  3988 ;;
  3989                           
  3990                           	psect	text15
  3991  013806                     __ptext15:
  3992                           	opt callstack 0
  3993  013806                     _conv_raw_result:
  3994                           	opt callstack 21
  3995                           
  3996                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  3997                           
  3998                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3999                           ;incstack = 0
  4000  013806  D242               	goto	l11846
  4001  013808                     l11792:
  4002                           
  4003                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  4004                           ;stkvar	_chan @ sp[(0)+-1]
  4005  013808  0EFF               	movlw	-1
  4006  01380A  006F FF8C  F03D    	movff	plusw1,btemp+11
  4007  013810  0E77               	movlw	119
  4008  013812  6E3A               	movwf	(btemp+8)^0,c
  4009  013814  0E3C               	movlw	60
  4010  013816  6E3B               	movwf	(btemp+9)^0,c
  4011  013818  2A3D               	incf	(btemp+11)^0,f,c
  4012  01381A  D003               	goto	u12404
  4013  01381C                     u12405:
  4014  01381C  343B               	rlcf	(btemp+9)^0,w,c
  4015  01381E  323B               	rrcf	(btemp+9)^0,f,c
  4016  013820  323A               	rrcf	(btemp+8)^0,f,c
  4017  013822                     u12404:
  4018  013822  2E3D               	decfsz	(btemp+11)^0,f,c
  4019  013824  D7FB               	goto	u12405
  4020  013826  B03A               	btfsc	(btemp+8)^0,0,c
  4021  013828  D007               	goto	l11798
  4022                           
  4023                           ;daq.c: 86:    return nanf("");
  4024  01382A  0E17               	movlw	low (STR_27+18)
  4025  01382C  6EE6               	movwf	postinc1,c
  4026  01382E  0EFF               	movlw	high (STR_27+18)
  4027  013830  6EE6               	movwf	postinc1,c
  4028  013832  ECFD  F0BB         	call	_nanf	;wreg free
  4029  013836  D23A               	goto	l1663
  4030  013838                     l11798:
  4031                           
  4032                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  4033                           ;stkvar	_chan @ sp[(0)+-1]
  4034  013838  0EFF               	movlw	-1
  4035  01383A  006F FF8C  F03D    	movff	plusw1,btemp+11
  4036  013840  0E03               	movlw	3
  4037  013842  6E3A               	movwf	(btemp+8)^0,c
  4038  013844  0E00               	movlw	0
  4039  013846  6E3B               	movwf	(btemp+9)^0,c
  4040  013848  2A3D               	incf	(btemp+11)^0,f,c
  4041  01384A  D003               	goto	u12424
  4042  01384C                     u12425:
  4043  01384C  343B               	rlcf	(btemp+9)^0,w,c
  4044  01384E  323B               	rrcf	(btemp+9)^0,f,c
  4045  013850  323A               	rrcf	(btemp+8)^0,f,c
  4046  013852                     u12424:
  4047  013852  2E3D               	decfsz	(btemp+11)^0,f,c
  4048  013854  D7FB               	goto	u12425
  4049  013856  A03A               	btfss	(btemp+8)^0,0,c
  4050  013858  D0EB               	goto	l11812
  4051                           
  4052                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  4053                           ;stkvar	_chan @ sp[(0)+-1]
  4054  01385A  0EFF               	movlw	-1
  4055  01385C  006F FF8C  F03D    	movff	plusw1,btemp+11
  4056  013862  0E01               	movlw	1
  4057  013864  6E3A               	movwf	(btemp+8)^0,c
  4058  013866  0E00               	movlw	0
  4059  013868  6E3B               	movwf	(btemp+9)^0,c
  4060  01386A  2A3D               	incf	(btemp+11)^0,f,c
  4061  01386C  D003               	goto	u12444
  4062  01386E                     u12445:
  4063  01386E  343B               	rlcf	(btemp+9)^0,w,c
  4064  013870  323B               	rrcf	(btemp+9)^0,f,c
  4065  013872  323A               	rrcf	(btemp+8)^0,f,c
  4066  013874                     u12444:
  4067  013874  2E3D               	decfsz	(btemp+11)^0,f,c
  4068  013876  D7FB               	goto	u12445
  4069  013878  A03A               	btfss	(btemp+8)^0,0,c
  4070  01387A  D06D               	goto	l11808
  4071                           
  4072                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.14385
      +                          00;
  4073  01387C  0E6A               	movlw	106
  4074  01387E  6EE6               	movwf	postinc1,c
  4075  013880  0E4D               	movlw	77
  4076  013882  6EE6               	movwf	postinc1,c
  4077  013884  0E13               	movlw	19
  4078  013886  6EE6               	movwf	postinc1,c
  4079  013888  0E3E               	movlw	62
  4080  01388A  6EE6               	movwf	postinc1,c
  4081  01388C  0060  F39C  F03A   	movff	_R+32,btemp+8	;volatile
  4082  013892  0060  F3A0  F03B   	movff	_R+33,btemp+9	;volatile
  4083  013898  0E00               	movlw	0
  4084  01389A  BE3B               	btfsc	(btemp+9)^0,7,c
  4085  01389C  0EFF               	movlw	255
  4086  01389E  6E3C               	movwf	(btemp+10)^0,c
  4087  0138A0  6E3D               	movwf	(btemp+11)^0,c
  4088  0138A2  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4089  0138A8  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4090  0138AE  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4091  0138B4  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4092  0138BA  0E01               	movlw	1
  4093  0138BC  6EE6               	movwf	postinc1,c
  4094  0138BE  ECAF  F0AB         	call	___xxtofl	;wreg free
  4095  0138C2  0060  F0CB  FFE6   	movff	btemp,postinc1
  4096  0138C8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4097  0138CE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4098  0138D4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4099                           
  4100                           ;stkvar	_chan @ sp[(-8)+-1]
  4101  0138DA  0EF7               	movlw	-9
  4102  0138DC  50E3               	movf	plusw1,w,c
  4103  0138DE  6EE6               	movwf	postinc1,c
  4104  0138E0  EC22  F0C2         	call	_get_raw_result	;wreg free
  4105  0138E4  0060  F0C8  F03C   	movff	btemp,btemp+10
  4106  0138EA  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4107  0138F0  503C               	movf	(btemp+10)^0,w,c
  4108  0138F2  6E36               	movwf	(btemp+4)^0,c
  4109  0138F4  503D               	movf	(btemp+11)^0,w,c
  4110  0138F6  6E37               	movwf	(btemp+5)^0,c
  4111  0138F8  6A38               	clrf	(btemp+6)^0,c
  4112  0138FA  6A39               	clrf	(btemp+7)^0,c
  4113  0138FC  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4114  013902  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4115  013908  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4116  01390E  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4117  013914  0E00               	movlw	0
  4118  013916  6EE6               	movwf	postinc1,c
  4119  013918  ECAF  F0AB         	call	___xxtofl	;wreg free
  4120  01391C  0060  F0CB  FFE6   	movff	btemp,postinc1
  4121  013922  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4122  013928  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4123  01392E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4124  013934  EC8B  F0BD         	call	___flsub	;wreg free
  4125  013938  0060  F0CB  FFE6   	movff	btemp,postinc1
  4126  01393E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4127  013944  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4128  01394A  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4129  013950  ECC1  F08E         	call	___flmul	;wreg free
  4130  013954  D1AB               	goto	l1663
  4131  013956                     l11808:
  4132                           
  4133                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.06010
      +                          00;
  4134  013956  0E6B               	movlw	107
  4135  013958  6EE6               	movwf	postinc1,c
  4136  01395A  0E2B               	movlw	43
  4137  01395C  6EE6               	movwf	postinc1,c
  4138  01395E  0E76               	movlw	118
  4139  013960  6EE6               	movwf	postinc1,c
  4140  013962  0E3D               	movlw	61
  4141  013964  6EE6               	movwf	postinc1,c
  4142  013966  0060  F3A4  F03A   	movff	_R+34,btemp+8	;volatile
  4143  01396C  0060  F3A8  F03B   	movff	_R+35,btemp+9	;volatile
  4144  013972  0E00               	movlw	0
  4145  013974  BE3B               	btfsc	(btemp+9)^0,7,c
  4146  013976  0EFF               	movlw	255
  4147  013978  6E3C               	movwf	(btemp+10)^0,c
  4148  01397A  6E3D               	movwf	(btemp+11)^0,c
  4149  01397C  0060  F0EB  FFE6   	movff	btemp+8,postinc1
  4150  013982  0060  F0EF  FFE6   	movff	btemp+9,postinc1
  4151  013988  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  4152  01398E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  4153  013994  0E01               	movlw	1
  4154  013996  6EE6               	movwf	postinc1,c
  4155  013998  ECAF  F0AB         	call	___xxtofl	;wreg free
  4156  01399C  0060  F0CB  FFE6   	movff	btemp,postinc1
  4157  0139A2  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4158  0139A8  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4159  0139AE  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4160                           
  4161                           ;stkvar	_chan @ sp[(-8)+-1]
  4162  0139B4  0EF7               	movlw	-9
  4163  0139B6  50E3               	movf	plusw1,w,c
  4164  0139B8  6EE6               	movwf	postinc1,c
  4165  0139BA  EC22  F0C2         	call	_get_raw_result	;wreg free
  4166  0139BE  0060  F0C8  F03C   	movff	btemp,btemp+10
  4167  0139C4  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4168  0139CA  503C               	movf	(btemp+10)^0,w,c
  4169  0139CC  6E36               	movwf	(btemp+4)^0,c
  4170  0139CE  503D               	movf	(btemp+11)^0,w,c
  4171  0139D0  6E37               	movwf	(btemp+5)^0,c
  4172  0139D2  6A38               	clrf	(btemp+6)^0,c
  4173  0139D4  6A39               	clrf	(btemp+7)^0,c
  4174  0139D6  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4175  0139DC  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4176  0139E2  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4177  0139E8  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4178  0139EE  0E00               	movlw	0
  4179  0139F0  6EE6               	movwf	postinc1,c
  4180  0139F2  ECAF  F0AB         	call	___xxtofl	;wreg free
  4181  0139F6  0060  F0CB  FFE6   	movff	btemp,postinc1
  4182  0139FC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4183  013A02  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4184  013A08  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4185  013A0E  EC8B  F0BD         	call	___flsub	;wreg free
  4186  013A12  0060  F0CB  FFE6   	movff	btemp,postinc1
  4187  013A18  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4188  013A1E  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4189  013A24  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4190  013A2A  ECC1  F08E         	call	___flmul	;wreg free
  4191  013A2E  D13E               	goto	l1663
  4192  013A30                     l11812:
  4193                           
  4194                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  4195                           ;stkvar	_chan @ sp[(0)+-1]
  4196  013A30  0EFF               	movlw	-1
  4197  013A32  006F FF8C  F03D    	movff	plusw1,btemp+11
  4198  013A38  0E00               	movlw	0
  4199  013A3A  6E3A               	movwf	(btemp+8)^0,c
  4200  013A3C  0E08               	movlw	8
  4201  013A3E  6E3B               	movwf	(btemp+9)^0,c
  4202  013A40  2A3D               	incf	(btemp+11)^0,f,c
  4203  013A42  D003               	goto	u12464
  4204  013A44                     u12465:
  4205  013A44  343B               	rlcf	(btemp+9)^0,w,c
  4206  013A46  323B               	rrcf	(btemp+9)^0,f,c
  4207  013A48  323A               	rrcf	(btemp+8)^0,f,c
  4208  013A4A                     u12464:
  4209  013A4A  2E3D               	decfsz	(btemp+11)^0,f,c
  4210  013A4C  D7FB               	goto	u12465
  4211  013A4E  A03A               	btfss	(btemp+8)^0,0,c
  4212  013A50  D008               	goto	l11820
  4213                           
  4214                           ;daq.c: 96:     return 25.0;
  4215  013A52  0E00               	movlw	0
  4216  013A54  6E32               	movwf	btemp^0,c
  4217  013A56  0E00               	movlw	0
  4218  013A58  6E33               	movwf	(btemp+1)^0,c
  4219  013A5A  0EC8               	movlw	200
  4220  013A5C  6E34               	movwf	(btemp+2)^0,c
  4221  013A5E  0E41               	movlw	65
  4222  013A60  D113               	goto	L3
  4223  013A62                     l11820:
  4224                           
  4225                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4226  013A62  0E00               	movlw	0
  4227  013A64  6EE6               	movwf	postinc1,c
  4228  013A66  0E00               	movlw	0
  4229  013A68  6EE6               	movwf	postinc1,c
  4230  013A6A  0E7A               	movlw	122
  4231  013A6C  6EE6               	movwf	postinc1,c
  4232  013A6E  0E44               	movlw	68
  4233  013A70  6EE6               	movwf	postinc1,c
  4234  013A72  0E61               	movlw	97
  4235  013A74  6EE6               	movwf	postinc1,c
  4236  013A76  0E03               	movlw	3
  4237  013A78  6EE6               	movwf	postinc1,c
  4238  013A7A  0E84               	movlw	132
  4239  013A7C  6EE6               	movwf	postinc1,c
  4240  013A7E  0E40               	movlw	64
  4241  013A80  6EE6               	movwf	postinc1,c
  4242                           
  4243                           ;stkvar	_chan @ sp[(-8)+-1]
  4244  013A82  0EF7               	movlw	-9
  4245  013A84  50E3               	movf	plusw1,w,c
  4246  013A86  6EE6               	movwf	postinc1,c
  4247  013A88  EC22  F0C2         	call	_get_raw_result	;wreg free
  4248  013A8C  0060  F0C8  F03C   	movff	btemp,btemp+10
  4249  013A92  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4250  013A98  503C               	movf	(btemp+10)^0,w,c
  4251  013A9A  6E36               	movwf	(btemp+4)^0,c
  4252  013A9C  503D               	movf	(btemp+11)^0,w,c
  4253  013A9E  6E37               	movwf	(btemp+5)^0,c
  4254  013AA0  6A38               	clrf	(btemp+6)^0,c
  4255  013AA2  6A39               	clrf	(btemp+7)^0,c
  4256  013AA4  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4257  013AAA  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4258  013AB0  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4259  013AB6  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4260  013ABC  0E00               	movlw	0
  4261  013ABE  6EE6               	movwf	postinc1,c
  4262  013AC0  ECAF  F0AB         	call	___xxtofl	;wreg free
  4263  013AC4  0060  F0CB  FFE6   	movff	btemp,postinc1
  4264  013ACA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4265  013AD0  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4266  013AD6  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4267  013ADC  ECC1  F08E         	call	___flmul	;wreg free
  4268  013AE0  0060  F0CB  FFE6   	movff	btemp,postinc1
  4269  013AE6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4270  013AEC  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4271  013AF2  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4272  013AF8  ECB4  F096         	call	___fldiv	;wreg free
  4273  013AFC  D0D7               	goto	l1663
  4274  013AFE                     l11824:
  4275                           
  4276                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  4277                           ;stkvar	_chan @ sp[(0)+-1]
  4278  013AFE  0EFF               	movlw	-1
  4279  013B00  006F FF8C  F03D    	movff	plusw1,btemp+11
  4280  013B06  0E03               	movlw	3
  4281  013B08  6E3A               	movwf	(btemp+8)^0,c
  4282  013B0A  0E00               	movlw	0
  4283  013B0C  6E3B               	movwf	(btemp+9)^0,c
  4284  013B0E  2A3D               	incf	(btemp+11)^0,f,c
  4285  013B10  D003               	goto	u12484
  4286  013B12                     u12485:
  4287  013B12  343B               	rlcf	(btemp+9)^0,w,c
  4288  013B14  323B               	rrcf	(btemp+9)^0,f,c
  4289  013B16  323A               	rrcf	(btemp+8)^0,f,c
  4290  013B18                     u12484:
  4291  013B18  2E3D               	decfsz	(btemp+11)^0,f,c
  4292  013B1A  D7FB               	goto	u12485
  4293  013B1C  B03A               	btfsc	(btemp+8)^0,0,c
  4294  013B1E  D011               	goto	u12510
  4295                           
  4296                           ;stkvar	_chan @ sp[(0)+-1]
  4297  013B20  0EFF               	movlw	-1
  4298  013B22  006F FF8C  F03D    	movff	plusw1,btemp+11
  4299  013B28  0E00               	movlw	0
  4300  013B2A  6E3A               	movwf	(btemp+8)^0,c
  4301  013B2C  0E08               	movlw	8
  4302  013B2E  6E3B               	movwf	(btemp+9)^0,c
  4303  013B30  2A3D               	incf	(btemp+11)^0,f,c
  4304  013B32  D003               	goto	u12504
  4305  013B34                     u12505:
  4306  013B34  343B               	rlcf	(btemp+9)^0,w,c
  4307  013B36  323B               	rrcf	(btemp+9)^0,f,c
  4308  013B38  323A               	rrcf	(btemp+8)^0,f,c
  4309  013B3A                     u12504:
  4310  013B3A  2E3D               	decfsz	(btemp+11)^0,f,c
  4311  013B3C  D7FB               	goto	u12505
  4312  013B3E  A03A               	btfss	(btemp+8)^0,0,c
  4313  013B40  D04E               	goto	l11832
  4314  013B42                     u12510:
  4315                           
  4316                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  4317  013B42  0E00               	movlw	0
  4318  013B44  6EE6               	movwf	postinc1,c
  4319  013B46  0E00               	movlw	0
  4320  013B48  6EE6               	movwf	postinc1,c
  4321  013B4A  0E7A               	movlw	122
  4322  013B4C  6EE6               	movwf	postinc1,c
  4323  013B4E  0E44               	movlw	68
  4324  013B50  6EE6               	movwf	postinc1,c
  4325  013B52  0E00               	movlw	0
  4326  013B54  6EE6               	movwf	postinc1,c
  4327  013B56  0E00               	movlw	0
  4328  013B58  6EE6               	movwf	postinc1,c
  4329  013B5A  0E20               	movlw	32
  4330  013B5C  6EE6               	movwf	postinc1,c
  4331  013B5E  0E3F               	movlw	63
  4332  013B60  6EE6               	movwf	postinc1,c
  4333                           
  4334                           ;stkvar	_chan @ sp[(-8)+-1]
  4335  013B62  0EF7               	movlw	-9
  4336  013B64  50E3               	movf	plusw1,w,c
  4337  013B66  6EE6               	movwf	postinc1,c
  4338  013B68  EC22  F0C2         	call	_get_raw_result	;wreg free
  4339  013B6C  0060  F0C8  F03C   	movff	btemp,btemp+10
  4340  013B72  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4341  013B78  503C               	movf	(btemp+10)^0,w,c
  4342  013B7A  6E36               	movwf	(btemp+4)^0,c
  4343  013B7C  503D               	movf	(btemp+11)^0,w,c
  4344  013B7E  6E37               	movwf	(btemp+5)^0,c
  4345  013B80  6A38               	clrf	(btemp+6)^0,c
  4346  013B82  6A39               	clrf	(btemp+7)^0,c
  4347  013B84  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4348  013B8A  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4349  013B90  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4350  013B96  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4351  013B9C  0E00               	movlw	0
  4352  013B9E  6EE6               	movwf	postinc1,c
  4353  013BA0  ECAF  F0AB         	call	___xxtofl	;wreg free
  4354  013BA4  0060  F0CB  FFE6   	movff	btemp,postinc1
  4355  013BAA  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4356  013BB0  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4357  013BB6  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4358  013BBC  ECC1  F08E         	call	___flmul	;wreg free
  4359  013BC0  0060  F0CB  FFE6   	movff	btemp,postinc1
  4360  013BC6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4361  013BCC  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4362  013BD2  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4363  013BD8  ECB4  F096         	call	___fldiv	;wreg free
  4364  013BDC  D067               	goto	l1663
  4365  013BDE                     l11832:
  4366                           
  4367                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  4368  013BDE  0E00               	movlw	0
  4369  013BE0  6EE6               	movwf	postinc1,c
  4370  013BE2  0E00               	movlw	0
  4371  013BE4  6EE6               	movwf	postinc1,c
  4372  013BE6  0E7A               	movlw	122
  4373  013BE8  6EE6               	movwf	postinc1,c
  4374  013BEA  0E44               	movlw	68
  4375  013BEC  6EE6               	movwf	postinc1,c
  4376  013BEE  0E61               	movlw	97
  4377  013BF0  6EE6               	movwf	postinc1,c
  4378  013BF2  0E03               	movlw	3
  4379  013BF4  6EE6               	movwf	postinc1,c
  4380  013BF6  0E84               	movlw	132
  4381  013BF8  6EE6               	movwf	postinc1,c
  4382  013BFA  0E40               	movlw	64
  4383  013BFC  6EE6               	movwf	postinc1,c
  4384                           
  4385                           ;stkvar	_chan @ sp[(-8)+-1]
  4386  013BFE  0EF7               	movlw	-9
  4387  013C00  50E3               	movf	plusw1,w,c
  4388  013C02  6EE6               	movwf	postinc1,c
  4389  013C04  EC22  F0C2         	call	_get_raw_result	;wreg free
  4390  013C08  0060  F0C8  F03C   	movff	btemp,btemp+10
  4391  013C0E  0060  F0CC  F03D   	movff	btemp+1,btemp+11
  4392  013C14  503C               	movf	(btemp+10)^0,w,c
  4393  013C16  6E36               	movwf	(btemp+4)^0,c
  4394  013C18  503D               	movf	(btemp+11)^0,w,c
  4395  013C1A  6E37               	movwf	(btemp+5)^0,c
  4396  013C1C  6A38               	clrf	(btemp+6)^0,c
  4397  013C1E  6A39               	clrf	(btemp+7)^0,c
  4398  013C20  0060  F0DB  FFE6   	movff	btemp+4,postinc1
  4399  013C26  0060  F0DF  FFE6   	movff	btemp+5,postinc1
  4400  013C2C  0060  F0E3  FFE6   	movff	btemp+6,postinc1
  4401  013C32  0060  F0E7  FFE6   	movff	btemp+7,postinc1
  4402  013C38  0E00               	movlw	0
  4403  013C3A  6EE6               	movwf	postinc1,c
  4404  013C3C  ECAF  F0AB         	call	___xxtofl	;wreg free
  4405  013C40  0060  F0CB  FFE6   	movff	btemp,postinc1
  4406  013C46  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4407  013C4C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4408  013C52  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4409  013C58  ECC1  F08E         	call	___flmul	;wreg free
  4410  013C5C  0060  F0CB  FFE6   	movff	btemp,postinc1
  4411  013C62  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  4412  013C68  0060  F0D3  FFE6   	movff	btemp+2,postinc1
  4413  013C6E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
  4414  013C74  ECB4  F096         	call	___fldiv	;wreg free
  4415  013C78  D019               	goto	l1663
  4416  013C7A                     l11838:
  4417                           
  4418                           ;daq.c: 109:   return 0.0;
  4419  013C7A  0E00               	movlw	0
  4420  013C7C  6E32               	movwf	btemp^0,c
  4421  013C7E  0E00               	movlw	0
  4422  013C80  6E33               	movwf	(btemp+1)^0,c
  4423  013C82  0E00               	movlw	0
  4424  013C84  6E34               	movwf	(btemp+2)^0,c
  4425  013C86  0E00               	movlw	0
  4426  013C88                     L3:
  4427  013C88  6E35               	movwf	(btemp+3)^0,c
  4428  013C8A  D010               	goto	l1663
  4429  013C8C                     l11846:
  4430                           
  4431                           ;stkvar	_to_what @ sp[(0)+-2]
  4432  013C8C  0EFE               	movlw	-2
  4433  013C8E  50E3               	movf	plusw1,w,c
  4434  013C90  6E3C               	movwf	(btemp+10)^0,c
  4435  013C92  6A3D               	clrf	(btemp+11)^0,c
  4436                           
  4437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4438                           ; Switch size 1, requested type "simple"
  4439                           ; Number of cases is 1, Range of values is 0 to 0
  4440                           ; switch strategies available:
  4441                           ; Name         Instructions Cycles
  4442                           ; simple_byte            4     3 (average)
  4443                           ;	Chosen strategy is simple_byte
  4444  013C94  503D               	movf	(btemp+11)^0,w,c
  4445  013C96  0A00               	xorlw	0	; case 0
  4446  013C98  A4D8               	btfss	status,2,c
  4447  013C9A  D7EF               	goto	l11838
  4448                           
  4449                           ; Switch size 1, requested type "simple"
  4450                           ; Number of cases is 2, Range of values is 0 to 1
  4451                           ; switch strategies available:
  4452                           ; Name         Instructions Cycles
  4453                           ; simple_byte            7     4 (average)
  4454                           ;	Chosen strategy is simple_byte
  4455  013C9C  503C               	movf	(btemp+10)^0,w,c
  4456  013C9E  0A00               	xorlw	0	; case 0
  4457  013CA0  B4D8               	btfsc	status,2,c
  4458  013CA2  D5B2               	goto	l11792
  4459  013CA4  0A01               	xorlw	1	; case 1
  4460  013CA6  B4D8               	btfsc	status,2,c
  4461  013CA8  D72A               	goto	l11824
  4462  013CAA  D7E7               	goto	l11838
  4463  013CAC                     l1663:
  4464                           
  4465                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4466  013CAC  52E5               	movf	postdec1,f,c
  4467  013CAE  52E5               	movf	postdec1,f,c
  4468  013CB0  0012               	return		;funcret
  4469  013CB2                     __end_of_conv_raw_result:
  4470                           	opt callstack 0
  4471                           
  4472 ;; *************** function _nanf *****************
  4473 ;; Defined at:
  4474 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4475 ;; Parameters:    Size  Location     Type
  4476 ;;  s               2  [STACK] PTR const unsigned char 
  4477 ;;		 -> STR_33(1), 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;  u               4  [STACK] struct .
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  4  [STACK] float 
  4482 ;; Registers used:
  4483 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/39
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4493 ;;Total ram usage:        0 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:    6
  4496 ;; This function calls:
  4497 ;;		Nothing
  4498 ;; This function is called by:
  4499 ;;		_conv_raw_result
  4500 ;; This function uses a reentrant model
  4501 ;;
  4502                           
  4503                           	psect	text16
  4504  0177FA                     __ptext16:
  4505                           	opt callstack 0
  4506  0177FA                     _nanf:
  4507                           	opt callstack 0
  4508                           
  4509                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4510  0177FA  52E6               	movf	postinc1,f,c
  4511  0177FC  52E6               	movf	postinc1,f,c
  4512  0177FE  52E6               	movf	postinc1,f,c
  4513  017800  52E6               	movf	postinc1,f,c
  4514                           
  4515                           ;incstack = 0
  4516  017802  0EFF               	movlw	255
  4517  017804  6E3A               	movwf	(btemp+8)^0,c
  4518  017806  0EFF               	movlw	255
  4519  017808  6E3B               	movwf	(btemp+9)^0,c
  4520  01780A  0EFF               	movlw	255
  4521  01780C  6E3C               	movwf	(btemp+10)^0,c
  4522  01780E  0E7F               	movlw	127
  4523  017810  6E3D               	movwf	(btemp+11)^0,c
  4524                           
  4525                           ;stkvar	_u @ sp[(-4)+0]
  4526  017812  0EFC               	movlw	-4
  4527  017814  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4528  01781A  0EFD               	movlw	-3
  4529  01781C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4530  017822  0EFE               	movlw	-2
  4531  017824  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4532  01782A  0EFF               	movlw	-1
  4533  01782C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4534                           
  4535                           ;stkvar	_u @ sp[(-4)+0]
  4536  017832  0EFC               	movlw	-4
  4537  017834  006F FF8C  F032    	movff	plusw1,btemp
  4538  01783A  0EFD               	movlw	-3
  4539  01783C  006F FF8C  F033    	movff	plusw1,btemp+1
  4540  017842  0EFE               	movlw	-2
  4541  017844  006F FF8C  F034    	movff	plusw1,btemp+2
  4542  01784A  0EFF               	movlw	-1
  4543  01784C  006F FF8C  F035    	movff	plusw1,btemp+3
  4544                           
  4545                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4546  017852  0EFA               	movlw	250
  4547  017854  26E1               	addwf	fsr1l,f,c
  4548  017856  0EFF               	movlw	255
  4549  017858  22E2               	addwfc	fsr1h,f,c
  4550  01785A  0012               	return		;funcret
  4551  01785C                     __end_of_nanf:
  4552                           	opt callstack 0
  4553                           
  4554 ;; *************** function _get_raw_result *****************
  4555 ;; Defined at:
  4556 ;;		line 72 in file "daq.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  index           1  [STACK] const enum E16136
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;		None
  4561 ;; Return value:  Size  Location     Type
  4562 ;;                  2  [STACK] unsigned short 
  4563 ;; Registers used:
  4564 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/39
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4574 ;;Total ram usage:        0 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:    6
  4577 ;; This function calls:
  4578 ;;		Nothing
  4579 ;; This function is called by:
  4580 ;;		_main
  4581 ;;		_conv_raw_result
  4582 ;; This function uses a reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text17
  4586  018444                     __ptext17:
  4587                           	opt callstack 0
  4588  018444                     _get_raw_result:
  4589                           	opt callstack 24
  4590                           
  4591                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  4592                           ;stkvar	_index @ sp[(0)+-1]
  4593                           
  4594                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4595                           ;incstack = 0
  4596  018444  0EFF               	movlw	-1
  4597  018446  50E3               	movf	plusw1,w,c
  4598  018448  0D02               	mullw	2
  4599  01844A  50F3               	movf	243,w,c
  4600  01844C  0FC7               	addlw	low _R
  4601  01844E  6ED9               	movwf	fsr2l,c
  4602  018450  6ADA               	clrf	fsr2h,c
  4603  018452  006F FF78  F032    	movff	postinc2,btemp
  4604  018458  006F FF74  F033    	movff	postdec2,btemp+1
  4605                           
  4606                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4607  01845E  52E5               	movf	postdec1,f,c
  4608  018460  0012               	return		;funcret
  4609  018462                     __end_of_get_raw_result:
  4610                           	opt callstack 0
  4611                           
  4612 ;; *************** function ___xxtofl *****************
  4613 ;; Defined at:
  4614 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4615 ;; Parameters:    Size  Location     Type
  4616 ;;  sign            1  [STACK] unsigned char 
  4617 ;;  val             4  [STACK] long 
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;  arg             4  [STACK] unsigned long 
  4620 ;;  exp             1  [STACK] unsigned char 
  4621 ;; Return value:  Size  Location     Type
  4622 ;;                  4  [STACK] unsigned char 
  4623 ;; Registers used:
  4624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4625 ;; Tracked objects:
  4626 ;;		On entry : 0/39
  4627 ;;		On exit  : 0/0
  4628 ;;		Unchanged: 0/0
  4629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4634 ;;Total ram usage:        0 bytes
  4635 ;; Hardware stack levels used:    1
  4636 ;; Hardware stack levels required when called:    6
  4637 ;; This function calls:
  4638 ;;		Nothing
  4639 ;; This function is called by:
  4640 ;;		_conv_raw_result
  4641 ;; This function uses a reentrant model
  4642 ;;
  4643                           
  4644                           	psect	text18
  4645  01575E                     __ptext18:
  4646                           	opt callstack 0
  4647  01575E                     ___xxtofl:
  4648                           	opt callstack 0
  4649                           
  4650                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4651  01575E  0E05               	movlw	5
  4652  015760  26E1               	addwf	fsr1l,f,c
  4653  015762  0E00               	movlw	0
  4654  015764  22E2               	addwfc	fsr1h,f,c
  4655                           
  4656                           ;stkvar	_sign @ sp[(-5)+-1]
  4657                           
  4658                           ;incstack = 0
  4659  015766  0EFA               	movlw	-6
  4660  015768  50E3               	movf	plusw1,w,c
  4661  01576A  B4D8               	btfsc	status,2,c
  4662  01576C  D01D               	goto	l11288
  4663                           
  4664                           ;stkvar	_val @ sp[(-5)+-5]
  4665  01576E  0EF9               	movlw	-7
  4666  015770  AEE3               	btfss	plusw1,7,c
  4667  015772  D01A               	goto	l11288
  4668                           
  4669                           ;stkvar	_val @ sp[(-5)+-5]
  4670  015774  0EF6               	movlw	-10
  4671  015776  006F FF8C  F03A    	movff	plusw1,btemp+8
  4672  01577C  0EF7               	movlw	-9
  4673  01577E  006F FF8C  F03B    	movff	plusw1,btemp+9
  4674  015784  0EF8               	movlw	-8
  4675  015786  006F FF8C  F03C    	movff	plusw1,btemp+10
  4676  01578C  0EF9               	movlw	-7
  4677  01578E  006F FF8C  F03D    	movff	plusw1,btemp+11
  4678  015794  1E3A               	comf	(btemp+8)^0,f,c
  4679  015796  1E3B               	comf	(btemp+9)^0,f,c
  4680  015798  1E3C               	comf	(btemp+10)^0,f,c
  4681  01579A  1E3D               	comf	(btemp+11)^0,f,c
  4682  01579C  2A3A               	incf	(btemp+8)^0,f,c
  4683  01579E  0E00               	movlw	0
  4684  0157A0  223B               	addwfc	(btemp+9)^0,f,c
  4685  0157A2  223C               	addwfc	(btemp+10)^0,f,c
  4686  0157A4  223D               	addwfc	(btemp+11)^0,f,c
  4687  0157A6  D010               	goto	L4
  4688  0157A8                     l11288:
  4689                           
  4690                           ;stkvar	_val @ sp[(-5)+-5]
  4691  0157A8  0EF6               	movlw	-10
  4692  0157AA  006F FF8C  F03A    	movff	plusw1,btemp+8
  4693  0157B0  0EF7               	movlw	-9
  4694  0157B2  006F FF8C  F03B    	movff	plusw1,btemp+9
  4695  0157B8  0EF8               	movlw	-8
  4696  0157BA  006F FF8C  F03C    	movff	plusw1,btemp+10
  4697  0157C0  0EF9               	movlw	-7
  4698  0157C2  006F FF8C  F03D    	movff	plusw1,btemp+11
  4699  0157C8                     L4:
  4700                           
  4701                           ;stkvar	_arg @ sp[(-5)+0]
  4702  0157C8  0EFB               	movlw	-5
  4703  0157CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  4704  0157D0  0EFC               	movlw	-4
  4705  0157D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  4706  0157D8  0EFD               	movlw	-3
  4707  0157DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  4708  0157E0  0EFE               	movlw	-2
  4709  0157E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4710                           
  4711                           ;stkvar	_val @ sp[(-5)+-5]
  4712  0157E8  0EF6               	movlw	-10
  4713  0157EA  50E3               	movf	plusw1,w,c
  4714  0157EC  E113               	bnz	l11296
  4715  0157EE  0EF7               	movlw	-9
  4716  0157F0  50E3               	movf	plusw1,w,c
  4717  0157F2  E110               	bnz	l11296
  4718  0157F4  0EF8               	movlw	-8
  4719  0157F6  50E3               	movf	plusw1,w,c
  4720  0157F8  E10D               	bnz	l11296
  4721  0157FA  0EF9               	movlw	-7
  4722  0157FC  50E3               	movf	plusw1,w,c
  4723  0157FE  A4D8               	btfss	status,2,c
  4724  015800  D009               	goto	l11296
  4725  015802  0E00               	movlw	0
  4726  015804  6E32               	movwf	btemp^0,c
  4727  015806  0E00               	movlw	0
  4728  015808  6E33               	movwf	(btemp+1)^0,c
  4729  01580A  0E00               	movlw	0
  4730  01580C  6E34               	movwf	(btemp+2)^0,c
  4731  01580E  0E00               	movlw	0
  4732  015810  6E35               	movwf	(btemp+3)^0,c
  4733  015812  D0A2               	goto	l2707
  4734  015814                     l11296:
  4735  015814  0E96               	movlw	150
  4736  015816  6E3D               	movwf	(btemp+11)^0,c
  4737                           
  4738                           ;stkvar	_exp @ sp[(-5)+4]
  4739  015818  0EFF               	movlw	-1
  4740  01581A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  4741  015820  D00B               	goto	l11300
  4742  015822                     l11298:
  4743                           
  4744                           ;stkvar	_exp @ sp[(-5)+4]
  4745  015822  0EFF               	movlw	-1
  4746  015824  2AE3               	incf	plusw1,f,c
  4747                           
  4748                           ;stkvar	_arg @ sp[(-5)+0]
  4749  015826  90D8               	bcf	status,0,c
  4750  015828  0EFE               	movlw	-2
  4751  01582A  32E3               	rrcf	plusw1,f,c
  4752  01582C  0EFD               	movlw	-3
  4753  01582E  32E3               	rrcf	plusw1,f,c
  4754  015830  0EFC               	movlw	-4
  4755  015832  32E3               	rrcf	plusw1,f,c
  4756  015834  0EFB               	movlw	-5
  4757  015836  32E3               	rrcf	plusw1,f,c
  4758  015838                     l11300:
  4759                           
  4760                           ;stkvar	_arg @ sp[(-5)+0]
  4761  015838  50E1               	movf	fsr1l,w,c
  4762  01583A  0FFB               	addlw	-5
  4763  01583C  6ED9               	movwf	fsr2l,c
  4764  01583E  50E2               	movf	fsr1h,w,c
  4765  015840  6EDA               	movwf	fsr2h,c
  4766  015842  0EFF               	movlw	255
  4767  015844  22DA               	addwfc	fsr2h,f,c
  4768  015846  52DE               	movf	postinc2,f,c
  4769  015848  52DE               	movf	postinc2,f,c
  4770  01584A  52DE               	movf	postinc2,f,c
  4771  01584C  0EFE               	movlw	254
  4772  01584E  14DD               	andwf	postdec2,w,c
  4773  015850  B4D8               	btfsc	status,2,c
  4774  015852  D018               	goto	l11308
  4775  015854  D7E6               	goto	l11298
  4776  015856                     l11302:
  4777                           
  4778                           ;stkvar	_exp @ sp[(-5)+4]
  4779  015856  0EFF               	movlw	-1
  4780  015858  2AE3               	incf	plusw1,f,c
  4781                           
  4782                           ;stkvar	_arg @ sp[(-5)+0]
  4783  01585A  50E1               	movf	fsr1l,w,c
  4784  01585C  0FFB               	addlw	-5
  4785  01585E  6ED9               	movwf	fsr2l,c
  4786  015860  50E2               	movf	fsr1h,w,c
  4787  015862  6EDA               	movwf	fsr2h,c
  4788  015864  0EFF               	movlw	255
  4789  015866  22DA               	addwfc	fsr2h,f,c
  4790  015868  2ADE               	incf	postinc2,f,c
  4791  01586A  0E00               	movlw	0
  4792  01586C  22DE               	addwfc	postinc2,f,c
  4793  01586E  22DE               	addwfc	postinc2,f,c
  4794  015870  22DE               	addwfc	postinc2,f,c
  4795                           
  4796                           ;stkvar	_arg @ sp[(-5)+0]
  4797  015872  90D8               	bcf	status,0,c
  4798  015874  0EFE               	movlw	-2
  4799  015876  32E3               	rrcf	plusw1,f,c
  4800  015878  0EFD               	movlw	-3
  4801  01587A  32E3               	rrcf	plusw1,f,c
  4802  01587C  0EFC               	movlw	-4
  4803  01587E  32E3               	rrcf	plusw1,f,c
  4804  015880  0EFB               	movlw	-5
  4805  015882  32E3               	rrcf	plusw1,f,c
  4806  015884                     l11308:
  4807                           
  4808                           ;stkvar	_arg @ sp[(-5)+0]
  4809  015884  50E1               	movf	fsr1l,w,c
  4810  015886  0FFB               	addlw	-5
  4811  015888  6ED9               	movwf	fsr2l,c
  4812  01588A  50E2               	movf	fsr1h,w,c
  4813  01588C  6EDA               	movwf	fsr2h,c
  4814  01588E  0EFF               	movlw	255
  4815  015890  22DA               	addwfc	fsr2h,f,c
  4816  015892  52DE               	movf	postinc2,f,c
  4817  015894  52DE               	movf	postinc2,f,c
  4818  015896  52DE               	movf	postinc2,f,c
  4819  015898  0EFF               	movlw	255
  4820  01589A  14DD               	andwf	postdec2,w,c
  4821  01589C  B4D8               	btfsc	status,2,c
  4822  01589E  D00C               	goto	l11312
  4823  0158A0  D7DA               	goto	l11302
  4824  0158A2                     l11310:
  4825                           
  4826                           ;stkvar	_exp @ sp[(-5)+4]
  4827  0158A2  0EFF               	movlw	-1
  4828  0158A4  06E3               	decf	plusw1,f,c
  4829                           
  4830                           ;stkvar	_arg @ sp[(-5)+0]
  4831  0158A6  90D8               	bcf	status,0,c
  4832  0158A8  0EFB               	movlw	-5
  4833  0158AA  36E3               	rlcf	plusw1,f,c
  4834  0158AC  0EFC               	movlw	-4
  4835  0158AE  36E3               	rlcf	plusw1,f,c
  4836  0158B0  0EFD               	movlw	-3
  4837  0158B2  36E3               	rlcf	plusw1,f,c
  4838  0158B4  0EFE               	movlw	-2
  4839  0158B6  36E3               	rlcf	plusw1,f,c
  4840  0158B8                     l11312:
  4841                           
  4842                           ;stkvar	_arg @ sp[(-5)+0]
  4843  0158B8  0EFD               	movlw	-3
  4844  0158BA  BEE3               	btfsc	plusw1,7,c
  4845  0158BC  D007               	goto	u12260
  4846                           
  4847                           ;stkvar	_exp @ sp[(-5)+4]
  4848  0158BE  0EFF               	movlw	-1
  4849  0158C0  006F FF8C  F032    	movff	plusw1,btemp
  4850  0158C6  0E02               	movlw	2
  4851  0158C8  6032               	cpfslt	btemp^0,c
  4852  0158CA  D7EB               	goto	l11310
  4853  0158CC                     u12260:
  4854                           
  4855                           ;stkvar	_exp @ sp[(-5)+4]
  4856  0158CC  0EFF               	movlw	-1
  4857  0158CE  B0E3               	btfsc	plusw1,0,c
  4858  0158D0  D002               	goto	l11320
  4859                           
  4860                           ;stkvar	_arg @ sp[(-5)+0]
  4861  0158D2  0EFD               	movlw	-3
  4862  0158D4  9EE3               	bcf	plusw1,7,c
  4863  0158D6                     l11320:
  4864                           
  4865                           ;stkvar	_exp @ sp[(-5)+4]
  4866  0158D6  50E1               	movf	fsr1l,w,c
  4867  0158D8  0FFF               	addlw	-1
  4868  0158DA  6ED9               	movwf	fsr2l,c
  4869  0158DC  50E2               	movf	fsr1h,w,c
  4870  0158DE  6EDA               	movwf	fsr2h,c
  4871  0158E0  0EFF               	movlw	255
  4872  0158E2  22DA               	addwfc	fsr2h,f,c
  4873  0158E4  90D8               	bcf	status,0,c
  4874  0158E6  32DF               	rrcf	indf2,f,c
  4875                           
  4876                           ;stkvar	_exp @ sp[(-5)+4]
  4877  0158E8  0EFF               	movlw	-1
  4878  0158EA  006F FF8C  F03D    	movff	plusw1,btemp+11
  4879  0158F0  0060  F0F4  F036   	movff	btemp+11,btemp+4
  4880  0158F6  6A37               	clrf	(btemp+5)^0,c
  4881  0158F8  6A38               	clrf	(btemp+6)^0,c
  4882  0158FA  6A39               	clrf	(btemp+7)^0,c
  4883  0158FC  0060  F0D8  F039   	movff	btemp+4,btemp+7
  4884  015902  6A38               	clrf	(btemp+6)^0,c
  4885  015904  6A37               	clrf	(btemp+5)^0,c
  4886  015906  6A36               	clrf	(btemp+4)^0,c
  4887                           
  4888                           ;stkvar	_arg @ sp[(-5)+0]
  4889  015908  50E1               	movf	fsr1l,w,c
  4890  01590A  0FFB               	addlw	-5
  4891  01590C  6ED9               	movwf	fsr2l,c
  4892  01590E  50E2               	movf	fsr1h,w,c
  4893  015910  6EDA               	movwf	fsr2h,c
  4894  015912  0EFF               	movlw	255
  4895  015914  22DA               	addwfc	fsr2h,f,c
  4896  015916  5036               	movf	(btemp+4)^0,w,c
  4897  015918  12DE               	iorwf	postinc2,f,c
  4898  01591A  5037               	movf	(btemp+5)^0,w,c
  4899  01591C  12DE               	iorwf	postinc2,f,c
  4900  01591E  5038               	movf	(btemp+6)^0,w,c
  4901  015920  12DE               	iorwf	postinc2,f,c
  4902  015922  5039               	movf	(btemp+7)^0,w,c
  4903  015924  12DE               	iorwf	postinc2,f,c
  4904                           
  4905                           ;stkvar	_sign @ sp[(-5)+-1]
  4906  015926  0EFA               	movlw	-6
  4907  015928  50E3               	movf	plusw1,w,c
  4908  01592A  B4D8               	btfsc	status,2,c
  4909  01592C  D005               	goto	l11330
  4910                           
  4911                           ;stkvar	_val @ sp[(-5)+-5]
  4912  01592E  0EF9               	movlw	-7
  4913  015930  AEE3               	btfss	plusw1,7,c
  4914  015932  D002               	goto	l11330
  4915                           
  4916                           ;stkvar	_arg @ sp[(-5)+0]
  4917  015934  0EFE               	movlw	-2
  4918  015936  8EE3               	bsf	plusw1,7,c
  4919  015938                     l11330:
  4920                           
  4921                           ;stkvar	_arg @ sp[(-5)+0]
  4922  015938  0EFB               	movlw	-5
  4923  01593A  006F FF8C  F032    	movff	plusw1,btemp
  4924  015940  0EFC               	movlw	-4
  4925  015942  006F FF8C  F033    	movff	plusw1,btemp+1
  4926  015948  0EFD               	movlw	-3
  4927  01594A  006F FF8C  F034    	movff	plusw1,btemp+2
  4928  015950  0EFE               	movlw	-2
  4929  015952  006F FF8C  F035    	movff	plusw1,btemp+3
  4930  015958                     l2707:
  4931                           
  4932                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4933  015958  0EF6               	movlw	246
  4934  01595A  26E1               	addwf	fsr1l,f,c
  4935  01595C  0EFF               	movlw	255
  4936  01595E  22E2               	addwfc	fsr1h,f,c
  4937  015960  0012               	return		;funcret
  4938  015962                     __end_of___xxtofl:
  4939                           	opt callstack 0
  4940                           
  4941 ;; *************** function _clear_adc_scan *****************
  4942 ;; Defined at:
  4943 ;;		line 64 in file "daq.c"
  4944 ;; Parameters:    Size  Location     Type
  4945 ;;		None
  4946 ;; Auto vars:     Size  Location     Type
  4947 ;;		None
  4948 ;; Return value:  Size  Location     Type
  4949 ;;                  1  [STACK] void 
  4950 ;; Registers used:
  4951 ;;		None
  4952 ;; Tracked objects:
  4953 ;;		On entry : 0/39
  4954 ;;		On exit  : 3F/0
  4955 ;;		Unchanged: 0/0
  4956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4961 ;;Total ram usage:        0 bytes
  4962 ;; Hardware stack levels used:    1
  4963 ;; Hardware stack levels required when called:    6
  4964 ;; This function calls:
  4965 ;;		Nothing
  4966 ;; This function is called by:
  4967 ;;		_main
  4968 ;; This function uses a reentrant model
  4969 ;;
  4970                           
  4971                           	psect	text19
  4972  018672                     __ptext19:
  4973                           	opt callstack 0
  4974  018672                     _clear_adc_scan:
  4975                           	opt callstack 24
  4976                           
  4977                           ;daq.c: 66:  R.done = 0;
  4978                           
  4979                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4980                           ;incstack = 0
  4981  018672  0100               	movlb	0	; () banked
  4982  018674  6BEE               	clrf	(_R+39)& (0+255),b	;volatile
  4983                           
  4984                           ; BSR set to: 0
  4985                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4986  018676  0012               	return		;funcret
  4987  018678                     __end_of_clear_adc_scan:
  4988                           	opt callstack 0
  4989                           
  4990 ;; *************** function _check_help *****************
  4991 ;; Defined at:
  4992 ;;		line 40 in file "mconfig.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  flipper         1  [STACK] const _Bool 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;  estatus         1  [STACK] _Bool 
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  1  [STACK] _Bool 
  4999 ;; Registers used:
  5000 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5001 ;; Tracked objects:
  5002 ;;		On entry : 3F/1
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5010 ;;Total ram usage:        0 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; Hardware stack levels required when called:   18
  5013 ;; This function calls:
  5014 ;;		_StartTimer
  5015 ;;		_TimerDone
  5016 ;;		_display_help
  5017 ;;		_display_info
  5018 ;;		_get_vterm_ptr
  5019 ;;		_help_button
  5020 ;;		_mode_lamp_bright
  5021 ;;		_mode_lamp_dim
  5022 ;;		_set_display_info
  5023 ;;		_set_temp_display_help
  5024 ;;		_set_vterm
  5025 ;;		_sprintf
  5026 ;;		_update_lcd
  5027 ;;		_vterm_dump
  5028 ;; This function is called by:
  5029 ;;		_main
  5030 ;; This function uses a reentrant model
  5031 ;;
  5032                           
  5033                           	psect	text20
  5034  015536                     __ptext20:
  5035                           	opt callstack 0
  5036  015536                     _check_help:
  5037                           	opt callstack 0
  5038                           
  5039                           ; BSR set to: 0
  5040                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5041  015536  52E6               	movf	postinc1,f,c
  5042                           
  5043                           ;mconfig.c: 40: _Bool check_help(const _Bool flipper);mconfig.c: 41: {;mconfig.c: 42:  _
      +                          Bool estatus=0;
  5044                           ;stkvar	_estatus @ sp[(-1)+0]
  5045                           
  5046                           ;incstack = 0
  5047  015538  0EFF               	movlw	-1
  5048  01553A  6AE3               	clrf	plusw1,c
  5049                           
  5050                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  5051  01553C  ECDB  F0BE         	call	_help_button	;wreg free
  5052  015540  5032               	movf	btemp^0,w,c
  5053  015542  B4D8               	btfsc	status,2,c
  5054  015544  D0D3               	goto	l12060
  5055  015546  EC29  F0C3         	call	_display_info	;wreg free
  5056  01554A  0432               	decf	btemp^0,w,c
  5057  01554C  B4D8               	btfsc	status,2,c
  5058  01554E  D0CE               	goto	l12060
  5059                           
  5060                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  5061  015550  0EDC               	movlw	220
  5062  015552  6EE6               	movwf	postinc1,c
  5063  015554  0E05               	movlw	5
  5064  015556  6EE6               	movwf	postinc1,c
  5065  015558  0E0B               	movlw	11
  5066  01555A  6EE6               	movwf	postinc1,c
  5067  01555C  ECBD  F0BE         	call	_StartTimer	;wreg free
  5068                           
  5069                           ;mconfig.c: 48:   if (V.debug)
  5070  015560  0101               	movlb	1	; () banked
  5071  015562  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  5072                           
  5073                           ; BSR set to: 1
  5074                           ;mconfig.c: 49:    vterm_dump();
  5075  015564  ECF5  F0B1         	call	_vterm_dump	;wreg free
  5076                           
  5077                           ;mconfig.c: 51:   set_vterm(1);
  5078  015568  0E01               	movlw	1
  5079  01556A  6EE6               	movwf	postinc1,c
  5080  01556C  EC6C  F0C2         	call	_set_vterm	;wreg free
  5081                           
  5082                           ; BSR set to: 5
  5083                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  5084  015570  EC29  F0C3         	call	_display_info	;wreg free
  5085  015574  5032               	movf	btemp^0,w,c
  5086  015576  6EE6               	movwf	postinc1,c
  5087  015578  ECE9  F0C2         	call	_set_temp_display_help	;wreg free
  5088                           
  5089                           ; BSR set to: 1
  5090                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  5091  01557C  0E01               	movlw	1
  5092  01557E  6EE6               	movwf	postinc1,c
  5093  015580  EC31  F0C2         	call	_set_display_info	;wreg free
  5094                           
  5095                           ;mconfig.c: 54:   if (flipper) {
  5096                           ;stkvar	_flipper @ sp[(-1)+-1]
  5097  015584  0EFE               	movlw	-2
  5098  015586  50E3               	movf	plusw1,w,c
  5099  015588  B4D8               	btfsc	status,2,c
  5100  01558A  D019               	goto	l12046
  5101                           
  5102                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  5103  01558C  0EC1               	movlw	low STR_15
  5104  01558E  6EE6               	movwf	postinc1,c
  5105  015590  0EFF               	movlw	high STR_15
  5106  015592  6EE6               	movwf	postinc1,c
  5107  015594  0E18               	movlw	low STR_17
  5108  015596  6EE6               	movwf	postinc1,c
  5109  015598  0EFF               	movlw	high STR_17
  5110  01559A  6EE6               	movwf	postinc1,c
  5111  01559C  0E01               	movlw	1
  5112  01559E  6EE6               	movwf	postinc1,c
  5113  0155A0  0E00               	movlw	0
  5114  0155A2  6EE6               	movwf	postinc1,c
  5115  0155A4  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5116  0155A8  0060  F0CB  FFE6   	movff	btemp,postinc1
  5117  0155AE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5118  0155B4  0E06               	movlw	6
  5119  0155B6  6EE6               	movwf	postinc1,c
  5120  0155B8  ECBB  F0B4         	call	_sprintf	;wreg free
  5121                           
  5122                           ;mconfig.c: 56:   } else {
  5123  0155BC  D018               	goto	l1567
  5124  0155BE                     l12046:
  5125                           
  5126                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  5127  0155BE  0ED7               	movlw	low STR_16
  5128  0155C0  6EE6               	movwf	postinc1,c
  5129  0155C2  0EFF               	movlw	high STR_16
  5130  0155C4  6EE6               	movwf	postinc1,c
  5131  0155C6  0E18               	movlw	low STR_17
  5132  0155C8  6EE6               	movwf	postinc1,c
  5133  0155CA  0EFF               	movlw	high STR_17
  5134  0155CC  6EE6               	movwf	postinc1,c
  5135  0155CE  0E01               	movlw	1
  5136  0155D0  6EE6               	movwf	postinc1,c
  5137  0155D2  0E00               	movlw	0
  5138  0155D4  6EE6               	movwf	postinc1,c
  5139  0155D6  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5140  0155DA  0060  F0CB  FFE6   	movff	btemp,postinc1
  5141  0155E0  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5142  0155E6  0E06               	movlw	6
  5143  0155E8  6EE6               	movwf	postinc1,c
  5144  0155EA  ECBB  F0B4         	call	_sprintf	;wreg free
  5145  0155EE                     l1567:
  5146                           
  5147                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  5148  0155EE  0101               	movlb	1	; () banked
  5149  0155F0  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5150  0155F2  32E8               	rrcf	wreg,f,c
  5151  0155F4  32E8               	rrcf	wreg,f,c
  5152  0155F6  0B03               	andlw	3
  5153  0155F8  0D24               	mullw	36
  5154  0155FA  0E12               	movlw	18
  5155  0155FC  26F3               	addwf	243,f,c
  5156  0155FE  0E00               	movlw	0
  5157  015600  22F4               	addwfc	244,f,c
  5158  015602  0E5D               	movlw	low _T
  5159  015604  6E3C               	movwf	(btemp+10)^0,c
  5160  015606  0EFE               	movlw	high _T
  5161  015608  6E3D               	movwf	(btemp+11)^0,c
  5162  01560A  50F3               	movf	243,w,c
  5163  01560C  263C               	addwf	(btemp+10)^0,f,c
  5164  01560E  50F4               	movf	244,w,c
  5165  015610  223D               	addwfc	(btemp+11)^0,f,c
  5166  015612  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5167  015618  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5168  01561E  0ECD               	movlw	low STR_19
  5169  015620  6EE6               	movwf	postinc1,c
  5170  015622  0EFF               	movlw	high STR_19
  5171  015624  6EE6               	movwf	postinc1,c
  5172  015626  0E01               	movlw	1
  5173  015628  6EE6               	movwf	postinc1,c
  5174  01562A  0E01               	movlw	1
  5175  01562C  6EE6               	movwf	postinc1,c
  5176  01562E  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5177  015632  0060  F0CB  FFE6   	movff	btemp,postinc1
  5178  015638  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5179  01563E  0E06               	movlw	6
  5180  015640  6EE6               	movwf	postinc1,c
  5181  015642  ECBB  F0B4         	call	_sprintf	;wreg free
  5182                           
  5183                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  5184  015646  0101               	movlb	1	; () banked
  5185  015648  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  5186  01564A  32E8               	rrcf	wreg,f,c
  5187  01564C  32E8               	rrcf	wreg,f,c
  5188  01564E  0B03               	andlw	3
  5189  015650  0D24               	mullw	36
  5190  015652  0E5D               	movlw	low _T
  5191  015654  6E3C               	movwf	(btemp+10)^0,c
  5192  015656  0EFE               	movlw	high _T
  5193  015658  6E3D               	movwf	(btemp+11)^0,c
  5194  01565A  50F3               	movf	243,w,c
  5195  01565C  263C               	addwf	(btemp+10)^0,f,c
  5196  01565E  50F4               	movf	244,w,c
  5197  015660  223D               	addwfc	(btemp+11)^0,f,c
  5198  015662  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5199  015668  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5200  01566E  0ECD               	movlw	low STR_19
  5201  015670  6EE6               	movwf	postinc1,c
  5202  015672  0EFF               	movlw	high STR_19
  5203  015674  6EE6               	movwf	postinc1,c
  5204  015676  0E01               	movlw	1
  5205  015678  6EE6               	movwf	postinc1,c
  5206  01567A  0E02               	movlw	2
  5207  01567C  6EE6               	movwf	postinc1,c
  5208  01567E  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5209  015682  0060  F0CB  FFE6   	movff	btemp,postinc1
  5210  015688  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5211  01568E  0E06               	movlw	6
  5212  015690  6EE6               	movwf	postinc1,c
  5213  015692  ECBB  F0B4         	call	_sprintf	;wreg free
  5214                           
  5215                           ;mconfig.c: 61:   V.help_id++;
  5216  015696  EE20  F19B         	lfsr	2,_V+155	;volatile
  5217  01569A  38DF               	swapf	223,w,c
  5218  01569C  6E3D               	movwf	(btemp+11)^0,c
  5219  01569E  323D               	rrcf	(btemp+11)^0,f,c
  5220  0156A0  303D               	rrcf	(btemp+11)^0,w,c
  5221  0156A2  0B03               	andlw	3
  5222  0156A4  6E3D               	movwf	(btemp+11)^0,c
  5223  0156A6  2A3D               	incf	(btemp+11)^0,f,c
  5224  0156A8  3A3D               	swapf	(btemp+11)^0,f,c
  5225  0156AA  363D               	rlcf	(btemp+11)^0,f,c
  5226  0156AC  363D               	rlcf	(btemp+11)^0,f,c
  5227  0156AE  50DF               	movf	223,w,c
  5228  0156B0  183D               	xorwf	(btemp+11)^0,w,c
  5229  0156B2  0B3F               	andlw	-193
  5230  0156B4  183D               	xorwf	(btemp+11)^0,w,c
  5231  0156B6  6EDF               	movwf	223,c
  5232                           
  5233                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  5234  0156B8  0EB8               	movlw	184
  5235  0156BA  6EE6               	movwf	postinc1,c
  5236  0156BC  0E0B               	movlw	11
  5237  0156BE  6EE6               	movwf	postinc1,c
  5238  0156C0  0E09               	movlw	9
  5239  0156C2  6EE6               	movwf	postinc1,c
  5240  0156C4  ECBD  F0BE         	call	_StartTimer	;wreg free
  5241                           
  5242                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  5243  0156C8  0EB8               	movlw	184
  5244  0156CA  6EE6               	movwf	postinc1,c
  5245  0156CC  0E0B               	movlw	11
  5246  0156CE  6EE6               	movwf	postinc1,c
  5247  0156D0  0E07               	movlw	7
  5248  0156D2  6EE6               	movwf	postinc1,c
  5249  0156D4  ECBD  F0BE         	call	_StartTimer	;wreg free
  5250                           
  5251                           ;mconfig.c: 64:   mode_lamp_bright();
  5252  0156D8  ECF8  F0C2         	call	_mode_lamp_bright	;wreg free
  5253                           
  5254                           ;mconfig.c: 65:   update_lcd(1);
  5255  0156DC  0E01               	movlw	1
  5256  0156DE  6EE6               	movwf	postinc1,c
  5257  0156E0  EC34  F0B4         	call	_update_lcd	;wreg free
  5258                           
  5259                           ;mconfig.c: 66:   estatus=1;
  5260                           ;stkvar	_estatus @ sp[(-1)+0]
  5261  0156E4  0EFF               	movlw	-1
  5262  0156E6  6AE3               	clrf	plusw1,c
  5263  0156E8  2AE3               	incf	plusw1,f,c
  5264                           
  5265                           ;mconfig.c: 67:  } else {
  5266  0156EA  D032               	goto	l12076
  5267  0156EC                     l12060:
  5268                           
  5269                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  5270  0156EC  0E09               	movlw	9
  5271  0156EE  6EE6               	movwf	postinc1,c
  5272  0156F0  ECAB  F0C1         	call	_TimerDone	;wreg free
  5273  0156F4  5032               	movf	btemp^0,w,c
  5274  0156F6  B4D8               	btfsc	status,2,c
  5275  0156F8  D02B               	goto	l12076
  5276                           
  5277                           ;mconfig.c: 69:    set_vterm(0);
  5278  0156FA  0E00               	movlw	0
  5279  0156FC  6EE6               	movwf	postinc1,c
  5280  0156FE  EC6C  F0C2         	call	_set_vterm	;wreg free
  5281                           
  5282                           ; BSR set to: 5
  5283                           ;mconfig.c: 70:    V.help = 0;
  5284  015702  0101               	movlb	1	; () banked
  5285  015704  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  5286                           
  5287                           ; BSR set to: 1
  5288                           ;mconfig.c: 71:    set_display_info(display_help());
  5289  015706  EC2D  F0C3         	call	_display_help	;wreg free
  5290  01570A  5032               	movf	btemp^0,w,c
  5291  01570C  6EE6               	movwf	postinc1,c
  5292  01570E  EC31  F0C2         	call	_set_display_info	;wreg free
  5293                           
  5294                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  5295  015712  0060  F657  FFE6   	movff	_V+149,postinc1
  5296  015718  0060  F65B  FFE6   	movff	_V+150,postinc1
  5297  01571E  EC95  F0C2         	call	_mode_lamp_dim	;wreg free
  5298                           
  5299                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  5300  015722  0E0B               	movlw	11
  5301  015724  6EE6               	movwf	postinc1,c
  5302  015726  ECAB  F0C1         	call	_TimerDone	;wreg free
  5303  01572A  5032               	movf	btemp^0,w,c
  5304  01572C  B4D8               	btfsc	status,2,c
  5305  01572E  D010               	goto	l12076
  5306                           
  5307                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  5308  015730  0101               	movlb	1	; () banked
  5309  015732  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  5310  015734  A4D8               	btfss	status,2,c
  5311  015736  D002               	goto	u12640
  5312  015738  0E01               	movlw	1
  5313  01573A  D001               	goto	u12650
  5314  01573C                     u12640:
  5315  01573C  0E00               	movlw	0
  5316  01573E                     u12650:
  5317  01573E  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  5318                           
  5319                           ; BSR set to: 1
  5320                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  5321  015740  0EDC               	movlw	220
  5322  015742  6EE6               	movwf	postinc1,c
  5323  015744  0E05               	movlw	5
  5324  015746  6EE6               	movwf	postinc1,c
  5325  015748  0E0B               	movlw	11
  5326  01574A  6EE6               	movwf	postinc1,c
  5327  01574C  ECBD  F0BE         	call	_StartTimer	;wreg free
  5328  015750                     l12076:
  5329                           
  5330                           ;mconfig.c: 79:  return estatus;
  5331                           ;stkvar	_estatus @ sp[(-1)+0]
  5332  015750  0EFF               	movlw	-1
  5333  015752  006F FF8C  F032    	movff	plusw1,btemp
  5334                           
  5335                           ; _check_help: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5336  015758  52E5               	movf	postdec1,f,c
  5337  01575A  52E5               	movf	postdec1,f,c
  5338  01575C  0012               	return		;funcret
  5339  01575E                     __end_of_check_help:
  5340                           	opt callstack 0
  5341                           
  5342 ;; *************** function _vterm_dump *****************
  5343 ;; Defined at:
  5344 ;;		line 121 in file "mconfig.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;		None
  5347 ;; Auto vars:     Size  Location     Type
  5348 ;;		None
  5349 ;; Return value:  Size  Location     Type
  5350 ;;                  1  [STACK] void 
  5351 ;; Registers used:
  5352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5353 ;; Tracked objects:
  5354 ;;		On entry : 3F/1
  5355 ;;		On exit  : 0/0
  5356 ;;		Unchanged: 0/0
  5357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5362 ;;Total ram usage:        0 bytes
  5363 ;; Hardware stack levels used:    1
  5364 ;; Hardware stack levels required when called:   17
  5365 ;; This function calls:
  5366 ;;		_WaitMs
  5367 ;;		_eaDogM_WriteStringAtPos
  5368 ;;		_get_vterm_ptr
  5369 ;;		_sprintf
  5370 ;;		_wait_lcd_done
  5371 ;; This function is called by:
  5372 ;;		_check_help
  5373 ;; This function uses a reentrant model
  5374 ;;
  5375                           
  5376                           	psect	text21
  5377  0163EA                     __ptext21:
  5378                           	opt callstack 0
  5379  0163EA                     _vterm_dump:
  5380                           	opt callstack 12
  5381                           
  5382                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  5383                           
  5384                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5385                           ;incstack = 0
  5386  0163EA  0E01               	movlw	1
  5387  0163EC  6EE6               	movwf	postinc1,c
  5388  0163EE  0E00               	movlw	0
  5389  0163F0  6EE6               	movwf	postinc1,c
  5390  0163F2  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5391  0163F6  0060  F0CB  FFE6   	movff	btemp,postinc1
  5392  0163FC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5393  016402  0E00               	movlw	0
  5394  016404  6EE6               	movwf	postinc1,c
  5395  016406  0E00               	movlw	0
  5396  016408  6EE6               	movwf	postinc1,c
  5397  01640A  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5398  01640E  0060  F0CB  FFE6   	movff	btemp,postinc1
  5399  016414  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5400  01641A  0EA3               	movlw	low STR_21
  5401  01641C  6EE6               	movwf	postinc1,c
  5402  01641E  0EFF               	movlw	high STR_21
  5403  016420  6EE6               	movwf	postinc1,c
  5404  016422  0E01               	movlw	low (_V+1)
  5405  016424  6EE6               	movwf	postinc1,c
  5406  016426  0E01               	movlw	high (_V+1)
  5407  016428  6EE6               	movwf	postinc1,c
  5408  01642A  0E08               	movlw	8
  5409  01642C  6EE6               	movwf	postinc1,c
  5410  01642E  ECBB  F0B4         	call	_sprintf	;wreg free
  5411                           
  5412                           ;mconfig.c: 124:  wait_lcd_done();
  5413  016432  EC5E  F0C2         	call	_wait_lcd_done	;wreg free
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  5417  016436  0E01               	movlw	low (_V+1)
  5418  016438  6EE6               	movwf	postinc1,c
  5419  01643A  0E01               	movlw	high (_V+1)
  5420  01643C  6EE6               	movwf	postinc1,c
  5421  01643E  0E00               	movlw	0
  5422  016440  6EE6               	movwf	postinc1,c
  5423  016442  0E00               	movlw	0
  5424  016444  6EE6               	movwf	postinc1,c
  5425  016446  EC12  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5426                           
  5427                           ; BSR set to: 59
  5428                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  5429  01644A  0E01               	movlw	1
  5430  01644C  6EE6               	movwf	postinc1,c
  5431  01644E  0E01               	movlw	1
  5432  016450  6EE6               	movwf	postinc1,c
  5433  016452  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5434  016456  0060  F0CB  FFE6   	movff	btemp,postinc1
  5435  01645C  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5436  016462  0E00               	movlw	0
  5437  016464  6EE6               	movwf	postinc1,c
  5438  016466  0E01               	movlw	1
  5439  016468  6EE6               	movwf	postinc1,c
  5440  01646A  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5441  01646E  0060  F0CB  FFE6   	movff	btemp,postinc1
  5442  016474  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5443  01647A  0EA3               	movlw	low STR_21
  5444  01647C  6EE6               	movwf	postinc1,c
  5445  01647E  0EFF               	movlw	high STR_21
  5446  016480  6EE6               	movwf	postinc1,c
  5447  016482  0E01               	movlw	low (_V+1)
  5448  016484  6EE6               	movwf	postinc1,c
  5449  016486  0E01               	movlw	high (_V+1)
  5450  016488  6EE6               	movwf	postinc1,c
  5451  01648A  0E08               	movlw	8
  5452  01648C  6EE6               	movwf	postinc1,c
  5453  01648E  ECBB  F0B4         	call	_sprintf	;wreg free
  5454                           
  5455                           ;mconfig.c: 127:  wait_lcd_done();
  5456  016492  EC5E  F0C2         	call	_wait_lcd_done	;wreg free
  5457                           
  5458                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5459  016496  0E01               	movlw	low (_V+1)
  5460  016498  6EE6               	movwf	postinc1,c
  5461  01649A  0E01               	movlw	high (_V+1)
  5462  01649C  6EE6               	movwf	postinc1,c
  5463  01649E  0E00               	movlw	0
  5464  0164A0  6EE6               	movwf	postinc1,c
  5465  0164A2  0E01               	movlw	1
  5466  0164A4  6EE6               	movwf	postinc1,c
  5467  0164A6  EC12  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5468                           
  5469                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5470  0164AA  0E01               	movlw	1
  5471  0164AC  6EE6               	movwf	postinc1,c
  5472  0164AE  0E02               	movlw	2
  5473  0164B0  6EE6               	movwf	postinc1,c
  5474  0164B2  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5475  0164B6  0060  F0CB  FFE6   	movff	btemp,postinc1
  5476  0164BC  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5477  0164C2  0E00               	movlw	0
  5478  0164C4  6EE6               	movwf	postinc1,c
  5479  0164C6  0E02               	movlw	2
  5480  0164C8  6EE6               	movwf	postinc1,c
  5481  0164CA  ECC1  F0BF         	call	_get_vterm_ptr	;wreg free
  5482  0164CE  0060  F0CB  FFE6   	movff	btemp,postinc1
  5483  0164D4  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5484  0164DA  0EA3               	movlw	low STR_21
  5485  0164DC  6EE6               	movwf	postinc1,c
  5486  0164DE  0EFF               	movlw	high STR_21
  5487  0164E0  6EE6               	movwf	postinc1,c
  5488  0164E2  0E01               	movlw	low (_V+1)
  5489  0164E4  6EE6               	movwf	postinc1,c
  5490  0164E6  0E01               	movlw	high (_V+1)
  5491  0164E8  6EE6               	movwf	postinc1,c
  5492  0164EA  0E08               	movlw	8
  5493  0164EC  6EE6               	movwf	postinc1,c
  5494  0164EE  ECBB  F0B4         	call	_sprintf	;wreg free
  5495                           
  5496                           ;mconfig.c: 130:  wait_lcd_done();
  5497  0164F2  EC5E  F0C2         	call	_wait_lcd_done	;wreg free
  5498                           
  5499                           ; BSR set to: 0
  5500                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5501  0164F6  0E01               	movlw	low (_V+1)
  5502  0164F8  6EE6               	movwf	postinc1,c
  5503  0164FA  0E01               	movlw	high (_V+1)
  5504  0164FC  6EE6               	movwf	postinc1,c
  5505  0164FE  0E00               	movlw	0
  5506  016500  6EE6               	movwf	postinc1,c
  5507  016502  0E02               	movlw	2
  5508  016504  6EE6               	movwf	postinc1,c
  5509  016506  EC12  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5510                           
  5511                           ; BSR set to: 59
  5512                           ;mconfig.c: 132:  WaitMs(3000);
  5513  01650A  0EB8               	movlw	184
  5514  01650C  6EE6               	movwf	postinc1,c
  5515  01650E  0E0B               	movlw	11
  5516  016510  6EE6               	movwf	postinc1,c
  5517  016512  ECF7  F0BE         	call	_WaitMs	;wreg free
  5518                           
  5519                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5520  016516  0012               	return		;funcret
  5521  016518                     __end_of_vterm_dump:
  5522                           	opt callstack 0
  5523                           
  5524 ;; *************** function _sprintf *****************
  5525 ;; Defined at:
  5526 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  s               2  [STACK] PTR unsigned char 
  5529 ;;		 -> D.lcd(216), D(218), V(187), 
  5530 ;;  fmt             2  [STACK] PTR const unsigned char 
  5531 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  5532 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  5533 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  5534 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  5535 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  5536 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  5537 ;;		 -> STR_1(17), 
  5538 ;; Auto vars:     Size  Location     Type
  5539 ;;  f               6  [STACK] struct _IO_FILE
  5540 ;;  ap              2  [STACK] PTR void [1]
  5541 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5542 ;;  ret             2    0        int 
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  2  [STACK] int 
  5545 ;; Registers used:
  5546 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/5
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5556 ;;Total ram usage:        0 bytes
  5557 ;; Hardware stack levels used:    1
  5558 ;; Hardware stack levels required when called:   14
  5559 ;; This function calls:
  5560 ;;		_vfprintf
  5561 ;; This function is called by:
  5562 ;;		_main
  5563 ;;		_check_help
  5564 ;;		_vterm_dump
  5565 ;; This function uses a reentrant model
  5566 ;;
  5567                           
  5568                           	psect	text22
  5569  016976                     __ptext22:
  5570                           	opt callstack 0
  5571  016976                     _sprintf:
  5572                           	opt callstack 0
  5573                           
  5574                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5575  016976  0E08               	movlw	8
  5576  016978  26E1               	addwf	fsr1l,f,c
  5577  01697A  0E00               	movlw	0
  5578  01697C  22E2               	addwfc	fsr1h,f,c
  5579                           
  5580                           ;incstack = 0
  5581  01697E  0EFE               	movlw	254
  5582  016980  6E3C               	movwf	(btemp+10)^0,c
  5583  016982  0EFF               	movlw	255
  5584  016984  6E3D               	movwf	(btemp+11)^0,c
  5585                           
  5586                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5587  016986  0EF5               	movlw	245
  5588  016988  24E1               	addwf	fsr1l,w,c
  5589  01698A  6E3A               	movwf	(btemp+8)^0,c
  5590  01698C  0EFF               	movlw	255
  5591  01698E  20E2               	addwfc	fsr1h,w,c
  5592  016990  6E3B               	movwf	(btemp+9)^0,c
  5593  016992  503C               	movf	(btemp+10)^0,w,c
  5594  016994  263A               	addwf	(btemp+8)^0,f,c
  5595  016996  503D               	movf	(btemp+11)^0,w,c
  5596  016998  223B               	addwfc	(btemp+9)^0,f,c
  5597                           
  5598                           ;stkvar	_ap @ sp[(-8)+6]
  5599  01699A  0EFF               	movlw	-1
  5600  01699C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  5601  0169A2  0EFE               	movlw	-2
  5602  0169A4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  5603                           
  5604                           ;stkvar	_s @ sp[(-8)+-3]
  5605  0169AA  0EF5               	movlw	-11
  5606  0169AC  006F FF8C  F03C    	movff	plusw1,btemp+10
  5607  0169B2  0EF6               	movlw	-10
  5608  0169B4  006F FF8C  F03D    	movff	plusw1,btemp+11
  5609                           
  5610                           ;stkvar	_f @ sp[(-8)+0]
  5611  0169BA  0EF9               	movlw	-7
  5612  0169BC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  5613  0169C2  0EF8               	movlw	-8
  5614  0169C4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  5615                           
  5616                           ;stkvar	_f @ sp[(-8)+0]
  5617  0169CA  0EFA               	movlw	250
  5618  0169CC  24E1               	addwf	fsr1l,w,c
  5619  0169CE  6ED9               	movwf	fsr2l,c
  5620  0169D0  0EFF               	movlw	255
  5621  0169D2  20E2               	addwfc	fsr1h,w,c
  5622  0169D4  6EDA               	movwf	fsr2h,c
  5623  0169D6  0E00               	movlw	0
  5624  0169D8  6EDE               	movwf	postinc2,c
  5625  0169DA  0E00               	movlw	0
  5626  0169DC  6EDD               	movwf	postdec2,c
  5627                           
  5628                           ;stkvar	_f @ sp[(-8)+0]
  5629  0169DE  0EFC               	movlw	252
  5630  0169E0  24E1               	addwf	fsr1l,w,c
  5631  0169E2  6ED9               	movwf	fsr2l,c
  5632  0169E4  0EFF               	movlw	255
  5633  0169E6  20E2               	addwfc	fsr1h,w,c
  5634  0169E8  6EDA               	movwf	fsr2h,c
  5635  0169EA  0E00               	movlw	0
  5636  0169EC  6EDE               	movwf	postinc2,c
  5637  0169EE  0E00               	movlw	0
  5638  0169F0  6EDD               	movwf	postdec2,c
  5639                           
  5640                           ;stkvar	_ap @ sp[(-8)+6]
  5641  0169F2  0EFE               	movlw	254
  5642  0169F4  24E1               	addwf	fsr1l,w,c
  5643  0169F6  6E32               	movwf	btemp^0,c
  5644  0169F8  0EFF               	movlw	255
  5645  0169FA  20E2               	addwfc	fsr1h,w,c
  5646  0169FC  6E33               	movwf	(btemp+1)^0,c
  5647  0169FE  0060  F0CB  FFE6   	movff	btemp,postinc1
  5648  016A04  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5649                           
  5650                           ;stkvar	_fmt @ sp[(-10)+-5]
  5651  016A0A  0EF1               	movlw	-15
  5652  016A0C  006F FF8F FFE6     	movff	plusw1,postinc1
  5653  016A12  006F FF8F FFE6     	movff	plusw1,postinc1
  5654                           
  5655                           ;stkvar	_f @ sp[(-12)+0]
  5656  016A18  0EF4               	movlw	244
  5657  016A1A  24E1               	addwf	fsr1l,w,c
  5658  016A1C  6E32               	movwf	btemp^0,c
  5659  016A1E  0EFF               	movlw	255
  5660  016A20  20E2               	addwfc	fsr1h,w,c
  5661  016A22  6E33               	movwf	(btemp+1)^0,c
  5662  016A24  0060  F0CB  FFE6   	movff	btemp,postinc1
  5663  016A2A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  5664  016A30  ECAE  F0B7         	call	_vfprintf	;wreg free
  5665                           
  5666                           ;stkvar	_f @ sp[(-8)+0]
  5667  016A34  0EFA               	movlw	250
  5668  016A36  24E1               	addwf	fsr1l,w,c
  5669  016A38  6ED9               	movwf	fsr2l,c
  5670  016A3A  0EFF               	movlw	255
  5671  016A3C  20E2               	addwfc	fsr1h,w,c
  5672  016A3E  6EDA               	movwf	fsr2h,c
  5673  016A40  006F FF78  F03C    	movff	postinc2,btemp+10
  5674  016A46  006F FF74  F03D    	movff	postdec2,btemp+11
  5675                           
  5676                           ;stkvar	_s @ sp[(-8)+-3]
  5677  016A4C  0EF5               	movlw	-11
  5678  016A4E  006F FF8C  F03A    	movff	plusw1,btemp+8
  5679  016A54  0EF6               	movlw	-10
  5680  016A56  006F FF8C  F03B    	movff	plusw1,btemp+9
  5681  016A5C  503C               	movf	(btemp+10)^0,w,c
  5682  016A5E  243A               	addwf	(btemp+8)^0,w,c
  5683  016A60  6ED9               	movwf	fsr2l,c
  5684  016A62  503D               	movf	(btemp+11)^0,w,c
  5685  016A64  203B               	addwfc	(btemp+9)^0,w,c
  5686  016A66  6EDA               	movwf	fsr2h,c
  5687  016A68  0E00               	movlw	0
  5688  016A6A  6EDF               	movwf	indf2,c
  5689                           
  5690                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  5691  016A6C  0EF8               	movlw	248
  5692  016A6E  26E1               	addwf	fsr1l,f,c
  5693  016A70  0EFF               	movlw	255
  5694  016A72  22E2               	addwfc	fsr1h,f,c
  5695  016A74  52E5               	movf	postdec1,f,c
  5696  016A76  50E7               	movf	indf1,w,c
  5697  016A78  5EE1               	subwf	fsr1l,f,c
  5698  016A7A  0E00               	movlw	0
  5699  016A7C  5AE2               	subwfb	fsr1h,f,c
  5700  016A7E  0012               	return		;funcret
  5701  016A80                     __end_of_sprintf:
  5702                           	opt callstack 0
  5703                           
  5704 ;; *************** function _get_vterm_ptr *****************
  5705 ;; Defined at:
  5706 ;;		line 116 in file "mconfig.c"
  5707 ;; Parameters:    Size  Location     Type
  5708 ;;  line            1  [STACK] const unsigned char 
  5709 ;;  vterm           1  [STACK] const unsigned char 
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  2  [STACK] PTR unsigned char 
  5714 ;; Registers used:
  5715 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/5
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5725 ;;Total ram usage:        0 bytes
  5726 ;; Hardware stack levels used:    1
  5727 ;; Hardware stack levels required when called:    6
  5728 ;; This function calls:
  5729 ;;		Nothing
  5730 ;; This function is called by:
  5731 ;;		_main
  5732 ;;		_check_help
  5733 ;;		_vterm_dump
  5734 ;; This function uses a reentrant model
  5735 ;;
  5736                           
  5737                           	psect	text23
  5738  017F82                     __ptext23:
  5739                           	opt callstack 0
  5740  017F82                     _get_vterm_ptr:
  5741                           	opt callstack 24
  5742                           
  5743                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  5744                           ;stkvar	_vterm @ sp[(0)+-2]
  5745                           
  5746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5747                           ;incstack = 0
  5748  017F82  0EFE               	movlw	-2
  5749  017F84  50E3               	movf	plusw1,w,c
  5750  017F86  0B03               	andlw	3
  5751  017F88  0D36               	mullw	54
  5752  017F8A  0E00               	movlw	low _D
  5753  017F8C  6E32               	movwf	btemp^0,c
  5754  017F8E  0E05               	movlw	high _D
  5755  017F90  6E33               	movwf	(btemp+1)^0,c
  5756  017F92  50F3               	movf	243,w,c
  5757  017F94  2632               	addwf	btemp^0,f,c
  5758  017F96  50F4               	movf	244,w,c
  5759  017F98  2233               	addwfc	(btemp+1)^0,f,c
  5760                           
  5761                           ;stkvar	_line @ sp[(0)+-1]
  5762  017F9A  0EFF               	movlw	-1
  5763  017F9C  50E3               	movf	plusw1,w,c
  5764  017F9E  0B03               	andlw	3
  5765  017FA0  0D12               	mullw	18
  5766  017FA2  50F3               	movf	243,w,c
  5767  017FA4  2632               	addwf	btemp^0,f,c
  5768  017FA6  50F4               	movf	244,w,c
  5769  017FA8  2233               	addwfc	(btemp+1)^0,f,c
  5770                           
  5771                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5772  017FAA  52E5               	movf	postdec1,f,c
  5773  017FAC  52E5               	movf	postdec1,f,c
  5774  017FAE  0012               	return		;funcret
  5775  017FB0                     __end_of_get_vterm_ptr:
  5776                           	opt callstack 0
  5777                           
  5778 ;; *************** function _WaitMs *****************
  5779 ;; Defined at:
  5780 ;;		line 32 in file "timers.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;  numMilliseco    2  [STACK] const unsigned short 
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;		None
  5785 ;; Return value:  Size  Location     Type
  5786 ;;                  1  [STACK] void 
  5787 ;; Registers used:
  5788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5789 ;; Tracked objects:
  5790 ;;		On entry : 1/1
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5798 ;;Total ram usage:        0 bytes
  5799 ;; Hardware stack levels used:    1
  5800 ;; Hardware stack levels required when called:    7
  5801 ;; This function calls:
  5802 ;;		_StartTimer
  5803 ;;		_TimerDone
  5804 ;; This function is called by:
  5805 ;;		_main
  5806 ;;		_vterm_dump
  5807 ;; This function uses a reentrant model
  5808 ;;
  5809                           
  5810                           	psect	text24
  5811  017DEE                     __ptext24:
  5812                           	opt callstack 0
  5813  017DEE                     _WaitMs:
  5814                           	opt callstack 21
  5815                           
  5816                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5817                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5818                           
  5819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5820                           ;incstack = 0
  5821  017DEE  0EFE               	movlw	-2
  5822  017DF0  006F FF8F FFE6     	movff	plusw1,postinc1
  5823  017DF6  006F FF8F FFE6     	movff	plusw1,postinc1
  5824  017DFC  0E00               	movlw	0
  5825  017DFE  6EE6               	movwf	postinc1,c
  5826  017E00  ECBD  F0BE         	call	_StartTimer	;wreg free
  5827                           
  5828                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5829  017E04  D005               	goto	l11250
  5830  017E06                     l1497:
  5831                           
  5832                           ;timers.c: 36:   __nop();
  5833  017E06  F000               	nop	
  5834                           
  5835                           ;timers.c: 37:   __nop();
  5836  017E08  F000               	nop	
  5837                           
  5838                           ;timers.c: 38:   __nop();
  5839  017E0A  F000               	nop	
  5840                           
  5841                           ;timers.c: 39:   __nop();
  5842  017E0C  F000               	nop	
  5843  017E0E  0004               	clrwdt		;# 
  5844  017E10                     l11250:
  5845                           
  5846                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5847  017E10  0E00               	movlw	0
  5848  017E12  6EE6               	movwf	postinc1,c
  5849  017E14  ECAB  F0C1         	call	_TimerDone	;wreg free
  5850  017E18  5032               	movf	btemp^0,w,c
  5851  017E1A  B4D8               	btfsc	status,2,c
  5852  017E1C  D7F4               	goto	l1497
  5853                           
  5854                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5855  017E1E  52E5               	movf	postdec1,f,c
  5856  017E20  52E5               	movf	postdec1,f,c
  5857  017E22  0012               	return		;funcret
  5858  017E24                     __end_of_WaitMs:
  5859                           	opt callstack 0
  5860                           
  5861 ;; *************** function _update_lcd *****************
  5862 ;; Defined at:
  5863 ;;		line 85 in file "mconfig.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;  vterm           1  [STACK] unsigned char 
  5866 ;; Auto vars:     Size  Location     Type
  5867 ;;		None
  5868 ;; Return value:  Size  Location     Type
  5869 ;;                  1  [STACK] unsigned char 
  5870 ;; Registers used:
  5871 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5872 ;; Tracked objects:
  5873 ;;		On entry : 0/5
  5874 ;;		On exit  : 1/1
  5875 ;;		Unchanged: 0/0
  5876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5881 ;;Total ram usage:        0 bytes
  5882 ;; Hardware stack levels used:    1
  5883 ;; Hardware stack levels required when called:   17
  5884 ;; This function calls:
  5885 ;;		_eaDogM_WriteStringAtPos
  5886 ;;		_wait_lcd_done
  5887 ;; This function is called by:
  5888 ;;		_main
  5889 ;;		_check_help
  5890 ;; This function uses a reentrant model
  5891 ;;
  5892                           
  5893                           	psect	text25
  5894  016868                     __ptext25:
  5895                           	opt callstack 0
  5896  016868                     _update_lcd:
  5897                           	opt callstack 13
  5898                           
  5899                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  5900                           ;stkvar	_vterm @ sp[(0)+-1]
  5901                           
  5902                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5903                           ;incstack = 0
  5904  016868  0EFF               	movlw	-1
  5905  01686A  006F FF8C  F032    	movff	plusw1,btemp
  5906  016870  0E03               	movlw	3
  5907  016872  1632               	andwf	btemp^0,f,c
  5908  016874  0EFF               	movlw	-1
  5909  016876  0060  F0CB  FFE3   	movff	btemp,plusw1
  5910                           
  5911                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  5912  01687C  0105               	movlb	5	; () banked
  5913  01687E  A1D8               	btfss	(_D+216)& (0+255),0,b
  5914  016880  D004               	goto	l11704
  5915                           
  5916                           ; BSR set to: 5
  5917                           ;stkvar	_vterm @ sp[(0)+-1]
  5918  016882  0EFF               	movlw	-1
  5919  016884  50E3               	movf	plusw1,w,c
  5920  016886  B4D8               	btfsc	status,2,c
  5921  016888  D074               	goto	l1575
  5922  01688A                     l11704:
  5923                           
  5924                           ; BSR set to: 5
  5925                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  5926                           ;stkvar	_vterm @ sp[(0)+-1]
  5927  01688A  0EFF               	movlw	-1
  5928  01688C  50E3               	movf	plusw1,w,c
  5929  01688E  0D36               	mullw	54
  5930  016890  0E10               	movlw	low (_D+16)
  5931  016892  24F3               	addwf	243,w,c
  5932  016894  6ED9               	movwf	fsr2l,c
  5933  016896  0E05               	movlw	high (_D+16)
  5934  016898  20F4               	addwfc	prodh,w,c
  5935  01689A  6EDA               	movwf	fsr2h,c
  5936  01689C  0E00               	movlw	0
  5937  01689E  6EDF               	movwf	indf2,c
  5938                           
  5939                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  5940                           ;stkvar	_vterm @ sp[(0)+-1]
  5941  0168A0  0EFF               	movlw	-1
  5942  0168A2  50E3               	movf	plusw1,w,c
  5943  0168A4  0D36               	mullw	54
  5944  0168A6  0E22               	movlw	low (_D+34)
  5945  0168A8  24F3               	addwf	243,w,c
  5946  0168AA  6ED9               	movwf	fsr2l,c
  5947  0168AC  0E05               	movlw	high (_D+34)
  5948  0168AE  20F4               	addwfc	prodh,w,c
  5949  0168B0  6EDA               	movwf	fsr2h,c
  5950  0168B2  0E00               	movlw	0
  5951  0168B4  6EDF               	movwf	indf2,c
  5952                           
  5953                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  5954                           ;stkvar	_vterm @ sp[(0)+-1]
  5955  0168B6  0EFF               	movlw	-1
  5956  0168B8  50E3               	movf	plusw1,w,c
  5957  0168BA  0D36               	mullw	54
  5958  0168BC  0E34               	movlw	low (_D+52)
  5959  0168BE  24F3               	addwf	243,w,c
  5960  0168C0  6ED9               	movwf	fsr2l,c
  5961  0168C2  0E05               	movlw	high (_D+52)
  5962  0168C4  20F4               	addwfc	prodh,w,c
  5963  0168C6  6EDA               	movwf	fsr2h,c
  5964  0168C8  0E00               	movlw	0
  5965  0168CA  6EDF               	movwf	indf2,c
  5966                           
  5967                           ; BSR set to: 5
  5968                           ;mconfig.c: 95:  wait_lcd_done();
  5969  0168CC  EC5E  F0C2         	call	_wait_lcd_done	;wreg free
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5973                           ;stkvar	_vterm @ sp[(0)+-1]
  5974  0168D0  0EFF               	movlw	-1
  5975  0168D2  50E3               	movf	plusw1,w,c
  5976  0168D4  0D36               	mullw	54
  5977  0168D6  0E00               	movlw	low _D
  5978  0168D8  6E3C               	movwf	(btemp+10)^0,c
  5979  0168DA  0E05               	movlw	high _D
  5980  0168DC  6E3D               	movwf	(btemp+11)^0,c
  5981  0168DE  50F3               	movf	243,w,c
  5982  0168E0  263C               	addwf	(btemp+10)^0,f,c
  5983  0168E2  50F4               	movf	244,w,c
  5984  0168E4  223D               	addwfc	(btemp+11)^0,f,c
  5985  0168E6  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  5986  0168EC  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  5987  0168F2  0E00               	movlw	0
  5988  0168F4  6EE6               	movwf	postinc1,c
  5989  0168F6  0E00               	movlw	0
  5990  0168F8  6EE6               	movwf	postinc1,c
  5991  0168FA  EC12  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  5992                           
  5993                           ; BSR set to: 59
  5994                           ;mconfig.c: 97:  wait_lcd_done();
  5995  0168FE  EC5E  F0C2         	call	_wait_lcd_done	;wreg free
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5999                           ;stkvar	_vterm @ sp[(0)+-1]
  6000  016902  0EFF               	movlw	-1
  6001  016904  50E3               	movf	plusw1,w,c
  6002  016906  0D36               	mullw	54
  6003  016908  0E00               	movlw	low _D
  6004  01690A  6E3C               	movwf	(btemp+10)^0,c
  6005  01690C  0E05               	movlw	high _D
  6006  01690E  6E3D               	movwf	(btemp+11)^0,c
  6007  016910  0E12               	movlw	18
  6008  016912  263C               	addwf	(btemp+10)^0,f,c
  6009  016914  0E00               	movlw	0
  6010  016916  223D               	addwfc	(btemp+11)^0,f,c
  6011  016918  50F3               	movf	243,w,c
  6012  01691A  263C               	addwf	(btemp+10)^0,f,c
  6013  01691C  50F4               	movf	244,w,c
  6014  01691E  223D               	addwfc	(btemp+11)^0,f,c
  6015  016920  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6016  016926  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6017  01692C  0E00               	movlw	0
  6018  01692E  6EE6               	movwf	postinc1,c
  6019  016930  0E01               	movlw	1
  6020  016932  6EE6               	movwf	postinc1,c
  6021  016934  EC12  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  6022                           
  6023                           ; BSR set to: 59
  6024                           ;mconfig.c: 99:  wait_lcd_done();
  6025  016938  EC5E  F0C2         	call	_wait_lcd_done	;wreg free
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  6029                           ;stkvar	_vterm @ sp[(0)+-1]
  6030  01693C  0EFF               	movlw	-1
  6031  01693E  50E3               	movf	plusw1,w,c
  6032  016940  0D36               	mullw	54
  6033  016942  0E00               	movlw	low _D
  6034  016944  6E3C               	movwf	(btemp+10)^0,c
  6035  016946  0E05               	movlw	high _D
  6036  016948  6E3D               	movwf	(btemp+11)^0,c
  6037  01694A  0E24               	movlw	36
  6038  01694C  263C               	addwf	(btemp+10)^0,f,c
  6039  01694E  0E00               	movlw	0
  6040  016950  223D               	addwfc	(btemp+11)^0,f,c
  6041  016952  50F3               	movf	243,w,c
  6042  016954  263C               	addwf	(btemp+10)^0,f,c
  6043  016956  50F4               	movf	244,w,c
  6044  016958  223D               	addwfc	(btemp+11)^0,f,c
  6045  01695A  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  6046  016960  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  6047  016966  0E00               	movlw	0
  6048  016968  6EE6               	movwf	postinc1,c
  6049  01696A  0E02               	movlw	2
  6050  01696C  6EE6               	movwf	postinc1,c
  6051  01696E  EC12  F0BF         	call	_eaDogM_WriteStringAtPos	;wreg free
  6052  016972                     l1575:
  6053                           
  6054                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6055  016972  52E5               	movf	postdec1,f,c
  6056  016974  0012               	return		;funcret
  6057  016976                     __end_of_update_lcd:
  6058                           	opt callstack 0
  6059                           
  6060 ;; *************** function _eaDogM_WriteStringAtPos *****************
  6061 ;; Defined at:
  6062 ;;		line 252 in file "eadog.c"
  6063 ;; Parameters:    Size  Location     Type
  6064 ;;  r               1  [STACK] const unsigned char 
  6065 ;;  c               1  [STACK] const unsigned char 
  6066 ;;  strPtr          2  [STACK] PTR unsigned char 
  6067 ;;		 -> D.lcd(216), D(218), V(187), 
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;		None
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  1  [STACK] void 
  6072 ;; Registers used:
  6073 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6074 ;; Tracked objects:
  6075 ;;		On entry : 3F/0
  6076 ;;		On exit  : 3F/3B
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6083 ;;Total ram usage:        0 bytes
  6084 ;; Hardware stack levels used:    1
  6085 ;; Hardware stack levels required when called:   16
  6086 ;; This function calls:
  6087 ;;		_eaDogM_WriteString
  6088 ;;		_send_lcd_cmd_dma
  6089 ;; This function is called by:
  6090 ;;		_update_lcd
  6091 ;;		_vterm_dump
  6092 ;; This function uses a reentrant model
  6093 ;;
  6094                           
  6095                           	psect	text26
  6096  017E24                     __ptext26:
  6097                           	opt callstack 0
  6098  017E24                     _eaDogM_WriteStringAtPos:
  6099                           	opt callstack 13
  6100                           
  6101                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  6102                           ;stkvar	_c @ sp[(0)+-2]
  6103                           
  6104                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6105                           ;incstack = 0
  6106  017E24  0EFE               	movlw	-2
  6107  017E26  006F FF8C  F03D    	movff	plusw1,btemp+11
  6108                           
  6109                           ;stkvar	_r @ sp[(0)+-1]
  6110  017E2C  0EFF               	movlw	-1
  6111  017E2E  50E3               	movf	plusw1,w,c
  6112  017E30  0D10               	mullw	16
  6113  017E32  50F3               	movf	243,w,c
  6114  017E34  243D               	addwf	(btemp+11)^0,w,c
  6115  017E36  0F80               	addlw	128
  6116  017E38  6EE6               	movwf	postinc1,c
  6117  017E3A  EC15  F0BD         	call	_send_lcd_cmd_dma	;wreg free
  6118                           
  6119                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  6120                           ;stkvar	_strPtr @ sp[(0)+-4]
  6121  017E3E  0EFC               	movlw	-4
  6122  017E40  006F FF8F FFE6     	movff	plusw1,postinc1
  6123  017E46  006F FF8F FFE6     	movff	plusw1,postinc1
  6124  017E4C  EC02  F0B8         	call	_eaDogM_WriteString	;wreg free
  6125                           
  6126                           ; BSR set to: 59
  6127                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  6128  017E50  52E5               	movf	postdec1,f,c
  6129  017E52  52E5               	movf	postdec1,f,c
  6130  017E54  52E5               	movf	postdec1,f,c
  6131  017E56  52E5               	movf	postdec1,f,c
  6132  017E58  0012               	return		;funcret
  6133  017E5A                     __end_of_eaDogM_WriteStringAtPos:
  6134                           	opt callstack 0
  6135                           
  6136 ;; *************** function _send_lcd_cmd_dma *****************
  6137 ;; Defined at:
  6138 ;;		line 205 in file "eadog.c"
  6139 ;; Parameters:    Size  Location     Type
  6140 ;;  strPtr          1  [STACK] unsigned char 
  6141 ;; Auto vars:     Size  Location     Type
  6142 ;;		None
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  1  [STACK] void 
  6145 ;; Registers used:
  6146 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/3D
  6149 ;;		On exit  : 3F/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6156 ;;Total ram usage:        0 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; Hardware stack levels required when called:   15
  6159 ;; This function calls:
  6160 ;;		_printf
  6161 ;;		_ringBufS_flush
  6162 ;;		_start_lcd
  6163 ;;		_wait_lcd_done
  6164 ;;		_wait_lcd_set
  6165 ;; This function is called by:
  6166 ;;		_eaDogM_WriteCommand
  6167 ;;		_eaDogM_WriteStringAtPos
  6168 ;; This function uses a reentrant model
  6169 ;;
  6170                           
  6171                           	psect	text27
  6172  017A2A                     __ptext27:
  6173                           	opt callstack 0
  6174  017A2A                     _send_lcd_cmd_dma:
  6175                           	opt callstack 13
  6176                           
  6177                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  6178                           
  6179                           ; BSR set to: 59
  6180                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6181                           ;incstack = 0
  6182  017A2A  EC3C  F0C3         	call	_wait_lcd_set	;wreg free
  6183                           
  6184                           ; BSR set to: 0
  6185                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  6186  017A2E  0E00               	movlw	0
  6187  017A30  6EE6               	movwf	postinc1,c
  6188  017A32  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6189  017A38  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6190  017A3E  ECF2  F0B8         	call	_ringBufS_flush	;wreg free
  6191  017A42  92BC               	bcf	188,1,c	;volatile
  6192  017A44  94BC               	bcf	188,2,c	;volatile
  6193                           
  6194                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  6195  017A46  013B               	movlb	59	; () banked
  6196  017A48  9FFC               	bcf	252,7,b	;volatile
  6197                           
  6198                           ; BSR set to: 59
  6199                           ;eadog.c: 214:  DMA1SSZ = 1;
  6200  017A4A  0E00               	movlw	0
  6201  017A4C  6FF8               	movwf	248,b	;volatile
  6202  017A4E  0E01               	movlw	1
  6203  017A50  6FF7               	movwf	247,b	;volatile
  6204                           
  6205                           ; BSR set to: 59
  6206                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  6207  017A52  8FFC               	bsf	252,7,b	;volatile
  6208                           
  6209                           ; BSR set to: 59
  6210                           ;eadog.c: 216:  printf("%c", strPtr);
  6211                           ;stkvar	_strPtr @ sp[(0)+-1]
  6212  017A54  0EFF               	movlw	-1
  6213  017A56  50E3               	movf	plusw1,w,c
  6214  017A58  6EE6               	movwf	postinc1,c
  6215  017A5A  0E00               	movlw	0
  6216  017A5C  6EE6               	movwf	postinc1,c
  6217  017A5E  0EF8               	movlw	low STR_13
  6218  017A60  6EE6               	movwf	postinc1,c
  6219  017A62  0EFF               	movlw	high STR_13
  6220  017A64  6EE6               	movwf	postinc1,c
  6221  017A66  0E04               	movlw	4
  6222  017A68  6EE6               	movwf	postinc1,c
  6223  017A6A  EC2E  F0BC         	call	_printf	;wreg free
  6224                           
  6225                           ;eadog.c: 217:  start_lcd();
  6226  017A6E  EC3F  F0C3         	call	_start_lcd	;wreg free
  6227                           
  6228                           ; BSR set to: 59
  6229                           ;eadog.c: 218:  wait_lcd_done();
  6230  017A72  EC5E  F0C2         	call	_wait_lcd_done	;wreg free
  6231                           
  6232                           ; BSR set to: 0
  6233  017A76  82BC               	bsf	188,1,c	;volatile
  6234                           
  6235                           ; BSR set to: 0
  6236                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6237  017A78  52E5               	movf	postdec1,f,c
  6238  017A7A  0012               	return		;funcret
  6239  017A7C                     __end_of_send_lcd_cmd_dma:
  6240                           	opt callstack 0
  6241                           
  6242 ;; *************** function _wait_lcd_done *****************
  6243 ;; Defined at:
  6244 ;;		line 141 in file "eadog.c"
  6245 ;; Parameters:    Size  Location     Type
  6246 ;;		None
  6247 ;; Auto vars:     Size  Location     Type
  6248 ;;		None
  6249 ;; Return value:  Size  Location     Type
  6250 ;;                  1  [STACK] void 
  6251 ;; Registers used:
  6252 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6253 ;; Tracked objects:
  6254 ;;		On entry : 0/1
  6255 ;;		On exit  : 3F/0
  6256 ;;		Unchanged: 0/0
  6257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6262 ;;Total ram usage:        0 bytes
  6263 ;; Hardware stack levels used:    1
  6264 ;; Hardware stack levels required when called:    7
  6265 ;; This function calls:
  6266 ;;		_wdtdelay
  6267 ;; This function is called by:
  6268 ;;		_send_lcd_cmd_dma
  6269 ;;		_update_lcd
  6270 ;;		_vterm_dump
  6271 ;; This function uses a reentrant model
  6272 ;;
  6273                           
  6274                           	psect	text28
  6275  0184BC                     __ptext28:
  6276                           	opt callstack 0
  6277  0184BC                     _wait_lcd_done:
  6278                           	opt callstack 22
  6279                           
  6280                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  6281                           
  6282                           ; BSR set to: 0
  6283                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6284                           ;incstack = 0
  6285  0184BC  0100               	movlb	0	; () banked
  6286  0184BE  B7A1               	btfsc	_spi_link& (0+255),3,b	;volatile
  6287  0184C0  D7FD               	goto	_wait_lcd_done
  6288                           
  6289                           ; BSR set to: 0
  6290                           ;eadog.c: 144:  wdtdelay(50);
  6291  0184C2  0E32               	movlw	50
  6292  0184C4  6EE6               	movwf	postinc1,c
  6293  0184C6  0E00               	movlw	0
  6294  0184C8  6EE6               	movwf	postinc1,c
  6295  0184CA  0E00               	movlw	0
  6296  0184CC  6EE6               	movwf	postinc1,c
  6297  0184CE  0E00               	movlw	0
  6298  0184D0  6EE6               	movwf	postinc1,c
  6299  0184D2  EC8E  F0BC         	call	_wdtdelay	;wreg free
  6300                           
  6301                           ; BSR set to: 0
  6302                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6303  0184D6  0012               	return		;funcret
  6304  0184D8                     __end_of_wait_lcd_done:
  6305                           	opt callstack 0
  6306                           
  6307 ;; *************** function _wdtdelay *****************
  6308 ;; Defined at:
  6309 ;;		line 22 in file "eadog.c"
  6310 ;; Parameters:    Size  Location     Type
  6311 ;;  delay           4  [STACK] const unsigned long 
  6312 ;; Auto vars:     Size  Location     Type
  6313 ;;		None
  6314 ;; Return value:  Size  Location     Type
  6315 ;;                  1  [STACK] void 
  6316 ;; Registers used:
  6317 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6318 ;; Tracked objects:
  6319 ;;		On entry : 0/0
  6320 ;;		On exit  : 3F/0
  6321 ;;		Unchanged: 0/0
  6322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6327 ;;Total ram usage:        0 bytes
  6328 ;; Hardware stack levels used:    1
  6329 ;; Hardware stack levels required when called:    6
  6330 ;; This function calls:
  6331 ;;		Nothing
  6332 ;; This function is called by:
  6333 ;;		_init_display
  6334 ;;		_send_lcd_cmd
  6335 ;;		_send_lcd_cmd_long
  6336 ;;		_wait_lcd_done
  6337 ;; This function uses a reentrant model
  6338 ;;
  6339                           
  6340                           	psect	text29
  6341  01791C                     __ptext29:
  6342                           	opt callstack 0
  6343  01791C                     _wdtdelay:
  6344                           	opt callstack 22
  6345                           
  6346                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  6347                           
  6348                           ; BSR set to: 0
  6349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6350                           ;incstack = 0
  6351  01791C  0100               	movlb	0	; () banked
  6352  01791E  6BB9               	clrf	wdtdelay@dcount& (0+255),b
  6353  017920  6BBA               	clrf	(wdtdelay@dcount+1)& (0+255),b
  6354  017922  6BBB               	clrf	(wdtdelay@dcount+2)& (0+255),b
  6355  017924  6BBC               	clrf	(wdtdelay@dcount+3)& (0+255),b
  6356  017926                     l1342:
  6357                           
  6358                           ; BSR set to: 0
  6359                           ;eadog.c: 27:   __nop();
  6360  017926  F000               	nop	
  6361  017928  0004               	clrwdt		;# 
  6362                           
  6363                           ;eadog.c: 29:  };
  6364  01792A  0E01               	movlw	1
  6365  01792C  0100               	movlb	0	; () banked
  6366  01792E  27B9               	addwf	wdtdelay@dcount& (0+255),f,b
  6367  017930  0E00               	movlw	0
  6368  017932  23BA               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  6369  017934  23BB               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  6370  017936  23BC               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  6371                           
  6372                           ; BSR set to: 0
  6373                           ;stkvar	_delay @ sp[(0)+-4]
  6374  017938  0EFC               	movlw	-4
  6375  01793A  006F FF8C  F032    	movff	plusw1,btemp
  6376  017940  51B9               	movf	wdtdelay@dcount& (0+255),w,b
  6377  017942  5C32               	subwf	btemp^0,w,c
  6378  017944  0EFD               	movlw	-3
  6379  017946  006F FF8C  F032    	movff	plusw1,btemp
  6380  01794C  51BA               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  6381  01794E  5832               	subwfb	btemp^0,w,c
  6382  017950  0EFE               	movlw	-2
  6383  017952  006F FF8C  F032    	movff	plusw1,btemp
  6384  017958  51BB               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  6385  01795A  5832               	subwfb	btemp^0,w,c
  6386  01795C  0EFF               	movlw	-1
  6387  01795E  006F FF8C  F032    	movff	plusw1,btemp
  6388  017964  51BC               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  6389  017966  5832               	subwfb	btemp^0,w,c
  6390  017968  B0D8               	btfsc	status,0,c
  6391  01796A  D7DD               	goto	l1342
  6392                           
  6393                           ; BSR set to: 0
  6394                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  6395  01796C  52E5               	movf	postdec1,f,c
  6396  01796E  52E5               	movf	postdec1,f,c
  6397  017970  52E5               	movf	postdec1,f,c
  6398  017972  52E5               	movf	postdec1,f,c
  6399  017974  0012               	return		;funcret
  6400  017976                     __end_of_wdtdelay:
  6401                           	opt callstack 0
  6402                           
  6403 ;; *************** function _eaDogM_WriteString *****************
  6404 ;; Defined at:
  6405 ;;		line 184 in file "eadog.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  strPtr          2  [STACK] PTR unsigned char 
  6408 ;;		 -> D.lcd(216), D(218), V(187), 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;		None
  6411 ;; Return value:  Size  Location     Type
  6412 ;;                  1  [STACK] void 
  6413 ;; Registers used:
  6414 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6415 ;; Tracked objects:
  6416 ;;		On entry : 3F/0
  6417 ;;		On exit  : 3F/3B
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6423 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6424 ;;Total ram usage:        0 bytes
  6425 ;; Hardware stack levels used:    1
  6426 ;; Hardware stack levels required when called:   15
  6427 ;; This function calls:
  6428 ;;		_printf
  6429 ;;		_ringBufS_flush
  6430 ;;		_start_lcd
  6431 ;;		_strlen
  6432 ;;		_wait_lcd_set
  6433 ;; This function is called by:
  6434 ;;		_eaDogM_WriteStringAtPos
  6435 ;; This function uses a reentrant model
  6436 ;;
  6437                           
  6438                           	psect	text30
  6439  017004                     __ptext30:
  6440                           	opt callstack 0
  6441  017004                     _eaDogM_WriteString:
  6442                           	opt callstack 13
  6443                           
  6444                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6445                           
  6446                           ; BSR set to: 0
  6447                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6448                           ;incstack = 0
  6449  017004  EC3C  F0C3         	call	_wait_lcd_set	;wreg free
  6450                           
  6451                           ; BSR set to: 0
  6452                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6453  017008  0E00               	movlw	0
  6454  01700A  6EE6               	movwf	postinc1,c
  6455  01700C  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
  6456  017012  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
  6457  017018  ECF2  F0B8         	call	_ringBufS_flush	;wreg free
  6458  01701C  94BC               	bcf	188,2,c	;volatile
  6459                           
  6460                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6461                           ;stkvar	_strPtr @ sp[(0)+-2]
  6462  01701E  0EFE               	movlw	-2
  6463  017020  006F FF8F FFE6     	movff	plusw1,postinc1
  6464  017026  006F FF8F FFE6     	movff	plusw1,postinc1
  6465  01702C  EC55  F0B8         	call	_strlen	;wreg free
  6466  017030  5033               	movf	(btemp+1)^0,w,c
  6467  017032  E104               	bnz	u12160
  6468  017034  0E41               	movlw	65
  6469  017036  5C32               	subwf	btemp^0,w,c
  6470  017038  A0D8               	btfss	status,0,c
  6471  01703A  D010               	goto	l11206
  6472  01703C                     u12160:
  6473                           
  6474                           ;stkvar	_strPtr @ sp[(0)+-2]
  6475  01703C  0EFE               	movlw	-2
  6476  01703E  006F FF8C  F03C    	movff	plusw1,btemp+10
  6477  017044  0EFF               	movlw	-1
  6478  017046  006F FF8C  F03D    	movff	plusw1,btemp+11
  6479  01704C  0E40               	movlw	64
  6480  01704E  243C               	addwf	(btemp+10)^0,w,c
  6481  017050  6ED9               	movwf	fsr2l,c
  6482  017052  0E00               	movlw	0
  6483  017054  203D               	addwfc	(btemp+11)^0,w,c
  6484  017056  6EDA               	movwf	fsr2h,c
  6485  017058  0E00               	movlw	0
  6486  01705A  6EDF               	movwf	indf2,c
  6487  01705C                     l11206:
  6488                           
  6489                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6490  01705C  013B               	movlb	59	; () banked
  6491  01705E  9FFC               	bcf	252,7,b	;volatile
  6492                           
  6493                           ; BSR set to: 59
  6494                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6495                           ;stkvar	_strPtr @ sp[(0)+-2]
  6496  017060  0EFE               	movlw	-2
  6497  017062  006F FF8F FFE6     	movff	plusw1,postinc1
  6498  017068  006F FF8F FFE6     	movff	plusw1,postinc1
  6499  01706E  EC55  F0B8         	call	_strlen	;wreg free
  6500  017072  0060  F0CB  FBF7   	movff	btemp,15351	;volatile
  6501  017078  0060  F0CF  FBF8   	movff	btemp+1,15352	;volatile
  6502                           
  6503                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6504  01707E  013B               	movlb	59	; () banked
  6505  017080  8FFC               	bsf	252,7,b	;volatile
  6506                           
  6507                           ; BSR set to: 59
  6508                           ;eadog.c: 195:  printf("%s", strPtr);
  6509                           ;stkvar	_strPtr @ sp[(0)+-2]
  6510  017082  0EFE               	movlw	-2
  6511  017084  006F FF8F FFE6     	movff	plusw1,postinc1
  6512  01708A  006F FF8F FFE6     	movff	plusw1,postinc1
  6513  017090  0EFB               	movlw	low STR_12
  6514  017092  6EE6               	movwf	postinc1,c
  6515  017094  0EFF               	movlw	high STR_12
  6516  017096  6EE6               	movwf	postinc1,c
  6517  017098  0E04               	movlw	4
  6518  01709A  6EE6               	movwf	postinc1,c
  6519  01709C  EC2E  F0BC         	call	_printf	;wreg free
  6520                           
  6521                           ;eadog.c: 196:  start_lcd();
  6522  0170A0  EC3F  F0C3         	call	_start_lcd	;wreg free
  6523                           
  6524                           ; BSR set to: 59
  6525                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6526  0170A4  52E5               	movf	postdec1,f,c
  6527  0170A6  52E5               	movf	postdec1,f,c
  6528  0170A8  0012               	return		;funcret
  6529  0170AA                     __end_of_eaDogM_WriteString:
  6530                           	opt callstack 0
  6531                           
  6532 ;; *************** function _wait_lcd_set *****************
  6533 ;; Defined at:
  6534 ;;		line 131 in file "eadog.c"
  6535 ;; Parameters:    Size  Location     Type
  6536 ;;		None
  6537 ;; Auto vars:     Size  Location     Type
  6538 ;;		None
  6539 ;; Return value:  Size  Location     Type
  6540 ;;                  1  [STACK] void 
  6541 ;; Registers used:
  6542 ;;		None
  6543 ;; Tracked objects:
  6544 ;;		On entry : 0/3D
  6545 ;;		On exit  : 3F/0
  6546 ;;		Unchanged: 0/0
  6547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6552 ;;Total ram usage:        0 bytes
  6553 ;; Hardware stack levels used:    1
  6554 ;; Hardware stack levels required when called:    6
  6555 ;; This function calls:
  6556 ;;		Nothing
  6557 ;; This function is called by:
  6558 ;;		_eaDogM_WriteString
  6559 ;;		_send_lcd_cmd_dma
  6560 ;; This function uses a reentrant model
  6561 ;;
  6562                           
  6563                           	psect	text31
  6564  018678                     __ptext31:
  6565                           	opt callstack 0
  6566  018678                     _wait_lcd_set:
  6567                           	opt callstack 21
  6568                           
  6569                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6570                           
  6571                           ; BSR set to: 59
  6572                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6573                           ;incstack = 0
  6574  018678  0100               	movlb	0	; () banked
  6575  01867A  87A1               	bsf	_spi_link& (0+255),3,b	;volatile
  6576                           
  6577                           ; BSR set to: 0
  6578                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6579  01867C  0012               	return		;funcret
  6580  01867E                     __end_of_wait_lcd_set:
  6581                           	opt callstack 0
  6582                           
  6583 ;; *************** function _start_lcd *****************
  6584 ;; Defined at:
  6585 ;;		line 126 in file "eadog.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;		None
  6588 ;; Auto vars:     Size  Location     Type
  6589 ;;		None
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  1  [STACK] void 
  6592 ;; Registers used:
  6593 ;;		None
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/3B
  6596 ;;		On exit  : 3F/3B
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6603 ;;Total ram usage:        0 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; Hardware stack levels required when called:    6
  6606 ;; This function calls:
  6607 ;;		Nothing
  6608 ;; This function is called by:
  6609 ;;		_eaDogM_WriteString
  6610 ;;		_send_lcd_cmd_dma
  6611 ;; This function uses a reentrant model
  6612 ;;
  6613                           
  6614                           	psect	text32
  6615  01867E                     __ptext32:
  6616                           	opt callstack 0
  6617  01867E                     _start_lcd:
  6618                           	opt callstack 21
  6619                           
  6620                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6621                           
  6622                           ; BSR set to: 0
  6623                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6624                           ;incstack = 0
  6625  01867E  013B               	movlb	59	; () banked
  6626  018680  8DFC               	bsf	252,6,b	;volatile
  6627                           
  6628                           ; BSR set to: 59
  6629                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6630  018682  0012               	return		;funcret
  6631  018684                     __end_of_start_lcd:
  6632                           	opt callstack 0
  6633                           
  6634 ;; *************** function _ringBufS_flush *****************
  6635 ;; Defined at:
  6636 ;;		line 76 in file "ringbufs.c"
  6637 ;; Parameters:    Size  Location     Type
  6638 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6639 ;;		 -> ring_buf1(67), 
  6640 ;;  clearBuffer     1  [STACK] const char 
  6641 ;; Auto vars:     Size  Location     Type
  6642 ;;		None
  6643 ;; Return value:  Size  Location     Type
  6644 ;;                  1  [STACK] void 
  6645 ;; Registers used:
  6646 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6647 ;; Tracked objects:
  6648 ;;		On entry : 3F/0
  6649 ;;		On exit  : 0/0
  6650 ;;		Unchanged: 0/0
  6651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6656 ;;Total ram usage:        0 bytes
  6657 ;; Hardware stack levels used:    1
  6658 ;; Hardware stack levels required when called:    7
  6659 ;; This function calls:
  6660 ;;		_memset
  6661 ;; This function is called by:
  6662 ;;		_eaDogM_WriteString
  6663 ;;		_send_lcd_cmd_dma
  6664 ;; This function uses a reentrant model
  6665 ;;
  6666                           
  6667                           	psect	text33
  6668  0171E4                     __ptext33:
  6669                           	opt callstack 0
  6670  0171E4                     _ringBufS_flush:
  6671                           	opt callstack 20
  6672                           
  6673                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6674                           ;stkvar	__this @ sp[(0)+-2]
  6675                           
  6676                           ; BSR set to: 59
  6677                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6678                           ;incstack = 0
  6679  0171E4  0EFE               	movlw	-2
  6680  0171E6  006F FF8C  F03C    	movff	plusw1,btemp+10
  6681  0171EC  0EFF               	movlw	-1
  6682  0171EE  006F FF8C  F03D    	movff	plusw1,btemp+11
  6683  0171F4  0E42               	movlw	66
  6684  0171F6  243C               	addwf	(btemp+10)^0,w,c
  6685  0171F8  6ED9               	movwf	fsr2l,c
  6686  0171FA  0E00               	movlw	0
  6687  0171FC  203D               	addwfc	(btemp+11)^0,w,c
  6688  0171FE  6EDA               	movwf	fsr2h,c
  6689  017200  0E00               	movlw	0
  6690  017202  6EDF               	movwf	indf2,c
  6691                           
  6692                           ;ringbufs.c: 79:  _this->head = 0;
  6693                           ;stkvar	__this @ sp[(0)+-2]
  6694  017204  0EFE               	movlw	-2
  6695  017206  006F FF8C  F03C    	movff	plusw1,btemp+10
  6696  01720C  0EFF               	movlw	-1
  6697  01720E  006F FF8C  F03D    	movff	plusw1,btemp+11
  6698  017214  0E40               	movlw	64
  6699  017216  243C               	addwf	(btemp+10)^0,w,c
  6700  017218  6ED9               	movwf	fsr2l,c
  6701  01721A  0E00               	movlw	0
  6702  01721C  203D               	addwfc	(btemp+11)^0,w,c
  6703  01721E  6EDA               	movwf	fsr2h,c
  6704  017220  0E00               	movlw	0
  6705  017222  6EDF               	movwf	indf2,c
  6706                           
  6707                           ;ringbufs.c: 80:  _this->tail = 0;
  6708                           ;stkvar	__this @ sp[(0)+-2]
  6709  017224  0EFE               	movlw	-2
  6710  017226  006F FF8C  F03C    	movff	plusw1,btemp+10
  6711  01722C  0EFF               	movlw	-1
  6712  01722E  006F FF8C  F03D    	movff	plusw1,btemp+11
  6713  017234  0E41               	movlw	65
  6714  017236  243C               	addwf	(btemp+10)^0,w,c
  6715  017238  6ED9               	movwf	fsr2l,c
  6716  01723A  0E00               	movlw	0
  6717  01723C  203D               	addwfc	(btemp+11)^0,w,c
  6718  01723E  6EDA               	movwf	fsr2h,c
  6719  017240  0E00               	movlw	0
  6720  017242  6EDF               	movwf	indf2,c
  6721                           
  6722                           ;ringbufs.c: 81:  if (clearBuffer) {
  6723                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6724  017244  0EFD               	movlw	-3
  6725  017246  50E3               	movf	plusw1,w,c
  6726  017248  B4D8               	btfsc	status,2,c
  6727  01724A  D011               	goto	l1482
  6728                           
  6729                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6730  01724C  0E40               	movlw	64
  6731  01724E  6EE6               	movwf	postinc1,c
  6732  017250  0E00               	movlw	0
  6733  017252  6EE6               	movwf	postinc1,c
  6734  017254  0E00               	movlw	0
  6735  017256  6EE6               	movwf	postinc1,c
  6736  017258  0E00               	movlw	0
  6737  01725A  6EE6               	movwf	postinc1,c
  6738                           
  6739                           ;stkvar	__this @ sp[(-4)+-2]
  6740  01725C  0EFA               	movlw	-6
  6741  01725E  006F FF8F FFE6     	movff	plusw1,postinc1
  6742  017264  006F FF8F FFE6     	movff	plusw1,postinc1
  6743  01726A  EC2C  F0A4         	call	_memset	;wreg free
  6744  01726E                     l1482:
  6745                           
  6746                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6747  01726E  52E5               	movf	postdec1,f,c
  6748  017270  52E5               	movf	postdec1,f,c
  6749  017272  52E5               	movf	postdec1,f,c
  6750  017274  0012               	return		;funcret
  6751  017276                     __end_of_ringBufS_flush:
  6752                           	opt callstack 0
  6753                           
  6754 ;; *************** function _memset *****************
  6755 ;; Defined at:
  6756 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;  dest            2  [STACK] PTR void 
  6759 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6760 ;;  c               2  [STACK] int 
  6761 ;;  n               2  [STACK] unsigned int 
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;  s               2  [STACK] PTR unsigned char 
  6764 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6765 ;;  k               2  [STACK] unsigned int 
  6766 ;; Return value:  Size  Location     Type
  6767 ;;                  2  [STACK] PTR void 
  6768 ;; Registers used:
  6769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6770 ;; Tracked objects:
  6771 ;;		On entry : 0/0
  6772 ;;		On exit  : 0/0
  6773 ;;		Unchanged: 0/0
  6774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6779 ;;Total ram usage:        0 bytes
  6780 ;; Hardware stack levels used:    1
  6781 ;; Hardware stack levels required when called:    6
  6782 ;; This function calls:
  6783 ;;		Nothing
  6784 ;; This function is called by:
  6785 ;;		_ringBufS_init
  6786 ;;		_ringBufS_flush
  6787 ;; This function uses a reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text34
  6791  014858                     __ptext34:
  6792                           	opt callstack 0
  6793  014858                     _memset:
  6794                           	opt callstack 0
  6795                           
  6796                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6797  014858  52E6               	movf	postinc1,f,c
  6798  01485A  52E6               	movf	postinc1,f,c
  6799  01485C  52E6               	movf	postinc1,f,c
  6800  01485E  52E6               	movf	postinc1,f,c
  6801                           
  6802                           ;stkvar	_dest @ sp[(-4)+-2]
  6803                           
  6804                           ;incstack = 0
  6805  014860  0EFA               	movlw	-6
  6806  014862  006F FF8C  F03C    	movff	plusw1,btemp+10
  6807  014868  0EFB               	movlw	-5
  6808  01486A  006F FF8C  F03D    	movff	plusw1,btemp+11
  6809                           
  6810                           ;stkvar	_s @ sp[(-4)+0]
  6811  014870  0EFD               	movlw	-3
  6812  014872  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  6813  014878  0EFC               	movlw	-4
  6814  01487A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  6815                           
  6816                           ;stkvar	_n @ sp[(-4)+-6]
  6817  014880  0EF6               	movlw	-10
  6818  014882  006F FF8C  F032    	movff	plusw1,btemp
  6819  014888  0EF7               	movlw	-9
  6820  01488A  50E3               	movf	plusw1,w,c
  6821  01488C  1032               	iorwf	btemp^0,w,c
  6822  01488E  B4D8               	btfsc	status,2,c
  6823  014890  D154               	goto	u12110
  6824                           
  6825                           ;stkvar	_c @ sp[(-4)+-4]
  6826                           ;stkvar	_s @ sp[(-4)+0]
  6827  014892  0EFC               	movlw	-4
  6828  014894  006F FF8F FFD9     	movff	plusw1,fsr2l
  6829  01489A  0EFD               	movlw	-3
  6830  01489C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6831  0148A2  0EF8               	movlw	-8
  6832  0148A4  006F FF8F FFDF     	movff	plusw1,indf2
  6833                           
  6834                           ;stkvar	_c @ sp[(-4)+-4]
  6835                           ;stkvar	_n @ sp[(-4)+-6]
  6836                           ;stkvar	_s @ sp[(-4)+0]
  6837  0148AA  0EFC               	movlw	-4
  6838  0148AC  006F FF8C  F03C    	movff	plusw1,btemp+10
  6839  0148B2  0EFD               	movlw	-3
  6840  0148B4  006F FF8C  F03D    	movff	plusw1,btemp+11
  6841  0148BA  0EF6               	movlw	-10
  6842  0148BC  50E3               	movf	plusw1,w,c
  6843  0148BE  263C               	addwf	(btemp+10)^0,f,c
  6844  0148C0  0EF7               	movlw	-9
  6845  0148C2  50E3               	movf	plusw1,w,c
  6846  0148C4  223D               	addwfc	(btemp+11)^0,f,c
  6847  0148C6  0EFF               	movlw	255
  6848  0148C8  243C               	addwf	(btemp+10)^0,w,c
  6849  0148CA  6ED9               	movwf	fsr2l,c
  6850  0148CC  0EFF               	movlw	255
  6851  0148CE  203D               	addwfc	(btemp+11)^0,w,c
  6852  0148D0  6EDA               	movwf	fsr2h,c
  6853  0148D2  0EF8               	movlw	-8
  6854  0148D4  006F FF8F FFDF     	movff	plusw1,indf2
  6855                           
  6856                           ;stkvar	_n @ sp[(-4)+-6]
  6857  0148DA  0EF7               	movlw	-9
  6858  0148DC  50E3               	movf	plusw1,w,c
  6859  0148DE  E108               	bnz	l11100
  6860  0148E0  0EF6               	movlw	-10
  6861  0148E2  006F FF8C  F032    	movff	plusw1,btemp
  6862  0148E8  0E03               	movlw	3
  6863  0148EA  5E32               	subwf	btemp^0,f,c
  6864  0148EC  A0D8               	btfss	status,0,c
  6865  0148EE  D125               	goto	u12110
  6866  0148F0                     l11100:
  6867                           
  6868                           ;stkvar	_c @ sp[(-4)+-4]
  6869                           ;stkvar	_s @ sp[(-4)+0]
  6870  0148F0  0EFC               	movlw	-4
  6871  0148F2  006F FF8C  F03C    	movff	plusw1,btemp+10
  6872  0148F8  0EFD               	movlw	-3
  6873  0148FA  006F FF8C  F03D    	movff	plusw1,btemp+11
  6874  014900  0E01               	movlw	1
  6875  014902  243C               	addwf	(btemp+10)^0,w,c
  6876  014904  6ED9               	movwf	fsr2l,c
  6877  014906  0E00               	movlw	0
  6878  014908  203D               	addwfc	(btemp+11)^0,w,c
  6879  01490A  6EDA               	movwf	fsr2h,c
  6880  01490C  0EF8               	movlw	-8
  6881  01490E  006F FF8F FFDF     	movff	plusw1,indf2
  6882                           
  6883                           ;stkvar	_c @ sp[(-4)+-4]
  6884                           ;stkvar	_s @ sp[(-4)+0]
  6885  014914  0EFC               	movlw	-4
  6886  014916  006F FF8C  F03C    	movff	plusw1,btemp+10
  6887  01491C  0EFD               	movlw	-3
  6888  01491E  006F FF8C  F03D    	movff	plusw1,btemp+11
  6889  014924  0E02               	movlw	2
  6890  014926  243C               	addwf	(btemp+10)^0,w,c
  6891  014928  6ED9               	movwf	fsr2l,c
  6892  01492A  0E00               	movlw	0
  6893  01492C  203D               	addwfc	(btemp+11)^0,w,c
  6894  01492E  6EDA               	movwf	fsr2h,c
  6895  014930  0EF8               	movlw	-8
  6896  014932  006F FF8F FFDF     	movff	plusw1,indf2
  6897                           
  6898                           ;stkvar	_c @ sp[(-4)+-4]
  6899                           ;stkvar	_n @ sp[(-4)+-6]
  6900                           ;stkvar	_s @ sp[(-4)+0]
  6901  014938  0EFC               	movlw	-4
  6902  01493A  006F FF8C  F03C    	movff	plusw1,btemp+10
  6903  014940  0EFD               	movlw	-3
  6904  014942  006F FF8C  F03D    	movff	plusw1,btemp+11
  6905  014948  0EF6               	movlw	-10
  6906  01494A  50E3               	movf	plusw1,w,c
  6907  01494C  263C               	addwf	(btemp+10)^0,f,c
  6908  01494E  0EF7               	movlw	-9
  6909  014950  50E3               	movf	plusw1,w,c
  6910  014952  223D               	addwfc	(btemp+11)^0,f,c
  6911  014954  0EFE               	movlw	254
  6912  014956  243C               	addwf	(btemp+10)^0,w,c
  6913  014958  6ED9               	movwf	fsr2l,c
  6914  01495A  0EFF               	movlw	255
  6915  01495C  203D               	addwfc	(btemp+11)^0,w,c
  6916  01495E  6EDA               	movwf	fsr2h,c
  6917  014960  0EF8               	movlw	-8
  6918  014962  006F FF8F FFDF     	movff	plusw1,indf2
  6919                           
  6920                           ;stkvar	_c @ sp[(-4)+-4]
  6921                           ;stkvar	_n @ sp[(-4)+-6]
  6922                           ;stkvar	_s @ sp[(-4)+0]
  6923  014968  0EFC               	movlw	-4
  6924  01496A  006F FF8C  F03C    	movff	plusw1,btemp+10
  6925  014970  0EFD               	movlw	-3
  6926  014972  006F FF8C  F03D    	movff	plusw1,btemp+11
  6927  014978  0EF6               	movlw	-10
  6928  01497A  50E3               	movf	plusw1,w,c
  6929  01497C  263C               	addwf	(btemp+10)^0,f,c
  6930  01497E  0EF7               	movlw	-9
  6931  014980  50E3               	movf	plusw1,w,c
  6932  014982  223D               	addwfc	(btemp+11)^0,f,c
  6933  014984  0EFD               	movlw	253
  6934  014986  243C               	addwf	(btemp+10)^0,w,c
  6935  014988  6ED9               	movwf	fsr2l,c
  6936  01498A  0EFF               	movlw	255
  6937  01498C  203D               	addwfc	(btemp+11)^0,w,c
  6938  01498E  6EDA               	movwf	fsr2h,c
  6939  014990  0EF8               	movlw	-8
  6940  014992  006F FF8F FFDF     	movff	plusw1,indf2
  6941                           
  6942                           ;stkvar	_n @ sp[(-4)+-6]
  6943  014998  0EF7               	movlw	-9
  6944  01499A  50E3               	movf	plusw1,w,c
  6945  01499C  E108               	bnz	l11106
  6946  01499E  0EF6               	movlw	-10
  6947  0149A0  006F FF8C  F032    	movff	plusw1,btemp
  6948  0149A6  0E07               	movlw	7
  6949  0149A8  5E32               	subwf	btemp^0,f,c
  6950  0149AA  A0D8               	btfss	status,0,c
  6951  0149AC  D0C6               	goto	u12110
  6952  0149AE                     l11106:
  6953                           
  6954                           ;stkvar	_c @ sp[(-4)+-4]
  6955                           ;stkvar	_s @ sp[(-4)+0]
  6956  0149AE  0EFC               	movlw	-4
  6957  0149B0  006F FF8C  F03C    	movff	plusw1,btemp+10
  6958  0149B6  0EFD               	movlw	-3
  6959  0149B8  006F FF8C  F03D    	movff	plusw1,btemp+11
  6960  0149BE  0E03               	movlw	3
  6961  0149C0  243C               	addwf	(btemp+10)^0,w,c
  6962  0149C2  6ED9               	movwf	fsr2l,c
  6963  0149C4  0E00               	movlw	0
  6964  0149C6  203D               	addwfc	(btemp+11)^0,w,c
  6965  0149C8  6EDA               	movwf	fsr2h,c
  6966  0149CA  0EF8               	movlw	-8
  6967  0149CC  006F FF8F FFDF     	movff	plusw1,indf2
  6968                           
  6969                           ;stkvar	_c @ sp[(-4)+-4]
  6970                           ;stkvar	_n @ sp[(-4)+-6]
  6971                           ;stkvar	_s @ sp[(-4)+0]
  6972  0149D2  0EFC               	movlw	-4
  6973  0149D4  006F FF8C  F03C    	movff	plusw1,btemp+10
  6974  0149DA  0EFD               	movlw	-3
  6975  0149DC  006F FF8C  F03D    	movff	plusw1,btemp+11
  6976  0149E2  0EF6               	movlw	-10
  6977  0149E4  50E3               	movf	plusw1,w,c
  6978  0149E6  263C               	addwf	(btemp+10)^0,f,c
  6979  0149E8  0EF7               	movlw	-9
  6980  0149EA  50E3               	movf	plusw1,w,c
  6981  0149EC  223D               	addwfc	(btemp+11)^0,f,c
  6982  0149EE  0EFC               	movlw	252
  6983  0149F0  243C               	addwf	(btemp+10)^0,w,c
  6984  0149F2  6ED9               	movwf	fsr2l,c
  6985  0149F4  0EFF               	movlw	255
  6986  0149F6  203D               	addwfc	(btemp+11)^0,w,c
  6987  0149F8  6EDA               	movwf	fsr2h,c
  6988  0149FA  0EF8               	movlw	-8
  6989  0149FC  006F FF8F FFDF     	movff	plusw1,indf2
  6990                           
  6991                           ;stkvar	_n @ sp[(-4)+-6]
  6992  014A02  0EF7               	movlw	-9
  6993  014A04  50E3               	movf	plusw1,w,c
  6994  014A06  E108               	bnz	l11112
  6995  014A08  0EF6               	movlw	-10
  6996  014A0A  006F FF8C  F032    	movff	plusw1,btemp
  6997  014A10  0E09               	movlw	9
  6998  014A12  5E32               	subwf	btemp^0,f,c
  6999  014A14  A0D8               	btfss	status,0,c
  7000  014A16  D091               	goto	u12110
  7001  014A18                     l11112:
  7002                           
  7003                           ;stkvar	_s @ sp[(-4)+0]
  7004  014A18  0EFC               	movlw	-4
  7005  014A1A  006F FF8C  F03C    	movff	plusw1,btemp+10
  7006  014A20  1E3C               	comf	(btemp+10)^0,f,c
  7007  014A22  0EFD               	movlw	-3
  7008  014A24  006F FF8C  F03D    	movff	plusw1,btemp+11
  7009  014A2A  1E3D               	comf	(btemp+11)^0,f,c
  7010  014A2C  2A3C               	incf	(btemp+10)^0,f,c
  7011  014A2E  B4D8               	btfsc	status,2,c
  7012  014A30  2A3D               	incf	(btemp+11)^0,f,c
  7013  014A32  0E03               	movlw	3
  7014  014A34  163C               	andwf	(btemp+10)^0,f,c
  7015  014A36  0E00               	movlw	0
  7016  014A38  163D               	andwf	(btemp+11)^0,f,c
  7017                           
  7018                           ;stkvar	_k @ sp[(-4)+2]
  7019  014A3A  0EFE               	movlw	-2
  7020  014A3C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7021  014A42  0EFF               	movlw	-1
  7022  014A44  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7023                           
  7024                           ;stkvar	_k @ sp[(-4)+2]
  7025                           ;stkvar	_s @ sp[(-4)+0]
  7026  014A4A  0EFC               	movlw	-4
  7027  014A4C  50E3               	movf	plusw1,w,c
  7028  014A4E  6E32               	movwf	btemp^0,c
  7029  014A50  0EFE               	movlw	-2
  7030  014A52  50E3               	movf	plusw1,w,c
  7031  014A54  2632               	addwf	btemp^0,f,c
  7032  014A56  0EFC               	movlw	-4
  7033  014A58  0060  F0CB  FFE3   	movff	btemp,plusw1
  7034  014A5E  0EFD               	movlw	-3
  7035  014A60  50E3               	movf	plusw1,w,c
  7036  014A62  6E32               	movwf	btemp^0,c
  7037  014A64  0EFF               	movlw	-1
  7038  014A66  50E3               	movf	plusw1,w,c
  7039  014A68  2232               	addwfc	btemp^0,f,c
  7040  014A6A  0EFD               	movlw	-3
  7041  014A6C  0060  F0CB  FFE3   	movff	btemp,plusw1
  7042                           
  7043                           ;stkvar	_k @ sp[(-4)+2]
  7044                           ;stkvar	_n @ sp[(-4)+-6]
  7045  014A72  0EF6               	movlw	-10
  7046  014A74  50E3               	movf	plusw1,w,c
  7047  014A76  6E32               	movwf	btemp^0,c
  7048  014A78  0EFE               	movlw	-2
  7049  014A7A  50E3               	movf	plusw1,w,c
  7050  014A7C  5E32               	subwf	btemp^0,f,c
  7051  014A7E  0EF6               	movlw	-10
  7052  014A80  0060  F0CB  FFE3   	movff	btemp,plusw1
  7053  014A86  0EF7               	movlw	-9
  7054  014A88  50E3               	movf	plusw1,w,c
  7055  014A8A  6E32               	movwf	btemp^0,c
  7056  014A8C  0EFF               	movlw	-1
  7057  014A8E  50E3               	movf	plusw1,w,c
  7058  014A90  5A32               	subwfb	btemp^0,f,c
  7059  014A92  0EF7               	movlw	-9
  7060  014A94  0060  F0CB  FFE3   	movff	btemp,plusw1
  7061  014A9A  0EFC               	movlw	252
  7062  014A9C  6E3C               	movwf	(btemp+10)^0,c
  7063  014A9E  0EFF               	movlw	255
  7064  014AA0  6E3D               	movwf	(btemp+11)^0,c
  7065                           
  7066                           ;stkvar	_n @ sp[(-4)+-6]
  7067  014AA2  0EF6               	movlw	-10
  7068  014AA4  006F FF8C  F032    	movff	plusw1,btemp
  7069  014AAA  503C               	movf	(btemp+10)^0,w,c
  7070  014AAC  1632               	andwf	btemp^0,f,c
  7071  014AAE  0EF6               	movlw	-10
  7072  014AB0  0060  F0CB  FFE3   	movff	btemp,plusw1
  7073  014AB6  0EF7               	movlw	-9
  7074  014AB8  006F FF8C  F032    	movff	plusw1,btemp
  7075  014ABE  503D               	movf	(btemp+11)^0,w,c
  7076  014AC0  1632               	andwf	btemp^0,f,c
  7077  014AC2  0EF7               	movlw	-9
  7078  014AC4  D02E               	goto	L5
  7079  014AC6                     l11120:
  7080                           
  7081                           ;stkvar	_c @ sp[(-4)+-4]
  7082                           ;stkvar	_s @ sp[(-4)+0]
  7083  014AC6  0EFC               	movlw	-4
  7084  014AC8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7085  014ACE  0EFD               	movlw	-3
  7086  014AD0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7087  014AD6  0EF8               	movlw	-8
  7088  014AD8  006F FF8F FFDF     	movff	plusw1,indf2
  7089                           
  7090                           ;stkvar	_n @ sp[(-4)+-6]
  7091  014ADE  0EF6               	movlw	-10
  7092  014AE0  006F FF8C  F032    	movff	plusw1,btemp
  7093  014AE6  0E01               	movlw	1
  7094  014AE8  5E32               	subwf	btemp^0,f,c
  7095  014AEA  0EF6               	movlw	-10
  7096  014AEC  0060  F0CB  FFE3   	movff	btemp,plusw1
  7097  014AF2  0EF7               	movlw	-9
  7098  014AF4  006F FF8C  F032    	movff	plusw1,btemp
  7099  014AFA  0E00               	movlw	0
  7100  014AFC  5A32               	subwfb	btemp^0,f,c
  7101  014AFE  0EF7               	movlw	-9
  7102  014B00  0060  F0CB  FFE3   	movff	btemp,plusw1
  7103                           
  7104                           ;stkvar	_s @ sp[(-4)+0]
  7105  014B06  0EFC               	movlw	-4
  7106  014B08  50E3               	movf	plusw1,w,c
  7107  014B0A  0F01               	addlw	1
  7108  014B0C  6E32               	movwf	btemp^0,c
  7109  014B0E  0EFC               	movlw	-4
  7110  014B10  0060  F0CB  FFE3   	movff	btemp,plusw1
  7111  014B16  6A32               	clrf	btemp^0,c
  7112  014B18  0EFD               	movlw	-3
  7113  014B1A  50E3               	movf	plusw1,w,c
  7114  014B1C  2032               	addwfc	btemp^0,w,c
  7115  014B1E  6E32               	movwf	btemp^0,c
  7116  014B20  0EFD               	movlw	-3
  7117  014B22                     L5:
  7118  014B22  0060  F0CB  FFE3   	movff	btemp,plusw1
  7119                           
  7120                           ;stkvar	_n @ sp[(-4)+-6]
  7121  014B28  0EF6               	movlw	-10
  7122  014B2A  006F FF8C  F032    	movff	plusw1,btemp
  7123  014B30  0EF7               	movlw	-9
  7124  014B32  50E3               	movf	plusw1,w,c
  7125  014B34  1032               	iorwf	btemp^0,w,c
  7126  014B36  A4D8               	btfss	status,2,c
  7127  014B38  D7C6               	goto	l11120
  7128  014B3A                     u12110:
  7129                           
  7130                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  7131  014B3A  0EF6               	movlw	246
  7132  014B3C  26E1               	addwf	fsr1l,f,c
  7133  014B3E  0EFF               	movlw	255
  7134  014B40  22E2               	addwfc	fsr1h,f,c
  7135  014B42  0012               	return		;funcret
  7136  014B44                     __end_of_memset:
  7137                           	opt callstack 0
  7138                           
  7139 ;; *************** function _printf *****************
  7140 ;; Defined at:
  7141 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  fmt             2  [STACK] PTR const unsigned char 
  7144 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  7145 ;; Auto vars:     Size  Location     Type
  7146 ;;  ap              2  [STACK] PTR void [1]
  7147 ;;		 -> ?_printf(2), ?_sprintf(2), 
  7148 ;;  ret             2    0        int 
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  2  [STACK] int 
  7151 ;; Registers used:
  7152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7153 ;; Tracked objects:
  7154 ;;		On entry : 3F/3B
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7162 ;;Total ram usage:        0 bytes
  7163 ;; Hardware stack levels used:    1
  7164 ;; Hardware stack levels required when called:   14
  7165 ;; This function calls:
  7166 ;;		_vfprintf
  7167 ;; This function is called by:
  7168 ;;		_eaDogM_WriteString
  7169 ;;		_send_lcd_cmd_dma
  7170 ;; This function uses a reentrant model
  7171 ;;
  7172                           
  7173                           	psect	text35
  7174  01785C                     __ptext35:
  7175                           	opt callstack 0
  7176  01785C                     _printf:
  7177                           	opt callstack 0
  7178                           
  7179                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7180  01785C  52E6               	movf	postinc1,f,c
  7181  01785E  52E6               	movf	postinc1,f,c
  7182                           
  7183                           ;stkvar	?_printf @ sp[(-2)+-3]
  7184                           
  7185                           ;incstack = 0
  7186  017860  0EFB               	movlw	251
  7187  017862  24E1               	addwf	fsr1l,w,c
  7188  017864  6E3C               	movwf	(btemp+10)^0,c
  7189  017866  0EFF               	movlw	255
  7190  017868  20E2               	addwfc	fsr1h,w,c
  7191  01786A  6E3D               	movwf	(btemp+11)^0,c
  7192                           
  7193                           ;stkvar	_ap @ sp[(-2)+0]
  7194  01786C  0EFF               	movlw	-1
  7195  01786E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7196  017874  0EFE               	movlw	-2
  7197  017876  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7198                           
  7199                           ;stkvar	_ap @ sp[(-2)+0]
  7200  01787C  0EFE               	movlw	254
  7201  01787E  24E1               	addwf	fsr1l,w,c
  7202  017880  6E32               	movwf	btemp^0,c
  7203  017882  0EFF               	movlw	255
  7204  017884  20E2               	addwfc	fsr1h,w,c
  7205  017886  6E33               	movwf	(btemp+1)^0,c
  7206  017888  0060  F0CB  FFE6   	movff	btemp,postinc1
  7207  01788E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7208                           
  7209                           ;stkvar	_fmt @ sp[(-4)+-3]
  7210  017894  0EF9               	movlw	-7
  7211  017896  006F FF8F FFE6     	movff	plusw1,postinc1
  7212  01789C  006F FF8F FFE6     	movff	plusw1,postinc1
  7213  0178A2  0E00               	movlw	0
  7214  0178A4  6EE6               	movwf	postinc1,c
  7215  0178A6  0E00               	movlw	0
  7216  0178A8  6EE6               	movwf	postinc1,c
  7217  0178AA  ECAE  F0B7         	call	_vfprintf	;wreg free
  7218                           
  7219                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  7220  0178AE  52E5               	movf	postdec1,f,c
  7221  0178B0  52E5               	movf	postdec1,f,c
  7222  0178B2  52E5               	movf	postdec1,f,c
  7223  0178B4  50E7               	movf	indf1,w,c
  7224  0178B6  5EE1               	subwf	fsr1l,f,c
  7225  0178B8  0E00               	movlw	0
  7226  0178BA  5AE2               	subwfb	fsr1h,f,c
  7227  0178BC  0012               	return		;funcret
  7228  0178BE                     __end_of_printf:
  7229                           	opt callstack 0
  7230                           
  7231 ;; *************** function _vfprintf *****************
  7232 ;; Defined at:
  7233 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7236 ;;		 -> f(6), NULL(0), 
  7237 ;;  fmt             2  [STACK] PTR const unsigned char 
  7238 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  7239 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  7240 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  7241 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  7242 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(17), 
  7243 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  7244 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  7245 ;;  ap              2  [STACK] PTR PTR void 
  7246 ;;		 -> ap(2), ap(2), 
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;  cfmt            2  [STACK] PTR unsigned char 
  7249 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  7250 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  7251 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  7252 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  7253 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(17), 
  7254 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  7255 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  7256 ;; Return value:  Size  Location     Type
  7257 ;;                  2  [STACK] int 
  7258 ;; Registers used:
  7259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7260 ;; Tracked objects:
  7261 ;;		On entry : 0/5
  7262 ;;		On exit  : 0/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7269 ;;Total ram usage:        0 bytes
  7270 ;; Hardware stack levels used:    1
  7271 ;; Hardware stack levels required when called:   13
  7272 ;; This function calls:
  7273 ;;		_vfpfcnvrt
  7274 ;; This function is called by:
  7275 ;;		_sprintf
  7276 ;;		_printf
  7277 ;; This function uses a reentrant model
  7278 ;;
  7279                           
  7280                           	psect	text36
  7281  016F5C                     __ptext36:
  7282                           	opt callstack 0
  7283  016F5C                     _vfprintf:
  7284                           	opt callstack 0
  7285                           
  7286                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7287  016F5C  52E6               	movf	postinc1,f,c
  7288  016F5E  52E6               	movf	postinc1,f,c
  7289                           
  7290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  7291                           ;stkvar	_fmt @ sp[(-2)+-4]
  7292                           
  7293                           ;incstack = 0
  7294  016F60  0EFA               	movlw	-6
  7295  016F62  006F FF8C  F03C    	movff	plusw1,btemp+10
  7296  016F68  0EFB               	movlw	-5
  7297  016F6A  006F FF8C  F03D    	movff	plusw1,btemp+11
  7298                           
  7299                           ;stkvar	_cfmt @ sp[(-2)+0]
  7300  016F70  0EFF               	movlw	-1
  7301  016F72  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7302  016F78  0EFE               	movlw	-2
  7303  016F7A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7304                           
  7305                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  7306  016F80  6A19               	clrf	_nout^0,c
  7307  016F82  6A1A               	clrf	(_nout+1)^0,c
  7308                           
  7309                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7310  016F84  D020               	goto	l11134
  7311  016F86                     l11132:
  7312                           
  7313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  7314                           ;stkvar	_ap @ sp[(-2)+-6]
  7315  016F86  0EF8               	movlw	-8
  7316  016F88  006F FF8F FFE6     	movff	plusw1,postinc1
  7317  016F8E  006F FF8F FFE6     	movff	plusw1,postinc1
  7318                           
  7319                           ;stkvar	_cfmt @ sp[(-4)+0]
  7320  016F94  0EFC               	movlw	252
  7321  016F96  24E1               	addwf	fsr1l,w,c
  7322  016F98  6E32               	movwf	btemp^0,c
  7323  016F9A  0EFF               	movlw	255
  7324  016F9C  20E2               	addwfc	fsr1h,w,c
  7325  016F9E  6E33               	movwf	(btemp+1)^0,c
  7326  016FA0  0060  F0CB  FFE6   	movff	btemp,postinc1
  7327  016FA6  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  7328                           
  7329                           ;stkvar	_fp @ sp[(-6)+-2]
  7330  016FAC  0EF8               	movlw	-8
  7331  016FAE  006F FF8F FFE6     	movff	plusw1,postinc1
  7332  016FB4  006F FF8F FFE6     	movff	plusw1,postinc1
  7333  016FBA  EC22  F089         	call	_vfpfcnvrt	;wreg free
  7334  016FBE  5032               	movf	btemp^0,w,c
  7335  016FC0  2619               	addwf	_nout^0,f,c
  7336  016FC2  5033               	movf	(btemp+1)^0,w,c
  7337  016FC4  221A               	addwfc	(_nout+1)^0,f,c
  7338  016FC6                     l11134:
  7339                           
  7340                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  7341                           ;stkvar	_cfmt @ sp[(-2)+0]
  7342  016FC6  50E1               	movf	fsr1l,w,c
  7343  016FC8  0FFE               	addlw	-2
  7344  016FCA  6ED9               	movwf	fsr2l,c
  7345  016FCC  50E2               	movf	fsr1h,w,c
  7346  016FCE  6EDA               	movwf	fsr2h,c
  7347  016FD0  0EFF               	movlw	255
  7348  016FD2  22DA               	addwfc	fsr2h,f,c
  7349  016FD4  006F FF7B FFF6     	movff	postinc2,tblptrl
  7350  016FDA  006F FF77 FFF7     	movff	postdec2,tblptrh
  7351  016FE0                     	if	0	;tblptru may be non-zero
  7352  016FE0                     	endif
  7353  016FE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7354  016FE0  0E00               	movlw	low (__mediumconst shr (0+16))
  7355  016FE2  6EF8               	movwf	tblptru,c
  7356  016FE4                     	endif
  7357  016FE4  0008               	tblrd		*
  7358  016FE6  50F5               	movf	tablat,w,c
  7359  016FE8  0900               	iorlw	0
  7360  016FEA  A4D8               	btfss	status,2,c
  7361  016FEC  D7CC               	goto	l11132
  7362                           
  7363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  7364  016FEE  0060  F064  F032   	movff	_nout,btemp
  7365  016FF4  0060  F068  F033   	movff	_nout+1,btemp+1
  7366                           
  7367                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  7368  016FFA  0EF8               	movlw	248
  7369  016FFC  26E1               	addwf	fsr1l,f,c
  7370  016FFE  0EFF               	movlw	255
  7371  017000  22E2               	addwfc	fsr1h,f,c
  7372  017002  0012               	return		;funcret
  7373  017004                     __end_of_vfprintf:
  7374                           	opt callstack 0
  7375                           
  7376 ;; *************** function _vfpfcnvrt *****************
  7377 ;; Defined at:
  7378 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7381 ;;		 -> f(6), NULL(0), 
  7382 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  7383 ;;		 -> cfmt(2), 
  7384 ;;  ap              2  [STACK] PTR PTR void 
  7385 ;;		 -> ap(2), ap(2), 
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;  llu             8  [STACK] unsigned long long 
  7388 ;;  ll              8  [STACK] long long 
  7389 ;;  f               4  [STACK] long long 
  7390 ;;  ct              3  [STACK] unsigned char [3]
  7391 ;;  vp              3    0        PTR void 
  7392 ;;  cp              2  [STACK] PTR unsigned char 
  7393 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  7394 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  7395 ;;		 -> STR_3(5), V(187), 
  7396 ;;  i               2    0        int 
  7397 ;;  done            2    0        int 
  7398 ;;  c               1  [STACK] unsigned char 
  7399 ;; Return value:  Size  Location     Type
  7400 ;;                  2  [STACK] int 
  7401 ;; Registers used:
  7402 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7403 ;; Tracked objects:
  7404 ;;		On entry : 0/5
  7405 ;;		On exit  : 0/0
  7406 ;;		Unchanged: 0/0
  7407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7412 ;;Total ram usage:        0 bytes
  7413 ;; Hardware stack levels used:    1
  7414 ;; Hardware stack levels required when called:   12
  7415 ;; This function calls:
  7416 ;;		_atoi
  7417 ;;		_ctoa
  7418 ;;		_dtoa
  7419 ;;		_efgtoa
  7420 ;;		_fputc
  7421 ;;		_isdigit
  7422 ;;		_isupper
  7423 ;;		_stoa
  7424 ;;		_strncmp
  7425 ;;		_tolower
  7426 ;;		_xtoa
  7427 ;; This function is called by:
  7428 ;;		_vfprintf
  7429 ;; This function uses a reentrant model
  7430 ;;
  7431                           
  7432                           	psect	text37
  7433  011244                     __ptext37:
  7434                           	opt callstack 0
  7435  011244                     _vfpfcnvrt:
  7436                           	opt callstack 0
  7437                           
  7438                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  7439  011244  0E20               	movlw	32
  7440  011246  26E1               	addwf	fsr1l,f,c
  7441  011248  0E00               	movlw	0
  7442  01124A  22E2               	addwfc	fsr1h,f,c
  7443                           
  7444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7445                           ;stkvar	_fmt @ sp[(-32)+-4]
  7446                           
  7447                           ;incstack = 0
  7448  01124C  0EDC               	movlw	-36
  7449  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7450  011254  0EDD               	movlw	-35
  7451  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7452  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7453  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7454  011268                     	if	0	;tblptru may be non-zero
  7455  011268                     	endif
  7456  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7457  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7458  01126A  6EF8               	movwf	tblptru,c
  7459  01126C                     	endif
  7460  01126C  0008               	tblrd		*
  7461  01126E  50F5               	movf	tablat,w,c
  7462  011270  0A25               	xorlw	37
  7463  011272  A4D8               	btfss	status,2,c
  7464  011274  EF92  F08E         	goto	l11068
  7465                           
  7466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7467                           ;stkvar	_fmt @ sp[(-32)+-4]
  7468  011278  0EDC               	movlw	-36
  7469  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7470  011280  0EDD               	movlw	-35
  7471  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7472  011288  2ADE               	incf	postinc2,f,c
  7473  01128A  0E00               	movlw	0
  7474  01128C  22DD               	addwfc	postdec2,f,c
  7475                           
  7476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7477  01128E  6A1B               	clrf	_width^0,c
  7478  011290  6A1C               	clrf	(_width+1)^0,c
  7479  011292  6A1F               	clrf	_flags^0,c
  7480  011294  6A20               	clrf	(_flags+1)^0,c
  7481                           
  7482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7483  011296  681D               	setf	_prec^0,c
  7484  011298  681E               	setf	(_prec+1)^0,c
  7485                           
  7486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7487                           ;stkvar	_fmt @ sp[(-32)+-4]
  7488  01129A  0EDC               	movlw	-36
  7489  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7490  0112A2  0EDD               	movlw	-35
  7491  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7492  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7493  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7494  0112B6                     	if	0	;tblptru may be non-zero
  7495  0112B6                     	endif
  7496  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7497  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7498  0112B8  6EF8               	movwf	tblptru,c
  7499  0112BA                     	endif
  7500  0112BA  0008               	tblrd		*
  7501  0112BC  50F5               	movf	tablat,w,c
  7502  0112BE  0A2A               	xorlw	42
  7503  0112C0  A4D8               	btfss	status,2,c
  7504  0112C2  D031               	goto	l10932
  7505                           
  7506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7507                           ;stkvar	_fmt @ sp[(-32)+-4]
  7508  0112C4  0EDC               	movlw	-36
  7509  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7510  0112CC  0EDD               	movlw	-35
  7511  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7512  0112D4  2ADE               	incf	postinc2,f,c
  7513  0112D6  0E00               	movlw	0
  7514  0112D8  22DD               	addwfc	postdec2,f,c
  7515                           
  7516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7517                           ;stkvar	_ap @ sp[(-32)+-6]
  7518  0112DA  0EDA               	movlw	-38
  7519  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7520  0112E2  0EDB               	movlw	-37
  7521  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7522  0112EA  0E02               	movlw	2
  7523  0112EC  5EDE               	subwf	postinc2,f,c
  7524  0112EE  0E00               	movlw	0
  7525  0112F0  5ADD               	subwfb	postdec2,f,c
  7526  0112F2  006F FF78  F03C    	movff	postinc2,btemp+10
  7527  0112F8  006F FF74  F03D    	movff	postdec2,btemp+11
  7528  0112FE  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7529  011304  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7530  01130A  006F FF78  F01B    	movff	postinc2,_width
  7531  011310  006F FF74  F01C    	movff	postdec2,_width+1
  7532                           
  7533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7534  011316  AE1C               	btfss	(_width+1)^0,7,c
  7535  011318  D066               	goto	u11860
  7536                           
  7537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7538  01131A  801F               	bsf	_flags^0,0,c
  7539                           
  7540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7541  01131C  6C1B               	negf	_width^0,c
  7542  01131E  1E1C               	comf	(_width+1)^0,f,c
  7543  011320  B0D8               	btfsc	status,0,c
  7544  011322  2A1C               	incf	(_width+1)^0,f,c
  7545  011324  D060               	goto	u11860
  7546  011326                     l10932:
  7547                           
  7548                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7549                           ;stkvar	_fmt @ sp[(-32)+-4]
  7550  011326  0EDC               	movlw	-36
  7551  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7552  01132E  0EDD               	movlw	-35
  7553  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7554  011336  006F FF78  F03C    	movff	postinc2,btemp+10
  7555  01133C  006F FF74  F03D    	movff	postdec2,btemp+11
  7556  011342  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7557  011348  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7558  01134E  EC41  F0A8         	call	_atoi	;wreg free
  7559  011352  0060  F0C8  F01B   	movff	btemp,_width
  7560  011358  0060  F0CC  F01C   	movff	btemp+1,_width+1
  7561                           
  7562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7563  01135E  D00B               	goto	l10936
  7564  011360                     l10934:
  7565                           
  7566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7567                           ;stkvar	_fmt @ sp[(-32)+-4]
  7568  011360  0EDC               	movlw	-36
  7569  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7570  011368  0EDD               	movlw	-35
  7571  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7572  011370  2ADE               	incf	postinc2,f,c
  7573  011372  0E00               	movlw	0
  7574  011374  22DD               	addwfc	postdec2,f,c
  7575  011376                     l10936:
  7576  011376  0ED0               	movlw	208
  7577  011378  6E3C               	movwf	(btemp+10)^0,c
  7578  01137A  0EFF               	movlw	255
  7579  01137C  6E3D               	movwf	(btemp+11)^0,c
  7580                           
  7581                           ;stkvar	_fmt @ sp[(-32)+-4]
  7582  01137E  0EDC               	movlw	-36
  7583  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7584  011386  0EDD               	movlw	-35
  7585  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7586  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7587  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7588  01139A                     	if	0	;tblptru may be non-zero
  7589  01139A                     	endif
  7590  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7591  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7592  01139C  6EF8               	movwf	tblptru,c
  7593  01139E                     	endif
  7594  01139E  0008               	tblrd		*
  7595  0113A0  50F5               	movf	tablat,w,c
  7596  0113A2  6E3A               	movwf	(btemp+8)^0,c
  7597  0113A4  6A3B               	clrf	(btemp+9)^0,c
  7598  0113A6  503C               	movf	(btemp+10)^0,w,c
  7599  0113A8  263A               	addwf	(btemp+8)^0,f,c
  7600  0113AA  503D               	movf	(btemp+11)^0,w,c
  7601  0113AC  223B               	addwfc	(btemp+9)^0,f,c
  7602  0113AE  503B               	movf	(btemp+9)^0,w,c
  7603  0113B0  E106               	bnz	u11840
  7604  0113B2  0E0A               	movlw	10
  7605  0113B4  5C3A               	subwf	(btemp+8)^0,w,c
  7606  0113B6  B0D8               	btfsc	status,0,c
  7607  0113B8  D002               	goto	u11840
  7608  0113BA  0E01               	movlw	1
  7609  0113BC  D001               	goto	u11850
  7610  0113BE                     u11840:
  7611  0113BE  0E00               	movlw	0
  7612  0113C0                     u11850:
  7613  0113C0  6E3C               	movwf	(btemp+10)^0,c
  7614  0113C2  6A3D               	clrf	(btemp+11)^0,c
  7615                           
  7616                           ;stkvar	_vfpfcnvrt$4425 @ sp[(-32)+4]
  7617  0113C4  0EE4               	movlw	-28
  7618  0113C6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7619  0113CC  0EE5               	movlw	-27
  7620  0113CE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7621                           
  7622                           ;stkvar	_vfpfcnvrt$4425 @ sp[(-32)+4]
  7623  0113D4  0EE4               	movlw	-28
  7624  0113D6  006F FF8C  F032    	movff	plusw1,btemp
  7625  0113DC  0EE5               	movlw	-27
  7626  0113DE  50E3               	movf	plusw1,w,c
  7627  0113E0  1032               	iorwf	btemp^0,w,c
  7628  0113E2  A4D8               	btfss	status,2,c
  7629  0113E4  D7BD               	goto	l10934
  7630  0113E6                     u11860:
  7631                           
  7632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7633                           ;stkvar	_fmt @ sp[(-32)+-4]
  7634  0113E6  0EDC               	movlw	-36
  7635  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7636  0113EE  0EDD               	movlw	-35
  7637  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7638  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7639  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7640  011402                     	if	0	;tblptru may be non-zero
  7641  011402                     	endif
  7642  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7643  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7644  011404  6EF8               	movwf	tblptru,c
  7645  011406                     	endif
  7646  011406  0008               	tblrd		*
  7647  011408  50F5               	movf	tablat,w,c
  7648  01140A  0A2E               	xorlw	46
  7649  01140C  A4D8               	btfss	status,2,c
  7650  01140E  D0AC               	goto	u11910
  7651                           
  7652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7653  011410  6A1D               	clrf	_prec^0,c
  7654  011412  6A1E               	clrf	(_prec+1)^0,c
  7655                           
  7656                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7657                           ;stkvar	_fmt @ sp[(-32)+-4]
  7658  011414  0EDC               	movlw	-36
  7659  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7660  01141C  0EDD               	movlw	-35
  7661  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7662  011424  2ADE               	incf	postinc2,f,c
  7663  011426  0E00               	movlw	0
  7664  011428  22DD               	addwfc	postdec2,f,c
  7665                           
  7666                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7667                           ;stkvar	_fmt @ sp[(-32)+-4]
  7668  01142A  0EDC               	movlw	-36
  7669  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7670  011432  0EDD               	movlw	-35
  7671  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7672  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7673  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7674  011446                     	if	0	;tblptru may be non-zero
  7675  011446                     	endif
  7676  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7677  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7678  011448  6EF8               	movwf	tblptru,c
  7679  01144A                     	endif
  7680  01144A  0008               	tblrd		*
  7681  01144C  50F5               	movf	tablat,w,c
  7682  01144E  0A2A               	xorlw	42
  7683  011450  A4D8               	btfss	status,2,c
  7684  011452  D02A               	goto	l10954
  7685                           
  7686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7687                           ;stkvar	_fmt @ sp[(-32)+-4]
  7688  011454  0EDC               	movlw	-36
  7689  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7690  01145C  0EDD               	movlw	-35
  7691  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7692  011464  2ADE               	incf	postinc2,f,c
  7693  011466  0E00               	movlw	0
  7694  011468  22DD               	addwfc	postdec2,f,c
  7695                           
  7696                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7697                           ;stkvar	_ap @ sp[(-32)+-6]
  7698  01146A  0EDA               	movlw	-38
  7699  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7700  011472  0EDB               	movlw	-37
  7701  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7702  01147A  0E02               	movlw	2
  7703  01147C  5EDE               	subwf	postinc2,f,c
  7704  01147E  0E00               	movlw	0
  7705  011480  5ADD               	subwfb	postdec2,f,c
  7706  011482  006F FF78  F03C    	movff	postinc2,btemp+10
  7707  011488  006F FF74  F03D    	movff	postdec2,btemp+11
  7708  01148E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7709  011494  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7710  01149A  006F FF78  F01D    	movff	postinc2,_prec
  7711  0114A0  006F FF74  F01E    	movff	postdec2,_prec+1
  7712                           
  7713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7714  0114A6  D060               	goto	u11910
  7715  0114A8                     l10954:
  7716                           
  7717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7718                           ;stkvar	_fmt @ sp[(-32)+-4]
  7719  0114A8  0EDC               	movlw	-36
  7720  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7721  0114B0  0EDD               	movlw	-35
  7722  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7723  0114B8  006F FF78  F03C    	movff	postinc2,btemp+10
  7724  0114BE  006F FF74  F03D    	movff	postdec2,btemp+11
  7725  0114C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  7726  0114CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  7727  0114D0  EC41  F0A8         	call	_atoi	;wreg free
  7728  0114D4  0060  F0C8  F01D   	movff	btemp,_prec
  7729  0114DA  0060  F0CC  F01E   	movff	btemp+1,_prec+1
  7730                           
  7731                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7732  0114E0  D00B               	goto	l10958
  7733  0114E2                     l10956:
  7734                           
  7735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7736                           ;stkvar	_fmt @ sp[(-32)+-4]
  7737  0114E2  0EDC               	movlw	-36
  7738  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7739  0114EA  0EDD               	movlw	-35
  7740  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7741  0114F2  2ADE               	incf	postinc2,f,c
  7742  0114F4  0E00               	movlw	0
  7743  0114F6  22DD               	addwfc	postdec2,f,c
  7744  0114F8                     l10958:
  7745  0114F8  0ED0               	movlw	208
  7746  0114FA  6E3C               	movwf	(btemp+10)^0,c
  7747  0114FC  0EFF               	movlw	255
  7748  0114FE  6E3D               	movwf	(btemp+11)^0,c
  7749                           
  7750                           ;stkvar	_fmt @ sp[(-32)+-4]
  7751  011500  0EDC               	movlw	-36
  7752  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7753  011508  0EDD               	movlw	-35
  7754  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7755  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7756  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7757  01151C                     	if	0	;tblptru may be non-zero
  7758  01151C                     	endif
  7759  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7760  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7761  01151E  6EF8               	movwf	tblptru,c
  7762  011520                     	endif
  7763  011520  0008               	tblrd		*
  7764  011522  50F5               	movf	tablat,w,c
  7765  011524  6E3A               	movwf	(btemp+8)^0,c
  7766  011526  6A3B               	clrf	(btemp+9)^0,c
  7767  011528  503C               	movf	(btemp+10)^0,w,c
  7768  01152A  263A               	addwf	(btemp+8)^0,f,c
  7769  01152C  503D               	movf	(btemp+11)^0,w,c
  7770  01152E  223B               	addwfc	(btemp+9)^0,f,c
  7771  011530  503B               	movf	(btemp+9)^0,w,c
  7772  011532  E106               	bnz	u11890
  7773  011534  0E0A               	movlw	10
  7774  011536  5C3A               	subwf	(btemp+8)^0,w,c
  7775  011538  B0D8               	btfsc	status,0,c
  7776  01153A  D002               	goto	u11890
  7777  01153C  0E01               	movlw	1
  7778  01153E  D001               	goto	u11900
  7779  011540                     u11890:
  7780  011540  0E00               	movlw	0
  7781  011542                     u11900:
  7782  011542  6E3C               	movwf	(btemp+10)^0,c
  7783  011544  6A3D               	clrf	(btemp+11)^0,c
  7784                           
  7785                           ;stkvar	_vfpfcnvrt$4426 @ sp[(-32)+0]
  7786  011546  0EE0               	movlw	-32
  7787  011548  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  7788  01154E  0EE1               	movlw	-31
  7789  011550  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7790                           
  7791                           ;stkvar	_vfpfcnvrt$4426 @ sp[(-32)+0]
  7792  011556  0EE0               	movlw	-32
  7793  011558  006F FF8C  F032    	movff	plusw1,btemp
  7794  01155E  0EE1               	movlw	-31
  7795  011560  50E3               	movf	plusw1,w,c
  7796  011562  1032               	iorwf	btemp^0,w,c
  7797  011564  A4D8               	btfss	status,2,c
  7798  011566  D7BD               	goto	l10956
  7799  011568                     u11910:
  7800                           
  7801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7802                           ;stkvar	_fmt @ sp[(-32)+-4]
  7803  011568  0EDC               	movlw	-36
  7804  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7805  011570  0EDD               	movlw	-35
  7806  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7807  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7808  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7809  011584                     	if	0	;tblptru may be non-zero
  7810  011584                     	endif
  7811  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7812  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7813  011586  6EF8               	movwf	tblptru,c
  7814  011588                     	endif
  7815  011588  0008               	tblrd		*
  7816  01158A  50F5               	movf	tablat,w,c
  7817  01158C  6EE6               	movwf	postinc1,c
  7818  01158E  0E00               	movlw	0
  7819  011590  6EE6               	movwf	postinc1,c
  7820  011592  EC0A  F0BA         	call	_tolower	;wreg free
  7821                           
  7822                           ;stkvar	_ct @ sp[(-32)+26]
  7823  011596  0EFA               	movlw	-6
  7824  011598  0060  F0CB  FFE3   	movff	btemp,plusw1
  7825                           
  7826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7827                           ;stkvar	_ct @ sp[(-32)+26]
  7828  01159E  0EFA               	movlw	-6
  7829  0115A0  50E3               	movf	plusw1,w,c
  7830  0115A2  B4D8               	btfsc	status,2,c
  7831  0115A4  D05B               	goto	l10974
  7832                           
  7833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7834                           ;stkvar	_ct @ sp[(-32)+26]
  7835  0115A6  0EFB               	movlw	251
  7836  0115A8  24E1               	addwf	fsr1l,w,c
  7837  0115AA  6ED9               	movwf	fsr2l,c
  7838  0115AC  0EFF               	movlw	255
  7839  0115AE  20E2               	addwfc	fsr1h,w,c
  7840  0115B0  6EDA               	movwf	fsr2h,c
  7841                           
  7842                           ;stkvar	_fmt @ sp[(-32)+-4]
  7843  0115B2  0EDC               	movlw	-36
  7844  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7845  0115BA  0EDD               	movlw	-35
  7846  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7847  0115C2  006F FFB8  F03C    	movff	postinc0,btemp+10
  7848  0115C8  006F FFB4  F03D    	movff	postdec0,btemp+11
  7849  0115CE  0E01               	movlw	1
  7850  0115D0  263C               	addwf	(btemp+10)^0,f,c
  7851  0115D2  0E00               	movlw	0
  7852  0115D4  223D               	addwfc	(btemp+11)^0,f,c
  7853  0115D6  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7854  0115DC  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7855  0115E2                     	if	0	;tblptru may be non-zero
  7856  0115E2                     	endif
  7857  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7858  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7859  0115E4  6EF8               	movwf	tblptru,c
  7860  0115E6                     	endif
  7861  0115E6  0008               	tblrd		*
  7862  0115E8  50F5               	movf	tablat,w,c
  7863  0115EA  6EE6               	movwf	postinc1,c
  7864  0115EC  0E00               	movlw	0
  7865  0115EE  6EE6               	movwf	postinc1,c
  7866  0115F0  EC0A  F0BA         	call	_tolower	;wreg free
  7867  0115F4  5032               	movf	btemp^0,w,c
  7868  0115F6  6EDF               	movwf	indf2,c
  7869                           
  7870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7871                           ;stkvar	_ct @ sp[(-32)+26]
  7872  0115F8  0EFB               	movlw	251
  7873  0115FA  24E1               	addwf	fsr1l,w,c
  7874  0115FC  6ED9               	movwf	fsr2l,c
  7875  0115FE  0EFF               	movlw	255
  7876  011600  20E2               	addwfc	fsr1h,w,c
  7877  011602  6EDA               	movwf	fsr2h,c
  7878  011604  50DF               	movf	indf2,w,c
  7879  011606  B4D8               	btfsc	status,2,c
  7880  011608  D029               	goto	l10974
  7881                           
  7882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7883                           ;stkvar	_ct @ sp[(-32)+26]
  7884  01160A  0EFC               	movlw	252
  7885  01160C  24E1               	addwf	fsr1l,w,c
  7886  01160E  6ED9               	movwf	fsr2l,c
  7887  011610  0EFF               	movlw	255
  7888  011612  20E2               	addwfc	fsr1h,w,c
  7889  011614  6EDA               	movwf	fsr2h,c
  7890                           
  7891                           ;stkvar	_fmt @ sp[(-32)+-4]
  7892  011616  0EDC               	movlw	-36
  7893  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7894  01161E  0EDD               	movlw	-35
  7895  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7896  011626  006F FFB8  F03C    	movff	postinc0,btemp+10
  7897  01162C  006F FFB4  F03D    	movff	postdec0,btemp+11
  7898  011632  0E02               	movlw	2
  7899  011634  263C               	addwf	(btemp+10)^0,f,c
  7900  011636  0E00               	movlw	0
  7901  011638  223D               	addwfc	(btemp+11)^0,f,c
  7902  01163A  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  7903  011640  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  7904  011646                     	if	0	;tblptru may be non-zero
  7905  011646                     	endif
  7906  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7907  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7908  011648  6EF8               	movwf	tblptru,c
  7909  01164A                     	endif
  7910  01164A  0008               	tblrd		*
  7911  01164C  50F5               	movf	tablat,w,c
  7912  01164E  6EE6               	movwf	postinc1,c
  7913  011650  0E00               	movlw	0
  7914  011652  6EE6               	movwf	postinc1,c
  7915  011654  EC0A  F0BA         	call	_tolower	;wreg free
  7916  011658  5032               	movf	btemp^0,w,c
  7917  01165A  6EDF               	movwf	indf2,c
  7918  01165C                     l10974:
  7919                           
  7920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7921                           ;stkvar	_fmt @ sp[(-32)+-4]
  7922  01165C  0EDC               	movlw	-36
  7923  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7924  011664  0EDD               	movlw	-35
  7925  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7926  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7927  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7928  011678                     	if	0	;tblptru may be non-zero
  7929  011678                     	endif
  7930  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7931  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7932  01167A  6EF8               	movwf	tblptru,c
  7933  01167C                     	endif
  7934  01167C  0008               	tblrd		*
  7935  01167E  50F5               	movf	tablat,w,c
  7936  011680  0A63               	xorlw	99
  7937  011682  A4D8               	btfss	status,2,c
  7938  011684  D036               	goto	l10984
  7939                           
  7940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7941                           ;stkvar	_fmt @ sp[(-32)+-4]
  7942  011686  0EDC               	movlw	-36
  7943  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7944  01168E  0EDD               	movlw	-35
  7945  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7946  011696  2ADE               	incf	postinc2,f,c
  7947  011698  0E00               	movlw	0
  7948  01169A  22DD               	addwfc	postdec2,f,c
  7949                           
  7950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7951                           ;stkvar	_ap @ sp[(-32)+-6]
  7952  01169C  0EDA               	movlw	-38
  7953  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7954  0116A4  0EDB               	movlw	-37
  7955  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7956  0116AC  0E02               	movlw	2
  7957  0116AE  5EDE               	subwf	postinc2,f,c
  7958  0116B0  0E00               	movlw	0
  7959  0116B2  5ADD               	subwfb	postdec2,f,c
  7960  0116B4  006F FF78  F03C    	movff	postinc2,btemp+10
  7961  0116BA  006F FF74  F03D    	movff	postdec2,btemp+11
  7962  0116C0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  7963  0116C6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  7964  0116CC  50DF               	movf	indf2,w,c
  7965  0116CE  6E3D               	movwf	(btemp+11)^0,c
  7966                           
  7967                           ;stkvar	_c @ sp[(-32)+31]
  7968  0116D0  0EFF               	movlw	-1
  7969  0116D2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  7970                           
  7971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7972                           ;stkvar	_c @ sp[(-32)+31]
  7973  0116D8  0EFF               	movlw	-1
  7974  0116DA  50E3               	movf	plusw1,w,c
  7975  0116DC  6EE6               	movwf	postinc1,c
  7976                           
  7977                           ;stkvar	_fp @ sp[(-33)+-2]
  7978  0116DE  0EDD               	movlw	-35
  7979  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7980  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7981  0116EC  EC84  F0B9         	call	_ctoa	;wreg free
  7982  0116F0  D343               	goto	l2024
  7983  0116F2                     l10984:
  7984                           
  7985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7986                           ;stkvar	_fmt @ sp[(-32)+-4]
  7987  0116F2  0EDC               	movlw	-36
  7988  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7989  0116FA  0EDD               	movlw	-35
  7990  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7991  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  7992  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  7993  01170E                     	if	0	;tblptru may be non-zero
  7994  01170E                     	endif
  7995  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7996  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  7997  011710  6EF8               	movwf	tblptru,c
  7998  011712                     	endif
  7999  011712  0008               	tblrd		*
  8000  011714  50F5               	movf	tablat,w,c
  8001  011716  0A64               	xorlw	100
  8002  011718  B4D8               	btfsc	status,2,c
  8003  01171A  D015               	goto	u11960
  8004                           
  8005                           ;stkvar	_fmt @ sp[(-32)+-4]
  8006  01171C  0EDC               	movlw	-36
  8007  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8008  011724  0EDD               	movlw	-35
  8009  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  8010  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8011  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  8012  011738                     	if	0	;tblptru may be non-zero
  8013  011738                     	endif
  8014  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8015  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  8016  01173A  6EF8               	movwf	tblptru,c
  8017  01173C                     	endif
  8018  01173C  0008               	tblrd		*
  8019  01173E  50F5               	movf	tablat,w,c
  8020  011740  0A69               	xorlw	105
  8021  011742  A4D8               	btfss	status,2,c
  8022  011744  D075               	goto	l10996
  8023  011746                     u11960:
  8024                           
  8025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  8026                           ;stkvar	_fmt @ sp[(-32)+-4]
  8027  011746  0EDC               	movlw	-36
  8028  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  8029  01174E  0EDD               	movlw	-35
  8030  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  8031  011756  2ADE               	incf	postinc2,f,c
  8032  011758  0E00               	movlw	0
  8033  01175A  22DD               	addwfc	postdec2,f,c
  8034                           
  8035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  8036                           ;stkvar	_ap @ sp[(-32)+-6]
  8037  01175C  0EDA               	movlw	-38
  8038  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8039  011764  0EDB               	movlw	-37
  8040  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  8041  01176C  0E02               	movlw	2
  8042  01176E  5EDE               	subwf	postinc2,f,c
  8043  011770  0E00               	movlw	0
  8044  011772  5ADD               	subwfb	postdec2,f,c
  8045  011774  006F FF78  F03C    	movff	postinc2,btemp+10
  8046  01177A  006F FF74  F03D    	movff	postdec2,btemp+11
  8047  011780  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8048  011786  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8049  01178C  006F FF78  F03C    	movff	postinc2,btemp+10
  8050  011792  006F FF74  F03D    	movff	postdec2,btemp+11
  8051                           
  8052                           ;stkvar	_ll @ sp[(-32)+14]
  8053  011798  0EEE               	movlw	-18
  8054  01179A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8055  0117A0  0EEF               	movlw	-17
  8056  0117A2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8057  0117A8  6A32               	clrf	btemp^0,c
  8058  0117AA  BEE3               	btfsc	plusw1,7,c
  8059  0117AC  6832               	setf	btemp^0,c
  8060  0117AE  0EF0               	movlw	-16
  8061  0117B0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8062  0117B6  0EF1               	movlw	-15
  8063  0117B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8064  0117BE  0EF2               	movlw	-14
  8065  0117C0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8066  0117C6  0EF3               	movlw	-13
  8067  0117C8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8068  0117CE  0EF4               	movlw	-12
  8069  0117D0  0060  F0CB  FFE3   	movff	btemp,plusw1
  8070  0117D6  0EF5               	movlw	-11
  8071  0117D8  0060  F0CB  FFE3   	movff	btemp,plusw1
  8072                           
  8073                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  8074                           ;stkvar	_ll @ sp[(-32)+14]
  8075  0117DE  50E1               	movf	fsr1l,w,c
  8076  0117E0  0FEE               	addlw	-18
  8077  0117E2  6ED9               	movwf	fsr2l,c
  8078  0117E4  50E2               	movf	fsr1h,w,c
  8079  0117E6  6EDA               	movwf	fsr2h,c
  8080  0117E8  0EFF               	movlw	255
  8081  0117EA  22DA               	addwfc	fsr2h,f,c
  8082  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  8083  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  8084  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  8085  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  8086  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  8087  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  8088  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  8089  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  8090                           
  8091                           ;stkvar	_fp @ sp[(-40)+-2]
  8092  01181C  0ED6               	movlw	-42
  8093  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  8094  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  8095  01182A  EC59  F09E         	call	_dtoa	;wreg free
  8096  01182E  D2A4               	goto	l2024
  8097  011830                     l10996:
  8098                           
  8099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  8100                           ;stkvar	_ct @ sp[(-32)+26]
  8101  011830  0EFA               	movlw	-6
  8102  011832  006F FF8C  F032    	movff	plusw1,btemp
  8103  011838  0E66               	movlw	102
  8104  01183A  1832               	xorwf	btemp^0,w,c
  8105  01183C  A4D8               	btfss	status,2,c
  8106  01183E  D06E               	goto	l11008
  8107                           
  8108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  8109                           ;stkvar	_fmt @ sp[(-32)+-4]
  8110  011840  0EDC               	movlw	-36
  8111  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  8112  011848  0EDD               	movlw	-35
  8113  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8114  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  8115  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  8116  01185C                     	if	0	;tblptru may be non-zero
  8117  01185C                     	endif
  8118  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8119  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  8120  01185E  6EF8               	movwf	tblptru,c
  8121  011860                     	endif
  8122                           
  8123                           ;stkvar	_c @ sp[(-32)+31]
  8124  011860  0008               	tblrd		*
  8125  011862  0EFF               	movlw	-1
  8126  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  8127                           
  8128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  8129                           ;stkvar	_fmt @ sp[(-32)+-4]
  8130  01186A  0EDC               	movlw	-36
  8131  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8132  011872  0EDD               	movlw	-35
  8133  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  8134  01187A  2ADE               	incf	postinc2,f,c
  8135  01187C  0E00               	movlw	0
  8136  01187E  22DD               	addwfc	postdec2,f,c
  8137                           
  8138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  8139                           ;stkvar	_ap @ sp[(-32)+-6]
  8140  011880  0EDA               	movlw	-38
  8141  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  8142  011888  0EDB               	movlw	-37
  8143  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8144  011890  0E04               	movlw	4
  8145  011892  5EDE               	subwf	postinc2,f,c
  8146  011894  0E00               	movlw	0
  8147  011896  5ADD               	subwfb	postdec2,f,c
  8148  011898  006F FF78  F03C    	movff	postinc2,btemp+10
  8149  01189E  006F FF74  F03D    	movff	postdec2,btemp+11
  8150  0118A4  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8151  0118AA  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8152  0118B0  006F FF78  F03A    	movff	postinc2,btemp+8
  8153  0118B6  006F FF78  F03B    	movff	postinc2,btemp+9
  8154  0118BC  006F FF78  F03C    	movff	postinc2,btemp+10
  8155  0118C2  006F FF78  F03D    	movff	postinc2,btemp+11
  8156                           
  8157                           ;stkvar	_f @ sp[(-32)+22]
  8158  0118C8  0EF6               	movlw	-10
  8159  0118CA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8160  0118D0  0EF7               	movlw	-9
  8161  0118D2  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8162  0118D8  0EF8               	movlw	-8
  8163  0118DA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8164  0118E0  0EF9               	movlw	-7
  8165  0118E2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8166  0118E8                     l11004:
  8167                           
  8168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  8169                           ;stkvar	_c @ sp[(-32)+31]
  8170  0118E8  0EFF               	movlw	-1
  8171  0118EA  50E3               	movf	plusw1,w,c
  8172  0118EC  6EE6               	movwf	postinc1,c
  8173                           
  8174                           ;stkvar	_f @ sp[(-33)+22]
  8175  0118EE  0EF5               	movlw	-11
  8176  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  8177  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  8178  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  8179  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  8180                           
  8181                           ;stkvar	_fp @ sp[(-37)+-2]
  8182  011908  0ED9               	movlw	-39
  8183  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  8184  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  8185  011916  EC00  F080         	call	_efgtoa	;wreg free
  8186  01191A  D22E               	goto	l2024
  8187  01191C                     l11008:
  8188                           
  8189                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  8190  01191C  0E02               	movlw	2
  8191  01191E  6EE6               	movwf	postinc1,c
  8192  011920  0E00               	movlw	0
  8193  011922  6EE6               	movwf	postinc1,c
  8194  011924  0EF5               	movlw	low STR_42
  8195  011926  6EE6               	movwf	postinc1,c
  8196  011928  0EFF               	movlw	high STR_42
  8197  01192A  6EE6               	movwf	postinc1,c
  8198                           
  8199                           ;stkvar	_ct @ sp[(-36)+26]
  8200  01192C  0EF6               	movlw	246
  8201  01192E  24E1               	addwf	fsr1l,w,c
  8202  011930  6E32               	movwf	btemp^0,c
  8203  011932  0EFF               	movlw	255
  8204  011934  20E2               	addwfc	fsr1h,w,c
  8205  011936  6E33               	movwf	(btemp+1)^0,c
  8206  011938  0060  F0CB  FFE6   	movff	btemp,postinc1
  8207  01193E  0060  F0CF  FFE6   	movff	btemp+1,postinc1
  8208  011944  ECB1  F0AC         	call	_strncmp	;wreg free
  8209  011948  5032               	movf	btemp^0,w,c
  8210  01194A  1033               	iorwf	(btemp+1)^0,w,c
  8211  01194C  A4D8               	btfss	status,2,c
  8212  01194E  D096               	goto	l11028
  8213                           
  8214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  8215                           ;stkvar	_fmt @ sp[(-32)+-4]
  8216  011950  0EDC               	movlw	-36
  8217  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  8218  011958  0EDD               	movlw	-35
  8219  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8220  011960  006F FF78  F03C    	movff	postinc2,btemp+10
  8221  011966  006F FF74  F03D    	movff	postdec2,btemp+11
  8222  01196C  0E01               	movlw	1
  8223  01196E  263C               	addwf	(btemp+10)^0,f,c
  8224  011970  0E00               	movlw	0
  8225  011972  223D               	addwfc	(btemp+11)^0,f,c
  8226  011974  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
  8227  01197A  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
  8228  011980                     	if	0	;tblptru may be non-zero
  8229  011980                     	endif
  8230  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8231  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  8232  011982  6EF8               	movwf	tblptru,c
  8233  011984                     	endif
  8234                           
  8235                           ;stkvar	_c @ sp[(-32)+31]
  8236  011984  0008               	tblrd		*
  8237  011986  0EFF               	movlw	-1
  8238  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  8239  01198E  0EBF               	movlw	191
  8240  011990  6E3C               	movwf	(btemp+10)^0,c
  8241  011992  0EFF               	movlw	255
  8242  011994  6E3D               	movwf	(btemp+11)^0,c
  8243                           
  8244                           ;stkvar	_fmt @ sp[(-32)+-4]
  8245  011996  0EDC               	movlw	-36
  8246  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  8247  01199E  0EDD               	movlw	-35
  8248  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8249  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8250  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8251  0119B2                     	if	0	;tblptru may be non-zero
  8252  0119B2                     	endif
  8253  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8254  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  8255  0119B4  6EF8               	movwf	tblptru,c
  8256  0119B6                     	endif
  8257  0119B6  0008               	tblrd		*
  8258  0119B8  50F5               	movf	tablat,w,c
  8259  0119BA  6E3A               	movwf	(btemp+8)^0,c
  8260  0119BC  6A3B               	clrf	(btemp+9)^0,c
  8261  0119BE  503C               	movf	(btemp+10)^0,w,c
  8262  0119C0  263A               	addwf	(btemp+8)^0,f,c
  8263  0119C2  503D               	movf	(btemp+11)^0,w,c
  8264  0119C4  223B               	addwfc	(btemp+9)^0,f,c
  8265  0119C6  503B               	movf	(btemp+9)^0,w,c
  8266  0119C8  E106               	bnz	u11990
  8267  0119CA  0E1A               	movlw	26
  8268  0119CC  5C3A               	subwf	(btemp+8)^0,w,c
  8269  0119CE  B0D8               	btfsc	status,0,c
  8270  0119D0  D002               	goto	u11990
  8271  0119D2  0E01               	movlw	1
  8272  0119D4  D001               	goto	u12000
  8273  0119D6                     u11990:
  8274  0119D6  0E00               	movlw	0
  8275  0119D8                     u12000:
  8276  0119D8  6E3C               	movwf	(btemp+10)^0,c
  8277  0119DA  6A3D               	clrf	(btemp+11)^0,c
  8278                           
  8279                           ;stkvar	_vfpfcnvrt$4432 @ sp[(-32)+2]
  8280  0119DC  0EE2               	movlw	-30
  8281  0119DE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8282  0119E4  0EE3               	movlw	-29
  8283  0119E6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8284                           
  8285                           ;stkvar	_vfpfcnvrt$4432 @ sp[(-32)+2]
  8286  0119EC  0EE2               	movlw	-30
  8287  0119EE  006F FF8C  F032    	movff	plusw1,btemp
  8288  0119F4  0EE3               	movlw	-29
  8289  0119F6  50E3               	movf	plusw1,w,c
  8290  0119F8  1032               	iorwf	btemp^0,w,c
  8291                           
  8292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  8293                           ;stkvar	_ap @ sp[(-32)+-6]
  8294                           
  8295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  8296                           
  8297                           ;stkvar	_f @ sp[(-32)+22]
  8298                           
  8299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  8300                           ;stkvar	_ap @ sp[(-32)+-6]
  8301  0119FA  0EDA               	movlw	-38
  8302  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8303  011A02  0EDB               	movlw	-37
  8304  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  8305  011A0A  0E04               	movlw	4
  8306  011A0C  5EDE               	subwf	postinc2,f,c
  8307  011A0E  0E00               	movlw	0
  8308  011A10  5ADD               	subwfb	postdec2,f,c
  8309  011A12  006F FF78  F03C    	movff	postinc2,btemp+10
  8310  011A18  006F FF74  F03D    	movff	postdec2,btemp+11
  8311  011A1E  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8312  011A24  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8313  011A2A  006F FF78  F03A    	movff	postinc2,btemp+8
  8314  011A30  006F FF78  F03B    	movff	postinc2,btemp+9
  8315  011A36  006F FF78  F03C    	movff	postinc2,btemp+10
  8316  011A3C  006F FF78  F03D    	movff	postinc2,btemp+11
  8317                           
  8318                           ;stkvar	_f @ sp[(-32)+22]
  8319  011A42  0EF6               	movlw	-10
  8320  011A44  0060  F0EB  FFE3   	movff	btemp+8,plusw1
  8321  011A4A  0EF7               	movlw	-9
  8322  011A4C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
  8323  011A52  0EF8               	movlw	-8
  8324  011A54  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8325  011A5A  0EF9               	movlw	-7
  8326  011A5C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8327                           
  8328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  8329                           ;stkvar	_fmt @ sp[(-32)+-4]
  8330  011A62  0EDC               	movlw	-36
  8331  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  8332  011A6A  0EDD               	movlw	-35
  8333  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8334  011A72  0E02               	movlw	2
  8335  011A74  26DE               	addwf	postinc2,f,c
  8336  011A76  0E00               	movlw	0
  8337  011A78  22DD               	addwfc	postdec2,f,c
  8338  011A7A  D736               	goto	l11004
  8339  011A7C                     l11028:
  8340                           
  8341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8342                           ;stkvar	_fmt @ sp[(-32)+-4]
  8343  011A7C  0EDC               	movlw	-36
  8344  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8345  011A84  0EDD               	movlw	-35
  8346  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  8347  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8348  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  8349  011A98                     	if	0	;tblptru may be non-zero
  8350  011A98                     	endif
  8351  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8352  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  8353  011A9A  6EF8               	movwf	tblptru,c
  8354  011A9C                     	endif
  8355  011A9C  0008               	tblrd		*
  8356  011A9E  50F5               	movf	tablat,w,c
  8357  011AA0  0A73               	xorlw	115
  8358  011AA2  A4D8               	btfss	status,2,c
  8359  011AA4  D042               	goto	l11038
  8360                           
  8361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8362                           ;stkvar	_fmt @ sp[(-32)+-4]
  8363  011AA6  0EDC               	movlw	-36
  8364  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8365  011AAE  0EDD               	movlw	-35
  8366  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8367  011AB6  2ADE               	incf	postinc2,f,c
  8368  011AB8  0E00               	movlw	0
  8369  011ABA  22DD               	addwfc	postdec2,f,c
  8370                           
  8371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8372                           ;stkvar	_ap @ sp[(-32)+-6]
  8373  011ABC  0EDA               	movlw	-38
  8374  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8375  011AC4  0EDB               	movlw	-37
  8376  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8377  011ACC  0E02               	movlw	2
  8378  011ACE  5EDE               	subwf	postinc2,f,c
  8379  011AD0  0E00               	movlw	0
  8380  011AD2  5ADD               	subwfb	postdec2,f,c
  8381  011AD4  006F FF78  F03C    	movff	postinc2,btemp+10
  8382  011ADA  006F FF74  F03D    	movff	postdec2,btemp+11
  8383  011AE0  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8384  011AE6  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8385  011AEC  006F FF78  F03C    	movff	postinc2,btemp+10
  8386  011AF2  006F FF74  F03D    	movff	postdec2,btemp+11
  8387                           
  8388                           ;stkvar	_cp @ sp[(-32)+29]
  8389  011AF8  0EFE               	movlw	-2
  8390  011AFA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8391  011B00  0EFD               	movlw	-3
  8392  011B02  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8393                           
  8394                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8395                           ;stkvar	_cp @ sp[(-32)+29]
  8396  011B08  0EFD               	movlw	-3
  8397  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  8398  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  8399                           
  8400                           ;stkvar	_fp @ sp[(-34)+-2]
  8401  011B16  0EDC               	movlw	-36
  8402  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  8403  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  8404  011B24  ECA2  F0A5         	call	_stoa	;wreg free
  8405  011B28  D127               	goto	l2024
  8406  011B2A                     l11038:
  8407                           
  8408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8409                           ;stkvar	_fmt @ sp[(-32)+-4]
  8410  011B2A  0EDC               	movlw	-36
  8411  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8412  011B32  0EDD               	movlw	-35
  8413  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  8414  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8415  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  8416  011B46                     	if	0	;tblptru may be non-zero
  8417  011B46                     	endif
  8418  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8419  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  8420  011B48  6EF8               	movwf	tblptru,c
  8421  011B4A                     	endif
  8422  011B4A  0008               	tblrd		*
  8423  011B4C  50F5               	movf	tablat,w,c
  8424  011B4E  0A78               	xorlw	120
  8425  011B50  B4D8               	btfsc	status,2,c
  8426  011B52  D015               	goto	u12040
  8427                           
  8428                           ;stkvar	_fmt @ sp[(-32)+-4]
  8429  011B54  0EDC               	movlw	-36
  8430  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  8431  011B5C  0EDD               	movlw	-35
  8432  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8433  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  8434  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8435  011B70                     	if	0	;tblptru may be non-zero
  8436  011B70                     	endif
  8437  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8438  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  8439  011B72  6EF8               	movwf	tblptru,c
  8440  011B74                     	endif
  8441  011B74  0008               	tblrd		*
  8442  011B76  50F5               	movf	tablat,w,c
  8443  011B78  0A58               	xorlw	88
  8444  011B7A  A4D8               	btfss	status,2,c
  8445  011B7C  D094               	goto	l11052
  8446  011B7E                     u12040:
  8447                           
  8448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8449                           ;stkvar	_fmt @ sp[(-32)+-4]
  8450  011B7E  0EDC               	movlw	-36
  8451  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  8452  011B86  0EDD               	movlw	-35
  8453  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  8454  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8455  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  8456  011B9A                     	if	0	;tblptru may be non-zero
  8457  011B9A                     	endif
  8458  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8459  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  8460  011B9C  6EF8               	movwf	tblptru,c
  8461  011B9E                     	endif
  8462                           
  8463                           ;stkvar	_c @ sp[(-32)+31]
  8464  011B9E  0008               	tblrd		*
  8465  011BA0  0EFF               	movlw	-1
  8466  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  8467                           
  8468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8469                           ;stkvar	_fmt @ sp[(-32)+-4]
  8470  011BA8  0EDC               	movlw	-36
  8471  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8472  011BB0  0EDD               	movlw	-35
  8473  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8474  011BB8  2ADE               	incf	postinc2,f,c
  8475  011BBA  0E00               	movlw	0
  8476  011BBC  22DD               	addwfc	postdec2,f,c
  8477                           
  8478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8479                           ;stkvar	_ap @ sp[(-32)+-6]
  8480  011BBE  0EDA               	movlw	-38
  8481  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8482  011BC6  0EDB               	movlw	-37
  8483  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8484  011BCE  0E02               	movlw	2
  8485  011BD0  5EDE               	subwf	postinc2,f,c
  8486  011BD2  0E00               	movlw	0
  8487  011BD4  5ADD               	subwfb	postdec2,f,c
  8488  011BD6  006F FF78  F03C    	movff	postinc2,btemp+10
  8489  011BDC  006F FF74  F03D    	movff	postdec2,btemp+11
  8490  011BE2  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
  8491  011BE8  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
  8492  011BEE  006F FF78  F03C    	movff	postinc2,btemp+10
  8493  011BF4  006F FF74  F03D    	movff	postdec2,btemp+11
  8494  011BFA  503C               	movf	(btemp+10)^0,w,c
  8495  011BFC  6E42               	movwf	(btemp+16)^0,c
  8496  011BFE  503D               	movf	(btemp+11)^0,w,c
  8497  011C00  6E43               	movwf	(btemp+17)^0,c
  8498  011C02  6A44               	clrf	(btemp+18)^0,c
  8499  011C04  6A45               	clrf	(btemp+19)^0,c
  8500  011C06  6A46               	clrf	(btemp+20)^0,c
  8501  011C08  6A47               	clrf	(btemp+21)^0,c
  8502  011C0A  6A48               	clrf	(btemp+22)^0,c
  8503  011C0C  6A49               	clrf	(btemp+23)^0,c
  8504                           
  8505                           ;stkvar	_llu @ sp[(-32)+6]
  8506  011C0E  0EE6               	movlw	-26
  8507  011C10  0060  F10B  FFE3   	movff	btemp+16,plusw1
  8508  011C16  0EE7               	movlw	-25
  8509  011C18  0060  F10F  FFE3   	movff	btemp+17,plusw1
  8510  011C1E  0EE8               	movlw	-24
  8511  011C20  0060  F113  FFE3   	movff	btemp+18,plusw1
  8512  011C26  0EE9               	movlw	-23
  8513  011C28  0060  F117  FFE3   	movff	btemp+19,plusw1
  8514  011C2E  0EEA               	movlw	-22
  8515  011C30  0060  F11B  FFE3   	movff	btemp+20,plusw1
  8516  011C36  0EEB               	movlw	-21
  8517  011C38  0060  F11F  FFE3   	movff	btemp+21,plusw1
  8518  011C3E  0EEC               	movlw	-20
  8519  011C40  0060  F123  FFE3   	movff	btemp+22,plusw1
  8520  011C46  0EED               	movlw	-19
  8521  011C48  0060  F127  FFE3   	movff	btemp+23,plusw1
  8522                           
  8523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8524                           ;stkvar	_c @ sp[(-32)+31]
  8525  011C4E  0EFF               	movlw	-1
  8526  011C50  50E3               	movf	plusw1,w,c
  8527  011C52  6EE6               	movwf	postinc1,c
  8528                           
  8529                           ;stkvar	_llu @ sp[(-33)+6]
  8530  011C54  50E1               	movf	fsr1l,w,c
  8531  011C56  0FE5               	addlw	-27
  8532  011C58  6ED9               	movwf	fsr2l,c
  8533  011C5A  50E2               	movf	fsr1h,w,c
  8534  011C5C  6EDA               	movwf	fsr2h,c
  8535  011C5E  0EFF               	movlw	255
  8536  011C60  22DA               	addwfc	fsr2h,f,c
  8537  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  8538  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  8539  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  8540  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  8541  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  8542  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  8543  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  8544  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  8545                           
  8546                           ;stkvar	_fp @ sp[(-41)+-2]
  8547  011C92  0ED5               	movlw	-43
  8548  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  8549  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  8550  011CA0  EC99  F0A0         	call	_xtoa	;wreg free
  8551  011CA4  D069               	goto	l2024
  8552  011CA6                     l11052:
  8553                           
  8554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8555                           ;stkvar	_fmt @ sp[(-32)+-4]
  8556  011CA6  0EDC               	movlw	-36
  8557  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8558  011CAE  0EDD               	movlw	-35
  8559  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8560  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8561  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8562  011CC2                     	if	0	;tblptru may be non-zero
  8563  011CC2                     	endif
  8564  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8565  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  8566  011CC4  6EF8               	movwf	tblptru,c
  8567  011CC6                     	endif
  8568  011CC6  0008               	tblrd		*
  8569  011CC8  50F5               	movf	tablat,w,c
  8570  011CCA  0A25               	xorlw	37
  8571  011CCC  A4D8               	btfss	status,2,c
  8572  011CCE  D01A               	goto	l11062
  8573                           
  8574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8575                           ;stkvar	_fmt @ sp[(-32)+-4]
  8576  011CD0  0EDC               	movlw	-36
  8577  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8578  011CD8  0EDD               	movlw	-35
  8579  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8580  011CE0  2ADE               	incf	postinc2,f,c
  8581  011CE2  0E00               	movlw	0
  8582  011CE4  22DD               	addwfc	postdec2,f,c
  8583                           
  8584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8585                           ;stkvar	_fp @ sp[(-32)+-2]
  8586  011CE6  0EDE               	movlw	-34
  8587  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  8588  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  8589  011CF4  0E25               	movlw	37
  8590  011CF6  6EE6               	movwf	postinc1,c
  8591  011CF8  0E00               	movlw	0
  8592  011CFA  6EE6               	movwf	postinc1,c
  8593  011CFC  EC8C  F0B2         	call	_fputc	;wreg free
  8594  011D00                     l11058:
  8595                           
  8596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8597  011D00  0E01               	movlw	1
  8598  011D02  D00C               	goto	L6
  8599  011D04                     l11062:
  8600                           
  8601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8602                           ;stkvar	_fmt @ sp[(-32)+-4]
  8603  011D04  0EDC               	movlw	-36
  8604  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8605  011D0C  0EDD               	movlw	-35
  8606  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8607  011D14  2ADE               	incf	postinc2,f,c
  8608  011D16  0E00               	movlw	0
  8609  011D18  22DD               	addwfc	postdec2,f,c
  8610                           
  8611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8612  011D1A  0E00               	movlw	0
  8613  011D1C                     L6:
  8614  011D1C  6E32               	movwf	btemp^0,c
  8615  011D1E  0E00               	movlw	0
  8616  011D20  6E33               	movwf	(btemp+1)^0,c
  8617  011D22  D02A               	goto	l2024
  8618  011D24                     l11068:
  8619                           
  8620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8621                           ;stkvar	_fp @ sp[(-32)+-2]
  8622  011D24  0EDE               	movlw	-34
  8623  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  8624  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  8625                           
  8626                           ;stkvar	_fmt @ sp[(-34)+-4]
  8627  011D32  0EDA               	movlw	-38
  8628  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  8629  011D3A  0EDB               	movlw	-37
  8630  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8631  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  8632  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  8633  011D4E                     	if	0	;tblptru may be non-zero
  8634  011D4E                     	endif
  8635  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8636  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  8637  011D50  6EF8               	movwf	tblptru,c
  8638  011D52                     	endif
  8639  011D52  0008               	tblrd		*
  8640  011D54  50F5               	movf	tablat,w,c
  8641  011D56  6EE6               	movwf	postinc1,c
  8642  011D58  0E00               	movlw	0
  8643  011D5A  6EE6               	movwf	postinc1,c
  8644  011D5C  EC8C  F0B2         	call	_fputc	;wreg free
  8645                           
  8646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8647                           ;stkvar	_fmt @ sp[(-32)+-4]
  8648  011D60  0EDC               	movlw	-36
  8649  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8650  011D68  0EDD               	movlw	-35
  8651  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8652  011D70  2ADE               	incf	postinc2,f,c
  8653  011D72  0E00               	movlw	0
  8654  011D74  22DD               	addwfc	postdec2,f,c
  8655  011D76  D7C4               	goto	l11058
  8656  011D78                     l2024:
  8657                           
  8658                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8659  011D78  0EDA               	movlw	218
  8660  011D7A  26E1               	addwf	fsr1l,f,c
  8661  011D7C  0EFF               	movlw	255
  8662  011D7E  22E2               	addwfc	fsr1h,f,c
  8663  011D80  0012               	return		;funcret
  8664  011D82                     __end_of_vfpfcnvrt:
  8665                           	opt callstack 0
  8666                           
  8667 ;; *************** function _xtoa *****************
  8668 ;; Defined at:
  8669 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8672 ;;		 -> f(6), NULL(0), 
  8673 ;;  d               8  [STACK] unsigned long long 
  8674 ;;  x               1  [STACK] unsigned char 
  8675 ;; Auto vars:     Size  Location     Type
  8676 ;;  n               8  [STACK] unsigned long long 
  8677 ;;  c               2  [STACK] int 
  8678 ;;  i               2  [STACK] int 
  8679 ;;  w               2  [STACK] int 
  8680 ;;  p               2  [STACK] int 
  8681 ;; Return value:  Size  Location     Type
  8682 ;;                  2  [STACK] int 
  8683 ;; Registers used:
  8684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8685 ;; Tracked objects:
  8686 ;;		On entry : 0/5
  8687 ;;		On exit  : 0/0
  8688 ;;		Unchanged: 0/0
  8689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8694 ;;Total ram usage:        0 bytes
  8695 ;; Hardware stack levels used:    1
  8696 ;; Hardware stack levels required when called:   11
  8697 ;; This function calls:
  8698 ;;		_isalpha
  8699 ;;		_isupper
  8700 ;;		_pad
  8701 ;;		_toupper
  8702 ;; This function is called by:
  8703 ;;		_vfpfcnvrt
  8704 ;; This function uses a reentrant model
  8705 ;;
  8706                           
  8707                           	psect	text38
  8708  014132                     __ptext38:
  8709                           	opt callstack 0
  8710  014132                     _xtoa:
  8711                           	opt callstack 0
  8712                           
  8713                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8714  014132  0E14               	movlw	20
  8715  014134  26E1               	addwf	fsr1l,f,c
  8716  014136  0E00               	movlw	0
  8717  014138  22E2               	addwfc	fsr1h,f,c
  8718                           
  8719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8720                           
  8721                           ;incstack = 0
  8722  01413A  AE1E               	btfss	(_prec+1)^0,7,c
  8723                           
  8724                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8725  01413C  921F               	bcf	_flags^0,1,c
  8726                           
  8727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8728  01413E  BE1E               	btfsc	(_prec+1)^0,7,c
  8729  014140  D005               	goto	u11520
  8730  014142  501E               	movf	(_prec+1)^0,w,c
  8731  014144  E110               	bnz	l10782
  8732  014146  041D               	decf	_prec^0,w,c
  8733  014148  B0D8               	btfsc	status,0,c
  8734  01414A  D00D               	goto	l10782
  8735  01414C                     u11520:
  8736  01414C  0E01               	movlw	1
  8737  01414E  6E3C               	movwf	(btemp+10)^0,c
  8738  014150  0E00               	movlw	0
  8739  014152  6E3D               	movwf	(btemp+11)^0,c
  8740                           
  8741                           ;stkvar	_p @ sp[(-20)+18]
  8742  014154  0EFE               	movlw	-2
  8743  014156  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8744  01415C  0EFF               	movlw	-1
  8745  01415E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8746  014164  D008               	goto	l1974
  8747  014166                     l10782:
  8748                           
  8749                           ;stkvar	_p @ sp[(-20)+18]
  8750  014166  0EFE               	movlw	-2
  8751  014168  0060  F077  FFE3   	movff	_prec,plusw1
  8752  01416E  0EFF               	movlw	-1
  8753  014170  0060  F07B  FFE3   	movff	_prec+1,plusw1
  8754  014176                     l1974:
  8755                           
  8756                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8757                           ;stkvar	_w @ sp[(-20)+16]
  8758  014176  0EFC               	movlw	-4
  8759  014178  0060  F06F  FFE3   	movff	_width,plusw1
  8760  01417E  0EFD               	movlw	-3
  8761  014180  0060  F073  FFE3   	movff	_width+1,plusw1
  8762                           
  8763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8764  014186  A81F               	btfss	_flags^0,4,c
  8765  014188  D00B               	goto	l10788
  8766                           
  8767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8768                           ;stkvar	_w @ sp[(-20)+16]
  8769  01418A  50E1               	movf	fsr1l,w,c
  8770  01418C  0FFC               	addlw	-4
  8771  01418E  6ED9               	movwf	fsr2l,c
  8772  014190  50E2               	movf	fsr1h,w,c
  8773  014192  6EDA               	movwf	fsr2h,c
  8774  014194  0EFF               	movlw	255
  8775  014196  22DA               	addwfc	fsr2h,f,c
  8776  014198  0EFE               	movlw	254
  8777  01419A  26DE               	addwf	postinc2,f,c
  8778  01419C  0EFF               	movlw	255
  8779  01419E  22DD               	addwfc	postdec2,f,c
  8780  0141A0                     l10788:
  8781                           
  8782                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8783                           ;stkvar	_d @ sp[(-20)+-10]
  8784  0141A0  0EE2               	movlw	226
  8785  0141A2  24E1               	addwf	fsr1l,w,c
  8786  0141A4  6ED9               	movwf	fsr2l,c
  8787  0141A6  0EFF               	movlw	255
  8788  0141A8  20E2               	addwfc	fsr1h,w,c
  8789  0141AA  6EDA               	movwf	fsr2h,c
  8790                           
  8791                           ;stkvar	_n @ sp[(-20)+4]
  8792  0141AC  0E08               	movlw	8
  8793  0141AE  6E32               	movwf	btemp^0,c
  8794  0141B0  0EF0               	movlw	-16
  8795  0141B2                     us1154999:
  8796  0141B2  006F FF7B FFE3     	movff	postinc2,plusw1
  8797  0141B8  28E8               	incf	wreg,w,c
  8798  0141BA  2E32               	decfsz	btemp^0,f,c
  8799  0141BC  D7FA               	bra	us1154999
  8800                           
  8801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8802  0141BE  0E4F               	movlw	79
  8803  0141C0  6E3C               	movwf	(btemp+10)^0,c
  8804  0141C2  0E00               	movlw	0
  8805  0141C4  6E3D               	movwf	(btemp+11)^0,c
  8806                           
  8807                           ;stkvar	_i @ sp[(-20)+14]
  8808  0141C6  0EFA               	movlw	-6
  8809  0141C8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8810  0141CE  0EFB               	movlw	-5
  8811  0141D0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8812                           
  8813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8814  0141D6  0102               	movlb	2	; () banked
  8815  0141D8  6B8F               	clrf	(_dbuf+79)& (0+255),b
  8816                           
  8817                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8818  0141DA  D0EE               	goto	l10826
  8819  0141DC                     l10794:
  8820                           
  8821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8822                           ;stkvar	_i @ sp[(-20)+14]
  8823  0141DC  50E1               	movf	fsr1l,w,c
  8824  0141DE  0FFA               	addlw	-6
  8825  0141E0  6ED9               	movwf	fsr2l,c
  8826  0141E2  50E2               	movf	fsr1h,w,c
  8827  0141E4  6EDA               	movwf	fsr2h,c
  8828  0141E6  0EFF               	movlw	255
  8829  0141E8  22DA               	addwfc	fsr2h,f,c
  8830  0141EA  06DE               	decf	postinc2,f,c
  8831  0141EC  0E00               	movlw	0
  8832  0141EE  5ADD               	subwfb	postdec2,f,c
  8833                           
  8834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8835                           ;stkvar	_n @ sp[(-20)+4]
  8836  0141F0  0EF0               	movlw	-16
  8837  0141F2  006F FF8C  F03C    	movff	plusw1,btemp+10
  8838  0141F8  0EF1               	movlw	-15
  8839  0141FA  006F FF8C  F03D    	movff	plusw1,btemp+11
  8840  014200  0E0F               	movlw	15
  8841  014202  163C               	andwf	(btemp+10)^0,f,c
  8842  014204  0E00               	movlw	0
  8843  014206  163D               	andwf	(btemp+11)^0,f,c
  8844                           
  8845                           ;stkvar	_c @ sp[(-20)+12]
  8846  014208  0EF8               	movlw	-8
  8847  01420A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8848  014210  0EF9               	movlw	-7
  8849  014212  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8850                           
  8851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8852                           ;stkvar	_c @ sp[(-20)+12]
  8853  014218  0EF9               	movlw	-7
  8854  01421A  BEE3               	btfsc	plusw1,7,c
  8855  01421C  D00F               	goto	l10802
  8856  01421E  0EF9               	movlw	-7
  8857  014220  50E3               	movf	plusw1,w,c
  8858  014222  E108               	bnz	u11550
  8859  014224  0EF8               	movlw	-8
  8860  014226  006F FF8C  F032    	movff	plusw1,btemp
  8861  01422C  0E0A               	movlw	10
  8862  01422E  5E32               	subwf	btemp^0,f,c
  8863  014230  A0D8               	btfss	status,0,c
  8864  014232  D004               	goto	l10802
  8865  014234                     u11550:
  8866                           
  8867                           ;stkvar	_c @ sp[(-20)+12]
  8868  014234  0EF8               	movlw	-8
  8869  014236  50E3               	movf	plusw1,w,c
  8870  014238  0F57               	addlw	87
  8871  01423A  D003               	goto	L7
  8872  01423C                     l10802:
  8873                           
  8874                           ;stkvar	_c @ sp[(-20)+12]
  8875  01423C  0EF8               	movlw	-8
  8876  01423E  50E3               	movf	plusw1,w,c
  8877  014240  0F30               	addlw	48
  8878  014242                     L7:
  8879  014242  6E3C               	movwf	(btemp+10)^0,c
  8880  014244  0EF9               	movlw	-7
  8881  014246  006F FF8C  F03D    	movff	plusw1,btemp+11
  8882  01424C  0E00               	movlw	0
  8883  01424E  223D               	addwfc	(btemp+11)^0,f,c
  8884                           
  8885                           ;stkvar	_c @ sp[(-20)+12]
  8886  014250  0EF8               	movlw	-8
  8887  014252  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8888  014258  0EF9               	movlw	-7
  8889  01425A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8890  014260  0EBF               	movlw	191
  8891  014262  6E3C               	movwf	(btemp+10)^0,c
  8892  014264  0EFF               	movlw	255
  8893  014266  6E3D               	movwf	(btemp+11)^0,c
  8894                           
  8895                           ;stkvar	_x @ sp[(-20)+-11]
  8896  014268  0EE1               	movlw	-31
  8897  01426A  50E3               	movf	plusw1,w,c
  8898  01426C  6E3A               	movwf	(btemp+8)^0,c
  8899  01426E  6A3B               	clrf	(btemp+9)^0,c
  8900  014270  503C               	movf	(btemp+10)^0,w,c
  8901  014272  263A               	addwf	(btemp+8)^0,f,c
  8902  014274  503D               	movf	(btemp+11)^0,w,c
  8903  014276  223B               	addwfc	(btemp+9)^0,f,c
  8904  014278  503B               	movf	(btemp+9)^0,w,c
  8905  01427A  E106               	bnz	u11560
  8906  01427C  0E1A               	movlw	26
  8907  01427E  5C3A               	subwf	(btemp+8)^0,w,c
  8908  014280  B0D8               	btfsc	status,0,c
  8909  014282  D002               	goto	u11560
  8910  014284  0E01               	movlw	1
  8911  014286  D001               	goto	u11570
  8912  014288                     u11560:
  8913  014288  0E00               	movlw	0
  8914  01428A                     u11570:
  8915  01428A  6E3C               	movwf	(btemp+10)^0,c
  8916  01428C  6A3D               	clrf	(btemp+11)^0,c
  8917                           
  8918                           ;stkvar	_xtoa$4410 @ sp[(-20)+2]
  8919  01428E  0EEE               	movlw	-18
  8920  014290  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8921  014296  0EEF               	movlw	-17
  8922  014298  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8923                           
  8924                           ;stkvar	_xtoa$4410 @ sp[(-20)+2]
  8925  01429E  0EEE               	movlw	-18
  8926  0142A0  006F FF8C  F032    	movff	plusw1,btemp
  8927  0142A6  0EEF               	movlw	-17
  8928  0142A8  50E3               	movf	plusw1,w,c
  8929  0142AA  1032               	iorwf	btemp^0,w,c
  8930  0142AC  B4D8               	btfsc	status,2,c
  8931  0142AE  D041               	goto	l10818
  8932  0142B0  0E9F               	movlw	159
  8933  0142B2  6E3C               	movwf	(btemp+10)^0,c
  8934  0142B4  0EFF               	movlw	255
  8935  0142B6  6E3D               	movwf	(btemp+11)^0,c
  8936                           
  8937                           ;stkvar	_c @ sp[(-20)+12]
  8938  0142B8  0EF8               	movlw	-8
  8939  0142BA  006F FF8C  F03A    	movff	plusw1,btemp+8
  8940  0142C0  0EF9               	movlw	-7
  8941  0142C2  006F FF8C  F03B    	movff	plusw1,btemp+9
  8942  0142C8  0E20               	movlw	32
  8943  0142CA  123A               	iorwf	(btemp+8)^0,f,c
  8944  0142CC  0E00               	movlw	0
  8945  0142CE  123B               	iorwf	(btemp+9)^0,f,c
  8946  0142D0  503C               	movf	(btemp+10)^0,w,c
  8947  0142D2  263A               	addwf	(btemp+8)^0,f,c
  8948  0142D4  503D               	movf	(btemp+11)^0,w,c
  8949  0142D6  223B               	addwfc	(btemp+9)^0,f,c
  8950  0142D8  503B               	movf	(btemp+9)^0,w,c
  8951  0142DA  E106               	bnz	u11590
  8952  0142DC  0E1A               	movlw	26
  8953  0142DE  5C3A               	subwf	(btemp+8)^0,w,c
  8954  0142E0  B0D8               	btfsc	status,0,c
  8955  0142E2  D002               	goto	u11590
  8956  0142E4  0E01               	movlw	1
  8957  0142E6  D001               	goto	u11600
  8958  0142E8                     u11590:
  8959  0142E8  0E00               	movlw	0
  8960  0142EA                     u11600:
  8961  0142EA  6E3C               	movwf	(btemp+10)^0,c
  8962  0142EC  6A3D               	clrf	(btemp+11)^0,c
  8963                           
  8964                           ;stkvar	_xtoa$4411 @ sp[(-20)+0]
  8965  0142EE  0EEC               	movlw	-20
  8966  0142F0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  8967  0142F6  0EED               	movlw	-19
  8968  0142F8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  8969                           
  8970                           ;stkvar	_xtoa$4411 @ sp[(-20)+0]
  8971  0142FE  0EEC               	movlw	-20
  8972  014300  006F FF8C  F032    	movff	plusw1,btemp
  8973  014306  0EED               	movlw	-19
  8974  014308  50E3               	movf	plusw1,w,c
  8975  01430A  1032               	iorwf	btemp^0,w,c
  8976  01430C  B4D8               	btfsc	status,2,c
  8977  01430E  D011               	goto	l10818
  8978                           
  8979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  8980                           ;stkvar	_c @ sp[(-20)+12]
  8981  014310  0EF8               	movlw	-8
  8982  014312  006F FF8F FFE6     	movff	plusw1,postinc1
  8983  014318  006F FF8F FFE6     	movff	plusw1,postinc1
  8984  01431E  ECC8  F0B9         	call	_toupper	;wreg free
  8985                           
  8986                           ;stkvar	_c @ sp[(-20)+12]
  8987  014322  0EF8               	movlw	-8
  8988  014324  0060  F0CB  FFE3   	movff	btemp,plusw1
  8989  01432A  0EF9               	movlw	-7
  8990  01432C  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  8991  014332                     l10818:
  8992                           
  8993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  8994                           ;stkvar	_c @ sp[(-20)+12]
  8995                           ;stkvar	_i @ sp[(-20)+14]
  8996  014332  0EFA               	movlw	-6
  8997  014334  006F FF8C  F03C    	movff	plusw1,btemp+10
  8998  01433A  0EFB               	movlw	-5
  8999  01433C  006F FF8C  F03D    	movff	plusw1,btemp+11
  9000  014342  0E40               	movlw	low _dbuf
  9001  014344  243C               	addwf	(btemp+10)^0,w,c
  9002  014346  6ED9               	movwf	fsr2l,c
  9003  014348  0E02               	movlw	high _dbuf
  9004  01434A  203D               	addwfc	(btemp+11)^0,w,c
  9005  01434C  6EDA               	movwf	fsr2h,c
  9006  01434E  0EF8               	movlw	-8
  9007  014350  006F FF8F FFDF     	movff	plusw1,indf2
  9008                           
  9009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  9010                           ;stkvar	_p @ sp[(-20)+18]
  9011  014356  50E1               	movf	fsr1l,w,c
  9012  014358  0FFE               	addlw	-2
  9013  01435A  6ED9               	movwf	fsr2l,c
  9014  01435C  50E2               	movf	fsr1h,w,c
  9015  01435E  6EDA               	movwf	fsr2h,c
  9016  014360  0EFF               	movlw	255
  9017  014362  22DA               	addwfc	fsr2h,f,c
  9018  014364  06DE               	decf	postinc2,f,c
  9019  014366  0E00               	movlw	0
  9020  014368  5ADD               	subwfb	postdec2,f,c
  9021                           
  9022                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  9023                           ;stkvar	_w @ sp[(-20)+16]
  9024  01436A  50E1               	movf	fsr1l,w,c
  9025  01436C  0FFC               	addlw	-4
  9026  01436E  6ED9               	movwf	fsr2l,c
  9027  014370  50E2               	movf	fsr1h,w,c
  9028  014372  6EDA               	movwf	fsr2h,c
  9029  014374  0EFF               	movlw	255
  9030  014376  22DA               	addwfc	fsr2h,f,c
  9031  014378  06DE               	decf	postinc2,f,c
  9032  01437A  0E00               	movlw	0
  9033  01437C  5ADD               	subwfb	postdec2,f,c
  9034                           
  9035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  9036  01437E  0E04               	movlw	4
  9037  014380  6E3D               	movwf	(btemp+11)^0,c
  9038                           
  9039                           ;stkvar	_n @ sp[(-20)+4]
  9040  014382  50E1               	movf	fsr1l,w,c
  9041  014384  0FF0               	addlw	-16
  9042  014386  6ED9               	movwf	fsr2l,c
  9043  014388  50E2               	movf	fsr1h,w,c
  9044  01438A  6EDA               	movwf	fsr2h,c
  9045  01438C  0EFF               	movlw	255
  9046  01438E  22DA               	addwfc	fsr2h,f,c
  9047  014390  283D               	incf	(btemp+11)^0,w,c
  9048  014392  52DE               	movf	postinc2,f,c
  9049  014394  D00F               	goto	u11620
  9050  014396                     u11625:
  9051  014396  52DE               	movf	postinc2,f,c
  9052  014398  52DE               	movf	postinc2,f,c
  9053  01439A  52DE               	movf	postinc2,f,c
  9054  01439C  52DE               	movf	postinc2,f,c
  9055  01439E  52DE               	movf	postinc2,f,c
  9056  0143A0  52DE               	movf	postinc2,f,c
  9057  0143A2  90D8               	bcf	status,0,c
  9058  0143A4  32DD               	rrcf	postdec2,f,c
  9059  0143A6  32DD               	rrcf	postdec2,f,c
  9060  0143A8  32DD               	rrcf	postdec2,f,c
  9061  0143AA  32DD               	rrcf	postdec2,f,c
  9062  0143AC  32DD               	rrcf	postdec2,f,c
  9063  0143AE  32DD               	rrcf	postdec2,f,c
  9064  0143B0  32DD               	rrcf	postdec2,f,c
  9065  0143B2  32DE               	rrcf	postinc2,f,c
  9066  0143B4                     u11620:
  9067  0143B4  2EE8               	decfsz	wreg,f,c
  9068  0143B6  D7EF               	goto	u11625
  9069  0143B8                     l10826:
  9070                           
  9071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9072                           ;stkvar	_i @ sp[(-20)+14]
  9073  0143B8  0EFB               	movlw	-5
  9074  0143BA  BEE3               	btfsc	plusw1,7,c
  9075  0143BC  D03A               	goto	u11670
  9076  0143BE  0EFB               	movlw	-5
  9077  0143C0  50E3               	movf	plusw1,w,c
  9078  0143C2  E108               	bnz	u11630
  9079  0143C4  0EFA               	movlw	-6
  9080  0143C6  006F FF8C  F032    	movff	plusw1,btemp
  9081  0143CC  0E02               	movlw	2
  9082  0143CE  5E32               	subwf	btemp^0,f,c
  9083  0143D0  A0D8               	btfss	status,0,c
  9084  0143D2  D02F               	goto	u11670
  9085  0143D4                     u11630:
  9086                           
  9087                           ;stkvar	_n @ sp[(-20)+4]
  9088  0143D4  0EF0               	movlw	-16
  9089  0143D6  50E3               	movf	plusw1,w,c
  9090  0143D8  E115               	bnz	u11641
  9091  0143DA  0EF1               	movlw	-15
  9092  0143DC  50E3               	movf	plusw1,w,c
  9093  0143DE  E112               	bnz	u11641
  9094  0143E0  0EF2               	movlw	-14
  9095  0143E2  50E3               	movf	plusw1,w,c
  9096  0143E4  E10F               	bnz	u11641
  9097  0143E6  0EF3               	movlw	-13
  9098  0143E8  50E3               	movf	plusw1,w,c
  9099  0143EA  E10C               	bnz	u11641
  9100  0143EC  0EF4               	movlw	-12
  9101  0143EE  50E3               	movf	plusw1,w,c
  9102  0143F0  E109               	bnz	u11641
  9103  0143F2  0EF5               	movlw	-11
  9104  0143F4  50E3               	movf	plusw1,w,c
  9105  0143F6  E106               	bnz	u11641
  9106  0143F8  0EF6               	movlw	-10
  9107  0143FA  50E3               	movf	plusw1,w,c
  9108  0143FC  E103               	bnz	u11641
  9109  0143FE  0EF7               	movlw	-9
  9110  014400  50E3               	movf	plusw1,w,c
  9111  014402  A4D8               	btfss	status,2,c
  9112  014404                     u11641:
  9113  014404  D6EB               	goto	l10794
  9114                           
  9115                           ;stkvar	_p @ sp[(-20)+18]
  9116  014406  0EFF               	movlw	-1
  9117  014408  BEE3               	btfsc	plusw1,7,c
  9118  01440A  D007               	goto	u11650
  9119  01440C  0EFF               	movlw	-1
  9120  01440E  50E3               	movf	plusw1,w,c
  9121  014410  E103               	bnz	u11651
  9122  014412  0EFE               	movlw	-2
  9123  014414  04E3               	decf	plusw1,w,c
  9124  014416  B0D8               	btfsc	status,0,c
  9125  014418                     u11651:
  9126  014418  D6E1               	goto	l10794
  9127  01441A                     u11650:
  9128                           
  9129                           ;stkvar	_w @ sp[(-20)+16]
  9130  01441A  0EFD               	movlw	-3
  9131  01441C  BEE3               	btfsc	plusw1,7,c
  9132  01441E  D009               	goto	u11670
  9133  014420  0EFD               	movlw	-3
  9134  014422  50E3               	movf	plusw1,w,c
  9135  014424  E104               	bnz	u11660
  9136  014426  0EFC               	movlw	-4
  9137  014428  04E3               	decf	plusw1,w,c
  9138  01442A  A0D8               	btfss	status,0,c
  9139  01442C  D002               	goto	u11670
  9140  01442E                     u11660:
  9141  01442E  B21F               	btfsc	_flags^0,1,c
  9142  014430  D6D5               	goto	l10794
  9143  014432                     u11670:
  9144                           
  9145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  9146  014432  A81F               	btfss	_flags^0,4,c
  9147  014434  D036               	goto	l10842
  9148                           
  9149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  9150                           ;stkvar	_i @ sp[(-20)+14]
  9151  014436  50E1               	movf	fsr1l,w,c
  9152  014438  0FFA               	addlw	-6
  9153  01443A  6ED9               	movwf	fsr2l,c
  9154  01443C  50E2               	movf	fsr1h,w,c
  9155  01443E  6EDA               	movwf	fsr2h,c
  9156  014440  0EFF               	movlw	255
  9157  014442  22DA               	addwfc	fsr2h,f,c
  9158  014444  06DE               	decf	postinc2,f,c
  9159  014446  0E00               	movlw	0
  9160  014448  5ADD               	subwfb	postdec2,f,c
  9161                           
  9162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9163                           ;stkvar	_x @ sp[(-20)+-11]
  9164                           ;stkvar	_i @ sp[(-20)+14]
  9165  01444A  0EFA               	movlw	-6
  9166  01444C  006F FF8C  F03C    	movff	plusw1,btemp+10
  9167  014452  0EFB               	movlw	-5
  9168  014454  006F FF8C  F03D    	movff	plusw1,btemp+11
  9169  01445A  0E40               	movlw	low _dbuf
  9170  01445C  243C               	addwf	(btemp+10)^0,w,c
  9171  01445E  6ED9               	movwf	fsr2l,c
  9172  014460  0E02               	movlw	high _dbuf
  9173  014462  203D               	addwfc	(btemp+11)^0,w,c
  9174  014464  6EDA               	movwf	fsr2h,c
  9175  014466  0EE1               	movlw	-31
  9176  014468  006F FF8F FFDF     	movff	plusw1,indf2
  9177                           
  9178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9179                           ;stkvar	_i @ sp[(-20)+14]
  9180  01446E  50E1               	movf	fsr1l,w,c
  9181  014470  0FFA               	addlw	-6
  9182  014472  6ED9               	movwf	fsr2l,c
  9183  014474  50E2               	movf	fsr1h,w,c
  9184  014476  6EDA               	movwf	fsr2h,c
  9185  014478  0EFF               	movlw	255
  9186  01447A  22DA               	addwfc	fsr2h,f,c
  9187  01447C  06DE               	decf	postinc2,f,c
  9188  01447E  0E00               	movlw	0
  9189  014480  5ADD               	subwfb	postdec2,f,c
  9190                           
  9191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  9192                           ;stkvar	_i @ sp[(-20)+14]
  9193  014482  0EFA               	movlw	-6
  9194  014484  006F FF8C  F03C    	movff	plusw1,btemp+10
  9195  01448A  0EFB               	movlw	-5
  9196  01448C  006F FF8C  F03D    	movff	plusw1,btemp+11
  9197  014492  0E40               	movlw	low _dbuf
  9198  014494  243C               	addwf	(btemp+10)^0,w,c
  9199  014496  6ED9               	movwf	fsr2l,c
  9200  014498  0E02               	movlw	high _dbuf
  9201  01449A  203D               	addwfc	(btemp+11)^0,w,c
  9202  01449C  6EDA               	movwf	fsr2h,c
  9203  01449E  0E30               	movlw	48
  9204  0144A0  6EDF               	movwf	indf2,c
  9205  0144A2                     l10842:
  9206                           
  9207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  9208                           ;stkvar	_w @ sp[(-20)+16]
  9209  0144A2  0EFC               	movlw	-4
  9210  0144A4  006F FF8F FFE6     	movff	plusw1,postinc1
  9211  0144AA  006F FF8F FFE6     	movff	plusw1,postinc1
  9212                           
  9213                           ;stkvar	_i @ sp[(-22)+14]
  9214  0144B0  0E40               	movlw	low _dbuf
  9215  0144B2  6E3C               	movwf	(btemp+10)^0,c
  9216  0144B4  0E02               	movlw	high _dbuf
  9217  0144B6  6E3D               	movwf	(btemp+11)^0,c
  9218  0144B8  0EF8               	movlw	-8
  9219  0144BA  50E3               	movf	plusw1,w,c
  9220  0144BC  263C               	addwf	(btemp+10)^0,f,c
  9221  0144BE  0EF9               	movlw	-7
  9222  0144C0  50E3               	movf	plusw1,w,c
  9223  0144C2  223D               	addwfc	(btemp+11)^0,f,c
  9224  0144C4  0060  F0F3  FFE6   	movff	btemp+10,postinc1
  9225  0144CA  0060  F0F7  FFE6   	movff	btemp+11,postinc1
  9226                           
  9227                           ;stkvar	_fp @ sp[(-24)+-2]
  9228  0144D0  0EE6               	movlw	-26
  9229  0144D2  006F FF8F FFE6     	movff	plusw1,postinc1
  9230  0144D8  006F FF8F FFE6     	movff	plusw1,postinc1
  9231  0144DE  ECAA  F0B3         	call	_pad	;wreg free
  9232                           
  9233                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  9234  0144E2  0EE1               	movlw	225
  9235  0144E4  26E1               	addwf	fsr1l,f,c
  9236  0144E6  0EFF               	movlw	255
  9237  0144E8  22E2               	addwfc	fsr1h,f,c
  9238  0144EA  0012               	return		;funcret
  9239  0144EC                     __end_of_xtoa:
  9240                           	opt callstack 0
  9241                           
  9242 ;; *************** function _toupper *****************
  9243 ;; Defined at:
  9244 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  9245 ;; Parameters:    Size  Location     Type
  9246 ;;  c               2  [STACK] int 
  9247 ;; Auto vars:     Size  Location     Type
  9248 ;;		None
  9249 ;; Return value:  Size  Location     Type
  9250 ;;                  2  [STACK] int 
  9251 ;; Registers used:
  9252 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  9253 ;; Tracked objects:
  9254 ;;		On entry : 0/2
  9255 ;;		On exit  : 0/0
  9256 ;;		Unchanged: 0/0
  9257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9262 ;;Total ram usage:        0 bytes
  9263 ;; Hardware stack levels used:    1
  9264 ;; Hardware stack levels required when called:    7
  9265 ;; This function calls:
  9266 ;;		_islower
  9267 ;; This function is called by:
  9268 ;;		_xtoa
  9269 ;; This function uses a reentrant model
  9270 ;;
  9271                           
  9272                           	psect	text39
  9273  017390                     __ptext39:
  9274                           	opt callstack 0
  9275  017390                     _toupper:
  9276                           	opt callstack 0
  9277                           
  9278                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9279  017390  52E6               	movf	postinc1,f,c
  9280  017392  52E6               	movf	postinc1,f,c
  9281                           
  9282                           ;stkvar	_c @ sp[(-2)+-2]
  9283                           
  9284                           ;incstack = 0
  9285  017394  0EFC               	movlw	-4
  9286  017396  50E3               	movf	plusw1,w,c
  9287  017398  0F9F               	addlw	159
  9288  01739A  6E3C               	movwf	(btemp+10)^0,c
  9289  01739C  0EFD               	movlw	-3
  9290  01739E  006F FF8C  F03D    	movff	plusw1,btemp+11
  9291  0173A4  0EFF               	movlw	255
  9292  0173A6  223D               	addwfc	(btemp+11)^0,f,c
  9293  0173A8  503D               	movf	(btemp+11)^0,w,c
  9294  0173AA  E106               	bnz	u9620
  9295  0173AC  0E1A               	movlw	26
  9296  0173AE  5C3C               	subwf	(btemp+10)^0,w,c
  9297  0173B0  B0D8               	btfsc	status,0,c
  9298  0173B2  D002               	goto	u9620
  9299  0173B4  0E01               	movlw	1
  9300  0173B6  D001               	goto	u9630
  9301  0173B8                     u9620:
  9302  0173B8  0E00               	movlw	0
  9303  0173BA                     u9630:
  9304  0173BA  6E3C               	movwf	(btemp+10)^0,c
  9305  0173BC  6A3D               	clrf	(btemp+11)^0,c
  9306                           
  9307                           ;stkvar	_toupper$5071 @ sp[(-2)+0]
  9308  0173BE  0EFE               	movlw	-2
  9309  0173C0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9310  0173C6  0EFF               	movlw	-1
  9311  0173C8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9312                           
  9313                           ;stkvar	_toupper$5071 @ sp[(-2)+0]
  9314  0173CE  0EFE               	movlw	-2
  9315  0173D0  006F FF8C  F032    	movff	plusw1,btemp
  9316  0173D6  0EFF               	movlw	-1
  9317  0173D8  50E3               	movf	plusw1,w,c
  9318  0173DA  1032               	iorwf	btemp^0,w,c
  9319  0173DC  B4D8               	btfsc	status,2,c
  9320  0173DE  D00D               	goto	l9744
  9321                           
  9322                           ;stkvar	_c @ sp[(-2)+-2]
  9323  0173E0  0EFC               	movlw	-4
  9324  0173E2  006F FF8C  F032    	movff	plusw1,btemp
  9325  0173E8  0EFD               	movlw	-3
  9326  0173EA  006F FF8C  F033    	movff	plusw1,btemp+1
  9327  0173F0  0E5F               	movlw	95
  9328  0173F2  1632               	andwf	btemp^0,f,c
  9329  0173F4  0E00               	movlw	0
  9330  0173F6  1633               	andwf	(btemp+1)^0,f,c
  9331  0173F8  D008               	goto	l2907
  9332  0173FA                     l9744:
  9333                           
  9334                           ;stkvar	_c @ sp[(-2)+-2]
  9335  0173FA  0EFC               	movlw	-4
  9336  0173FC  006F FF8C  F032    	movff	plusw1,btemp
  9337  017402  0EFD               	movlw	-3
  9338  017404  006F FF8C  F033    	movff	plusw1,btemp+1
  9339  01740A                     l2907:
  9340                           
  9341                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9342  01740A  52E5               	movf	postdec1,f,c
  9343  01740C  52E5               	movf	postdec1,f,c
  9344  01740E  52E5               	movf	postdec1,f,c
  9345  017410  52E5               	movf	postdec1,f,c
  9346  017412  0012               	return		;funcret
  9347  017414                     __end_of_toupper:
  9348                           	opt callstack 0
  9349                           
  9350 ;; *************** function _islower *****************
  9351 ;; Defined at:
  9352 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9353 ;; Parameters:    Size  Location     Type
  9354 ;;  c               2  [STACK] int 
  9355 ;; Auto vars:     Size  Location     Type
  9356 ;;		None
  9357 ;; Return value:  Size  Location     Type
  9358 ;;                  2  [STACK] int 
  9359 ;; Registers used:
  9360 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9361 ;; Tracked objects:
  9362 ;;		On entry : 0/0
  9363 ;;		On exit  : 0/0
  9364 ;;		Unchanged: 0/0
  9365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9370 ;;Total ram usage:        0 bytes
  9371 ;; Hardware stack levels used:    1
  9372 ;; Hardware stack levels required when called:    6
  9373 ;; This function calls:
  9374 ;;		Nothing
  9375 ;; This function is called by:
  9376 ;;		_toupper
  9377 ;; This function uses a reentrant model
  9378 ;;
  9379                           
  9380                           	psect	text40
  9381  017EC2                     __ptext40:
  9382                           	opt callstack 0
  9383  017EC2                     _islower:
  9384                           	opt callstack 16
  9385                           
  9386                           ;stkvar	_c @ sp[(0)+-2]
  9387                           
  9388                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9389                           ;incstack = 0
  9390  017EC2  0EFE               	movlw	-2
  9391  017EC4  50E3               	movf	plusw1,w,c
  9392  017EC6  0F9F               	addlw	159
  9393  017EC8  6E3C               	movwf	(btemp+10)^0,c
  9394  017ECA  0EFF               	movlw	-1
  9395  017ECC  006F FF8C  F03D    	movff	plusw1,btemp+11
  9396  017ED2  0EFF               	movlw	255
  9397  017ED4  223D               	addwfc	(btemp+11)^0,f,c
  9398  017ED6  503D               	movf	(btemp+11)^0,w,c
  9399  017ED8  E106               	bnz	u9310
  9400  017EDA  0E1A               	movlw	26
  9401  017EDC  5C3C               	subwf	(btemp+10)^0,w,c
  9402  017EDE  B0D8               	btfsc	status,0,c
  9403  017EE0  D002               	goto	u9310
  9404  017EE2  0E01               	movlw	1
  9405  017EE4  D001               	goto	u9320
  9406  017EE6                     u9310:
  9407  017EE6  0E00               	movlw	0
  9408  017EE8                     u9320:
  9409  017EE8  6E32               	movwf	btemp^0,c
  9410  017EEA  6A33               	clrf	(btemp+1)^0,c
  9411                           
  9412                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9413  017EEC  52E5               	movf	postdec1,f,c
  9414  017EEE  52E5               	movf	postdec1,f,c
  9415  017EF0  0012               	return		;funcret
  9416  017EF2                     __end_of_islower:
  9417                           	opt callstack 0
  9418                           
  9419 ;; *************** function _isalpha *****************
  9420 ;; Defined at:
  9421 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9422 ;; Parameters:    Size  Location     Type
  9423 ;;  c               2  [STACK] int 
  9424 ;; Auto vars:     Size  Location     Type
  9425 ;;		None
  9426 ;; Return value:  Size  Location     Type
  9427 ;;                  2  [STACK] int 
  9428 ;; Registers used:
  9429 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9430 ;; Tracked objects:
  9431 ;;		On entry : 0/0
  9432 ;;		On exit  : 0/0
  9433 ;;		Unchanged: 0/0
  9434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9439 ;;Total ram usage:        0 bytes
  9440 ;; Hardware stack levels used:    1
  9441 ;; Hardware stack levels required when called:    6
  9442 ;; This function calls:
  9443 ;;		Nothing
  9444 ;; This function is called by:
  9445 ;;		_xtoa
  9446 ;; This function uses a reentrant model
  9447 ;;
  9448                           
  9449                           	psect	text41
  9450  017C74                     __ptext41:
  9451                           	opt callstack 0
  9452  017C74                     _isalpha:
  9453                           	opt callstack 17
  9454                           
  9455                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9456                           ;incstack = 0
  9457  017C74  0E9F               	movlw	159
  9458  017C76  6E3C               	movwf	(btemp+10)^0,c
  9459  017C78  0EFF               	movlw	255
  9460  017C7A  6E3D               	movwf	(btemp+11)^0,c
  9461                           
  9462                           ;stkvar	_c @ sp[(0)+-2]
  9463  017C7C  0EFE               	movlw	-2
  9464  017C7E  006F FF8C  F03A    	movff	plusw1,btemp+8
  9465  017C84  0EFF               	movlw	-1
  9466  017C86  006F FF8C  F03B    	movff	plusw1,btemp+9
  9467  017C8C  0E20               	movlw	32
  9468  017C8E  123A               	iorwf	(btemp+8)^0,f,c
  9469  017C90  0E00               	movlw	0
  9470  017C92  123B               	iorwf	(btemp+9)^0,f,c
  9471  017C94  503C               	movf	(btemp+10)^0,w,c
  9472  017C96  263A               	addwf	(btemp+8)^0,f,c
  9473  017C98  503D               	movf	(btemp+11)^0,w,c
  9474  017C9A  223B               	addwfc	(btemp+9)^0,f,c
  9475  017C9C  503B               	movf	(btemp+9)^0,w,c
  9476  017C9E  E106               	bnz	u9600
  9477  017CA0  0E1A               	movlw	26
  9478  017CA2  5C3A               	subwf	(btemp+8)^0,w,c
  9479  017CA4  B0D8               	btfsc	status,0,c
  9480  017CA6  D002               	goto	u9600
  9481  017CA8  0E01               	movlw	1
  9482  017CAA  D001               	goto	u9610
  9483  017CAC                     u9600:
  9484  017CAC  0E00               	movlw	0
  9485  017CAE                     u9610:
  9486  017CAE  6E32               	movwf	btemp^0,c
  9487  017CB0  6A33               	clrf	(btemp+1)^0,c
  9488                           
  9489                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9490  017CB2  52E5               	movf	postdec1,f,c
  9491  017CB4  52E5               	movf	postdec1,f,c
  9492  017CB6  0012               	return		;funcret
  9493  017CB8                     __end_of_isalpha:
  9494                           	opt callstack 0
  9495                           
  9496 ;; *************** function _strncmp *****************
  9497 ;; Defined at:
  9498 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;  _l              2  [STACK] PTR const unsigned char 
  9501 ;;		 -> ct(3), 
  9502 ;;  _r              2  [STACK] PTR const unsigned char 
  9503 ;;		 -> STR_44(3), 
  9504 ;;  n               2  [STACK] unsigned int 
  9505 ;; Auto vars:     Size  Location     Type
  9506 ;;  r               2  [STACK] PTR const unsigned char 
  9507 ;;		 -> STR_44(3), 
  9508 ;;  l               2  [STACK] PTR const unsigned char 
  9509 ;;		 -> ct(3), 
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  2  [STACK] int 
  9512 ;; Registers used:
  9513 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/5
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9523 ;;Total ram usage:        0 bytes
  9524 ;; Hardware stack levels used:    1
  9525 ;; Hardware stack levels required when called:    6
  9526 ;; This function calls:
  9527 ;;		Nothing
  9528 ;; This function is called by:
  9529 ;;		_vfpfcnvrt
  9530 ;; This function uses a reentrant model
  9531 ;;
  9532                           
  9533                           	psect	text42
  9534  015962                     __ptext42:
  9535                           	opt callstack 0
  9536  015962                     _strncmp:
  9537                           	opt callstack 0
  9538                           
  9539                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9540  015962  52E6               	movf	postinc1,f,c
  9541  015964  52E6               	movf	postinc1,f,c
  9542  015966  52E6               	movf	postinc1,f,c
  9543  015968  52E6               	movf	postinc1,f,c
  9544                           
  9545                           ;stkvar	__l @ sp[(-4)+-2]
  9546                           
  9547                           ;incstack = 0
  9548  01596A  0EFA               	movlw	-6
  9549  01596C  006F FF8C  F03C    	movff	plusw1,btemp+10
  9550  015972  0EFB               	movlw	-5
  9551  015974  006F FF8C  F03D    	movff	plusw1,btemp+11
  9552                           
  9553                           ;stkvar	_l @ sp[(-4)+2]
  9554  01597A  0EFF               	movlw	-1
  9555  01597C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9556  015982  0EFE               	movlw	-2
  9557  015984  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9558                           
  9559                           ;stkvar	__r @ sp[(-4)+-4]
  9560  01598A  0EF8               	movlw	-8
  9561  01598C  006F FF8C  F03C    	movff	plusw1,btemp+10
  9562  015992  0EF9               	movlw	-7
  9563  015994  006F FF8C  F03D    	movff	plusw1,btemp+11
  9564                           
  9565                           ;stkvar	_r @ sp[(-4)+0]
  9566  01599A  0EFD               	movlw	-3
  9567  01599C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9568  0159A2  0EFC               	movlw	-4
  9569  0159A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9570                           
  9571                           ;stkvar	_n @ sp[(-4)+-6]
  9572  0159AA  0EF6               	movlw	-10
  9573  0159AC  006F FF8C  F032    	movff	plusw1,btemp
  9574  0159B2  0E01               	movlw	1
  9575  0159B4  5E32               	subwf	btemp^0,f,c
  9576  0159B6  0EF6               	movlw	-10
  9577  0159B8  0060  F0CB  FFE3   	movff	btemp,plusw1
  9578  0159BE  0EF7               	movlw	-9
  9579  0159C0  006F FF8C  F032    	movff	plusw1,btemp
  9580  0159C6  0E00               	movlw	0
  9581  0159C8  5A32               	subwfb	btemp^0,f,c
  9582  0159CA  0EF7               	movlw	-9
  9583  0159CC  0060  F0CB  FFE3   	movff	btemp,plusw1
  9584  0159D2  0EF6               	movlw	-10
  9585  0159D4  28E3               	incf	plusw1,w,c
  9586  0159D6  E13F               	bnz	l10902
  9587  0159D8  0EF7               	movlw	-9
  9588  0159DA  28E3               	incf	plusw1,w,c
  9589  0159DC  A4D8               	btfss	status,2,c
  9590  0159DE  D03B               	goto	l10902
  9591  0159E0  0E00               	movlw	0
  9592  0159E2  6E32               	movwf	btemp^0,c
  9593  0159E4  0E00               	movlw	0
  9594  0159E6  6E33               	movwf	(btemp+1)^0,c
  9595  0159E8  D09B               	goto	l2879
  9596  0159EA                     l10900:
  9597                           
  9598                           ;stkvar	_l @ sp[(-4)+2]
  9599  0159EA  0EFE               	movlw	-2
  9600  0159EC  50E3               	movf	plusw1,w,c
  9601  0159EE  0F01               	addlw	1
  9602  0159F0  6E32               	movwf	btemp^0,c
  9603  0159F2  0EFE               	movlw	-2
  9604  0159F4  0060  F0CB  FFE3   	movff	btemp,plusw1
  9605  0159FA  6A32               	clrf	btemp^0,c
  9606  0159FC  0EFF               	movlw	-1
  9607  0159FE  50E3               	movf	plusw1,w,c
  9608  015A00  2032               	addwfc	btemp^0,w,c
  9609  015A02  6E32               	movwf	btemp^0,c
  9610  015A04  0EFF               	movlw	-1
  9611  015A06  0060  F0CB  FFE3   	movff	btemp,plusw1
  9612                           
  9613                           ;stkvar	_r @ sp[(-4)+0]
  9614  015A0C  0EFC               	movlw	-4
  9615  015A0E  50E3               	movf	plusw1,w,c
  9616  015A10  0F01               	addlw	1
  9617  015A12  6E32               	movwf	btemp^0,c
  9618  015A14  0EFC               	movlw	-4
  9619  015A16  0060  F0CB  FFE3   	movff	btemp,plusw1
  9620  015A1C  6A32               	clrf	btemp^0,c
  9621  015A1E  0EFD               	movlw	-3
  9622  015A20  50E3               	movf	plusw1,w,c
  9623  015A22  2032               	addwfc	btemp^0,w,c
  9624  015A24  6E32               	movwf	btemp^0,c
  9625  015A26  0EFD               	movlw	-3
  9626  015A28  0060  F0CB  FFE3   	movff	btemp,plusw1
  9627                           
  9628                           ;stkvar	_n @ sp[(-4)+-6]
  9629  015A2E  0EF6               	movlw	-10
  9630  015A30  006F FF8C  F032    	movff	plusw1,btemp
  9631  015A36  0E01               	movlw	1
  9632  015A38  5E32               	subwf	btemp^0,f,c
  9633  015A3A  0EF6               	movlw	-10
  9634  015A3C  0060  F0CB  FFE3   	movff	btemp,plusw1
  9635  015A42  0EF7               	movlw	-9
  9636  015A44  006F FF8C  F032    	movff	plusw1,btemp
  9637  015A4A  0E00               	movlw	0
  9638  015A4C  5A32               	subwfb	btemp^0,f,c
  9639  015A4E  0EF7               	movlw	-9
  9640  015A50  0060  F0CB  FFE3   	movff	btemp,plusw1
  9641  015A56                     l10902:
  9642                           
  9643                           ;stkvar	_l @ sp[(-4)+2]
  9644  015A56  0EFE               	movlw	-2
  9645  015A58  006F FF8F FFD9     	movff	plusw1,fsr2l
  9646  015A5E  0EFF               	movlw	-1
  9647  015A60  006F FF8F FFDA     	movff	plusw1,fsr2h
  9648  015A66  50DF               	movf	indf2,w,c
  9649  015A68  B4D8               	btfsc	status,2,c
  9650  015A6A  D03B               	goto	u11800
  9651                           
  9652                           ;stkvar	_r @ sp[(-4)+0]
  9653  015A6C  50E1               	movf	fsr1l,w,c
  9654  015A6E  0FFC               	addlw	-4
  9655  015A70  6ED9               	movwf	fsr2l,c
  9656  015A72  50E2               	movf	fsr1h,w,c
  9657  015A74  6EDA               	movwf	fsr2h,c
  9658  015A76  0EFF               	movlw	255
  9659  015A78  22DA               	addwfc	fsr2h,f,c
  9660  015A7A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9661  015A80  006F FF77 FFF7     	movff	postdec2,tblptrh
  9662  015A86                     	if	0	;tblptru may be non-zero
  9663  015A86                     	endif
  9664  015A86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9665  015A86  0E00               	movlw	low (__mediumconst shr (0+16))
  9666  015A88  6EF8               	movwf	tblptru,c
  9667  015A8A                     	endif
  9668  015A8A  0008               	tblrd		*
  9669  015A8C  50F5               	movf	tablat,w,c
  9670  015A8E  0900               	iorlw	0
  9671  015A90  B4D8               	btfsc	status,2,c
  9672  015A92  D027               	goto	u11800
  9673                           
  9674                           ;stkvar	_n @ sp[(-4)+-6]
  9675  015A94  0EF6               	movlw	-10
  9676  015A96  006F FF8C  F032    	movff	plusw1,btemp
  9677  015A9C  0EF7               	movlw	-9
  9678  015A9E  50E3               	movf	plusw1,w,c
  9679  015AA0  1032               	iorwf	btemp^0,w,c
  9680  015AA2  B4D8               	btfsc	status,2,c
  9681  015AA4  D01E               	goto	u11800
  9682                           
  9683                           ;stkvar	_l @ sp[(-4)+2]
  9684  015AA6  0EFE               	movlw	-2
  9685  015AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9686  015AAE  0EFF               	movlw	-1
  9687  015AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9688  015AB6  50DF               	movf	indf2,w,c
  9689  015AB8  6E3D               	movwf	(btemp+11)^0,c
  9690                           
  9691                           ;stkvar	_r @ sp[(-4)+0]
  9692  015ABA  50E1               	movf	fsr1l,w,c
  9693  015ABC  0FFC               	addlw	-4
  9694  015ABE  6ED9               	movwf	fsr2l,c
  9695  015AC0  50E2               	movf	fsr1h,w,c
  9696  015AC2  6EDA               	movwf	fsr2h,c
  9697  015AC4  0EFF               	movlw	255
  9698  015AC6  22DA               	addwfc	fsr2h,f,c
  9699  015AC8  006F FF7B FFF6     	movff	postinc2,tblptrl
  9700  015ACE  006F FF77 FFF7     	movff	postdec2,tblptrh
  9701  015AD4                     	if	0	;tblptru may be non-zero
  9702  015AD4                     	endif
  9703  015AD4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9704  015AD4  0E00               	movlw	low (__mediumconst shr (0+16))
  9705  015AD6  6EF8               	movwf	tblptru,c
  9706  015AD8                     	endif
  9707  015AD8  0008               	tblrd		*
  9708  015ADA  50F5               	movf	tablat,w,c
  9709  015ADC  183D               	xorwf	(btemp+11)^0,w,c
  9710  015ADE  B4D8               	btfsc	status,2,c
  9711  015AE0  D784               	goto	l10900
  9712  015AE2                     u11800:
  9713                           
  9714                           ;stkvar	_l @ sp[(-4)+2]
  9715  015AE2  0EFE               	movlw	-2
  9716  015AE4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9717  015AEA  0EFF               	movlw	-1
  9718  015AEC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9719  015AF2  50DF               	movf	indf2,w,c
  9720  015AF4  6E32               	movwf	btemp^0,c
  9721  015AF6  6A33               	clrf	(btemp+1)^0,c
  9722                           
  9723                           ;stkvar	_r @ sp[(-4)+0]
  9724  015AF8  50E1               	movf	fsr1l,w,c
  9725  015AFA  0FFC               	addlw	-4
  9726  015AFC  6ED9               	movwf	fsr2l,c
  9727  015AFE  50E2               	movf	fsr1h,w,c
  9728  015B00  6EDA               	movwf	fsr2h,c
  9729  015B02  0EFF               	movlw	255
  9730  015B04  22DA               	addwfc	fsr2h,f,c
  9731  015B06  006F FF7B FFF6     	movff	postinc2,tblptrl
  9732  015B0C  006F FF77 FFF7     	movff	postdec2,tblptrh
  9733  015B12                     	if	0	;tblptru may be non-zero
  9734  015B12                     	endif
  9735  015B12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9736  015B12  0E00               	movlw	low (__mediumconst shr (0+16))
  9737  015B14  6EF8               	movwf	tblptru,c
  9738  015B16                     	endif
  9739  015B16  0008               	tblrd		*
  9740  015B18  50F5               	movf	tablat,w,c
  9741  015B1A  5E32               	subwf	btemp^0,f,c
  9742  015B1C  0E00               	movlw	0
  9743  015B1E  5A33               	subwfb	(btemp+1)^0,f,c
  9744  015B20                     l2879:
  9745                           
  9746                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
  9747  015B20  0EF6               	movlw	246
  9748  015B22  26E1               	addwf	fsr1l,f,c
  9749  015B24  0EFF               	movlw	255
  9750  015B26  22E2               	addwfc	fsr1h,f,c
  9751  015B28  0012               	return		;funcret
  9752  015B2A                     __end_of_strncmp:
  9753                           	opt callstack 0
  9754                           
  9755 ;; *************** function _stoa *****************
  9756 ;; Defined at:
  9757 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9758 ;; Parameters:    Size  Location     Type
  9759 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9760 ;;		 -> f(6), NULL(0), 
  9761 ;;  s               2  [STACK] PTR unsigned char 
  9762 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  9763 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  9764 ;;		 -> STR_3(5), V(187), 
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;  nuls            7  [STACK] unsigned char [7]
  9767 ;;  l               2  [STACK] int 
  9768 ;;  p               2  [STACK] int 
  9769 ;;  cp              2  [STACK] PTR unsigned char 
  9770 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_16(9), 
  9771 ;;		 -> STR_15(12), D.lcd(216), D(218), T(144), 
  9772 ;;		 -> STR_7(5), STR_3(5), V(187), 
  9773 ;;  w               2  [STACK] int 
  9774 ;;  i               2  [STACK] int 
  9775 ;; Return value:  Size  Location     Type
  9776 ;;                  2  [STACK] int 
  9777 ;; Registers used:
  9778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9779 ;; Tracked objects:
  9780 ;;		On entry : 0/5
  9781 ;;		On exit  : 0/0
  9782 ;;		Unchanged: 0/0
  9783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9788 ;;Total ram usage:        0 bytes
  9789 ;; Hardware stack levels used:    1
  9790 ;; Hardware stack levels required when called:    9
  9791 ;; This function calls:
  9792 ;;		_fputc
  9793 ;;		_strlen
  9794 ;; This function is called by:
  9795 ;;		_vfpfcnvrt
  9796 ;; This function uses a reentrant model
  9797 ;;
  9798                           
  9799                           	psect	text43
  9800  014B44                     __ptext43:
  9801                           	opt callstack 0
  9802  014B44                     _stoa:
  9803                           	opt callstack 0
  9804                           
  9805                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9806  014B44  0E11               	movlw	17
  9807  014B46  26E1               	addwf	fsr1l,f,c
  9808  014B48  0E00               	movlw	0
  9809  014B4A  22E2               	addwfc	fsr1h,f,c
  9810                           
  9811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  9812                           
  9813                           ;incstack = 0
  9814  014B4C  EE20  F0EF         	lfsr	2,stoa@F1166
  9815                           
  9816                           ;stkvar	_nuls @ sp[(-17)+0]
  9817  014B50  0E07               	movlw	7
  9818  014B52  6E32               	movwf	btemp^0,c
  9819  014B54  0EEF               	movlw	-17
  9820  014B56                     us1141999:
  9821  014B56  006F FF7B FFE3     	movff	postinc2,plusw1
  9822  014B5C  28E8               	incf	wreg,w,c
  9823  014B5E  2E32               	decfsz	btemp^0,f,c
  9824  014B60  D7FA               	bra	us1141999
  9825                           
  9826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  9827                           ;stkvar	_s @ sp[(-17)+-4]
  9828  014B62  0EEB               	movlw	-21
  9829  014B64  006F FF8C  F03C    	movff	plusw1,btemp+10
  9830  014B6A  0EEC               	movlw	-20
  9831  014B6C  006F FF8C  F03D    	movff	plusw1,btemp+11
  9832                           
  9833                           ;stkvar	_cp @ sp[(-17)+11]
  9834  014B72  0EFB               	movlw	-5
  9835  014B74  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9836  014B7A  0EFA               	movlw	-6
  9837  014B7C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9838                           
  9839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  9840                           ;stkvar	_cp @ sp[(-17)+11]
  9841  014B82  0EFA               	movlw	-6
  9842  014B84  006F FF8C  F032    	movff	plusw1,btemp
  9843  014B8A  0EFB               	movlw	-5
  9844  014B8C  50E3               	movf	plusw1,w,c
  9845  014B8E  1032               	iorwf	btemp^0,w,c
  9846  014B90  A4D8               	btfss	status,2,c
  9847  014B92  D00E               	goto	l10730
  9848                           
  9849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  9850                           ;stkvar	_nuls @ sp[(-17)+0]
  9851  014B94  0EEF               	movlw	239
  9852  014B96  24E1               	addwf	fsr1l,w,c
  9853  014B98  6E3C               	movwf	(btemp+10)^0,c
  9854  014B9A  0EFF               	movlw	255
  9855  014B9C  20E2               	addwfc	fsr1h,w,c
  9856  014B9E  6E3D               	movwf	(btemp+11)^0,c
  9857                           
  9858                           ;stkvar	_cp @ sp[(-17)+11]
  9859  014BA0  0EFB               	movlw	-5
  9860  014BA2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
  9861  014BA8  0EFA               	movlw	-6
  9862  014BAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
  9863  014BB0                     l10730:
  9864                           
  9865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  9866                           ;stkvar	_cp @ sp[(-17)+11]
  9867  014BB0  0EFA               	movlw	-6
  9868  014BB2  006F FF8F FFE6     	movff	plusw1,postinc1
  9869  014BB8  006F FF8F FFE6     	movff	plusw1,postinc1
  9870  014BBE  EC55  F0B8         	call	_strlen	;wreg free
  9871                           
  9872                           ;stkvar	_l @ sp[(-17)+7]
  9873  014BC2  0EF6               	movlw	-10
  9874  014BC4  0060  F0CB  FFE3   	movff	btemp,plusw1
  9875  014BCA  0EF7               	movlw	-9
  9876  014BCC  0060  F0CF  FFE3   	movff	btemp+1,plusw1
  9877                           
  9878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  9879                           ;stkvar	_p @ sp[(-17)+9]
  9880  014BD2  0EF8               	movlw	-8
  9881  014BD4  0060  F077  FFE3   	movff	_prec,plusw1
  9882  014BDA  0EF9               	movlw	-7
  9883  014BDC  0060  F07B  FFE3   	movff	_prec+1,plusw1
  9884                           
  9885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  9886                           ;stkvar	_p @ sp[(-17)+9]
  9887  014BE2  0EF9               	movlw	-7
  9888  014BE4  BEE3               	btfsc	plusw1,7,c
  9889  014BE6  D023               	goto	l1953
  9890                           
  9891                           ;stkvar	_l @ sp[(-17)+7]
  9892                           ;stkvar	_p @ sp[(-17)+9]
  9893  014BE8  50E1               	movf	fsr1l,w,c
  9894  014BEA  0FF8               	addlw	-8
  9895  014BEC  6ED9               	movwf	fsr2l,c
  9896  014BEE  50E2               	movf	fsr1h,w,c
  9897  014BF0  6EDA               	movwf	fsr2h,c
  9898  014BF2  0EFF               	movlw	255
  9899  014BF4  22DA               	addwfc	fsr2h,f,c
  9900  014BF6  0EF6               	movlw	-10
  9901  014BF8  50E3               	movf	plusw1,w,c
  9902  014BFA  5CDE               	subwf	postinc2,w,c
  9903  014BFC  50DE               	movf	postinc2,w,c
  9904  014BFE  0A80               	xorlw	128
  9905  014C00  6E32               	movwf	btemp^0,c
  9906  014C02  0EF7               	movlw	-9
  9907  014C04  50E3               	movf	plusw1,w,c
  9908  014C06  0A80               	xorlw	128
  9909  014C08  5832               	subwfb	btemp^0,w,c
  9910  014C0A  B0D8               	btfsc	status,0,c
  9911  014C0C  D010               	goto	l1953
  9912                           
  9913                           ;stkvar	_p @ sp[(-17)+9]
  9914                           ;stkvar	_l @ sp[(-17)+7]
  9915  014C0E  0EF8               	movlw	-8
  9916  014C10  006F FF8C  F032    	movff	plusw1,btemp
  9917  014C16  0EF6               	movlw	-10
  9918  014C18  0060  F0CB  FFE3   	movff	btemp,plusw1
  9919  014C1E  0EF9               	movlw	-7
  9920  014C20  006F FF8C  F032    	movff	plusw1,btemp
  9921  014C26  0EF7               	movlw	-9
  9922  014C28  0060  F0CB  FFE3   	movff	btemp,plusw1
  9923  014C2E                     l1953:
  9924                           
  9925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
  9926                           ;stkvar	_l @ sp[(-17)+7]
  9927                           ;stkvar	_p @ sp[(-17)+9]
  9928  014C2E  0EF6               	movlw	-10
  9929  014C30  006F FF8C  F032    	movff	plusw1,btemp
  9930  014C36  0EF8               	movlw	-8
  9931  014C38  0060  F0CB  FFE3   	movff	btemp,plusw1
  9932  014C3E  0EF7               	movlw	-9
  9933  014C40  006F FF8C  F032    	movff	plusw1,btemp
  9934  014C46  0EF9               	movlw	-7
  9935  014C48  0060  F0CB  FFE3   	movff	btemp,plusw1
  9936                           
  9937                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
  9938                           ;stkvar	_w @ sp[(-17)+13]
  9939  014C4E  0EFC               	movlw	-4
  9940  014C50  0060  F06F  FFE3   	movff	_width,plusw1
  9941  014C56  0EFD               	movlw	-3
  9942  014C58  0060  F073  FFE3   	movff	_width+1,plusw1
  9943                           
  9944                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  9945  014C5E  A01F               	btfss	_flags^0,0,c
  9946  014C60  D01F               	goto	l10750
  9947  014C62  D031               	goto	u11460
  9948  014C64                     l10746:
  9949                           
  9950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  9951                           ;stkvar	_fp @ sp[(-17)+-2]
  9952  014C64  0EED               	movlw	-19
  9953  014C66  006F FF8F FFE6     	movff	plusw1,postinc1
  9954  014C6C  006F FF8F FFE6     	movff	plusw1,postinc1
  9955  014C72  0E20               	movlw	32
  9956  014C74  6EE6               	movwf	postinc1,c
  9957  014C76  0E00               	movlw	0
  9958  014C78  6EE6               	movwf	postinc1,c
  9959  014C7A  EC8C  F0B2         	call	_fputc	;wreg free
  9960                           
  9961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
  9962                           ;stkvar	_l @ sp[(-17)+7]
  9963  014C7E  0EF6               	movlw	-10
  9964  014C80  50E3               	movf	plusw1,w,c
  9965  014C82  0F01               	addlw	1
  9966  014C84  6E32               	movwf	btemp^0,c
  9967  014C86  0EF6               	movlw	-10
  9968  014C88  0060  F0CB  FFE3   	movff	btemp,plusw1
  9969  014C8E  6A32               	clrf	btemp^0,c
  9970  014C90  0EF7               	movlw	-9
  9971  014C92  50E3               	movf	plusw1,w,c
  9972  014C94  2032               	addwfc	btemp^0,w,c
  9973  014C96  6E32               	movwf	btemp^0,c
  9974  014C98  0EF7               	movlw	-9
  9975  014C9A  0060  F0CB  FFE3   	movff	btemp,plusw1
  9976  014CA0                     l10750:
  9977                           
  9978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  9979                           ;stkvar	_w @ sp[(-17)+13]
  9980                           ;stkvar	_l @ sp[(-17)+7]
  9981  014CA0  50E1               	movf	fsr1l,w,c
  9982  014CA2  0FF6               	addlw	-10
  9983  014CA4  6ED9               	movwf	fsr2l,c
  9984  014CA6  50E2               	movf	fsr1h,w,c
  9985  014CA8  6EDA               	movwf	fsr2h,c
  9986  014CAA  0EFF               	movlw	255
  9987  014CAC  22DA               	addwfc	fsr2h,f,c
  9988  014CAE  0EFC               	movlw	-4
  9989  014CB0  50E3               	movf	plusw1,w,c
  9990  014CB2  5CDE               	subwf	postinc2,w,c
  9991  014CB4  50DE               	movf	postinc2,w,c
  9992  014CB6  0A80               	xorlw	128
  9993  014CB8  6E32               	movwf	btemp^0,c
  9994  014CBA  0EFD               	movlw	-3
  9995  014CBC  50E3               	movf	plusw1,w,c
  9996  014CBE  0A80               	xorlw	128
  9997  014CC0  5832               	subwfb	btemp^0,w,c
  9998  014CC2  A0D8               	btfss	status,0,c
  9999  014CC4  D7CF               	goto	l10746
 10000  014CC6                     u11460:
 10001                           
 10002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10003                           ;stkvar	_i @ sp[(-17)+15]
 10004  014CC6  0EFE               	movlw	-2
 10005  014CC8  6AE3               	clrf	plusw1,c
 10006  014CCA  0EFF               	movlw	-1
 10007  014CCC  6AE3               	clrf	plusw1,c
 10008                           
 10009                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10010  014CCE  D045               	goto	l10760
 10011  014CD0                     l10754:
 10012                           
 10013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10014                           ;stkvar	_fp @ sp[(-17)+-2]
 10015  014CD0  0EED               	movlw	-19
 10016  014CD2  006F FF8F FFE6     	movff	plusw1,postinc1
 10017  014CD8  006F FF8F FFE6     	movff	plusw1,postinc1
 10018                           
 10019                           ;stkvar	_cp @ sp[(-19)+11]
 10020  014CDE  0EF8               	movlw	-8
 10021  014CE0  006F FF8F FFF6     	movff	plusw1,tblptrl
 10022  014CE6  0EF9               	movlw	-7
 10023  014CE8  006F FF8F FFF7     	movff	plusw1,tblptrh
 10024  014CEE  0E00               	movlw	low (__mediumconst shr (0+16))
 10025  014CF0  6EF8               	movwf	tblptru,c
 10026  014CF2  0E1F               	movlw	(high __ramtop+-1)
 10027  014CF4  64F7               	cpfsgt	tblptrh,c
 10028  014CF6  D003               	bra	u11477
 10029  014CF8  0008               	tblrd		*
 10030  014CFA  50F5               	movf	tablat,w,c
 10031  014CFC  D007               	bra	u11470
 10032  014CFE                     u11477:
 10033  014CFE  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10034  014D04  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10035  014D0A  50EF               	movf	indf0,w,c
 10036  014D0C                     u11470:
 10037  014D0C  6EE6               	movwf	postinc1,c
 10038  014D0E  0E00               	movlw	0
 10039  014D10  6EE6               	movwf	postinc1,c
 10040  014D12  EC8C  F0B2         	call	_fputc	;wreg free
 10041                           
 10042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 10043                           ;stkvar	_cp @ sp[(-17)+11]
 10044  014D16  0EFA               	movlw	-6
 10045  014D18  50E3               	movf	plusw1,w,c
 10046  014D1A  0F01               	addlw	1
 10047  014D1C  6E32               	movwf	btemp^0,c
 10048  014D1E  0EFA               	movlw	-6
 10049  014D20  0060  F0CB  FFE3   	movff	btemp,plusw1
 10050  014D26  6A32               	clrf	btemp^0,c
 10051  014D28  0EFB               	movlw	-5
 10052  014D2A  50E3               	movf	plusw1,w,c
 10053  014D2C  2032               	addwfc	btemp^0,w,c
 10054  014D2E  6E32               	movwf	btemp^0,c
 10055  014D30  0EFB               	movlw	-5
 10056  014D32  0060  F0CB  FFE3   	movff	btemp,plusw1
 10057                           
 10058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 10059                           ;stkvar	_i @ sp[(-17)+15]
 10060  014D38  0EFE               	movlw	-2
 10061  014D3A  50E3               	movf	plusw1,w,c
 10062  014D3C  0F01               	addlw	1
 10063  014D3E  6E32               	movwf	btemp^0,c
 10064  014D40  0EFE               	movlw	-2
 10065  014D42  0060  F0CB  FFE3   	movff	btemp,plusw1
 10066  014D48  6A32               	clrf	btemp^0,c
 10067  014D4A  0EFF               	movlw	-1
 10068  014D4C  50E3               	movf	plusw1,w,c
 10069  014D4E  2032               	addwfc	btemp^0,w,c
 10070  014D50  6E32               	movwf	btemp^0,c
 10071  014D52  0EFF               	movlw	-1
 10072  014D54  0060  F0CB  FFE3   	movff	btemp,plusw1
 10073  014D5A                     l10760:
 10074                           
 10075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10076                           ;stkvar	_p @ sp[(-17)+9]
 10077                           ;stkvar	_i @ sp[(-17)+15]
 10078  014D5A  50E1               	movf	fsr1l,w,c
 10079  014D5C  0FFE               	addlw	-2
 10080  014D5E  6ED9               	movwf	fsr2l,c
 10081  014D60  50E2               	movf	fsr1h,w,c
 10082  014D62  6EDA               	movwf	fsr2h,c
 10083  014D64  0EFF               	movlw	255
 10084  014D66  22DA               	addwfc	fsr2h,f,c
 10085  014D68  0EF8               	movlw	-8
 10086  014D6A  50E3               	movf	plusw1,w,c
 10087  014D6C  5CDE               	subwf	postinc2,w,c
 10088  014D6E  50DE               	movf	postinc2,w,c
 10089  014D70  0A80               	xorlw	128
 10090  014D72  6E32               	movwf	btemp^0,c
 10091  014D74  0EF9               	movlw	-7
 10092  014D76  50E3               	movf	plusw1,w,c
 10093  014D78  0A80               	xorlw	128
 10094  014D7A  5832               	subwfb	btemp^0,w,c
 10095  014D7C  A0D8               	btfss	status,0,c
 10096  014D7E  D7A8               	goto	l10754
 10097                           
 10098                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 10099  014D80  B01F               	btfsc	_flags^0,0,c
 10100  014D82  D01F               	goto	l10768
 10101  014D84  D031               	goto	u11500
 10102  014D86                     l10764:
 10103                           
 10104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 10105                           ;stkvar	_fp @ sp[(-17)+-2]
 10106  014D86  0EED               	movlw	-19
 10107  014D88  006F FF8F FFE6     	movff	plusw1,postinc1
 10108  014D8E  006F FF8F FFE6     	movff	plusw1,postinc1
 10109  014D94  0E20               	movlw	32
 10110  014D96  6EE6               	movwf	postinc1,c
 10111  014D98  0E00               	movlw	0
 10112  014D9A  6EE6               	movwf	postinc1,c
 10113  014D9C  EC8C  F0B2         	call	_fputc	;wreg free
 10114                           
 10115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 10116                           ;stkvar	_l @ sp[(-17)+7]
 10117  014DA0  0EF6               	movlw	-10
 10118  014DA2  50E3               	movf	plusw1,w,c
 10119  014DA4  0F01               	addlw	1
 10120  014DA6  6E32               	movwf	btemp^0,c
 10121  014DA8  0EF6               	movlw	-10
 10122  014DAA  0060  F0CB  FFE3   	movff	btemp,plusw1
 10123  014DB0  6A32               	clrf	btemp^0,c
 10124  014DB2  0EF7               	movlw	-9
 10125  014DB4  50E3               	movf	plusw1,w,c
 10126  014DB6  2032               	addwfc	btemp^0,w,c
 10127  014DB8  6E32               	movwf	btemp^0,c
 10128  014DBA  0EF7               	movlw	-9
 10129  014DBC  0060  F0CB  FFE3   	movff	btemp,plusw1
 10130  014DC2                     l10768:
 10131                           
 10132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 10133                           ;stkvar	_w @ sp[(-17)+13]
 10134                           ;stkvar	_l @ sp[(-17)+7]
 10135  014DC2  50E1               	movf	fsr1l,w,c
 10136  014DC4  0FF6               	addlw	-10
 10137  014DC6  6ED9               	movwf	fsr2l,c
 10138  014DC8  50E2               	movf	fsr1h,w,c
 10139  014DCA  6EDA               	movwf	fsr2h,c
 10140  014DCC  0EFF               	movlw	255
 10141  014DCE  22DA               	addwfc	fsr2h,f,c
 10142  014DD0  0EFC               	movlw	-4
 10143  014DD2  50E3               	movf	plusw1,w,c
 10144  014DD4  5CDE               	subwf	postinc2,w,c
 10145  014DD6  50DE               	movf	postinc2,w,c
 10146  014DD8  0A80               	xorlw	128
 10147  014DDA  6E32               	movwf	btemp^0,c
 10148  014DDC  0EFD               	movlw	-3
 10149  014DDE  50E3               	movf	plusw1,w,c
 10150  014DE0  0A80               	xorlw	128
 10151  014DE2  5832               	subwfb	btemp^0,w,c
 10152  014DE4  A0D8               	btfss	status,0,c
 10153  014DE6  D7CF               	goto	l10764
 10154  014DE8                     u11500:
 10155                           
 10156                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 10157                           ;stkvar	_l @ sp[(-17)+7]
 10158  014DE8  0EF6               	movlw	-10
 10159  014DEA  006F FF8C  F032    	movff	plusw1,btemp
 10160  014DF0  0EF7               	movlw	-9
 10161  014DF2  006F FF8C  F033    	movff	plusw1,btemp+1
 10162                           
 10163                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10164  014DF8  0EEB               	movlw	235
 10165  014DFA  26E1               	addwf	fsr1l,f,c
 10166  014DFC  0EFF               	movlw	255
 10167  014DFE  22E2               	addwfc	fsr1h,f,c
 10168  014E00  0012               	return		;funcret
 10169  014E02                     __end_of_stoa:
 10170                           	opt callstack 0
 10171                           
 10172 ;; *************** function _efgtoa *****************
 10173 ;; Defined at:
 10174 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10175 ;; Parameters:    Size  Location     Type
 10176 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10177 ;;		 -> f(6), NULL(0), 
 10178 ;;  f               4  [STACK] PTR struct _IO_FILE
 10179 ;;  c               1  [STACK] unsigned char 
 10180 ;; Auto vars:     Size  Location     Type
 10181 ;;  u               4  [STACK] unsigned char 
 10182 ;;  g               4  [STACK] unsigned char 
 10183 ;;  l               4  [STACK] unsigned char 
 10184 ;;  h               4  [STACK] unsigned char 
 10185 ;;  ou              4  [STACK] unsigned char 
 10186 ;;  n               2  [STACK] int 
 10187 ;;  e               2  [STACK] int 
 10188 ;;  i               2  [STACK] int 
 10189 ;;  w               2  [STACK] int 
 10190 ;;  p               2  [STACK] int 
 10191 ;;  sign            2  [STACK] int 
 10192 ;;  d               2  [STACK] int 
 10193 ;;  ne              2  [STACK] int 
 10194 ;;  m               2  [STACK] int 
 10195 ;;  pp              2  [STACK] int 
 10196 ;;  t               2  [STACK] int 
 10197 ;;  mode            1  [STACK] unsigned char 
 10198 ;;  nmode           1  [STACK] unsigned char 
 10199 ;; Return value:  Size  Location     Type
 10200 ;;                  2  [STACK] int 
 10201 ;; Registers used:
 10202 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 10203 ;; Tracked objects:
 10204 ;;		On entry : 0/5
 10205 ;;		On exit  : 0/0
 10206 ;;		Unchanged: 0/0
 10207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10212 ;;Total ram usage:        0 bytes
 10213 ;; Hardware stack levels used:    1
 10214 ;; Hardware stack levels required when called:   11
 10215 ;; This function calls:
 10216 ;;		___awdiv
 10217 ;;		___awmod
 10218 ;;		___fladd
 10219 ;;		___fldiv
 10220 ;;		___fleq
 10221 ;;		___flge
 10222 ;;		___flmul
 10223 ;;		___flneg
 10224 ;;		___flsub
 10225 ;;		___fltol
 10226 ;;		___fpclassifyf
 10227 ;;		_floorf
 10228 ;;		_isupper
 10229 ;;		_pad
 10230 ;;		_strcpy
 10231 ;;		_tolower
 10232 ;; This function is called by:
 10233 ;;		_vfpfcnvrt
 10234 ;; This function uses a reentrant model
 10235 ;;
 10236                           
 10237                           	psect	text44
 10238  010000                     __ptext44:
 10239                           	opt callstack 0
 10240  010000                     _efgtoa:
 10241                           	opt callstack 0
 10242                           
 10243                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10244  010000  0E38               	movlw	56
 10245  010002  26E1               	addwf	fsr1l,f,c
 10246  010004  0E00               	movlw	0
 10247  010006  22E2               	addwfc	fsr1h,f,c
 10248                           
 10249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 10250                           ;stkvar	_sign @ sp[(-56)+42]
 10251                           
 10252                           ;incstack = 0
 10253  010008  0EF2               	movlw	-14
 10254  01000A  6AE3               	clrf	plusw1,c
 10255  01000C  0EF3               	movlw	-13
 10256  01000E  6AE3               	clrf	plusw1,c
 10257                           
 10258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 10259                           ;stkvar	_f @ sp[(-56)+-6]
 10260  010010  0EC2               	movlw	-62
 10261  010012  006F FF8C  F03A    	movff	plusw1,btemp+8
 10262  010018  0EC3               	movlw	-61
 10263  01001A  006F FF8C  F03B    	movff	plusw1,btemp+9
 10264  010020  0EC4               	movlw	-60
 10265  010022  006F FF8C  F03C    	movff	plusw1,btemp+10
 10266  010028  0EC5               	movlw	-59
 10267  01002A  006F FF8C  F03D    	movff	plusw1,btemp+11
 10268                           
 10269                           ;stkvar	_g @ sp[(-56)+16]
 10270  010030  0ED8               	movlw	-40
 10271  010032  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10272  010038  0ED9               	movlw	-39
 10273  01003A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10274  010040  0EDA               	movlw	-38
 10275  010042  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10276  010048  0EDB               	movlw	-37
 10277  01004A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10278                           
 10279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 10280                           ;stkvar	_g @ sp[(-56)+16]
 10281  010050  0EDB               	movlw	-37
 10282  010052  AEE3               	btfss	plusw1,7,c
 10283  010054  D02B               	goto	l10428
 10284                           
 10285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 10286  010056  0E01               	movlw	1
 10287  010058  6E3C               	movwf	(btemp+10)^0,c
 10288  01005A  0E00               	movlw	0
 10289  01005C  6E3D               	movwf	(btemp+11)^0,c
 10290                           
 10291                           ;stkvar	_sign @ sp[(-56)+42]
 10292  01005E  0EF2               	movlw	-14
 10293  010060  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10294  010066  0EF3               	movlw	-13
 10295  010068  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10296                           
 10297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 10298                           ;stkvar	_g @ sp[(-56)+16]
 10299  01006E  0ED8               	movlw	-40
 10300  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 10301  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 10302  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 10303  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 10304  010088  EC67  F0BD         	call	___flneg	;wreg free
 10305                           
 10306                           ;stkvar	_g @ sp[(-56)+16]
 10307  01008C  0ED8               	movlw	-40
 10308  01008E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10309  010094  0ED9               	movlw	-39
 10310  010096  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10311  01009C  0EDA               	movlw	-38
 10312  01009E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10313  0100A4  0EDB               	movlw	-37
 10314  0100A6  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10315  0100AC                     l10428:
 10316                           
 10317                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 10318                           ;stkvar	_n @ sp[(-56)+32]
 10319  0100AC  0EE8               	movlw	-24
 10320  0100AE  6AE3               	clrf	plusw1,c
 10321  0100B0  0EE9               	movlw	-23
 10322  0100B2  6AE3               	clrf	plusw1,c
 10323                           
 10324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 10325                           ;stkvar	_w @ sp[(-56)+38]
 10326  0100B4  0EEE               	movlw	-18
 10327  0100B6  0060  F06F  FFE3   	movff	_width,plusw1
 10328  0100BC  0EEF               	movlw	-17
 10329  0100BE  0060  F073  FFE3   	movff	_width+1,plusw1
 10330                           
 10331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 10332                           ;stkvar	_sign @ sp[(-56)+42]
 10333  0100C4  0EF2               	movlw	-14
 10334  0100C6  006F FF8C  F032    	movff	plusw1,btemp
 10335  0100CC  0EF3               	movlw	-13
 10336  0100CE  50E3               	movf	plusw1,w,c
 10337  0100D0  1032               	iorwf	btemp^0,w,c
 10338  0100D2  A4D8               	btfss	status,2,c
 10339  0100D4  D002               	goto	u10910
 10340  0100D6  A41F               	btfss	_flags^0,2,c
 10341  0100D8  D036               	goto	l10448
 10342  0100DA                     u10910:
 10343                           
 10344                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 10345                           ;stkvar	_sign @ sp[(-56)+42]
 10346  0100DA  0EF2               	movlw	-14
 10347  0100DC  006F FF8C  F032    	movff	plusw1,btemp
 10348  0100E2  0EF3               	movlw	-13
 10349  0100E4  50E3               	movf	plusw1,w,c
 10350  0100E6  1032               	iorwf	btemp^0,w,c
 10351  0100E8  A4D8               	btfss	status,2,c
 10352  0100EA  D002               	goto	l10440
 10353  0100EC  0E2B               	movlw	43
 10354  0100EE  D001               	goto	L8
 10355  0100F0                     l10440:
 10356  0100F0  0E2D               	movlw	45
 10357  0100F2                     L8:
 10358  0100F2  6E3C               	movwf	(btemp+10)^0,c
 10359  0100F4  0E00               	movlw	0
 10360  0100F6  6E3D               	movwf	(btemp+11)^0,c
 10361                           
 10362                           ;stkvar	_efgtoa$4379 @ sp[(-56)+10]
 10363  0100F8  0ED2               	movlw	-46
 10364  0100FA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10365  010100  0ED3               	movlw	-45
 10366  010102  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10367                           
 10368                           ;stkvar	_efgtoa$4379 @ sp[(-56)+10]
 10369  010108  0ED2               	movlw	-46
 10370  01010A  006F FF8C  F240    	movff	plusw1,_dbuf
 10371                           
 10372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 10373                           ;stkvar	_n @ sp[(-56)+32]
 10374  010110  0EE8               	movlw	-24
 10375  010112  50E3               	movf	plusw1,w,c
 10376  010114  0F01               	addlw	1
 10377  010116  6E32               	movwf	btemp^0,c
 10378  010118  0EE8               	movlw	-24
 10379  01011A  0060  F0CB  FFE3   	movff	btemp,plusw1
 10380  010120  6A32               	clrf	btemp^0,c
 10381  010122  0EE9               	movlw	-23
 10382  010124  50E3               	movf	plusw1,w,c
 10383  010126  2032               	addwfc	btemp^0,w,c
 10384  010128  6E32               	movwf	btemp^0,c
 10385  01012A  0EE9               	movlw	-23
 10386  01012C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10387                           
 10388                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 10389                           ;stkvar	_w @ sp[(-56)+38]
 10390  010132  50E1               	movf	fsr1l,w,c
 10391  010134  0FEE               	addlw	-18
 10392  010136  6ED9               	movwf	fsr2l,c
 10393  010138  50E2               	movf	fsr1h,w,c
 10394  01013A  6EDA               	movwf	fsr2h,c
 10395  01013C  0EFF               	movlw	255
 10396  01013E  22DA               	addwfc	fsr2h,f,c
 10397  010140  06DE               	decf	postinc2,f,c
 10398  010142  0E00               	movlw	0
 10399  010144  5ADD               	subwfb	postdec2,f,c
 10400  010146                     l10448:
 10401                           
 10402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10403                           ;stkvar	_g @ sp[(-56)+16]
 10404  010146  0ED8               	movlw	-40
 10405  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 10406  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 10407  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 10408  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 10409  010160  EC75  F0AE         	call	___fpclassifyf	;wreg free
 10410  010164  0432               	decf	btemp^0,w,c
 10411  010166  1033               	iorwf	(btemp+1)^0,w,c
 10412  010168  A4D8               	btfss	status,2,c
 10413  01016A  D076               	goto	l10466
 10414  01016C  0EBF               	movlw	191
 10415  01016E  6E3C               	movwf	(btemp+10)^0,c
 10416  010170  0EFF               	movlw	255
 10417  010172  6E3D               	movwf	(btemp+11)^0,c
 10418                           
 10419                           ;stkvar	_c @ sp[(-56)+-7]
 10420  010174  0EC1               	movlw	-63
 10421  010176  50E3               	movf	plusw1,w,c
 10422  010178  6E3A               	movwf	(btemp+8)^0,c
 10423  01017A  6A3B               	clrf	(btemp+9)^0,c
 10424  01017C  503C               	movf	(btemp+10)^0,w,c
 10425  01017E  263A               	addwf	(btemp+8)^0,f,c
 10426  010180  503D               	movf	(btemp+11)^0,w,c
 10427  010182  223B               	addwfc	(btemp+9)^0,f,c
 10428  010184  503B               	movf	(btemp+9)^0,w,c
 10429  010186  E106               	bnz	u10940
 10430  010188  0E1A               	movlw	26
 10431  01018A  5C3A               	subwf	(btemp+8)^0,w,c
 10432  01018C  B0D8               	btfsc	status,0,c
 10433  01018E  D002               	goto	u10940
 10434  010190  0E01               	movlw	1
 10435  010192  D001               	goto	u10950
 10436  010194                     u10940:
 10437  010194  0E00               	movlw	0
 10438  010196                     u10950:
 10439  010196  6E3C               	movwf	(btemp+10)^0,c
 10440  010198  6A3D               	clrf	(btemp+11)^0,c
 10441                           
 10442                           ;stkvar	_efgtoa$4380 @ sp[(-56)+8]
 10443  01019A  0ED0               	movlw	-48
 10444  01019C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10445  0101A2  0ED1               	movlw	-47
 10446  0101A4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10447                           
 10448                           ;stkvar	_efgtoa$4380 @ sp[(-56)+8]
 10449  0101AA  0ED0               	movlw	-48
 10450  0101AC  006F FF8C  F032    	movff	plusw1,btemp
 10451  0101B2  0ED1               	movlw	-47
 10452  0101B4  50E3               	movf	plusw1,w,c
 10453  0101B6  1032               	iorwf	btemp^0,w,c
 10454  0101B8  B4D8               	btfsc	status,2,c
 10455  0101BA  D017               	goto	l10458
 10456                           
 10457                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 10458  0101BC  0EE5               	movlw	low STR_34
 10459  0101BE  6EE6               	movwf	postinc1,c
 10460  0101C0  0EFF               	movlw	high STR_34
 10461  0101C2  6EE6               	movwf	postinc1,c
 10462                           
 10463                           ;stkvar	_n @ sp[(-58)+32]
 10464  0101C4  0E40               	movlw	low _dbuf
 10465  0101C6  6E3C               	movwf	(btemp+10)^0,c
 10466  0101C8  0E02               	movlw	high _dbuf
 10467  0101CA  6E3D               	movwf	(btemp+11)^0,c
 10468  0101CC  0EE6               	movlw	-26
 10469  0101CE  50E3               	movf	plusw1,w,c
 10470  0101D0  263C               	addwf	(btemp+10)^0,f,c
 10471  0101D2  0EE7               	movlw	-25
 10472  0101D4  50E3               	movf	plusw1,w,c
 10473  0101D6  223D               	addwfc	(btemp+11)^0,f,c
 10474  0101D8  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10475  0101DE  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10476  0101E4  EC2F  F0B6         	call	_strcpy	;wreg free
 10477                           
 10478                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 10479  0101E8  D016               	goto	l10460
 10480  0101EA                     l10458:
 10481                           
 10482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 10483  0101EA  0EED               	movlw	low STR_35
 10484  0101EC  6EE6               	movwf	postinc1,c
 10485  0101EE  0EFF               	movlw	high STR_35
 10486  0101F0  6EE6               	movwf	postinc1,c
 10487                           
 10488                           ;stkvar	_n @ sp[(-58)+32]
 10489  0101F2  0E40               	movlw	low _dbuf
 10490  0101F4  6E3C               	movwf	(btemp+10)^0,c
 10491  0101F6  0E02               	movlw	high _dbuf
 10492  0101F8  6E3D               	movwf	(btemp+11)^0,c
 10493  0101FA  0EE6               	movlw	-26
 10494  0101FC  50E3               	movf	plusw1,w,c
 10495  0101FE  263C               	addwf	(btemp+10)^0,f,c
 10496  010200  0EE7               	movlw	-25
 10497  010202  50E3               	movf	plusw1,w,c
 10498  010204  223D               	addwfc	(btemp+11)^0,f,c
 10499  010206  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10500  01020C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10501  010212  EC2F  F0B6         	call	_strcpy	;wreg free
 10502  010216                     l10460:
 10503                           
 10504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 10505                           ;stkvar	_w @ sp[(-56)+38]
 10506  010216  50E1               	movf	fsr1l,w,c
 10507  010218  0FEE               	addlw	-18
 10508  01021A  6ED9               	movwf	fsr2l,c
 10509  01021C  50E2               	movf	fsr1h,w,c
 10510  01021E  6EDA               	movwf	fsr2h,c
 10511  010220  0EFF               	movlw	255
 10512  010222  22DA               	addwfc	fsr2h,f,c
 10513  010224  0EFD               	movlw	253
 10514  010226  26DE               	addwf	postinc2,f,c
 10515  010228  0EFF               	movlw	255
 10516  01022A  22DD               	addwfc	postdec2,f,c
 10517  01022C                     l10462:
 10518                           
 10519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 10520                           ;stkvar	_w @ sp[(-56)+38]
 10521  01022C  0EEE               	movlw	-18
 10522  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 10523  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 10524  01023A  0E40               	movlw	low _dbuf
 10525  01023C  6EE6               	movwf	postinc1,c
 10526  01023E  0E02               	movlw	high _dbuf
 10527  010240  6EE6               	movwf	postinc1,c
 10528                           
 10529                           ;stkvar	_fp @ sp[(-60)+-2]
 10530  010242  0EC2               	movlw	-62
 10531  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 10532  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 10533  010250  ECAA  F0B3         	call	_pad	;wreg free
 10534  010254  EF1D  F089         	goto	l1871
 10535  010258                     l10466:
 10536                           
 10537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 10538                           ;stkvar	_g @ sp[(-56)+16]
 10539  010258  0ED8               	movlw	-40
 10540  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 10541  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 10542  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 10543  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 10544  010272  EC75  F0AE         	call	___fpclassifyf	;wreg free
 10545  010276  5032               	movf	btemp^0,w,c
 10546  010278  1033               	iorwf	(btemp+1)^0,w,c
 10547  01027A  A4D8               	btfss	status,2,c
 10548  01027C  D056               	goto	l10484
 10549  01027E  0EBF               	movlw	191
 10550  010280  6E3C               	movwf	(btemp+10)^0,c
 10551  010282  0EFF               	movlw	255
 10552  010284  6E3D               	movwf	(btemp+11)^0,c
 10553                           
 10554                           ;stkvar	_c @ sp[(-56)+-7]
 10555  010286  0EC1               	movlw	-63
 10556  010288  50E3               	movf	plusw1,w,c
 10557  01028A  6E3A               	movwf	(btemp+8)^0,c
 10558  01028C  6A3B               	clrf	(btemp+9)^0,c
 10559  01028E  503C               	movf	(btemp+10)^0,w,c
 10560  010290  263A               	addwf	(btemp+8)^0,f,c
 10561  010292  503D               	movf	(btemp+11)^0,w,c
 10562  010294  223B               	addwfc	(btemp+9)^0,f,c
 10563  010296  503B               	movf	(btemp+9)^0,w,c
 10564  010298  E106               	bnz	u10980
 10565  01029A  0E1A               	movlw	26
 10566  01029C  5C3A               	subwf	(btemp+8)^0,w,c
 10567  01029E  B0D8               	btfsc	status,0,c
 10568  0102A0  D002               	goto	u10980
 10569  0102A2  0E01               	movlw	1
 10570  0102A4  D001               	goto	u10990
 10571  0102A6                     u10980:
 10572  0102A6  0E00               	movlw	0
 10573  0102A8                     u10990:
 10574  0102A8  6E3C               	movwf	(btemp+10)^0,c
 10575  0102AA  6A3D               	clrf	(btemp+11)^0,c
 10576                           
 10577                           ;stkvar	_efgtoa$4384 @ sp[(-56)+6]
 10578  0102AC  0ECE               	movlw	-50
 10579  0102AE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10580  0102B4  0ECF               	movlw	-49
 10581  0102B6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10582                           
 10583                           ;stkvar	_efgtoa$4384 @ sp[(-56)+6]
 10584  0102BC  0ECE               	movlw	-50
 10585  0102BE  006F FF8C  F032    	movff	plusw1,btemp
 10586  0102C4  0ECF               	movlw	-49
 10587  0102C6  50E3               	movf	plusw1,w,c
 10588  0102C8  1032               	iorwf	btemp^0,w,c
 10589  0102CA  B4D8               	btfsc	status,2,c
 10590  0102CC  D017               	goto	l10476
 10591                           
 10592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 10593  0102CE  0EE9               	movlw	low STR_38
 10594  0102D0  6EE6               	movwf	postinc1,c
 10595  0102D2  0EFF               	movlw	high STR_38
 10596  0102D4  6EE6               	movwf	postinc1,c
 10597                           
 10598                           ;stkvar	_n @ sp[(-58)+32]
 10599  0102D6  0E40               	movlw	low _dbuf
 10600  0102D8  6E3C               	movwf	(btemp+10)^0,c
 10601  0102DA  0E02               	movlw	high _dbuf
 10602  0102DC  6E3D               	movwf	(btemp+11)^0,c
 10603  0102DE  0EE6               	movlw	-26
 10604  0102E0  50E3               	movf	plusw1,w,c
 10605  0102E2  263C               	addwf	(btemp+10)^0,f,c
 10606  0102E4  0EE7               	movlw	-25
 10607  0102E6  50E3               	movf	plusw1,w,c
 10608  0102E8  223D               	addwfc	(btemp+11)^0,f,c
 10609  0102EA  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10610  0102F0  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10611  0102F6  EC2F  F0B6         	call	_strcpy	;wreg free
 10612                           
 10613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 10614  0102FA  D78D               	goto	l10460
 10615  0102FC                     l10476:
 10616                           
 10617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 10618  0102FC  0EF1               	movlw	low STR_39
 10619  0102FE  6EE6               	movwf	postinc1,c
 10620  010300  0EFF               	movlw	high STR_39
 10621  010302  6EE6               	movwf	postinc1,c
 10622                           
 10623                           ;stkvar	_n @ sp[(-58)+32]
 10624  010304  0E40               	movlw	low _dbuf
 10625  010306  6E3C               	movwf	(btemp+10)^0,c
 10626  010308  0E02               	movlw	high _dbuf
 10627  01030A  6E3D               	movwf	(btemp+11)^0,c
 10628  01030C  0EE6               	movlw	-26
 10629  01030E  50E3               	movf	plusw1,w,c
 10630  010310  263C               	addwf	(btemp+10)^0,f,c
 10631  010312  0EE7               	movlw	-25
 10632  010314  50E3               	movf	plusw1,w,c
 10633  010316  223D               	addwfc	(btemp+11)^0,f,c
 10634  010318  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 10635  01031E  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 10636  010324  EC2F  F0B6         	call	_strcpy	;wreg free
 10637  010328  D776               	goto	l10460
 10638  01032A                     l10484:
 10639                           
 10640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 10641  01032A  0E00               	movlw	0
 10642  01032C  6E3A               	movwf	(btemp+8)^0,c
 10643  01032E  0E00               	movlw	0
 10644  010330  6E3B               	movwf	(btemp+9)^0,c
 10645  010332  0E80               	movlw	128
 10646  010334  6E3C               	movwf	(btemp+10)^0,c
 10647  010336  0E3F               	movlw	63
 10648  010338  6E3D               	movwf	(btemp+11)^0,c
 10649                           
 10650                           ;stkvar	_u @ sp[(-56)+12]
 10651  01033A  0ED4               	movlw	-44
 10652  01033C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 10653  010342  0ED5               	movlw	-43
 10654  010344  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 10655  01034A  0ED6               	movlw	-42
 10656  01034C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10657  010352  0ED7               	movlw	-41
 10658  010354  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10659                           
 10660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 10661                           ;stkvar	_e @ sp[(-56)+34]
 10662  01035A  0EEA               	movlw	-22
 10663  01035C  6AE3               	clrf	plusw1,c
 10664  01035E  0EEB               	movlw	-21
 10665  010360  6AE3               	clrf	plusw1,c
 10666                           
 10667                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 10668  010362  0E00               	movlw	0
 10669  010364  6EE6               	movwf	postinc1,c
 10670  010366  0E00               	movlw	0
 10671  010368  6EE6               	movwf	postinc1,c
 10672  01036A  0E00               	movlw	0
 10673  01036C  6EE6               	movwf	postinc1,c
 10674  01036E  0E00               	movlw	0
 10675  010370  6EE6               	movwf	postinc1,c
 10676                           
 10677                           ;stkvar	_g @ sp[(-60)+16]
 10678  010372  0ED4               	movlw	-44
 10679  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 10680  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 10681  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 10682  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 10683  01038C  EC99  F0B6         	call	___fleq	;wreg free
 10684  010390  A032               	btfss	btemp& (0+255),0,c
 10685  010392  D039               	goto	l10496
 10686  010394  D0BC               	goto	u11030
 10687  010396                     l10492:
 10688                           
 10689                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 10690  010396  0E00               	movlw	0
 10691  010398  6EE6               	movwf	postinc1,c
 10692  01039A  0E00               	movlw	0
 10693  01039C  6EE6               	movwf	postinc1,c
 10694  01039E  0E20               	movlw	32
 10695  0103A0  6EE6               	movwf	postinc1,c
 10696  0103A2  0E41               	movlw	65
 10697  0103A4  6EE6               	movwf	postinc1,c
 10698                           
 10699                           ;stkvar	_u @ sp[(-60)+12]
 10700  0103A6  0ED0               	movlw	-48
 10701  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10702  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10703  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 10704  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 10705  0103C0  ECC1  F08E         	call	___flmul	;wreg free
 10706                           
 10707                           ;stkvar	_u @ sp[(-56)+12]
 10708  0103C4  0ED4               	movlw	-44
 10709  0103C6  0060  F0CB  FFE3   	movff	btemp,plusw1
 10710  0103CC  0ED5               	movlw	-43
 10711  0103CE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10712  0103D4  0ED6               	movlw	-42
 10713  0103D6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10714  0103DC  0ED7               	movlw	-41
 10715  0103DE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10716                           
 10717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 10718                           ;stkvar	_e @ sp[(-56)+34]
 10719  0103E4  0EEA               	movlw	-22
 10720  0103E6  50E3               	movf	plusw1,w,c
 10721  0103E8  0F01               	addlw	1
 10722  0103EA  6E32               	movwf	btemp^0,c
 10723  0103EC  0EEA               	movlw	-22
 10724  0103EE  0060  F0CB  FFE3   	movff	btemp,plusw1
 10725  0103F4  6A32               	clrf	btemp^0,c
 10726  0103F6  0EEB               	movlw	-21
 10727  0103F8  50E3               	movf	plusw1,w,c
 10728  0103FA  2032               	addwfc	btemp^0,w,c
 10729  0103FC  6E32               	movwf	btemp^0,c
 10730  0103FE  0EEB               	movlw	-21
 10731  010400  0060  F0CB  FFE3   	movff	btemp,plusw1
 10732  010406                     l10496:
 10733                           
 10734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 10735  010406  0E00               	movlw	0
 10736  010408  6EE6               	movwf	postinc1,c
 10737  01040A  0E00               	movlw	0
 10738  01040C  6EE6               	movwf	postinc1,c
 10739  01040E  0E20               	movlw	32
 10740  010410  6EE6               	movwf	postinc1,c
 10741  010412  0E41               	movlw	65
 10742  010414  6EE6               	movwf	postinc1,c
 10743                           
 10744                           ;stkvar	_u @ sp[(-60)+12]
 10745  010416  0ED0               	movlw	-48
 10746  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 10747  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 10748  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 10749  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 10750  010430  ECC1  F08E         	call	___flmul	;wreg free
 10751  010434  0060  F0CB  FFE6   	movff	btemp,postinc1
 10752  01043A  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 10753  010440  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 10754  010446  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 10755                           
 10756                           ;stkvar	_g @ sp[(-60)+16]
 10757  01044C  0ED4               	movlw	-44
 10758  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 10759  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 10760  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 10761  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 10762  010466  ECF9  F0AF         	call	___flge	;wreg free
 10763  01046A  A032               	btfss	btemp& (0+255),0,c
 10764  01046C  D032               	goto	l10502
 10765  01046E  D793               	goto	l10492
 10766  010470                     l10498:
 10767                           
 10768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 10769  010470  0E00               	movlw	0
 10770  010472  6EE6               	movwf	postinc1,c
 10771  010474  0E00               	movlw	0
 10772  010476  6EE6               	movwf	postinc1,c
 10773  010478  0E20               	movlw	32
 10774  01047A  6EE6               	movwf	postinc1,c
 10775  01047C  0E41               	movlw	65
 10776  01047E  6EE6               	movwf	postinc1,c
 10777                           
 10778                           ;stkvar	_u @ sp[(-60)+12]
 10779  010480  0ED0               	movlw	-48
 10780  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 10781  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 10782  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 10783  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 10784  01049A  ECB4  F096         	call	___fldiv	;wreg free
 10785                           
 10786                           ;stkvar	_u @ sp[(-56)+12]
 10787  01049E  0ED4               	movlw	-44
 10788  0104A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 10789  0104A6  0ED5               	movlw	-43
 10790  0104A8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 10791  0104AE  0ED6               	movlw	-42
 10792  0104B0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 10793  0104B6  0ED7               	movlw	-41
 10794  0104B8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 10795                           
 10796                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 10797                           ;stkvar	_e @ sp[(-56)+34]
 10798  0104BE  50E1               	movf	fsr1l,w,c
 10799  0104C0  0FEA               	addlw	-22
 10800  0104C2  6ED9               	movwf	fsr2l,c
 10801  0104C4  50E2               	movf	fsr1h,w,c
 10802  0104C6  6EDA               	movwf	fsr2h,c
 10803  0104C8  0EFF               	movlw	255
 10804  0104CA  22DA               	addwfc	fsr2h,f,c
 10805  0104CC  06DE               	decf	postinc2,f,c
 10806  0104CE  0E00               	movlw	0
 10807  0104D0  5ADD               	subwfb	postdec2,f,c
 10808  0104D2                     l10502:
 10809                           
 10810                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 10811                           ;stkvar	_u @ sp[(-56)+12]
 10812  0104D2  0ED4               	movlw	-44
 10813  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10814  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 10815  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 10816  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 10817                           
 10818                           ;stkvar	_g @ sp[(-60)+16]
 10819  0104EC  0ED4               	movlw	-44
 10820  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 10821  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10822  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10823  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 10824  010506  ECF9  F0AF         	call	___flge	;wreg free
 10825  01050A  A032               	btfss	btemp& (0+255),0,c
 10826  01050C  D7B1               	goto	l10498
 10827  01050E                     u11030:
 10828                           
 10829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 10830                           ;stkvar	_c @ sp[(-56)+-7]
 10831  01050E  0EC1               	movlw	-63
 10832  010510  50E3               	movf	plusw1,w,c
 10833  010512  6EE6               	movwf	postinc1,c
 10834  010514  0E00               	movlw	0
 10835  010516  6EE6               	movwf	postinc1,c
 10836  010518  EC0A  F0BA         	call	_tolower	;wreg free
 10837                           
 10838                           ;stkvar	_mode @ sp[(-56)+54]
 10839  01051C  0EFE               	movlw	-2
 10840  01051E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10841                           
 10842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 10843                           ;stkvar	_mode @ sp[(-56)+54]
 10844                           ;stkvar	_nmode @ sp[(-56)+55]
 10845  010524  0EFE               	movlw	-2
 10846  010526  006F FF8C  F032    	movff	plusw1,btemp
 10847  01052C  0EFF               	movlw	-1
 10848  01052E  0060  F0CB  FFE3   	movff	btemp,plusw1
 10849                           
 10850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 10851                           ;stkvar	_mode @ sp[(-56)+54]
 10852  010534  0EFE               	movlw	-2
 10853  010536  006F FF8C  F032    	movff	plusw1,btemp
 10854  01053C  0E67               	movlw	103
 10855  01053E  1832               	xorwf	btemp^0,w,c
 10856  010540  A4D8               	btfss	status,2,c
 10857  010542  D025               	goto	l10520
 10858                           
 10859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 10860  010544  501D               	movf	_prec^0,w,c
 10861  010546  101E               	iorwf	(_prec+1)^0,w,c
 10862  010548  A4D8               	btfss	status,2,c
 10863  01054A  D004               	goto	l10514
 10864                           
 10865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 10866  01054C  0E00               	movlw	0
 10867  01054E  6E1E               	movwf	(_prec+1)^0,c
 10868  010550  0E01               	movlw	1
 10869  010552  6E1D               	movwf	_prec^0,c
 10870  010554                     l10514:
 10871                           
 10872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 10873  010554  BE1E               	btfsc	(_prec+1)^0,7,c
 10874  010556  D005               	goto	u11060
 10875  010558  501E               	movf	(_prec+1)^0,w,c
 10876  01055A  E110               	bnz	l10518
 10877  01055C  041D               	decf	_prec^0,w,c
 10878  01055E  B0D8               	btfsc	status,0,c
 10879  010560  D00D               	goto	l10518
 10880  010562                     u11060:
 10881  010562  0E06               	movlw	6
 10882  010564  6E3C               	movwf	(btemp+10)^0,c
 10883  010566  0E00               	movlw	0
 10884  010568  6E3D               	movwf	(btemp+11)^0,c
 10885                           
 10886                           ;stkvar	_p @ sp[(-56)+40]
 10887  01056A  0EF0               	movlw	-16
 10888  01056C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 10889  010572  0EF1               	movlw	-15
 10890  010574  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10891  01057A  D00C               	goto	l10526
 10892  01057C                     l10518:
 10893                           
 10894                           ;stkvar	_p @ sp[(-56)+40]
 10895  01057C  0EF0               	movlw	-16
 10896  01057E  0060  F077  FFE3   	movff	_prec,plusw1
 10897  010584  0EF1               	movlw	-15
 10898  010586  0060  F07B  FFE3   	movff	_prec+1,plusw1
 10899  01058C  D003               	goto	l10526
 10900  01058E                     l10520:
 10901                           
 10902                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 10903  01058E  AE1E               	btfss	(_prec+1)^0,7,c
 10904  010590  D7F5               	goto	l10518
 10905  010592  D7E7               	goto	u11060
 10906  010594                     l10526:
 10907                           
 10908                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 10909                           ;stkvar	_mode @ sp[(-56)+54]
 10910  010594  0EFE               	movlw	-2
 10911  010596  006F FF8C  F032    	movff	plusw1,btemp
 10912  01059C  0E67               	movlw	103
 10913  01059E  1832               	xorwf	btemp^0,w,c
 10914  0105A0  A4D8               	btfss	status,2,c
 10915  0105A2  D02F               	goto	l10536
 10916                           
 10917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 10918                           ;stkvar	_e @ sp[(-56)+34]
 10919  0105A4  0EEB               	movlw	-21
 10920  0105A6  AEE3               	btfss	plusw1,7,c
 10921  0105A8  D00E               	goto	u11090
 10922  0105AA  0EEA               	movlw	-22
 10923  0105AC  006F FF8C  F032    	movff	plusw1,btemp
 10924  0105B2  0EFC               	movlw	252
 10925  0105B4  5E32               	subwf	btemp^0,f,c
 10926  0105B6  0EEB               	movlw	-21
 10927  0105B8  006F FF8C  F032    	movff	plusw1,btemp
 10928  0105BE  0EFF               	movlw	255
 10929  0105C0  5A32               	subwfb	btemp^0,f,c
 10930  0105C2  A0D8               	btfss	status,0,c
 10931  0105C4  D018               	goto	l10534
 10932  0105C6                     u11090:
 10933                           
 10934                           ;stkvar	_e @ sp[(-56)+34]
 10935                           ;stkvar	_p @ sp[(-56)+40]
 10936  0105C6  0EF0               	movlw	-16
 10937  0105C8  50E3               	movf	plusw1,w,c
 10938  0105CA  0FFF               	addlw	255
 10939  0105CC  6E3C               	movwf	(btemp+10)^0,c
 10940  0105CE  0EF1               	movlw	-15
 10941  0105D0  006F FF8C  F03D    	movff	plusw1,btemp+11
 10942  0105D6  0EFF               	movlw	255
 10943  0105D8  223D               	addwfc	(btemp+11)^0,f,c
 10944  0105DA  0EEA               	movlw	-22
 10945  0105DC  50E3               	movf	plusw1,w,c
 10946  0105DE  5C3C               	subwf	(btemp+10)^0,w,c
 10947  0105E0  503D               	movf	(btemp+11)^0,w,c
 10948  0105E2  0A80               	xorlw	128
 10949  0105E4  6E32               	movwf	btemp^0,c
 10950  0105E6  0EEB               	movlw	-21
 10951  0105E8  50E3               	movf	plusw1,w,c
 10952  0105EA  0A80               	xorlw	128
 10953  0105EC  5832               	subwfb	btemp^0,w,c
 10954  0105EE  A0D8               	btfss	status,0,c
 10955  0105F0  D002               	goto	l10534
 10956                           
 10957                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 10958  0105F2  0E66               	movlw	102
 10959  0105F4  D001               	goto	L9
 10960  0105F6                     l10534:
 10961                           
 10962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 10963  0105F6  0E65               	movlw	101
 10964  0105F8                     L9:
 10965  0105F8  6E3D               	movwf	(btemp+11)^0,c
 10966                           
 10967                           ;stkvar	_nmode @ sp[(-56)+55]
 10968  0105FA  0EFF               	movlw	-1
 10969  0105FC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 10970  010602                     l10536:
 10971                           
 10972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 10973                           ;stkvar	_p @ sp[(-56)+40]
 10974                           ;stkvar	_m @ sp[(-56)+48]
 10975  010602  0EF0               	movlw	-16
 10976  010604  006F FF8C  F032    	movff	plusw1,btemp
 10977  01060A  0EF8               	movlw	-8
 10978  01060C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10979  010612  0EF1               	movlw	-15
 10980  010614  006F FF8C  F032    	movff	plusw1,btemp
 10981  01061A  0EF9               	movlw	-7
 10982  01061C  0060  F0CB  FFE3   	movff	btemp,plusw1
 10983                           
 10984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 10985                           ;stkvar	_mode @ sp[(-56)+54]
 10986  010622  0EFE               	movlw	-2
 10987  010624  006F FF8C  F032    	movff	plusw1,btemp
 10988  01062A  0E67               	movlw	103
 10989  01062C  1832               	xorwf	btemp^0,w,c
 10990  01062E  A4D8               	btfss	status,2,c
 10991  010630  D00B               	goto	u11130
 10992                           
 10993                           ;stkvar	_nmode @ sp[(-56)+55]
 10994  010632  0EFF               	movlw	-1
 10995  010634  006F FF8C  F032    	movff	plusw1,btemp
 10996  01063A  0E66               	movlw	102
 10997  01063C  1832               	xorwf	btemp^0,w,c
 10998  01063E  A4D8               	btfss	status,2,c
 10999  010640  D014               	goto	l1900
 11000                           
 11001                           ;stkvar	_e @ sp[(-56)+34]
 11002  010642  0EEB               	movlw	-21
 11003  010644  AEE3               	btfss	plusw1,7,c
 11004  010646  D011               	goto	l1900
 11005  010648                     u11130:
 11006                           
 11007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 11008                           ;stkvar	_m @ sp[(-56)+48]
 11009  010648  0EF8               	movlw	-8
 11010  01064A  50E3               	movf	plusw1,w,c
 11011  01064C  0F01               	addlw	1
 11012  01064E  6E32               	movwf	btemp^0,c
 11013  010650  0EF8               	movlw	-8
 11014  010652  0060  F0CB  FFE3   	movff	btemp,plusw1
 11015  010658  6A32               	clrf	btemp^0,c
 11016  01065A  0EF9               	movlw	-7
 11017  01065C  50E3               	movf	plusw1,w,c
 11018  01065E  2032               	addwfc	btemp^0,w,c
 11019  010660  6E32               	movwf	btemp^0,c
 11020  010662  0EF9               	movlw	-7
 11021  010664  0060  F0CB  FFE3   	movff	btemp,plusw1
 11022  01066A                     l1900:
 11023                           
 11024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 11025                           ;stkvar	_nmode @ sp[(-56)+55]
 11026  01066A  0EFF               	movlw	-1
 11027  01066C  006F FF8C  F032    	movff	plusw1,btemp
 11028  010672  0E66               	movlw	102
 11029  010674  1832               	xorwf	btemp^0,w,c
 11030  010676  A4D8               	btfss	status,2,c
 11031  010678  D03B               	goto	l10556
 11032                           
 11033                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 11034                           ;stkvar	_e @ sp[(-56)+34]
 11035  01067A  0EEB               	movlw	-21
 11036  01067C  AEE3               	btfss	plusw1,7,c
 11037  01067E  D01C               	goto	l10552
 11038                           
 11039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 11040  010680  0E00               	movlw	0
 11041  010682  6E3A               	movwf	(btemp+8)^0,c
 11042  010684  0E00               	movlw	0
 11043  010686  6E3B               	movwf	(btemp+9)^0,c
 11044  010688  0E80               	movlw	128
 11045  01068A  6E3C               	movwf	(btemp+10)^0,c
 11046  01068C  0E3F               	movlw	63
 11047  01068E  6E3D               	movwf	(btemp+11)^0,c
 11048                           
 11049                           ;stkvar	_u @ sp[(-56)+12]
 11050  010690  0ED4               	movlw	-44
 11051  010692  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11052  010698  0ED5               	movlw	-43
 11053  01069A  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11054  0106A0  0ED6               	movlw	-42
 11055  0106A2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11056  0106A8  0ED7               	movlw	-41
 11057  0106AA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11058                           
 11059                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 11060                           ;stkvar	_e @ sp[(-56)+34]
 11061  0106B0  0EEA               	movlw	-22
 11062  0106B2  6AE3               	clrf	plusw1,c
 11063  0106B4  0EEB               	movlw	-21
 11064  0106B6  6AE3               	clrf	plusw1,c
 11065  0106B8                     l10552:
 11066                           
 11067                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 11068                           ;stkvar	_mode @ sp[(-56)+54]
 11069  0106B8  0EFE               	movlw	-2
 11070  0106BA  006F FF8C  F032    	movff	plusw1,btemp
 11071  0106C0  0E67               	movlw	103
 11072  0106C2  1832               	xorwf	btemp^0,w,c
 11073  0106C4  B4D8               	btfsc	status,2,c
 11074  0106C6  D014               	goto	l10556
 11075                           
 11076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 11077                           ;stkvar	_e @ sp[(-56)+34]
 11078                           ;stkvar	_m @ sp[(-56)+48]
 11079  0106C8  0EF8               	movlw	-8
 11080  0106CA  50E3               	movf	plusw1,w,c
 11081  0106CC  6E32               	movwf	btemp^0,c
 11082  0106CE  0EEA               	movlw	-22
 11083  0106D0  50E3               	movf	plusw1,w,c
 11084  0106D2  2632               	addwf	btemp^0,f,c
 11085  0106D4  0EF8               	movlw	-8
 11086  0106D6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11087  0106DC  0EF9               	movlw	-7
 11088  0106DE  50E3               	movf	plusw1,w,c
 11089  0106E0  6E32               	movwf	btemp^0,c
 11090  0106E2  0EEB               	movlw	-21
 11091  0106E4  50E3               	movf	plusw1,w,c
 11092  0106E6  2232               	addwfc	btemp^0,f,c
 11093  0106E8  0EF9               	movlw	-7
 11094  0106EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11095  0106F0                     l10556:
 11096                           
 11097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 11098                           ;stkvar	_i @ sp[(-56)+36]
 11099  0106F0  0EEC               	movlw	-20
 11100  0106F2  6AE3               	clrf	plusw1,c
 11101  0106F4  0EED               	movlw	-19
 11102  0106F6  6AE3               	clrf	plusw1,c
 11103                           
 11104                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 11105                           ;stkvar	_g @ sp[(-56)+16]
 11106  0106F8  0ED8               	movlw	-40
 11107  0106FA  006F FF8C  F03A    	movff	plusw1,btemp+8
 11108  010700  0ED9               	movlw	-39
 11109  010702  006F FF8C  F03B    	movff	plusw1,btemp+9
 11110  010708  0EDA               	movlw	-38
 11111  01070A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11112  010710  0EDB               	movlw	-37
 11113  010712  006F FF8C  F03D    	movff	plusw1,btemp+11
 11114                           
 11115                           ;stkvar	_h @ sp[(-56)+24]
 11116  010718  0EE0               	movlw	-32
 11117  01071A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11118  010720  0EE1               	movlw	-31
 11119  010722  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11120  010728  0EE2               	movlw	-30
 11121  01072A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11122  010730  0EE3               	movlw	-29
 11123  010732  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11124                           
 11125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 11126                           ;stkvar	_u @ sp[(-56)+12]
 11127  010738  0ED4               	movlw	-44
 11128  01073A  006F FF8C  F03A    	movff	plusw1,btemp+8
 11129  010740  0ED5               	movlw	-43
 11130  010742  006F FF8C  F03B    	movff	plusw1,btemp+9
 11131  010748  0ED6               	movlw	-42
 11132  01074A  006F FF8C  F03C    	movff	plusw1,btemp+10
 11133  010750  0ED7               	movlw	-41
 11134  010752  006F FF8C  F03D    	movff	plusw1,btemp+11
 11135                           
 11136                           ;stkvar	_ou @ sp[(-56)+28]
 11137  010758  0EE4               	movlw	-28
 11138  01075A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11139  010760  0EE5               	movlw	-27
 11140  010762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11141  010768  0EE6               	movlw	-26
 11142  01076A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11143  010770  0EE7               	movlw	-25
 11144  010772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11145                           
 11146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11147  010778  D0D6               	goto	l10572
 11148  01077A                     l10562:
 11149                           
 11150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 11151                           ;stkvar	_u @ sp[(-56)+12]
 11152  01077A  0ED4               	movlw	-44
 11153  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 11154  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 11155  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 11156  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 11157                           
 11158                           ;stkvar	_h @ sp[(-60)+24]
 11159  010794  0EDC               	movlw	-36
 11160  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 11161  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 11162  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11163  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11164  0107AE  ECB4  F096         	call	___fldiv	;wreg free
 11165  0107B2  0060  F0CB  FFE6   	movff	btemp,postinc1
 11166  0107B8  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11167  0107BE  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11168  0107C4  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11169  0107CA  EC76  F0A2         	call	_floorf	;wreg free
 11170                           
 11171                           ;stkvar	_l @ sp[(-56)+20]
 11172  0107CE  0EDC               	movlw	-36
 11173  0107D0  0060  F0CB  FFE3   	movff	btemp,plusw1
 11174  0107D6  0EDD               	movlw	-35
 11175  0107D8  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11176  0107DE  0EDE               	movlw	-34
 11177  0107E0  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11178  0107E6  0EDF               	movlw	-33
 11179  0107E8  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11180                           
 11181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 11182                           ;stkvar	_l @ sp[(-56)+20]
 11183  0107EE  0EDC               	movlw	-36
 11184  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 11185  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 11186  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 11187  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 11188  010808  EC40  F0AF         	call	___fltol	;wreg free
 11189  01080C  0060  F0C8  F03C   	movff	btemp,btemp+10
 11190  010812  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11191                           
 11192                           ;stkvar	_d @ sp[(-56)+44]
 11193  010818  0EF4               	movlw	-12
 11194  01081A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11195  010820  0EF5               	movlw	-11
 11196  010822  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11197                           
 11198                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 11199                           ;stkvar	_u @ sp[(-56)+12]
 11200  010828  0ED4               	movlw	-44
 11201  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 11202  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 11203  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 11204  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 11205                           
 11206                           ;stkvar	_l @ sp[(-60)+20]
 11207  010842  0ED8               	movlw	-40
 11208  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 11209  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 11210  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 11211  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 11212  01085C  ECC1  F08E         	call	___flmul	;wreg free
 11213  010860  0060  F0CB  FFE6   	movff	btemp,postinc1
 11214  010866  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11215  01086C  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11216  010872  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11217                           
 11218                           ;stkvar	_h @ sp[(-60)+24]
 11219  010878  0EDC               	movlw	-36
 11220  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 11221  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 11222  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 11223  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 11224  010892  EC8B  F0BD         	call	___flsub	;wreg free
 11225                           
 11226                           ;stkvar	_h @ sp[(-56)+24]
 11227  010896  0EE0               	movlw	-32
 11228  010898  0060  F0CB  FFE3   	movff	btemp,plusw1
 11229  01089E  0EE1               	movlw	-31
 11230  0108A0  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11231  0108A6  0EE2               	movlw	-30
 11232  0108A8  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11233  0108AE  0EE3               	movlw	-29
 11234  0108B0  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11235                           
 11236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 11237  0108B6  0E00               	movlw	0
 11238  0108B8  6EE6               	movwf	postinc1,c
 11239  0108BA  0E00               	movlw	0
 11240  0108BC  6EE6               	movwf	postinc1,c
 11241  0108BE  0E20               	movlw	32
 11242  0108C0  6EE6               	movwf	postinc1,c
 11243  0108C2  0E41               	movlw	65
 11244  0108C4  6EE6               	movwf	postinc1,c
 11245                           
 11246                           ;stkvar	_u @ sp[(-60)+12]
 11247  0108C6  0ED0               	movlw	-48
 11248  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11249  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 11250  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11251  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11252  0108E0  ECB4  F096         	call	___fldiv	;wreg free
 11253                           
 11254                           ;stkvar	_u @ sp[(-56)+12]
 11255  0108E4  0ED4               	movlw	-44
 11256  0108E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11257  0108EC  0ED5               	movlw	-43
 11258  0108EE  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11259  0108F4  0ED6               	movlw	-42
 11260  0108F6  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11261  0108FC  0ED7               	movlw	-41
 11262  0108FE  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11263                           
 11264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 11265                           ;stkvar	_i @ sp[(-56)+36]
 11266  010904  0EEC               	movlw	-20
 11267  010906  50E3               	movf	plusw1,w,c
 11268  010908  0F01               	addlw	1
 11269  01090A  6E32               	movwf	btemp^0,c
 11270  01090C  0EEC               	movlw	-20
 11271  01090E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11272  010914  6A32               	clrf	btemp^0,c
 11273  010916  0EED               	movlw	-19
 11274  010918  50E3               	movf	plusw1,w,c
 11275  01091A  2032               	addwfc	btemp^0,w,c
 11276  01091C  6E32               	movwf	btemp^0,c
 11277  01091E  0EED               	movlw	-19
 11278  010920  0060  F0CB  FFE3   	movff	btemp,plusw1
 11279  010926                     l10572:
 11280                           
 11281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 11282                           ;stkvar	_m @ sp[(-56)+48]
 11283                           ;stkvar	_i @ sp[(-56)+36]
 11284  010926  50E1               	movf	fsr1l,w,c
 11285  010928  0FEC               	addlw	-20
 11286  01092A  6ED9               	movwf	fsr2l,c
 11287  01092C  50E2               	movf	fsr1h,w,c
 11288  01092E  6EDA               	movwf	fsr2h,c
 11289  010930  0EFF               	movlw	255
 11290  010932  22DA               	addwfc	fsr2h,f,c
 11291  010934  0EF8               	movlw	-8
 11292  010936  50E3               	movf	plusw1,w,c
 11293  010938  5CDE               	subwf	postinc2,w,c
 11294  01093A  50DE               	movf	postinc2,w,c
 11295  01093C  0A80               	xorlw	128
 11296  01093E  6E32               	movwf	btemp^0,c
 11297  010940  0EF9               	movlw	-7
 11298  010942  50E3               	movf	plusw1,w,c
 11299  010944  0A80               	xorlw	128
 11300  010946  5832               	subwfb	btemp^0,w,c
 11301  010948  A0D8               	btfss	status,0,c
 11302  01094A  D717               	goto	l10562
 11303                           
 11304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 11305  01094C  0E00               	movlw	0
 11306  01094E  6EE6               	movwf	postinc1,c
 11307  010950  0E00               	movlw	0
 11308  010952  6EE6               	movwf	postinc1,c
 11309  010954  0EA0               	movlw	160
 11310  010956  6EE6               	movwf	postinc1,c
 11311  010958  0E40               	movlw	64
 11312  01095A  6EE6               	movwf	postinc1,c
 11313                           
 11314                           ;stkvar	_u @ sp[(-60)+12]
 11315  01095C  0ED0               	movlw	-48
 11316  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 11317  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 11318  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 11319  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 11320  010976  ECC1  F08E         	call	___flmul	;wreg free
 11321                           
 11322                           ;stkvar	_l @ sp[(-56)+20]
 11323  01097A  0EDC               	movlw	-36
 11324  01097C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11325  010982  0EDD               	movlw	-35
 11326  010984  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11327  01098A  0EDE               	movlw	-34
 11328  01098C  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11329  010992  0EDF               	movlw	-33
 11330  010994  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11331                           
 11332                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 11333                           ;stkvar	_l @ sp[(-56)+20]
 11334  01099A  0EDC               	movlw	-36
 11335  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 11336  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 11337  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11338  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11339                           
 11340                           ;stkvar	_h @ sp[(-60)+24]
 11341  0109B4  0EDC               	movlw	-36
 11342  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 11343  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 11344  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 11345  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 11346  0109CE  ECF9  F0AF         	call	___flge	;wreg free
 11347  0109D2  A032               	btfss	btemp& (0+255),0,c
 11348  0109D4  D021               	goto	u11200
 11349                           
 11350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 11351                           ;stkvar	_l @ sp[(-56)+20]
 11352                           
 11353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 11354                           
 11355                           ;stkvar	_l @ sp[(-56)+20]
 11356                           
 11357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 11358  0109D6  0EDC               	movlw	-36
 11359  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 11360  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 11361  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 11362  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 11363                           
 11364                           ;stkvar	_h @ sp[(-60)+24]
 11365  0109F0  0EDC               	movlw	-36
 11366  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11367  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11368  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 11369  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 11370  010A0A  EC99  F0B6         	call	___fleq	;wreg free
 11371  010A0E  A032               	btfss	btemp& (0+255),0,c
 11372  010A10  D01B               	goto	l10586
 11373                           
 11374                           ;stkvar	_d @ sp[(-56)+44]
 11375  010A12  0EF4               	movlw	-12
 11376  010A14  B0E3               	btfsc	plusw1,0,c
 11377  010A16  D018               	goto	l10586
 11378  010A18                     u11200:
 11379                           
 11380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 11381  010A18  0E00               	movlw	0
 11382  010A1A  6E3A               	movwf	(btemp+8)^0,c
 11383  010A1C  0E00               	movlw	0
 11384  010A1E  6E3B               	movwf	(btemp+9)^0,c
 11385  010A20  0E00               	movlw	0
 11386  010A22  6E3C               	movwf	(btemp+10)^0,c
 11387  010A24  0E00               	movlw	0
 11388  010A26  6E3D               	movwf	(btemp+11)^0,c
 11389                           
 11390                           ;stkvar	_l @ sp[(-56)+20]
 11391  010A28  0EDC               	movlw	-36
 11392  010A2A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11393  010A30  0EDD               	movlw	-35
 11394  010A32  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11395  010A38  0EDE               	movlw	-34
 11396  010A3A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11397  010A40  0EDF               	movlw	-33
 11398  010A42  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11399  010A48                     l10586:
 11400                           
 11401                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 11402                           ;stkvar	_l @ sp[(-56)+20]
 11403  010A48  0EDC               	movlw	-36
 11404  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 11405  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 11406  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 11407  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11408                           
 11409                           ;stkvar	_g @ sp[(-60)+16]
 11410  010A62  0ED4               	movlw	-44
 11411  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 11412  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 11413  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 11414  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 11415  010A7C  ECD6  F092         	call	___fladd	;wreg free
 11416                           
 11417                           ;stkvar	_h @ sp[(-56)+24]
 11418  010A80  0EE0               	movlw	-32
 11419  010A82  0060  F0CB  FFE3   	movff	btemp,plusw1
 11420  010A88  0EE1               	movlw	-31
 11421  010A8A  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11422  010A90  0EE2               	movlw	-30
 11423  010A92  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11424  010A98  0EE3               	movlw	-29
 11425  010A9A  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11426                           
 11427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 11428                           ;stkvar	_ou @ sp[(-56)+28]
 11429  010AA0  0EE4               	movlw	-28
 11430  010AA2  006F FF8C  F03A    	movff	plusw1,btemp+8
 11431  010AA8  0EE5               	movlw	-27
 11432  010AAA  006F FF8C  F03B    	movff	plusw1,btemp+9
 11433  010AB0  0EE6               	movlw	-26
 11434  010AB2  006F FF8C  F03C    	movff	plusw1,btemp+10
 11435  010AB8  0EE7               	movlw	-25
 11436  010ABA  006F FF8C  F03D    	movff	plusw1,btemp+11
 11437                           
 11438                           ;stkvar	_u @ sp[(-56)+12]
 11439  010AC0  0ED4               	movlw	-44
 11440  010AC2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 11441  010AC8  0ED5               	movlw	-43
 11442  010ACA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 11443  010AD0  0ED6               	movlw	-42
 11444  010AD2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11445  010AD8  0ED7               	movlw	-41
 11446  010ADA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11447                           
 11448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 11449                           ;stkvar	_nmode @ sp[(-56)+55]
 11450  010AE0  0EFF               	movlw	-1
 11451  010AE2  006F FF8C  F032    	movff	plusw1,btemp
 11452  010AE8  0E65               	movlw	101
 11453  010AEA  1832               	xorwf	btemp^0,w,c
 11454  010AEC  B4D8               	btfsc	status,2,c
 11455  010AEE  D011               	goto	l10594
 11456                           
 11457                           ;stkvar	_e @ sp[(-56)+34]
 11458                           ;stkvar	_ne @ sp[(-56)+46]
 11459  010AF0  0EEA               	movlw	-22
 11460  010AF2  006F FF8C  F032    	movff	plusw1,btemp
 11461  010AF8  0EF6               	movlw	-10
 11462  010AFA  0060  F0CB  FFE3   	movff	btemp,plusw1
 11463  010B00  0EEB               	movlw	-21
 11464  010B02  006F FF8C  F032    	movff	plusw1,btemp
 11465  010B08  0EF7               	movlw	-9
 11466  010B0A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11467  010B10  D004               	goto	l1915
 11468  010B12                     l10594:
 11469                           
 11470                           ;stkvar	_ne @ sp[(-56)+46]
 11471  010B12  0EF6               	movlw	-10
 11472  010B14  6AE3               	clrf	plusw1,c
 11473  010B16  0EF7               	movlw	-9
 11474  010B18  6AE3               	clrf	plusw1,c
 11475  010B1A                     l1915:
 11476                           
 11477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 11478                           ;stkvar	_pp @ sp[(-56)+50]
 11479  010B1A  0EFA               	movlw	-6
 11480  010B1C  6AE3               	clrf	plusw1,c
 11481  010B1E  0EFB               	movlw	-5
 11482  010B20  6AE3               	clrf	plusw1,c
 11483                           
 11484                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 11485                           ;stkvar	_t @ sp[(-56)+52]
 11486  010B22  0EFC               	movlw	-4
 11487  010B24  6AE3               	clrf	plusw1,c
 11488  010B26  0EFD               	movlw	-3
 11489  010B28  6AE3               	clrf	plusw1,c
 11490                           
 11491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 11492                           ;stkvar	_i @ sp[(-56)+36]
 11493  010B2A  0EEC               	movlw	-20
 11494  010B2C  6AE3               	clrf	plusw1,c
 11495  010B2E  0EED               	movlw	-19
 11496  010B30  6AE3               	clrf	plusw1,c
 11497                           
 11498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11499  010B32  D1B7               	goto	l10646
 11500  010B34                     l10596:
 11501                           
 11502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 11503                           ;stkvar	_u @ sp[(-56)+12]
 11504  010B34  0ED4               	movlw	-44
 11505  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 11506  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11507  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 11508  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 11509                           
 11510                           ;stkvar	_h @ sp[(-60)+24]
 11511  010B4E  0EDC               	movlw	-36
 11512  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 11513  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 11514  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 11515  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 11516  010B68  ECB4  F096         	call	___fldiv	;wreg free
 11517  010B6C  0060  F0CB  FFE6   	movff	btemp,postinc1
 11518  010B72  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11519  010B78  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11520  010B7E  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11521  010B84  EC76  F0A2         	call	_floorf	;wreg free
 11522                           
 11523                           ;stkvar	_l @ sp[(-56)+20]
 11524  010B88  0EDC               	movlw	-36
 11525  010B8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11526  010B90  0EDD               	movlw	-35
 11527  010B92  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11528  010B98  0EDE               	movlw	-34
 11529  010B9A  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11530  010BA0  0EDF               	movlw	-33
 11531  010BA2  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11532                           
 11533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 11534                           ;stkvar	_l @ sp[(-56)+20]
 11535  010BA8  0EDC               	movlw	-36
 11536  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 11537  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 11538  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 11539  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 11540  010BC2  EC40  F0AF         	call	___fltol	;wreg free
 11541  010BC6  0060  F0C8  F03C   	movff	btemp,btemp+10
 11542  010BCC  0060  F0CC  F03D   	movff	btemp+1,btemp+11
 11543                           
 11544                           ;stkvar	_d @ sp[(-56)+44]
 11545  010BD2  0EF4               	movlw	-12
 11546  010BD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11547  010BDA  0EF5               	movlw	-11
 11548  010BDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11549                           
 11550                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 11551  010BE2  B81F               	btfsc	_flags^0,4,c
 11552  010BE4  D026               	goto	l10610
 11553                           
 11554                           ;stkvar	_d @ sp[(-56)+44]
 11555  010BE6  0EF4               	movlw	-12
 11556  010BE8  006F FF8C  F032    	movff	plusw1,btemp
 11557  010BEE  0EF5               	movlw	-11
 11558  010BF0  50E3               	movf	plusw1,w,c
 11559  010BF2  1032               	iorwf	btemp^0,w,c
 11560  010BF4  A4D8               	btfss	status,2,c
 11561  010BF6  D01D               	goto	l10610
 11562                           
 11563                           ;stkvar	_mode @ sp[(-56)+54]
 11564  010BF8  0EFE               	movlw	-2
 11565  010BFA  006F FF8C  F032    	movff	plusw1,btemp
 11566  010C00  0E67               	movlw	103
 11567  010C02  1832               	xorwf	btemp^0,w,c
 11568  010C04  A4D8               	btfss	status,2,c
 11569  010C06  D015               	goto	l10610
 11570                           
 11571                           ;stkvar	_ne @ sp[(-56)+46]
 11572  010C08  0EF7               	movlw	-9
 11573  010C0A  AEE3               	btfss	plusw1,7,c
 11574  010C0C  D012               	goto	l10610
 11575                           
 11576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 11577                           ;stkvar	_t @ sp[(-56)+52]
 11578  010C0E  0EFC               	movlw	-4
 11579  010C10  50E3               	movf	plusw1,w,c
 11580  010C12  0F01               	addlw	1
 11581  010C14  6E32               	movwf	btemp^0,c
 11582  010C16  0EFC               	movlw	-4
 11583  010C18  0060  F0CB  FFE3   	movff	btemp,plusw1
 11584  010C1E  6A32               	clrf	btemp^0,c
 11585  010C20  0EFD               	movlw	-3
 11586  010C22  50E3               	movf	plusw1,w,c
 11587  010C24  2032               	addwfc	btemp^0,w,c
 11588  010C26  6E32               	movwf	btemp^0,c
 11589  010C28  0EFD               	movlw	-3
 11590  010C2A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11591                           
 11592                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 11593  010C30  D0AF               	goto	l10638
 11594  010C32                     l10610:
 11595                           
 11596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 11597                           ;stkvar	_pp @ sp[(-56)+50]
 11598  010C32  0EFA               	movlw	-6
 11599  010C34  006F FF8C  F032    	movff	plusw1,btemp
 11600  010C3A  0EFB               	movlw	-5
 11601  010C3C  50E3               	movf	plusw1,w,c
 11602  010C3E  1032               	iorwf	btemp^0,w,c
 11603  010C40  A4D8               	btfss	status,2,c
 11604  010C42  D070               	goto	l10630
 11605                           
 11606                           ;stkvar	_ne @ sp[(-56)+46]
 11607  010C44  0EF7               	movlw	-9
 11608  010C46  AEE3               	btfss	plusw1,7,c
 11609  010C48  D06D               	goto	l10630
 11610                           
 11611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 11612                           ;stkvar	_n @ sp[(-56)+32]
 11613  010C4A  0EE8               	movlw	-24
 11614  010C4C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11615  010C52  0EE9               	movlw	-23
 11616  010C54  006F FF8C  F03D    	movff	plusw1,btemp+11
 11617  010C5A  0E40               	movlw	low _dbuf
 11618  010C5C  243C               	addwf	(btemp+10)^0,w,c
 11619  010C5E  6ED9               	movwf	fsr2l,c
 11620  010C60  0E02               	movlw	high _dbuf
 11621  010C62  203D               	addwfc	(btemp+11)^0,w,c
 11622  010C64  6EDA               	movwf	fsr2h,c
 11623  010C66  0E2E               	movlw	46
 11624  010C68  6EDF               	movwf	indf2,c
 11625                           
 11626                           ;stkvar	_n @ sp[(-56)+32]
 11627  010C6A  0EE8               	movlw	-24
 11628  010C6C  50E3               	movf	plusw1,w,c
 11629  010C6E  0F01               	addlw	1
 11630  010C70  6E32               	movwf	btemp^0,c
 11631  010C72  0EE8               	movlw	-24
 11632  010C74  0060  F0CB  FFE3   	movff	btemp,plusw1
 11633  010C7A  6A32               	clrf	btemp^0,c
 11634  010C7C  0EE9               	movlw	-23
 11635  010C7E  50E3               	movf	plusw1,w,c
 11636  010C80  2032               	addwfc	btemp^0,w,c
 11637  010C82  6E32               	movwf	btemp^0,c
 11638  010C84  0EE9               	movlw	-23
 11639  010C86  0060  F0CB  FFE3   	movff	btemp,plusw1
 11640                           
 11641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 11642                           ;stkvar	_w @ sp[(-56)+38]
 11643  010C8C  50E1               	movf	fsr1l,w,c
 11644  010C8E  0FEE               	addlw	-18
 11645  010C90  6ED9               	movwf	fsr2l,c
 11646  010C92  50E2               	movf	fsr1h,w,c
 11647  010C94  6EDA               	movwf	fsr2h,c
 11648  010C96  0EFF               	movlw	255
 11649  010C98  22DA               	addwfc	fsr2h,f,c
 11650  010C9A  06DE               	decf	postinc2,f,c
 11651  010C9C  0E00               	movlw	0
 11652  010C9E  5ADD               	subwfb	postdec2,f,c
 11653                           
 11654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 11655  010CA0  0E01               	movlw	1
 11656  010CA2  6E3C               	movwf	(btemp+10)^0,c
 11657  010CA4  0E00               	movlw	0
 11658  010CA6  6E3D               	movwf	(btemp+11)^0,c
 11659                           
 11660                           ;stkvar	_pp @ sp[(-56)+50]
 11661  010CA8  0EFA               	movlw	-6
 11662  010CAA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11663  010CB0  0EFB               	movlw	-5
 11664  010CB2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11665  010CB8  D035               	goto	l10630
 11666  010CBA                     l10622:
 11667                           
 11668                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 11669                           ;stkvar	_n @ sp[(-56)+32]
 11670  010CBA  0EE8               	movlw	-24
 11671  010CBC  006F FF8C  F03C    	movff	plusw1,btemp+10
 11672  010CC2  0EE9               	movlw	-23
 11673  010CC4  006F FF8C  F03D    	movff	plusw1,btemp+11
 11674  010CCA  0E40               	movlw	low _dbuf
 11675  010CCC  243C               	addwf	(btemp+10)^0,w,c
 11676  010CCE  6ED9               	movwf	fsr2l,c
 11677  010CD0  0E02               	movlw	high _dbuf
 11678  010CD2  203D               	addwfc	(btemp+11)^0,w,c
 11679  010CD4  6EDA               	movwf	fsr2h,c
 11680  010CD6  0E30               	movlw	48
 11681  010CD8  6EDF               	movwf	indf2,c
 11682                           
 11683                           ;stkvar	_n @ sp[(-56)+32]
 11684  010CDA  0EE8               	movlw	-24
 11685  010CDC  50E3               	movf	plusw1,w,c
 11686  010CDE  0F01               	addlw	1
 11687  010CE0  6E32               	movwf	btemp^0,c
 11688  010CE2  0EE8               	movlw	-24
 11689  010CE4  0060  F0CB  FFE3   	movff	btemp,plusw1
 11690  010CEA  6A32               	clrf	btemp^0,c
 11691  010CEC  0EE9               	movlw	-23
 11692  010CEE  50E3               	movf	plusw1,w,c
 11693  010CF0  2032               	addwfc	btemp^0,w,c
 11694  010CF2  6E32               	movwf	btemp^0,c
 11695  010CF4  0EE9               	movlw	-23
 11696  010CF6  0060  F0CB  FFE3   	movff	btemp,plusw1
 11697                           
 11698                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 11699                           ;stkvar	_w @ sp[(-56)+38]
 11700  010CFC  50E1               	movf	fsr1l,w,c
 11701  010CFE  0FEE               	addlw	-18
 11702  010D00  6ED9               	movwf	fsr2l,c
 11703  010D02  50E2               	movf	fsr1h,w,c
 11704  010D04  6EDA               	movwf	fsr2h,c
 11705  010D06  0EFF               	movlw	255
 11706  010D08  22DA               	addwfc	fsr2h,f,c
 11707  010D0A  06DE               	decf	postinc2,f,c
 11708  010D0C  0E00               	movlw	0
 11709  010D0E  5ADD               	subwfb	postdec2,f,c
 11710                           
 11711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 11712                           ;stkvar	_t @ sp[(-56)+52]
 11713  010D10  50E1               	movf	fsr1l,w,c
 11714  010D12  0FFC               	addlw	-4
 11715  010D14  6ED9               	movwf	fsr2l,c
 11716  010D16  50E2               	movf	fsr1h,w,c
 11717  010D18  6EDA               	movwf	fsr2h,c
 11718  010D1A  0EFF               	movlw	255
 11719  010D1C  22DA               	addwfc	fsr2h,f,c
 11720  010D1E  06DE               	decf	postinc2,f,c
 11721  010D20  0E00               	movlw	0
 11722  010D22  5ADD               	subwfb	postdec2,f,c
 11723  010D24                     l10630:
 11724                           
 11725                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 11726                           ;stkvar	_t @ sp[(-56)+52]
 11727  010D24  0EFC               	movlw	-4
 11728  010D26  006F FF8C  F032    	movff	plusw1,btemp
 11729  010D2C  0EFD               	movlw	-3
 11730  010D2E  50E3               	movf	plusw1,w,c
 11731  010D30  1032               	iorwf	btemp^0,w,c
 11732  010D32  A4D8               	btfss	status,2,c
 11733  010D34  D7C2               	goto	l10622
 11734                           
 11735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 11736                           ;stkvar	_n @ sp[(-56)+32]
 11737  010D36  0EE8               	movlw	-24
 11738  010D38  006F FF8C  F03C    	movff	plusw1,btemp+10
 11739  010D3E  0EE9               	movlw	-23
 11740  010D40  006F FF8C  F03D    	movff	plusw1,btemp+11
 11741  010D46  0E40               	movlw	low _dbuf
 11742  010D48  243C               	addwf	(btemp+10)^0,w,c
 11743  010D4A  6ED9               	movwf	fsr2l,c
 11744  010D4C  0E02               	movlw	high _dbuf
 11745  010D4E  203D               	addwfc	(btemp+11)^0,w,c
 11746  010D50  6EDA               	movwf	fsr2h,c
 11747                           
 11748                           ;stkvar	_d @ sp[(-56)+44]
 11749  010D52  0EF4               	movlw	-12
 11750  010D54  50E3               	movf	plusw1,w,c
 11751  010D56  0F30               	addlw	48
 11752  010D58  6EDF               	movwf	indf2,c
 11753                           
 11754                           ;stkvar	_n @ sp[(-56)+32]
 11755  010D5A  0EE8               	movlw	-24
 11756  010D5C  50E3               	movf	plusw1,w,c
 11757  010D5E  0F01               	addlw	1
 11758  010D60  6E32               	movwf	btemp^0,c
 11759  010D62  0EE8               	movlw	-24
 11760  010D64  0060  F0CB  FFE3   	movff	btemp,plusw1
 11761  010D6A  6A32               	clrf	btemp^0,c
 11762  010D6C  0EE9               	movlw	-23
 11763  010D6E  50E3               	movf	plusw1,w,c
 11764  010D70  2032               	addwfc	btemp^0,w,c
 11765  010D72  6E32               	movwf	btemp^0,c
 11766  010D74  0EE9               	movlw	-23
 11767  010D76  0060  F0CB  FFE3   	movff	btemp,plusw1
 11768                           
 11769                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 11770                           ;stkvar	_w @ sp[(-56)+38]
 11771  010D7C  50E1               	movf	fsr1l,w,c
 11772  010D7E  0FEE               	addlw	-18
 11773  010D80  6ED9               	movwf	fsr2l,c
 11774  010D82  50E2               	movf	fsr1h,w,c
 11775  010D84  6EDA               	movwf	fsr2h,c
 11776  010D86  0EFF               	movlw	255
 11777  010D88  22DA               	addwfc	fsr2h,f,c
 11778  010D8A  06DE               	decf	postinc2,f,c
 11779  010D8C  0E00               	movlw	0
 11780  010D8E  5ADD               	subwfb	postdec2,f,c
 11781  010D90                     l10638:
 11782                           
 11783                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 11784                           ;stkvar	_u @ sp[(-56)+12]
 11785  010D90  0ED4               	movlw	-44
 11786  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 11787  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 11788  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11789  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 11790                           
 11791                           ;stkvar	_l @ sp[(-60)+20]
 11792  010DAA  0ED8               	movlw	-40
 11793  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 11794  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 11795  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 11796  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 11797  010DC4  ECC1  F08E         	call	___flmul	;wreg free
 11798  010DC8  0060  F0CB  FFE6   	movff	btemp,postinc1
 11799  010DCE  0060  F0CF  FFE6   	movff	btemp+1,postinc1
 11800  010DD4  0060  F0D3  FFE6   	movff	btemp+2,postinc1
 11801  010DDA  0060  F0D7  FFE6   	movff	btemp+3,postinc1
 11802                           
 11803                           ;stkvar	_h @ sp[(-60)+24]
 11804  010DE0  0EDC               	movlw	-36
 11805  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 11806  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 11807  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 11808  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 11809  010DFA  EC8B  F0BD         	call	___flsub	;wreg free
 11810                           
 11811                           ;stkvar	_h @ sp[(-56)+24]
 11812  010DFE  0EE0               	movlw	-32
 11813  010E00  0060  F0CB  FFE3   	movff	btemp,plusw1
 11814  010E06  0EE1               	movlw	-31
 11815  010E08  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11816  010E0E  0EE2               	movlw	-30
 11817  010E10  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11818  010E16  0EE3               	movlw	-29
 11819  010E18  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11820                           
 11821                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 11822  010E1E  0E00               	movlw	0
 11823  010E20  6EE6               	movwf	postinc1,c
 11824  010E22  0E00               	movlw	0
 11825  010E24  6EE6               	movwf	postinc1,c
 11826  010E26  0E20               	movlw	32
 11827  010E28  6EE6               	movwf	postinc1,c
 11828  010E2A  0E41               	movlw	65
 11829  010E2C  6EE6               	movwf	postinc1,c
 11830                           
 11831                           ;stkvar	_u @ sp[(-60)+12]
 11832  010E2E  0ED0               	movlw	-48
 11833  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 11834  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 11835  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 11836  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 11837  010E48  ECB4  F096         	call	___fldiv	;wreg free
 11838                           
 11839                           ;stkvar	_u @ sp[(-56)+12]
 11840  010E4C  0ED4               	movlw	-44
 11841  010E4E  0060  F0CB  FFE3   	movff	btemp,plusw1
 11842  010E54  0ED5               	movlw	-43
 11843  010E56  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 11844  010E5C  0ED6               	movlw	-42
 11845  010E5E  0060  F0D3  FFE3   	movff	btemp+2,plusw1
 11846  010E64  0ED7               	movlw	-41
 11847  010E66  0060  F0D7  FFE3   	movff	btemp+3,plusw1
 11848                           
 11849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 11850                           ;stkvar	_ne @ sp[(-56)+46]
 11851  010E6C  50E1               	movf	fsr1l,w,c
 11852  010E6E  0FF6               	addlw	-10
 11853  010E70  6ED9               	movwf	fsr2l,c
 11854  010E72  50E2               	movf	fsr1h,w,c
 11855  010E74  6EDA               	movwf	fsr2h,c
 11856  010E76  0EFF               	movlw	255
 11857  010E78  22DA               	addwfc	fsr2h,f,c
 11858  010E7A  06DE               	decf	postinc2,f,c
 11859  010E7C  0E00               	movlw	0
 11860  010E7E  5ADD               	subwfb	postdec2,f,c
 11861                           
 11862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 11863                           ;stkvar	_i @ sp[(-56)+36]
 11864  010E80  0EEC               	movlw	-20
 11865  010E82  50E3               	movf	plusw1,w,c
 11866  010E84  0F01               	addlw	1
 11867  010E86  6E32               	movwf	btemp^0,c
 11868  010E88  0EEC               	movlw	-20
 11869  010E8A  0060  F0CB  FFE3   	movff	btemp,plusw1
 11870  010E90  6A32               	clrf	btemp^0,c
 11871  010E92  0EED               	movlw	-19
 11872  010E94  50E3               	movf	plusw1,w,c
 11873  010E96  2032               	addwfc	btemp^0,w,c
 11874  010E98  6E32               	movwf	btemp^0,c
 11875  010E9A  0EED               	movlw	-19
 11876  010E9C  0060  F0CB  FFE3   	movff	btemp,plusw1
 11877  010EA2                     l10646:
 11878                           
 11879                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 11880                           ;stkvar	_m @ sp[(-56)+48]
 11881                           ;stkvar	_i @ sp[(-56)+36]
 11882  010EA2  50E1               	movf	fsr1l,w,c
 11883  010EA4  0FEC               	addlw	-20
 11884  010EA6  6ED9               	movwf	fsr2l,c
 11885  010EA8  50E2               	movf	fsr1h,w,c
 11886  010EAA  6EDA               	movwf	fsr2h,c
 11887  010EAC  0EFF               	movlw	255
 11888  010EAE  22DA               	addwfc	fsr2h,f,c
 11889  010EB0  0EF8               	movlw	-8
 11890  010EB2  50E3               	movf	plusw1,w,c
 11891  010EB4  5CDE               	subwf	postinc2,w,c
 11892  010EB6  50DE               	movf	postinc2,w,c
 11893  010EB8  0A80               	xorlw	128
 11894  010EBA  6E32               	movwf	btemp^0,c
 11895  010EBC  0EF9               	movlw	-7
 11896  010EBE  50E3               	movf	plusw1,w,c
 11897  010EC0  0A80               	xorlw	128
 11898  010EC2  5832               	subwfb	btemp^0,w,c
 11899  010EC4  B0D8               	btfsc	status,0,c
 11900  010EC6  D00E               	goto	u11300
 11901                           
 11902                           ;stkvar	_n @ sp[(-56)+32]
 11903  010EC8  0EE9               	movlw	-23
 11904  010ECA  BEE3               	btfsc	plusw1,7,c
 11905  010ECC  D633               	goto	l10596
 11906  010ECE  0EE9               	movlw	-23
 11907  010ED0  50E3               	movf	plusw1,w,c
 11908  010ED2  E108               	bnz	u11300
 11909  010ED4  0EE8               	movlw	-24
 11910  010ED6  006F FF8C  F032    	movff	plusw1,btemp
 11911  010EDC  0E4B               	movlw	75
 11912  010EDE  5E32               	subwf	btemp^0,f,c
 11913  010EE0  A0D8               	btfss	status,0,c
 11914  010EE2  D628               	goto	l10596
 11915  010EE4                     u11300:
 11916                           
 11917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 11918                           ;stkvar	_pp @ sp[(-56)+50]
 11919  010EE4  0EFA               	movlw	-6
 11920  010EE6  006F FF8C  F032    	movff	plusw1,btemp
 11921  010EEC  0EFB               	movlw	-5
 11922  010EEE  50E3               	movf	plusw1,w,c
 11923  010EF0  1032               	iorwf	btemp^0,w,c
 11924  010EF2  B4D8               	btfsc	status,2,c
 11925  010EF4  A81F               	btfss	_flags^0,4,c
 11926  010EF6  D021               	goto	l10658
 11927                           
 11928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 11929                           ;stkvar	_n @ sp[(-56)+32]
 11930  010EF8  0EE8               	movlw	-24
 11931  010EFA  006F FF8C  F03C    	movff	plusw1,btemp+10
 11932  010F00  0EE9               	movlw	-23
 11933  010F02  006F FF8C  F03D    	movff	plusw1,btemp+11
 11934  010F08  0E40               	movlw	low _dbuf
 11935  010F0A  243C               	addwf	(btemp+10)^0,w,c
 11936  010F0C  6ED9               	movwf	fsr2l,c
 11937  010F0E  0E02               	movlw	high _dbuf
 11938  010F10  203D               	addwfc	(btemp+11)^0,w,c
 11939  010F12  6EDA               	movwf	fsr2h,c
 11940  010F14  0E2E               	movlw	46
 11941  010F16  6EDF               	movwf	indf2,c
 11942                           
 11943                           ;stkvar	_n @ sp[(-56)+32]
 11944  010F18  0EE8               	movlw	-24
 11945  010F1A  50E3               	movf	plusw1,w,c
 11946  010F1C  0F01               	addlw	1
 11947  010F1E  6E32               	movwf	btemp^0,c
 11948  010F20  0EE8               	movlw	-24
 11949  010F22  0060  F0CB  FFE3   	movff	btemp,plusw1
 11950  010F28  6A32               	clrf	btemp^0,c
 11951  010F2A  0EE9               	movlw	-23
 11952  010F2C  50E3               	movf	plusw1,w,c
 11953  010F2E  2032               	addwfc	btemp^0,w,c
 11954  010F30  6E32               	movwf	btemp^0,c
 11955  010F32  0EE9               	movlw	-23
 11956  010F34  0060  F0CB  FFE3   	movff	btemp,plusw1
 11957  010F3A                     l10658:
 11958                           
 11959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 11960                           ;stkvar	_n @ sp[(-56)+32]
 11961  010F3A  0EE8               	movlw	-24
 11962  010F3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 11963  010F42  0EE9               	movlw	-23
 11964  010F44  006F FF8C  F03D    	movff	plusw1,btemp+11
 11965  010F4A  0E40               	movlw	low _dbuf
 11966  010F4C  243C               	addwf	(btemp+10)^0,w,c
 11967  010F4E  6ED9               	movwf	fsr2l,c
 11968  010F50  0E02               	movlw	high _dbuf
 11969  010F52  203D               	addwfc	(btemp+11)^0,w,c
 11970  010F54  6EDA               	movwf	fsr2h,c
 11971  010F56  0E00               	movlw	0
 11972  010F58  6EDF               	movwf	indf2,c
 11973                           
 11974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 11975                           ;stkvar	_nmode @ sp[(-56)+55]
 11976  010F5A  0EFF               	movlw	-1
 11977  010F5C  006F FF8C  F032    	movff	plusw1,btemp
 11978  010F62  0E65               	movlw	101
 11979  010F64  1832               	xorwf	btemp^0,w,c
 11980  010F66  A4D8               	btfss	status,2,c
 11981  010F68  EF16  F081         	goto	l10462
 11982                           
 11983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 11984  010F6C  0E4F               	movlw	79
 11985  010F6E  6E3C               	movwf	(btemp+10)^0,c
 11986  010F70  0E00               	movlw	0
 11987  010F72  6E3D               	movwf	(btemp+11)^0,c
 11988                           
 11989                           ;stkvar	_i @ sp[(-56)+36]
 11990  010F74  0EEC               	movlw	-20
 11991  010F76  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 11992  010F7C  0EED               	movlw	-19
 11993  010F7E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 11994                           
 11995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 11996                           ;stkvar	_i @ sp[(-56)+36]
 11997  010F84  0EEC               	movlw	-20
 11998  010F86  006F FF8C  F03C    	movff	plusw1,btemp+10
 11999  010F8C  0EED               	movlw	-19
 12000  010F8E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12001  010F94  0E40               	movlw	low _dbuf
 12002  010F96  243C               	addwf	(btemp+10)^0,w,c
 12003  010F98  6ED9               	movwf	fsr2l,c
 12004  010F9A  0E02               	movlw	high _dbuf
 12005  010F9C  203D               	addwfc	(btemp+11)^0,w,c
 12006  010F9E  6EDA               	movwf	fsr2h,c
 12007  010FA0  0E00               	movlw	0
 12008  010FA2  6EDF               	movwf	indf2,c
 12009                           
 12010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 12011                           ;stkvar	_sign @ sp[(-56)+42]
 12012  010FA4  0EF2               	movlw	-14
 12013  010FA6  6AE3               	clrf	plusw1,c
 12014  010FA8  0EF3               	movlw	-13
 12015  010FAA  6AE3               	clrf	plusw1,c
 12016                           
 12017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 12018                           ;stkvar	_e @ sp[(-56)+34]
 12019  010FAC  0EEB               	movlw	-21
 12020  010FAE  AEE3               	btfss	plusw1,7,c
 12021  010FB0  D012               	goto	l10672
 12022                           
 12023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 12024  010FB2  0E01               	movlw	1
 12025  010FB4  6E3C               	movwf	(btemp+10)^0,c
 12026  010FB6  0E00               	movlw	0
 12027  010FB8  6E3D               	movwf	(btemp+11)^0,c
 12028                           
 12029                           ;stkvar	_sign @ sp[(-56)+42]
 12030  010FBA  0EF2               	movlw	-14
 12031  010FBC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12032  010FC2  0EF3               	movlw	-13
 12033  010FC4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12034                           
 12035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 12036                           ;stkvar	_e @ sp[(-56)+34]
 12037                           ;stkvar	_e @ sp[(-56)+34]
 12038  010FCA  0EEA               	movlw	-22
 12039  010FCC  6CE3               	negf	plusw1,c
 12040  010FCE  0EEB               	movlw	-21
 12041  010FD0  1EE3               	comf	plusw1,f,c
 12042  010FD2  B0D8               	btfsc	status,0,c
 12043  010FD4  2AE3               	incf	plusw1,f,c
 12044  010FD6                     l10672:
 12045                           
 12046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 12047  010FD6  0E02               	movlw	2
 12048  010FD8  6E3C               	movwf	(btemp+10)^0,c
 12049  010FDA  0E00               	movlw	0
 12050  010FDC  6E3D               	movwf	(btemp+11)^0,c
 12051                           
 12052                           ;stkvar	_p @ sp[(-56)+40]
 12053  010FDE  0EF0               	movlw	-16
 12054  010FE0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12055  010FE6  0EF1               	movlw	-15
 12056  010FE8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12057                           
 12058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12059  010FEE  D051               	goto	l10684
 12060  010FF0                     l10674:
 12061                           
 12062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 12063                           ;stkvar	_i @ sp[(-56)+36]
 12064  010FF0  50E1               	movf	fsr1l,w,c
 12065  010FF2  0FEC               	addlw	-20
 12066  010FF4  6ED9               	movwf	fsr2l,c
 12067  010FF6  50E2               	movf	fsr1h,w,c
 12068  010FF8  6EDA               	movwf	fsr2h,c
 12069  010FFA  0EFF               	movlw	255
 12070  010FFC  22DA               	addwfc	fsr2h,f,c
 12071  010FFE  06DE               	decf	postinc2,f,c
 12072  011000  0E00               	movlw	0
 12073  011002  5ADD               	subwfb	postdec2,f,c
 12074                           
 12075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 12076                           ;stkvar	_i @ sp[(-56)+36]
 12077  011004  0EEC               	movlw	-20
 12078  011006  006F FF8C  F03C    	movff	plusw1,btemp+10
 12079  01100C  0EED               	movlw	-19
 12080  01100E  006F FF8C  F03D    	movff	plusw1,btemp+11
 12081  011014  0E40               	movlw	low _dbuf
 12082  011016  243C               	addwf	(btemp+10)^0,w,c
 12083  011018  6ED9               	movwf	fsr2l,c
 12084  01101A  0E02               	movlw	high _dbuf
 12085  01101C  203D               	addwfc	(btemp+11)^0,w,c
 12086  01101E  6EDA               	movwf	fsr2h,c
 12087  011020  0E0A               	movlw	10
 12088  011022  6EE6               	movwf	postinc1,c
 12089  011024  0E00               	movlw	0
 12090  011026  6EE6               	movwf	postinc1,c
 12091                           
 12092                           ;stkvar	_e @ sp[(-58)+34]
 12093  011028  0EE8               	movlw	-24
 12094  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 12095  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 12096  011036  EC1E  F0B3         	call	___awmod	;wreg free
 12097  01103A  5032               	movf	btemp^0,w,c
 12098  01103C  0F30               	addlw	48
 12099  01103E  6EDF               	movwf	indf2,c
 12100                           
 12101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 12102  011040  0E0A               	movlw	10
 12103  011042  6EE6               	movwf	postinc1,c
 12104  011044  0E00               	movlw	0
 12105  011046  6EE6               	movwf	postinc1,c
 12106                           
 12107                           ;stkvar	_e @ sp[(-58)+34]
 12108  011048  0EE8               	movlw	-24
 12109  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 12110  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 12111  011056  ECAA  F0B0         	call	___awdiv	;wreg free
 12112                           
 12113                           ;stkvar	_e @ sp[(-56)+34]
 12114  01105A  0EEA               	movlw	-22
 12115  01105C  0060  F0CB  FFE3   	movff	btemp,plusw1
 12116  011062  0EEB               	movlw	-21
 12117  011064  0060  F0CF  FFE3   	movff	btemp+1,plusw1
 12118                           
 12119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 12120                           ;stkvar	_p @ sp[(-56)+40]
 12121  01106A  50E1               	movf	fsr1l,w,c
 12122  01106C  0FF0               	addlw	-16
 12123  01106E  6ED9               	movwf	fsr2l,c
 12124  011070  50E2               	movf	fsr1h,w,c
 12125  011072  6EDA               	movwf	fsr2h,c
 12126  011074  0EFF               	movlw	255
 12127  011076  22DA               	addwfc	fsr2h,f,c
 12128  011078  06DE               	decf	postinc2,f,c
 12129  01107A  0E00               	movlw	0
 12130  01107C  5ADD               	subwfb	postdec2,f,c
 12131                           
 12132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 12133                           ;stkvar	_w @ sp[(-56)+38]
 12134  01107E  50E1               	movf	fsr1l,w,c
 12135  011080  0FEE               	addlw	-18
 12136  011082  6ED9               	movwf	fsr2l,c
 12137  011084  50E2               	movf	fsr1h,w,c
 12138  011086  6EDA               	movwf	fsr2h,c
 12139  011088  0EFF               	movlw	255
 12140  01108A  22DA               	addwfc	fsr2h,f,c
 12141  01108C  06DE               	decf	postinc2,f,c
 12142  01108E  0E00               	movlw	0
 12143  011090  5ADD               	subwfb	postdec2,f,c
 12144  011092                     l10684:
 12145                           
 12146                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12147                           ;stkvar	_e @ sp[(-56)+34]
 12148  011092  0EEA               	movlw	-22
 12149  011094  006F FF8C  F032    	movff	plusw1,btemp
 12150  01109A  0EEB               	movlw	-21
 12151  01109C  50E3               	movf	plusw1,w,c
 12152  01109E  1032               	iorwf	btemp^0,w,c
 12153  0110A0  A4D8               	btfss	status,2,c
 12154  0110A2  D7A6               	goto	l10674
 12155                           
 12156                           ;stkvar	_p @ sp[(-56)+40]
 12157  0110A4  0EF1               	movlw	-15
 12158  0110A6  BEE3               	btfsc	plusw1,7,c
 12159  0110A8  D007               	goto	u11360
 12160  0110AA  0EF1               	movlw	-15
 12161  0110AC  50E3               	movf	plusw1,w,c
 12162  0110AE  E1A0               	bnz	l10674
 12163  0110B0  0EF0               	movlw	-16
 12164  0110B2  04E3               	decf	plusw1,w,c
 12165  0110B4  B0D8               	btfsc	status,0,c
 12166  0110B6  D79C               	goto	l10674
 12167  0110B8                     u11360:
 12168                           
 12169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 12170                           ;stkvar	_i @ sp[(-56)+36]
 12171  0110B8  50E1               	movf	fsr1l,w,c
 12172  0110BA  0FEC               	addlw	-20
 12173  0110BC  6ED9               	movwf	fsr2l,c
 12174  0110BE  50E2               	movf	fsr1h,w,c
 12175  0110C0  6EDA               	movwf	fsr2h,c
 12176  0110C2  0EFF               	movlw	255
 12177  0110C4  22DA               	addwfc	fsr2h,f,c
 12178  0110C6  06DE               	decf	postinc2,f,c
 12179  0110C8  0E00               	movlw	0
 12180  0110CA  5ADD               	subwfb	postdec2,f,c
 12181                           
 12182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 12183                           ;stkvar	_sign @ sp[(-56)+42]
 12184  0110CC  0EF2               	movlw	-14
 12185  0110CE  006F FF8C  F032    	movff	plusw1,btemp
 12186  0110D4  0EF3               	movlw	-13
 12187  0110D6  50E3               	movf	plusw1,w,c
 12188  0110D8  1032               	iorwf	btemp^0,w,c
 12189  0110DA  A4D8               	btfss	status,2,c
 12190  0110DC  D002               	goto	l10694
 12191  0110DE  0E2B               	movlw	43
 12192  0110E0  D001               	goto	L10
 12193  0110E2                     l10694:
 12194  0110E2  0E2D               	movlw	45
 12195  0110E4                     L10:
 12196  0110E4  6E3C               	movwf	(btemp+10)^0,c
 12197  0110E6  0E00               	movlw	0
 12198  0110E8  6E3D               	movwf	(btemp+11)^0,c
 12199                           
 12200                           ;stkvar	_efgtoa$4388 @ sp[(-56)+4]
 12201  0110EA  0ECC               	movlw	-52
 12202  0110EC  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12203  0110F2  0ECD               	movlw	-51
 12204  0110F4  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12205                           
 12206                           ;stkvar	_efgtoa$4388 @ sp[(-56)+4]
 12207                           ;stkvar	_i @ sp[(-56)+36]
 12208  0110FA  0EEC               	movlw	-20
 12209  0110FC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12210  011102  0EED               	movlw	-19
 12211  011104  006F FF8C  F03D    	movff	plusw1,btemp+11
 12212  01110A  0E40               	movlw	low _dbuf
 12213  01110C  243C               	addwf	(btemp+10)^0,w,c
 12214  01110E  6ED9               	movwf	fsr2l,c
 12215  011110  0E02               	movlw	high _dbuf
 12216  011112  203D               	addwfc	(btemp+11)^0,w,c
 12217  011114  6EDA               	movwf	fsr2h,c
 12218  011116  0ECC               	movlw	-52
 12219  011118  006F FF8F FFDF     	movff	plusw1,indf2
 12220                           
 12221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 12222                           ;stkvar	_w @ sp[(-56)+38]
 12223  01111E  50E1               	movf	fsr1l,w,c
 12224  011120  0FEE               	addlw	-18
 12225  011122  6ED9               	movwf	fsr2l,c
 12226  011124  50E2               	movf	fsr1h,w,c
 12227  011126  6EDA               	movwf	fsr2h,c
 12228  011128  0EFF               	movlw	255
 12229  01112A  22DA               	addwfc	fsr2h,f,c
 12230  01112C  06DE               	decf	postinc2,f,c
 12231  01112E  0E00               	movlw	0
 12232  011130  5ADD               	subwfb	postdec2,f,c
 12233                           
 12234                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 12235                           ;stkvar	_i @ sp[(-56)+36]
 12236  011132  50E1               	movf	fsr1l,w,c
 12237  011134  0FEC               	addlw	-20
 12238  011136  6ED9               	movwf	fsr2l,c
 12239  011138  50E2               	movf	fsr1h,w,c
 12240  01113A  6EDA               	movwf	fsr2h,c
 12241  01113C  0EFF               	movlw	255
 12242  01113E  22DA               	addwfc	fsr2h,f,c
 12243  011140  06DE               	decf	postinc2,f,c
 12244  011142  0E00               	movlw	0
 12245  011144  5ADD               	subwfb	postdec2,f,c
 12246  011146  0EBF               	movlw	191
 12247  011148  6E3C               	movwf	(btemp+10)^0,c
 12248  01114A  0EFF               	movlw	255
 12249  01114C  6E3D               	movwf	(btemp+11)^0,c
 12250                           
 12251                           ;stkvar	_c @ sp[(-56)+-7]
 12252  01114E  0EC1               	movlw	-63
 12253  011150  50E3               	movf	plusw1,w,c
 12254  011152  6E3A               	movwf	(btemp+8)^0,c
 12255  011154  6A3B               	clrf	(btemp+9)^0,c
 12256  011156  503C               	movf	(btemp+10)^0,w,c
 12257  011158  263A               	addwf	(btemp+8)^0,f,c
 12258  01115A  503D               	movf	(btemp+11)^0,w,c
 12259  01115C  223B               	addwfc	(btemp+9)^0,f,c
 12260  01115E  503B               	movf	(btemp+9)^0,w,c
 12261  011160  E106               	bnz	u11380
 12262  011162  0E1A               	movlw	26
 12263  011164  5C3A               	subwf	(btemp+8)^0,w,c
 12264  011166  B0D8               	btfsc	status,0,c
 12265  011168  D002               	goto	u11380
 12266  01116A  0E01               	movlw	1
 12267  01116C  D001               	goto	u11390
 12268  01116E                     u11380:
 12269  01116E  0E00               	movlw	0
 12270  011170                     u11390:
 12271  011170  6E3C               	movwf	(btemp+10)^0,c
 12272  011172  6A3D               	clrf	(btemp+11)^0,c
 12273                           
 12274                           ;stkvar	_efgtoa$4390 @ sp[(-56)+0]
 12275  011174  0EC8               	movlw	-56
 12276  011176  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12277  01117C  0EC9               	movlw	-55
 12278  01117E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12279                           
 12280                           ;stkvar	_efgtoa$4390 @ sp[(-56)+0]
 12281  011184  0EC8               	movlw	-56
 12282  011186  006F FF8C  F032    	movff	plusw1,btemp
 12283  01118C  0EC9               	movlw	-55
 12284  01118E  50E3               	movf	plusw1,w,c
 12285  011190  1032               	iorwf	btemp^0,w,c
 12286  011192  A4D8               	btfss	status,2,c
 12287  011194  D002               	goto	l10710
 12288  011196  0E65               	movlw	101
 12289  011198  D001               	goto	L11
 12290  01119A                     l10710:
 12291  01119A  0E45               	movlw	69
 12292  01119C                     L11:
 12293  01119C  6E3C               	movwf	(btemp+10)^0,c
 12294  01119E  0E00               	movlw	0
 12295  0111A0  6E3D               	movwf	(btemp+11)^0,c
 12296                           
 12297                           ;stkvar	_efgtoa$4389 @ sp[(-56)+2]
 12298  0111A2  0ECA               	movlw	-54
 12299  0111A4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12300  0111AA  0ECB               	movlw	-53
 12301  0111AC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12302                           
 12303                           ;stkvar	_efgtoa$4389 @ sp[(-56)+2]
 12304                           ;stkvar	_i @ sp[(-56)+36]
 12305  0111B2  0EEC               	movlw	-20
 12306  0111B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 12307  0111BA  0EED               	movlw	-19
 12308  0111BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12309  0111C2  0E40               	movlw	low _dbuf
 12310  0111C4  243C               	addwf	(btemp+10)^0,w,c
 12311  0111C6  6ED9               	movwf	fsr2l,c
 12312  0111C8  0E02               	movlw	high _dbuf
 12313  0111CA  203D               	addwfc	(btemp+11)^0,w,c
 12314  0111CC  6EDA               	movwf	fsr2h,c
 12315  0111CE  0ECA               	movlw	-54
 12316  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 12317                           
 12318                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 12319                           ;stkvar	_w @ sp[(-56)+38]
 12320  0111D6  50E1               	movf	fsr1l,w,c
 12321  0111D8  0FEE               	addlw	-18
 12322  0111DA  6ED9               	movwf	fsr2l,c
 12323  0111DC  50E2               	movf	fsr1h,w,c
 12324  0111DE  6EDA               	movwf	fsr2h,c
 12325  0111E0  0EFF               	movlw	255
 12326  0111E2  22DA               	addwfc	fsr2h,f,c
 12327  0111E4  06DE               	decf	postinc2,f,c
 12328  0111E6  0E00               	movlw	0
 12329  0111E8  5ADD               	subwfb	postdec2,f,c
 12330                           
 12331                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 12332                           ;stkvar	_i @ sp[(-56)+36]
 12333  0111EA  0EEC               	movlw	-20
 12334  0111EC  006F FF8C  F03C    	movff	plusw1,btemp+10
 12335  0111F2  0EED               	movlw	-19
 12336  0111F4  006F FF8C  F03D    	movff	plusw1,btemp+11
 12337  0111FA  0E40               	movlw	low _dbuf
 12338  0111FC  243C               	addwf	(btemp+10)^0,w,c
 12339  0111FE  6E3A               	movwf	(btemp+8)^0,c
 12340  011200  0E02               	movlw	high _dbuf
 12341  011202  203D               	addwfc	(btemp+11)^0,w,c
 12342  011204  6E3B               	movwf	(btemp+9)^0,c
 12343  011206  0060  F0EB  FFE6   	movff	btemp+8,postinc1
 12344  01120C  0060  F0EF  FFE6   	movff	btemp+9,postinc1
 12345                           
 12346                           ;stkvar	_n @ sp[(-58)+32]
 12347  011212  0E40               	movlw	low _dbuf
 12348  011214  6E3C               	movwf	(btemp+10)^0,c
 12349  011216  0E02               	movlw	high _dbuf
 12350  011218  6E3D               	movwf	(btemp+11)^0,c
 12351  01121A  0EE6               	movlw	-26
 12352  01121C  50E3               	movf	plusw1,w,c
 12353  01121E  263C               	addwf	(btemp+10)^0,f,c
 12354  011220  0EE7               	movlw	-25
 12355  011222  50E3               	movf	plusw1,w,c
 12356  011224  223D               	addwfc	(btemp+11)^0,f,c
 12357  011226  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 12358  01122C  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 12359  011232  EC2F  F0B6         	call	_strcpy	;wreg free
 12360  011236  EF16  F081         	goto	l10462
 12361  01123A                     l1871:
 12362                           
 12363                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 12364  01123A  0EC1               	movlw	193
 12365  01123C  26E1               	addwf	fsr1l,f,c
 12366  01123E  0EFF               	movlw	255
 12367  011240  22E2               	addwfc	fsr1h,f,c
 12368  011242  0012               	return		;funcret
 12369  011244                     __end_of_efgtoa:
 12370                           	opt callstack 0
 12371                           
 12372 ;; *************** function _tolower *****************
 12373 ;; Defined at:
 12374 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 12375 ;; Parameters:    Size  Location     Type
 12376 ;;  c               2  [STACK] int 
 12377 ;; Auto vars:     Size  Location     Type
 12378 ;;		None
 12379 ;; Return value:  Size  Location     Type
 12380 ;;                  2  [STACK] int 
 12381 ;; Registers used:
 12382 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 12383 ;; Tracked objects:
 12384 ;;		On entry : 0/5
 12385 ;;		On exit  : 0/0
 12386 ;;		Unchanged: 0/0
 12387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12392 ;;Total ram usage:        0 bytes
 12393 ;; Hardware stack levels used:    1
 12394 ;; Hardware stack levels required when called:    7
 12395 ;; This function calls:
 12396 ;;		_isupper
 12397 ;; This function is called by:
 12398 ;;		_efgtoa
 12399 ;;		_vfpfcnvrt
 12400 ;; This function uses a reentrant model
 12401 ;;
 12402                           
 12403                           	psect	text45
 12404  017414                     __ptext45:
 12405                           	opt callstack 0
 12406  017414                     _tolower:
 12407                           	opt callstack 0
 12408                           
 12409                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12410  017414  52E6               	movf	postinc1,f,c
 12411  017416  52E6               	movf	postinc1,f,c
 12412                           
 12413                           ;stkvar	_c @ sp[(-2)+-2]
 12414                           
 12415                           ;incstack = 0
 12416  017418  0EFC               	movlw	-4
 12417  01741A  50E3               	movf	plusw1,w,c
 12418  01741C  0FBF               	addlw	191
 12419  01741E  6E3C               	movwf	(btemp+10)^0,c
 12420  017420  0EFD               	movlw	-3
 12421  017422  006F FF8C  F03D    	movff	plusw1,btemp+11
 12422  017428  0EFF               	movlw	255
 12423  01742A  223D               	addwfc	(btemp+11)^0,f,c
 12424  01742C  503D               	movf	(btemp+11)^0,w,c
 12425  01742E  E106               	bnz	u9470
 12426  017430  0E1A               	movlw	26
 12427  017432  5C3C               	subwf	(btemp+10)^0,w,c
 12428  017434  B0D8               	btfsc	status,0,c
 12429  017436  D002               	goto	u9470
 12430  017438  0E01               	movlw	1
 12431  01743A  D001               	goto	u9480
 12432  01743C                     u9470:
 12433  01743C  0E00               	movlw	0
 12434  01743E                     u9480:
 12435  01743E  6E3C               	movwf	(btemp+10)^0,c
 12436  017440  6A3D               	clrf	(btemp+11)^0,c
 12437                           
 12438                           ;stkvar	_tolower$5056 @ sp[(-2)+0]
 12439  017442  0EFE               	movlw	-2
 12440  017444  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12441  01744A  0EFF               	movlw	-1
 12442  01744C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12443                           
 12444                           ;stkvar	_tolower$5056 @ sp[(-2)+0]
 12445  017452  0EFE               	movlw	-2
 12446  017454  006F FF8C  F032    	movff	plusw1,btemp
 12447  01745A  0EFF               	movlw	-1
 12448  01745C  50E3               	movf	plusw1,w,c
 12449  01745E  1032               	iorwf	btemp^0,w,c
 12450  017460  B4D8               	btfsc	status,2,c
 12451  017462  D00D               	goto	l9688
 12452                           
 12453                           ;stkvar	_c @ sp[(-2)+-2]
 12454  017464  0EFC               	movlw	-4
 12455  017466  006F FF8C  F032    	movff	plusw1,btemp
 12456  01746C  0EFD               	movlw	-3
 12457  01746E  006F FF8C  F033    	movff	plusw1,btemp+1
 12458  017474  0E20               	movlw	32
 12459  017476  1232               	iorwf	btemp^0,f,c
 12460  017478  0E00               	movlw	0
 12461  01747A  1233               	iorwf	(btemp+1)^0,f,c
 12462  01747C  D008               	goto	l2894
 12463  01747E                     l9688:
 12464                           
 12465                           ;stkvar	_c @ sp[(-2)+-2]
 12466  01747E  0EFC               	movlw	-4
 12467  017480  006F FF8C  F032    	movff	plusw1,btemp
 12468  017486  0EFD               	movlw	-3
 12469  017488  006F FF8C  F033    	movff	plusw1,btemp+1
 12470  01748E                     l2894:
 12471                           
 12472                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12473  01748E  52E5               	movf	postdec1,f,c
 12474  017490  52E5               	movf	postdec1,f,c
 12475  017492  52E5               	movf	postdec1,f,c
 12476  017494  52E5               	movf	postdec1,f,c
 12477  017496  0012               	return		;funcret
 12478  017498                     __end_of_tolower:
 12479                           	opt callstack 0
 12480                           
 12481 ;; *************** function _isupper *****************
 12482 ;; Defined at:
 12483 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 12484 ;; Parameters:    Size  Location     Type
 12485 ;;  c               2  [STACK] int 
 12486 ;; Auto vars:     Size  Location     Type
 12487 ;;		None
 12488 ;; Return value:  Size  Location     Type
 12489 ;;                  2  [STACK] int 
 12490 ;; Registers used:
 12491 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 12492 ;; Tracked objects:
 12493 ;;		On entry : 0/0
 12494 ;;		On exit  : 0/0
 12495 ;;		Unchanged: 0/0
 12496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12501 ;;Total ram usage:        0 bytes
 12502 ;; Hardware stack levels used:    1
 12503 ;; Hardware stack levels required when called:    6
 12504 ;; This function calls:
 12505 ;;		Nothing
 12506 ;; This function is called by:
 12507 ;;		_efgtoa
 12508 ;;		_xtoa
 12509 ;;		_vfpfcnvrt
 12510 ;;		_tolower
 12511 ;; This function uses a reentrant model
 12512 ;;
 12513                           
 12514                           	psect	text46
 12515  017EF2                     __ptext46:
 12516                           	opt callstack 0
 12517  017EF2                     _isupper:
 12518                           	opt callstack 17
 12519                           
 12520                           ;stkvar	_c @ sp[(0)+-2]
 12521                           
 12522                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12523                           ;incstack = 0
 12524  017EF2  0EFE               	movlw	-2
 12525  017EF4  50E3               	movf	plusw1,w,c
 12526  017EF6  0FBF               	addlw	191
 12527  017EF8  6E3C               	movwf	(btemp+10)^0,c
 12528  017EFA  0EFF               	movlw	-1
 12529  017EFC  006F FF8C  F03D    	movff	plusw1,btemp+11
 12530  017F02  0EFF               	movlw	255
 12531  017F04  223D               	addwfc	(btemp+11)^0,f,c
 12532  017F06  503D               	movf	(btemp+11)^0,w,c
 12533  017F08  E106               	bnz	u8870
 12534  017F0A  0E1A               	movlw	26
 12535  017F0C  5C3C               	subwf	(btemp+10)^0,w,c
 12536  017F0E  B0D8               	btfsc	status,0,c
 12537  017F10  D002               	goto	u8870
 12538  017F12  0E01               	movlw	1
 12539  017F14  D001               	goto	u8880
 12540  017F16                     u8870:
 12541  017F16  0E00               	movlw	0
 12542  017F18                     u8880:
 12543  017F18  6E32               	movwf	btemp^0,c
 12544  017F1A  6A33               	clrf	(btemp+1)^0,c
 12545                           
 12546                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 12547  017F1C  52E5               	movf	postdec1,f,c
 12548  017F1E  52E5               	movf	postdec1,f,c
 12549  017F20  0012               	return		;funcret
 12550  017F22                     __end_of_isupper:
 12551                           	opt callstack 0
 12552                           
 12553 ;; *************** function _strcpy *****************
 12554 ;; Defined at:
 12555 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 12556 ;; Parameters:    Size  Location     Type
 12557 ;;  dest            2  [STACK] PTR unsigned char 
 12558 ;;		 -> dbuf(80), 
 12559 ;;  src             2  [STACK] PTR const unsigned char 
 12560 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 12561 ;;		 -> dbuf(80), 
 12562 ;; Auto vars:     Size  Location     Type
 12563 ;;  d               2  [STACK] PTR unsigned char 
 12564 ;;		 -> dbuf(80), 
 12565 ;;  s               2  [STACK] PTR const unsigned char 
 12566 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 12567 ;;		 -> dbuf(80), 
 12568 ;; Return value:  Size  Location     Type
 12569 ;;                  2  [STACK] PTR unsigned char 
 12570 ;; Registers used:
 12571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 12572 ;; Tracked objects:
 12573 ;;		On entry : 0/5
 12574 ;;		On exit  : 0/0
 12575 ;;		Unchanged: 0/0
 12576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12581 ;;Total ram usage:        0 bytes
 12582 ;; Hardware stack levels used:    1
 12583 ;; Hardware stack levels required when called:    6
 12584 ;; This function calls:
 12585 ;;		Nothing
 12586 ;; This function is called by:
 12587 ;;		_efgtoa
 12588 ;; This function uses a reentrant model
 12589 ;;
 12590                           
 12591                           	psect	text47
 12592  016C5E                     __ptext47:
 12593                           	opt callstack 0
 12594  016C5E                     _strcpy:
 12595                           	opt callstack 0
 12596                           
 12597                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12598  016C5E  52E6               	movf	postinc1,f,c
 12599  016C60  52E6               	movf	postinc1,f,c
 12600  016C62  52E6               	movf	postinc1,f,c
 12601  016C64  52E6               	movf	postinc1,f,c
 12602                           
 12603                           ;stkvar	_src @ sp[(-4)+-4]
 12604                           
 12605                           ;incstack = 0
 12606  016C66  0EF8               	movlw	-8
 12607  016C68  006F FF8C  F03C    	movff	plusw1,btemp+10
 12608  016C6E  0EF9               	movlw	-7
 12609  016C70  006F FF8C  F03D    	movff	plusw1,btemp+11
 12610                           
 12611                           ;stkvar	_s @ sp[(-4)+2]
 12612  016C76  0EFF               	movlw	-1
 12613  016C78  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12614  016C7E  0EFE               	movlw	-2
 12615  016C80  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12616                           
 12617                           ;stkvar	_dest @ sp[(-4)+-2]
 12618  016C86  0EFA               	movlw	-6
 12619  016C88  006F FF8C  F03C    	movff	plusw1,btemp+10
 12620  016C8E  0EFB               	movlw	-5
 12621  016C90  006F FF8C  F03D    	movff	plusw1,btemp+11
 12622                           
 12623                           ;stkvar	_d @ sp[(-4)+0]
 12624  016C96  0EFD               	movlw	-3
 12625  016C98  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12626  016C9E  0EFC               	movlw	-4
 12627  016CA0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12628  016CA6                     l9676:
 12629                           
 12630                           ;stkvar	_s @ sp[(-4)+2]
 12631  016CA6  50E1               	movf	fsr1l,w,c
 12632  016CA8  0FFE               	addlw	-2
 12633  016CAA  6ED9               	movwf	fsr2l,c
 12634  016CAC  50E2               	movf	fsr1h,w,c
 12635  016CAE  6EDA               	movwf	fsr2h,c
 12636  016CB0  0EFF               	movlw	255
 12637  016CB2  22DA               	addwfc	fsr2h,f,c
 12638  016CB4  006F FF7C  F03C    	movff	indf2,btemp+10
 12639  016CBA  0E01               	movlw	1
 12640  016CBC  26DE               	addwf	postinc2,f,c
 12641  016CBE  006F FF7C  F03D    	movff	indf2,btemp+11
 12642  016CC4  0E00               	movlw	0
 12643  016CC6  22DD               	addwfc	postdec2,f,c
 12644  016CC8  0060  F0F3  FFF6   	movff	btemp+10,tblptrl
 12645  016CCE  0060  F0F7  FFF7   	movff	btemp+11,tblptrh
 12646  016CD4  0E00               	movlw	low (__mediumconst shr (0+16))
 12647  016CD6  6EF8               	movwf	tblptru,c
 12648                           
 12649                           ;stkvar	_d @ sp[(-4)+0]
 12650  016CD8  50E1               	movf	fsr1l,w,c
 12651  016CDA  0FFC               	addlw	-4
 12652  016CDC  6ED9               	movwf	fsr2l,c
 12653  016CDE  50E2               	movf	fsr1h,w,c
 12654  016CE0  6EDA               	movwf	fsr2h,c
 12655  016CE2  0EFF               	movlw	255
 12656  016CE4  22DA               	addwfc	fsr2h,f,c
 12657  016CE6  006F FF7C  F03C    	movff	indf2,btemp+10
 12658  016CEC  0E01               	movlw	1
 12659  016CEE  26DE               	addwf	postinc2,f,c
 12660  016CF0  006F FF7C  F03D    	movff	indf2,btemp+11
 12661  016CF6  0E00               	movlw	0
 12662  016CF8  22DD               	addwfc	postdec2,f,c
 12663  016CFA  0060  F0F3  FFD9   	movff	btemp+10,fsr2l
 12664  016D00  0060  F0F7  FFDA   	movff	btemp+11,fsr2h
 12665  016D06  0E1F               	movlw	(high __ramtop+-1)
 12666  016D08  64F7               	cpfsgt	tblptrh,c
 12667  016D0A  D003               	bra	u9457
 12668  016D0C  0008               	tblrd		*
 12669  016D0E  50F5               	movf	tablat,w,c
 12670  016D10  D007               	bra	u9450
 12671  016D12                     u9457:
 12672  016D12  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12673  016D18  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12674  016D1E  50EF               	movf	indf0,w,c
 12675  016D20                     u9450:
 12676  016D20  6EDF               	movwf	indf2,c
 12677  016D22  50DF               	movf	indf2,w,c
 12678  016D24  A4D8               	btfss	status,2,c
 12679  016D26  D7BF               	goto	l9676
 12680                           
 12681                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 12682  016D28  0EF8               	movlw	248
 12683  016D2A  26E1               	addwf	fsr1l,f,c
 12684  016D2C  0EFF               	movlw	255
 12685  016D2E  22E2               	addwfc	fsr1h,f,c
 12686  016D30  0012               	return		;funcret
 12687  016D32                     __end_of_strcpy:
 12688                           	opt callstack 0
 12689                           
 12690 ;; *************** function _floorf *****************
 12691 ;; Defined at:
 12692 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 12693 ;; Parameters:    Size  Location     Type
 12694 ;;  x               4  [STACK] float 
 12695 ;; Auto vars:     Size  Location     Type
 12696 ;;  u               4  [STACK] struct .
 12697 ;;  m               4  [STACK] unsigned long 
 12698 ;;  e               2  [STACK] int 
 12699 ;; Return value:  Size  Location     Type
 12700 ;;                  4  [STACK] float 
 12701 ;; Registers used:
 12702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 12703 ;; Tracked objects:
 12704 ;;		On entry : 0/5
 12705 ;;		On exit  : 0/0
 12706 ;;		Unchanged: 0/0
 12707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12712 ;;Total ram usage:        0 bytes
 12713 ;; Hardware stack levels used:    1
 12714 ;; Hardware stack levels required when called:    6
 12715 ;; This function calls:
 12716 ;;		Nothing
 12717 ;; This function is called by:
 12718 ;;		_efgtoa
 12719 ;; This function uses a reentrant model
 12720 ;;
 12721                           
 12722                           	psect	text48
 12723  0144EC                     __ptext48:
 12724                           	opt callstack 0
 12725  0144EC                     _floorf:
 12726                           	opt callstack 0
 12727                           
 12728                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 12729  0144EC  0E0A               	movlw	10
 12730  0144EE  26E1               	addwf	fsr1l,f,c
 12731  0144F0  0E00               	movlw	0
 12732  0144F2  22E2               	addwfc	fsr1h,f,c
 12733                           
 12734                           ;incstack = 0
 12735  0144F4  0060  F2B4  F03A   	movff	floorf@F524,btemp+8
 12736  0144FA  0060  F2B8  F03B   	movff	floorf@F524+1,btemp+9
 12737  014500  0060  F2BC  F03C   	movff	floorf@F524+2,btemp+10
 12738  014506  0060  F2C0  F03D   	movff	floorf@F524+3,btemp+11
 12739                           
 12740                           ;stkvar	_u @ sp[(-10)+0]
 12741  01450C  0EF6               	movlw	-10
 12742  01450E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12743  014514  0EF7               	movlw	-9
 12744  014516  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12745  01451C  0EF8               	movlw	-8
 12746  01451E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12747  014524  0EF9               	movlw	-7
 12748  014526  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12749                           
 12750                           ;stkvar	_x @ sp[(-10)+-4]
 12751  01452C  0EF2               	movlw	-14
 12752  01452E  006F FF8C  F03A    	movff	plusw1,btemp+8
 12753  014534  0EF3               	movlw	-13
 12754  014536  006F FF8C  F03B    	movff	plusw1,btemp+9
 12755  01453C  0EF4               	movlw	-12
 12756  01453E  006F FF8C  F03C    	movff	plusw1,btemp+10
 12757  014544  0EF5               	movlw	-11
 12758  014546  006F FF8C  F03D    	movff	plusw1,btemp+11
 12759                           
 12760                           ;stkvar	_u @ sp[(-10)+0]
 12761  01454C  0EF6               	movlw	-10
 12762  01454E  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12763  014554  0EF7               	movlw	-9
 12764  014556  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12765  01455C  0EF8               	movlw	-8
 12766  01455E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 12767  014564  0EF9               	movlw	-7
 12768  014566  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 12769  01456C  0E81               	movlw	129
 12770  01456E  6E3C               	movwf	(btemp+10)^0,c
 12771  014570  0EFF               	movlw	255
 12772  014572  6E3D               	movwf	(btemp+11)^0,c
 12773                           
 12774                           ;stkvar	_u @ sp[(-10)+0]
 12775  014574  0EF6               	movlw	-10
 12776  014576  006F FF8C  F036    	movff	plusw1,btemp+4
 12777  01457C  0EF7               	movlw	-9
 12778  01457E  006F FF8C  F037    	movff	plusw1,btemp+5
 12779  014584  0EF8               	movlw	-8
 12780  014586  006F FF8C  F038    	movff	plusw1,btemp+6
 12781  01458C  0EF9               	movlw	-7
 12782  01458E  006F FF8C  F039    	movff	plusw1,btemp+7
 12783  014594  0E18               	movlw	24
 12784  014596  D005               	goto	u9500
 12785  014598                     u9505:
 12786  014598  90D8               	bcf	status,0,c
 12787  01459A  3239               	rrcf	(btemp+7)^0,f,c
 12788  01459C  3238               	rrcf	(btemp+6)^0,f,c
 12789  01459E  3237               	rrcf	(btemp+5)^0,f,c
 12790  0145A0  3236               	rrcf	(btemp+4)^0,f,c
 12791  0145A2                     u9500:
 12792  0145A2  2EE8               	decfsz	wreg,f,c
 12793  0145A4  D7F9               	goto	u9505
 12794  0145A6  0060  F0D8  F03A   	movff	btemp+4,btemp+8
 12795  0145AC  0060  F0DC  F03B   	movff	btemp+5,btemp+9
 12796  0145B2  0EFF               	movlw	255
 12797  0145B4  163A               	andwf	(btemp+8)^0,f,c
 12798  0145B6  0E00               	movlw	0
 12799  0145B8  163B               	andwf	(btemp+9)^0,f,c
 12800  0145BA  503C               	movf	(btemp+10)^0,w,c
 12801  0145BC  263A               	addwf	(btemp+8)^0,f,c
 12802  0145BE  503D               	movf	(btemp+11)^0,w,c
 12803  0145C0  223B               	addwfc	(btemp+9)^0,f,c
 12804                           
 12805                           ;stkvar	_e @ sp[(-10)+8]
 12806  0145C2  0EFE               	movlw	-2
 12807  0145C4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 12808  0145CA  0EFF               	movlw	-1
 12809  0145CC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 12810                           
 12811                           ;stkvar	_e @ sp[(-10)+8]
 12812  0145D2  0EFF               	movlw	-1
 12813  0145D4  BEE3               	btfsc	plusw1,7,c
 12814  0145D6  D019               	goto	l9702
 12815  0145D8  0EFF               	movlw	-1
 12816  0145DA  50E3               	movf	plusw1,w,c
 12817  0145DC  E108               	bnz	u9510
 12818  0145DE  0EFE               	movlw	-2
 12819  0145E0  006F FF8C  F032    	movff	plusw1,btemp
 12820  0145E6  0E17               	movlw	23
 12821  0145E8  5E32               	subwf	btemp^0,f,c
 12822  0145EA  A0D8               	btfss	status,0,c
 12823  0145EC  D00E               	goto	l9702
 12824  0145EE                     u9510:
 12825                           
 12826                           ;stkvar	_x @ sp[(-10)+-4]
 12827  0145EE  0EF2               	movlw	-14
 12828  0145F0  006F FF8C  F032    	movff	plusw1,btemp
 12829  0145F6  0EF3               	movlw	-13
 12830  0145F8  006F FF8C  F033    	movff	plusw1,btemp+1
 12831  0145FE  0EF4               	movlw	-12
 12832  014600  006F FF8C  F034    	movff	plusw1,btemp+2
 12833  014606  0EF5               	movlw	-11
 12834  014608  D11F               	goto	L12
 12835  01460A                     l9702:
 12836                           
 12837                           ;stkvar	_e @ sp[(-10)+8]
 12838  01460A  0EFF               	movlw	-1
 12839  01460C  BEE3               	btfsc	plusw1,7,c
 12840  01460E  D0B4               	goto	l9718
 12841                           
 12842                           ;stkvar	_e @ sp[(-10)+8]
 12843  014610  0EFE               	movlw	-2
 12844  014612  006F FF8C  F03D    	movff	plusw1,btemp+11
 12845  014618  0EFF               	movlw	255
 12846  01461A  6E36               	movwf	(btemp+4)^0,c
 12847  01461C  0EFF               	movlw	255
 12848  01461E  6E37               	movwf	(btemp+5)^0,c
 12849  014620  0E7F               	movlw	127
 12850  014622  6E38               	movwf	(btemp+6)^0,c
 12851  014624  0E00               	movlw	0
 12852  014626  6E39               	movwf	(btemp+7)^0,c
 12853  014628                     u9535:
 12854  014628  663D               	tstfsz	(btemp+11)^0,c
 12855  01462A  D001               	goto	u9536
 12856  01462C  D007               	goto	u9537
 12857  01462E                     u9536:
 12858  01462E  3439               	rlcf	(btemp+7)^0,w,c
 12859  014630  3239               	rrcf	(btemp+7)^0,f,c
 12860  014632  3238               	rrcf	(btemp+6)^0,f,c
 12861  014634  3237               	rrcf	(btemp+5)^0,f,c
 12862  014636  3236               	rrcf	(btemp+4)^0,f,c
 12863  014638  2E3D               	decfsz	(btemp+11)^0,f,c
 12864  01463A  D7F6               	goto	u9535
 12865  01463C                     u9537:
 12866                           
 12867                           ;stkvar	_m @ sp[(-10)+4]
 12868  01463C  0EFA               	movlw	-6
 12869  01463E  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 12870  014644  0EFB               	movlw	-5
 12871  014646  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 12872  01464C  0EFC               	movlw	-4
 12873  01464E  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 12874  014654  0EFD               	movlw	-3
 12875  014656  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 12876                           
 12877                           ;stkvar	_m @ sp[(-10)+4]
 12878                           ;stkvar	_u @ sp[(-10)+0]
 12879  01465C  0EF6               	movlw	-10
 12880  01465E  006F FF8C  F03A    	movff	plusw1,btemp+8
 12881  014664  0EF7               	movlw	-9
 12882  014666  006F FF8C  F03B    	movff	plusw1,btemp+9
 12883  01466C  0EF8               	movlw	-8
 12884  01466E  006F FF8C  F03C    	movff	plusw1,btemp+10
 12885  014674  0EF9               	movlw	-7
 12886  014676  006F FF8C  F03D    	movff	plusw1,btemp+11
 12887  01467C  0EFA               	movlw	-6
 12888  01467E  50E3               	movf	plusw1,w,c
 12889  014680  163A               	andwf	(btemp+8)^0,f,c
 12890  014682  0EFB               	movlw	-5
 12891  014684  50E3               	movf	plusw1,w,c
 12892  014686  163B               	andwf	(btemp+9)^0,f,c
 12893  014688  0EFC               	movlw	-4
 12894  01468A  50E3               	movf	plusw1,w,c
 12895  01468C  163C               	andwf	(btemp+10)^0,f,c
 12896  01468E  0EFD               	movlw	-3
 12897  014690  50E3               	movf	plusw1,w,c
 12898  014692  163D               	andwf	(btemp+11)^0,f,c
 12899  014694  503A               	movf	(btemp+8)^0,w,c
 12900  014696  103B               	iorwf	(btemp+9)^0,w,c
 12901  014698  103C               	iorwf	(btemp+10)^0,w,c
 12902  01469A  103D               	iorwf	(btemp+11)^0,w,c
 12903  01469C  B4D8               	btfsc	status,2,c
 12904  01469E  D7A7               	goto	u9510
 12905                           
 12906                           ;stkvar	_u @ sp[(-10)+0]
 12907  0146A0  0EF6               	movlw	-10
 12908  0146A2  006F FF8C  F03A    	movff	plusw1,btemp+8
 12909  0146A8  0EF7               	movlw	-9
 12910  0146AA  006F FF8C  F03B    	movff	plusw1,btemp+9
 12911  0146B0  0EF8               	movlw	-8
 12912  0146B2  006F FF8C  F03C    	movff	plusw1,btemp+10
 12913  0146B8  0EF9               	movlw	-7
 12914  0146BA  006F FF8C  F03D    	movff	plusw1,btemp+11
 12915  0146C0  0E20               	movlw	32
 12916  0146C2  D005               	goto	u9550
 12917  0146C4                     u9555:
 12918  0146C4  90D8               	bcf	status,0,c
 12919  0146C6  323D               	rrcf	(btemp+11)^0,f,c
 12920  0146C8  323C               	rrcf	(btemp+10)^0,f,c
 12921  0146CA  323B               	rrcf	(btemp+9)^0,f,c
 12922  0146CC  323A               	rrcf	(btemp+8)^0,f,c
 12923  0146CE                     u9550:
 12924  0146CE  2EE8               	decfsz	wreg,f,c
 12925  0146D0  D7F9               	goto	u9555
 12926  0146D2  503A               	movf	(btemp+8)^0,w,c
 12927  0146D4  B4D8               	btfsc	status,2,c
 12928  0146D6  D028               	goto	l9716
 12929                           
 12930                           ;stkvar	_m @ sp[(-10)+4]
 12931                           ;stkvar	_u @ sp[(-10)+0]
 12932  0146D8  0EF6               	movlw	-10
 12933  0146DA  50E3               	movf	plusw1,w,c
 12934  0146DC  6E32               	movwf	btemp^0,c
 12935  0146DE  0EFA               	movlw	-6
 12936  0146E0  50E3               	movf	plusw1,w,c
 12937  0146E2  2632               	addwf	btemp^0,f,c
 12938  0146E4  0EF6               	movlw	-10
 12939  0146E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 12940  0146EC  0EF7               	movlw	-9
 12941  0146EE  50E3               	movf	plusw1,w,c
 12942  0146F0  6E32               	movwf	btemp^0,c
 12943  0146F2  0EFB               	movlw	-5
 12944  0146F4  50E3               	movf	plusw1,w,c
 12945  0146F6  2232               	addwfc	btemp^0,f,c
 12946  0146F8  0EF7               	movlw	-9
 12947  0146FA  0060  F0CB  FFE3   	movff	btemp,plusw1
 12948  014700  0EF8               	movlw	-8
 12949  014702  50E3               	movf	plusw1,w,c
 12950  014704  6E32               	movwf	btemp^0,c
 12951  014706  0EFC               	movlw	-4
 12952  014708  50E3               	movf	plusw1,w,c
 12953  01470A  2232               	addwfc	btemp^0,f,c
 12954  01470C  0EF8               	movlw	-8
 12955  01470E  0060  F0CB  FFE3   	movff	btemp,plusw1
 12956  014714  0EF9               	movlw	-7
 12957  014716  50E3               	movf	plusw1,w,c
 12958  014718  6E32               	movwf	btemp^0,c
 12959  01471A  0EFD               	movlw	-3
 12960  01471C  50E3               	movf	plusw1,w,c
 12961  01471E  2232               	addwfc	btemp^0,f,c
 12962  014720  0EF9               	movlw	-7
 12963  014722  0060  F0CB  FFE3   	movff	btemp,plusw1
 12964  014728                     l9716:
 12965                           
 12966                           ;stkvar	_m @ sp[(-10)+4]
 12967  014728  0EFA               	movlw	-6
 12968  01472A  006F FF8C  F03A    	movff	plusw1,btemp+8
 12969  014730  0EFB               	movlw	-5
 12970  014732  006F FF8C  F03B    	movff	plusw1,btemp+9
 12971  014738  0EFC               	movlw	-4
 12972  01473A  006F FF8C  F03C    	movff	plusw1,btemp+10
 12973  014740  0EFD               	movlw	-3
 12974  014742  006F FF8C  F03D    	movff	plusw1,btemp+11
 12975  014748  1C3A               	comf	(btemp+8)^0,w,c
 12976  01474A  6E36               	movwf	(btemp+4)^0,c
 12977  01474C  1C3B               	comf	(btemp+9)^0,w,c
 12978  01474E  6E37               	movwf	(btemp+5)^0,c
 12979  014750  1C3C               	comf	(btemp+10)^0,w,c
 12980  014752  6E38               	movwf	(btemp+6)^0,c
 12981  014754  1C3D               	comf	(btemp+11)^0,w,c
 12982  014756  6E39               	movwf	(btemp+7)^0,c
 12983                           
 12984                           ;stkvar	_u @ sp[(-10)+0]
 12985  014758  50E1               	movf	fsr1l,w,c
 12986  01475A  0FF6               	addlw	-10
 12987  01475C  6ED9               	movwf	fsr2l,c
 12988  01475E  50E2               	movf	fsr1h,w,c
 12989  014760  6EDA               	movwf	fsr2h,c
 12990  014762  0EFF               	movlw	255
 12991  014764  22DA               	addwfc	fsr2h,f,c
 12992  014766  5036               	movf	(btemp+4)^0,w,c
 12993  014768  16DE               	andwf	postinc2,f,c
 12994  01476A  5037               	movf	(btemp+5)^0,w,c
 12995  01476C  16DE               	andwf	postinc2,f,c
 12996  01476E  5038               	movf	(btemp+6)^0,w,c
 12997  014770  16DE               	andwf	postinc2,f,c
 12998  014772  5039               	movf	(btemp+7)^0,w,c
 12999  014774  16DE               	andwf	postinc2,f,c
 13000  014776  D05B               	goto	l9726
 13001  014778                     l9718:
 13002                           
 13003                           ;stkvar	_u @ sp[(-10)+0]
 13004  014778  0EF6               	movlw	-10
 13005  01477A  006F FF8C  F03A    	movff	plusw1,btemp+8
 13006  014780  0EF7               	movlw	-9
 13007  014782  006F FF8C  F03B    	movff	plusw1,btemp+9
 13008  014788  0EF8               	movlw	-8
 13009  01478A  006F FF8C  F03C    	movff	plusw1,btemp+10
 13010  014790  0EF9               	movlw	-7
 13011  014792  006F FF8C  F03D    	movff	plusw1,btemp+11
 13012  014798  0E20               	movlw	32
 13013  01479A  D005               	goto	u9570
 13014  01479C                     u9575:
 13015  01479C  90D8               	bcf	status,0,c
 13016  01479E  323D               	rrcf	(btemp+11)^0,f,c
 13017  0147A0  323C               	rrcf	(btemp+10)^0,f,c
 13018  0147A2  323B               	rrcf	(btemp+9)^0,f,c
 13019  0147A4  323A               	rrcf	(btemp+8)^0,f,c
 13020  0147A6                     u9570:
 13021  0147A6  2EE8               	decfsz	wreg,f,c
 13022  0147A8  D7F9               	goto	u9575
 13023  0147AA  663A               	tstfsz	(btemp+8)^0,c
 13024  0147AC  D009               	goto	l9722
 13025                           
 13026                           ;stkvar	_u @ sp[(-10)+0]
 13027  0147AE  0EF6               	movlw	-10
 13028  0147B0  6AE3               	clrf	plusw1,c
 13029  0147B2  0EF7               	movlw	-9
 13030  0147B4  6AE3               	clrf	plusw1,c
 13031  0147B6  0EF8               	movlw	-8
 13032  0147B8  6AE3               	clrf	plusw1,c
 13033  0147BA  0EF9               	movlw	-7
 13034  0147BC  6AE3               	clrf	plusw1,c
 13035  0147BE  D037               	goto	l9726
 13036  0147C0                     l9722:
 13037                           
 13038                           ;stkvar	_u @ sp[(-10)+0]
 13039  0147C0  0EF6               	movlw	-10
 13040  0147C2  006F FF8C  F03A    	movff	plusw1,btemp+8
 13041  0147C8  0EF7               	movlw	-9
 13042  0147CA  006F FF8C  F03B    	movff	plusw1,btemp+9
 13043  0147D0  0EF8               	movlw	-8
 13044  0147D2  006F FF8C  F03C    	movff	plusw1,btemp+10
 13045  0147D8  0EF9               	movlw	-7
 13046  0147DA  006F FF8C  F03D    	movff	plusw1,btemp+11
 13047  0147E0  90D8               	bcf	status,0,c
 13048  0147E2  343A               	rlcf	(btemp+8)^0,w,c
 13049  0147E4  6E36               	movwf	(btemp+4)^0,c
 13050  0147E6  343B               	rlcf	(btemp+9)^0,w,c
 13051  0147E8  6E37               	movwf	(btemp+5)^0,c
 13052  0147EA  343C               	rlcf	(btemp+10)^0,w,c
 13053  0147EC  6E38               	movwf	(btemp+6)^0,c
 13054  0147EE  343D               	rlcf	(btemp+11)^0,w,c
 13055  0147F0  6E39               	movwf	(btemp+7)^0,c
 13056  0147F2  5036               	movf	(btemp+4)^0,w,c
 13057  0147F4  1037               	iorwf	(btemp+5)^0,w,c
 13058  0147F6  1038               	iorwf	(btemp+6)^0,w,c
 13059  0147F8  1039               	iorwf	(btemp+7)^0,w,c
 13060  0147FA  B4D8               	btfsc	status,2,c
 13061  0147FC  D018               	goto	l9726
 13062  0147FE  0E00               	movlw	0
 13063  014800  6E3A               	movwf	(btemp+8)^0,c
 13064  014802  0E00               	movlw	0
 13065  014804  6E3B               	movwf	(btemp+9)^0,c
 13066  014806  0E80               	movlw	128
 13067  014808  6E3C               	movwf	(btemp+10)^0,c
 13068  01480A  0EBF               	movlw	191
 13069  01480C  6E3D               	movwf	(btemp+11)^0,c
 13070                           
 13071                           ;stkvar	_u @ sp[(-10)+0]
 13072  01480E  0EF6               	movlw	-10
 13073  014810  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13074  014816  0EF7               	movlw	-9
 13075  014818  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13076  01481E  0EF8               	movlw	-8
 13077  014820  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13078  014826  0EF9               	movlw	-7
 13079  014828  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13080  01482E                     l9726:
 13081                           
 13082                           ;stkvar	_u @ sp[(-10)+0]
 13083  01482E  0EF6               	movlw	-10
 13084  014830  006F FF8C  F032    	movff	plusw1,btemp
 13085  014836  0EF7               	movlw	-9
 13086  014838  006F FF8C  F033    	movff	plusw1,btemp+1
 13087  01483E  0EF8               	movlw	-8
 13088  014840  006F FF8C  F034    	movff	plusw1,btemp+2
 13089  014846  0EF9               	movlw	-7
 13090  014848                     L12:
 13091  014848  006F FF8C  F035    	movff	plusw1,btemp+3
 13092                           
 13093                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13094  01484E  0EF2               	movlw	242
 13095  014850  26E1               	addwf	fsr1l,f,c
 13096  014852  0EFF               	movlw	255
 13097  014854  22E2               	addwfc	fsr1h,f,c
 13098  014856  0012               	return		;funcret
 13099  014858                     __end_of_floorf:
 13100                           	opt callstack 0
 13101                           
 13102 ;; *************** function ___fpclassifyf *****************
 13103 ;; Defined at:
 13104 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 13105 ;; Parameters:    Size  Location     Type
 13106 ;;  x               4  [STACK] float 
 13107 ;; Auto vars:     Size  Location     Type
 13108 ;;  u               4  [STACK] struct .
 13109 ;;  e               2  [STACK] int 
 13110 ;; Return value:  Size  Location     Type
 13111 ;;                  2  [STACK] int 
 13112 ;; Registers used:
 13113 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 13114 ;; Tracked objects:
 13115 ;;		On entry : 0/5
 13116 ;;		On exit  : 0/0
 13117 ;;		Unchanged: 0/0
 13118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13123 ;;Total ram usage:        0 bytes
 13124 ;; Hardware stack levels used:    1
 13125 ;; Hardware stack levels required when called:    6
 13126 ;; This function calls:
 13127 ;;		Nothing
 13128 ;; This function is called by:
 13129 ;;		_efgtoa
 13130 ;; This function uses a reentrant model
 13131 ;;
 13132                           
 13133                           	psect	text49
 13134  015CEA                     __ptext49:
 13135                           	opt callstack 0
 13136  015CEA                     ___fpclassifyf:
 13137                           	opt callstack 0
 13138                           
 13139                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13140  015CEA  0E06               	movlw	6
 13141  015CEC  26E1               	addwf	fsr1l,f,c
 13142  015CEE  0E00               	movlw	0
 13143  015CF0  22E2               	addwfc	fsr1h,f,c
 13144                           
 13145                           ;incstack = 0
 13146  015CF2  0060  F2C4  F03A   	movff	___fpclassifyf@F463,btemp+8
 13147  015CF8  0060  F2C8  F03B   	movff	___fpclassifyf@F463+1,btemp+9
 13148  015CFE  0060  F2CC  F03C   	movff	___fpclassifyf@F463+2,btemp+10
 13149  015D04  0060  F2D0  F03D   	movff	___fpclassifyf@F463+3,btemp+11
 13150                           
 13151                           ;stkvar	_u @ sp[(-6)+0]
 13152  015D0A  0EFA               	movlw	-6
 13153  015D0C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13154  015D12  0EFB               	movlw	-5
 13155  015D14  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13156  015D1A  0EFC               	movlw	-4
 13157  015D1C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13158  015D22  0EFD               	movlw	-3
 13159  015D24  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13160                           
 13161                           ;stkvar	_x @ sp[(-6)+-4]
 13162  015D2A  0EF6               	movlw	-10
 13163  015D2C  006F FF8C  F03A    	movff	plusw1,btemp+8
 13164  015D32  0EF7               	movlw	-9
 13165  015D34  006F FF8C  F03B    	movff	plusw1,btemp+9
 13166  015D3A  0EF8               	movlw	-8
 13167  015D3C  006F FF8C  F03C    	movff	plusw1,btemp+10
 13168  015D42  0EF9               	movlw	-7
 13169  015D44  006F FF8C  F03D    	movff	plusw1,btemp+11
 13170                           
 13171                           ;stkvar	_u @ sp[(-6)+0]
 13172  015D4A  0EFA               	movlw	-6
 13173  015D4C  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13174  015D52  0EFB               	movlw	-5
 13175  015D54  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13176  015D5A  0EFC               	movlw	-4
 13177  015D5C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13178  015D62  0EFD               	movlw	-3
 13179  015D64  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13180                           
 13181                           ;stkvar	_u @ sp[(-6)+0]
 13182  015D6A  0EFA               	movlw	-6
 13183  015D6C  006F FF8C  F03A    	movff	plusw1,btemp+8
 13184  015D72  0EFB               	movlw	-5
 13185  015D74  006F FF8C  F03B    	movff	plusw1,btemp+9
 13186  015D7A  0EFC               	movlw	-4
 13187  015D7C  006F FF8C  F03C    	movff	plusw1,btemp+10
 13188  015D82  0EFD               	movlw	-3
 13189  015D84  006F FF8C  F03D    	movff	plusw1,btemp+11
 13190  015D8A  0E18               	movlw	24
 13191  015D8C  D005               	goto	u9380
 13192  015D8E                     u9385:
 13193  015D8E  90D8               	bcf	status,0,c
 13194  015D90  323D               	rrcf	(btemp+11)^0,f,c
 13195  015D92  323C               	rrcf	(btemp+10)^0,f,c
 13196  015D94  323B               	rrcf	(btemp+9)^0,f,c
 13197  015D96  323A               	rrcf	(btemp+8)^0,f,c
 13198  015D98                     u9380:
 13199  015D98  2EE8               	decfsz	wreg,f,c
 13200  015D9A  D7F9               	goto	u9385
 13201  015D9C  0060  F0E8  F038   	movff	btemp+8,btemp+6
 13202  015DA2  0060  F0EC  F039   	movff	btemp+9,btemp+7
 13203  015DA8  0EFF               	movlw	255
 13204  015DAA  1638               	andwf	(btemp+6)^0,f,c
 13205  015DAC  0E00               	movlw	0
 13206  015DAE  1639               	andwf	(btemp+7)^0,f,c
 13207                           
 13208                           ;stkvar	_e @ sp[(-6)+4]
 13209  015DB0  0EFE               	movlw	-2
 13210  015DB2  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 13211  015DB8  0EFF               	movlw	-1
 13212  015DBA  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 13213                           
 13214                           ;stkvar	_e @ sp[(-6)+4]
 13215  015DC0  0EFE               	movlw	-2
 13216  015DC2  006F FF8C  F032    	movff	plusw1,btemp
 13217  015DC8  0EFF               	movlw	-1
 13218  015DCA  50E3               	movf	plusw1,w,c
 13219  015DCC  1032               	iorwf	btemp^0,w,c
 13220  015DCE  A4D8               	btfss	status,2,c
 13221  015DD0  D023               	goto	l9664
 13222                           
 13223                           ;stkvar	_u @ sp[(-6)+0]
 13224  015DD2  0EFA               	movlw	-6
 13225  015DD4  006F FF8C  F03A    	movff	plusw1,btemp+8
 13226  015DDA  0EFB               	movlw	-5
 13227  015DDC  006F FF8C  F03B    	movff	plusw1,btemp+9
 13228  015DE2  0EFC               	movlw	-4
 13229  015DE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 13230  015DEA  0EFD               	movlw	-3
 13231  015DEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13232  015DF2  90D8               	bcf	status,0,c
 13233  015DF4  343A               	rlcf	(btemp+8)^0,w,c
 13234  015DF6  6E36               	movwf	(btemp+4)^0,c
 13235  015DF8  343B               	rlcf	(btemp+9)^0,w,c
 13236  015DFA  6E37               	movwf	(btemp+5)^0,c
 13237  015DFC  343C               	rlcf	(btemp+10)^0,w,c
 13238  015DFE  6E38               	movwf	(btemp+6)^0,c
 13239  015E00  343D               	rlcf	(btemp+11)^0,w,c
 13240  015E02  6E39               	movwf	(btemp+7)^0,c
 13241  015E04  5036               	movf	(btemp+4)^0,w,c
 13242  015E06  1037               	iorwf	(btemp+5)^0,w,c
 13243  015E08  1038               	iorwf	(btemp+6)^0,w,c
 13244  015E0A  1039               	iorwf	(btemp+7)^0,w,c
 13245  015E0C  A4D8               	btfss	status,2,c
 13246  015E0E  D002               	goto	l9660
 13247  015E10  0E02               	movlw	2
 13248  015E12  D02E               	goto	L13
 13249  015E14                     l9660:
 13250  015E14  0E03               	movlw	3
 13251  015E16  D02C               	goto	L13
 13252  015E18                     l9664:
 13253                           
 13254                           ;stkvar	_e @ sp[(-6)+4]
 13255  015E18  0EFE               	movlw	-2
 13256  015E1A  28E3               	incf	plusw1,w,c
 13257  015E1C  E128               	bnz	l9670
 13258  015E1E  0EFF               	movlw	-1
 13259  015E20  50E3               	movf	plusw1,w,c
 13260  015E22  A4D8               	btfss	status,2,c
 13261  015E24  D024               	goto	l9670
 13262                           
 13263                           ;stkvar	_u @ sp[(-6)+0]
 13264  015E26  0EFA               	movlw	-6
 13265  015E28  006F FF8C  F03A    	movff	plusw1,btemp+8
 13266  015E2E  0EFB               	movlw	-5
 13267  015E30  006F FF8C  F03B    	movff	plusw1,btemp+9
 13268  015E36  0EFC               	movlw	-4
 13269  015E38  006F FF8C  F03C    	movff	plusw1,btemp+10
 13270  015E3E  0EFD               	movlw	-3
 13271  015E40  006F FF8C  F03D    	movff	plusw1,btemp+11
 13272  015E46  0E09               	movlw	9
 13273  015E48                     u9425:
 13274  015E48  90D8               	bcf	status,0,c
 13275  015E4A  363A               	rlcf	(btemp+8)^0,f,c
 13276  015E4C  363B               	rlcf	(btemp+9)^0,f,c
 13277  015E4E  363C               	rlcf	(btemp+10)^0,f,c
 13278  015E50  363D               	rlcf	(btemp+11)^0,f,c
 13279  015E52  2EE8               	decfsz	wreg,f,c
 13280  015E54  D7F9               	goto	u9425
 13281  015E56  503A               	movf	(btemp+8)^0,w,c
 13282  015E58  103B               	iorwf	(btemp+9)^0,w,c
 13283  015E5A  103C               	iorwf	(btemp+10)^0,w,c
 13284  015E5C  103D               	iorwf	(btemp+11)^0,w,c
 13285  015E5E  A4D8               	btfss	status,2,c
 13286  015E60  D002               	goto	u9430
 13287  015E62  0E01               	movlw	1
 13288  015E64  D001               	goto	u9440
 13289  015E66                     u9430:
 13290  015E66  0E00               	movlw	0
 13291  015E68                     u9440:
 13292  015E68  6E32               	movwf	btemp^0,c
 13293  015E6A  6A33               	clrf	(btemp+1)^0,c
 13294  015E6C  D004               	goto	l2730
 13295  015E6E                     l9670:
 13296  015E6E  0E04               	movlw	4
 13297  015E70                     L13:
 13298  015E70  6E32               	movwf	btemp^0,c
 13299  015E72  0E00               	movlw	0
 13300  015E74  6E33               	movwf	(btemp+1)^0,c
 13301  015E76                     l2730:
 13302                           
 13303                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 13304  015E76  0EF6               	movlw	246
 13305  015E78  26E1               	addwf	fsr1l,f,c
 13306  015E7A  0EFF               	movlw	255
 13307  015E7C  22E2               	addwfc	fsr1h,f,c
 13308  015E7E  0012               	return		;funcret
 13309  015E80                     __end_of___fpclassifyf:
 13310                           	opt callstack 0
 13311                           
 13312 ;; *************** function ___fltol *****************
 13313 ;; Defined at:
 13314 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 13315 ;; Parameters:    Size  Location     Type
 13316 ;;  f1              4  [STACK] int 
 13317 ;; Auto vars:     Size  Location     Type
 13318 ;;  exp1            1  [STACK] unsigned char 
 13319 ;;  sign1           1  [STACK] unsigned char 
 13320 ;; Return value:  Size  Location     Type
 13321 ;;                  4  [STACK] long 
 13322 ;; Registers used:
 13323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 13324 ;; Tracked objects:
 13325 ;;		On entry : 0/5
 13326 ;;		On exit  : 0/0
 13327 ;;		Unchanged: 0/0
 13328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13333 ;;Total ram usage:        0 bytes
 13334 ;; Hardware stack levels used:    1
 13335 ;; Hardware stack levels required when called:    6
 13336 ;; This function calls:
 13337 ;;		Nothing
 13338 ;; This function is called by:
 13339 ;;		_efgtoa
 13340 ;; This function uses a reentrant model
 13341 ;;
 13342                           
 13343                           	psect	text50
 13344  015E80                     __ptext50:
 13345                           	opt callstack 0
 13346  015E80                     ___fltol:
 13347                           	opt callstack 0
 13348                           
 13349                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13350  015E80  52E6               	movf	postinc1,f,c
 13351  015E82  52E6               	movf	postinc1,f,c
 13352                           
 13353                           ;stkvar	_f1 @ sp[(-2)+-4]
 13354                           
 13355                           ;incstack = 0
 13356  015E84  0EFA               	movlw	-6
 13357  015E86  006F FF8C  F03A    	movff	plusw1,btemp+8
 13358  015E8C  0EFB               	movlw	-5
 13359  015E8E  006F FF8C  F03B    	movff	plusw1,btemp+9
 13360  015E94  0EFC               	movlw	-4
 13361  015E96  006F FF8C  F03C    	movff	plusw1,btemp+10
 13362  015E9C  0EFD               	movlw	-3
 13363  015E9E  006F FF8C  F03D    	movff	plusw1,btemp+11
 13364  015EA4  0E18               	movlw	24
 13365  015EA6  D005               	goto	u10590
 13366  015EA8                     u10595:
 13367  015EA8  90D8               	bcf	status,0,c
 13368  015EAA  323D               	rrcf	(btemp+11)^0,f,c
 13369  015EAC  323C               	rrcf	(btemp+10)^0,f,c
 13370  015EAE  323B               	rrcf	(btemp+9)^0,f,c
 13371  015EB0  323A               	rrcf	(btemp+8)^0,f,c
 13372  015EB2                     u10590:
 13373  015EB2  2EE8               	decfsz	wreg,f,c
 13374  015EB4  D7F9               	goto	u10595
 13375                           
 13376                           ;stkvar	_exp1 @ sp[(-2)+0]
 13377  015EB6  0EFE               	movlw	-2
 13378  015EB8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13379  015EBE  0EFE               	movlw	-2
 13380  015EC0  50E3               	movf	plusw1,w,c
 13381  015EC2  A4D8               	btfss	status,2,c
 13382  015EC4  D006               	goto	l10290
 13383  015EC6                     u10600:
 13384  015EC6  0E00               	movlw	0
 13385  015EC8  6E32               	movwf	btemp^0,c
 13386  015ECA  6A33               	clrf	(btemp+1)^0,c
 13387  015ECC  6A34               	clrf	(btemp+2)^0,c
 13388  015ECE  6A35               	clrf	(btemp+3)^0,c
 13389  015ED0  D08B               	goto	l2346
 13390  015ED2                     l10290:
 13391                           
 13392                           ;stkvar	_f1 @ sp[(-2)+-4]
 13393  015ED2  0EFA               	movlw	-6
 13394  015ED4  006F FF8C  F03A    	movff	plusw1,btemp+8
 13395  015EDA  0EFB               	movlw	-5
 13396  015EDC  006F FF8C  F03B    	movff	plusw1,btemp+9
 13397  015EE2  0EFC               	movlw	-4
 13398  015EE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 13399  015EEA  0EFD               	movlw	-3
 13400  015EEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 13401  015EF2  0E20               	movlw	32
 13402  015EF4  D005               	goto	u10610
 13403  015EF6                     u10615:
 13404  015EF6  90D8               	bcf	status,0,c
 13405  015EF8  323D               	rrcf	(btemp+11)^0,f,c
 13406  015EFA  323C               	rrcf	(btemp+10)^0,f,c
 13407  015EFC  323B               	rrcf	(btemp+9)^0,f,c
 13408  015EFE  323A               	rrcf	(btemp+8)^0,f,c
 13409  015F00                     u10610:
 13410  015F00  2EE8               	decfsz	wreg,f,c
 13411  015F02  D7F9               	goto	u10615
 13412                           
 13413                           ;stkvar	_sign1 @ sp[(-2)+1]
 13414  015F04  0EFF               	movlw	-1
 13415  015F06  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13416                           
 13417                           ;stkvar	_f1 @ sp[(-2)+-4]
 13418  015F0C  0EFC               	movlw	-4
 13419  015F0E  8EE3               	bsf	plusw1,7,c
 13420                           
 13421                           ;stkvar	_f1 @ sp[(-2)+-4]
 13422  015F10  50E1               	movf	fsr1l,w,c
 13423  015F12  0FFA               	addlw	-6
 13424  015F14  6ED9               	movwf	fsr2l,c
 13425  015F16  50E2               	movf	fsr1h,w,c
 13426  015F18  6EDA               	movwf	fsr2h,c
 13427  015F1A  0EFF               	movlw	255
 13428  015F1C  22DA               	addwfc	fsr2h,f,c
 13429  015F1E  0EFF               	movlw	255
 13430  015F20  16DE               	andwf	postinc2,f,c
 13431  015F22  0EFF               	movlw	255
 13432  015F24  16DE               	andwf	postinc2,f,c
 13433  015F26  0EFF               	movlw	255
 13434  015F28  16DE               	andwf	postinc2,f,c
 13435  015F2A  0E00               	movlw	0
 13436  015F2C  16DE               	andwf	postinc2,f,c
 13437                           
 13438                           ;stkvar	_exp1 @ sp[(-2)+0]
 13439  015F2E  0EFE               	movlw	-2
 13440  015F30  006F FF8C  F032    	movff	plusw1,btemp
 13441  015F36  0E96               	movlw	150
 13442  015F38  5E32               	subwf	btemp^0,f,c
 13443  015F3A  0EFE               	movlw	-2
 13444  015F3C  0060  F0CB  FFE3   	movff	btemp,plusw1
 13445                           
 13446                           ;stkvar	_exp1 @ sp[(-2)+0]
 13447  015F42  0EFE               	movlw	-2
 13448  015F44  AEE3               	btfss	plusw1,7,c
 13449  015F46  D014               	goto	l10308
 13450                           
 13451                           ;stkvar	_exp1 @ sp[(-2)+0]
 13452  015F48  0EFE               	movlw	-2
 13453  015F4A  50E3               	movf	plusw1,w,c
 13454  015F4C  0A80               	xorlw	128
 13455  015F4E  0F97               	addlw	151
 13456  015F50  A0D8               	btfss	status,0,c
 13457  015F52  D7B9               	goto	u10600
 13458  015F54                     l10306:
 13459                           
 13460                           ;stkvar	_f1 @ sp[(-2)+-4]
 13461  015F54  90D8               	bcf	status,0,c
 13462  015F56  0EFD               	movlw	-3
 13463  015F58  32E3               	rrcf	plusw1,f,c
 13464  015F5A  0EFC               	movlw	-4
 13465  015F5C  32E3               	rrcf	plusw1,f,c
 13466  015F5E  0EFB               	movlw	-5
 13467  015F60  32E3               	rrcf	plusw1,f,c
 13468  015F62  0EFA               	movlw	-6
 13469  015F64  32E3               	rrcf	plusw1,f,c
 13470                           
 13471                           ;stkvar	_exp1 @ sp[(-2)+0]
 13472  015F66  0EFE               	movlw	-2
 13473  015F68  2AE3               	incf	plusw1,f,c
 13474  015F6A  B4D8               	btfsc	status,2,c
 13475  015F6C  D018               	goto	u10660
 13476  015F6E  D7F2               	goto	l10306
 13477  015F70                     l10308:
 13478                           
 13479                           ;stkvar	_exp1 @ sp[(-2)+0]
 13480  015F70  0EFE               	movlw	-2
 13481  015F72  006F FF8C  F032    	movff	plusw1,btemp
 13482  015F78  0E1F               	movlw	31
 13483  015F7A  6432               	cpfsgt	btemp^0,c
 13484  015F7C  D00C               	goto	l10316
 13485  015F7E  D7A3               	goto	u10600
 13486  015F80                     l10314:
 13487                           
 13488                           ;stkvar	_f1 @ sp[(-2)+-4]
 13489  015F80  90D8               	bcf	status,0,c
 13490  015F82  0EFA               	movlw	-6
 13491  015F84  36E3               	rlcf	plusw1,f,c
 13492  015F86  0EFB               	movlw	-5
 13493  015F88  36E3               	rlcf	plusw1,f,c
 13494  015F8A  0EFC               	movlw	-4
 13495  015F8C  36E3               	rlcf	plusw1,f,c
 13496  015F8E  0EFD               	movlw	-3
 13497  015F90  36E3               	rlcf	plusw1,f,c
 13498                           
 13499                           ;stkvar	_exp1 @ sp[(-2)+0]
 13500  015F92  0EFE               	movlw	-2
 13501  015F94  06E3               	decf	plusw1,f,c
 13502  015F96                     l10316:
 13503                           
 13504                           ;stkvar	_exp1 @ sp[(-2)+0]
 13505  015F96  0EFE               	movlw	-2
 13506  015F98  50E3               	movf	plusw1,w,c
 13507  015F9A  A4D8               	btfss	status,2,c
 13508  015F9C  D7F1               	goto	l10314
 13509  015F9E                     u10660:
 13510                           
 13511                           ;stkvar	_sign1 @ sp[(-2)+1]
 13512  015F9E  0EFF               	movlw	-1
 13513  015FA0  50E3               	movf	plusw1,w,c
 13514  015FA2  B4D8               	btfsc	status,2,c
 13515  015FA4  D011               	goto	u10680
 13516                           
 13517                           ;stkvar	_f1 @ sp[(-2)+-4]
 13518                           ;stkvar	_f1 @ sp[(-2)+-4]
 13519  015FA6  0EFA               	movlw	-6
 13520  015FA8  6CE3               	negf	plusw1,c
 13521  015FAA  0EFB               	movlw	-5
 13522  015FAC  1EE3               	comf	plusw1,f,c
 13523  015FAE  0EFC               	movlw	-4
 13524  015FB0  1EE3               	comf	plusw1,f,c
 13525  015FB2  0EFD               	movlw	-3
 13526  015FB4  1EE3               	comf	plusw1,f,c
 13527  015FB6  E308               	bnc	u10680
 13528  015FB8  0EFB               	movlw	-5
 13529  015FBA  2AE3               	incf	plusw1,f,c
 13530  015FBC  E305               	bnc	u10680
 13531  015FBE  0EFC               	movlw	-4
 13532  015FC0  2AE3               	incf	plusw1,f,c
 13533  015FC2  E302               	bnc	u10680
 13534  015FC4  0EFD               	movlw	-3
 13535  015FC6  2AE3               	incf	plusw1,f,c
 13536  015FC8                     u10680:
 13537                           
 13538                           ;stkvar	_f1 @ sp[(-2)+-4]
 13539  015FC8  0EFA               	movlw	-6
 13540  015FCA  006F FF8C  F032    	movff	plusw1,btemp
 13541  015FD0  0EFB               	movlw	-5
 13542  015FD2  006F FF8C  F033    	movff	plusw1,btemp+1
 13543  015FD8  0EFC               	movlw	-4
 13544  015FDA  006F FF8C  F034    	movff	plusw1,btemp+2
 13545  015FE0  0EFD               	movlw	-3
 13546  015FE2  006F FF8C  F035    	movff	plusw1,btemp+3
 13547  015FE8                     l2346:
 13548                           
 13549                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 13550  015FE8  0EFA               	movlw	250
 13551  015FEA  26E1               	addwf	fsr1l,f,c
 13552  015FEC  0EFF               	movlw	255
 13553  015FEE  22E2               	addwfc	fsr1h,f,c
 13554  015FF0  0012               	return		;funcret
 13555  015FF2                     __end_of___fltol:
 13556                           	opt callstack 0
 13557                           
 13558 ;; *************** function ___flsub *****************
 13559 ;; Defined at:
 13560 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 13561 ;; Parameters:    Size  Location     Type
 13562 ;;  b               4  [STACK] long 
 13563 ;;  a               4  [STACK] long 
 13564 ;; Auto vars:     Size  Location     Type
 13565 ;;		None
 13566 ;; Return value:  Size  Location     Type
 13567 ;;                  4  [STACK] long 
 13568 ;; Registers used:
 13569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13570 ;; Tracked objects:
 13571 ;;		On entry : 0/39
 13572 ;;		On exit  : 0/0
 13573 ;;		Unchanged: 0/0
 13574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13579 ;;Total ram usage:        0 bytes
 13580 ;; Hardware stack levels used:    1
 13581 ;; Hardware stack levels required when called:    7
 13582 ;; This function calls:
 13583 ;;		___fladd
 13584 ;; This function is called by:
 13585 ;;		_conv_raw_result
 13586 ;;		_lp_filter
 13587 ;;		_efgtoa
 13588 ;; This function uses a reentrant model
 13589 ;;
 13590                           
 13591                           	psect	text51
 13592  017B16                     __ptext51:
 13593                           	opt callstack 0
 13594  017B16                     ___flsub:
 13595                           	opt callstack 16
 13596                           
 13597                           ;stkvar	_a @ sp[(0)+-8]
 13598                           
 13599                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13600                           ;incstack = 0
 13601  017B16  0EFB               	movlw	-5
 13602  017B18  7EE3               	btg	plusw1,7,c
 13603                           
 13604                           ;stkvar	_a @ sp[(0)+-8]
 13605  017B1A  0EF8               	movlw	-8
 13606  017B1C  006F FF8F FFE6     	movff	plusw1,postinc1
 13607  017B22  006F FF8F FFE6     	movff	plusw1,postinc1
 13608  017B28  006F FF8F FFE6     	movff	plusw1,postinc1
 13609  017B2E  006F FF8F FFE6     	movff	plusw1,postinc1
 13610                           
 13611                           ;stkvar	_b @ sp[(-4)+-4]
 13612  017B34  0EF8               	movlw	-8
 13613  017B36  006F FF8F FFE6     	movff	plusw1,postinc1
 13614  017B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 13615  017B42  006F FF8F FFE6     	movff	plusw1,postinc1
 13616  017B48  006F FF8F FFE6     	movff	plusw1,postinc1
 13617  017B4E  ECD6  F092         	call	___fladd	;wreg free
 13618                           
 13619                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 13620  017B52  0EF8               	movlw	248
 13621  017B54  26E1               	addwf	fsr1l,f,c
 13622  017B56  0EFF               	movlw	255
 13623  017B58  22E2               	addwfc	fsr1h,f,c
 13624  017B5A  0012               	return		;funcret
 13625  017B5C                     __end_of___flsub:
 13626                           	opt callstack 0
 13627                           
 13628 ;; *************** function ___fladd *****************
 13629 ;; Defined at:
 13630 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 13631 ;; Parameters:    Size  Location     Type
 13632 ;;  b               4  [STACK] long 
 13633 ;;  a               4  [STACK] long 
 13634 ;; Auto vars:     Size  Location     Type
 13635 ;;  grs             1  [STACK] unsigned char 
 13636 ;;  bexp            1  [STACK] unsigned char 
 13637 ;;  aexp            1  [STACK] unsigned char 
 13638 ;;  signs           1  [STACK] unsigned char 
 13639 ;; Return value:  Size  Location     Type
 13640 ;;                  4  [STACK] unsigned char 
 13641 ;; Registers used:
 13642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13643 ;; Tracked objects:
 13644 ;;		On entry : 0/39
 13645 ;;		On exit  : 0/0
 13646 ;;		Unchanged: 0/0
 13647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13652 ;;Total ram usage:        0 bytes
 13653 ;; Hardware stack levels used:    1
 13654 ;; Hardware stack levels required when called:    6
 13655 ;; This function calls:
 13656 ;;		Nothing
 13657 ;; This function is called by:
 13658 ;;		_lp_filter
 13659 ;;		_efgtoa
 13660 ;;		___flsub
 13661 ;; This function uses a reentrant model
 13662 ;;
 13663                           
 13664                           	psect	text52
 13665  0125AC                     __ptext52:
 13666                           	opt callstack 0
 13667  0125AC                     ___fladd:
 13668                           	opt callstack 0
 13669                           
 13670                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13671  0125AC  52E6               	movf	postinc1,f,c
 13672  0125AE  52E6               	movf	postinc1,f,c
 13673  0125B0  52E6               	movf	postinc1,f,c
 13674  0125B2  52E6               	movf	postinc1,f,c
 13675                           
 13676                           ;stkvar	_b @ sp[(-4)+-4]
 13677                           
 13678                           ;incstack = 0
 13679  0125B4  0EFB               	movlw	251
 13680  0125B6  24E1               	addwf	fsr1l,w,c
 13681  0125B8  6ED9               	movwf	fsr2l,c
 13682  0125BA  0EFF               	movlw	255
 13683  0125BC  20E2               	addwfc	fsr1h,w,c
 13684  0125BE  6EDA               	movwf	fsr2h,c
 13685  0125C0  50DF               	movf	indf2,w,c
 13686  0125C2  6E3D               	movwf	(btemp+11)^0,c
 13687  0125C4  0E80               	movlw	128
 13688  0125C6  163D               	andwf	(btemp+11)^0,f,c
 13689                           
 13690                           ;stkvar	_signs @ sp[(-4)+3]
 13691  0125C8  0EFF               	movlw	-1
 13692  0125CA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13693                           
 13694                           ;stkvar	_b @ sp[(-4)+-4]
 13695  0125D0  0EFB               	movlw	251
 13696  0125D2  24E1               	addwf	fsr1l,w,c
 13697  0125D4  6ED9               	movwf	fsr2l,c
 13698  0125D6  0EFF               	movlw	255
 13699  0125D8  20E2               	addwfc	fsr1h,w,c
 13700  0125DA  6EDA               	movwf	fsr2h,c
 13701  0125DC  50DF               	movf	indf2,w,c
 13702  0125DE  6E3D               	movwf	(btemp+11)^0,c
 13703  0125E0  90D8               	bcf	status,0,c
 13704  0125E2  343D               	rlcf	(btemp+11)^0,w,c
 13705  0125E4  6E3C               	movwf	(btemp+10)^0,c
 13706                           
 13707                           ;stkvar	_bexp @ sp[(-4)+1]
 13708  0125E6  0EFD               	movlw	-3
 13709  0125E8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13710                           
 13711                           ;stkvar	_b @ sp[(-4)+-4]
 13712  0125EE  0EFA               	movlw	250
 13713  0125F0  24E1               	addwf	fsr1l,w,c
 13714  0125F2  6ED9               	movwf	fsr2l,c
 13715  0125F4  0EFF               	movlw	255
 13716  0125F6  20E2               	addwfc	fsr1h,w,c
 13717  0125F8  6EDA               	movwf	fsr2h,c
 13718  0125FA  AEDF               	btfss	indf2,7,c
 13719  0125FC  D002               	goto	l9404
 13720                           
 13721                           ;stkvar	_bexp @ sp[(-4)+1]
 13722  0125FE  0EFD               	movlw	-3
 13723  012600  80E3               	bsf	plusw1,0,c
 13724  012602                     l9404:
 13725                           
 13726                           ;stkvar	_bexp @ sp[(-4)+1]
 13727  012602  0EFD               	movlw	-3
 13728  012604  50E3               	movf	plusw1,w,c
 13729  012606  B4D8               	btfsc	status,2,c
 13730  012608  D027               	goto	l9414
 13731                           
 13732                           ;stkvar	_bexp @ sp[(-4)+1]
 13733  01260A  0EFD               	movlw	-3
 13734  01260C  28E3               	incf	plusw1,w,c
 13735  01260E  A4D8               	btfss	status,2,c
 13736  012610  D018               	goto	l9410
 13737  012612  0E00               	movlw	0
 13738  012614  6E3A               	movwf	(btemp+8)^0,c
 13739  012616  0E00               	movlw	0
 13740  012618  6E3B               	movwf	(btemp+9)^0,c
 13741  01261A  0E00               	movlw	0
 13742  01261C  6E3C               	movwf	(btemp+10)^0,c
 13743  01261E  0E00               	movlw	0
 13744  012620  6E3D               	movwf	(btemp+11)^0,c
 13745                           
 13746                           ;stkvar	_b @ sp[(-4)+-4]
 13747  012622  0EF8               	movlw	-8
 13748  012624  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13749  01262A  0EF9               	movlw	-7
 13750  01262C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13751  012632  0EFA               	movlw	-6
 13752  012634  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13753  01263A  0EFB               	movlw	-5
 13754  01263C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13755  012642                     l9410:
 13756                           
 13757                           ;stkvar	_b @ sp[(-4)+-4]
 13758  012642  0EFA               	movlw	-6
 13759  012644  8EE3               	bsf	plusw1,7,c
 13760                           
 13761                           ;stkvar	_b @ sp[(-4)+-4]
 13762  012646  0EFB               	movlw	251
 13763  012648  24E1               	addwf	fsr1l,w,c
 13764  01264A  6ED9               	movwf	fsr2l,c
 13765  01264C  0EFF               	movlw	255
 13766  01264E  20E2               	addwfc	fsr1h,w,c
 13767  012650  6EDA               	movwf	fsr2h,c
 13768  012652  0E00               	movlw	0
 13769  012654  6EDF               	movwf	indf2,c
 13770  012656  D018               	goto	l9416
 13771  012658                     l9414:
 13772  012658  0E00               	movlw	0
 13773  01265A  6E3A               	movwf	(btemp+8)^0,c
 13774  01265C  0E00               	movlw	0
 13775  01265E  6E3B               	movwf	(btemp+9)^0,c
 13776  012660  0E00               	movlw	0
 13777  012662  6E3C               	movwf	(btemp+10)^0,c
 13778  012664  0E00               	movlw	0
 13779  012666  6E3D               	movwf	(btemp+11)^0,c
 13780                           
 13781                           ;stkvar	_b @ sp[(-4)+-4]
 13782  012668  0EF8               	movlw	-8
 13783  01266A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13784  012670  0EF9               	movlw	-7
 13785  012672  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13786  012678  0EFA               	movlw	-6
 13787  01267A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13788  012680  0EFB               	movlw	-5
 13789  012682  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13790  012688                     l9416:
 13791                           
 13792                           ;stkvar	_a @ sp[(-4)+-8]
 13793  012688  0EF7               	movlw	247
 13794  01268A  24E1               	addwf	fsr1l,w,c
 13795  01268C  6ED9               	movwf	fsr2l,c
 13796  01268E  0EFF               	movlw	255
 13797  012690  20E2               	addwfc	fsr1h,w,c
 13798  012692  6EDA               	movwf	fsr2h,c
 13799  012694  50DF               	movf	indf2,w,c
 13800  012696  6E3D               	movwf	(btemp+11)^0,c
 13801  012698  0E80               	movlw	128
 13802  01269A  163D               	andwf	(btemp+11)^0,f,c
 13803                           
 13804                           ;stkvar	_aexp @ sp[(-4)+2]
 13805  01269C  0EFE               	movlw	-2
 13806  01269E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13807                           
 13808                           ;stkvar	_signs @ sp[(-4)+3]
 13809                           ;stkvar	_aexp @ sp[(-4)+2]
 13810  0126A4  50E1               	movf	fsr1l,w,c
 13811  0126A6  0FFE               	addlw	-2
 13812  0126A8  6ED9               	movwf	fsr2l,c
 13813  0126AA  50E2               	movf	fsr1h,w,c
 13814  0126AC  6EDA               	movwf	fsr2h,c
 13815  0126AE  0EFF               	movlw	255
 13816  0126B0  22DA               	addwfc	fsr2h,f,c
 13817  0126B2  0EFF               	movlw	-1
 13818  0126B4  50E3               	movf	plusw1,w,c
 13819  0126B6  18DE               	xorwf	postinc2,w,c
 13820  0126B8  B4D8               	btfsc	status,2,c
 13821  0126BA  D002               	goto	l9422
 13822                           
 13823                           ;stkvar	_signs @ sp[(-4)+3]
 13824  0126BC  0EFF               	movlw	-1
 13825  0126BE  8CE3               	bsf	plusw1,6,c
 13826  0126C0                     l9422:
 13827                           
 13828                           ;stkvar	_a @ sp[(-4)+-8]
 13829  0126C0  0EF7               	movlw	247
 13830  0126C2  24E1               	addwf	fsr1l,w,c
 13831  0126C4  6ED9               	movwf	fsr2l,c
 13832  0126C6  0EFF               	movlw	255
 13833  0126C8  20E2               	addwfc	fsr1h,w,c
 13834  0126CA  6EDA               	movwf	fsr2h,c
 13835  0126CC  50DF               	movf	indf2,w,c
 13836  0126CE  6E3D               	movwf	(btemp+11)^0,c
 13837  0126D0  90D8               	bcf	status,0,c
 13838  0126D2  343D               	rlcf	(btemp+11)^0,w,c
 13839  0126D4  6E3C               	movwf	(btemp+10)^0,c
 13840                           
 13841                           ;stkvar	_aexp @ sp[(-4)+2]
 13842  0126D6  0EFE               	movlw	-2
 13843  0126D8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13844                           
 13845                           ;stkvar	_a @ sp[(-4)+-8]
 13846  0126DE  0EF6               	movlw	246
 13847  0126E0  24E1               	addwf	fsr1l,w,c
 13848  0126E2  6ED9               	movwf	fsr2l,c
 13849  0126E4  0EFF               	movlw	255
 13850  0126E6  20E2               	addwfc	fsr1h,w,c
 13851  0126E8  6EDA               	movwf	fsr2h,c
 13852  0126EA  AEDF               	btfss	indf2,7,c
 13853  0126EC  D002               	goto	l9428
 13854                           
 13855                           ;stkvar	_aexp @ sp[(-4)+2]
 13856  0126EE  0EFE               	movlw	-2
 13857  0126F0  80E3               	bsf	plusw1,0,c
 13858  0126F2                     l9428:
 13859                           
 13860                           ;stkvar	_aexp @ sp[(-4)+2]
 13861  0126F2  0EFE               	movlw	-2
 13862  0126F4  50E3               	movf	plusw1,w,c
 13863  0126F6  B4D8               	btfsc	status,2,c
 13864  0126F8  D027               	goto	l9438
 13865                           
 13866                           ;stkvar	_aexp @ sp[(-4)+2]
 13867  0126FA  0EFE               	movlw	-2
 13868  0126FC  28E3               	incf	plusw1,w,c
 13869  0126FE  A4D8               	btfss	status,2,c
 13870  012700  D018               	goto	l9434
 13871  012702  0E00               	movlw	0
 13872  012704  6E3A               	movwf	(btemp+8)^0,c
 13873  012706  0E00               	movlw	0
 13874  012708  6E3B               	movwf	(btemp+9)^0,c
 13875  01270A  0E00               	movlw	0
 13876  01270C  6E3C               	movwf	(btemp+10)^0,c
 13877  01270E  0E00               	movlw	0
 13878  012710  6E3D               	movwf	(btemp+11)^0,c
 13879                           
 13880                           ;stkvar	_a @ sp[(-4)+-8]
 13881  012712  0EF4               	movlw	-12
 13882  012714  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13883  01271A  0EF5               	movlw	-11
 13884  01271C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13885  012722  0EF6               	movlw	-10
 13886  012724  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13887  01272A  0EF7               	movlw	-9
 13888  01272C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13889  012732                     l9434:
 13890                           
 13891                           ;stkvar	_a @ sp[(-4)+-8]
 13892  012732  0EF6               	movlw	-10
 13893  012734  8EE3               	bsf	plusw1,7,c
 13894                           
 13895                           ;stkvar	_a @ sp[(-4)+-8]
 13896  012736  0EF7               	movlw	247
 13897  012738  24E1               	addwf	fsr1l,w,c
 13898  01273A  6ED9               	movwf	fsr2l,c
 13899  01273C  0EFF               	movlw	255
 13900  01273E  20E2               	addwfc	fsr1h,w,c
 13901  012740  6EDA               	movwf	fsr2h,c
 13902  012742  0E00               	movlw	0
 13903  012744  6EDF               	movwf	indf2,c
 13904  012746  D018               	goto	l9440
 13905  012748                     l9438:
 13906  012748  0E00               	movlw	0
 13907  01274A  6E3A               	movwf	(btemp+8)^0,c
 13908  01274C  0E00               	movlw	0
 13909  01274E  6E3B               	movwf	(btemp+9)^0,c
 13910  012750  0E00               	movlw	0
 13911  012752  6E3C               	movwf	(btemp+10)^0,c
 13912  012754  0E00               	movlw	0
 13913  012756  6E3D               	movwf	(btemp+11)^0,c
 13914                           
 13915                           ;stkvar	_a @ sp[(-4)+-8]
 13916  012758  0EF4               	movlw	-12
 13917  01275A  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 13918  012760  0EF5               	movlw	-11
 13919  012762  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 13920  012768  0EF6               	movlw	-10
 13921  01276A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 13922  012770  0EF7               	movlw	-9
 13923  012772  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 13924  012778                     l9440:
 13925                           
 13926                           ;stkvar	_bexp @ sp[(-4)+1]
 13927                           ;stkvar	_aexp @ sp[(-4)+2]
 13928  012778  50E1               	movf	fsr1l,w,c
 13929  01277A  0FFE               	addlw	-2
 13930  01277C  6ED9               	movwf	fsr2l,c
 13931  01277E  50E2               	movf	fsr1h,w,c
 13932  012780  6EDA               	movwf	fsr2h,c
 13933  012782  0EFF               	movlw	255
 13934  012784  22DA               	addwfc	fsr2h,f,c
 13935  012786  0EFD               	movlw	-3
 13936  012788  50E3               	movf	plusw1,w,c
 13937  01278A  5CDE               	subwf	postinc2,w,c
 13938  01278C  B0D8               	btfsc	status,0,c
 13939  01278E  D0A4               	goto	l9476
 13940                           
 13941                           ;stkvar	_signs @ sp[(-4)+3]
 13942  012790  0EFF               	movlw	-1
 13943  012792  ACE3               	btfss	plusw1,6,c
 13944  012794  D002               	goto	l9446
 13945                           
 13946                           ;stkvar	_signs @ sp[(-4)+3]
 13947  012796  0EFF               	movlw	-1
 13948  012798  7EE3               	btg	plusw1,7,c
 13949  01279A                     l9446:
 13950                           
 13951                           ;stkvar	_bexp @ sp[(-4)+1]
 13952                           ;stkvar	_grs @ sp[(-4)+0]
 13953  01279A  0EFD               	movlw	-3
 13954  01279C  006F FF8C  F032    	movff	plusw1,btemp
 13955  0127A2  0EFC               	movlw	-4
 13956  0127A4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13957                           
 13958                           ;stkvar	_aexp @ sp[(-4)+2]
 13959                           ;stkvar	_bexp @ sp[(-4)+1]
 13960  0127AA  0EFE               	movlw	-2
 13961  0127AC  006F FF8C  F032    	movff	plusw1,btemp
 13962  0127B2  0EFD               	movlw	-3
 13963  0127B4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13964                           
 13965                           ;stkvar	_grs @ sp[(-4)+0]
 13966                           ;stkvar	_aexp @ sp[(-4)+2]
 13967  0127BA  0EFC               	movlw	-4
 13968  0127BC  006F FF8C  F032    	movff	plusw1,btemp
 13969  0127C2  0EFE               	movlw	-2
 13970  0127C4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13971                           
 13972                           ;stkvar	_b @ sp[(-4)+-4]
 13973                           ;stkvar	_grs @ sp[(-4)+0]
 13974  0127CA  0EF8               	movlw	-8
 13975  0127CC  006F FF8C  F032    	movff	plusw1,btemp
 13976  0127D2  0EFC               	movlw	-4
 13977  0127D4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13978                           
 13979                           ;stkvar	_a @ sp[(-4)+-8]
 13980                           ;stkvar	_b @ sp[(-4)+-4]
 13981  0127DA  0EF4               	movlw	-12
 13982  0127DC  006F FF8C  F032    	movff	plusw1,btemp
 13983  0127E2  0EF8               	movlw	-8
 13984  0127E4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13985                           
 13986                           ;stkvar	_grs @ sp[(-4)+0]
 13987                           ;stkvar	_a @ sp[(-4)+-8]
 13988  0127EA  0EFC               	movlw	-4
 13989  0127EC  006F FF8C  F032    	movff	plusw1,btemp
 13990  0127F2  0EF4               	movlw	-12
 13991  0127F4  0060  F0CB  FFE3   	movff	btemp,plusw1
 13992                           
 13993                           ;stkvar	_b @ sp[(-4)+-4]
 13994  0127FA  0EF9               	movlw	249
 13995  0127FC  24E1               	addwf	fsr1l,w,c
 13996  0127FE  6ED9               	movwf	fsr2l,c
 13997  012800  0EFF               	movlw	255
 13998  012802  20E2               	addwfc	fsr1h,w,c
 13999  012804  6EDA               	movwf	fsr2h,c
 14000  012806  50DF               	movf	indf2,w,c
 14001  012808  6E3D               	movwf	(btemp+11)^0,c
 14002                           
 14003                           ;stkvar	_grs @ sp[(-4)+0]
 14004  01280A  0EFC               	movlw	-4
 14005  01280C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14006                           
 14007                           ;stkvar	_a @ sp[(-4)+-8]
 14008  012812  0EF5               	movlw	245
 14009  012814  24E1               	addwf	fsr1l,w,c
 14010  012816  6ED9               	movwf	fsr2l,c
 14011  012818  0EFF               	movlw	255
 14012  01281A  20E2               	addwfc	fsr1h,w,c
 14013  01281C  6EDA               	movwf	fsr2h,c
 14014                           
 14015                           ;stkvar	_b @ sp[(-4)+-4]
 14016  01281E  0EF9               	movlw	249
 14017  012820  24E1               	addwf	fsr1l,w,c
 14018  012822  6EE9               	movwf	fsr0l,c
 14019  012824  0EFF               	movlw	255
 14020  012826  20E2               	addwfc	fsr1h,w,c
 14021  012828  6EEA               	movwf	fsr0h,c
 14022  01282A  006F FF7F FFEF     	movff	indf2,indf0
 14023                           
 14024                           ;stkvar	_grs @ sp[(-4)+0]
 14025                           ;stkvar	_a @ sp[(-4)+-8]
 14026  012830  0EF5               	movlw	245
 14027  012832  24E1               	addwf	fsr1l,w,c
 14028  012834  6ED9               	movwf	fsr2l,c
 14029  012836  0EFF               	movlw	255
 14030  012838  20E2               	addwfc	fsr1h,w,c
 14031  01283A  6EDA               	movwf	fsr2h,c
 14032  01283C  0EFC               	movlw	-4
 14033  01283E  006F FF8F FFDF     	movff	plusw1,indf2
 14034                           
 14035                           ;stkvar	_b @ sp[(-4)+-4]
 14036  012844  0EFA               	movlw	250
 14037  012846  24E1               	addwf	fsr1l,w,c
 14038  012848  6ED9               	movwf	fsr2l,c
 14039  01284A  0EFF               	movlw	255
 14040  01284C  20E2               	addwfc	fsr1h,w,c
 14041  01284E  6EDA               	movwf	fsr2h,c
 14042  012850  50DF               	movf	indf2,w,c
 14043  012852  6E3D               	movwf	(btemp+11)^0,c
 14044                           
 14045                           ;stkvar	_grs @ sp[(-4)+0]
 14046  012854  0EFC               	movlw	-4
 14047  012856  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14048                           
 14049                           ;stkvar	_a @ sp[(-4)+-8]
 14050  01285C  0EF6               	movlw	246
 14051  01285E  24E1               	addwf	fsr1l,w,c
 14052  012860  6ED9               	movwf	fsr2l,c
 14053  012862  0EFF               	movlw	255
 14054  012864  20E2               	addwfc	fsr1h,w,c
 14055  012866  6EDA               	movwf	fsr2h,c
 14056                           
 14057                           ;stkvar	_b @ sp[(-4)+-4]
 14058  012868  0EFA               	movlw	250
 14059  01286A  24E1               	addwf	fsr1l,w,c
 14060  01286C  6EE9               	movwf	fsr0l,c
 14061  01286E  0EFF               	movlw	255
 14062  012870  20E2               	addwfc	fsr1h,w,c
 14063  012872  6EEA               	movwf	fsr0h,c
 14064  012874  006F FF7F FFEF     	movff	indf2,indf0
 14065                           
 14066                           ;stkvar	_grs @ sp[(-4)+0]
 14067                           ;stkvar	_a @ sp[(-4)+-8]
 14068  01287A  0EF6               	movlw	246
 14069  01287C  24E1               	addwf	fsr1l,w,c
 14070  01287E  6ED9               	movwf	fsr2l,c
 14071  012880  0EFF               	movlw	255
 14072  012882  20E2               	addwfc	fsr1h,w,c
 14073  012884  6EDA               	movwf	fsr2h,c
 14074  012886  0EFC               	movlw	-4
 14075  012888  006F FF8F FFDF     	movff	plusw1,indf2
 14076                           
 14077                           ;stkvar	_b @ sp[(-4)+-4]
 14078  01288E  0EFB               	movlw	251
 14079  012890  24E1               	addwf	fsr1l,w,c
 14080  012892  6ED9               	movwf	fsr2l,c
 14081  012894  0EFF               	movlw	255
 14082  012896  20E2               	addwfc	fsr1h,w,c
 14083  012898  6EDA               	movwf	fsr2h,c
 14084  01289A  50DF               	movf	indf2,w,c
 14085  01289C  6E3D               	movwf	(btemp+11)^0,c
 14086                           
 14087                           ;stkvar	_grs @ sp[(-4)+0]
 14088  01289E  0EFC               	movlw	-4
 14089  0128A0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14090                           
 14091                           ;stkvar	_a @ sp[(-4)+-8]
 14092  0128A6  0EF7               	movlw	247
 14093  0128A8  24E1               	addwf	fsr1l,w,c
 14094  0128AA  6ED9               	movwf	fsr2l,c
 14095  0128AC  0EFF               	movlw	255
 14096  0128AE  20E2               	addwfc	fsr1h,w,c
 14097  0128B0  6EDA               	movwf	fsr2h,c
 14098                           
 14099                           ;stkvar	_b @ sp[(-4)+-4]
 14100  0128B2  0EFB               	movlw	251
 14101  0128B4  24E1               	addwf	fsr1l,w,c
 14102  0128B6  6EE9               	movwf	fsr0l,c
 14103  0128B8  0EFF               	movlw	255
 14104  0128BA  20E2               	addwfc	fsr1h,w,c
 14105  0128BC  6EEA               	movwf	fsr0h,c
 14106  0128BE  006F FF7F FFEF     	movff	indf2,indf0
 14107                           
 14108                           ;stkvar	_grs @ sp[(-4)+0]
 14109                           ;stkvar	_a @ sp[(-4)+-8]
 14110  0128C4  0EF7               	movlw	247
 14111  0128C6  24E1               	addwf	fsr1l,w,c
 14112  0128C8  6ED9               	movwf	fsr2l,c
 14113  0128CA  0EFF               	movlw	255
 14114  0128CC  20E2               	addwfc	fsr1h,w,c
 14115  0128CE  6EDA               	movwf	fsr2h,c
 14116  0128D0  0EFC               	movlw	-4
 14117  0128D2  006F FF8F FFDF     	movff	plusw1,indf2
 14118  0128D8                     l9476:
 14119                           
 14120                           ;stkvar	_grs @ sp[(-4)+0]
 14121  0128D8  0EFC               	movlw	-4
 14122  0128DA  6AE3               	clrf	plusw1,c
 14123                           
 14124                           ;stkvar	_aexp @ sp[(-4)+2]
 14125  0128DC  0EFE               	movlw	-2
 14126  0128DE  50E3               	movf	plusw1,w,c
 14127  0128E0  6E3C               	movwf	(btemp+10)^0,c
 14128  0128E2  6A3D               	clrf	(btemp+11)^0,c
 14129                           
 14130                           ;stkvar	_bexp @ sp[(-4)+1]
 14131  0128E4  0EFD               	movlw	-3
 14132  0128E6  50E3               	movf	plusw1,w,c
 14133  0128E8  5E3C               	subwf	(btemp+10)^0,f,c
 14134  0128EA  0E00               	movlw	0
 14135  0128EC  5A3D               	subwfb	(btemp+11)^0,f,c
 14136  0128EE  BE3D               	btfsc	(btemp+11)^0,7,c
 14137  0128F0  D062               	goto	l9500
 14138  0128F2  503D               	movf	(btemp+11)^0,w,c
 14139  0128F4  E104               	bnz	u8980
 14140  0128F6  0E1A               	movlw	26
 14141  0128F8  5C3C               	subwf	(btemp+10)^0,w,c
 14142  0128FA  A0D8               	btfss	status,0,c
 14143  0128FC  D05C               	goto	l9500
 14144  0128FE                     u8980:
 14145                           
 14146                           ;stkvar	_b @ sp[(-4)+-4]
 14147  0128FE  0EF8               	movlw	-8
 14148  012900  50E3               	movf	plusw1,w,c
 14149  012902  E10A               	bnz	u8991
 14150  012904  0EF9               	movlw	-7
 14151  012906  50E3               	movf	plusw1,w,c
 14152  012908  E107               	bnz	u8991
 14153  01290A  0EFA               	movlw	-6
 14154  01290C  50E3               	movf	plusw1,w,c
 14155  01290E  E104               	bnz	u8991
 14156  012910  0EFB               	movlw	-5
 14157  012912  50E3               	movf	plusw1,w,c
 14158  012914  B4D8               	btfsc	status,2,c
 14159  012916  D003               	goto	u8990
 14160  012918                     u8991:
 14161  012918  6A3D               	clrf	(btemp+11)^0,c
 14162  01291A  2A3D               	incf	(btemp+11)^0,f,c
 14163  01291C  D001               	goto	u9008
 14164  01291E                     u8990:
 14165  01291E  6A3D               	clrf	(btemp+11)^0,c
 14166  012920                     u9008:
 14167                           
 14168                           ;stkvar	_grs @ sp[(-4)+0]
 14169  012920  0EFC               	movlw	-4
 14170  012922  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14171                           
 14172                           ;stkvar	_b @ sp[(-4)+-4]
 14173  012928  0EF8               	movlw	-8
 14174  01292A  6AE3               	clrf	plusw1,c
 14175  01292C  0EF9               	movlw	-7
 14176  01292E  6AE3               	clrf	plusw1,c
 14177  012930  0EFA               	movlw	-6
 14178  012932  6AE3               	clrf	plusw1,c
 14179  012934  0EFB               	movlw	-5
 14180  012936  6AE3               	clrf	plusw1,c
 14181                           
 14182                           ;stkvar	_aexp @ sp[(-4)+2]
 14183                           ;stkvar	_bexp @ sp[(-4)+1]
 14184  012938  0EFE               	movlw	-2
 14185  01293A  006F FF8C  F032    	movff	plusw1,btemp
 14186  012940  0EFD               	movlw	-3
 14187  012942  0060  F0CB  FFE3   	movff	btemp,plusw1
 14188  012948  D042               	goto	u9040
 14189  01294A                     l9486:
 14190                           
 14191                           ;stkvar	_grs @ sp[(-4)+0]
 14192  01294A  0EFC               	movlw	-4
 14193  01294C  A0E3               	btfss	plusw1,0,c
 14194  01294E  D00D               	goto	l9490
 14195                           
 14196                           ;stkvar	_grs @ sp[(-4)+0]
 14197  012950  0EFC               	movlw	-4
 14198  012952  006F FF8C  F03D    	movff	plusw1,btemp+11
 14199  012958  90D8               	bcf	status,0,c
 14200  01295A  323D               	rrcf	(btemp+11)^0,f,c
 14201  01295C  0E01               	movlw	1
 14202  01295E  123D               	iorwf	(btemp+11)^0,f,c
 14203                           
 14204                           ;stkvar	_grs @ sp[(-4)+0]
 14205  012960  0EFC               	movlw	-4
 14206  012962  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14207  012968  D009               	goto	l9492
 14208  01296A                     l9490:
 14209                           
 14210                           ;stkvar	_grs @ sp[(-4)+0]
 14211  01296A  50E1               	movf	fsr1l,w,c
 14212  01296C  0FFC               	addlw	-4
 14213  01296E  6ED9               	movwf	fsr2l,c
 14214  012970  50E2               	movf	fsr1h,w,c
 14215  012972  6EDA               	movwf	fsr2h,c
 14216  012974  0EFF               	movlw	255
 14217  012976  22DA               	addwfc	fsr2h,f,c
 14218  012978  90D8               	bcf	status,0,c
 14219  01297A  32DF               	rrcf	indf2,f,c
 14220  01297C                     l9492:
 14221                           
 14222                           ;stkvar	_b @ sp[(-4)+-4]
 14223  01297C  0EF8               	movlw	-8
 14224  01297E  A0E3               	btfss	plusw1,0,c
 14225  012980  D002               	goto	l9496
 14226                           
 14227                           ;stkvar	_grs @ sp[(-4)+0]
 14228  012982  0EFC               	movlw	-4
 14229  012984  8EE3               	bsf	plusw1,7,c
 14230  012986                     l9496:
 14231  012986  0E01               	movlw	1
 14232  012988  6E3D               	movwf	(btemp+11)^0,c
 14233                           
 14234                           ;stkvar	_b @ sp[(-4)+-4]
 14235  01298A  50E1               	movf	fsr1l,w,c
 14236  01298C  0FF8               	addlw	-8
 14237  01298E  6ED9               	movwf	fsr2l,c
 14238  012990  50E2               	movf	fsr1h,w,c
 14239  012992  6EDA               	movwf	fsr2h,c
 14240  012994  0EFF               	movlw	255
 14241  012996  22DA               	addwfc	fsr2h,f,c
 14242  012998  283D               	incf	(btemp+11)^0,w,c
 14243  01299A  52DE               	movf	postinc2,f,c
 14244  01299C  D008               	goto	u9030
 14245  01299E                     u9035:
 14246  01299E  52DE               	movf	postinc2,f,c
 14247  0129A0  90D8               	bcf	status,0,c
 14248  0129A2  BEDC               	btfsc	preinc2,7,c
 14249  0129A4  80D8               	bsf	status,0,c
 14250  0129A6  32DD               	rrcf	postdec2,f,c
 14251  0129A8  32DD               	rrcf	postdec2,f,c
 14252  0129AA  32DD               	rrcf	postdec2,f,c
 14253  0129AC  32DE               	rrcf	postinc2,f,c
 14254  0129AE                     u9030:
 14255  0129AE  2EE8               	decfsz	wreg,f,c
 14256  0129B0  D7F6               	goto	u9035
 14257                           
 14258                           ;stkvar	_bexp @ sp[(-4)+1]
 14259  0129B2  0EFD               	movlw	-3
 14260  0129B4  2AE3               	incf	plusw1,f,c
 14261  0129B6                     l9500:
 14262                           
 14263                           ;stkvar	_aexp @ sp[(-4)+2]
 14264                           ;stkvar	_bexp @ sp[(-4)+1]
 14265  0129B6  50E1               	movf	fsr1l,w,c
 14266  0129B8  0FFD               	addlw	-3
 14267  0129BA  6ED9               	movwf	fsr2l,c
 14268  0129BC  50E2               	movf	fsr1h,w,c
 14269  0129BE  6EDA               	movwf	fsr2h,c
 14270  0129C0  0EFF               	movlw	255
 14271  0129C2  22DA               	addwfc	fsr2h,f,c
 14272  0129C4  0EFE               	movlw	-2
 14273  0129C6  50E3               	movf	plusw1,w,c
 14274  0129C8  5CDE               	subwf	postinc2,w,c
 14275  0129CA  A0D8               	btfss	status,0,c
 14276  0129CC  D7BE               	goto	l9486
 14277  0129CE                     u9040:
 14278                           
 14279                           ;stkvar	_signs @ sp[(-4)+3]
 14280  0129CE  0EFF               	movlw	-1
 14281  0129D0  BCE3               	btfsc	plusw1,6,c
 14282  0129D2  D066               	goto	l9528
 14283                           
 14284                           ;stkvar	_bexp @ sp[(-4)+1]
 14285  0129D4  0EFD               	movlw	-3
 14286  0129D6  50E3               	movf	plusw1,w,c
 14287  0129D8  B4D8               	btfsc	status,2,c
 14288  0129DA  D0F2               	goto	u9140
 14289                           
 14290                           ;stkvar	_a @ sp[(-4)+-8]
 14291                           ;stkvar	_b @ sp[(-4)+-4]
 14292  0129DC  0EF8               	movlw	-8
 14293  0129DE  50E3               	movf	plusw1,w,c
 14294  0129E0  6E32               	movwf	btemp^0,c
 14295  0129E2  0EF4               	movlw	-12
 14296  0129E4  50E3               	movf	plusw1,w,c
 14297  0129E6  2632               	addwf	btemp^0,f,c
 14298  0129E8  0EF8               	movlw	-8
 14299  0129EA  0060  F0CB  FFE3   	movff	btemp,plusw1
 14300  0129F0  0EF9               	movlw	-7
 14301  0129F2  50E3               	movf	plusw1,w,c
 14302  0129F4  6E32               	movwf	btemp^0,c
 14303  0129F6  0EF5               	movlw	-11
 14304  0129F8  50E3               	movf	plusw1,w,c
 14305  0129FA  2232               	addwfc	btemp^0,f,c
 14306  0129FC  0EF9               	movlw	-7
 14307  0129FE  0060  F0CB  FFE3   	movff	btemp,plusw1
 14308  012A04  0EFA               	movlw	-6
 14309  012A06  50E3               	movf	plusw1,w,c
 14310  012A08  6E32               	movwf	btemp^0,c
 14311  012A0A  0EF6               	movlw	-10
 14312  012A0C  50E3               	movf	plusw1,w,c
 14313  012A0E  2232               	addwfc	btemp^0,f,c
 14314  012A10  0EFA               	movlw	-6
 14315  012A12  0060  F0CB  FFE3   	movff	btemp,plusw1
 14316  012A18  0EFB               	movlw	-5
 14317  012A1A  50E3               	movf	plusw1,w,c
 14318  012A1C  6E32               	movwf	btemp^0,c
 14319  012A1E  0EF7               	movlw	-9
 14320  012A20  50E3               	movf	plusw1,w,c
 14321  012A22  2232               	addwfc	btemp^0,f,c
 14322  012A24  0EFB               	movlw	-5
 14323  012A26  0060  F0CB  FFE3   	movff	btemp,plusw1
 14324                           
 14325                           ;stkvar	_b @ sp[(-4)+-4]
 14326  012A2C  0EFB               	movlw	-5
 14327  012A2E  A0E3               	btfss	plusw1,0,c
 14328  012A30  D101               	goto	u9180
 14329                           
 14330                           ;stkvar	_grs @ sp[(-4)+0]
 14331  012A32  0EFC               	movlw	-4
 14332  012A34  A0E3               	btfss	plusw1,0,c
 14333  012A36  D00D               	goto	l9518
 14334                           
 14335                           ;stkvar	_grs @ sp[(-4)+0]
 14336  012A38  0EFC               	movlw	-4
 14337  012A3A  006F FF8C  F03D    	movff	plusw1,btemp+11
 14338  012A40  90D8               	bcf	status,0,c
 14339  012A42  323D               	rrcf	(btemp+11)^0,f,c
 14340  012A44  0E01               	movlw	1
 14341  012A46  123D               	iorwf	(btemp+11)^0,f,c
 14342                           
 14343                           ;stkvar	_grs @ sp[(-4)+0]
 14344  012A48  0EFC               	movlw	-4
 14345  012A4A  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14346  012A50  D009               	goto	l9520
 14347  012A52                     l9518:
 14348                           
 14349                           ;stkvar	_grs @ sp[(-4)+0]
 14350  012A52  50E1               	movf	fsr1l,w,c
 14351  012A54  0FFC               	addlw	-4
 14352  012A56  6ED9               	movwf	fsr2l,c
 14353  012A58  50E2               	movf	fsr1h,w,c
 14354  012A5A  6EDA               	movwf	fsr2h,c
 14355  012A5C  0EFF               	movlw	255
 14356  012A5E  22DA               	addwfc	fsr2h,f,c
 14357  012A60  90D8               	bcf	status,0,c
 14358  012A62  32DF               	rrcf	indf2,f,c
 14359  012A64                     l9520:
 14360                           
 14361                           ;stkvar	_b @ sp[(-4)+-4]
 14362  012A64  0EF8               	movlw	-8
 14363  012A66  A0E3               	btfss	plusw1,0,c
 14364  012A68  D002               	goto	l9524
 14365                           
 14366                           ;stkvar	_grs @ sp[(-4)+0]
 14367  012A6A  0EFC               	movlw	-4
 14368  012A6C  8EE3               	bsf	plusw1,7,c
 14369  012A6E                     l9524:
 14370  012A6E  0E01               	movlw	1
 14371  012A70  6E3D               	movwf	(btemp+11)^0,c
 14372                           
 14373                           ;stkvar	_b @ sp[(-4)+-4]
 14374  012A72  50E1               	movf	fsr1l,w,c
 14375  012A74  0FF8               	addlw	-8
 14376  012A76  6ED9               	movwf	fsr2l,c
 14377  012A78  50E2               	movf	fsr1h,w,c
 14378  012A7A  6EDA               	movwf	fsr2h,c
 14379  012A7C  0EFF               	movlw	255
 14380  012A7E  22DA               	addwfc	fsr2h,f,c
 14381  012A80  283D               	incf	(btemp+11)^0,w,c
 14382  012A82  52DE               	movf	postinc2,f,c
 14383  012A84  D008               	goto	u9100
 14384  012A86                     u9105:
 14385  012A86  52DE               	movf	postinc2,f,c
 14386  012A88  90D8               	bcf	status,0,c
 14387  012A8A  BEDC               	btfsc	preinc2,7,c
 14388  012A8C  80D8               	bsf	status,0,c
 14389  012A8E  32DD               	rrcf	postdec2,f,c
 14390  012A90  32DD               	rrcf	postdec2,f,c
 14391  012A92  32DD               	rrcf	postdec2,f,c
 14392  012A94  32DE               	rrcf	postinc2,f,c
 14393  012A96                     u9100:
 14394  012A96  2EE8               	decfsz	wreg,f,c
 14395  012A98  D7F6               	goto	u9105
 14396                           
 14397                           ;stkvar	_bexp @ sp[(-4)+1]
 14398  012A9A  0EFD               	movlw	-3
 14399  012A9C  2AE3               	incf	plusw1,f,c
 14400  012A9E  D0CA               	goto	u9180
 14401  012AA0                     l9528:
 14402                           
 14403                           ;stkvar	_a @ sp[(-4)+-8]
 14404                           ;stkvar	_b @ sp[(-4)+-4]
 14405  012AA0  50E1               	movf	fsr1l,w,c
 14406  012AA2  0FF8               	addlw	-8
 14407  012AA4  6ED9               	movwf	fsr2l,c
 14408  012AA6  50E2               	movf	fsr1h,w,c
 14409  012AA8  6EDA               	movwf	fsr2h,c
 14410  012AAA  0EFF               	movlw	255
 14411  012AAC  22DA               	addwfc	fsr2h,f,c
 14412  012AAE  0EF4               	movlw	-12
 14413  012AB0  50E3               	movf	plusw1,w,c
 14414  012AB2  5CDE               	subwf	postinc2,w,c
 14415  012AB4  0EF5               	movlw	-11
 14416  012AB6  50E3               	movf	plusw1,w,c
 14417  012AB8  58DE               	subwfb	postinc2,w,c
 14418  012ABA  0EF6               	movlw	-10
 14419  012ABC  50E3               	movf	plusw1,w,c
 14420  012ABE  58DE               	subwfb	postinc2,w,c
 14421  012AC0  50DE               	movf	postinc2,w,c
 14422  012AC2  0A80               	xorlw	128
 14423  012AC4  6E32               	movwf	btemp^0,c
 14424  012AC6  0EF7               	movlw	-9
 14425  012AC8  50E3               	movf	plusw1,w,c
 14426  012ACA  0A80               	xorlw	128
 14427  012ACC  5832               	subwfb	btemp^0,w,c
 14428  012ACE  B0D8               	btfsc	status,0,c
 14429  012AD0  D053               	goto	l9540
 14430                           
 14431                           ;stkvar	_b @ sp[(-4)+-4]
 14432                           ;stkvar	_a @ sp[(-4)+-8]
 14433  012AD2  0EF4               	movlw	-12
 14434  012AD4  006F FF8C  F03A    	movff	plusw1,btemp+8
 14435  012ADA  0EF5               	movlw	-11
 14436  012ADC  006F FF8C  F03B    	movff	plusw1,btemp+9
 14437  012AE2  0EF6               	movlw	-10
 14438  012AE4  006F FF8C  F03C    	movff	plusw1,btemp+10
 14439  012AEA  0EF7               	movlw	-9
 14440  012AEC  006F FF8C  F03D    	movff	plusw1,btemp+11
 14441  012AF2  0EF8               	movlw	-8
 14442  012AF4  50E3               	movf	plusw1,w,c
 14443  012AF6  5E3A               	subwf	(btemp+8)^0,f,c
 14444  012AF8  0EF9               	movlw	-7
 14445  012AFA  50E3               	movf	plusw1,w,c
 14446  012AFC  5A3B               	subwfb	(btemp+9)^0,f,c
 14447  012AFE  0EFA               	movlw	-6
 14448  012B00  50E3               	movf	plusw1,w,c
 14449  012B02  5A3C               	subwfb	(btemp+10)^0,f,c
 14450  012B04  0EFB               	movlw	-5
 14451  012B06  50E3               	movf	plusw1,w,c
 14452  012B08  5A3D               	subwfb	(btemp+11)^0,f,c
 14453  012B0A  0EFF               	movlw	255
 14454  012B0C  243A               	addwf	(btemp+8)^0,w,c
 14455  012B0E  6E36               	movwf	(btemp+4)^0,c
 14456  012B10  0EFF               	movlw	255
 14457  012B12  203B               	addwfc	(btemp+9)^0,w,c
 14458  012B14  6E37               	movwf	(btemp+5)^0,c
 14459  012B16  0EFF               	movlw	255
 14460  012B18  203C               	addwfc	(btemp+10)^0,w,c
 14461  012B1A  6E38               	movwf	(btemp+6)^0,c
 14462  012B1C  0EFF               	movlw	255
 14463  012B1E  203D               	addwfc	(btemp+11)^0,w,c
 14464  012B20  6E39               	movwf	(btemp+7)^0,c
 14465                           
 14466                           ;stkvar	_b @ sp[(-4)+-4]
 14467  012B22  0EF8               	movlw	-8
 14468  012B24  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 14469  012B2A  0EF9               	movlw	-7
 14470  012B2C  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 14471  012B32  0EFA               	movlw	-6
 14472  012B34  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 14473  012B3A  0EFB               	movlw	-5
 14474  012B3C  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 14475                           
 14476                           ;stkvar	_signs @ sp[(-4)+3]
 14477  012B42  0EFF               	movlw	-1
 14478  012B44  7EE3               	btg	plusw1,7,c
 14479                           
 14480                           ;stkvar	_grs @ sp[(-4)+0]
 14481  012B46  0EFC               	movlw	-4
 14482  012B48  50E3               	movf	plusw1,w,c
 14483  012B4A  0800               	sublw	0
 14484  012B4C  6E3D               	movwf	(btemp+11)^0,c
 14485                           
 14486                           ;stkvar	_grs @ sp[(-4)+0]
 14487  012B4E  0EFC               	movlw	-4
 14488  012B50  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14489                           
 14490                           ;stkvar	_grs @ sp[(-4)+0]
 14491  012B56  0EFC               	movlw	-4
 14492  012B58  50E3               	movf	plusw1,w,c
 14493  012B5A  A4D8               	btfss	status,2,c
 14494  012B5C  D020               	goto	l9542
 14495                           
 14496                           ;stkvar	_b @ sp[(-4)+-4]
 14497  012B5E  50E1               	movf	fsr1l,w,c
 14498  012B60  0FF8               	addlw	-8
 14499  012B62  6ED9               	movwf	fsr2l,c
 14500  012B64  50E2               	movf	fsr1h,w,c
 14501  012B66  6EDA               	movwf	fsr2h,c
 14502  012B68  0EFF               	movlw	255
 14503  012B6A  22DA               	addwfc	fsr2h,f,c
 14504  012B6C  2ADE               	incf	postinc2,f,c
 14505  012B6E  0E00               	movlw	0
 14506  012B70  22DE               	addwfc	postinc2,f,c
 14507  012B72  22DE               	addwfc	postinc2,f,c
 14508  012B74  22DE               	addwfc	postinc2,f,c
 14509  012B76  D013               	goto	l9542
 14510  012B78                     l9540:
 14511                           
 14512                           ;stkvar	_a @ sp[(-4)+-8]
 14513                           ;stkvar	_b @ sp[(-4)+-4]
 14514  012B78  50E1               	movf	fsr1l,w,c
 14515  012B7A  0FF8               	addlw	-8
 14516  012B7C  6ED9               	movwf	fsr2l,c
 14517  012B7E  50E2               	movf	fsr1h,w,c
 14518  012B80  6EDA               	movwf	fsr2h,c
 14519  012B82  0EFF               	movlw	255
 14520  012B84  22DA               	addwfc	fsr2h,f,c
 14521  012B86  0EF4               	movlw	-12
 14522  012B88  50E3               	movf	plusw1,w,c
 14523  012B8A  5EDE               	subwf	postinc2,f,c
 14524  012B8C  0EF5               	movlw	-11
 14525  012B8E  50E3               	movf	plusw1,w,c
 14526  012B90  5ADE               	subwfb	postinc2,f,c
 14527  012B92  0EF6               	movlw	-10
 14528  012B94  50E3               	movf	plusw1,w,c
 14529  012B96  5ADE               	subwfb	postinc2,f,c
 14530  012B98  0EF7               	movlw	-9
 14531  012B9A  50E3               	movf	plusw1,w,c
 14532  012B9C  5ADE               	subwfb	postinc2,f,c
 14533  012B9E                     l9542:
 14534                           
 14535                           ;stkvar	_b @ sp[(-4)+-4]
 14536  012B9E  0EF8               	movlw	-8
 14537  012BA0  50E3               	movf	plusw1,w,c
 14538  012BA2  E145               	bnz	l9564
 14539  012BA4  0EF9               	movlw	-7
 14540  012BA6  50E3               	movf	plusw1,w,c
 14541  012BA8  E142               	bnz	l9564
 14542  012BAA  0EFA               	movlw	-6
 14543  012BAC  50E3               	movf	plusw1,w,c
 14544  012BAE  E13F               	bnz	l9564
 14545  012BB0  0EFB               	movlw	-5
 14546  012BB2  50E3               	movf	plusw1,w,c
 14547  012BB4  A4D8               	btfss	status,2,c
 14548  012BB6  D03B               	goto	l9564
 14549                           
 14550                           ;stkvar	_grs @ sp[(-4)+0]
 14551  012BB8  0EFC               	movlw	-4
 14552  012BBA  50E3               	movf	plusw1,w,c
 14553  012BBC  A4D8               	btfss	status,2,c
 14554  012BBE  D037               	goto	l9564
 14555  012BC0                     u9140:
 14556  012BC0  0E00               	movlw	0
 14557  012BC2  6E32               	movwf	btemp^0,c
 14558  012BC4  0E00               	movlw	0
 14559  012BC6  6E33               	movwf	(btemp+1)^0,c
 14560  012BC8  0E00               	movlw	0
 14561  012BCA  6E34               	movwf	(btemp+2)^0,c
 14562  012BCC  0E00               	movlw	0
 14563  012BCE  6E35               	movwf	(btemp+3)^0,c
 14564  012BD0  D0C6               	goto	l2586
 14565  012BD2                     l9550:
 14566                           
 14567                           ;stkvar	_b @ sp[(-4)+-4]
 14568  012BD2  90D8               	bcf	status,0,c
 14569  012BD4  0EF8               	movlw	-8
 14570  012BD6  36E3               	rlcf	plusw1,f,c
 14571  012BD8  0EF9               	movlw	-7
 14572  012BDA  36E3               	rlcf	plusw1,f,c
 14573  012BDC  0EFA               	movlw	-6
 14574  012BDE  36E3               	rlcf	plusw1,f,c
 14575  012BE0  0EFB               	movlw	-5
 14576  012BE2  36E3               	rlcf	plusw1,f,c
 14577                           
 14578                           ;stkvar	_grs @ sp[(-4)+0]
 14579  012BE4  0EFC               	movlw	-4
 14580  012BE6  AEE3               	btfss	plusw1,7,c
 14581  012BE8  D002               	goto	l2598
 14582                           
 14583                           ;stkvar	_b @ sp[(-4)+-4]
 14584  012BEA  0EF8               	movlw	-8
 14585  012BEC  80E3               	bsf	plusw1,0,c
 14586  012BEE                     l2598:
 14587                           
 14588                           ;stkvar	_grs @ sp[(-4)+0]
 14589  012BEE  0EFC               	movlw	-4
 14590  012BF0  A0E3               	btfss	plusw1,0,c
 14591  012BF2  D00E               	goto	l9558
 14592                           
 14593                           ;stkvar	_grs @ sp[(-4)+0]
 14594  012BF4  0EFC               	movlw	-4
 14595  012BF6  006F FF8C  F03D    	movff	plusw1,btemp+11
 14596  012BFC  90D8               	bcf	status,0,c
 14597  012BFE  343D               	rlcf	(btemp+11)^0,w,c
 14598  012C00  6E3C               	movwf	(btemp+10)^0,c
 14599  012C02  0E01               	movlw	1
 14600  012C04  123C               	iorwf	(btemp+10)^0,f,c
 14601                           
 14602                           ;stkvar	_grs @ sp[(-4)+0]
 14603  012C06  0EFC               	movlw	-4
 14604  012C08  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 14605  012C0E  D009               	goto	l9560
 14606  012C10                     l9558:
 14607                           
 14608                           ;stkvar	_grs @ sp[(-4)+0]
 14609  012C10  50E1               	movf	fsr1l,w,c
 14610  012C12  0FFC               	addlw	-4
 14611  012C14  6ED9               	movwf	fsr2l,c
 14612  012C16  50E2               	movf	fsr1h,w,c
 14613  012C18  6EDA               	movwf	fsr2h,c
 14614  012C1A  0EFF               	movlw	255
 14615  012C1C  22DA               	addwfc	fsr2h,f,c
 14616  012C1E  90D8               	bcf	status,0,c
 14617  012C20  36DF               	rlcf	indf2,f,c
 14618  012C22                     l9560:
 14619                           
 14620                           ;stkvar	_bexp @ sp[(-4)+1]
 14621  012C22  0EFD               	movlw	-3
 14622  012C24  50E3               	movf	plusw1,w,c
 14623  012C26  B4D8               	btfsc	status,2,c
 14624  012C28  D002               	goto	l9564
 14625                           
 14626                           ;stkvar	_bexp @ sp[(-4)+1]
 14627  012C2A  0EFD               	movlw	-3
 14628  012C2C  06E3               	decf	plusw1,f,c
 14629  012C2E                     l9564:
 14630                           
 14631                           ;stkvar	_b @ sp[(-4)+-4]
 14632  012C2E  0EFA               	movlw	-6
 14633  012C30  AEE3               	btfss	plusw1,7,c
 14634  012C32  D7CF               	goto	l9550
 14635  012C34                     u9180:
 14636                           
 14637                           ;stkvar	_aexp @ sp[(-4)+2]
 14638  012C34  0EFE               	movlw	-2
 14639  012C36  6AE3               	clrf	plusw1,c
 14640                           
 14641                           ;stkvar	_grs @ sp[(-4)+0]
 14642  012C38  0EFC               	movlw	-4
 14643  012C3A  AEE3               	btfss	plusw1,7,c
 14644  012C3C  D00F               	goto	l9578
 14645                           
 14646                           ;stkvar	_grs @ sp[(-4)+0]
 14647  012C3E  0EFC               	movlw	-4
 14648  012C40  006F FF8C  F03D    	movff	plusw1,btemp+11
 14649  012C46  0E7F               	movlw	127
 14650  012C48  163D               	andwf	(btemp+11)^0,f,c
 14651  012C4A  B4D8               	btfsc	status,2,c
 14652  012C4C  D004               	goto	l9574
 14653  012C4E                     u9200:
 14654                           
 14655                           ;stkvar	_aexp @ sp[(-4)+2]
 14656  012C4E  0EFE               	movlw	-2
 14657  012C50  6AE3               	clrf	plusw1,c
 14658  012C52  2AE3               	incf	plusw1,f,c
 14659  012C54  D003               	goto	l9578
 14660  012C56                     l9574:
 14661                           
 14662                           ;stkvar	_b @ sp[(-4)+-4]
 14663  012C56  0EF8               	movlw	-8
 14664  012C58  B0E3               	btfsc	plusw1,0,c
 14665  012C5A  D7F9               	goto	u9200
 14666  012C5C                     l9578:
 14667                           
 14668                           ;stkvar	_aexp @ sp[(-4)+2]
 14669  012C5C  0EFE               	movlw	-2
 14670  012C5E  50E3               	movf	plusw1,w,c
 14671  012C60  B4D8               	btfsc	status,2,c
 14672  012C62  D02B               	goto	l9590
 14673                           
 14674                           ;stkvar	_b @ sp[(-4)+-4]
 14675  012C64  50E1               	movf	fsr1l,w,c
 14676  012C66  0FF8               	addlw	-8
 14677  012C68  6ED9               	movwf	fsr2l,c
 14678  012C6A  50E2               	movf	fsr1h,w,c
 14679  012C6C  6EDA               	movwf	fsr2h,c
 14680  012C6E  0EFF               	movlw	255
 14681  012C70  22DA               	addwfc	fsr2h,f,c
 14682  012C72  2ADE               	incf	postinc2,f,c
 14683  012C74  0E00               	movlw	0
 14684  012C76  22DE               	addwfc	postinc2,f,c
 14685  012C78  22DE               	addwfc	postinc2,f,c
 14686  012C7A  22DE               	addwfc	postinc2,f,c
 14687                           
 14688                           ;stkvar	_b @ sp[(-4)+-4]
 14689  012C7C  0EFB               	movlw	-5
 14690  012C7E  A0E3               	btfss	plusw1,0,c
 14691  012C80  D01C               	goto	l9590
 14692  012C82  0E01               	movlw	1
 14693  012C84  6E3D               	movwf	(btemp+11)^0,c
 14694                           
 14695                           ;stkvar	_b @ sp[(-4)+-4]
 14696  012C86  50E1               	movf	fsr1l,w,c
 14697  012C88  0FF8               	addlw	-8
 14698  012C8A  6ED9               	movwf	fsr2l,c
 14699  012C8C  50E2               	movf	fsr1h,w,c
 14700  012C8E  6EDA               	movwf	fsr2h,c
 14701  012C90  0EFF               	movlw	255
 14702  012C92  22DA               	addwfc	fsr2h,f,c
 14703  012C94  283D               	incf	(btemp+11)^0,w,c
 14704  012C96  52DE               	movf	postinc2,f,c
 14705  012C98  D008               	goto	u9240
 14706  012C9A                     u9245:
 14707  012C9A  52DE               	movf	postinc2,f,c
 14708  012C9C  90D8               	bcf	status,0,c
 14709  012C9E  BEDC               	btfsc	preinc2,7,c
 14710  012CA0  80D8               	bsf	status,0,c
 14711  012CA2  32DD               	rrcf	postdec2,f,c
 14712  012CA4  32DD               	rrcf	postdec2,f,c
 14713  012CA6  32DD               	rrcf	postdec2,f,c
 14714  012CA8  32DE               	rrcf	postinc2,f,c
 14715  012CAA                     u9240:
 14716  012CAA  2EE8               	decfsz	wreg,f,c
 14717  012CAC  D7F6               	goto	u9245
 14718                           
 14719                           ;stkvar	_bexp @ sp[(-4)+1]
 14720  012CAE  0EFD               	movlw	-3
 14721  012CB0  28E3               	incf	plusw1,w,c
 14722  012CB2  B4D8               	btfsc	status,2,c
 14723  012CB4  D002               	goto	l9590
 14724                           
 14725                           ;stkvar	_bexp @ sp[(-4)+1]
 14726  012CB6  0EFD               	movlw	-3
 14727  012CB8  2AE3               	incf	plusw1,f,c
 14728  012CBA                     l9590:
 14729                           
 14730                           ;stkvar	_bexp @ sp[(-4)+1]
 14731  012CBA  0EFD               	movlw	-3
 14732  012CBC  28E3               	incf	plusw1,w,c
 14733  012CBE  B4D8               	btfsc	status,2,c
 14734  012CC0  D004               	goto	u9270
 14735                           
 14736                           ;stkvar	_bexp @ sp[(-4)+1]
 14737  012CC2  0EFD               	movlw	-3
 14738  012CC4  50E3               	movf	plusw1,w,c
 14739  012CC6  A4D8               	btfss	status,2,c
 14740  012CC8  D00E               	goto	l9600
 14741  012CCA                     u9270:
 14742                           
 14743                           ;stkvar	_b @ sp[(-4)+-4]
 14744  012CCA  0EF8               	movlw	-8
 14745  012CCC  6AE3               	clrf	plusw1,c
 14746  012CCE  0EF9               	movlw	-7
 14747  012CD0  6AE3               	clrf	plusw1,c
 14748  012CD2  0EFA               	movlw	-6
 14749  012CD4  6AE3               	clrf	plusw1,c
 14750  012CD6  0EFB               	movlw	-5
 14751  012CD8  6AE3               	clrf	plusw1,c
 14752                           
 14753                           ;stkvar	_bexp @ sp[(-4)+1]
 14754  012CDA  0EFD               	movlw	-3
 14755  012CDC  50E3               	movf	plusw1,w,c
 14756  012CDE  A4D8               	btfss	status,2,c
 14757  012CE0  D002               	goto	l9600
 14758                           
 14759                           ;stkvar	_signs @ sp[(-4)+3]
 14760  012CE2  0EFF               	movlw	-1
 14761  012CE4  6AE3               	clrf	plusw1,c
 14762  012CE6                     l9600:
 14763                           
 14764                           ;stkvar	_bexp @ sp[(-4)+1]
 14765  012CE6  0EFD               	movlw	-3
 14766  012CE8  A0E3               	btfss	plusw1,0,c
 14767  012CEA  D009               	goto	l9604
 14768                           
 14769                           ;stkvar	_b @ sp[(-4)+-4]
 14770  012CEC  0EFA               	movlw	250
 14771  012CEE  24E1               	addwf	fsr1l,w,c
 14772  012CF0  6ED9               	movwf	fsr2l,c
 14773  012CF2  0EFF               	movlw	255
 14774  012CF4  20E2               	addwfc	fsr1h,w,c
 14775  012CF6  6EDA               	movwf	fsr2h,c
 14776  012CF8  0E00               	movlw	0
 14777  012CFA  8EDB               	bsf	plusw2,7,c
 14778  012CFC  D008               	goto	l9606
 14779  012CFE                     l9604:
 14780                           
 14781                           ;stkvar	_b @ sp[(-4)+-4]
 14782  012CFE  0EFA               	movlw	250
 14783  012D00  24E1               	addwf	fsr1l,w,c
 14784  012D02  6ED9               	movwf	fsr2l,c
 14785  012D04  0EFF               	movlw	255
 14786  012D06  20E2               	addwfc	fsr1h,w,c
 14787  012D08  6EDA               	movwf	fsr2h,c
 14788  012D0A  0E7F               	movlw	127
 14789  012D0C  16DF               	andwf	indf2,f,c
 14790  012D0E                     l9606:
 14791                           
 14792                           ;stkvar	_b @ sp[(-4)+-4]
 14793  012D0E  0EFB               	movlw	251
 14794  012D10  24E1               	addwf	fsr1l,w,c
 14795  012D12  6ED9               	movwf	fsr2l,c
 14796  012D14  0EFF               	movlw	255
 14797  012D16  20E2               	addwfc	fsr1h,w,c
 14798  012D18  6EDA               	movwf	fsr2h,c
 14799                           
 14800                           ;stkvar	_bexp @ sp[(-4)+1]
 14801  012D1A  0EFD               	movlw	-3
 14802  012D1C  006F FF8C  F03D    	movff	plusw1,btemp+11
 14803  012D22  90D8               	bcf	status,0,c
 14804  012D24  303D               	rrcf	(btemp+11)^0,w,c
 14805  012D26  6EDF               	movwf	indf2,c
 14806                           
 14807                           ;stkvar	_signs @ sp[(-4)+3]
 14808  012D28  0EFF               	movlw	-1
 14809  012D2A  AEE3               	btfss	plusw1,7,c
 14810  012D2C  D008               	goto	l9612
 14811                           
 14812                           ;stkvar	_b @ sp[(-4)+-4]
 14813  012D2E  0EFB               	movlw	251
 14814  012D30  24E1               	addwf	fsr1l,w,c
 14815  012D32  6ED9               	movwf	fsr2l,c
 14816  012D34  0EFF               	movlw	255
 14817  012D36  20E2               	addwfc	fsr1h,w,c
 14818  012D38  6EDA               	movwf	fsr2h,c
 14819  012D3A  0E00               	movlw	0
 14820  012D3C  8EDB               	bsf	plusw2,7,c
 14821  012D3E                     l9612:
 14822                           
 14823                           ;stkvar	_b @ sp[(-4)+-4]
 14824  012D3E  0EF8               	movlw	-8
 14825  012D40  006F FF8C  F032    	movff	plusw1,btemp
 14826  012D46  0EF9               	movlw	-7
 14827  012D48  006F FF8C  F033    	movff	plusw1,btemp+1
 14828  012D4E  0EFA               	movlw	-6
 14829  012D50  006F FF8C  F034    	movff	plusw1,btemp+2
 14830  012D56  0EFB               	movlw	-5
 14831  012D58  006F FF8C  F035    	movff	plusw1,btemp+3
 14832  012D5E                     l2586:
 14833                           
 14834                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 14835  012D5E  0EF4               	movlw	244
 14836  012D60  26E1               	addwf	fsr1l,f,c
 14837  012D62  0EFF               	movlw	255
 14838  012D64  22E2               	addwfc	fsr1h,f,c
 14839  012D66  0012               	return		;funcret
 14840  012D68                     __end_of___fladd:
 14841                           	opt callstack 0
 14842                           
 14843 ;; *************** function ___flneg *****************
 14844 ;; Defined at:
 14845 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14846 ;; Parameters:    Size  Location     Type
 14847 ;;  f1              4  [STACK] unsigned char 
 14848 ;; Auto vars:     Size  Location     Type
 14849 ;;		None
 14850 ;; Return value:  Size  Location     Type
 14851 ;;                  4  [STACK] unsigned char 
 14852 ;; Registers used:
 14853 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14854 ;; Tracked objects:
 14855 ;;		On entry : 0/5
 14856 ;;		On exit  : 0/0
 14857 ;;		Unchanged: 0/0
 14858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14863 ;;Total ram usage:        0 bytes
 14864 ;; Hardware stack levels used:    1
 14865 ;; Hardware stack levels required when called:    6
 14866 ;; This function calls:
 14867 ;;		Nothing
 14868 ;; This function is called by:
 14869 ;;		_efgtoa
 14870 ;; This function uses a reentrant model
 14871 ;;
 14872                           
 14873                           	psect	text53
 14874  017ACE                     __ptext53:
 14875                           	opt callstack 0
 14876  017ACE                     ___flneg:
 14877                           	opt callstack 17
 14878                           
 14879                           ;stkvar	_f1 @ sp[(0)+-4]
 14880                           
 14881                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14882                           ;incstack = 0
 14883  017ACE  0EFC               	movlw	-4
 14884  017AD0  50E3               	movf	plusw1,w,c
 14885  017AD2  E10A               	bnz	u10580
 14886  017AD4  0EFD               	movlw	-3
 14887  017AD6  50E3               	movf	plusw1,w,c
 14888  017AD8  E107               	bnz	u10580
 14889  017ADA  0EFE               	movlw	-2
 14890  017ADC  50E3               	movf	plusw1,w,c
 14891  017ADE  E104               	bnz	u10580
 14892  017AE0  0EFF               	movlw	-1
 14893  017AE2  50E3               	movf	plusw1,w,c
 14894  017AE4  B4D8               	btfsc	status,2,c
 14895  017AE6  D002               	goto	l10280
 14896  017AE8                     u10580:
 14897                           
 14898                           ;stkvar	_f1 @ sp[(0)+-4]
 14899  017AE8  0EFF               	movlw	-1
 14900  017AEA  7EE3               	btg	plusw1,7,c
 14901  017AEC                     l10280:
 14902                           
 14903                           ;stkvar	_f1 @ sp[(0)+-4]
 14904  017AEC  0EFC               	movlw	-4
 14905  017AEE  006F FF8C  F032    	movff	plusw1,btemp
 14906  017AF4  0EFD               	movlw	-3
 14907  017AF6  006F FF8C  F033    	movff	plusw1,btemp+1
 14908  017AFC  0EFE               	movlw	-2
 14909  017AFE  006F FF8C  F034    	movff	plusw1,btemp+2
 14910  017B04  0EFF               	movlw	-1
 14911  017B06  006F FF8C  F035    	movff	plusw1,btemp+3
 14912                           
 14913                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14914  017B0C  52E5               	movf	postdec1,f,c
 14915  017B0E  52E5               	movf	postdec1,f,c
 14916  017B10  52E5               	movf	postdec1,f,c
 14917  017B12  52E5               	movf	postdec1,f,c
 14918  017B14  0012               	return		;funcret
 14919  017B16                     __end_of___flneg:
 14920                           	opt callstack 0
 14921                           
 14922 ;; *************** function ___flmul *****************
 14923 ;; Defined at:
 14924 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 14925 ;; Parameters:    Size  Location     Type
 14926 ;;  b               4  [STACK] unsigned char 
 14927 ;;  a               4  [STACK] unsigned char 
 14928 ;; Auto vars:     Size  Location     Type
 14929 ;;  prod            4  [STACK] struct .
 14930 ;;  grs             4  [STACK] unsigned long 
 14931 ;;  temp            2  [STACK] struct .
 14932 ;;  bexp            1  [STACK] unsigned char 
 14933 ;;  aexp            1  [STACK] unsigned char 
 14934 ;;  sign            1  [STACK] unsigned char 
 14935 ;; Return value:  Size  Location     Type
 14936 ;;                  4  [STACK] unsigned char 
 14937 ;; Registers used:
 14938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 14939 ;; Tracked objects:
 14940 ;;		On entry : 0/39
 14941 ;;		On exit  : 0/0
 14942 ;;		Unchanged: 0/0
 14943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14948 ;;Total ram usage:        0 bytes
 14949 ;; Hardware stack levels used:    1
 14950 ;; Hardware stack levels required when called:    6
 14951 ;; This function calls:
 14952 ;;		Nothing
 14953 ;; This function is called by:
 14954 ;;		_conv_raw_result
 14955 ;;		_lp_filter
 14956 ;;		_efgtoa
 14957 ;; This function uses a reentrant model
 14958 ;;
 14959                           
 14960                           	psect	text54
 14961  011D82                     __ptext54:
 14962                           	opt callstack 0
 14963  011D82                     ___flmul:
 14964                           	opt callstack 0
 14965                           
 14966                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14967  011D82  0E0D               	movlw	13
 14968  011D84  26E1               	addwf	fsr1l,f,c
 14969  011D86  0E00               	movlw	0
 14970  011D88  22E2               	addwfc	fsr1h,f,c
 14971                           
 14972                           ;stkvar	_b @ sp[(-13)+-4]
 14973                           
 14974                           ;incstack = 0
 14975  011D8A  0EF2               	movlw	242
 14976  011D8C  24E1               	addwf	fsr1l,w,c
 14977  011D8E  6ED9               	movwf	fsr2l,c
 14978  011D90  0EFF               	movlw	255
 14979  011D92  20E2               	addwfc	fsr1h,w,c
 14980  011D94  6EDA               	movwf	fsr2h,c
 14981  011D96  50DF               	movf	indf2,w,c
 14982  011D98  6E3D               	movwf	(btemp+11)^0,c
 14983  011D9A  0E80               	movlw	128
 14984  011D9C  163D               	andwf	(btemp+11)^0,f,c
 14985                           
 14986                           ;stkvar	_sign @ sp[(-13)+12]
 14987  011D9E  0EFF               	movlw	-1
 14988  011DA0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 14989                           
 14990                           ;stkvar	_b @ sp[(-13)+-4]
 14991  011DA6  0EF2               	movlw	242
 14992  011DA8  24E1               	addwf	fsr1l,w,c
 14993  011DAA  6ED9               	movwf	fsr2l,c
 14994  011DAC  0EFF               	movlw	255
 14995  011DAE  20E2               	addwfc	fsr1h,w,c
 14996  011DB0  6EDA               	movwf	fsr2h,c
 14997  011DB2  50DF               	movf	indf2,w,c
 14998  011DB4  6E3D               	movwf	(btemp+11)^0,c
 14999  011DB6  90D8               	bcf	status,0,c
 15000  011DB8  343D               	rlcf	(btemp+11)^0,w,c
 15001  011DBA  6E3C               	movwf	(btemp+10)^0,c
 15002                           
 15003                           ;stkvar	_bexp @ sp[(-13)+10]
 15004  011DBC  0EFD               	movlw	-3
 15005  011DBE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15006                           
 15007                           ;stkvar	_b @ sp[(-13)+-4]
 15008  011DC4  0EF1               	movlw	241
 15009  011DC6  24E1               	addwf	fsr1l,w,c
 15010  011DC8  6ED9               	movwf	fsr2l,c
 15011  011DCA  0EFF               	movlw	255
 15012  011DCC  20E2               	addwfc	fsr1h,w,c
 15013  011DCE  6EDA               	movwf	fsr2h,c
 15014  011DD0  AEDF               	btfss	indf2,7,c
 15015  011DD2  D002               	goto	l9996
 15016                           
 15017                           ;stkvar	_bexp @ sp[(-13)+10]
 15018  011DD4  0EFD               	movlw	-3
 15019  011DD6  80E3               	bsf	plusw1,0,c
 15020  011DD8                     l9996:
 15021                           
 15022                           ;stkvar	_bexp @ sp[(-13)+10]
 15023  011DD8  0EFD               	movlw	-3
 15024  011DDA  50E3               	movf	plusw1,w,c
 15025  011DDC  B4D8               	btfsc	status,2,c
 15026  011DDE  D01F               	goto	l10004
 15027                           
 15028                           ;stkvar	_bexp @ sp[(-13)+10]
 15029  011DE0  0EFD               	movlw	-3
 15030  011DE2  28E3               	incf	plusw1,w,c
 15031  011DE4  A4D8               	btfss	status,2,c
 15032  011DE6  D018               	goto	l10002
 15033  011DE8  0E00               	movlw	0
 15034  011DEA  6E3A               	movwf	(btemp+8)^0,c
 15035  011DEC  0E00               	movlw	0
 15036  011DEE  6E3B               	movwf	(btemp+9)^0,c
 15037  011DF0  0E00               	movlw	0
 15038  011DF2  6E3C               	movwf	(btemp+10)^0,c
 15039  011DF4  0E00               	movlw	0
 15040  011DF6  6E3D               	movwf	(btemp+11)^0,c
 15041                           
 15042                           ;stkvar	_b @ sp[(-13)+-4]
 15043  011DF8  0EEF               	movlw	-17
 15044  011DFA  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15045  011E00  0EF0               	movlw	-16
 15046  011E02  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15047  011E08  0EF1               	movlw	-15
 15048  011E0A  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15049  011E10  0EF2               	movlw	-14
 15050  011E12  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15051  011E18                     l10002:
 15052                           
 15053                           ;stkvar	_b @ sp[(-13)+-4]
 15054  011E18  0EF1               	movlw	-15
 15055  011E1A  8EE3               	bsf	plusw1,7,c
 15056  011E1C  D018               	goto	l10006
 15057  011E1E                     l10004:
 15058  011E1E  0E00               	movlw	0
 15059  011E20  6E3A               	movwf	(btemp+8)^0,c
 15060  011E22  0E00               	movlw	0
 15061  011E24  6E3B               	movwf	(btemp+9)^0,c
 15062  011E26  0E00               	movlw	0
 15063  011E28  6E3C               	movwf	(btemp+10)^0,c
 15064  011E2A  0E00               	movlw	0
 15065  011E2C  6E3D               	movwf	(btemp+11)^0,c
 15066                           
 15067                           ;stkvar	_b @ sp[(-13)+-4]
 15068  011E2E  0EEF               	movlw	-17
 15069  011E30  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15070  011E36  0EF0               	movlw	-16
 15071  011E38  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15072  011E3E  0EF1               	movlw	-15
 15073  011E40  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15074  011E46  0EF2               	movlw	-14
 15075  011E48  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15076  011E4E                     l10006:
 15077                           
 15078                           ;stkvar	_a @ sp[(-13)+-8]
 15079  011E4E  0EEE               	movlw	238
 15080  011E50  24E1               	addwf	fsr1l,w,c
 15081  011E52  6ED9               	movwf	fsr2l,c
 15082  011E54  0EFF               	movlw	255
 15083  011E56  20E2               	addwfc	fsr1h,w,c
 15084  011E58  6EDA               	movwf	fsr2h,c
 15085  011E5A  50DF               	movf	indf2,w,c
 15086  011E5C  6E3D               	movwf	(btemp+11)^0,c
 15087  011E5E  0E80               	movlw	128
 15088  011E60  163D               	andwf	(btemp+11)^0,f,c
 15089                           
 15090                           ;stkvar	_sign @ sp[(-13)+12]
 15091  011E62  50E1               	movf	fsr1l,w,c
 15092  011E64  0FFF               	addlw	-1
 15093  011E66  6ED9               	movwf	fsr2l,c
 15094  011E68  50E2               	movf	fsr1h,w,c
 15095  011E6A  6EDA               	movwf	fsr2h,c
 15096  011E6C  0EFF               	movlw	255
 15097  011E6E  22DA               	addwfc	fsr2h,f,c
 15098  011E70  503D               	movf	(btemp+11)^0,w,c
 15099  011E72  1ADF               	xorwf	indf2,f,c
 15100                           
 15101                           ;stkvar	_a @ sp[(-13)+-8]
 15102  011E74  0EEE               	movlw	238
 15103  011E76  24E1               	addwf	fsr1l,w,c
 15104  011E78  6ED9               	movwf	fsr2l,c
 15105  011E7A  0EFF               	movlw	255
 15106  011E7C  20E2               	addwfc	fsr1h,w,c
 15107  011E7E  6EDA               	movwf	fsr2h,c
 15108  011E80  50DF               	movf	indf2,w,c
 15109  011E82  6E3D               	movwf	(btemp+11)^0,c
 15110  011E84  90D8               	bcf	status,0,c
 15111  011E86  343D               	rlcf	(btemp+11)^0,w,c
 15112  011E88  6E3C               	movwf	(btemp+10)^0,c
 15113                           
 15114                           ;stkvar	_aexp @ sp[(-13)+11]
 15115  011E8A  0EFE               	movlw	-2
 15116  011E8C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15117                           
 15118                           ;stkvar	_a @ sp[(-13)+-8]
 15119  011E92  0EED               	movlw	237
 15120  011E94  24E1               	addwf	fsr1l,w,c
 15121  011E96  6ED9               	movwf	fsr2l,c
 15122  011E98  0EFF               	movlw	255
 15123  011E9A  20E2               	addwfc	fsr1h,w,c
 15124  011E9C  6EDA               	movwf	fsr2h,c
 15125  011E9E  AEDF               	btfss	indf2,7,c
 15126  011EA0  D002               	goto	l10014
 15127                           
 15128                           ;stkvar	_aexp @ sp[(-13)+11]
 15129  011EA2  0EFE               	movlw	-2
 15130  011EA4  80E3               	bsf	plusw1,0,c
 15131  011EA6                     l10014:
 15132                           
 15133                           ;stkvar	_aexp @ sp[(-13)+11]
 15134  011EA6  0EFE               	movlw	-2
 15135  011EA8  50E3               	movf	plusw1,w,c
 15136  011EAA  B4D8               	btfsc	status,2,c
 15137  011EAC  D01F               	goto	l10022
 15138                           
 15139                           ;stkvar	_aexp @ sp[(-13)+11]
 15140  011EAE  0EFE               	movlw	-2
 15141  011EB0  28E3               	incf	plusw1,w,c
 15142  011EB2  A4D8               	btfss	status,2,c
 15143  011EB4  D018               	goto	l10020
 15144  011EB6  0E00               	movlw	0
 15145  011EB8  6E3A               	movwf	(btemp+8)^0,c
 15146  011EBA  0E00               	movlw	0
 15147  011EBC  6E3B               	movwf	(btemp+9)^0,c
 15148  011EBE  0E00               	movlw	0
 15149  011EC0  6E3C               	movwf	(btemp+10)^0,c
 15150  011EC2  0E00               	movlw	0
 15151  011EC4  6E3D               	movwf	(btemp+11)^0,c
 15152                           
 15153                           ;stkvar	_a @ sp[(-13)+-8]
 15154  011EC6  0EEB               	movlw	-21
 15155  011EC8  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15156  011ECE  0EEC               	movlw	-20
 15157  011ED0  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15158  011ED6  0EED               	movlw	-19
 15159  011ED8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15160  011EDE  0EEE               	movlw	-18
 15161  011EE0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15162  011EE6                     l10020:
 15163                           
 15164                           ;stkvar	_a @ sp[(-13)+-8]
 15165  011EE6  0EED               	movlw	-19
 15166  011EE8  8EE3               	bsf	plusw1,7,c
 15167  011EEA  D018               	goto	l10024
 15168  011EEC                     l10022:
 15169  011EEC  0E00               	movlw	0
 15170  011EEE  6E3A               	movwf	(btemp+8)^0,c
 15171  011EF0  0E00               	movlw	0
 15172  011EF2  6E3B               	movwf	(btemp+9)^0,c
 15173  011EF4  0E00               	movlw	0
 15174  011EF6  6E3C               	movwf	(btemp+10)^0,c
 15175  011EF8  0E00               	movlw	0
 15176  011EFA  6E3D               	movwf	(btemp+11)^0,c
 15177                           
 15178                           ;stkvar	_a @ sp[(-13)+-8]
 15179  011EFC  0EEB               	movlw	-21
 15180  011EFE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15181  011F04  0EEC               	movlw	-20
 15182  011F06  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15183  011F0C  0EED               	movlw	-19
 15184  011F0E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15185  011F14  0EEE               	movlw	-18
 15186  011F16  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15187  011F1C                     l10024:
 15188                           
 15189                           ;stkvar	_aexp @ sp[(-13)+11]
 15190  011F1C  0EFE               	movlw	-2
 15191  011F1E  50E3               	movf	plusw1,w,c
 15192  011F20  B4D8               	btfsc	status,2,c
 15193  011F22  D004               	goto	u10210
 15194                           
 15195                           ;stkvar	_bexp @ sp[(-13)+10]
 15196  011F24  0EFD               	movlw	-3
 15197  011F26  50E3               	movf	plusw1,w,c
 15198  011F28  A4D8               	btfss	status,2,c
 15199  011F2A  D009               	goto	l10032
 15200  011F2C                     u10210:
 15201  011F2C  0E00               	movlw	0
 15202  011F2E  6E32               	movwf	btemp^0,c
 15203  011F30  0E00               	movlw	0
 15204  011F32  6E33               	movwf	(btemp+1)^0,c
 15205  011F34  0E00               	movlw	0
 15206  011F36  6E34               	movwf	(btemp+2)^0,c
 15207  011F38  0E00               	movlw	0
 15208  011F3A  6E35               	movwf	(btemp+3)^0,c
 15209  011F3C  D332               	goto	l2667
 15210  011F3E                     l10032:
 15211                           
 15212                           ;stkvar	_b @ sp[(-13)+-4]
 15213  011F3E  0EEF               	movlw	-17
 15214  011F40  006F FF8C  F03D    	movff	plusw1,btemp+11
 15215                           
 15216                           ;stkvar	_a @ sp[(-13)+-8]
 15217  011F46  0EED               	movlw	237
 15218  011F48  24E1               	addwf	fsr1l,w,c
 15219  011F4A  6ED9               	movwf	fsr2l,c
 15220  011F4C  0EFF               	movlw	255
 15221  011F4E  20E2               	addwfc	fsr1h,w,c
 15222  011F50  6EDA               	movwf	fsr2h,c
 15223  011F52  50DF               	movf	indf2,w,c
 15224  011F54  023D               	mulwf	(btemp+11)^0,c
 15225                           
 15226                           ;stkvar	_temp @ sp[(-13)+8]
 15227  011F56  0EFB               	movlw	-5
 15228  011F58  006F FFCF FFE3     	movff	prodl,plusw1
 15229  011F5E  0EFC               	movlw	-4
 15230  011F60  006F FFD3 FFE3     	movff	prodh,plusw1
 15231                           
 15232                           ;stkvar	_temp @ sp[(-13)+8]
 15233  011F66  0EFB               	movlw	-5
 15234  011F68  006F FF8C  F03D    	movff	plusw1,btemp+11
 15235  011F6E  0060  F0F4  F036   	movff	btemp+11,btemp+4
 15236  011F74  6A37               	clrf	(btemp+5)^0,c
 15237  011F76  6A38               	clrf	(btemp+6)^0,c
 15238  011F78  6A39               	clrf	(btemp+7)^0,c
 15239                           
 15240                           ;stkvar	_grs @ sp[(-13)+4]
 15241  011F7A  0EF7               	movlw	-9
 15242  011F7C  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 15243  011F82  0EF8               	movlw	-8
 15244  011F84  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 15245  011F8A  0EF9               	movlw	-7
 15246  011F8C  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 15247  011F92  0EFA               	movlw	-6
 15248  011F94  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 15249                           
 15250                           ;stkvar	_temp @ sp[(-13)+8]
 15251  011F9A  0EFC               	movlw	252
 15252  011F9C  24E1               	addwf	fsr1l,w,c
 15253  011F9E  6ED9               	movwf	fsr2l,c
 15254  011FA0  0EFF               	movlw	255
 15255  011FA2  20E2               	addwfc	fsr1h,w,c
 15256  011FA4  6EDA               	movwf	fsr2h,c
 15257  011FA6  50DF               	movf	indf2,w,c
 15258  011FA8  6E3D               	movwf	(btemp+11)^0,c
 15259  011FAA  0060  F0F4  F036   	movff	btemp+11,btemp+4
 15260  011FB0  6A37               	clrf	(btemp+5)^0,c
 15261  011FB2  6A38               	clrf	(btemp+6)^0,c
 15262  011FB4  6A39               	clrf	(btemp+7)^0,c
 15263                           
 15264                           ;stkvar	_prod @ sp[(-13)+0]
 15265  011FB6  0EF3               	movlw	-13
 15266  011FB8  0060  F0DB  FFE3   	movff	btemp+4,plusw1
 15267  011FBE  0EF4               	movlw	-12
 15268  011FC0  0060  F0DF  FFE3   	movff	btemp+5,plusw1
 15269  011FC6  0EF5               	movlw	-11
 15270  011FC8  0060  F0E3  FFE3   	movff	btemp+6,plusw1
 15271  011FCE  0EF6               	movlw	-10
 15272  011FD0  0060  F0E7  FFE3   	movff	btemp+7,plusw1
 15273                           
 15274                           ;stkvar	_b @ sp[(-13)+-4]
 15275  011FD6  0EF0               	movlw	240
 15276  011FD8  24E1               	addwf	fsr1l,w,c
 15277  011FDA  6ED9               	movwf	fsr2l,c
 15278  011FDC  0EFF               	movlw	255
 15279  011FDE  20E2               	addwfc	fsr1h,w,c
 15280  011FE0  6EDA               	movwf	fsr2h,c
 15281  011FE2  50DF               	movf	indf2,w,c
 15282  011FE4  6E3D               	movwf	(btemp+11)^0,c
 15283                           
 15284                           ;stkvar	_a @ sp[(-13)+-8]
 15285  011FE6  0EEC               	movlw	236
 15286  011FE8  24E1               	addwf	fsr1l,w,c
 15287  011FEA  6ED9               	movwf	fsr2l,c
 15288  011FEC  0EFF               	movlw	255
 15289  011FEE  20E2               	addwfc	fsr1h,w,c
 15290  011FF0  6EDA               	movwf	fsr2h,c
 15291  011FF2  50DF               	movf	indf2,w,c
 15292  011FF4  023D               	mulwf	(btemp+11)^0,c
 15293                           
 15294                           ;stkvar	_temp @ sp[(-13)+8]
 15295  011FF6  0EFB               	movlw	-5
 15296  011FF8  006F FFCF FFE3     	movff	prodl,plusw1
 15297  011FFE  0EFC               	movlw	-4
 15298  012000  006F FFD3 FFE3     	movff	prodh,plusw1
 15299                           
 15300                           ;stkvar	_grs @ sp[(-13)+4]
 15301  012006  50E1               	movf	fsr1l,w,c
 15302  012008  0FF7               	addlw	-9
 15303  01200A  6ED9               	movwf	fsr2l,c
 15304  01200C  50E2               	movf	fsr1h,w,c
 15305  01200E  6EDA               	movwf	fsr2h,c
 15306  012010  0EFF               	movlw	255
 15307  012012  22DA               	addwfc	fsr2h,f,c
 15308                           
 15309                           ;stkvar	_temp @ sp[(-13)+8]
 15310  012014  0EFB               	movlw	-5
 15311  012016  50E3               	movf	plusw1,w,c
 15312  012018  26DE               	addwf	postinc2,f,c
 15313  01201A  0E00               	movlw	0
 15314  01201C  22DE               	addwfc	postinc2,f,c
 15315  01201E  22DE               	addwfc	postinc2,f,c
 15316  012020  22DE               	addwfc	postinc2,f,c
 15317                           
 15318                           ;stkvar	_prod @ sp[(-13)+0]
 15319  012022  50E1               	movf	fsr1l,w,c
 15320  012024  0FF3               	addlw	-13
 15321  012026  6ED9               	movwf	fsr2l,c
 15322  012028  50E2               	movf	fsr1h,w,c
 15323  01202A  6EDA               	movwf	fsr2h,c
 15324  01202C  0EFF               	movlw	255
 15325  01202E  22DA               	addwfc	fsr2h,f,c
 15326                           
 15327                           ;stkvar	_temp @ sp[(-13)+8]
 15328  012030  0EFC               	movlw	252
 15329  012032  24E1               	addwf	fsr1l,w,c
 15330  012034  6EE9               	movwf	fsr0l,c
 15331  012036  0EFF               	movlw	255
 15332  012038  20E2               	addwfc	fsr1h,w,c
 15333  01203A  6EEA               	movwf	fsr0h,c
 15334  01203C  50EF               	movf	indf0,w,c
 15335  01203E  26DE               	addwf	postinc2,f,c
 15336  012040  0E00               	movlw	0
 15337  012042  22DE               	addwfc	postinc2,f,c
 15338  012044  22DE               	addwfc	postinc2,f,c
 15339  012046  22DE               	addwfc	postinc2,f,c
 15340                           
 15341                           ;stkvar	_b @ sp[(-13)+-4]
 15342  012048  0EF1               	movlw	241
 15343  01204A  24E1               	addwf	fsr1l,w,c
 15344  01204C  6ED9               	movwf	fsr2l,c
 15345  01204E  0EFF               	movlw	255
 15346  012050  20E2               	addwfc	fsr1h,w,c
 15347  012052  6EDA               	movwf	fsr2h,c
 15348  012054  50DF               	movf	indf2,w,c
 15349  012056  6E3D               	movwf	(btemp+11)^0,c
 15350                           
 15351                           ;stkvar	_a @ sp[(-13)+-8]
 15352  012058  0EEB               	movlw	-21
 15353  01205A  50E3               	movf	plusw1,w,c
 15354  01205C  023D               	mulwf	(btemp+11)^0,c
 15355                           
 15356                           ;stkvar	_temp @ sp[(-13)+8]
 15357  01205E  0EFB               	movlw	-5
 15358  012060  006F FFCF FFE3     	movff	prodl,plusw1
 15359  012066  0EFC               	movlw	-4
 15360  012068  006F FFD3 FFE3     	movff	prodh,plusw1
 15361                           
 15362                           ;stkvar	_grs @ sp[(-13)+4]
 15363  01206E  50E1               	movf	fsr1l,w,c
 15364  012070  0FF7               	addlw	-9
 15365  012072  6ED9               	movwf	fsr2l,c
 15366  012074  50E2               	movf	fsr1h,w,c
 15367  012076  6EDA               	movwf	fsr2h,c
 15368  012078  0EFF               	movlw	255
 15369  01207A  22DA               	addwfc	fsr2h,f,c
 15370                           
 15371                           ;stkvar	_temp @ sp[(-13)+8]
 15372  01207C  0EFB               	movlw	-5
 15373  01207E  50E3               	movf	plusw1,w,c
 15374  012080  26DE               	addwf	postinc2,f,c
 15375  012082  0E00               	movlw	0
 15376  012084  22DE               	addwfc	postinc2,f,c
 15377  012086  22DE               	addwfc	postinc2,f,c
 15378  012088  22DE               	addwfc	postinc2,f,c
 15379                           
 15380                           ;stkvar	_prod @ sp[(-13)+0]
 15381  01208A  50E1               	movf	fsr1l,w,c
 15382  01208C  0FF3               	addlw	-13
 15383  01208E  6ED9               	movwf	fsr2l,c
 15384  012090  50E2               	movf	fsr1h,w,c
 15385  012092  6EDA               	movwf	fsr2h,c
 15386  012094  0EFF               	movlw	255
 15387  012096  22DA               	addwfc	fsr2h,f,c
 15388                           
 15389                           ;stkvar	_temp @ sp[(-13)+8]
 15390  012098  0EFC               	movlw	252
 15391  01209A  24E1               	addwf	fsr1l,w,c
 15392  01209C  6EE9               	movwf	fsr0l,c
 15393  01209E  0EFF               	movlw	255
 15394  0120A0  20E2               	addwfc	fsr1h,w,c
 15395  0120A2  6EEA               	movwf	fsr0h,c
 15396  0120A4  50EF               	movf	indf0,w,c
 15397  0120A6  26DE               	addwf	postinc2,f,c
 15398  0120A8  0E00               	movlw	0
 15399  0120AA  22DE               	addwfc	postinc2,f,c
 15400  0120AC  22DE               	addwfc	postinc2,f,c
 15401  0120AE  22DE               	addwfc	postinc2,f,c
 15402                           
 15403                           ;stkvar	_grs @ sp[(-13)+4]
 15404  0120B0  50E1               	movf	fsr1l,w,c
 15405  0120B2  0FF7               	addlw	-9
 15406  0120B4  6ED9               	movwf	fsr2l,c
 15407  0120B6  50E2               	movf	fsr1h,w,c
 15408  0120B8  6EDA               	movwf	fsr2h,c
 15409  0120BA  0EFF               	movlw	255
 15410  0120BC  22DA               	addwfc	fsr2h,f,c
 15411  0120BE  0E08               	movlw	8
 15412  0120C0                     u10225:
 15413  0120C0  90D8               	bcf	status,0,c
 15414  0120C2  36DE               	rlcf	postinc2,f,c
 15415  0120C4  36DE               	rlcf	postinc2,f,c
 15416  0120C6  36DE               	rlcf	postinc2,f,c
 15417  0120C8  36DD               	rlcf	postdec2,f,c
 15418  0120CA  52DD               	movf	postdec2,f,c
 15419  0120CC  52DD               	movf	postdec2,f,c
 15420  0120CE  2EE8               	decfsz	wreg,f,c
 15421  0120D0  D7F7               	goto	u10225
 15422                           
 15423                           ;stkvar	_b @ sp[(-13)+-4]
 15424  0120D2  0EF0               	movlw	240
 15425  0120D4  24E1               	addwf	fsr1l,w,c
 15426  0120D6  6ED9               	movwf	fsr2l,c
 15427  0120D8  0EFF               	movlw	255
 15428  0120DA  20E2               	addwfc	fsr1h,w,c
 15429  0120DC  6EDA               	movwf	fsr2h,c
 15430  0120DE  50DF               	movf	indf2,w,c
 15431  0120E0  6E3D               	movwf	(btemp+11)^0,c
 15432                           
 15433                           ;stkvar	_a @ sp[(-13)+-8]
 15434  0120E2  0EEB               	movlw	-21
 15435  0120E4  50E3               	movf	plusw1,w,c
 15436  0120E6  023D               	mulwf	(btemp+11)^0,c
 15437                           
 15438                           ;stkvar	_temp @ sp[(-13)+8]
 15439  0120E8  0EFB               	movlw	-5
 15440  0120EA  006F FFCF FFE3     	movff	prodl,plusw1
 15441  0120F0  0EFC               	movlw	-4
 15442  0120F2  006F FFD3 FFE3     	movff	prodh,plusw1
 15443                           
 15444                           ;stkvar	_temp @ sp[(-13)+8]
 15445  0120F8  0EFB               	movlw	-5
 15446  0120FA  006F FF8C  F03C    	movff	plusw1,btemp+10
 15447  012100  0EFC               	movlw	-4
 15448  012102  006F FF8C  F03D    	movff	plusw1,btemp+11
 15449                           
 15450                           ;stkvar	_grs @ sp[(-13)+4]
 15451  012108  50E1               	movf	fsr1l,w,c
 15452  01210A  0FF7               	addlw	-9
 15453  01210C  6ED9               	movwf	fsr2l,c
 15454  01210E  50E2               	movf	fsr1h,w,c
 15455  012110  6EDA               	movwf	fsr2h,c
 15456  012112  0EFF               	movlw	255
 15457  012114  22DA               	addwfc	fsr2h,f,c
 15458  012116  503C               	movf	(btemp+10)^0,w,c
 15459  012118  26DE               	addwf	postinc2,f,c
 15460  01211A  503D               	movf	(btemp+11)^0,w,c
 15461  01211C  22DE               	addwfc	postinc2,f,c
 15462  01211E  0E00               	movlw	0
 15463  012120  22DE               	addwfc	postinc2,f,c
 15464  012122  22DE               	addwfc	postinc2,f,c
 15465                           
 15466                           ;stkvar	_b @ sp[(-13)+-4]
 15467  012124  0EEF               	movlw	-17
 15468  012126  006F FF8C  F03D    	movff	plusw1,btemp+11
 15469                           
 15470                           ;stkvar	_a @ sp[(-13)+-8]
 15471  01212C  0EEC               	movlw	236
 15472  01212E  24E1               	addwf	fsr1l,w,c
 15473  012130  6ED9               	movwf	fsr2l,c
 15474  012132  0EFF               	movlw	255
 15475  012134  20E2               	addwfc	fsr1h,w,c
 15476  012136  6EDA               	movwf	fsr2h,c
 15477  012138  50DF               	movf	indf2,w,c
 15478  01213A  023D               	mulwf	(btemp+11)^0,c
 15479                           
 15480                           ;stkvar	_temp @ sp[(-13)+8]
 15481  01213C  0EFB               	movlw	-5
 15482  01213E  006F FFCF FFE3     	movff	prodl,plusw1
 15483  012144  0EFC               	movlw	-4
 15484  012146  006F FFD3 FFE3     	movff	prodh,plusw1
 15485                           
 15486                           ;stkvar	_temp @ sp[(-13)+8]
 15487  01214C  0EFB               	movlw	-5
 15488  01214E  006F FF8C  F03C    	movff	plusw1,btemp+10
 15489  012154  0EFC               	movlw	-4
 15490  012156  006F FF8C  F03D    	movff	plusw1,btemp+11
 15491                           
 15492                           ;stkvar	_grs @ sp[(-13)+4]
 15493  01215C  50E1               	movf	fsr1l,w,c
 15494  01215E  0FF7               	addlw	-9
 15495  012160  6ED9               	movwf	fsr2l,c
 15496  012162  50E2               	movf	fsr1h,w,c
 15497  012164  6EDA               	movwf	fsr2h,c
 15498  012166  0EFF               	movlw	255
 15499  012168  22DA               	addwfc	fsr2h,f,c
 15500  01216A  503C               	movf	(btemp+10)^0,w,c
 15501  01216C  26DE               	addwf	postinc2,f,c
 15502  01216E  503D               	movf	(btemp+11)^0,w,c
 15503  012170  22DE               	addwfc	postinc2,f,c
 15504  012172  0E00               	movlw	0
 15505  012174  22DE               	addwfc	postinc2,f,c
 15506  012176  22DE               	addwfc	postinc2,f,c
 15507                           
 15508                           ;stkvar	_grs @ sp[(-13)+4]
 15509  012178  50E1               	movf	fsr1l,w,c
 15510  01217A  0FF7               	addlw	-9
 15511  01217C  6ED9               	movwf	fsr2l,c
 15512  01217E  50E2               	movf	fsr1h,w,c
 15513  012180  6EDA               	movwf	fsr2h,c
 15514  012182  0EFF               	movlw	255
 15515  012184  22DA               	addwfc	fsr2h,f,c
 15516  012186  0E08               	movlw	8
 15517  012188                     u10235:
 15518  012188  90D8               	bcf	status,0,c
 15519  01218A  36DE               	rlcf	postinc2,f,c
 15520  01218C  36DE               	rlcf	postinc2,f,c
 15521  01218E  36DE               	rlcf	postinc2,f,c
 15522  012190  36DD               	rlcf	postdec2,f,c
 15523  012192  52DD               	movf	postdec2,f,c
 15524  012194  52DD               	movf	postdec2,f,c
 15525  012196  2EE8               	decfsz	wreg,f,c
 15526  012198  D7F7               	goto	u10235
 15527                           
 15528                           ;stkvar	_b @ sp[(-13)+-4]
 15529  01219A  0EEF               	movlw	-17
 15530  01219C  006F FF8C  F03D    	movff	plusw1,btemp+11
 15531                           
 15532                           ;stkvar	_a @ sp[(-13)+-8]
 15533  0121A2  0EEB               	movlw	-21
 15534  0121A4  50E3               	movf	plusw1,w,c
 15535  0121A6  023D               	mulwf	(btemp+11)^0,c
 15536                           
 15537                           ;stkvar	_temp @ sp[(-13)+8]
 15538  0121A8  0EFB               	movlw	-5
 15539  0121AA  006F FFCF FFE3     	movff	prodl,plusw1
 15540  0121B0  0EFC               	movlw	-4
 15541  0121B2  006F FFD3 FFE3     	movff	prodh,plusw1
 15542                           
 15543                           ;stkvar	_temp @ sp[(-13)+8]
 15544  0121B8  0EFB               	movlw	-5
 15545  0121BA  006F FF8C  F03C    	movff	plusw1,btemp+10
 15546  0121C0  0EFC               	movlw	-4
 15547  0121C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 15548                           
 15549                           ;stkvar	_grs @ sp[(-13)+4]
 15550  0121C8  50E1               	movf	fsr1l,w,c
 15551  0121CA  0FF7               	addlw	-9
 15552  0121CC  6ED9               	movwf	fsr2l,c
 15553  0121CE  50E2               	movf	fsr1h,w,c
 15554  0121D0  6EDA               	movwf	fsr2h,c
 15555  0121D2  0EFF               	movlw	255
 15556  0121D4  22DA               	addwfc	fsr2h,f,c
 15557  0121D6  503C               	movf	(btemp+10)^0,w,c
 15558  0121D8  26DE               	addwf	postinc2,f,c
 15559  0121DA  503D               	movf	(btemp+11)^0,w,c
 15560  0121DC  22DE               	addwfc	postinc2,f,c
 15561  0121DE  0E00               	movlw	0
 15562  0121E0  22DE               	addwfc	postinc2,f,c
 15563  0121E2  22DE               	addwfc	postinc2,f,c
 15564                           
 15565                           ;stkvar	_b @ sp[(-13)+-4]
 15566  0121E4  0EF0               	movlw	240
 15567  0121E6  24E1               	addwf	fsr1l,w,c
 15568  0121E8  6ED9               	movwf	fsr2l,c
 15569  0121EA  0EFF               	movlw	255
 15570  0121EC  20E2               	addwfc	fsr1h,w,c
 15571  0121EE  6EDA               	movwf	fsr2h,c
 15572  0121F0  50DF               	movf	indf2,w,c
 15573  0121F2  6E3D               	movwf	(btemp+11)^0,c
 15574                           
 15575                           ;stkvar	_a @ sp[(-13)+-8]
 15576  0121F4  0EED               	movlw	237
 15577  0121F6  24E1               	addwf	fsr1l,w,c
 15578  0121F8  6ED9               	movwf	fsr2l,c
 15579  0121FA  0EFF               	movlw	255
 15580  0121FC  20E2               	addwfc	fsr1h,w,c
 15581  0121FE  6EDA               	movwf	fsr2h,c
 15582  012200  50DF               	movf	indf2,w,c
 15583  012202  023D               	mulwf	(btemp+11)^0,c
 15584                           
 15585                           ;stkvar	_temp @ sp[(-13)+8]
 15586  012204  0EFB               	movlw	-5
 15587  012206  006F FFCF FFE3     	movff	prodl,plusw1
 15588  01220C  0EFC               	movlw	-4
 15589  01220E  006F FFD3 FFE3     	movff	prodh,plusw1
 15590                           
 15591                           ;stkvar	_temp @ sp[(-13)+8]
 15592  012214  0EFB               	movlw	-5
 15593  012216  006F FF8C  F03C    	movff	plusw1,btemp+10
 15594  01221C  0EFC               	movlw	-4
 15595  01221E  006F FF8C  F03D    	movff	plusw1,btemp+11
 15596                           
 15597                           ;stkvar	_prod @ sp[(-13)+0]
 15598  012224  50E1               	movf	fsr1l,w,c
 15599  012226  0FF3               	addlw	-13
 15600  012228  6ED9               	movwf	fsr2l,c
 15601  01222A  50E2               	movf	fsr1h,w,c
 15602  01222C  6EDA               	movwf	fsr2h,c
 15603  01222E  0EFF               	movlw	255
 15604  012230  22DA               	addwfc	fsr2h,f,c
 15605  012232  503C               	movf	(btemp+10)^0,w,c
 15606  012234  26DE               	addwf	postinc2,f,c
 15607  012236  503D               	movf	(btemp+11)^0,w,c
 15608  012238  22DE               	addwfc	postinc2,f,c
 15609  01223A  0E00               	movlw	0
 15610  01223C  22DE               	addwfc	postinc2,f,c
 15611  01223E  22DE               	addwfc	postinc2,f,c
 15612                           
 15613                           ;stkvar	_b @ sp[(-13)+-4]
 15614  012240  0EF1               	movlw	241
 15615  012242  24E1               	addwf	fsr1l,w,c
 15616  012244  6ED9               	movwf	fsr2l,c
 15617  012246  0EFF               	movlw	255
 15618  012248  20E2               	addwfc	fsr1h,w,c
 15619  01224A  6EDA               	movwf	fsr2h,c
 15620  01224C  50DF               	movf	indf2,w,c
 15621  01224E  6E3D               	movwf	(btemp+11)^0,c
 15622                           
 15623                           ;stkvar	_a @ sp[(-13)+-8]
 15624  012250  0EEC               	movlw	236
 15625  012252  24E1               	addwf	fsr1l,w,c
 15626  012254  6ED9               	movwf	fsr2l,c
 15627  012256  0EFF               	movlw	255
 15628  012258  20E2               	addwfc	fsr1h,w,c
 15629  01225A  6EDA               	movwf	fsr2h,c
 15630  01225C  50DF               	movf	indf2,w,c
 15631  01225E  023D               	mulwf	(btemp+11)^0,c
 15632                           
 15633                           ;stkvar	_temp @ sp[(-13)+8]
 15634  012260  0EFB               	movlw	-5
 15635  012262  006F FFCF FFE3     	movff	prodl,plusw1
 15636  012268  0EFC               	movlw	-4
 15637  01226A  006F FFD3 FFE3     	movff	prodh,plusw1
 15638                           
 15639                           ;stkvar	_temp @ sp[(-13)+8]
 15640  012270  0EFB               	movlw	-5
 15641  012272  006F FF8C  F03C    	movff	plusw1,btemp+10
 15642  012278  0EFC               	movlw	-4
 15643  01227A  006F FF8C  F03D    	movff	plusw1,btemp+11
 15644                           
 15645                           ;stkvar	_prod @ sp[(-13)+0]
 15646  012280  50E1               	movf	fsr1l,w,c
 15647  012282  0FF3               	addlw	-13
 15648  012284  6ED9               	movwf	fsr2l,c
 15649  012286  50E2               	movf	fsr1h,w,c
 15650  012288  6EDA               	movwf	fsr2h,c
 15651  01228A  0EFF               	movlw	255
 15652  01228C  22DA               	addwfc	fsr2h,f,c
 15653  01228E  503C               	movf	(btemp+10)^0,w,c
 15654  012290  26DE               	addwf	postinc2,f,c
 15655  012292  503D               	movf	(btemp+11)^0,w,c
 15656  012294  22DE               	addwfc	postinc2,f,c
 15657  012296  0E00               	movlw	0
 15658  012298  22DE               	addwfc	postinc2,f,c
 15659  01229A  22DE               	addwfc	postinc2,f,c
 15660                           
 15661                           ;stkvar	_b @ sp[(-13)+-4]
 15662  01229C  0EF1               	movlw	241
 15663  01229E  24E1               	addwf	fsr1l,w,c
 15664  0122A0  6ED9               	movwf	fsr2l,c
 15665  0122A2  0EFF               	movlw	255
 15666  0122A4  20E2               	addwfc	fsr1h,w,c
 15667  0122A6  6EDA               	movwf	fsr2h,c
 15668  0122A8  50DF               	movf	indf2,w,c
 15669  0122AA  6E3D               	movwf	(btemp+11)^0,c
 15670                           
 15671                           ;stkvar	_a @ sp[(-13)+-8]
 15672  0122AC  0EED               	movlw	237
 15673  0122AE  24E1               	addwf	fsr1l,w,c
 15674  0122B0  6ED9               	movwf	fsr2l,c
 15675  0122B2  0EFF               	movlw	255
 15676  0122B4  20E2               	addwfc	fsr1h,w,c
 15677  0122B6  6EDA               	movwf	fsr2h,c
 15678  0122B8  50DF               	movf	indf2,w,c
 15679  0122BA  023D               	mulwf	(btemp+11)^0,c
 15680                           
 15681                           ;stkvar	_temp @ sp[(-13)+8]
 15682  0122BC  0EFB               	movlw	-5
 15683  0122BE  006F FFCF FFE3     	movff	prodl,plusw1
 15684  0122C4  0EFC               	movlw	-4
 15685  0122C6  006F FFD3 FFE3     	movff	prodh,plusw1
 15686                           
 15687                           ;stkvar	_temp @ sp[(-13)+8]
 15688  0122CC  0EFB               	movlw	-5
 15689  0122CE  006F FF8C  F03C    	movff	plusw1,btemp+10
 15690  0122D4  0EFC               	movlw	-4
 15691  0122D6  006F FF8C  F03D    	movff	plusw1,btemp+11
 15692  0122DC  503C               	movf	(btemp+10)^0,w,c
 15693  0122DE  6E36               	movwf	(btemp+4)^0,c
 15694  0122E0  503D               	movf	(btemp+11)^0,w,c
 15695  0122E2  6E37               	movwf	(btemp+5)^0,c
 15696  0122E4  6A38               	clrf	(btemp+6)^0,c
 15697  0122E6  6A39               	clrf	(btemp+7)^0,c
 15698  0122E8  0060  F0E0  F039   	movff	btemp+6,btemp+7
 15699  0122EE  0060  F0DC  F038   	movff	btemp+5,btemp+6
 15700  0122F4  0060  F0D8  F037   	movff	btemp+4,btemp+5
 15701  0122FA  6A36               	clrf	(btemp+4)^0,c
 15702                           
 15703                           ;stkvar	_prod @ sp[(-13)+0]
 15704  0122FC  50E1               	movf	fsr1l,w,c
 15705  0122FE  0FF3               	addlw	-13
 15706  012300  6ED9               	movwf	fsr2l,c
 15707  012302  50E2               	movf	fsr1h,w,c
 15708  012304  6EDA               	movwf	fsr2h,c
 15709  012306  0EFF               	movlw	255
 15710  012308  22DA               	addwfc	fsr2h,f,c
 15711  01230A  5036               	movf	(btemp+4)^0,w,c
 15712  01230C  26DE               	addwf	postinc2,f,c
 15713  01230E  5037               	movf	(btemp+5)^0,w,c
 15714  012310  22DE               	addwfc	postinc2,f,c
 15715  012312  5038               	movf	(btemp+6)^0,w,c
 15716  012314  22DE               	addwfc	postinc2,f,c
 15717  012316  5039               	movf	(btemp+7)^0,w,c
 15718  012318  22DE               	addwfc	postinc2,f,c
 15719                           
 15720                           ;stkvar	_prod @ sp[(-13)+0]
 15721  01231A  50E1               	movf	fsr1l,w,c
 15722  01231C  0FF3               	addlw	-13
 15723  01231E  6ED9               	movwf	fsr2l,c
 15724  012320  50E2               	movf	fsr1h,w,c
 15725  012322  6EDA               	movwf	fsr2h,c
 15726  012324  0EFF               	movlw	255
 15727  012326  22DA               	addwfc	fsr2h,f,c
 15728                           
 15729                           ;stkvar	_grs @ sp[(-13)+4]
 15730  012328  0EFA               	movlw	250
 15731  01232A  24E1               	addwf	fsr1l,w,c
 15732  01232C  6EE9               	movwf	fsr0l,c
 15733  01232E  0EFF               	movlw	255
 15734  012330  20E2               	addwfc	fsr1h,w,c
 15735  012332  6EEA               	movwf	fsr0h,c
 15736  012334  50EF               	movf	indf0,w,c
 15737  012336  26DE               	addwf	postinc2,f,c
 15738  012338  0E00               	movlw	0
 15739  01233A  22DE               	addwfc	postinc2,f,c
 15740  01233C  22DE               	addwfc	postinc2,f,c
 15741  01233E  22DE               	addwfc	postinc2,f,c
 15742                           
 15743                           ;stkvar	_grs @ sp[(-13)+4]
 15744  012340  50E1               	movf	fsr1l,w,c
 15745  012342  0FF7               	addlw	-9
 15746  012344  6ED9               	movwf	fsr2l,c
 15747  012346  50E2               	movf	fsr1h,w,c
 15748  012348  6EDA               	movwf	fsr2h,c
 15749  01234A  0EFF               	movlw	255
 15750  01234C  22DA               	addwfc	fsr2h,f,c
 15751  01234E  0E08               	movlw	8
 15752  012350                     u10245:
 15753  012350  90D8               	bcf	status,0,c
 15754  012352  36DE               	rlcf	postinc2,f,c
 15755  012354  36DE               	rlcf	postinc2,f,c
 15756  012356  36DE               	rlcf	postinc2,f,c
 15757  012358  36DD               	rlcf	postdec2,f,c
 15758  01235A  52DD               	movf	postdec2,f,c
 15759  01235C  52DD               	movf	postdec2,f,c
 15760  01235E  2EE8               	decfsz	wreg,f,c
 15761  012360  D7F7               	goto	u10245
 15762  012362  0E82               	movlw	130
 15763  012364  6E3C               	movwf	(btemp+10)^0,c
 15764  012366  0EFF               	movlw	255
 15765  012368  6E3D               	movwf	(btemp+11)^0,c
 15766                           
 15767                           ;stkvar	_bexp @ sp[(-13)+10]
 15768  01236A  0EFD               	movlw	-3
 15769  01236C  50E3               	movf	plusw1,w,c
 15770  01236E  6E3A               	movwf	(btemp+8)^0,c
 15771  012370  6A3B               	clrf	(btemp+9)^0,c
 15772                           
 15773                           ;stkvar	_aexp @ sp[(-13)+11]
 15774  012372  0EFE               	movlw	-2
 15775  012374  50E3               	movf	plusw1,w,c
 15776  012376  263A               	addwf	(btemp+8)^0,f,c
 15777  012378  0E00               	movlw	0
 15778  01237A  223B               	addwfc	(btemp+9)^0,f,c
 15779  01237C  503C               	movf	(btemp+10)^0,w,c
 15780  01237E  263A               	addwf	(btemp+8)^0,f,c
 15781  012380  503D               	movf	(btemp+11)^0,w,c
 15782  012382  223B               	addwfc	(btemp+9)^0,f,c
 15783                           
 15784                           ;stkvar	_temp @ sp[(-13)+8]
 15785  012384  0EFB               	movlw	-5
 15786  012386  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15787  01238C  0EFC               	movlw	-4
 15788  01238E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15789  012394  D021               	goto	l10094
 15790  012396                     l10084:
 15791                           
 15792                           ;stkvar	_prod @ sp[(-13)+0]
 15793  012396  90D8               	bcf	status,0,c
 15794  012398  0EF3               	movlw	-13
 15795  01239A  36E3               	rlcf	plusw1,f,c
 15796  01239C  0EF4               	movlw	-12
 15797  01239E  36E3               	rlcf	plusw1,f,c
 15798  0123A0  0EF5               	movlw	-11
 15799  0123A2  36E3               	rlcf	plusw1,f,c
 15800  0123A4  0EF6               	movlw	-10
 15801  0123A6  36E3               	rlcf	plusw1,f,c
 15802                           
 15803                           ;stkvar	_grs @ sp[(-13)+4]
 15804  0123A8  0EFA               	movlw	-6
 15805  0123AA  AEE3               	btfss	plusw1,7,c
 15806  0123AC  D002               	goto	l10090
 15807                           
 15808                           ;stkvar	_prod @ sp[(-13)+0]
 15809  0123AE  0EF3               	movlw	-13
 15810  0123B0  80E3               	bsf	plusw1,0,c
 15811  0123B2                     l10090:
 15812                           
 15813                           ;stkvar	_grs @ sp[(-13)+4]
 15814  0123B2  90D8               	bcf	status,0,c
 15815  0123B4  0EF7               	movlw	-9
 15816  0123B6  36E3               	rlcf	plusw1,f,c
 15817  0123B8  0EF8               	movlw	-8
 15818  0123BA  36E3               	rlcf	plusw1,f,c
 15819  0123BC  0EF9               	movlw	-7
 15820  0123BE  36E3               	rlcf	plusw1,f,c
 15821  0123C0  0EFA               	movlw	-6
 15822  0123C2  36E3               	rlcf	plusw1,f,c
 15823                           
 15824                           ;stkvar	_temp @ sp[(-13)+8]
 15825  0123C4  50E1               	movf	fsr1l,w,c
 15826  0123C6  0FFB               	addlw	-5
 15827  0123C8  6ED9               	movwf	fsr2l,c
 15828  0123CA  50E2               	movf	fsr1h,w,c
 15829  0123CC  6EDA               	movwf	fsr2h,c
 15830  0123CE  0EFF               	movlw	255
 15831  0123D0  22DA               	addwfc	fsr2h,f,c
 15832  0123D2  06DE               	decf	postinc2,f,c
 15833  0123D4  0E00               	movlw	0
 15834  0123D6  5ADD               	subwfb	postdec2,f,c
 15835  0123D8                     l10094:
 15836                           
 15837                           ;stkvar	_prod @ sp[(-13)+0]
 15838  0123D8  0EF5               	movlw	-11
 15839  0123DA  AEE3               	btfss	plusw1,7,c
 15840  0123DC  D7DC               	goto	l10084
 15841                           
 15842                           ;stkvar	_aexp @ sp[(-13)+11]
 15843  0123DE  0EFE               	movlw	-2
 15844  0123E0  6AE3               	clrf	plusw1,c
 15845                           
 15846                           ;stkvar	_grs @ sp[(-13)+4]
 15847  0123E2  0EFA               	movlw	-6
 15848  0123E4  AEE3               	btfss	plusw1,7,c
 15849  0123E6  D020               	goto	l10108
 15850                           
 15851                           ;stkvar	_grs @ sp[(-13)+4]
 15852  0123E8  50E1               	movf	fsr1l,w,c
 15853  0123EA  0FF7               	addlw	-9
 15854  0123EC  6ED9               	movwf	fsr2l,c
 15855  0123EE  50E2               	movf	fsr1h,w,c
 15856  0123F0  6EDA               	movwf	fsr2h,c
 15857  0123F2  0EFF               	movlw	255
 15858  0123F4  22DA               	addwfc	fsr2h,f,c
 15859  0123F6  0EFF               	movlw	255
 15860  0123F8  14DE               	andwf	postinc2,w,c
 15861  0123FA  6E3A               	movwf	(btemp+8)^0,c
 15862  0123FC  0EFF               	movlw	255
 15863  0123FE  14DE               	andwf	postinc2,w,c
 15864  012400  6E3B               	movwf	(btemp+9)^0,c
 15865  012402  0EFF               	movlw	255
 15866  012404  14DE               	andwf	postinc2,w,c
 15867  012406  6E3C               	movwf	(btemp+10)^0,c
 15868  012408  0E7F               	movlw	127
 15869  01240A  14DE               	andwf	postinc2,w,c
 15870  01240C  6E3D               	movwf	(btemp+11)^0,c
 15871  01240E  503A               	movf	(btemp+8)^0,w,c
 15872  012410  103B               	iorwf	(btemp+9)^0,w,c
 15873  012412  103C               	iorwf	(btemp+10)^0,w,c
 15874  012414  103D               	iorwf	(btemp+11)^0,w,c
 15875  012416  B4D8               	btfsc	status,2,c
 15876  012418  D004               	goto	l10104
 15877  01241A                     u10280:
 15878                           
 15879                           ;stkvar	_aexp @ sp[(-13)+11]
 15880  01241A  0EFE               	movlw	-2
 15881  01241C  6AE3               	clrf	plusw1,c
 15882  01241E  2AE3               	incf	plusw1,f,c
 15883  012420  D003               	goto	l10108
 15884  012422                     l10104:
 15885                           
 15886                           ;stkvar	_prod @ sp[(-13)+0]
 15887  012422  0EF3               	movlw	-13
 15888  012424  B0E3               	btfsc	plusw1,0,c
 15889  012426  D7F9               	goto	u10280
 15890  012428                     l10108:
 15891                           
 15892                           ;stkvar	_aexp @ sp[(-13)+11]
 15893  012428  0EFE               	movlw	-2
 15894  01242A  50E3               	movf	plusw1,w,c
 15895  01242C  B4D8               	btfsc	status,2,c
 15896  01242E  D036               	goto	l10118
 15897                           
 15898                           ;stkvar	_prod @ sp[(-13)+0]
 15899  012430  50E1               	movf	fsr1l,w,c
 15900  012432  0FF3               	addlw	-13
 15901  012434  6ED9               	movwf	fsr2l,c
 15902  012436  50E2               	movf	fsr1h,w,c
 15903  012438  6EDA               	movwf	fsr2h,c
 15904  01243A  0EFF               	movlw	255
 15905  01243C  22DA               	addwfc	fsr2h,f,c
 15906  01243E  2ADE               	incf	postinc2,f,c
 15907  012440  0E00               	movlw	0
 15908  012442  22DE               	addwfc	postinc2,f,c
 15909  012444  22DE               	addwfc	postinc2,f,c
 15910  012446  22DE               	addwfc	postinc2,f,c
 15911                           
 15912                           ;stkvar	_prod @ sp[(-13)+0]
 15913  012448  0EF6               	movlw	-10
 15914  01244A  A0E3               	btfss	plusw1,0,c
 15915  01244C  D027               	goto	l10118
 15916  01244E  0E01               	movlw	1
 15917  012450  6E3D               	movwf	(btemp+11)^0,c
 15918                           
 15919                           ;stkvar	_prod @ sp[(-13)+0]
 15920  012452  50E1               	movf	fsr1l,w,c
 15921  012454  0FF3               	addlw	-13
 15922  012456  6ED9               	movwf	fsr2l,c
 15923  012458  50E2               	movf	fsr1h,w,c
 15924  01245A  6EDA               	movwf	fsr2h,c
 15925  01245C  0EFF               	movlw	255
 15926  01245E  22DA               	addwfc	fsr2h,f,c
 15927  012460  283D               	incf	(btemp+11)^0,w,c
 15928  012462  52DE               	movf	postinc2,f,c
 15929  012464  D008               	goto	u10320
 15930  012466                     u10325:
 15931  012466  52DE               	movf	postinc2,f,c
 15932  012468  90D8               	bcf	status,0,c
 15933  01246A  BEDC               	btfsc	preinc2,7,c
 15934  01246C  80D8               	bsf	status,0,c
 15935  01246E  32DD               	rrcf	postdec2,f,c
 15936  012470  32DD               	rrcf	postdec2,f,c
 15937  012472  32DD               	rrcf	postdec2,f,c
 15938  012474  32DE               	rrcf	postinc2,f,c
 15939  012476                     u10320:
 15940  012476  2EE8               	decfsz	wreg,f,c
 15941  012478  D7F6               	goto	u10325
 15942                           
 15943                           ;stkvar	_temp @ sp[(-13)+8]
 15944  01247A  0EFB               	movlw	-5
 15945  01247C  50E3               	movf	plusw1,w,c
 15946  01247E  0F01               	addlw	1
 15947  012480  6E32               	movwf	btemp^0,c
 15948  012482  0EFB               	movlw	-5
 15949  012484  0060  F0CB  FFE3   	movff	btemp,plusw1
 15950  01248A  6A32               	clrf	btemp^0,c
 15951  01248C  0EFC               	movlw	-4
 15952  01248E  50E3               	movf	plusw1,w,c
 15953  012490  2032               	addwfc	btemp^0,w,c
 15954  012492  6E32               	movwf	btemp^0,c
 15955  012494  0EFC               	movlw	-4
 15956  012496  0060  F0CB  FFE3   	movff	btemp,plusw1
 15957  01249C                     l10118:
 15958                           
 15959                           ;stkvar	_temp @ sp[(-13)+8]
 15960  01249C  0EFC               	movlw	-4
 15961  01249E  BEE3               	btfsc	plusw1,7,c
 15962  0124A0  D020               	goto	l10122
 15963  0124A2  0EFC               	movlw	-4
 15964  0124A4  50E3               	movf	plusw1,w,c
 15965  0124A6  E104               	bnz	u10330
 15966  0124A8  0EFB               	movlw	-5
 15967  0124AA  28E3               	incf	plusw1,w,c
 15968  0124AC  A0D8               	btfss	status,0,c
 15969  0124AE  D019               	goto	l10122
 15970  0124B0                     u10330:
 15971  0124B0  0E00               	movlw	0
 15972  0124B2  6E3A               	movwf	(btemp+8)^0,c
 15973  0124B4  0E00               	movlw	0
 15974  0124B6  6E3B               	movwf	(btemp+9)^0,c
 15975  0124B8  0E80               	movlw	128
 15976  0124BA  6E3C               	movwf	(btemp+10)^0,c
 15977  0124BC  0E7F               	movlw	127
 15978  0124BE  6E3D               	movwf	(btemp+11)^0,c
 15979                           
 15980                           ;stkvar	_prod @ sp[(-13)+0]
 15981  0124C0  0EF3               	movlw	-13
 15982  0124C2  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 15983  0124C8  0EF4               	movlw	-12
 15984  0124CA  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 15985  0124D0  0EF5               	movlw	-11
 15986  0124D2  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 15987  0124D8  0EF6               	movlw	-10
 15988  0124DA  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 15989  0124E0  D044               	goto	l10138
 15990  0124E2                     l10122:
 15991                           
 15992                           ;stkvar	_temp @ sp[(-13)+8]
 15993  0124E2  0EFC               	movlw	-4
 15994  0124E4  BEE3               	btfsc	plusw1,7,c
 15995  0124E6  D007               	goto	u10340
 15996  0124E8  0EFC               	movlw	-4
 15997  0124EA  50E3               	movf	plusw1,w,c
 15998  0124EC  E10F               	bnz	l10128
 15999  0124EE  0EFB               	movlw	-5
 16000  0124F0  04E3               	decf	plusw1,w,c
 16001  0124F2  B0D8               	btfsc	status,0,c
 16002  0124F4  D00B               	goto	l10128
 16003  0124F6                     u10340:
 16004                           
 16005                           ;stkvar	_prod @ sp[(-13)+0]
 16006  0124F6  0EF3               	movlw	-13
 16007  0124F8  6AE3               	clrf	plusw1,c
 16008  0124FA  0EF4               	movlw	-12
 16009  0124FC  6AE3               	clrf	plusw1,c
 16010  0124FE  0EF5               	movlw	-11
 16011  012500  6AE3               	clrf	plusw1,c
 16012  012502  0EF6               	movlw	-10
 16013  012504  6AE3               	clrf	plusw1,c
 16014                           
 16015                           ;stkvar	_sign @ sp[(-13)+12]
 16016  012506  0EFF               	movlw	-1
 16017  012508  6AE3               	clrf	plusw1,c
 16018  01250A  D02F               	goto	l10138
 16019  01250C                     l10128:
 16020                           
 16021                           ;stkvar	_temp @ sp[(-13)+8]
 16022                           ;stkvar	_bexp @ sp[(-13)+10]
 16023  01250C  0EFB               	movlw	-5
 16024  01250E  006F FF8C  F032    	movff	plusw1,btemp
 16025  012514  0EFD               	movlw	-3
 16026  012516  0060  F0CB  FFE3   	movff	btemp,plusw1
 16027                           
 16028                           ;stkvar	_prod @ sp[(-13)+0]
 16029  01251C  50E1               	movf	fsr1l,w,c
 16030  01251E  0FF3               	addlw	-13
 16031  012520  6ED9               	movwf	fsr2l,c
 16032  012522  50E2               	movf	fsr1h,w,c
 16033  012524  6EDA               	movwf	fsr2h,c
 16034  012526  0EFF               	movlw	255
 16035  012528  22DA               	addwfc	fsr2h,f,c
 16036  01252A  0EFF               	movlw	255
 16037  01252C  16DE               	andwf	postinc2,f,c
 16038  01252E  0EFF               	movlw	255
 16039  012530  16DE               	andwf	postinc2,f,c
 16040  012532  0E7F               	movlw	127
 16041  012534  16DE               	andwf	postinc2,f,c
 16042  012536  0E00               	movlw	0
 16043  012538  16DE               	andwf	postinc2,f,c
 16044                           
 16045                           ;stkvar	_bexp @ sp[(-13)+10]
 16046  01253A  0EFD               	movlw	-3
 16047  01253C  A0E3               	btfss	plusw1,0,c
 16048  01253E  D008               	goto	l10136
 16049                           
 16050                           ;stkvar	_prod @ sp[(-13)+0]
 16051  012540  0EF5               	movlw	245
 16052  012542  24E1               	addwf	fsr1l,w,c
 16053  012544  6ED9               	movwf	fsr2l,c
 16054  012546  0EFF               	movlw	255
 16055  012548  20E2               	addwfc	fsr1h,w,c
 16056  01254A  6EDA               	movwf	fsr2h,c
 16057  01254C  0E00               	movlw	0
 16058  01254E  8EDB               	bsf	plusw2,7,c
 16059  012550                     l10136:
 16060                           
 16061                           ;stkvar	_prod @ sp[(-13)+0]
 16062  012550  0EF6               	movlw	246
 16063  012552  24E1               	addwf	fsr1l,w,c
 16064  012554  6ED9               	movwf	fsr2l,c
 16065  012556  0EFF               	movlw	255
 16066  012558  20E2               	addwfc	fsr1h,w,c
 16067  01255A  6EDA               	movwf	fsr2h,c
 16068                           
 16069                           ;stkvar	_bexp @ sp[(-13)+10]
 16070  01255C  0EFD               	movlw	-3
 16071  01255E  006F FF8C  F03D    	movff	plusw1,btemp+11
 16072  012564  90D8               	bcf	status,0,c
 16073  012566  303D               	rrcf	(btemp+11)^0,w,c
 16074  012568  6EDF               	movwf	indf2,c
 16075  01256A                     l10138:
 16076                           
 16077                           ;stkvar	_sign @ sp[(-13)+12]
 16078  01256A  0EFF               	movlw	-1
 16079  01256C  006F FF8C  F03D    	movff	plusw1,btemp+11
 16080                           
 16081                           ;stkvar	_prod @ sp[(-13)+0]
 16082  012572  0EF6               	movlw	246
 16083  012574  24E1               	addwf	fsr1l,w,c
 16084  012576  6ED9               	movwf	fsr2l,c
 16085  012578  0EFF               	movlw	255
 16086  01257A  20E2               	addwfc	fsr1h,w,c
 16087  01257C  6EDA               	movwf	fsr2h,c
 16088  01257E  503D               	movf	(btemp+11)^0,w,c
 16089  012580  12DF               	iorwf	indf2,f,c
 16090                           
 16091                           ;stkvar	_prod @ sp[(-13)+0]
 16092  012582  0EF3               	movlw	-13
 16093  012584  006F FF8C  F032    	movff	plusw1,btemp
 16094  01258A  0EF4               	movlw	-12
 16095  01258C  006F FF8C  F033    	movff	plusw1,btemp+1
 16096  012592  0EF5               	movlw	-11
 16097  012594  006F FF8C  F034    	movff	plusw1,btemp+2
 16098  01259A  0EF6               	movlw	-10
 16099  01259C  006F FF8C  F035    	movff	plusw1,btemp+3
 16100  0125A2                     l2667:
 16101                           
 16102                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 16103  0125A2  0EEB               	movlw	235
 16104  0125A4  26E1               	addwf	fsr1l,f,c
 16105  0125A6  0EFF               	movlw	255
 16106  0125A8  22E2               	addwfc	fsr1h,f,c
 16107  0125AA  0012               	return		;funcret
 16108  0125AC                     __end_of___flmul:
 16109                           	opt callstack 0
 16110                           
 16111 ;; *************** function ___flge *****************
 16112 ;; Defined at:
 16113 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 16114 ;; Parameters:    Size  Location     Type
 16115 ;;  ff1             4  [STACK] unsigned char 
 16116 ;;  ff2             4  [STACK] unsigned char 
 16117 ;; Auto vars:     Size  Location     Type
 16118 ;;		None
 16119 ;; Return value:  Size  Location     Type
 16120 ;;		None               void
 16121 ;; Registers used:
 16122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16123 ;; Tracked objects:
 16124 ;;		On entry : 0/5
 16125 ;;		On exit  : 0/0
 16126 ;;		Unchanged: 0/0
 16127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16132 ;;Total ram usage:        0 bytes
 16133 ;; Hardware stack levels used:    1
 16134 ;; Hardware stack levels required when called:    6
 16135 ;; This function calls:
 16136 ;;		Nothing
 16137 ;; This function is called by:
 16138 ;;		_efgtoa
 16139 ;; This function uses a reentrant model
 16140 ;;
 16141                           
 16142                           	psect	text55
 16143  015FF2                     __ptext55:
 16144                           	opt callstack 0
 16145  015FF2                     ___flge:
 16146                           	opt callstack 17
 16147                           
 16148                           ;stkvar	_ff1 @ sp[(0)+-4]
 16149                           
 16150                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16151                           ;incstack = 0
 16152  015FF2  50E1               	movf	fsr1l,w,c
 16153  015FF4  0FFC               	addlw	-4
 16154  015FF6  6ED9               	movwf	fsr2l,c
 16155  015FF8  50E2               	movf	fsr1h,w,c
 16156  015FFA  6EDA               	movwf	fsr2h,c
 16157  015FFC  0EFF               	movlw	255
 16158  015FFE  22DA               	addwfc	fsr2h,f,c
 16159  016000  0E00               	movlw	0
 16160  016002  14DE               	andwf	postinc2,w,c
 16161  016004  6E3A               	movwf	(btemp+8)^0,c
 16162  016006  0E00               	movlw	0
 16163  016008  14DE               	andwf	postinc2,w,c
 16164  01600A  6E3B               	movwf	(btemp+9)^0,c
 16165  01600C  0E80               	movlw	128
 16166  01600E  14DE               	andwf	postinc2,w,c
 16167  016010  6E3C               	movwf	(btemp+10)^0,c
 16168  016012  0E7F               	movlw	127
 16169  016014  14DE               	andwf	postinc2,w,c
 16170  016016  6E3D               	movwf	(btemp+11)^0,c
 16171  016018  503A               	movf	(btemp+8)^0,w,c
 16172  01601A  103B               	iorwf	(btemp+9)^0,w,c
 16173  01601C  103C               	iorwf	(btemp+10)^0,w,c
 16174  01601E  103D               	iorwf	(btemp+11)^0,w,c
 16175  016020  A4D8               	btfss	status,2,c
 16176  016022  D008               	goto	l10254
 16177                           
 16178                           ;stkvar	_ff1 @ sp[(0)+-4]
 16179  016024  0EFC               	movlw	-4
 16180  016026  6AE3               	clrf	plusw1,c
 16181  016028  0EFD               	movlw	-3
 16182  01602A  6AE3               	clrf	plusw1,c
 16183  01602C  0EFE               	movlw	-2
 16184  01602E  6AE3               	clrf	plusw1,c
 16185  016030  0EFF               	movlw	-1
 16186  016032  6AE3               	clrf	plusw1,c
 16187  016034                     l10254:
 16188                           
 16189                           ;stkvar	_ff2 @ sp[(0)+-8]
 16190  016034  50E1               	movf	fsr1l,w,c
 16191  016036  0FF8               	addlw	-8
 16192  016038  6ED9               	movwf	fsr2l,c
 16193  01603A  50E2               	movf	fsr1h,w,c
 16194  01603C  6EDA               	movwf	fsr2h,c
 16195  01603E  0EFF               	movlw	255
 16196  016040  22DA               	addwfc	fsr2h,f,c
 16197  016042  0E00               	movlw	0
 16198  016044  14DE               	andwf	postinc2,w,c
 16199  016046  6E3A               	movwf	(btemp+8)^0,c
 16200  016048  0E00               	movlw	0
 16201  01604A  14DE               	andwf	postinc2,w,c
 16202  01604C  6E3B               	movwf	(btemp+9)^0,c
 16203  01604E  0E80               	movlw	128
 16204  016050  14DE               	andwf	postinc2,w,c
 16205  016052  6E3C               	movwf	(btemp+10)^0,c
 16206  016054  0E7F               	movlw	127
 16207  016056  14DE               	andwf	postinc2,w,c
 16208  016058  6E3D               	movwf	(btemp+11)^0,c
 16209  01605A  503A               	movf	(btemp+8)^0,w,c
 16210  01605C  103B               	iorwf	(btemp+9)^0,w,c
 16211  01605E  103C               	iorwf	(btemp+10)^0,w,c
 16212  016060  103D               	iorwf	(btemp+11)^0,w,c
 16213  016062  A4D8               	btfss	status,2,c
 16214  016064  D008               	goto	l2312
 16215                           
 16216                           ;stkvar	_ff2 @ sp[(0)+-8]
 16217  016066  0EF8               	movlw	-8
 16218  016068  6AE3               	clrf	plusw1,c
 16219  01606A  0EF9               	movlw	-7
 16220  01606C  6AE3               	clrf	plusw1,c
 16221  01606E  0EFA               	movlw	-6
 16222  016070  6AE3               	clrf	plusw1,c
 16223  016072  0EFB               	movlw	-5
 16224  016074  6AE3               	clrf	plusw1,c
 16225  016076                     l2312:
 16226                           
 16227                           ;stkvar	_ff1 @ sp[(0)+-4]
 16228  016076  0EFF               	movlw	-1
 16229  016078  AEE3               	btfss	plusw1,7,c
 16230  01607A  D024               	goto	l10260
 16231                           
 16232                           ;stkvar	_ff1 @ sp[(0)+-4]
 16233  01607C  0E00               	movlw	0
 16234  01607E  6E3A               	movwf	(btemp+8)^0,c
 16235  016080  0E00               	movlw	0
 16236  016082  6E3B               	movwf	(btemp+9)^0,c
 16237  016084  0E00               	movlw	0
 16238  016086  6E3C               	movwf	(btemp+10)^0,c
 16239  016088  0E80               	movlw	128
 16240  01608A  6E3D               	movwf	(btemp+11)^0,c
 16241  01608C  0EFC               	movlw	-4
 16242  01608E  50E3               	movf	plusw1,w,c
 16243  016090  5E3A               	subwf	(btemp+8)^0,f,c
 16244  016092  0EFD               	movlw	-3
 16245  016094  50E3               	movf	plusw1,w,c
 16246  016096  5A3B               	subwfb	(btemp+9)^0,f,c
 16247  016098  0EFE               	movlw	-2
 16248  01609A  50E3               	movf	plusw1,w,c
 16249  01609C  5A3C               	subwfb	(btemp+10)^0,f,c
 16250  01609E  0EFF               	movlw	-1
 16251  0160A0  50E3               	movf	plusw1,w,c
 16252  0160A2  5A3D               	subwfb	(btemp+11)^0,f,c
 16253                           
 16254                           ;stkvar	_ff1 @ sp[(0)+-4]
 16255  0160A4  0EFC               	movlw	-4
 16256  0160A6  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16257  0160AC  0EFD               	movlw	-3
 16258  0160AE  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16259  0160B4  0EFE               	movlw	-2
 16260  0160B6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16261  0160BC  0EFF               	movlw	-1
 16262  0160BE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16263  0160C4                     l10260:
 16264                           
 16265                           ;stkvar	_ff2 @ sp[(0)+-8]
 16266  0160C4  0EFB               	movlw	-5
 16267  0160C6  AEE3               	btfss	plusw1,7,c
 16268  0160C8  D024               	goto	l10264
 16269                           
 16270                           ;stkvar	_ff2 @ sp[(0)+-8]
 16271  0160CA  0E00               	movlw	0
 16272  0160CC  6E3A               	movwf	(btemp+8)^0,c
 16273  0160CE  0E00               	movlw	0
 16274  0160D0  6E3B               	movwf	(btemp+9)^0,c
 16275  0160D2  0E00               	movlw	0
 16276  0160D4  6E3C               	movwf	(btemp+10)^0,c
 16277  0160D6  0E80               	movlw	128
 16278  0160D8  6E3D               	movwf	(btemp+11)^0,c
 16279  0160DA  0EF8               	movlw	-8
 16280  0160DC  50E3               	movf	plusw1,w,c
 16281  0160DE  5E3A               	subwf	(btemp+8)^0,f,c
 16282  0160E0  0EF9               	movlw	-7
 16283  0160E2  50E3               	movf	plusw1,w,c
 16284  0160E4  5A3B               	subwfb	(btemp+9)^0,f,c
 16285  0160E6  0EFA               	movlw	-6
 16286  0160E8  50E3               	movf	plusw1,w,c
 16287  0160EA  5A3C               	subwfb	(btemp+10)^0,f,c
 16288  0160EC  0EFB               	movlw	-5
 16289  0160EE  50E3               	movf	plusw1,w,c
 16290  0160F0  5A3D               	subwfb	(btemp+11)^0,f,c
 16291                           
 16292                           ;stkvar	_ff2 @ sp[(0)+-8]
 16293  0160F2  0EF8               	movlw	-8
 16294  0160F4  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16295  0160FA  0EF9               	movlw	-7
 16296  0160FC  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16297  016102  0EFA               	movlw	-6
 16298  016104  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16299  01610A  0EFB               	movlw	-5
 16300  01610C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16301  016112                     l10264:
 16302                           
 16303                           ;stkvar	_ff1 @ sp[(0)+-4]
 16304  016112  0EFF               	movlw	-1
 16305  016114  7EE3               	btg	plusw1,7,c
 16306                           
 16307                           ;stkvar	_ff2 @ sp[(0)+-8]
 16308  016116  0EFB               	movlw	-5
 16309  016118  7EE3               	btg	plusw1,7,c
 16310                           
 16311                           ;stkvar	_ff2 @ sp[(0)+-8]
 16312                           ;stkvar	_ff1 @ sp[(0)+-4]
 16313  01611A  50E1               	movf	fsr1l,w,c
 16314  01611C  0FFC               	addlw	-4
 16315  01611E  6ED9               	movwf	fsr2l,c
 16316  016120  50E2               	movf	fsr1h,w,c
 16317  016122  6EDA               	movwf	fsr2h,c
 16318  016124  0EFF               	movlw	255
 16319  016126  22DA               	addwfc	fsr2h,f,c
 16320  016128  0EF8               	movlw	-8
 16321  01612A  50E3               	movf	plusw1,w,c
 16322  01612C  5CDE               	subwf	postinc2,w,c
 16323  01612E  0EF9               	movlw	-7
 16324  016130  50E3               	movf	plusw1,w,c
 16325  016132  58DE               	subwfb	postinc2,w,c
 16326  016134  0EFA               	movlw	-6
 16327  016136  50E3               	movf	plusw1,w,c
 16328  016138  58DE               	subwfb	postinc2,w,c
 16329  01613A  0EFB               	movlw	-5
 16330  01613C  50E3               	movf	plusw1,w,c
 16331  01613E  58DE               	subwfb	postinc2,w,c
 16332  016140  B0D8               	btfsc	status,0,c
 16333  016142  D002               	goto	l10272
 16334  016144  9032               	bcf	btemp& (0+255),0,c
 16335  016146  D001               	goto	l2319
 16336  016148                     l10272:
 16337  016148  8032               	bsf	btemp& (0+255),0,c
 16338  01614A                     l2319:
 16339                           
 16340                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16341  01614A  0EF8               	movlw	248
 16342  01614C  26E1               	addwf	fsr1l,f,c
 16343  01614E  0EFF               	movlw	255
 16344  016150  22E2               	addwfc	fsr1h,f,c
 16345  016152  0012               	return		;funcret
 16346  016154                     __end_of___flge:
 16347                           	opt callstack 0
 16348                           
 16349 ;; *************** function ___fleq *****************
 16350 ;; Defined at:
 16351 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 16352 ;; Parameters:    Size  Location     Type
 16353 ;;  ff1             4  [STACK] unsigned char 
 16354 ;;  ff2             4  [STACK] unsigned char 
 16355 ;; Auto vars:     Size  Location     Type
 16356 ;;		None
 16357 ;; Return value:  Size  Location     Type
 16358 ;;		None               void
 16359 ;; Registers used:
 16360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 16361 ;; Tracked objects:
 16362 ;;		On entry : 0/5
 16363 ;;		On exit  : 0/0
 16364 ;;		Unchanged: 0/0
 16365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16370 ;;Total ram usage:        0 bytes
 16371 ;; Hardware stack levels used:    1
 16372 ;; Hardware stack levels required when called:    6
 16373 ;; This function calls:
 16374 ;;		Nothing
 16375 ;; This function is called by:
 16376 ;;		_efgtoa
 16377 ;; This function uses a reentrant model
 16378 ;;
 16379                           
 16380                           	psect	text56
 16381  016D32                     __ptext56:
 16382                           	opt callstack 0
 16383  016D32                     ___fleq:
 16384                           	opt callstack 17
 16385                           
 16386                           ;stkvar	_ff1 @ sp[(0)+-4]
 16387                           
 16388                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16389                           ;incstack = 0
 16390  016D32  50E1               	movf	fsr1l,w,c
 16391  016D34  0FFC               	addlw	-4
 16392  016D36  6ED9               	movwf	fsr2l,c
 16393  016D38  50E2               	movf	fsr1h,w,c
 16394  016D3A  6EDA               	movwf	fsr2h,c
 16395  016D3C  0EFF               	movlw	255
 16396  016D3E  22DA               	addwfc	fsr2h,f,c
 16397  016D40  0E00               	movlw	0
 16398  016D42  14DE               	andwf	postinc2,w,c
 16399  016D44  6E3A               	movwf	(btemp+8)^0,c
 16400  016D46  0E00               	movlw	0
 16401  016D48  14DE               	andwf	postinc2,w,c
 16402  016D4A  6E3B               	movwf	(btemp+9)^0,c
 16403  016D4C  0E80               	movlw	128
 16404  016D4E  14DE               	andwf	postinc2,w,c
 16405  016D50  6E3C               	movwf	(btemp+10)^0,c
 16406  016D52  0E7F               	movlw	127
 16407  016D54  14DE               	andwf	postinc2,w,c
 16408  016D56  6E3D               	movwf	(btemp+11)^0,c
 16409  016D58  503A               	movf	(btemp+8)^0,w,c
 16410  016D5A  103B               	iorwf	(btemp+9)^0,w,c
 16411  016D5C  103C               	iorwf	(btemp+10)^0,w,c
 16412  016D5E  103D               	iorwf	(btemp+11)^0,w,c
 16413  016D60  A4D8               	btfss	status,2,c
 16414  016D62  D008               	goto	l10238
 16415                           
 16416                           ;stkvar	_ff1 @ sp[(0)+-4]
 16417  016D64  0EFC               	movlw	-4
 16418  016D66  6AE3               	clrf	plusw1,c
 16419  016D68  0EFD               	movlw	-3
 16420  016D6A  6AE3               	clrf	plusw1,c
 16421  016D6C  0EFE               	movlw	-2
 16422  016D6E  6AE3               	clrf	plusw1,c
 16423  016D70  0EFF               	movlw	-1
 16424  016D72  6AE3               	clrf	plusw1,c
 16425  016D74                     l10238:
 16426                           
 16427                           ;stkvar	_ff2 @ sp[(0)+-8]
 16428  016D74  50E1               	movf	fsr1l,w,c
 16429  016D76  0FF8               	addlw	-8
 16430  016D78  6ED9               	movwf	fsr2l,c
 16431  016D7A  50E2               	movf	fsr1h,w,c
 16432  016D7C  6EDA               	movwf	fsr2h,c
 16433  016D7E  0EFF               	movlw	255
 16434  016D80  22DA               	addwfc	fsr2h,f,c
 16435  016D82  0E00               	movlw	0
 16436  016D84  14DE               	andwf	postinc2,w,c
 16437  016D86  6E3A               	movwf	(btemp+8)^0,c
 16438  016D88  0E00               	movlw	0
 16439  016D8A  14DE               	andwf	postinc2,w,c
 16440  016D8C  6E3B               	movwf	(btemp+9)^0,c
 16441  016D8E  0E80               	movlw	128
 16442  016D90  14DE               	andwf	postinc2,w,c
 16443  016D92  6E3C               	movwf	(btemp+10)^0,c
 16444  016D94  0E7F               	movlw	127
 16445  016D96  14DE               	andwf	postinc2,w,c
 16446  016D98  6E3D               	movwf	(btemp+11)^0,c
 16447  016D9A  503A               	movf	(btemp+8)^0,w,c
 16448  016D9C  103B               	iorwf	(btemp+9)^0,w,c
 16449  016D9E  103C               	iorwf	(btemp+10)^0,w,c
 16450  016DA0  103D               	iorwf	(btemp+11)^0,w,c
 16451  016DA2  A4D8               	btfss	status,2,c
 16452  016DA4  D008               	goto	l10242
 16453                           
 16454                           ;stkvar	_ff2 @ sp[(0)+-8]
 16455  016DA6  0EF8               	movlw	-8
 16456  016DA8  6AE3               	clrf	plusw1,c
 16457  016DAA  0EF9               	movlw	-7
 16458  016DAC  6AE3               	clrf	plusw1,c
 16459  016DAE  0EFA               	movlw	-6
 16460  016DB0  6AE3               	clrf	plusw1,c
 16461  016DB2  0EFB               	movlw	-5
 16462  016DB4  6AE3               	clrf	plusw1,c
 16463  016DB6                     l10242:
 16464                           
 16465                           ;stkvar	_ff2 @ sp[(0)+-8]
 16466                           ;stkvar	_ff1 @ sp[(0)+-4]
 16467  016DB6  50E1               	movf	fsr1l,w,c
 16468  016DB8  0FFC               	addlw	-4
 16469  016DBA  6ED9               	movwf	fsr2l,c
 16470  016DBC  50E2               	movf	fsr1h,w,c
 16471  016DBE  6EDA               	movwf	fsr2h,c
 16472  016DC0  0EFF               	movlw	255
 16473  016DC2  22DA               	addwfc	fsr2h,f,c
 16474  016DC4  0EF8               	movlw	-8
 16475  016DC6  50E3               	movf	plusw1,w,c
 16476  016DC8  18DE               	xorwf	postinc2,w,c
 16477  016DCA  E10D               	bnz	u10520
 16478  016DCC  0EF9               	movlw	-7
 16479  016DCE  50E3               	movf	plusw1,w,c
 16480  016DD0  18DE               	xorwf	postinc2,w,c
 16481  016DD2  E109               	bnz	u10520
 16482  016DD4  0EFA               	movlw	-6
 16483  016DD6  50E3               	movf	plusw1,w,c
 16484  016DD8  18DE               	xorwf	postinc2,w,c
 16485  016DDA  E105               	bnz	u10520
 16486  016DDC  0EFB               	movlw	-5
 16487  016DDE  50E3               	movf	plusw1,w,c
 16488  016DE0  18DE               	xorwf	postinc2,w,c
 16489  016DE2  B4D8               	btfsc	status,2,c
 16490  016DE4  D002               	goto	l10246
 16491  016DE6                     u10520:
 16492  016DE6  9032               	bcf	btemp& (0+255),0,c
 16493  016DE8  D001               	goto	l2308
 16494  016DEA                     l10246:
 16495  016DEA  8032               	bsf	btemp& (0+255),0,c
 16496  016DEC                     l2308:
 16497                           
 16498                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 16499  016DEC  0EF8               	movlw	248
 16500  016DEE  26E1               	addwf	fsr1l,f,c
 16501  016DF0  0EFF               	movlw	255
 16502  016DF2  22E2               	addwfc	fsr1h,f,c
 16503  016DF4  0012               	return		;funcret
 16504  016DF6                     __end_of___fleq:
 16505                           	opt callstack 0
 16506                           
 16507 ;; *************** function ___fldiv *****************
 16508 ;; Defined at:
 16509 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 16510 ;; Parameters:    Size  Location     Type
 16511 ;;  b               4  [STACK] unsigned char 
 16512 ;;  a               4  [STACK] unsigned char 
 16513 ;; Auto vars:     Size  Location     Type
 16514 ;;  grs             4  [STACK] unsigned long 
 16515 ;;  rem             4  [STACK] unsigned long 
 16516 ;;  new_exp         2  [STACK] short 
 16517 ;;  aexp            1  [STACK] unsigned char 
 16518 ;;  bexp            1  [STACK] unsigned char 
 16519 ;;  sign            1  [STACK] unsigned char 
 16520 ;; Return value:  Size  Location     Type
 16521 ;;                  4  [STACK] unsigned char 
 16522 ;; Registers used:
 16523 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 16524 ;; Tracked objects:
 16525 ;;		On entry : 0/39
 16526 ;;		On exit  : 0/0
 16527 ;;		Unchanged: 0/0
 16528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16533 ;;Total ram usage:        0 bytes
 16534 ;; Hardware stack levels used:    1
 16535 ;; Hardware stack levels required when called:    6
 16536 ;; This function calls:
 16537 ;;		Nothing
 16538 ;; This function is called by:
 16539 ;;		_conv_raw_result
 16540 ;;		_efgtoa
 16541 ;; This function uses a reentrant model
 16542 ;;
 16543                           
 16544                           	psect	text57
 16545  012D68                     __ptext57:
 16546                           	opt callstack 0
 16547  012D68                     ___fldiv:
 16548                           	opt callstack 0
 16549                           
 16550                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 16551  012D68  0E0D               	movlw	13
 16552  012D6A  26E1               	addwf	fsr1l,f,c
 16553  012D6C  0E00               	movlw	0
 16554  012D6E  22E2               	addwfc	fsr1h,f,c
 16555                           
 16556                           ;stkvar	_b @ sp[(-13)+-4]
 16557                           
 16558                           ;incstack = 0
 16559  012D70  0EF2               	movlw	242
 16560  012D72  24E1               	addwf	fsr1l,w,c
 16561  012D74  6ED9               	movwf	fsr2l,c
 16562  012D76  0EFF               	movlw	255
 16563  012D78  20E2               	addwfc	fsr1h,w,c
 16564  012D7A  6EDA               	movwf	fsr2h,c
 16565  012D7C  50DF               	movf	indf2,w,c
 16566  012D7E  6E3D               	movwf	(btemp+11)^0,c
 16567  012D80  0E80               	movlw	128
 16568  012D82  163D               	andwf	(btemp+11)^0,f,c
 16569                           
 16570                           ;stkvar	_sign @ sp[(-13)+12]
 16571  012D84  0EFF               	movlw	-1
 16572  012D86  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16573                           
 16574                           ;stkvar	_b @ sp[(-13)+-4]
 16575  012D8C  0EF2               	movlw	242
 16576  012D8E  24E1               	addwf	fsr1l,w,c
 16577  012D90  6ED9               	movwf	fsr2l,c
 16578  012D92  0EFF               	movlw	255
 16579  012D94  20E2               	addwfc	fsr1h,w,c
 16580  012D96  6EDA               	movwf	fsr2h,c
 16581  012D98  50DF               	movf	indf2,w,c
 16582  012D9A  6E3D               	movwf	(btemp+11)^0,c
 16583  012D9C  90D8               	bcf	status,0,c
 16584  012D9E  343D               	rlcf	(btemp+11)^0,w,c
 16585  012DA0  6E3C               	movwf	(btemp+10)^0,c
 16586                           
 16587                           ;stkvar	_bexp @ sp[(-13)+11]
 16588  012DA2  0EFE               	movlw	-2
 16589  012DA4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16590                           
 16591                           ;stkvar	_b @ sp[(-13)+-4]
 16592  012DAA  0EF1               	movlw	241
 16593  012DAC  24E1               	addwf	fsr1l,w,c
 16594  012DAE  6ED9               	movwf	fsr2l,c
 16595  012DB0  0EFF               	movlw	255
 16596  012DB2  20E2               	addwfc	fsr1h,w,c
 16597  012DB4  6EDA               	movwf	fsr2h,c
 16598  012DB6  AEDF               	btfss	indf2,7,c
 16599  012DB8  D002               	goto	l9840
 16600                           
 16601                           ;stkvar	_bexp @ sp[(-13)+11]
 16602  012DBA  0EFE               	movlw	-2
 16603  012DBC  80E3               	bsf	plusw1,0,c
 16604  012DBE                     l9840:
 16605                           
 16606                           ;stkvar	_bexp @ sp[(-13)+11]
 16607  012DBE  0EFE               	movlw	-2
 16608  012DC0  50E3               	movf	plusw1,w,c
 16609  012DC2  B4D8               	btfsc	status,2,c
 16610  012DC4  D027               	goto	l9850
 16611                           
 16612                           ;stkvar	_bexp @ sp[(-13)+11]
 16613  012DC6  0EFE               	movlw	-2
 16614  012DC8  28E3               	incf	plusw1,w,c
 16615  012DCA  A4D8               	btfss	status,2,c
 16616  012DCC  D018               	goto	l9846
 16617  012DCE  0E00               	movlw	0
 16618  012DD0  6E3A               	movwf	(btemp+8)^0,c
 16619  012DD2  0E00               	movlw	0
 16620  012DD4  6E3B               	movwf	(btemp+9)^0,c
 16621  012DD6  0E00               	movlw	0
 16622  012DD8  6E3C               	movwf	(btemp+10)^0,c
 16623  012DDA  0E00               	movlw	0
 16624  012DDC  6E3D               	movwf	(btemp+11)^0,c
 16625                           
 16626                           ;stkvar	_b @ sp[(-13)+-4]
 16627  012DDE  0EEF               	movlw	-17
 16628  012DE0  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16629  012DE6  0EF0               	movlw	-16
 16630  012DE8  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16631  012DEE  0EF1               	movlw	-15
 16632  012DF0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16633  012DF6  0EF2               	movlw	-14
 16634  012DF8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16635  012DFE                     l9846:
 16636                           
 16637                           ;stkvar	_b @ sp[(-13)+-4]
 16638  012DFE  0EF1               	movlw	-15
 16639  012E00  8EE3               	bsf	plusw1,7,c
 16640                           
 16641                           ;stkvar	_b @ sp[(-13)+-4]
 16642  012E02  0EF2               	movlw	242
 16643  012E04  24E1               	addwf	fsr1l,w,c
 16644  012E06  6ED9               	movwf	fsr2l,c
 16645  012E08  0EFF               	movlw	255
 16646  012E0A  20E2               	addwfc	fsr1h,w,c
 16647  012E0C  6EDA               	movwf	fsr2h,c
 16648  012E0E  0E00               	movlw	0
 16649  012E10  6EDF               	movwf	indf2,c
 16650  012E12  D018               	goto	l9852
 16651  012E14                     l9850:
 16652  012E14  0E00               	movlw	0
 16653  012E16  6E3A               	movwf	(btemp+8)^0,c
 16654  012E18  0E00               	movlw	0
 16655  012E1A  6E3B               	movwf	(btemp+9)^0,c
 16656  012E1C  0E00               	movlw	0
 16657  012E1E  6E3C               	movwf	(btemp+10)^0,c
 16658  012E20  0E00               	movlw	0
 16659  012E22  6E3D               	movwf	(btemp+11)^0,c
 16660                           
 16661                           ;stkvar	_b @ sp[(-13)+-4]
 16662  012E24  0EEF               	movlw	-17
 16663  012E26  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16664  012E2C  0EF0               	movlw	-16
 16665  012E2E  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16666  012E34  0EF1               	movlw	-15
 16667  012E36  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16668  012E3C  0EF2               	movlw	-14
 16669  012E3E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16670  012E44                     l9852:
 16671                           
 16672                           ;stkvar	_a @ sp[(-13)+-8]
 16673  012E44  0EEE               	movlw	238
 16674  012E46  24E1               	addwf	fsr1l,w,c
 16675  012E48  6ED9               	movwf	fsr2l,c
 16676  012E4A  0EFF               	movlw	255
 16677  012E4C  20E2               	addwfc	fsr1h,w,c
 16678  012E4E  6EDA               	movwf	fsr2h,c
 16679  012E50  50DF               	movf	indf2,w,c
 16680  012E52  6E3D               	movwf	(btemp+11)^0,c
 16681  012E54  0E80               	movlw	128
 16682  012E56  163D               	andwf	(btemp+11)^0,f,c
 16683                           
 16684                           ;stkvar	_sign @ sp[(-13)+12]
 16685  012E58  50E1               	movf	fsr1l,w,c
 16686  012E5A  0FFF               	addlw	-1
 16687  012E5C  6ED9               	movwf	fsr2l,c
 16688  012E5E  50E2               	movf	fsr1h,w,c
 16689  012E60  6EDA               	movwf	fsr2h,c
 16690  012E62  0EFF               	movlw	255
 16691  012E64  22DA               	addwfc	fsr2h,f,c
 16692  012E66  503D               	movf	(btemp+11)^0,w,c
 16693  012E68  1ADF               	xorwf	indf2,f,c
 16694                           
 16695                           ;stkvar	_a @ sp[(-13)+-8]
 16696  012E6A  0EEE               	movlw	238
 16697  012E6C  24E1               	addwf	fsr1l,w,c
 16698  012E6E  6ED9               	movwf	fsr2l,c
 16699  012E70  0EFF               	movlw	255
 16700  012E72  20E2               	addwfc	fsr1h,w,c
 16701  012E74  6EDA               	movwf	fsr2h,c
 16702  012E76  50DF               	movf	indf2,w,c
 16703  012E78  6E3D               	movwf	(btemp+11)^0,c
 16704  012E7A  90D8               	bcf	status,0,c
 16705  012E7C  343D               	rlcf	(btemp+11)^0,w,c
 16706  012E7E  6E3C               	movwf	(btemp+10)^0,c
 16707                           
 16708                           ;stkvar	_aexp @ sp[(-13)+10]
 16709  012E80  0EFD               	movlw	-3
 16710  012E82  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16711                           
 16712                           ;stkvar	_a @ sp[(-13)+-8]
 16713  012E88  0EED               	movlw	237
 16714  012E8A  24E1               	addwf	fsr1l,w,c
 16715  012E8C  6ED9               	movwf	fsr2l,c
 16716  012E8E  0EFF               	movlw	255
 16717  012E90  20E2               	addwfc	fsr1h,w,c
 16718  012E92  6EDA               	movwf	fsr2h,c
 16719  012E94  AEDF               	btfss	indf2,7,c
 16720  012E96  D002               	goto	l9860
 16721                           
 16722                           ;stkvar	_aexp @ sp[(-13)+10]
 16723  012E98  0EFD               	movlw	-3
 16724  012E9A  80E3               	bsf	plusw1,0,c
 16725  012E9C                     l9860:
 16726                           
 16727                           ;stkvar	_aexp @ sp[(-13)+10]
 16728  012E9C  0EFD               	movlw	-3
 16729  012E9E  50E3               	movf	plusw1,w,c
 16730  012EA0  B4D8               	btfsc	status,2,c
 16731  012EA2  D027               	goto	l9870
 16732                           
 16733                           ;stkvar	_aexp @ sp[(-13)+10]
 16734  012EA4  0EFD               	movlw	-3
 16735  012EA6  28E3               	incf	plusw1,w,c
 16736  012EA8  A4D8               	btfss	status,2,c
 16737  012EAA  D018               	goto	l9866
 16738  012EAC  0E00               	movlw	0
 16739  012EAE  6E3A               	movwf	(btemp+8)^0,c
 16740  012EB0  0E00               	movlw	0
 16741  012EB2  6E3B               	movwf	(btemp+9)^0,c
 16742  012EB4  0E00               	movlw	0
 16743  012EB6  6E3C               	movwf	(btemp+10)^0,c
 16744  012EB8  0E00               	movlw	0
 16745  012EBA  6E3D               	movwf	(btemp+11)^0,c
 16746                           
 16747                           ;stkvar	_a @ sp[(-13)+-8]
 16748  012EBC  0EEB               	movlw	-21
 16749  012EBE  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16750  012EC4  0EEC               	movlw	-20
 16751  012EC6  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16752  012ECC  0EED               	movlw	-19
 16753  012ECE  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16754  012ED4  0EEE               	movlw	-18
 16755  012ED6  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16756  012EDC                     l9866:
 16757                           
 16758                           ;stkvar	_a @ sp[(-13)+-8]
 16759  012EDC  0EED               	movlw	-19
 16760  012EDE  8EE3               	bsf	plusw1,7,c
 16761                           
 16762                           ;stkvar	_a @ sp[(-13)+-8]
 16763  012EE0  0EEE               	movlw	238
 16764  012EE2  24E1               	addwf	fsr1l,w,c
 16765  012EE4  6ED9               	movwf	fsr2l,c
 16766  012EE6  0EFF               	movlw	255
 16767  012EE8  20E2               	addwfc	fsr1h,w,c
 16768  012EEA  6EDA               	movwf	fsr2h,c
 16769  012EEC  0E00               	movlw	0
 16770  012EEE  6EDF               	movwf	indf2,c
 16771  012EF0  D018               	goto	l9872
 16772  012EF2                     l9870:
 16773  012EF2  0E00               	movlw	0
 16774  012EF4  6E3A               	movwf	(btemp+8)^0,c
 16775  012EF6  0E00               	movlw	0
 16776  012EF8  6E3B               	movwf	(btemp+9)^0,c
 16777  012EFA  0E00               	movlw	0
 16778  012EFC  6E3C               	movwf	(btemp+10)^0,c
 16779  012EFE  0E00               	movlw	0
 16780  012F00  6E3D               	movwf	(btemp+11)^0,c
 16781                           
 16782                           ;stkvar	_a @ sp[(-13)+-8]
 16783  012F02  0EEB               	movlw	-21
 16784  012F04  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16785  012F0A  0EEC               	movlw	-20
 16786  012F0C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16787  012F12  0EED               	movlw	-19
 16788  012F14  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16789  012F1A  0EEE               	movlw	-18
 16790  012F1C  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16791  012F22                     l9872:
 16792                           
 16793                           ;stkvar	_a @ sp[(-13)+-8]
 16794  012F22  0EEB               	movlw	-21
 16795  012F24  50E3               	movf	plusw1,w,c
 16796  012F26  E139               	bnz	l9884
 16797  012F28  0EEC               	movlw	-20
 16798  012F2A  50E3               	movf	plusw1,w,c
 16799  012F2C  E136               	bnz	l9884
 16800  012F2E  0EED               	movlw	-19
 16801  012F30  50E3               	movf	plusw1,w,c
 16802  012F32  E133               	bnz	l9884
 16803  012F34  0EEE               	movlw	-18
 16804  012F36  50E3               	movf	plusw1,w,c
 16805  012F38  A4D8               	btfss	status,2,c
 16806  012F3A  D02F               	goto	l9884
 16807                           
 16808                           ;stkvar	_b @ sp[(-13)+-4]
 16809  012F3C  0EEF               	movlw	-17
 16810  012F3E  6AE3               	clrf	plusw1,c
 16811  012F40  0EF0               	movlw	-16
 16812  012F42  6AE3               	clrf	plusw1,c
 16813  012F44  0EF1               	movlw	-15
 16814  012F46  6AE3               	clrf	plusw1,c
 16815  012F48  0EF2               	movlw	-14
 16816  012F4A  6AE3               	clrf	plusw1,c
 16817                           
 16818                           ;stkvar	_b @ sp[(-13)+-4]
 16819  012F4C  0EF1               	movlw	241
 16820  012F4E  24E1               	addwf	fsr1l,w,c
 16821  012F50  6ED9               	movwf	fsr2l,c
 16822  012F52  0EFF               	movlw	255
 16823  012F54  20E2               	addwfc	fsr1h,w,c
 16824  012F56  6EDA               	movwf	fsr2h,c
 16825  012F58  0E80               	movlw	128
 16826  012F5A  12DE               	iorwf	postinc2,f,c
 16827  012F5C  0E7F               	movlw	127
 16828  012F5E  12DD               	iorwf	postdec2,f,c
 16829  012F60                     l9878:
 16830                           
 16831                           ;stkvar	_sign @ sp[(-13)+12]
 16832  012F60  0EFF               	movlw	-1
 16833  012F62  006F FF8C  F03D    	movff	plusw1,btemp+11
 16834                           
 16835                           ;stkvar	_b @ sp[(-13)+-4]
 16836  012F68  0EF2               	movlw	242
 16837  012F6A  24E1               	addwf	fsr1l,w,c
 16838  012F6C  6ED9               	movwf	fsr2l,c
 16839  012F6E  0EFF               	movlw	255
 16840  012F70  20E2               	addwfc	fsr1h,w,c
 16841  012F72  6EDA               	movwf	fsr2h,c
 16842  012F74  503D               	movf	(btemp+11)^0,w,c
 16843  012F76  12DF               	iorwf	indf2,f,c
 16844                           
 16845                           ;stkvar	_b @ sp[(-13)+-4]
 16846  012F78  0EEF               	movlw	-17
 16847  012F7A  006F FF8C  F032    	movff	plusw1,btemp
 16848  012F80  0EF0               	movlw	-16
 16849  012F82  006F FF8C  F033    	movff	plusw1,btemp+1
 16850  012F88  0EF1               	movlw	-15
 16851  012F8A  006F FF8C  F034    	movff	plusw1,btemp+2
 16852  012F90  0EF2               	movlw	-14
 16853  012F92  006F FF8C  F035    	movff	plusw1,btemp+3
 16854  012F98  D19F               	goto	l2631
 16855  012F9A                     l9884:
 16856                           
 16857                           ;stkvar	_bexp @ sp[(-13)+11]
 16858  012F9A  0EFE               	movlw	-2
 16859  012F9C  50E3               	movf	plusw1,w,c
 16860  012F9E  A4D8               	btfss	status,2,c
 16861  012FA0  D009               	goto	l9892
 16862  012FA2  0E00               	movlw	0
 16863  012FA4  6E32               	movwf	btemp^0,c
 16864  012FA6  0E00               	movlw	0
 16865  012FA8  6E33               	movwf	(btemp+1)^0,c
 16866  012FAA  0E00               	movlw	0
 16867  012FAC  6E34               	movwf	(btemp+2)^0,c
 16868  012FAE  0E00               	movlw	0
 16869  012FB0  6E35               	movwf	(btemp+3)^0,c
 16870  012FB2  D192               	goto	l2631
 16871  012FB4                     l9892:
 16872                           
 16873                           ;stkvar	_bexp @ sp[(-13)+11]
 16874  012FB4  0EFE               	movlw	-2
 16875  012FB6  50E3               	movf	plusw1,w,c
 16876  012FB8  6E3C               	movwf	(btemp+10)^0,c
 16877  012FBA  6A3D               	clrf	(btemp+11)^0,c
 16878                           
 16879                           ;stkvar	_aexp @ sp[(-13)+10]
 16880  012FBC  0EFD               	movlw	-3
 16881  012FBE  50E3               	movf	plusw1,w,c
 16882  012FC0  5E3C               	subwf	(btemp+10)^0,f,c
 16883  012FC2  0E00               	movlw	0
 16884  012FC4  5A3D               	subwfb	(btemp+11)^0,f,c
 16885  012FC6  0E7F               	movlw	127
 16886  012FC8  263C               	addwf	(btemp+10)^0,f,c
 16887  012FCA  0E00               	movlw	0
 16888  012FCC  223D               	addwfc	(btemp+11)^0,f,c
 16889                           
 16890                           ;stkvar	_new_exp @ sp[(-13)+8]
 16891  012FCE  0EFB               	movlw	-5
 16892  012FD0  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16893  012FD6  0EFC               	movlw	-4
 16894  012FD8  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16895                           
 16896                           ;stkvar	_b @ sp[(-13)+-4]
 16897  012FDE  0EEF               	movlw	-17
 16898  012FE0  006F FF8C  F03A    	movff	plusw1,btemp+8
 16899  012FE6  0EF0               	movlw	-16
 16900  012FE8  006F FF8C  F03B    	movff	plusw1,btemp+9
 16901  012FEE  0EF1               	movlw	-15
 16902  012FF0  006F FF8C  F03C    	movff	plusw1,btemp+10
 16903  012FF6  0EF2               	movlw	-14
 16904  012FF8  006F FF8C  F03D    	movff	plusw1,btemp+11
 16905                           
 16906                           ;stkvar	_rem @ sp[(-13)+4]
 16907  012FFE  0EF7               	movlw	-9
 16908  013000  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 16909  013006  0EF8               	movlw	-8
 16910  013008  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 16911  01300E  0EF9               	movlw	-7
 16912  013010  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 16913  013016  0EFA               	movlw	-6
 16914  013018  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 16915                           
 16916                           ;stkvar	_b @ sp[(-13)+-4]
 16917  01301E  0EEF               	movlw	-17
 16918  013020  6AE3               	clrf	plusw1,c
 16919  013022  0EF0               	movlw	-16
 16920  013024  6AE3               	clrf	plusw1,c
 16921  013026  0EF1               	movlw	-15
 16922  013028  6AE3               	clrf	plusw1,c
 16923  01302A  0EF2               	movlw	-14
 16924  01302C  6AE3               	clrf	plusw1,c
 16925                           
 16926                           ;stkvar	_grs @ sp[(-13)+0]
 16927  01302E  0EF3               	movlw	-13
 16928  013030  6AE3               	clrf	plusw1,c
 16929  013032  0EF4               	movlw	-12
 16930  013034  6AE3               	clrf	plusw1,c
 16931  013036  0EF5               	movlw	-11
 16932  013038  6AE3               	clrf	plusw1,c
 16933  01303A  0EF6               	movlw	-10
 16934  01303C  6AE3               	clrf	plusw1,c
 16935                           
 16936                           ;stkvar	_aexp @ sp[(-13)+10]
 16937  01303E  0EFD               	movlw	-3
 16938  013040  6AE3               	clrf	plusw1,c
 16939  013042  D050               	goto	l9920
 16940  013044                     l9902:
 16941                           
 16942                           ;stkvar	_aexp @ sp[(-13)+10]
 16943  013044  0EFD               	movlw	-3
 16944  013046  50E3               	movf	plusw1,w,c
 16945  013048  B4D8               	btfsc	status,2,c
 16946  01304A  D020               	goto	l9912
 16947                           
 16948                           ;stkvar	_rem @ sp[(-13)+4]
 16949  01304C  90D8               	bcf	status,0,c
 16950  01304E  0EF7               	movlw	-9
 16951  013050  36E3               	rlcf	plusw1,f,c
 16952  013052  0EF8               	movlw	-8
 16953  013054  36E3               	rlcf	plusw1,f,c
 16954  013056  0EF9               	movlw	-7
 16955  013058  36E3               	rlcf	plusw1,f,c
 16956  01305A  0EFA               	movlw	-6
 16957  01305C  36E3               	rlcf	plusw1,f,c
 16958                           
 16959                           ;stkvar	_b @ sp[(-13)+-4]
 16960  01305E  90D8               	bcf	status,0,c
 16961  013060  0EEF               	movlw	-17
 16962  013062  36E3               	rlcf	plusw1,f,c
 16963  013064  0EF0               	movlw	-16
 16964  013066  36E3               	rlcf	plusw1,f,c
 16965  013068  0EF1               	movlw	-15
 16966  01306A  36E3               	rlcf	plusw1,f,c
 16967  01306C  0EF2               	movlw	-14
 16968  01306E  36E3               	rlcf	plusw1,f,c
 16969                           
 16970                           ;stkvar	_grs @ sp[(-13)+0]
 16971  013070  0EF6               	movlw	-10
 16972  013072  AEE3               	btfss	plusw1,7,c
 16973  013074  D002               	goto	l9910
 16974                           
 16975                           ;stkvar	_b @ sp[(-13)+-4]
 16976  013076  0EEF               	movlw	-17
 16977  013078  80E3               	bsf	plusw1,0,c
 16978  01307A                     l9910:
 16979                           
 16980                           ;stkvar	_grs @ sp[(-13)+0]
 16981  01307A  90D8               	bcf	status,0,c
 16982  01307C  0EF3               	movlw	-13
 16983  01307E  36E3               	rlcf	plusw1,f,c
 16984  013080  0EF4               	movlw	-12
 16985  013082  36E3               	rlcf	plusw1,f,c
 16986  013084  0EF5               	movlw	-11
 16987  013086  36E3               	rlcf	plusw1,f,c
 16988  013088  0EF6               	movlw	-10
 16989  01308A  36E3               	rlcf	plusw1,f,c
 16990  01308C                     l9912:
 16991                           
 16992                           ;stkvar	_a @ sp[(-13)+-8]
 16993                           ;stkvar	_rem @ sp[(-13)+4]
 16994  01308C  50E1               	movf	fsr1l,w,c
 16995  01308E  0FF7               	addlw	-9
 16996  013090  6ED9               	movwf	fsr2l,c
 16997  013092  50E2               	movf	fsr1h,w,c
 16998  013094  6EDA               	movwf	fsr2h,c
 16999  013096  0EFF               	movlw	255
 17000  013098  22DA               	addwfc	fsr2h,f,c
 17001  01309A  0EEB               	movlw	-21
 17002  01309C  50E3               	movf	plusw1,w,c
 17003  01309E  5CDE               	subwf	postinc2,w,c
 17004  0130A0  0EEC               	movlw	-20
 17005  0130A2  50E3               	movf	plusw1,w,c
 17006  0130A4  58DE               	subwfb	postinc2,w,c
 17007  0130A6  0EED               	movlw	-19
 17008  0130A8  50E3               	movf	plusw1,w,c
 17009  0130AA  58DE               	subwfb	postinc2,w,c
 17010  0130AC  0EEE               	movlw	-18
 17011  0130AE  50E3               	movf	plusw1,w,c
 17012  0130B0  58DE               	subwfb	postinc2,w,c
 17013  0130B2  A0D8               	btfss	status,0,c
 17014  0130B4  D015               	goto	l9918
 17015                           
 17016                           ;stkvar	_grs @ sp[(-13)+0]
 17017  0130B6  0EF6               	movlw	-10
 17018  0130B8  8CE3               	bsf	plusw1,6,c
 17019                           
 17020                           ;stkvar	_a @ sp[(-13)+-8]
 17021                           ;stkvar	_rem @ sp[(-13)+4]
 17022  0130BA  50E1               	movf	fsr1l,w,c
 17023  0130BC  0FF7               	addlw	-9
 17024  0130BE  6ED9               	movwf	fsr2l,c
 17025  0130C0  50E2               	movf	fsr1h,w,c
 17026  0130C2  6EDA               	movwf	fsr2h,c
 17027  0130C4  0EFF               	movlw	255
 17028  0130C6  22DA               	addwfc	fsr2h,f,c
 17029  0130C8  0EEB               	movlw	-21
 17030  0130CA  50E3               	movf	plusw1,w,c
 17031  0130CC  5EDE               	subwf	postinc2,f,c
 17032  0130CE  0EEC               	movlw	-20
 17033  0130D0  50E3               	movf	plusw1,w,c
 17034  0130D2  5ADE               	subwfb	postinc2,f,c
 17035  0130D4  0EED               	movlw	-19
 17036  0130D6  50E3               	movf	plusw1,w,c
 17037  0130D8  5ADE               	subwfb	postinc2,f,c
 17038  0130DA  0EEE               	movlw	-18
 17039  0130DC  50E3               	movf	plusw1,w,c
 17040  0130DE  5ADE               	subwfb	postinc2,f,c
 17041  0130E0                     l9918:
 17042                           
 17043                           ;stkvar	_aexp @ sp[(-13)+10]
 17044  0130E0  0EFD               	movlw	-3
 17045  0130E2  2AE3               	incf	plusw1,f,c
 17046  0130E4                     l9920:
 17047                           
 17048                           ;stkvar	_aexp @ sp[(-13)+10]
 17049  0130E4  0EFD               	movlw	-3
 17050  0130E6  006F FF8C  F032    	movff	plusw1,btemp
 17051  0130EC  0E19               	movlw	25
 17052  0130EE  6432               	cpfsgt	btemp^0,c
 17053  0130F0  D7A9               	goto	l9902
 17054                           
 17055                           ;stkvar	_rem @ sp[(-13)+4]
 17056  0130F2  0EF7               	movlw	-9
 17057  0130F4  50E3               	movf	plusw1,w,c
 17058  0130F6  E10A               	bnz	u10020
 17059  0130F8  0EF8               	movlw	-8
 17060  0130FA  50E3               	movf	plusw1,w,c
 17061  0130FC  E107               	bnz	u10020
 17062  0130FE  0EF9               	movlw	-7
 17063  013100  50E3               	movf	plusw1,w,c
 17064  013102  E104               	bnz	u10020
 17065  013104  0EFA               	movlw	-6
 17066  013106  50E3               	movf	plusw1,w,c
 17067  013108  B4D8               	btfsc	status,2,c
 17068  01310A  D024               	goto	l9936
 17069  01310C                     u10020:
 17070                           
 17071                           ;stkvar	_grs @ sp[(-13)+0]
 17072  01310C  0EF3               	movlw	-13
 17073  01310E  80E3               	bsf	plusw1,0,c
 17074  013110  D021               	goto	l9936
 17075  013112                     l9926:
 17076                           
 17077                           ;stkvar	_b @ sp[(-13)+-4]
 17078  013112  90D8               	bcf	status,0,c
 17079  013114  0EEF               	movlw	-17
 17080  013116  36E3               	rlcf	plusw1,f,c
 17081  013118  0EF0               	movlw	-16
 17082  01311A  36E3               	rlcf	plusw1,f,c
 17083  01311C  0EF1               	movlw	-15
 17084  01311E  36E3               	rlcf	plusw1,f,c
 17085  013120  0EF2               	movlw	-14
 17086  013122  36E3               	rlcf	plusw1,f,c
 17087                           
 17088                           ;stkvar	_grs @ sp[(-13)+0]
 17089  013124  0EF6               	movlw	-10
 17090  013126  AEE3               	btfss	plusw1,7,c
 17091  013128  D002               	goto	l9932
 17092                           
 17093                           ;stkvar	_b @ sp[(-13)+-4]
 17094  01312A  0EEF               	movlw	-17
 17095  01312C  80E3               	bsf	plusw1,0,c
 17096  01312E                     l9932:
 17097                           
 17098                           ;stkvar	_grs @ sp[(-13)+0]
 17099  01312E  90D8               	bcf	status,0,c
 17100  013130  0EF3               	movlw	-13
 17101  013132  36E3               	rlcf	plusw1,f,c
 17102  013134  0EF4               	movlw	-12
 17103  013136  36E3               	rlcf	plusw1,f,c
 17104  013138  0EF5               	movlw	-11
 17105  01313A  36E3               	rlcf	plusw1,f,c
 17106  01313C  0EF6               	movlw	-10
 17107  01313E  36E3               	rlcf	plusw1,f,c
 17108                           
 17109                           ;stkvar	_new_exp @ sp[(-13)+8]
 17110  013140  50E1               	movf	fsr1l,w,c
 17111  013142  0FFB               	addlw	-5
 17112  013144  6ED9               	movwf	fsr2l,c
 17113  013146  50E2               	movf	fsr1h,w,c
 17114  013148  6EDA               	movwf	fsr2h,c
 17115  01314A  0EFF               	movlw	255
 17116  01314C  22DA               	addwfc	fsr2h,f,c
 17117  01314E  06DE               	decf	postinc2,f,c
 17118  013150  0E00               	movlw	0
 17119  013152  5ADD               	subwfb	postdec2,f,c
 17120  013154                     l9936:
 17121                           
 17122                           ;stkvar	_b @ sp[(-13)+-4]
 17123  013154  0EF1               	movlw	-15
 17124  013156  AEE3               	btfss	plusw1,7,c
 17125  013158  D7DC               	goto	l9926
 17126                           
 17127                           ;stkvar	_aexp @ sp[(-13)+10]
 17128  01315A  0EFD               	movlw	-3
 17129  01315C  6AE3               	clrf	plusw1,c
 17130                           
 17131                           ;stkvar	_grs @ sp[(-13)+0]
 17132  01315E  0EF6               	movlw	-10
 17133  013160  AEE3               	btfss	plusw1,7,c
 17134  013162  D020               	goto	l9950
 17135                           
 17136                           ;stkvar	_grs @ sp[(-13)+0]
 17137  013164  50E1               	movf	fsr1l,w,c
 17138  013166  0FF3               	addlw	-13
 17139  013168  6ED9               	movwf	fsr2l,c
 17140  01316A  50E2               	movf	fsr1h,w,c
 17141  01316C  6EDA               	movwf	fsr2h,c
 17142  01316E  0EFF               	movlw	255
 17143  013170  22DA               	addwfc	fsr2h,f,c
 17144  013172  0EFF               	movlw	255
 17145  013174  14DE               	andwf	postinc2,w,c
 17146  013176  6E3A               	movwf	(btemp+8)^0,c
 17147  013178  0EFF               	movlw	255
 17148  01317A  14DE               	andwf	postinc2,w,c
 17149  01317C  6E3B               	movwf	(btemp+9)^0,c
 17150  01317E  0EFF               	movlw	255
 17151  013180  14DE               	andwf	postinc2,w,c
 17152  013182  6E3C               	movwf	(btemp+10)^0,c
 17153  013184  0E7F               	movlw	127
 17154  013186  14DE               	andwf	postinc2,w,c
 17155  013188  6E3D               	movwf	(btemp+11)^0,c
 17156  01318A  503A               	movf	(btemp+8)^0,w,c
 17157  01318C  103B               	iorwf	(btemp+9)^0,w,c
 17158  01318E  103C               	iorwf	(btemp+10)^0,w,c
 17159  013190  103D               	iorwf	(btemp+11)^0,w,c
 17160  013192  B4D8               	btfsc	status,2,c
 17161  013194  D004               	goto	l9946
 17162  013196                     u10060:
 17163                           
 17164                           ;stkvar	_aexp @ sp[(-13)+10]
 17165  013196  0EFD               	movlw	-3
 17166  013198  6AE3               	clrf	plusw1,c
 17167  01319A  2AE3               	incf	plusw1,f,c
 17168  01319C  D003               	goto	l9950
 17169  01319E                     l9946:
 17170                           
 17171                           ;stkvar	_b @ sp[(-13)+-4]
 17172  01319E  0EEF               	movlw	-17
 17173  0131A0  B0E3               	btfsc	plusw1,0,c
 17174  0131A2  D7F9               	goto	u10060
 17175  0131A4                     l9950:
 17176                           
 17177                           ;stkvar	_aexp @ sp[(-13)+10]
 17178  0131A4  0EFD               	movlw	-3
 17179  0131A6  50E3               	movf	plusw1,w,c
 17180  0131A8  B4D8               	btfsc	status,2,c
 17181  0131AA  D036               	goto	l9960
 17182                           
 17183                           ;stkvar	_b @ sp[(-13)+-4]
 17184  0131AC  50E1               	movf	fsr1l,w,c
 17185  0131AE  0FEF               	addlw	-17
 17186  0131B0  6ED9               	movwf	fsr2l,c
 17187  0131B2  50E2               	movf	fsr1h,w,c
 17188  0131B4  6EDA               	movwf	fsr2h,c
 17189  0131B6  0EFF               	movlw	255
 17190  0131B8  22DA               	addwfc	fsr2h,f,c
 17191  0131BA  2ADE               	incf	postinc2,f,c
 17192  0131BC  0E00               	movlw	0
 17193  0131BE  22DE               	addwfc	postinc2,f,c
 17194  0131C0  22DE               	addwfc	postinc2,f,c
 17195  0131C2  22DE               	addwfc	postinc2,f,c
 17196                           
 17197                           ;stkvar	_b @ sp[(-13)+-4]
 17198  0131C4  0EF2               	movlw	-14
 17199  0131C6  A0E3               	btfss	plusw1,0,c
 17200  0131C8  D027               	goto	l9960
 17201  0131CA  0E01               	movlw	1
 17202  0131CC  6E3D               	movwf	(btemp+11)^0,c
 17203                           
 17204                           ;stkvar	_b @ sp[(-13)+-4]
 17205  0131CE  50E1               	movf	fsr1l,w,c
 17206  0131D0  0FEF               	addlw	-17
 17207  0131D2  6ED9               	movwf	fsr2l,c
 17208  0131D4  50E2               	movf	fsr1h,w,c
 17209  0131D6  6EDA               	movwf	fsr2h,c
 17210  0131D8  0EFF               	movlw	255
 17211  0131DA  22DA               	addwfc	fsr2h,f,c
 17212  0131DC  283D               	incf	(btemp+11)^0,w,c
 17213  0131DE  52DE               	movf	postinc2,f,c
 17214  0131E0  D008               	goto	u10100
 17215  0131E2                     u10105:
 17216  0131E2  52DE               	movf	postinc2,f,c
 17217  0131E4  90D8               	bcf	status,0,c
 17218  0131E6  BEDC               	btfsc	preinc2,7,c
 17219  0131E8  80D8               	bsf	status,0,c
 17220  0131EA  32DD               	rrcf	postdec2,f,c
 17221  0131EC  32DD               	rrcf	postdec2,f,c
 17222  0131EE  32DD               	rrcf	postdec2,f,c
 17223  0131F0  32DE               	rrcf	postinc2,f,c
 17224  0131F2                     u10100:
 17225  0131F2  2EE8               	decfsz	wreg,f,c
 17226  0131F4  D7F6               	goto	u10105
 17227                           
 17228                           ;stkvar	_new_exp @ sp[(-13)+8]
 17229  0131F6  0EFB               	movlw	-5
 17230  0131F8  50E3               	movf	plusw1,w,c
 17231  0131FA  0F01               	addlw	1
 17232  0131FC  6E32               	movwf	btemp^0,c
 17233  0131FE  0EFB               	movlw	-5
 17234  013200  0060  F0CB  FFE3   	movff	btemp,plusw1
 17235  013206  6A32               	clrf	btemp^0,c
 17236  013208  0EFC               	movlw	-4
 17237  01320A  50E3               	movf	plusw1,w,c
 17238  01320C  2032               	addwfc	btemp^0,w,c
 17239  01320E  6E32               	movwf	btemp^0,c
 17240  013210  0EFC               	movlw	-4
 17241  013212  0060  F0CB  FFE3   	movff	btemp,plusw1
 17242  013218                     l9960:
 17243                           
 17244                           ;stkvar	_new_exp @ sp[(-13)+8]
 17245  013218  0EFC               	movlw	-4
 17246  01321A  BEE3               	btfsc	plusw1,7,c
 17247  01321C  D01B               	goto	l9966
 17248  01321E  0EFC               	movlw	-4
 17249  013220  50E3               	movf	plusw1,w,c
 17250  013222  E104               	bnz	u10110
 17251  013224  0EFB               	movlw	-5
 17252  013226  28E3               	incf	plusw1,w,c
 17253  013228  A0D8               	btfss	status,0,c
 17254  01322A  D014               	goto	l9966
 17255  01322C                     u10110:
 17256  01322C  0EFF               	movlw	255
 17257  01322E  6E3C               	movwf	(btemp+10)^0,c
 17258  013230  0E00               	movlw	0
 17259  013232  6E3D               	movwf	(btemp+11)^0,c
 17260                           
 17261                           ;stkvar	_new_exp @ sp[(-13)+8]
 17262  013234  0EFB               	movlw	-5
 17263  013236  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17264  01323C  0EFC               	movlw	-4
 17265  01323E  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17266                           
 17267                           ;stkvar	_b @ sp[(-13)+-4]
 17268  013244  0EEF               	movlw	-17
 17269  013246  6AE3               	clrf	plusw1,c
 17270  013248  0EF0               	movlw	-16
 17271  01324A  6AE3               	clrf	plusw1,c
 17272  01324C  0EF1               	movlw	-15
 17273  01324E  6AE3               	clrf	plusw1,c
 17274  013250  0EF2               	movlw	-14
 17275  013252  6AE3               	clrf	plusw1,c
 17276  013254                     l9966:
 17277                           
 17278                           ;stkvar	_new_exp @ sp[(-13)+8]
 17279  013254  0EFC               	movlw	-4
 17280  013256  BEE3               	btfsc	plusw1,7,c
 17281  013258  D007               	goto	u10120
 17282  01325A  0EFC               	movlw	-4
 17283  01325C  50E3               	movf	plusw1,w,c
 17284  01325E  E112               	bnz	l9972
 17285  013260  0EFB               	movlw	-5
 17286  013262  04E3               	decf	plusw1,w,c
 17287  013264  B0D8               	btfsc	status,0,c
 17288  013266  D00E               	goto	l9972
 17289  013268                     u10120:
 17290                           
 17291                           ;stkvar	_new_exp @ sp[(-13)+8]
 17292  013268  0EFB               	movlw	-5
 17293  01326A  6AE3               	clrf	plusw1,c
 17294  01326C  0EFC               	movlw	-4
 17295  01326E  6AE3               	clrf	plusw1,c
 17296                           
 17297                           ;stkvar	_b @ sp[(-13)+-4]
 17298  013270  0EEF               	movlw	-17
 17299  013272  6AE3               	clrf	plusw1,c
 17300  013274  0EF0               	movlw	-16
 17301  013276  6AE3               	clrf	plusw1,c
 17302  013278  0EF1               	movlw	-15
 17303  01327A  6AE3               	clrf	plusw1,c
 17304  01327C  0EF2               	movlw	-14
 17305  01327E  6AE3               	clrf	plusw1,c
 17306                           
 17307                           ;stkvar	_sign @ sp[(-13)+12]
 17308  013280  0EFF               	movlw	-1
 17309  013282  6AE3               	clrf	plusw1,c
 17310  013284                     l9972:
 17311                           
 17312                           ;stkvar	_new_exp @ sp[(-13)+8]
 17313                           ;stkvar	_bexp @ sp[(-13)+11]
 17314  013284  0EFB               	movlw	-5
 17315  013286  006F FF8C  F032    	movff	plusw1,btemp
 17316  01328C  0EFE               	movlw	-2
 17317  01328E  0060  F0CB  FFE3   	movff	btemp,plusw1
 17318                           
 17319                           ;stkvar	_bexp @ sp[(-13)+11]
 17320  013294  0EFE               	movlw	-2
 17321  013296  A0E3               	btfss	plusw1,0,c
 17322  013298  D009               	goto	l9978
 17323                           
 17324                           ;stkvar	_b @ sp[(-13)+-4]
 17325  01329A  0EF1               	movlw	241
 17326  01329C  24E1               	addwf	fsr1l,w,c
 17327  01329E  6ED9               	movwf	fsr2l,c
 17328  0132A0  0EFF               	movlw	255
 17329  0132A2  20E2               	addwfc	fsr1h,w,c
 17330  0132A4  6EDA               	movwf	fsr2h,c
 17331  0132A6  0E00               	movlw	0
 17332  0132A8  8EDB               	bsf	plusw2,7,c
 17333  0132AA  D008               	goto	l9980
 17334  0132AC                     l9978:
 17335                           
 17336                           ;stkvar	_b @ sp[(-13)+-4]
 17337  0132AC  0EF1               	movlw	241
 17338  0132AE  24E1               	addwf	fsr1l,w,c
 17339  0132B0  6ED9               	movwf	fsr2l,c
 17340  0132B2  0EFF               	movlw	255
 17341  0132B4  20E2               	addwfc	fsr1h,w,c
 17342  0132B6  6EDA               	movwf	fsr2h,c
 17343  0132B8  0E7F               	movlw	127
 17344  0132BA  16DF               	andwf	indf2,f,c
 17345  0132BC                     l9980:
 17346                           
 17347                           ;stkvar	_b @ sp[(-13)+-4]
 17348  0132BC  0EF2               	movlw	242
 17349  0132BE  24E1               	addwf	fsr1l,w,c
 17350  0132C0  6ED9               	movwf	fsr2l,c
 17351  0132C2  0EFF               	movlw	255
 17352  0132C4  20E2               	addwfc	fsr1h,w,c
 17353  0132C6  6EDA               	movwf	fsr2h,c
 17354                           
 17355                           ;stkvar	_bexp @ sp[(-13)+11]
 17356  0132C8  0EFE               	movlw	-2
 17357  0132CA  006F FF8C  F03D    	movff	plusw1,btemp+11
 17358  0132D0  90D8               	bcf	status,0,c
 17359  0132D2  303D               	rrcf	(btemp+11)^0,w,c
 17360  0132D4  6EDF               	movwf	indf2,c
 17361  0132D6  D644               	goto	l9878
 17362  0132D8                     l2631:
 17363                           
 17364                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 17365  0132D8  0EEB               	movlw	235
 17366  0132DA  26E1               	addwf	fsr1l,f,c
 17367  0132DC  0EFF               	movlw	255
 17368  0132DE  22E2               	addwfc	fsr1h,f,c
 17369  0132E0  0012               	return		;funcret
 17370  0132E2                     __end_of___fldiv:
 17371                           	opt callstack 0
 17372                           
 17373 ;; *************** function ___awmod *****************
 17374 ;; Defined at:
 17375 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 17376 ;; Parameters:    Size  Location     Type
 17377 ;;  dividend        2  [STACK] int 
 17378 ;;  divisor         2  [STACK] int 
 17379 ;; Auto vars:     Size  Location     Type
 17380 ;;  sign            1  [STACK] unsigned char 
 17381 ;;  counter         1  [STACK] unsigned char 
 17382 ;; Return value:  Size  Location     Type
 17383 ;;                  2  [STACK] int 
 17384 ;; Registers used:
 17385 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17386 ;; Tracked objects:
 17387 ;;		On entry : 0/5
 17388 ;;		On exit  : 0/0
 17389 ;;		Unchanged: 0/0
 17390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17395 ;;Total ram usage:        0 bytes
 17396 ;; Hardware stack levels used:    1
 17397 ;; Hardware stack levels required when called:    6
 17398 ;; This function calls:
 17399 ;;		Nothing
 17400 ;; This function is called by:
 17401 ;;		_efgtoa
 17402 ;; This function uses a reentrant model
 17403 ;;
 17404                           
 17405                           	psect	text58
 17406  01663C                     __ptext58:
 17407                           	opt callstack 0
 17408  01663C                     ___awmod:
 17409                           	opt callstack 0
 17410                           
 17411                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17412  01663C  52E6               	movf	postinc1,f,c
 17413  01663E  52E6               	movf	postinc1,f,c
 17414                           
 17415                           ;stkvar	_sign @ sp[(-2)+0]
 17416                           
 17417                           ;incstack = 0
 17418  016640  0EFE               	movlw	-2
 17419  016642  6AE3               	clrf	plusw1,c
 17420                           
 17421                           ;stkvar	_dividend @ sp[(-2)+-2]
 17422  016644  0EFD               	movlw	-3
 17423  016646  AEE3               	btfss	plusw1,7,c
 17424  016648  D009               	goto	l10204
 17425                           
 17426                           ;stkvar	_dividend @ sp[(-2)+-2]
 17427                           ;stkvar	_dividend @ sp[(-2)+-2]
 17428  01664A  0EFC               	movlw	-4
 17429  01664C  6CE3               	negf	plusw1,c
 17430  01664E  0EFD               	movlw	-3
 17431  016650  1EE3               	comf	plusw1,f,c
 17432  016652  B0D8               	btfsc	status,0,c
 17433  016654  2AE3               	incf	plusw1,f,c
 17434                           
 17435                           ;stkvar	_sign @ sp[(-2)+0]
 17436  016656  0EFE               	movlw	-2
 17437  016658  6AE3               	clrf	plusw1,c
 17438  01665A  2AE3               	incf	plusw1,f,c
 17439  01665C                     l10204:
 17440                           
 17441                           ;stkvar	_divisor @ sp[(-2)+-4]
 17442  01665C  0EFB               	movlw	-5
 17443  01665E  AEE3               	btfss	plusw1,7,c
 17444  016660  D006               	goto	l10208
 17445                           
 17446                           ;stkvar	_divisor @ sp[(-2)+-4]
 17447                           ;stkvar	_divisor @ sp[(-2)+-4]
 17448  016662  0EFA               	movlw	-6
 17449  016664  6CE3               	negf	plusw1,c
 17450  016666  0EFB               	movlw	-5
 17451  016668  1EE3               	comf	plusw1,f,c
 17452  01666A  B0D8               	btfsc	status,0,c
 17453  01666C  2AE3               	incf	plusw1,f,c
 17454  01666E                     l10208:
 17455                           
 17456                           ;stkvar	_divisor @ sp[(-2)+-4]
 17457  01666E  0EFA               	movlw	-6
 17458  016670  006F FF8C  F032    	movff	plusw1,btemp
 17459  016676  0EFB               	movlw	-5
 17460  016678  50E3               	movf	plusw1,w,c
 17461  01667A  1032               	iorwf	btemp^0,w,c
 17462  01667C  B4D8               	btfsc	status,2,c
 17463  01667E  D053               	goto	u10480
 17464                           
 17465                           ;stkvar	_counter @ sp[(-2)+1]
 17466  016680  0EFF               	movlw	-1
 17467  016682  6AE3               	clrf	plusw1,c
 17468  016684  D012               	goto	L14
 17469  016686                     l10212:
 17470                           
 17471                           ;stkvar	_divisor @ sp[(-2)+-4]
 17472  016686  0EFA               	movlw	-6
 17473  016688  50E3               	movf	plusw1,w,c
 17474  01668A  90D8               	bcf	status,0,c
 17475  01668C  34E8               	rlcf	wreg,w,c
 17476  01668E  6E32               	movwf	btemp^0,c
 17477  016690  0EFA               	movlw	-6
 17478  016692  0060  F0CB  FFE3   	movff	btemp,plusw1
 17479  016698  0EFB               	movlw	-5
 17480  01669A  50E3               	movf	plusw1,w,c
 17481  01669C  34E8               	rlcf	wreg,w,c
 17482  01669E  6E32               	movwf	btemp^0,c
 17483  0166A0  0EFB               	movlw	-5
 17484  0166A2  0060  F0CB  FFE3   	movff	btemp,plusw1
 17485                           
 17486                           ;stkvar	_counter @ sp[(-2)+1]
 17487  0166A8  0EFF               	movlw	-1
 17488  0166AA                     L14:
 17489  0166AA  2AE3               	incf	plusw1,f,c
 17490                           
 17491                           ;stkvar	_divisor @ sp[(-2)+-4]
 17492  0166AC  0EFB               	movlw	-5
 17493  0166AE  AEE3               	btfss	plusw1,7,c
 17494  0166B0  D7EA               	goto	l10212
 17495  0166B2                     u10460:
 17496                           
 17497                           ;stkvar	_divisor @ sp[(-2)+-4]
 17498  0166B2  0EFA               	movlw	-6
 17499  0166B4  006F FF8C  F03C    	movff	plusw1,btemp+10
 17500  0166BA  0EFB               	movlw	-5
 17501  0166BC  006F FF8C  F03D    	movff	plusw1,btemp+11
 17502                           
 17503                           ;stkvar	_dividend @ sp[(-2)+-2]
 17504  0166C2  0EFC               	movlw	-4
 17505  0166C4  006F FF8C  F03A    	movff	plusw1,btemp+8
 17506  0166CA  0EFD               	movlw	-3
 17507  0166CC  006F FF8C  F03B    	movff	plusw1,btemp+9
 17508  0166D2  503C               	movf	(btemp+10)^0,w,c
 17509  0166D4  5C3A               	subwf	(btemp+8)^0,w,c
 17510  0166D6  503D               	movf	(btemp+11)^0,w,c
 17511  0166D8  583B               	subwfb	(btemp+9)^0,w,c
 17512  0166DA  A0D8               	btfss	status,0,c
 17513  0166DC  D014               	goto	l10222
 17514                           
 17515                           ;stkvar	_divisor @ sp[(-2)+-4]
 17516                           ;stkvar	_dividend @ sp[(-2)+-2]
 17517  0166DE  0EFC               	movlw	-4
 17518  0166E0  50E3               	movf	plusw1,w,c
 17519  0166E2  6E32               	movwf	btemp^0,c
 17520  0166E4  0EFA               	movlw	-6
 17521  0166E6  50E3               	movf	plusw1,w,c
 17522  0166E8  5E32               	subwf	btemp^0,f,c
 17523  0166EA  0EFC               	movlw	-4
 17524  0166EC  0060  F0CB  FFE3   	movff	btemp,plusw1
 17525  0166F2  0EFD               	movlw	-3
 17526  0166F4  50E3               	movf	plusw1,w,c
 17527  0166F6  6E32               	movwf	btemp^0,c
 17528  0166F8  0EFB               	movlw	-5
 17529  0166FA  50E3               	movf	plusw1,w,c
 17530  0166FC  5A32               	subwfb	btemp^0,f,c
 17531  0166FE  0EFD               	movlw	-3
 17532  016700  0060  F0CB  FFE3   	movff	btemp,plusw1
 17533  016706                     l10222:
 17534                           
 17535                           ;stkvar	_divisor @ sp[(-2)+-4]
 17536  016706  90D8               	bcf	status,0,c
 17537  016708  0EFB               	movlw	-5
 17538  01670A  32E3               	rrcf	plusw1,f,c
 17539  01670C  0EFA               	movlw	-6
 17540  01670E  32E3               	rrcf	plusw1,f,c
 17541                           
 17542                           ;stkvar	_counter @ sp[(-2)+1]
 17543  016710  0EFF               	movlw	-1
 17544  016712  50E3               	movf	plusw1,w,c
 17545  016714  6E32               	movwf	btemp^0,c
 17546  016716  0E01               	movlw	1
 17547  016718  5E32               	subwf	btemp^0,f,c
 17548  01671A  0EFF               	movlw	-1
 17549  01671C  0060  F0CB  FFE3   	movff	btemp,plusw1
 17550  016722  A4D8               	btfss	status,2,c
 17551  016724  D7C6               	goto	u10460
 17552  016726                     u10480:
 17553                           
 17554                           ;stkvar	_sign @ sp[(-2)+0]
 17555  016726  0EFE               	movlw	-2
 17556  016728  50E3               	movf	plusw1,w,c
 17557  01672A  B4D8               	btfsc	status,2,c
 17558  01672C  D006               	goto	l10230
 17559                           
 17560                           ;stkvar	_dividend @ sp[(-2)+-2]
 17561                           ;stkvar	_dividend @ sp[(-2)+-2]
 17562  01672E  0EFC               	movlw	-4
 17563  016730  6CE3               	negf	plusw1,c
 17564  016732  0EFD               	movlw	-3
 17565  016734  1EE3               	comf	plusw1,f,c
 17566  016736  B0D8               	btfsc	status,0,c
 17567  016738  2AE3               	incf	plusw1,f,c
 17568  01673A                     l10230:
 17569                           
 17570                           ;stkvar	_dividend @ sp[(-2)+-2]
 17571  01673A  0EFC               	movlw	-4
 17572  01673C  006F FF8C  F032    	movff	plusw1,btemp
 17573  016742  0EFD               	movlw	-3
 17574  016744  006F FF8C  F033    	movff	plusw1,btemp+1
 17575                           
 17576                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17577  01674A  0EFA               	movlw	250
 17578  01674C  26E1               	addwf	fsr1l,f,c
 17579  01674E  0EFF               	movlw	255
 17580  016750  22E2               	addwfc	fsr1h,f,c
 17581  016752  0012               	return		;funcret
 17582  016754                     __end_of___awmod:
 17583                           	opt callstack 0
 17584                           
 17585 ;; *************** function ___awdiv *****************
 17586 ;; Defined at:
 17587 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 17588 ;; Parameters:    Size  Location     Type
 17589 ;;  dividend        2  [STACK] int 
 17590 ;;  divisor         2  [STACK] int 
 17591 ;; Auto vars:     Size  Location     Type
 17592 ;;  quotient        2  [STACK] int 
 17593 ;;  sign            1  [STACK] unsigned char 
 17594 ;;  counter         1  [STACK] unsigned char 
 17595 ;; Return value:  Size  Location     Type
 17596 ;;                  2  [STACK] int 
 17597 ;; Registers used:
 17598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 17599 ;; Tracked objects:
 17600 ;;		On entry : 0/5
 17601 ;;		On exit  : 0/0
 17602 ;;		Unchanged: 0/0
 17603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17608 ;;Total ram usage:        0 bytes
 17609 ;; Hardware stack levels used:    1
 17610 ;; Hardware stack levels required when called:    6
 17611 ;; This function calls:
 17612 ;;		Nothing
 17613 ;; This function is called by:
 17614 ;;		_efgtoa
 17615 ;; This function uses a reentrant model
 17616 ;;
 17617                           
 17618                           	psect	text59
 17619  016154                     __ptext59:
 17620                           	opt callstack 0
 17621  016154                     ___awdiv:
 17622                           	opt callstack 0
 17623                           
 17624                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17625  016154  52E6               	movf	postinc1,f,c
 17626  016156  52E6               	movf	postinc1,f,c
 17627  016158  52E6               	movf	postinc1,f,c
 17628  01615A  52E6               	movf	postinc1,f,c
 17629                           
 17630                           ;stkvar	_sign @ sp[(-4)+2]
 17631                           
 17632                           ;incstack = 0
 17633  01615C  0EFE               	movlw	-2
 17634  01615E  6AE3               	clrf	plusw1,c
 17635                           
 17636                           ;stkvar	_divisor @ sp[(-4)+-4]
 17637  016160  0EF9               	movlw	-7
 17638  016162  AEE3               	btfss	plusw1,7,c
 17639  016164  D009               	goto	l10158
 17640                           
 17641                           ;stkvar	_divisor @ sp[(-4)+-4]
 17642                           ;stkvar	_divisor @ sp[(-4)+-4]
 17643  016166  0EF8               	movlw	-8
 17644  016168  6CE3               	negf	plusw1,c
 17645  01616A  0EF9               	movlw	-7
 17646  01616C  1EE3               	comf	plusw1,f,c
 17647  01616E  B0D8               	btfsc	status,0,c
 17648  016170  2AE3               	incf	plusw1,f,c
 17649                           
 17650                           ;stkvar	_sign @ sp[(-4)+2]
 17651  016172  0EFE               	movlw	-2
 17652  016174  6AE3               	clrf	plusw1,c
 17653  016176  2AE3               	incf	plusw1,f,c
 17654  016178                     l10158:
 17655                           
 17656                           ;stkvar	_dividend @ sp[(-4)+-2]
 17657  016178  0EFB               	movlw	-5
 17658  01617A  AEE3               	btfss	plusw1,7,c
 17659  01617C  D008               	goto	l10164
 17660                           
 17661                           ;stkvar	_dividend @ sp[(-4)+-2]
 17662                           ;stkvar	_dividend @ sp[(-4)+-2]
 17663  01617E  0EFA               	movlw	-6
 17664  016180  6CE3               	negf	plusw1,c
 17665  016182  0EFB               	movlw	-5
 17666  016184  1EE3               	comf	plusw1,f,c
 17667  016186  B0D8               	btfsc	status,0,c
 17668  016188  2AE3               	incf	plusw1,f,c
 17669                           
 17670                           ;stkvar	_sign @ sp[(-4)+2]
 17671  01618A  0EFE               	movlw	-2
 17672  01618C  70E3               	btg	plusw1,0,c
 17673  01618E                     l10164:
 17674                           
 17675                           ;stkvar	_quotient @ sp[(-4)+0]
 17676  01618E  0EFC               	movlw	-4
 17677  016190  6AE3               	clrf	plusw1,c
 17678  016192  0EFD               	movlw	-3
 17679  016194  6AE3               	clrf	plusw1,c
 17680                           
 17681                           ;stkvar	_divisor @ sp[(-4)+-4]
 17682  016196  0EF8               	movlw	-8
 17683  016198  006F FF8C  F032    	movff	plusw1,btemp
 17684  01619E  0EF9               	movlw	-7
 17685  0161A0  50E3               	movf	plusw1,w,c
 17686  0161A2  1032               	iorwf	btemp^0,w,c
 17687  0161A4  B4D8               	btfsc	status,2,c
 17688  0161A6  D066               	goto	u10410
 17689                           
 17690                           ;stkvar	_counter @ sp[(-4)+3]
 17691  0161A8  0EFF               	movlw	-1
 17692  0161AA  6AE3               	clrf	plusw1,c
 17693  0161AC  D012               	goto	L15
 17694  0161AE                     l10170:
 17695                           
 17696                           ;stkvar	_divisor @ sp[(-4)+-4]
 17697  0161AE  0EF8               	movlw	-8
 17698  0161B0  50E3               	movf	plusw1,w,c
 17699  0161B2  90D8               	bcf	status,0,c
 17700  0161B4  34E8               	rlcf	wreg,w,c
 17701  0161B6  6E32               	movwf	btemp^0,c
 17702  0161B8  0EF8               	movlw	-8
 17703  0161BA  0060  F0CB  FFE3   	movff	btemp,plusw1
 17704  0161C0  0EF9               	movlw	-7
 17705  0161C2  50E3               	movf	plusw1,w,c
 17706  0161C4  34E8               	rlcf	wreg,w,c
 17707  0161C6  6E32               	movwf	btemp^0,c
 17708  0161C8  0EF9               	movlw	-7
 17709  0161CA  0060  F0CB  FFE3   	movff	btemp,plusw1
 17710                           
 17711                           ;stkvar	_counter @ sp[(-4)+3]
 17712  0161D0  0EFF               	movlw	-1
 17713  0161D2                     L15:
 17714  0161D2  2AE3               	incf	plusw1,f,c
 17715                           
 17716                           ;stkvar	_divisor @ sp[(-4)+-4]
 17717  0161D4  0EF9               	movlw	-7
 17718  0161D6  AEE3               	btfss	plusw1,7,c
 17719  0161D8  D7EA               	goto	l10170
 17720  0161DA                     u10390:
 17721                           
 17722                           ;stkvar	_quotient @ sp[(-4)+0]
 17723  0161DA  0EFC               	movlw	-4
 17724  0161DC  50E3               	movf	plusw1,w,c
 17725  0161DE  90D8               	bcf	status,0,c
 17726  0161E0  34E8               	rlcf	wreg,w,c
 17727  0161E2  6E32               	movwf	btemp^0,c
 17728  0161E4  0EFC               	movlw	-4
 17729  0161E6  0060  F0CB  FFE3   	movff	btemp,plusw1
 17730  0161EC  0EFD               	movlw	-3
 17731  0161EE  50E3               	movf	plusw1,w,c
 17732  0161F0  34E8               	rlcf	wreg,w,c
 17733  0161F2  6E32               	movwf	btemp^0,c
 17734  0161F4  0EFD               	movlw	-3
 17735  0161F6  0060  F0CB  FFE3   	movff	btemp,plusw1
 17736                           
 17737                           ;stkvar	_divisor @ sp[(-4)+-4]
 17738  0161FC  0EF8               	movlw	-8
 17739  0161FE  006F FF8C  F03C    	movff	plusw1,btemp+10
 17740  016204  0EF9               	movlw	-7
 17741  016206  006F FF8C  F03D    	movff	plusw1,btemp+11
 17742                           
 17743                           ;stkvar	_dividend @ sp[(-4)+-2]
 17744  01620C  0EFA               	movlw	-6
 17745  01620E  006F FF8C  F03A    	movff	plusw1,btemp+8
 17746  016214  0EFB               	movlw	-5
 17747  016216  006F FF8C  F03B    	movff	plusw1,btemp+9
 17748  01621C  503C               	movf	(btemp+10)^0,w,c
 17749  01621E  5C3A               	subwf	(btemp+8)^0,w,c
 17750  016220  503D               	movf	(btemp+11)^0,w,c
 17751  016222  583B               	subwfb	(btemp+9)^0,w,c
 17752  016224  A0D8               	btfss	status,0,c
 17753  016226  D016               	goto	l10184
 17754                           
 17755                           ;stkvar	_divisor @ sp[(-4)+-4]
 17756                           ;stkvar	_dividend @ sp[(-4)+-2]
 17757  016228  0EFA               	movlw	-6
 17758  01622A  50E3               	movf	plusw1,w,c
 17759  01622C  6E32               	movwf	btemp^0,c
 17760  01622E  0EF8               	movlw	-8
 17761  016230  50E3               	movf	plusw1,w,c
 17762  016232  5E32               	subwf	btemp^0,f,c
 17763  016234  0EFA               	movlw	-6
 17764  016236  0060  F0CB  FFE3   	movff	btemp,plusw1
 17765  01623C  0EFB               	movlw	-5
 17766  01623E  50E3               	movf	plusw1,w,c
 17767  016240  6E32               	movwf	btemp^0,c
 17768  016242  0EF9               	movlw	-7
 17769  016244  50E3               	movf	plusw1,w,c
 17770  016246  5A32               	subwfb	btemp^0,f,c
 17771  016248  0EFB               	movlw	-5
 17772  01624A  0060  F0CB  FFE3   	movff	btemp,plusw1
 17773                           
 17774                           ;stkvar	_quotient @ sp[(-4)+0]
 17775  016250  0EFC               	movlw	-4
 17776  016252  80E3               	bsf	plusw1,0,c
 17777  016254                     l10184:
 17778                           
 17779                           ;stkvar	_divisor @ sp[(-4)+-4]
 17780  016254  90D8               	bcf	status,0,c
 17781  016256  0EF9               	movlw	-7
 17782  016258  32E3               	rrcf	plusw1,f,c
 17783  01625A  0EF8               	movlw	-8
 17784  01625C  32E3               	rrcf	plusw1,f,c
 17785                           
 17786                           ;stkvar	_counter @ sp[(-4)+3]
 17787  01625E  0EFF               	movlw	-1
 17788  016260  50E3               	movf	plusw1,w,c
 17789  016262  6E32               	movwf	btemp^0,c
 17790  016264  0E01               	movlw	1
 17791  016266  5E32               	subwf	btemp^0,f,c
 17792  016268  0EFF               	movlw	-1
 17793  01626A  0060  F0CB  FFE3   	movff	btemp,plusw1
 17794  016270  A4D8               	btfss	status,2,c
 17795  016272  D7B3               	goto	u10390
 17796  016274                     u10410:
 17797                           
 17798                           ;stkvar	_sign @ sp[(-4)+2]
 17799  016274  0EFE               	movlw	-2
 17800  016276  50E3               	movf	plusw1,w,c
 17801  016278  B4D8               	btfsc	status,2,c
 17802  01627A  D006               	goto	l10192
 17803                           
 17804                           ;stkvar	_quotient @ sp[(-4)+0]
 17805                           ;stkvar	_quotient @ sp[(-4)+0]
 17806  01627C  0EFC               	movlw	-4
 17807  01627E  6CE3               	negf	plusw1,c
 17808  016280  0EFD               	movlw	-3
 17809  016282  1EE3               	comf	plusw1,f,c
 17810  016284  B0D8               	btfsc	status,0,c
 17811  016286  2AE3               	incf	plusw1,f,c
 17812  016288                     l10192:
 17813                           
 17814                           ;stkvar	_quotient @ sp[(-4)+0]
 17815  016288  0EFC               	movlw	-4
 17816  01628A  006F FF8C  F032    	movff	plusw1,btemp
 17817  016290  0EFD               	movlw	-3
 17818  016292  006F FF8C  F033    	movff	plusw1,btemp+1
 17819                           
 17820                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 17821  016298  0EF8               	movlw	248
 17822  01629A  26E1               	addwf	fsr1l,f,c
 17823  01629C  0EFF               	movlw	255
 17824  01629E  22E2               	addwfc	fsr1h,f,c
 17825  0162A0  0012               	return		;funcret
 17826  0162A2                     __end_of___awdiv:
 17827                           	opt callstack 0
 17828                           
 17829 ;; *************** function _dtoa *****************
 17830 ;; Defined at:
 17831 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17832 ;; Parameters:    Size  Location     Type
 17833 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17834 ;;		 -> f(6), NULL(0), 
 17835 ;;  d               8  [STACK] long long 
 17836 ;; Auto vars:     Size  Location     Type
 17837 ;;  n               8  [STACK] long long 
 17838 ;;  i               2  [STACK] int 
 17839 ;;  s               2  [STACK] int 
 17840 ;;  w               2  [STACK] int 
 17841 ;;  p               2  [STACK] int 
 17842 ;; Return value:  Size  Location     Type
 17843 ;;                  2  [STACK] int 
 17844 ;; Registers used:
 17845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 17846 ;; Tracked objects:
 17847 ;;		On entry : 0/5
 17848 ;;		On exit  : 0/0
 17849 ;;		Unchanged: 0/0
 17850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17855 ;;Total ram usage:        0 bytes
 17856 ;; Hardware stack levels used:    1
 17857 ;; Hardware stack levels required when called:   11
 17858 ;; This function calls:
 17859 ;;		___aodiv
 17860 ;;		___aomod
 17861 ;;		_abs
 17862 ;;		_pad
 17863 ;; This function is called by:
 17864 ;;		_vfpfcnvrt
 17865 ;; This function uses a reentrant model
 17866 ;;
 17867                           
 17868                           	psect	text60
 17869  013CB2                     __ptext60:
 17870                           	opt callstack 0
 17871  013CB2                     _dtoa:
 17872                           	opt callstack 0
 17873                           
 17874                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 17875  013CB2  0E12               	movlw	18
 17876  013CB4  26E1               	addwf	fsr1l,f,c
 17877  013CB6  0E00               	movlw	0
 17878  013CB8  22E2               	addwfc	fsr1h,f,c
 17879                           
 17880                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 17881                           ;stkvar	_d @ sp[(-18)+-10]
 17882                           
 17883                           ;incstack = 0
 17884  013CBA  0EE4               	movlw	228
 17885  013CBC  24E1               	addwf	fsr1l,w,c
 17886  013CBE  6ED9               	movwf	fsr2l,c
 17887  013CC0  0EFF               	movlw	255
 17888  013CC2  20E2               	addwfc	fsr1h,w,c
 17889  013CC4  6EDA               	movwf	fsr2h,c
 17890                           
 17891                           ;stkvar	_n @ sp[(-18)+2]
 17892  013CC6  0E08               	movlw	8
 17893  013CC8  6E32               	movwf	btemp^0,c
 17894  013CCA  0EF0               	movlw	-16
 17895  013CCC                     us1072999:
 17896  013CCC  006F FF7B FFE3     	movff	postinc2,plusw1
 17897  013CD2  28E8               	incf	wreg,w,c
 17898  013CD4  2E32               	decfsz	btemp^0,f,c
 17899  013CD6  D7FA               	bra	us1072999
 17900                           
 17901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 17902                           ;stkvar	_n @ sp[(-18)+2]
 17903  013CD8  0EF7               	movlw	-9
 17904  013CDA  AEE3               	btfss	plusw1,7,c
 17905  013CDC  D002               	goto	u10730
 17906  013CDE  0E01               	movlw	1
 17907  013CE0  D001               	goto	u10740
 17908  013CE2                     u10730:
 17909  013CE2  0E00               	movlw	0
 17910  013CE4                     u10740:
 17911  013CE4  6E3C               	movwf	(btemp+10)^0,c
 17912  013CE6  6A3D               	clrf	(btemp+11)^0,c
 17913                           
 17914                           ;stkvar	_s @ sp[(-18)+12]
 17915  013CE8  0EFA               	movlw	-6
 17916  013CEA  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17917  013CF0  0EFB               	movlw	-5
 17918  013CF2  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17919                           
 17920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 17921                           ;stkvar	_s @ sp[(-18)+12]
 17922  013CF8  0EFA               	movlw	-6
 17923  013CFA  006F FF8C  F032    	movff	plusw1,btemp
 17924  013D00  0EFB               	movlw	-5
 17925  013D02  50E3               	movf	plusw1,w,c
 17926  013D04  1032               	iorwf	btemp^0,w,c
 17927  013D06  B4D8               	btfsc	status,2,c
 17928  013D08  D025               	goto	u10760
 17929                           
 17930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 17931                           ;stkvar	_n @ sp[(-18)+2]
 17932                           ;stkvar	_n @ sp[(-18)+2]
 17933  013D0A  0EF0               	movlw	-16
 17934  013D0C  6CE3               	negf	plusw1,c
 17935  013D0E  0EF1               	movlw	-15
 17936  013D10  1EE3               	comf	plusw1,f,c
 17937  013D12  0EF2               	movlw	-14
 17938  013D14  1EE3               	comf	plusw1,f,c
 17939  013D16  0EF3               	movlw	-13
 17940  013D18  1EE3               	comf	plusw1,f,c
 17941  013D1A  0EF4               	movlw	-12
 17942  013D1C  1EE3               	comf	plusw1,f,c
 17943  013D1E  0EF5               	movlw	-11
 17944  013D20  1EE3               	comf	plusw1,f,c
 17945  013D22  0EF6               	movlw	-10
 17946  013D24  1EE3               	comf	plusw1,f,c
 17947  013D26  0EF7               	movlw	-9
 17948  013D28  1EE3               	comf	plusw1,f,c
 17949  013D2A  E314               	bnc	u10760
 17950  013D2C  0EF1               	movlw	-15
 17951  013D2E  2AE3               	incf	plusw1,f,c
 17952  013D30  E311               	bnc	u10760
 17953  013D32  0EF2               	movlw	-14
 17954  013D34  2AE3               	incf	plusw1,f,c
 17955  013D36  E30E               	bnc	u10760
 17956  013D38  0EF3               	movlw	-13
 17957  013D3A  2AE3               	incf	plusw1,f,c
 17958  013D3C  E30B               	bnc	u10760
 17959  013D3E  0EF4               	movlw	-12
 17960  013D40  2AE3               	incf	plusw1,f,c
 17961  013D42  E308               	bnc	u10760
 17962  013D44  0EF5               	movlw	-11
 17963  013D46  2AE3               	incf	plusw1,f,c
 17964  013D48  E305               	bnc	u10760
 17965  013D4A  0EF6               	movlw	-10
 17966  013D4C  2AE3               	incf	plusw1,f,c
 17967  013D4E  E302               	bnc	u10760
 17968  013D50  0EF7               	movlw	-9
 17969  013D52  2AE3               	incf	plusw1,f,c
 17970  013D54                     u10760:
 17971                           
 17972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 17973  013D54  AE1E               	btfss	(_prec+1)^0,7,c
 17974                           
 17975                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 17976  013D56  921F               	bcf	_flags^0,1,c
 17977                           
 17978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 17979  013D58  BE1E               	btfsc	(_prec+1)^0,7,c
 17980  013D5A  D005               	goto	u10780
 17981  013D5C  501E               	movf	(_prec+1)^0,w,c
 17982  013D5E  E110               	bnz	l10368
 17983  013D60  041D               	decf	_prec^0,w,c
 17984  013D62  B0D8               	btfsc	status,0,c
 17985  013D64  D00D               	goto	l10368
 17986  013D66                     u10780:
 17987  013D66  0E01               	movlw	1
 17988  013D68  6E3C               	movwf	(btemp+10)^0,c
 17989  013D6A  0E00               	movlw	0
 17990  013D6C  6E3D               	movwf	(btemp+11)^0,c
 17991                           
 17992                           ;stkvar	_p @ sp[(-18)+16]
 17993  013D6E  0EFE               	movlw	-2
 17994  013D70  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 17995  013D76  0EFF               	movlw	-1
 17996  013D78  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 17997  013D7E  D008               	goto	l1835
 17998  013D80                     l10368:
 17999                           
 18000                           ;stkvar	_p @ sp[(-18)+16]
 18001  013D80  0EFE               	movlw	-2
 18002  013D82  0060  F077  FFE3   	movff	_prec,plusw1
 18003  013D88  0EFF               	movlw	-1
 18004  013D8A  0060  F07B  FFE3   	movff	_prec+1,plusw1
 18005  013D90                     l1835:
 18006                           
 18007                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 18008                           ;stkvar	_w @ sp[(-18)+14]
 18009  013D90  0EFC               	movlw	-4
 18010  013D92  0060  F06F  FFE3   	movff	_width,plusw1
 18011  013D98  0EFD               	movlw	-3
 18012  013D9A  0060  F073  FFE3   	movff	_width+1,plusw1
 18013                           
 18014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 18015                           ;stkvar	_s @ sp[(-18)+12]
 18016  013DA0  0EFA               	movlw	-6
 18017  013DA2  006F FF8C  F032    	movff	plusw1,btemp
 18018  013DA8  0EFB               	movlw	-5
 18019  013DAA  50E3               	movf	plusw1,w,c
 18020  013DAC  1032               	iorwf	btemp^0,w,c
 18021  013DAE  A4D8               	btfss	status,2,c
 18022  013DB0  D002               	goto	u10800
 18023  013DB2  A41F               	btfss	_flags^0,2,c
 18024  013DB4  D00A               	goto	l10376
 18025  013DB6                     u10800:
 18026                           
 18027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 18028                           ;stkvar	_w @ sp[(-18)+14]
 18029  013DB6  50E1               	movf	fsr1l,w,c
 18030  013DB8  0FFC               	addlw	-4
 18031  013DBA  6ED9               	movwf	fsr2l,c
 18032  013DBC  50E2               	movf	fsr1h,w,c
 18033  013DBE  6EDA               	movwf	fsr2h,c
 18034  013DC0  0EFF               	movlw	255
 18035  013DC2  22DA               	addwfc	fsr2h,f,c
 18036  013DC4  06DE               	decf	postinc2,f,c
 18037  013DC6  0E00               	movlw	0
 18038  013DC8  5ADD               	subwfb	postdec2,f,c
 18039  013DCA                     l10376:
 18040                           
 18041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 18042  013DCA  0E4F               	movlw	79
 18043  013DCC  6E3C               	movwf	(btemp+10)^0,c
 18044  013DCE  0E00               	movlw	0
 18045  013DD0  6E3D               	movwf	(btemp+11)^0,c
 18046                           
 18047                           ;stkvar	_i @ sp[(-18)+10]
 18048  013DD2  0EF8               	movlw	-8
 18049  013DD4  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18050  013DDA  0EF9               	movlw	-7
 18051  013DDC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18052                           
 18053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 18054  013DE2  0102               	movlb	2	; () banked
 18055  013DE4  6B8F               	clrf	(_dbuf+79)& (0+255),b
 18056                           
 18057                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18058  013DE6  D109               	goto	l10390
 18059  013DE8                     l10380:
 18060                           
 18061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 18062                           ;stkvar	_i @ sp[(-18)+10]
 18063  013DE8  50E1               	movf	fsr1l,w,c
 18064  013DEA  0FF8               	addlw	-8
 18065  013DEC  6ED9               	movwf	fsr2l,c
 18066  013DEE  50E2               	movf	fsr1h,w,c
 18067  013DF0  6EDA               	movwf	fsr2h,c
 18068  013DF2  0EFF               	movlw	255
 18069  013DF4  22DA               	addwfc	fsr2h,f,c
 18070  013DF6  06DE               	decf	postinc2,f,c
 18071  013DF8  0E00               	movlw	0
 18072  013DFA  5ADD               	subwfb	postdec2,f,c
 18073                           
 18074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 18075  013DFC  0E0A               	movlw	10
 18076  013DFE  6EE6               	movwf	postinc1,c
 18077  013E00  0E00               	movlw	0
 18078  013E02  6EE6               	movwf	postinc1,c
 18079  013E04  0E00               	movlw	0
 18080  013E06  6EE6               	movwf	postinc1,c
 18081  013E08  0E00               	movlw	0
 18082  013E0A  6EE6               	movwf	postinc1,c
 18083  013E0C  0E00               	movlw	0
 18084  013E0E  6EE6               	movwf	postinc1,c
 18085  013E10  0E00               	movlw	0
 18086  013E12  6EE6               	movwf	postinc1,c
 18087  013E14  0E00               	movlw	0
 18088  013E16  6EE6               	movwf	postinc1,c
 18089  013E18  0E00               	movlw	0
 18090  013E1A  6EE6               	movwf	postinc1,c
 18091                           
 18092                           ;stkvar	_n @ sp[(-26)+2]
 18093  013E1C  50E1               	movf	fsr1l,w,c
 18094  013E1E  0FE8               	addlw	-24
 18095  013E20  6ED9               	movwf	fsr2l,c
 18096  013E22  50E2               	movf	fsr1h,w,c
 18097  013E24  6EDA               	movwf	fsr2h,c
 18098  013E26  0EFF               	movlw	255
 18099  013E28  22DA               	addwfc	fsr2h,f,c
 18100  013E2A  006F FF7B FFE6     	movff	postinc2,postinc1
 18101  013E30  006F FF7B FFE6     	movff	postinc2,postinc1
 18102  013E36  006F FF7B FFE6     	movff	postinc2,postinc1
 18103  013E3C  006F FF7B FFE6     	movff	postinc2,postinc1
 18104  013E42  006F FF7B FFE6     	movff	postinc2,postinc1
 18105  013E48  006F FF7B FFE6     	movff	postinc2,postinc1
 18106  013E4E  006F FF7B FFE6     	movff	postinc2,postinc1
 18107  013E54  006F FF7B FFE6     	movff	postinc2,postinc1
 18108  013E5A  EC7B  F0A9         	call	___aomod	;wreg free
 18109  013E5E  52E5               	movf	postdec1,f,c
 18110  013E60  006F FF9C  F049    	movff	indf1,btemp+23
 18111  013E66  52E5               	movf	postdec1,f,c
 18112  013E68  006F FF9C  F048    	movff	indf1,btemp+22
 18113  013E6E  52E5               	movf	postdec1,f,c
 18114  013E70  006F FF9C  F047    	movff	indf1,btemp+21
 18115  013E76  52E5               	movf	postdec1,f,c
 18116  013E78  006F FF9C  F046    	movff	indf1,btemp+20
 18117  013E7E  52E5               	movf	postdec1,f,c
 18118  013E80  006F FF9C  F045    	movff	indf1,btemp+19
 18119  013E86  52E5               	movf	postdec1,f,c
 18120  013E88  006F FF9C  F044    	movff	indf1,btemp+18
 18121  013E8E  52E5               	movf	postdec1,f,c
 18122  013E90  006F FF9C  F043    	movff	indf1,btemp+17
 18123  013E96  52E5               	movf	postdec1,f,c
 18124  013E98  006F FF9C  F042    	movff	indf1,btemp+16
 18125  013E9E  0EF8               	movlw	248
 18126  013EA0  26E1               	addwf	fsr1l,f,c
 18127  013EA2  0EFF               	movlw	255
 18128  013EA4  22E2               	addwfc	fsr1h,f,c
 18129  013EA6  0060  F108  F03C   	movff	btemp+16,btemp+10
 18130  013EAC  0060  F10C  F03D   	movff	btemp+17,btemp+11
 18131  013EB2  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 18132  013EB8  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 18133  013EBE  ECAE  F0BD         	call	_abs	;wreg free
 18134  013EC2  0E30               	movlw	48
 18135  013EC4  2632               	addwf	btemp^0,f,c
 18136                           
 18137                           ;stkvar	_i @ sp[(-18)+10]
 18138  013EC6  0EF8               	movlw	-8
 18139  013EC8  006F FF8C  F03C    	movff	plusw1,btemp+10
 18140  013ECE  0EF9               	movlw	-7
 18141  013ED0  006F FF8C  F03D    	movff	plusw1,btemp+11
 18142  013ED6  0E40               	movlw	low _dbuf
 18143  013ED8  243C               	addwf	(btemp+10)^0,w,c
 18144  013EDA  6ED9               	movwf	fsr2l,c
 18145  013EDC  0E02               	movlw	high _dbuf
 18146  013EDE  203D               	addwfc	(btemp+11)^0,w,c
 18147  013EE0  6EDA               	movwf	fsr2h,c
 18148  013EE2  0060  F0CB  FFDF   	movff	btemp,indf2
 18149                           
 18150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 18151                           ;stkvar	_p @ sp[(-18)+16]
 18152  013EE8  50E1               	movf	fsr1l,w,c
 18153  013EEA  0FFE               	addlw	-2
 18154  013EEC  6ED9               	movwf	fsr2l,c
 18155  013EEE  50E2               	movf	fsr1h,w,c
 18156  013EF0  6EDA               	movwf	fsr2h,c
 18157  013EF2  0EFF               	movlw	255
 18158  013EF4  22DA               	addwfc	fsr2h,f,c
 18159  013EF6  06DE               	decf	postinc2,f,c
 18160  013EF8  0E00               	movlw	0
 18161  013EFA  5ADD               	subwfb	postdec2,f,c
 18162                           
 18163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 18164                           ;stkvar	_w @ sp[(-18)+14]
 18165  013EFC  50E1               	movf	fsr1l,w,c
 18166  013EFE  0FFC               	addlw	-4
 18167  013F00  6ED9               	movwf	fsr2l,c
 18168  013F02  50E2               	movf	fsr1h,w,c
 18169  013F04  6EDA               	movwf	fsr2h,c
 18170  013F06  0EFF               	movlw	255
 18171  013F08  22DA               	addwfc	fsr2h,f,c
 18172  013F0A  06DE               	decf	postinc2,f,c
 18173  013F0C  0E00               	movlw	0
 18174  013F0E  5ADD               	subwfb	postdec2,f,c
 18175                           
 18176                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 18177  013F10  0E0A               	movlw	10
 18178  013F12  6EE6               	movwf	postinc1,c
 18179  013F14  0E00               	movlw	0
 18180  013F16  6EE6               	movwf	postinc1,c
 18181  013F18  0E00               	movlw	0
 18182  013F1A  6EE6               	movwf	postinc1,c
 18183  013F1C  0E00               	movlw	0
 18184  013F1E  6EE6               	movwf	postinc1,c
 18185  013F20  0E00               	movlw	0
 18186  013F22  6EE6               	movwf	postinc1,c
 18187  013F24  0E00               	movlw	0
 18188  013F26  6EE6               	movwf	postinc1,c
 18189  013F28  0E00               	movlw	0
 18190  013F2A  6EE6               	movwf	postinc1,c
 18191  013F2C  0E00               	movlw	0
 18192  013F2E  6EE6               	movwf	postinc1,c
 18193                           
 18194                           ;stkvar	_n @ sp[(-26)+2]
 18195  013F30  50E1               	movf	fsr1l,w,c
 18196  013F32  0FE8               	addlw	-24
 18197  013F34  6ED9               	movwf	fsr2l,c
 18198  013F36  50E2               	movf	fsr1h,w,c
 18199  013F38  6EDA               	movwf	fsr2h,c
 18200  013F3A  0EFF               	movlw	255
 18201  013F3C  22DA               	addwfc	fsr2h,f,c
 18202  013F3E  006F FF7B FFE6     	movff	postinc2,postinc1
 18203  013F44  006F FF7B FFE6     	movff	postinc2,postinc1
 18204  013F4A  006F FF7B FFE6     	movff	postinc2,postinc1
 18205  013F50  006F FF7B FFE6     	movff	postinc2,postinc1
 18206  013F56  006F FF7B FFE6     	movff	postinc2,postinc1
 18207  013F5C  006F FF7B FFE6     	movff	postinc2,postinc1
 18208  013F62  006F FF7B FFE6     	movff	postinc2,postinc1
 18209  013F68  006F FF7B FFE6     	movff	postinc2,postinc1
 18210  013F6E  EC01  F0A7         	call	___aodiv	;wreg free
 18211  013F72  52E5               	movf	postdec1,f,c
 18212  013F74  006F FF9C  F049    	movff	indf1,btemp+23
 18213  013F7A  52E5               	movf	postdec1,f,c
 18214  013F7C  006F FF9C  F048    	movff	indf1,btemp+22
 18215  013F82  52E5               	movf	postdec1,f,c
 18216  013F84  006F FF9C  F047    	movff	indf1,btemp+21
 18217  013F8A  52E5               	movf	postdec1,f,c
 18218  013F8C  006F FF9C  F046    	movff	indf1,btemp+20
 18219  013F92  52E5               	movf	postdec1,f,c
 18220  013F94  006F FF9C  F045    	movff	indf1,btemp+19
 18221  013F9A  52E5               	movf	postdec1,f,c
 18222  013F9C  006F FF9C  F044    	movff	indf1,btemp+18
 18223  013FA2  52E5               	movf	postdec1,f,c
 18224  013FA4  006F FF9C  F043    	movff	indf1,btemp+17
 18225  013FAA  52E5               	movf	postdec1,f,c
 18226  013FAC  006F FF9C  F042    	movff	indf1,btemp+16
 18227  013FB2  0EF8               	movlw	248
 18228  013FB4  26E1               	addwf	fsr1l,f,c
 18229  013FB6  0EFF               	movlw	255
 18230  013FB8  22E2               	addwfc	fsr1h,f,c
 18231                           
 18232                           ;stkvar	_n @ sp[(-18)+2]
 18233  013FBA  0EF0               	movlw	-16
 18234  013FBC  0060  F10B  FFE3   	movff	btemp+16,plusw1
 18235  013FC2  0EF1               	movlw	-15
 18236  013FC4  0060  F10F  FFE3   	movff	btemp+17,plusw1
 18237  013FCA  0EF2               	movlw	-14
 18238  013FCC  0060  F113  FFE3   	movff	btemp+18,plusw1
 18239  013FD2  0EF3               	movlw	-13
 18240  013FD4  0060  F117  FFE3   	movff	btemp+19,plusw1
 18241  013FDA  0EF4               	movlw	-12
 18242  013FDC  0060  F11B  FFE3   	movff	btemp+20,plusw1
 18243  013FE2  0EF5               	movlw	-11
 18244  013FE4  0060  F11F  FFE3   	movff	btemp+21,plusw1
 18245  013FEA  0EF6               	movlw	-10
 18246  013FEC  0060  F123  FFE3   	movff	btemp+22,plusw1
 18247  013FF2  0EF7               	movlw	-9
 18248  013FF4  0060  F127  FFE3   	movff	btemp+23,plusw1
 18249  013FFA                     l10390:
 18250                           
 18251                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18252                           ;stkvar	_i @ sp[(-18)+10]
 18253  013FFA  0EF9               	movlw	-7
 18254  013FFC  BEE3               	btfsc	plusw1,7,c
 18255  013FFE  D036               	goto	u10850
 18256  014000  0EF9               	movlw	-7
 18257  014002  50E3               	movf	plusw1,w,c
 18258  014004  E104               	bnz	u10810
 18259  014006  0EF8               	movlw	-8
 18260  014008  04E3               	decf	plusw1,w,c
 18261  01400A  A0D8               	btfss	status,0,c
 18262  01400C  D02F               	goto	u10850
 18263  01400E                     u10810:
 18264                           
 18265                           ;stkvar	_n @ sp[(-18)+2]
 18266  01400E  0EF0               	movlw	-16
 18267  014010  50E3               	movf	plusw1,w,c
 18268  014012  E115               	bnz	u10821
 18269  014014  0EF1               	movlw	-15
 18270  014016  50E3               	movf	plusw1,w,c
 18271  014018  E112               	bnz	u10821
 18272  01401A  0EF2               	movlw	-14
 18273  01401C  50E3               	movf	plusw1,w,c
 18274  01401E  E10F               	bnz	u10821
 18275  014020  0EF3               	movlw	-13
 18276  014022  50E3               	movf	plusw1,w,c
 18277  014024  E10C               	bnz	u10821
 18278  014026  0EF4               	movlw	-12
 18279  014028  50E3               	movf	plusw1,w,c
 18280  01402A  E109               	bnz	u10821
 18281  01402C  0EF5               	movlw	-11
 18282  01402E  50E3               	movf	plusw1,w,c
 18283  014030  E106               	bnz	u10821
 18284  014032  0EF6               	movlw	-10
 18285  014034  50E3               	movf	plusw1,w,c
 18286  014036  E103               	bnz	u10821
 18287  014038  0EF7               	movlw	-9
 18288  01403A  50E3               	movf	plusw1,w,c
 18289  01403C  A4D8               	btfss	status,2,c
 18290  01403E                     u10821:
 18291  01403E  D6D4               	goto	l10380
 18292                           
 18293                           ;stkvar	_p @ sp[(-18)+16]
 18294  014040  0EFF               	movlw	-1
 18295  014042  BEE3               	btfsc	plusw1,7,c
 18296  014044  D007               	goto	u10830
 18297  014046  0EFF               	movlw	-1
 18298  014048  50E3               	movf	plusw1,w,c
 18299  01404A  E103               	bnz	u10831
 18300  01404C  0EFE               	movlw	-2
 18301  01404E  04E3               	decf	plusw1,w,c
 18302  014050  B0D8               	btfsc	status,0,c
 18303  014052                     u10831:
 18304  014052  D6CA               	goto	l10380
 18305  014054                     u10830:
 18306                           
 18307                           ;stkvar	_w @ sp[(-18)+14]
 18308  014054  0EFD               	movlw	-3
 18309  014056  BEE3               	btfsc	plusw1,7,c
 18310  014058  D009               	goto	u10850
 18311  01405A  0EFD               	movlw	-3
 18312  01405C  50E3               	movf	plusw1,w,c
 18313  01405E  E104               	bnz	u10840
 18314  014060  0EFC               	movlw	-4
 18315  014062  04E3               	decf	plusw1,w,c
 18316  014064  A0D8               	btfss	status,0,c
 18317  014066  D002               	goto	u10850
 18318  014068                     u10840:
 18319  014068  B21F               	btfsc	_flags^0,1,c
 18320  01406A  D6BE               	goto	l10380
 18321  01406C                     u10850:
 18322                           
 18323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 18324                           ;stkvar	_s @ sp[(-18)+12]
 18325  01406C  0EFA               	movlw	-6
 18326  01406E  006F FF8C  F032    	movff	plusw1,btemp
 18327  014074  0EFB               	movlw	-5
 18328  014076  50E3               	movf	plusw1,w,c
 18329  014078  1032               	iorwf	btemp^0,w,c
 18330  01407A  A4D8               	btfss	status,2,c
 18331  01407C  D002               	goto	u10870
 18332  01407E  A41F               	btfss	_flags^0,2,c
 18333  014080  D033               	goto	l10414
 18334  014082                     u10870:
 18335                           
 18336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 18337                           ;stkvar	_i @ sp[(-18)+10]
 18338  014082  50E1               	movf	fsr1l,w,c
 18339  014084  0FF8               	addlw	-8
 18340  014086  6ED9               	movwf	fsr2l,c
 18341  014088  50E2               	movf	fsr1h,w,c
 18342  01408A  6EDA               	movwf	fsr2h,c
 18343  01408C  0EFF               	movlw	255
 18344  01408E  22DA               	addwfc	fsr2h,f,c
 18345  014090  06DE               	decf	postinc2,f,c
 18346  014092  0E00               	movlw	0
 18347  014094  5ADD               	subwfb	postdec2,f,c
 18348                           
 18349                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 18350                           ;stkvar	_s @ sp[(-18)+12]
 18351  014096  0EFA               	movlw	-6
 18352  014098  006F FF8C  F032    	movff	plusw1,btemp
 18353  01409E  0EFB               	movlw	-5
 18354  0140A0  50E3               	movf	plusw1,w,c
 18355  0140A2  1032               	iorwf	btemp^0,w,c
 18356  0140A4  A4D8               	btfss	status,2,c
 18357  0140A6  D002               	goto	l10410
 18358  0140A8  0E2B               	movlw	43
 18359  0140AA  D001               	goto	L16
 18360  0140AC                     l10410:
 18361  0140AC  0E2D               	movlw	45
 18362  0140AE                     L16:
 18363  0140AE  6E3C               	movwf	(btemp+10)^0,c
 18364  0140B0  0E00               	movlw	0
 18365  0140B2  6E3D               	movwf	(btemp+11)^0,c
 18366                           
 18367                           ;stkvar	_dtoa$4356 @ sp[(-18)+0]
 18368  0140B4  0EEE               	movlw	-18
 18369  0140B6  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 18370  0140BC  0EEF               	movlw	-17
 18371  0140BE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 18372                           
 18373                           ;stkvar	_dtoa$4356 @ sp[(-18)+0]
 18374                           ;stkvar	_i @ sp[(-18)+10]
 18375  0140C4  0EF8               	movlw	-8
 18376  0140C6  006F FF8C  F03C    	movff	plusw1,btemp+10
 18377  0140CC  0EF9               	movlw	-7
 18378  0140CE  006F FF8C  F03D    	movff	plusw1,btemp+11
 18379  0140D4  0E40               	movlw	low _dbuf
 18380  0140D6  243C               	addwf	(btemp+10)^0,w,c
 18381  0140D8  6ED9               	movwf	fsr2l,c
 18382  0140DA  0E02               	movlw	high _dbuf
 18383  0140DC  203D               	addwfc	(btemp+11)^0,w,c
 18384  0140DE  6EDA               	movwf	fsr2h,c
 18385  0140E0  0EEE               	movlw	-18
 18386  0140E2  006F FF8F FFDF     	movff	plusw1,indf2
 18387  0140E8                     l10414:
 18388                           
 18389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 18390                           ;stkvar	_w @ sp[(-18)+14]
 18391  0140E8  0EFC               	movlw	-4
 18392  0140EA  006F FF8F FFE6     	movff	plusw1,postinc1
 18393  0140F0  006F FF8F FFE6     	movff	plusw1,postinc1
 18394                           
 18395                           ;stkvar	_i @ sp[(-20)+10]
 18396  0140F6  0E40               	movlw	low _dbuf
 18397  0140F8  6E3C               	movwf	(btemp+10)^0,c
 18398  0140FA  0E02               	movlw	high _dbuf
 18399  0140FC  6E3D               	movwf	(btemp+11)^0,c
 18400  0140FE  0EF6               	movlw	-10
 18401  014100  50E3               	movf	plusw1,w,c
 18402  014102  263C               	addwf	(btemp+10)^0,f,c
 18403  014104  0EF7               	movlw	-9
 18404  014106  50E3               	movf	plusw1,w,c
 18405  014108  223D               	addwfc	(btemp+11)^0,f,c
 18406  01410A  0060  F0F3  FFE6   	movff	btemp+10,postinc1
 18407  014110  0060  F0F7  FFE6   	movff	btemp+11,postinc1
 18408                           
 18409                           ;stkvar	_fp @ sp[(-22)+-2]
 18410  014116  0EE8               	movlw	-24
 18411  014118  006F FF8F FFE6     	movff	plusw1,postinc1
 18412  01411E  006F FF8F FFE6     	movff	plusw1,postinc1
 18413  014124  ECAA  F0B3         	call	_pad	;wreg free
 18414                           
 18415                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 18416  014128  0EE4               	movlw	228
 18417  01412A  26E1               	addwf	fsr1l,f,c
 18418  01412C  0EFF               	movlw	255
 18419  01412E  22E2               	addwfc	fsr1h,f,c
 18420  014130  0012               	return		;funcret
 18421  014132                     __end_of_dtoa:
 18422                           	opt callstack 0
 18423                           
 18424 ;; *************** function _abs *****************
 18425 ;; Defined at:
 18426 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 18427 ;; Parameters:    Size  Location     Type
 18428 ;;  a               2  [STACK] int 
 18429 ;; Auto vars:     Size  Location     Type
 18430 ;;		None
 18431 ;; Return value:  Size  Location     Type
 18432 ;;                  2  [STACK] int 
 18433 ;; Registers used:
 18434 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 18435 ;; Tracked objects:
 18436 ;;		On entry : 0/2
 18437 ;;		On exit  : 0/0
 18438 ;;		Unchanged: 0/0
 18439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18444 ;;Total ram usage:        0 bytes
 18445 ;; Hardware stack levels used:    1
 18446 ;; Hardware stack levels required when called:    6
 18447 ;; This function calls:
 18448 ;;		Nothing
 18449 ;; This function is called by:
 18450 ;;		_dtoa
 18451 ;; This function uses a reentrant model
 18452 ;;
 18453                           
 18454                           	psect	text61
 18455  017B5C                     __ptext61:
 18456                           	opt callstack 0
 18457  017B5C                     _abs:
 18458                           	opt callstack 17
 18459                           
 18460                           ;stkvar	_a @ sp[(0)+-2]
 18461                           
 18462                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18463                           ;incstack = 0
 18464  017B5C  0EFF               	movlw	-1
 18465  017B5E  BEE3               	btfsc	plusw1,7,c
 18466  017B60  D007               	goto	u9370
 18467  017B62  0EFF               	movlw	-1
 18468  017B64  50E3               	movf	plusw1,w,c
 18469  017B66  E112               	bnz	l9646
 18470  017B68  0EFE               	movlw	-2
 18471  017B6A  04E3               	decf	plusw1,w,c
 18472  017B6C  B0D8               	btfsc	status,0,c
 18473  017B6E  D00E               	goto	l9646
 18474  017B70                     u9370:
 18475                           
 18476                           ;stkvar	_a @ sp[(0)+-2]
 18477  017B70  0EFE               	movlw	-2
 18478  017B72  006F FF8C  F032    	movff	plusw1,btemp
 18479  017B78  1E32               	comf	btemp^0,f,c
 18480  017B7A  0EFF               	movlw	-1
 18481  017B7C  006F FF8C  F033    	movff	plusw1,btemp+1
 18482  017B82  1E33               	comf	(btemp+1)^0,f,c
 18483  017B84  2A32               	incf	btemp^0,f,c
 18484  017B86  B4D8               	btfsc	status,2,c
 18485  017B88  2A33               	incf	(btemp+1)^0,f,c
 18486  017B8A  D008               	goto	l2738
 18487  017B8C                     l9646:
 18488                           
 18489                           ;stkvar	_a @ sp[(0)+-2]
 18490  017B8C  0EFE               	movlw	-2
 18491  017B8E  006F FF8C  F032    	movff	plusw1,btemp
 18492  017B94  0EFF               	movlw	-1
 18493  017B96  006F FF8C  F033    	movff	plusw1,btemp+1
 18494  017B9C                     l2738:
 18495                           
 18496                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 18497  017B9C  52E5               	movf	postdec1,f,c
 18498  017B9E  52E5               	movf	postdec1,f,c
 18499  017BA0  0012               	return		;funcret
 18500  017BA2                     __end_of_abs:
 18501                           	opt callstack 0
 18502                           
 18503 ;; *************** function ___aomod *****************
 18504 ;; Defined at:
 18505 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 18506 ;; Parameters:    Size  Location     Type
 18507 ;;  dividend        8  [STACK] long long 
 18508 ;;  divisor         8  [STACK] long long 
 18509 ;; Auto vars:     Size  Location     Type
 18510 ;;  sign            1  [STACK] unsigned char 
 18511 ;;  counter         1  [STACK] unsigned char 
 18512 ;; Return value:  Size  Location     Type
 18513 ;;                  8  [STACK] long long 
 18514 ;; Registers used:
 18515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18516 ;; Tracked objects:
 18517 ;;		On entry : 0/2
 18518 ;;		On exit  : 0/0
 18519 ;;		Unchanged: 0/0
 18520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18525 ;;Total ram usage:        0 bytes
 18526 ;; Hardware stack levels used:    1
 18527 ;; Hardware stack levels required when called:    6
 18528 ;; This function calls:
 18529 ;;		Nothing
 18530 ;; This function is called by:
 18531 ;;		_dtoa
 18532 ;; This function uses a reentrant model
 18533 ;;
 18534                           
 18535                           	psect	text62
 18536  0152F6                     __ptext62:
 18537                           	opt callstack 0
 18538  0152F6                     ___aomod:
 18539                           	opt callstack 0
 18540                           
 18541                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 18542  0152F6  52E6               	movf	postinc1,f,c
 18543  0152F8  52E6               	movf	postinc1,f,c
 18544                           
 18545                           ;stkvar	_sign @ sp[(-2)+0]
 18546                           
 18547                           ;incstack = 0
 18548  0152FA  0EFE               	movlw	-2
 18549  0152FC  6AE3               	clrf	plusw1,c
 18550                           
 18551                           ;stkvar	_dividend @ sp[(-2)+-8]
 18552  0152FE  0EFD               	movlw	-3
 18553  015300  AEE3               	btfss	plusw1,7,c
 18554  015302  D028               	goto	l9804
 18555                           
 18556                           ;stkvar	_dividend @ sp[(-2)+-8]
 18557                           ;stkvar	_dividend @ sp[(-2)+-8]
 18558  015304  0EF6               	movlw	-10
 18559  015306  6CE3               	negf	plusw1,c
 18560  015308  0EF7               	movlw	-9
 18561  01530A  1EE3               	comf	plusw1,f,c
 18562  01530C  0EF8               	movlw	-8
 18563  01530E  1EE3               	comf	plusw1,f,c
 18564  015310  0EF9               	movlw	-7
 18565  015312  1EE3               	comf	plusw1,f,c
 18566  015314  0EFA               	movlw	-6
 18567  015316  1EE3               	comf	plusw1,f,c
 18568  015318  0EFB               	movlw	-5
 18569  01531A  1EE3               	comf	plusw1,f,c
 18570  01531C  0EFC               	movlw	-4
 18571  01531E  1EE3               	comf	plusw1,f,c
 18572  015320  0EFD               	movlw	-3
 18573  015322  1EE3               	comf	plusw1,f,c
 18574  015324  E314               	bnc	u9800
 18575  015326  0EF7               	movlw	-9
 18576  015328  2AE3               	incf	plusw1,f,c
 18577  01532A  E311               	bnc	u9800
 18578  01532C  0EF8               	movlw	-8
 18579  01532E  2AE3               	incf	plusw1,f,c
 18580  015330  E30E               	bnc	u9800
 18581  015332  0EF9               	movlw	-7
 18582  015334  2AE3               	incf	plusw1,f,c
 18583  015336  E30B               	bnc	u9800
 18584  015338  0EFA               	movlw	-6
 18585  01533A  2AE3               	incf	plusw1,f,c
 18586  01533C  E308               	bnc	u9800
 18587  01533E  0EFB               	movlw	-5
 18588  015340  2AE3               	incf	plusw1,f,c
 18589  015342  E305               	bnc	u9800
 18590  015344  0EFC               	movlw	-4
 18591  015346  2AE3               	incf	plusw1,f,c
 18592  015348  E302               	bnc	u9800
 18593  01534A  0EFD               	movlw	-3
 18594  01534C  2AE3               	incf	plusw1,f,c
 18595  01534E                     u9800:
 18596                           
 18597                           ;stkvar	_sign @ sp[(-2)+0]
 18598  01534E  0EFE               	movlw	-2
 18599  015350  6AE3               	clrf	plusw1,c
 18600  015352  2AE3               	incf	plusw1,f,c
 18601  015354                     l9804:
 18602                           
 18603                           ;stkvar	_divisor @ sp[(-2)+-16]
 18604  015354  0EF5               	movlw	-11
 18605  015356  AEE3               	btfss	plusw1,7,c
 18606  015358  D025               	goto	u9820
 18607                           
 18608                           ;stkvar	_divisor @ sp[(-2)+-16]
 18609                           ;stkvar	_divisor @ sp[(-2)+-16]
 18610  01535A  0EEE               	movlw	-18
 18611  01535C  6CE3               	negf	plusw1,c
 18612  01535E  0EEF               	movlw	-17
 18613  015360  1EE3               	comf	plusw1,f,c
 18614  015362  0EF0               	movlw	-16
 18615  015364  1EE3               	comf	plusw1,f,c
 18616  015366  0EF1               	movlw	-15
 18617  015368  1EE3               	comf	plusw1,f,c
 18618  01536A  0EF2               	movlw	-14
 18619  01536C  1EE3               	comf	plusw1,f,c
 18620  01536E  0EF3               	movlw	-13
 18621  015370  1EE3               	comf	plusw1,f,c
 18622  015372  0EF4               	movlw	-12
 18623  015374  1EE3               	comf	plusw1,f,c
 18624  015376  0EF5               	movlw	-11
 18625  015378  1EE3               	comf	plusw1,f,c
 18626  01537A  E314               	bnc	u9820
 18627  01537C  0EEF               	movlw	-17
 18628  01537E  2AE3               	incf	plusw1,f,c
 18629  015380  E311               	bnc	u9820
 18630  015382  0EF0               	movlw	-16
 18631  015384  2AE3               	incf	plusw1,f,c
 18632  015386  E30E               	bnc	u9820
 18633  015388  0EF1               	movlw	-15
 18634  01538A  2AE3               	incf	plusw1,f,c
 18635  01538C  E30B               	bnc	u9820
 18636  01538E  0EF2               	movlw	-14
 18637  015390  2AE3               	incf	plusw1,f,c
 18638  015392  E308               	bnc	u9820
 18639  015394  0EF3               	movlw	-13
 18640  015396  2AE3               	incf	plusw1,f,c
 18641  015398  E305               	bnc	u9820
 18642  01539A  0EF4               	movlw	-12
 18643  01539C  2AE3               	incf	plusw1,f,c
 18644  01539E  E302               	bnc	u9820
 18645  0153A0  0EF5               	movlw	-11
 18646  0153A2  2AE3               	incf	plusw1,f,c
 18647  0153A4                     u9820:
 18648                           
 18649                           ;stkvar	_divisor @ sp[(-2)+-16]
 18650  0153A4  0EEE               	movlw	-18
 18651  0153A6  50E3               	movf	plusw1,w,c
 18652  0153A8  E116               	bnz	u9830
 18653  0153AA  0EEF               	movlw	-17
 18654  0153AC  50E3               	movf	plusw1,w,c
 18655  0153AE  E113               	bnz	u9830
 18656  0153B0  0EF0               	movlw	-16
 18657  0153B2  50E3               	movf	plusw1,w,c
 18658  0153B4  E110               	bnz	u9830
 18659  0153B6  0EF1               	movlw	-15
 18660  0153B8  50E3               	movf	plusw1,w,c
 18661  0153BA  E10D               	bnz	u9830
 18662  0153BC  0EF2               	movlw	-14
 18663  0153BE  50E3               	movf	plusw1,w,c
 18664  0153C0  E10A               	bnz	u9830
 18665  0153C2  0EF3               	movlw	-13
 18666  0153C4  50E3               	movf	plusw1,w,c
 18667  0153C6  E107               	bnz	u9830
 18668  0153C8  0EF4               	movlw	-12
 18669  0153CA  50E3               	movf	plusw1,w,c
 18670  0153CC  E104               	bnz	u9830
 18671  0153CE  0EF5               	movlw	-11
 18672  0153D0  50E3               	movf	plusw1,w,c
 18673  0153D2  B4D8               	btfsc	status,2,c
 18674  0153D4  D075               	goto	u9860
 18675  0153D6                     u9830:
 18676                           
 18677                           ;stkvar	_counter @ sp[(-2)+1]
 18678  0153D6  0EFF               	movlw	-1
 18679  0153D8  6AE3               	clrf	plusw1,c
 18680  0153DA  D012               	goto	L17
 18681  0153DC                     l9812:
 18682                           
 18683                           ;stkvar	_divisor @ sp[(-2)+-16]
 18684  0153DC  90D8               	bcf	status,0,c
 18685  0153DE  0EEE               	movlw	-18
 18686  0153E0  36E3               	rlcf	plusw1,f,c
 18687  0153E2  0EEF               	movlw	-17
 18688  0153E4  36E3               	rlcf	plusw1,f,c
 18689  0153E6  0EF0               	movlw	-16
 18690  0153E8  36E3               	rlcf	plusw1,f,c
 18691  0153EA  0EF1               	movlw	-15
 18692  0153EC  36E3               	rlcf	plusw1,f,c
 18693  0153EE  0EF2               	movlw	-14
 18694  0153F0  36E3               	rlcf	plusw1,f,c
 18695  0153F2  0EF3               	movlw	-13
 18696  0153F4  36E3               	rlcf	plusw1,f,c
 18697  0153F6  0EF4               	movlw	-12
 18698  0153F8  36E3               	rlcf	plusw1,f,c
 18699  0153FA  0EF5               	movlw	-11
 18700  0153FC  36E3               	rlcf	plusw1,f,c
 18701                           
 18702                           ;stkvar	_counter @ sp[(-2)+1]
 18703  0153FE  0EFF               	movlw	-1
 18704  015400                     L17:
 18705  015400  2AE3               	incf	plusw1,f,c
 18706                           
 18707                           ;stkvar	_divisor @ sp[(-2)+-16]
 18708  015402  0EF5               	movlw	-11
 18709  015404  AEE3               	btfss	plusw1,7,c
 18710  015406  D7EA               	goto	l9812
 18711  015408                     u9840:
 18712                           
 18713                           ;stkvar	_divisor @ sp[(-2)+-16]
 18714                           ;stkvar	_dividend @ sp[(-2)+-8]
 18715  015408  50E1               	movf	fsr1l,w,c
 18716  01540A  0FF6               	addlw	-10
 18717  01540C  6ED9               	movwf	fsr2l,c
 18718  01540E  50E2               	movf	fsr1h,w,c
 18719  015410  6EDA               	movwf	fsr2h,c
 18720  015412  0EFF               	movlw	255
 18721  015414  22DA               	addwfc	fsr2h,f,c
 18722  015416  0EEE               	movlw	-18
 18723  015418  50E3               	movf	plusw1,w,c
 18724  01541A  5CDE               	subwf	postinc2,w,c
 18725  01541C  0EEF               	movlw	-17
 18726  01541E  50E3               	movf	plusw1,w,c
 18727  015420  58DE               	subwfb	postinc2,w,c
 18728  015422  0EF0               	movlw	-16
 18729  015424  50E3               	movf	plusw1,w,c
 18730  015426  58DE               	subwfb	postinc2,w,c
 18731  015428  0EF1               	movlw	-15
 18732  01542A  50E3               	movf	plusw1,w,c
 18733  01542C  58DE               	subwfb	postinc2,w,c
 18734  01542E  0EF2               	movlw	-14
 18735  015430  50E3               	movf	plusw1,w,c
 18736  015432  58DE               	subwfb	postinc2,w,c
 18737  015434  0EF3               	movlw	-13
 18738  015436  50E3               	movf	plusw1,w,c
 18739  015438  58DE               	subwfb	postinc2,w,c
 18740  01543A  0EF4               	movlw	-12
 18741  01543C  50E3               	movf	plusw1,w,c
 18742  01543E  58DE               	subwfb	postinc2,w,c
 18743  015440  0EF5               	movlw	-11
 18744  015442  50E3               	movf	plusw1,w,c
 18745  015444  58DE               	subwfb	postinc2,w,c
 18746  015446  A0D8               	btfss	status,0,c
 18747  015448  D01F               	goto	l9820
 18748                           
 18749                           ;stkvar	_divisor @ sp[(-2)+-16]
 18750                           ;stkvar	_dividend @ sp[(-2)+-8]
 18751  01544A  50E1               	movf	fsr1l,w,c
 18752  01544C  0FF6               	addlw	-10
 18753  01544E  6ED9               	movwf	fsr2l,c
 18754  015450  50E2               	movf	fsr1h,w,c
 18755  015452  6EDA               	movwf	fsr2h,c
 18756  015454  0EFF               	movlw	255
 18757  015456  22DA               	addwfc	fsr2h,f,c
 18758  015458  0EEE               	movlw	-18
 18759  01545A  50E3               	movf	plusw1,w,c
 18760  01545C  5EDE               	subwf	postinc2,f,c
 18761  01545E  0EEF               	movlw	-17
 18762  015460  50E3               	movf	plusw1,w,c
 18763  015462  5ADE               	subwfb	postinc2,f,c
 18764  015464  0EF0               	movlw	-16
 18765  015466  50E3               	movf	plusw1,w,c
 18766  015468  5ADE               	subwfb	postinc2,f,c
 18767  01546A  0EF1               	movlw	-15
 18768  01546C  50E3               	movf	plusw1,w,c
 18769  01546E  5ADE               	subwfb	postinc2,f,c
 18770  015470  0EF2               	movlw	-14
 18771  015472  50E3               	movf	plusw1,w,c
 18772  015474  5ADE               	subwfb	postinc2,f,c
 18773  015476  0EF3               	movlw	-13
 18774  015478  50E3               	movf	plusw1,w,c
 18775  01547A  5ADE               	subwfb	postinc2,f,c
 18776  01547C  0EF4               	movlw	-12
 18777  01547E  50E3               	movf	plusw1,w,c
 18778  015480  5ADE               	subwfb	postinc2,f,c
 18779  015482  0EF5               	movlw	-11
 18780  015484  50E3               	movf	plusw1,w,c
 18781  015486  5ADE               	subwfb	postinc2,f,c
 18782  015488                     l9820:
 18783                           
 18784                           ;stkvar	_divisor @ sp[(-2)+-16]
 18785  015488  90D8               	bcf	status,0,c
 18786  01548A  0EF5               	movlw	-11
 18787  01548C  32E3               	rrcf	plusw1,f,c
 18788  01548E  0EF4               	movlw	-12
 18789  015490  32E3               	rrcf	plusw1,f,c
 18790  015492  0EF3               	movlw	-13
 18791  015494  32E3               	rrcf	plusw1,f,c
 18792  015496  0EF2               	movlw	-14
 18793  015498  32E3               	rrcf	plusw1,f,c
 18794  01549A  0EF1               	movlw	-15
 18795  01549C  32E3               	rrcf	plusw1,f,c
 18796  01549E  0EF0               	movlw	-16
 18797  0154A0  32E3               	rrcf	plusw1,f,c
 18798  0154A2  0EEF               	movlw	-17
 18799  0154A4  32E3               	rrcf	plusw1,f,c
 18800  0154A6  0EEE               	movlw	-18
 18801  0154A8  32E3               	rrcf	plusw1,f,c
 18802                           
 18803                           ;stkvar	_counter @ sp[(-2)+1]
 18804  0154AA  0EFF               	movlw	-1
 18805  0154AC  50E3               	movf	plusw1,w,c
 18806  0154AE  6E32               	movwf	btemp^0,c
 18807  0154B0  0E01               	movlw	1
 18808  0154B2  5E32               	subwf	btemp^0,f,c
 18809  0154B4  0EFF               	movlw	-1
 18810  0154B6  0060  F0CB  FFE3   	movff	btemp,plusw1
 18811  0154BC  A4D8               	btfss	status,2,c
 18812  0154BE  D7A4               	goto	u9840
 18813  0154C0                     u9860:
 18814                           
 18815                           ;stkvar	_sign @ sp[(-2)+0]
 18816  0154C0  0EFE               	movlw	-2
 18817  0154C2  50E3               	movf	plusw1,w,c
 18818  0154C4  B4D8               	btfsc	status,2,c
 18819  0154C6  D025               	goto	u9880
 18820                           
 18821                           ;stkvar	_dividend @ sp[(-2)+-8]
 18822                           ;stkvar	_dividend @ sp[(-2)+-8]
 18823  0154C8  0EF6               	movlw	-10
 18824  0154CA  6CE3               	negf	plusw1,c
 18825  0154CC  0EF7               	movlw	-9
 18826  0154CE  1EE3               	comf	plusw1,f,c
 18827  0154D0  0EF8               	movlw	-8
 18828  0154D2  1EE3               	comf	plusw1,f,c
 18829  0154D4  0EF9               	movlw	-7
 18830  0154D6  1EE3               	comf	plusw1,f,c
 18831  0154D8  0EFA               	movlw	-6
 18832  0154DA  1EE3               	comf	plusw1,f,c
 18833  0154DC  0EFB               	movlw	-5
 18834  0154DE  1EE3               	comf	plusw1,f,c
 18835  0154E0  0EFC               	movlw	-4
 18836  0154E2  1EE3               	comf	plusw1,f,c
 18837  0154E4  0EFD               	movlw	-3
 18838  0154E6  1EE3               	comf	plusw1,f,c
 18839  0154E8  E314               	bnc	u9880
 18840  0154EA  0EF7               	movlw	-9
 18841  0154EC  2AE3               	incf	plusw1,f,c
 18842  0154EE  E311               	bnc	u9880
 18843  0154F0  0EF8               	movlw	-8
 18844  0154F2  2AE3               	incf	plusw1,f,c
 18845  0154F4  E30E               	bnc	u9880
 18846  0154F6  0EF9               	movlw	-7
 18847  0154F8  2AE3               	incf	plusw1,f,c
 18848  0154FA  E30B               	bnc	u9880
 18849  0154FC  0EFA               	movlw	-6
 18850  0154FE  2AE3               	incf	plusw1,f,c
 18851  015500  E308               	bnc	u9880
 18852  015502  0EFB               	movlw	-5
 18853  015504  2AE3               	incf	plusw1,f,c
 18854  015506  E305               	bnc	u9880
 18855  015508  0EFC               	movlw	-4
 18856  01550A  2AE3               	incf	plusw1,f,c
 18857  01550C  E302               	bnc	u9880
 18858  01550E  0EFD               	movlw	-3
 18859  015510  2AE3               	incf	plusw1,f,c
 18860  015512                     u9880:
 18861                           
 18862                           ;stkvar	_dividend @ sp[(-2)+-8]
 18863  015512  0EF6               	movlw	246
 18864  015514  24E1               	addwf	fsr1l,w,c
 18865  015516  6ED9               	movwf	fsr2l,c
 18866  015518  0EFF               	movlw	255
 18867  01551A  20E2               	addwfc	fsr1h,w,c
 18868  01551C  6EDA               	movwf	fsr2h,c
 18869                           
 18870                           ;stkvar	?___aomod @ sp[(-2)+-8]
 18871  01551E  0E08               	movlw	8
 18872  015520  6E32               	movwf	btemp^0,c
 18873  015522  0EF6               	movlw	-10
 18874  015524                     us989999:
 18875  015524  006F FF7B FFE3     	movff	postinc2,plusw1
 18876  01552A  28E8               	incf	wreg,w,c
 18877  01552C  2E32               	decfsz	btemp^0,f,c
 18878  01552E  D7FA               	bra	us989999
 18879                           
 18880                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 18881  015530  52E5               	movf	postdec1,f,c
 18882  015532  52E5               	movf	postdec1,f,c
 18883  015534  0012               	return		;funcret
 18884  015536                     __end_of___aomod:
 18885                           	opt callstack 0
 18886                           
 18887 ;; *************** function ___aodiv *****************
 18888 ;; Defined at:
 18889 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 18890 ;; Parameters:    Size  Location     Type
 18891 ;;  dividend        8  [STACK] long long 
 18892 ;;  divisor         8  [STACK] long long 
 18893 ;; Auto vars:     Size  Location     Type
 18894 ;;  quotient        8  [STACK] long long 
 18895 ;;  sign            1  [STACK] unsigned char 
 18896 ;;  counter         1  [STACK] unsigned char 
 18897 ;; Return value:  Size  Location     Type
 18898 ;;                  8  [STACK] long long 
 18899 ;; Registers used:
 18900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 18901 ;; Tracked objects:
 18902 ;;		On entry : 0/2
 18903 ;;		On exit  : 0/0
 18904 ;;		Unchanged: 0/0
 18905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18910 ;;Total ram usage:        0 bytes
 18911 ;; Hardware stack levels used:    1
 18912 ;; Hardware stack levels required when called:    6
 18913 ;; This function calls:
 18914 ;;		Nothing
 18915 ;; This function is called by:
 18916 ;;		_dtoa
 18917 ;; This function uses a reentrant model
 18918 ;;
 18919                           
 18920                           	psect	text63
 18921  014E02                     __ptext63:
 18922                           	opt callstack 0
 18923  014E02                     ___aodiv:
 18924                           	opt callstack 0
 18925                           
 18926                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 18927  014E02  0E0A               	movlw	10
 18928  014E04  26E1               	addwf	fsr1l,f,c
 18929  014E06  0E00               	movlw	0
 18930  014E08  22E2               	addwfc	fsr1h,f,c
 18931                           
 18932                           ;stkvar	_sign @ sp[(-10)+8]
 18933                           
 18934                           ;incstack = 0
 18935  014E0A  0EFE               	movlw	-2
 18936  014E0C  6AE3               	clrf	plusw1,c
 18937                           
 18938                           ;stkvar	_divisor @ sp[(-10)+-16]
 18939  014E0E  0EED               	movlw	-19
 18940  014E10  AEE3               	btfss	plusw1,7,c
 18941  014E12  D028               	goto	l9760
 18942                           
 18943                           ;stkvar	_divisor @ sp[(-10)+-16]
 18944                           ;stkvar	_divisor @ sp[(-10)+-16]
 18945  014E14  0EE6               	movlw	-26
 18946  014E16  6CE3               	negf	plusw1,c
 18947  014E18  0EE7               	movlw	-25
 18948  014E1A  1EE3               	comf	plusw1,f,c
 18949  014E1C  0EE8               	movlw	-24
 18950  014E1E  1EE3               	comf	plusw1,f,c
 18951  014E20  0EE9               	movlw	-23
 18952  014E22  1EE3               	comf	plusw1,f,c
 18953  014E24  0EEA               	movlw	-22
 18954  014E26  1EE3               	comf	plusw1,f,c
 18955  014E28  0EEB               	movlw	-21
 18956  014E2A  1EE3               	comf	plusw1,f,c
 18957  014E2C  0EEC               	movlw	-20
 18958  014E2E  1EE3               	comf	plusw1,f,c
 18959  014E30  0EED               	movlw	-19
 18960  014E32  1EE3               	comf	plusw1,f,c
 18961  014E34  E314               	bnc	u9680
 18962  014E36  0EE7               	movlw	-25
 18963  014E38  2AE3               	incf	plusw1,f,c
 18964  014E3A  E311               	bnc	u9680
 18965  014E3C  0EE8               	movlw	-24
 18966  014E3E  2AE3               	incf	plusw1,f,c
 18967  014E40  E30E               	bnc	u9680
 18968  014E42  0EE9               	movlw	-23
 18969  014E44  2AE3               	incf	plusw1,f,c
 18970  014E46  E30B               	bnc	u9680
 18971  014E48  0EEA               	movlw	-22
 18972  014E4A  2AE3               	incf	plusw1,f,c
 18973  014E4C  E308               	bnc	u9680
 18974  014E4E  0EEB               	movlw	-21
 18975  014E50  2AE3               	incf	plusw1,f,c
 18976  014E52  E305               	bnc	u9680
 18977  014E54  0EEC               	movlw	-20
 18978  014E56  2AE3               	incf	plusw1,f,c
 18979  014E58  E302               	bnc	u9680
 18980  014E5A  0EED               	movlw	-19
 18981  014E5C  2AE3               	incf	plusw1,f,c
 18982  014E5E                     u9680:
 18983                           
 18984                           ;stkvar	_sign @ sp[(-10)+8]
 18985  014E5E  0EFE               	movlw	-2
 18986  014E60  6AE3               	clrf	plusw1,c
 18987  014E62  2AE3               	incf	plusw1,f,c
 18988  014E64                     l9760:
 18989                           
 18990                           ;stkvar	_dividend @ sp[(-10)+-8]
 18991  014E64  0EF5               	movlw	-11
 18992  014E66  AEE3               	btfss	plusw1,7,c
 18993  014E68  D027               	goto	l9766
 18994                           
 18995                           ;stkvar	_dividend @ sp[(-10)+-8]
 18996                           ;stkvar	_dividend @ sp[(-10)+-8]
 18997  014E6A  0EEE               	movlw	-18
 18998  014E6C  6CE3               	negf	plusw1,c
 18999  014E6E  0EEF               	movlw	-17
 19000  014E70  1EE3               	comf	plusw1,f,c
 19001  014E72  0EF0               	movlw	-16
 19002  014E74  1EE3               	comf	plusw1,f,c
 19003  014E76  0EF1               	movlw	-15
 19004  014E78  1EE3               	comf	plusw1,f,c
 19005  014E7A  0EF2               	movlw	-14
 19006  014E7C  1EE3               	comf	plusw1,f,c
 19007  014E7E  0EF3               	movlw	-13
 19008  014E80  1EE3               	comf	plusw1,f,c
 19009  014E82  0EF4               	movlw	-12
 19010  014E84  1EE3               	comf	plusw1,f,c
 19011  014E86  0EF5               	movlw	-11
 19012  014E88  1EE3               	comf	plusw1,f,c
 19013  014E8A  E314               	bnc	u9700
 19014  014E8C  0EEF               	movlw	-17
 19015  014E8E  2AE3               	incf	plusw1,f,c
 19016  014E90  E311               	bnc	u9700
 19017  014E92  0EF0               	movlw	-16
 19018  014E94  2AE3               	incf	plusw1,f,c
 19019  014E96  E30E               	bnc	u9700
 19020  014E98  0EF1               	movlw	-15
 19021  014E9A  2AE3               	incf	plusw1,f,c
 19022  014E9C  E30B               	bnc	u9700
 19023  014E9E  0EF2               	movlw	-14
 19024  014EA0  2AE3               	incf	plusw1,f,c
 19025  014EA2  E308               	bnc	u9700
 19026  014EA4  0EF3               	movlw	-13
 19027  014EA6  2AE3               	incf	plusw1,f,c
 19028  014EA8  E305               	bnc	u9700
 19029  014EAA  0EF4               	movlw	-12
 19030  014EAC  2AE3               	incf	plusw1,f,c
 19031  014EAE  E302               	bnc	u9700
 19032  014EB0  0EF5               	movlw	-11
 19033  014EB2  2AE3               	incf	plusw1,f,c
 19034  014EB4                     u9700:
 19035                           
 19036                           ;stkvar	_sign @ sp[(-10)+8]
 19037  014EB4  0EFE               	movlw	-2
 19038  014EB6  70E3               	btg	plusw1,0,c
 19039  014EB8                     l9766:
 19040                           
 19041                           ;stkvar	_quotient @ sp[(-10)+0]
 19042  014EB8  0E07               	movlw	7
 19043  014EBA  6E32               	movwf	btemp^0,c
 19044  014EBC  0EF6               	movlw	-10
 19045  014EBE                     u9711:
 19046  014EBE  6AE3               	clrf	plusw1,c
 19047  014EC0  2AE8               	incf	wreg,f,c
 19048  014EC2  0632               	decf	btemp^0,f,c
 19049  014EC4  E2FC               	bc	u9711
 19050                           
 19051                           ;stkvar	_divisor @ sp[(-10)+-16]
 19052  014EC6  0EE6               	movlw	-26
 19053  014EC8  50E3               	movf	plusw1,w,c
 19054  014ECA  E116               	bnz	u9720
 19055  014ECC  0EE7               	movlw	-25
 19056  014ECE  50E3               	movf	plusw1,w,c
 19057  014ED0  E113               	bnz	u9720
 19058  014ED2  0EE8               	movlw	-24
 19059  014ED4  50E3               	movf	plusw1,w,c
 19060  014ED6  E110               	bnz	u9720
 19061  014ED8  0EE9               	movlw	-23
 19062  014EDA  50E3               	movf	plusw1,w,c
 19063  014EDC  E10D               	bnz	u9720
 19064  014EDE  0EEA               	movlw	-22
 19065  014EE0  50E3               	movf	plusw1,w,c
 19066  014EE2  E10A               	bnz	u9720
 19067  014EE4  0EEB               	movlw	-21
 19068  014EE6  50E3               	movf	plusw1,w,c
 19069  014EE8  E107               	bnz	u9720
 19070  014EEA  0EEC               	movlw	-20
 19071  014EEC  50E3               	movf	plusw1,w,c
 19072  014EEE  E104               	bnz	u9720
 19073  014EF0  0EED               	movlw	-19
 19074  014EF2  50E3               	movf	plusw1,w,c
 19075  014EF4  B4D8               	btfsc	status,2,c
 19076  014EF6  D088               	goto	u9750
 19077  014EF8                     u9720:
 19078                           
 19079                           ;stkvar	_counter @ sp[(-10)+9]
 19080  014EF8  0EFF               	movlw	-1
 19081  014EFA  6AE3               	clrf	plusw1,c
 19082  014EFC  D012               	goto	L18
 19083  014EFE                     l9772:
 19084                           
 19085                           ;stkvar	_divisor @ sp[(-10)+-16]
 19086  014EFE  90D8               	bcf	status,0,c
 19087  014F00  0EE6               	movlw	-26
 19088  014F02  36E3               	rlcf	plusw1,f,c
 19089  014F04  0EE7               	movlw	-25
 19090  014F06  36E3               	rlcf	plusw1,f,c
 19091  014F08  0EE8               	movlw	-24
 19092  014F0A  36E3               	rlcf	plusw1,f,c
 19093  014F0C  0EE9               	movlw	-23
 19094  014F0E  36E3               	rlcf	plusw1,f,c
 19095  014F10  0EEA               	movlw	-22
 19096  014F12  36E3               	rlcf	plusw1,f,c
 19097  014F14  0EEB               	movlw	-21
 19098  014F16  36E3               	rlcf	plusw1,f,c
 19099  014F18  0EEC               	movlw	-20
 19100  014F1A  36E3               	rlcf	plusw1,f,c
 19101  014F1C  0EED               	movlw	-19
 19102  014F1E  36E3               	rlcf	plusw1,f,c
 19103                           
 19104                           ;stkvar	_counter @ sp[(-10)+9]
 19105  014F20  0EFF               	movlw	-1
 19106  014F22                     L18:
 19107  014F22  2AE3               	incf	plusw1,f,c
 19108                           
 19109                           ;stkvar	_divisor @ sp[(-10)+-16]
 19110  014F24  0EED               	movlw	-19
 19111  014F26  AEE3               	btfss	plusw1,7,c
 19112  014F28  D7EA               	goto	l9772
 19113  014F2A                     u9730:
 19114                           
 19115                           ;stkvar	_quotient @ sp[(-10)+0]
 19116  014F2A  90D8               	bcf	status,0,c
 19117  014F2C  0EF6               	movlw	-10
 19118  014F2E  36E3               	rlcf	plusw1,f,c
 19119  014F30  0EF7               	movlw	-9
 19120  014F32  36E3               	rlcf	plusw1,f,c
 19121  014F34  0EF8               	movlw	-8
 19122  014F36  36E3               	rlcf	plusw1,f,c
 19123  014F38  0EF9               	movlw	-7
 19124  014F3A  36E3               	rlcf	plusw1,f,c
 19125  014F3C  0EFA               	movlw	-6
 19126  014F3E  36E3               	rlcf	plusw1,f,c
 19127  014F40  0EFB               	movlw	-5
 19128  014F42  36E3               	rlcf	plusw1,f,c
 19129  014F44  0EFC               	movlw	-4
 19130  014F46  36E3               	rlcf	plusw1,f,c
 19131  014F48  0EFD               	movlw	-3
 19132  014F4A  36E3               	rlcf	plusw1,f,c
 19133                           
 19134                           ;stkvar	_divisor @ sp[(-10)+-16]
 19135                           ;stkvar	_dividend @ sp[(-10)+-8]
 19136  014F4C  50E1               	movf	fsr1l,w,c
 19137  014F4E  0FEE               	addlw	-18
 19138  014F50  6ED9               	movwf	fsr2l,c
 19139  014F52  50E2               	movf	fsr1h,w,c
 19140  014F54  6EDA               	movwf	fsr2h,c
 19141  014F56  0EFF               	movlw	255
 19142  014F58  22DA               	addwfc	fsr2h,f,c
 19143  014F5A  0EE6               	movlw	-26
 19144  014F5C  50E3               	movf	plusw1,w,c
 19145  014F5E  5CDE               	subwf	postinc2,w,c
 19146  014F60  0EE7               	movlw	-25
 19147  014F62  50E3               	movf	plusw1,w,c
 19148  014F64  58DE               	subwfb	postinc2,w,c
 19149  014F66  0EE8               	movlw	-24
 19150  014F68  50E3               	movf	plusw1,w,c
 19151  014F6A  58DE               	subwfb	postinc2,w,c
 19152  014F6C  0EE9               	movlw	-23
 19153  014F6E  50E3               	movf	plusw1,w,c
 19154  014F70  58DE               	subwfb	postinc2,w,c
 19155  014F72  0EEA               	movlw	-22
 19156  014F74  50E3               	movf	plusw1,w,c
 19157  014F76  58DE               	subwfb	postinc2,w,c
 19158  014F78  0EEB               	movlw	-21
 19159  014F7A  50E3               	movf	plusw1,w,c
 19160  014F7C  58DE               	subwfb	postinc2,w,c
 19161  014F7E  0EEC               	movlw	-20
 19162  014F80  50E3               	movf	plusw1,w,c
 19163  014F82  58DE               	subwfb	postinc2,w,c
 19164  014F84  0EED               	movlw	-19
 19165  014F86  50E3               	movf	plusw1,w,c
 19166  014F88  58DE               	subwfb	postinc2,w,c
 19167  014F8A  A0D8               	btfss	status,0,c
 19168  014F8C  D021               	goto	l9784
 19169                           
 19170                           ;stkvar	_divisor @ sp[(-10)+-16]
 19171                           ;stkvar	_dividend @ sp[(-10)+-8]
 19172  014F8E  50E1               	movf	fsr1l,w,c
 19173  014F90  0FEE               	addlw	-18
 19174  014F92  6ED9               	movwf	fsr2l,c
 19175  014F94  50E2               	movf	fsr1h,w,c
 19176  014F96  6EDA               	movwf	fsr2h,c
 19177  014F98  0EFF               	movlw	255
 19178  014F9A  22DA               	addwfc	fsr2h,f,c
 19179  014F9C  0EE6               	movlw	-26
 19180  014F9E  50E3               	movf	plusw1,w,c
 19181  014FA0  5EDE               	subwf	postinc2,f,c
 19182  014FA2  0EE7               	movlw	-25
 19183  014FA4  50E3               	movf	plusw1,w,c
 19184  014FA6  5ADE               	subwfb	postinc2,f,c
 19185  014FA8  0EE8               	movlw	-24
 19186  014FAA  50E3               	movf	plusw1,w,c
 19187  014FAC  5ADE               	subwfb	postinc2,f,c
 19188  014FAE  0EE9               	movlw	-23
 19189  014FB0  50E3               	movf	plusw1,w,c
 19190  014FB2  5ADE               	subwfb	postinc2,f,c
 19191  014FB4  0EEA               	movlw	-22
 19192  014FB6  50E3               	movf	plusw1,w,c
 19193  014FB8  5ADE               	subwfb	postinc2,f,c
 19194  014FBA  0EEB               	movlw	-21
 19195  014FBC  50E3               	movf	plusw1,w,c
 19196  014FBE  5ADE               	subwfb	postinc2,f,c
 19197  014FC0  0EEC               	movlw	-20
 19198  014FC2  50E3               	movf	plusw1,w,c
 19199  014FC4  5ADE               	subwfb	postinc2,f,c
 19200  014FC6  0EED               	movlw	-19
 19201  014FC8  50E3               	movf	plusw1,w,c
 19202  014FCA  5ADE               	subwfb	postinc2,f,c
 19203                           
 19204                           ;stkvar	_quotient @ sp[(-10)+0]
 19205  014FCC  0EF6               	movlw	-10
 19206  014FCE  80E3               	bsf	plusw1,0,c
 19207  014FD0                     l9784:
 19208                           
 19209                           ;stkvar	_divisor @ sp[(-10)+-16]
 19210  014FD0  90D8               	bcf	status,0,c
 19211  014FD2  0EED               	movlw	-19
 19212  014FD4  32E3               	rrcf	plusw1,f,c
 19213  014FD6  0EEC               	movlw	-20
 19214  014FD8  32E3               	rrcf	plusw1,f,c
 19215  014FDA  0EEB               	movlw	-21
 19216  014FDC  32E3               	rrcf	plusw1,f,c
 19217  014FDE  0EEA               	movlw	-22
 19218  014FE0  32E3               	rrcf	plusw1,f,c
 19219  014FE2  0EE9               	movlw	-23
 19220  014FE4  32E3               	rrcf	plusw1,f,c
 19221  014FE6  0EE8               	movlw	-24
 19222  014FE8  32E3               	rrcf	plusw1,f,c
 19223  014FEA  0EE7               	movlw	-25
 19224  014FEC  32E3               	rrcf	plusw1,f,c
 19225  014FEE  0EE6               	movlw	-26
 19226  014FF0  32E3               	rrcf	plusw1,f,c
 19227                           
 19228                           ;stkvar	_counter @ sp[(-10)+9]
 19229  014FF2  0EFF               	movlw	-1
 19230  014FF4  50E3               	movf	plusw1,w,c
 19231  014FF6  6E32               	movwf	btemp^0,c
 19232  014FF8  0E01               	movlw	1
 19233  014FFA  5E32               	subwf	btemp^0,f,c
 19234  014FFC  0EFF               	movlw	-1
 19235  014FFE  0060  F0CB  FFE3   	movff	btemp,plusw1
 19236  015004  A4D8               	btfss	status,2,c
 19237  015006  D791               	goto	u9730
 19238  015008                     u9750:
 19239                           
 19240                           ;stkvar	_sign @ sp[(-10)+8]
 19241  015008  0EFE               	movlw	-2
 19242  01500A  50E3               	movf	plusw1,w,c
 19243  01500C  B4D8               	btfsc	status,2,c
 19244  01500E  D025               	goto	u9770
 19245                           
 19246                           ;stkvar	_quotient @ sp[(-10)+0]
 19247                           ;stkvar	_quotient @ sp[(-10)+0]
 19248  015010  0EF6               	movlw	-10
 19249  015012  6CE3               	negf	plusw1,c
 19250  015014  0EF7               	movlw	-9
 19251  015016  1EE3               	comf	plusw1,f,c
 19252  015018  0EF8               	movlw	-8
 19253  01501A  1EE3               	comf	plusw1,f,c
 19254  01501C  0EF9               	movlw	-7
 19255  01501E  1EE3               	comf	plusw1,f,c
 19256  015020  0EFA               	movlw	-6
 19257  015022  1EE3               	comf	plusw1,f,c
 19258  015024  0EFB               	movlw	-5
 19259  015026  1EE3               	comf	plusw1,f,c
 19260  015028  0EFC               	movlw	-4
 19261  01502A  1EE3               	comf	plusw1,f,c
 19262  01502C  0EFD               	movlw	-3
 19263  01502E  1EE3               	comf	plusw1,f,c
 19264  015030  E314               	bnc	u9770
 19265  015032  0EF7               	movlw	-9
 19266  015034  2AE3               	incf	plusw1,f,c
 19267  015036  E311               	bnc	u9770
 19268  015038  0EF8               	movlw	-8
 19269  01503A  2AE3               	incf	plusw1,f,c
 19270  01503C  E30E               	bnc	u9770
 19271  01503E  0EF9               	movlw	-7
 19272  015040  2AE3               	incf	plusw1,f,c
 19273  015042  E30B               	bnc	u9770
 19274  015044  0EFA               	movlw	-6
 19275  015046  2AE3               	incf	plusw1,f,c
 19276  015048  E308               	bnc	u9770
 19277  01504A  0EFB               	movlw	-5
 19278  01504C  2AE3               	incf	plusw1,f,c
 19279  01504E  E305               	bnc	u9770
 19280  015050  0EFC               	movlw	-4
 19281  015052  2AE3               	incf	plusw1,f,c
 19282  015054  E302               	bnc	u9770
 19283  015056  0EFD               	movlw	-3
 19284  015058  2AE3               	incf	plusw1,f,c
 19285  01505A                     u9770:
 19286                           
 19287                           ;stkvar	_quotient @ sp[(-10)+0]
 19288  01505A  0EF6               	movlw	246
 19289  01505C  24E1               	addwf	fsr1l,w,c
 19290  01505E  6ED9               	movwf	fsr2l,c
 19291  015060  0EFF               	movlw	255
 19292  015062  20E2               	addwfc	fsr1h,w,c
 19293  015064  6EDA               	movwf	fsr2h,c
 19294                           
 19295                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 19296  015066  0E08               	movlw	8
 19297  015068  6E32               	movwf	btemp^0,c
 19298  01506A  0EEE               	movlw	-18
 19299  01506C                     us978999:
 19300  01506C  006F FF7B FFE3     	movff	postinc2,plusw1
 19301  015072  28E8               	incf	wreg,w,c
 19302  015074  2E32               	decfsz	btemp^0,f,c
 19303  015076  D7FA               	bra	us978999
 19304                           
 19305                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 19306  015078  0EF6               	movlw	246
 19307  01507A  26E1               	addwf	fsr1l,f,c
 19308  01507C  0EFF               	movlw	255
 19309  01507E  22E2               	addwfc	fsr1h,f,c
 19310  015080  0012               	return		;funcret
 19311  015082                     __end_of___aodiv:
 19312                           	opt callstack 0
 19313                           
 19314 ;; *************** function _ctoa *****************
 19315 ;; Defined at:
 19316 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19317 ;; Parameters:    Size  Location     Type
 19318 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19319 ;;		 -> f(6), NULL(0), 
 19320 ;;  c               1  [STACK] unsigned char 
 19321 ;; Auto vars:     Size  Location     Type
 19322 ;;  w               2  [STACK] int 
 19323 ;;  l               2    0        int 
 19324 ;; Return value:  Size  Location     Type
 19325 ;;                  2  [STACK] int 
 19326 ;; Registers used:
 19327 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19328 ;; Tracked objects:
 19329 ;;		On entry : 0/5
 19330 ;;		On exit  : 0/0
 19331 ;;		Unchanged: 0/0
 19332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19337 ;;Total ram usage:        0 bytes
 19338 ;; Hardware stack levels used:    1
 19339 ;; Hardware stack levels required when called:   11
 19340 ;; This function calls:
 19341 ;;		_pad
 19342 ;; This function is called by:
 19343 ;;		_vfpfcnvrt
 19344 ;; This function uses a reentrant model
 19345 ;;
 19346                           
 19347                           	psect	text64
 19348  017308                     __ptext64:
 19349                           	opt callstack 0
 19350  017308                     _ctoa:
 19351                           	opt callstack 0
 19352                           
 19353                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19354  017308  52E6               	movf	postinc1,f,c
 19355  01730A  52E6               	movf	postinc1,f,c
 19356                           
 19357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 19358                           
 19359                           ;incstack = 0
 19360  01730C  501B               	movf	_width^0,w,c
 19361  01730E  101C               	iorwf	(_width+1)^0,w,c
 19362  017310  A4D8               	btfss	status,2,c
 19363  017312  D009               	goto	l10342
 19364                           
 19365                           ;stkvar	_w @ sp[(-2)+0]
 19366  017314  0EFE               	movlw	-2
 19367  017316  0060  F06F  FFE3   	movff	_width,plusw1
 19368  01731C  0EFF               	movlw	-1
 19369  01731E  0060  F073  FFE3   	movff	_width+1,plusw1
 19370  017324  D016               	goto	l10344
 19371  017326                     l10342:
 19372  017326  0EFF               	movlw	255
 19373  017328  6E3C               	movwf	(btemp+10)^0,c
 19374  01732A  0EFF               	movlw	255
 19375  01732C  6E3D               	movwf	(btemp+11)^0,c
 19376  01732E  0060  F06C  F03A   	movff	_width,btemp+8
 19377  017334  0060  F070  F03B   	movff	_width+1,btemp+9
 19378  01733A  503C               	movf	(btemp+10)^0,w,c
 19379  01733C  263A               	addwf	(btemp+8)^0,f,c
 19380  01733E  503D               	movf	(btemp+11)^0,w,c
 19381  017340  223B               	addwfc	(btemp+9)^0,f,c
 19382                           
 19383                           ;stkvar	_w @ sp[(-2)+0]
 19384  017342  0EFE               	movlw	-2
 19385  017344  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 19386  01734A  0EFF               	movlw	-1
 19387  01734C  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 19388  017352                     l10344:
 19389                           
 19390                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 19391                           ;stkvar	_c @ sp[(-2)+-3]
 19392  017352  0EFB               	movlw	-5
 19393  017354  006F FF8C  F240    	movff	plusw1,_dbuf
 19394                           
 19395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 19396  01735A  0102               	movlb	2	; () banked
 19397  01735C  6B41               	clrf	(_dbuf+1)& (0+255),b
 19398                           
 19399                           ; BSR set to: 2
 19400                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 19401                           ;stkvar	_w @ sp[(-2)+0]
 19402  01735E  0EFE               	movlw	-2
 19403  017360  006F FF8F FFE6     	movff	plusw1,postinc1
 19404  017366  006F FF8F FFE6     	movff	plusw1,postinc1
 19405  01736C  0E40               	movlw	low _dbuf
 19406  01736E  6EE6               	movwf	postinc1,c
 19407  017370  0E02               	movlw	high _dbuf
 19408  017372  6EE6               	movwf	postinc1,c
 19409                           
 19410                           ;stkvar	_fp @ sp[(-6)+-2]
 19411  017374  0EF8               	movlw	-8
 19412  017376  006F FF8F FFE6     	movff	plusw1,postinc1
 19413  01737C  006F FF8F FFE6     	movff	plusw1,postinc1
 19414  017382  ECAA  F0B3         	call	_pad	;wreg free
 19415                           
 19416                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 19417  017386  0EFB               	movlw	251
 19418  017388  26E1               	addwf	fsr1l,f,c
 19419  01738A  0EFF               	movlw	255
 19420  01738C  22E2               	addwfc	fsr1h,f,c
 19421  01738E  0012               	return		;funcret
 19422  017390                     __end_of_ctoa:
 19423                           	opt callstack 0
 19424                           
 19425 ;; *************** function _pad *****************
 19426 ;; Defined at:
 19427 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19428 ;; Parameters:    Size  Location     Type
 19429 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19430 ;;		 -> f(6), NULL(0), 
 19431 ;;  buf             2  [STACK] PTR unsigned char 
 19432 ;;		 -> dbuf(80), 
 19433 ;;  p               2  [STACK] int 
 19434 ;; Auto vars:     Size  Location     Type
 19435 ;;  w               2  [STACK] int 
 19436 ;;  i               2  [STACK] int 
 19437 ;; Return value:  Size  Location     Type
 19438 ;;                  2  [STACK] int 
 19439 ;; Registers used:
 19440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 19441 ;; Tracked objects:
 19442 ;;		On entry : 0/2
 19443 ;;		On exit  : 0/0
 19444 ;;		Unchanged: 0/0
 19445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19446 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19449 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19450 ;;Total ram usage:        0 bytes
 19451 ;; Hardware stack levels used:    1
 19452 ;; Hardware stack levels required when called:   10
 19453 ;; This function calls:
 19454 ;;		_fputc
 19455 ;;		_fputs
 19456 ;;		_strlen
 19457 ;; This function is called by:
 19458 ;;		_ctoa
 19459 ;;		_dtoa
 19460 ;;		_efgtoa
 19461 ;;		_xtoa
 19462 ;; This function uses a reentrant model
 19463 ;;
 19464                           
 19465                           	psect	text65
 19466  016754                     __ptext65:
 19467                           	opt callstack 0
 19468  016754                     _pad:
 19469                           	opt callstack 0
 19470                           
 19471                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19472  016754  52E6               	movf	postinc1,f,c
 19473  016756  52E6               	movf	postinc1,f,c
 19474  016758  52E6               	movf	postinc1,f,c
 19475  01675A  52E6               	movf	postinc1,f,c
 19476                           
 19477                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 19478                           
 19479                           ;incstack = 0
 19480  01675C  A01F               	btfss	_flags^0,0,c
 19481  01675E  D010               	goto	l9624
 19482                           
 19483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 19484                           ;stkvar	_fp @ sp[(-4)+-2]
 19485  016760  0EFA               	movlw	-6
 19486  016762  006F FF8F FFE6     	movff	plusw1,postinc1
 19487  016768  006F FF8F FFE6     	movff	plusw1,postinc1
 19488                           
 19489                           ;stkvar	_buf @ sp[(-6)+-4]
 19490  01676E  0EF6               	movlw	-10
 19491  016770  006F FF8F FFE6     	movff	plusw1,postinc1
 19492  016776  006F FF8F FFE6     	movff	plusw1,postinc1
 19493  01677C  ECA6  F0B8         	call	_fputs	;wreg free
 19494  016780                     l9624:
 19495                           
 19496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 19497                           ;stkvar	_p @ sp[(-4)+-6]
 19498  016780  0EF7               	movlw	-9
 19499  016782  BEE3               	btfsc	plusw1,7,c
 19500  016784  D011               	goto	l9628
 19501                           
 19502                           ;stkvar	_p @ sp[(-4)+-6]
 19503                           ;stkvar	_w @ sp[(-4)+0]
 19504  016786  0EF6               	movlw	-10
 19505  016788  006F FF8C  F032    	movff	plusw1,btemp
 19506  01678E  0EFC               	movlw	-4
 19507  016790  0060  F0CB  FFE3   	movff	btemp,plusw1
 19508  016796  0EF7               	movlw	-9
 19509  016798  006F FF8C  F032    	movff	plusw1,btemp
 19510  01679E  0EFD               	movlw	-3
 19511  0167A0  0060  F0CB  FFE3   	movff	btemp,plusw1
 19512  0167A6  D004               	goto	l1815
 19513  0167A8                     l9628:
 19514                           
 19515                           ;stkvar	_w @ sp[(-4)+0]
 19516  0167A8  0EFC               	movlw	-4
 19517  0167AA  6AE3               	clrf	plusw1,c
 19518  0167AC  0EFD               	movlw	-3
 19519  0167AE  6AE3               	clrf	plusw1,c
 19520  0167B0                     l1815:
 19521                           
 19522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 19523                           ;stkvar	_i @ sp[(-4)+2]
 19524  0167B0  0EFE               	movlw	-2
 19525  0167B2  6AE3               	clrf	plusw1,c
 19526  0167B4  0EFF               	movlw	-1
 19527  0167B6  6AE3               	clrf	plusw1,c
 19528                           
 19529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19530  0167B8  D01E               	goto	l9634
 19531  0167BA                     l9630:
 19532                           
 19533                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 19534                           ;stkvar	_fp @ sp[(-4)+-2]
 19535  0167BA  0EFA               	movlw	-6
 19536  0167BC  006F FF8F FFE6     	movff	plusw1,postinc1
 19537  0167C2  006F FF8F FFE6     	movff	plusw1,postinc1
 19538  0167C8  0E20               	movlw	32
 19539  0167CA  6EE6               	movwf	postinc1,c
 19540  0167CC  0E00               	movlw	0
 19541  0167CE  6EE6               	movwf	postinc1,c
 19542  0167D0  EC8C  F0B2         	call	_fputc	;wreg free
 19543                           
 19544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 19545                           ;stkvar	_i @ sp[(-4)+2]
 19546  0167D4  0EFE               	movlw	-2
 19547  0167D6  50E3               	movf	plusw1,w,c
 19548  0167D8  0F01               	addlw	1
 19549  0167DA  6E32               	movwf	btemp^0,c
 19550  0167DC  0EFE               	movlw	-2
 19551  0167DE  0060  F0CB  FFE3   	movff	btemp,plusw1
 19552  0167E4  6A32               	clrf	btemp^0,c
 19553  0167E6  0EFF               	movlw	-1
 19554  0167E8  50E3               	movf	plusw1,w,c
 19555  0167EA  2032               	addwfc	btemp^0,w,c
 19556  0167EC  6E32               	movwf	btemp^0,c
 19557  0167EE  0EFF               	movlw	-1
 19558  0167F0  0060  F0CB  FFE3   	movff	btemp,plusw1
 19559  0167F6                     l9634:
 19560                           
 19561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 19562                           ;stkvar	_w @ sp[(-4)+0]
 19563                           ;stkvar	_i @ sp[(-4)+2]
 19564  0167F6  50E1               	movf	fsr1l,w,c
 19565  0167F8  0FFE               	addlw	-2
 19566  0167FA  6ED9               	movwf	fsr2l,c
 19567  0167FC  50E2               	movf	fsr1h,w,c
 19568  0167FE  6EDA               	movwf	fsr2h,c
 19569  016800  0EFF               	movlw	255
 19570  016802  22DA               	addwfc	fsr2h,f,c
 19571  016804  0EFC               	movlw	-4
 19572  016806  50E3               	movf	plusw1,w,c
 19573  016808  5CDE               	subwf	postinc2,w,c
 19574  01680A  50DE               	movf	postinc2,w,c
 19575  01680C  0A80               	xorlw	128
 19576  01680E  6E32               	movwf	btemp^0,c
 19577  016810  0EFD               	movlw	-3
 19578  016812  50E3               	movf	plusw1,w,c
 19579  016814  0A80               	xorlw	128
 19580  016816  5832               	subwfb	btemp^0,w,c
 19581  016818  A0D8               	btfss	status,0,c
 19582  01681A  D7CF               	goto	l9630
 19583                           
 19584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 19585  01681C  B01F               	btfsc	_flags^0,0,c
 19586  01681E  D010               	goto	l9638
 19587                           
 19588                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 19589                           ;stkvar	_fp @ sp[(-4)+-2]
 19590  016820  0EFA               	movlw	-6
 19591  016822  006F FF8F FFE6     	movff	plusw1,postinc1
 19592  016828  006F FF8F FFE6     	movff	plusw1,postinc1
 19593                           
 19594                           ;stkvar	_buf @ sp[(-6)+-4]
 19595  01682E  0EF6               	movlw	-10
 19596  016830  006F FF8F FFE6     	movff	plusw1,postinc1
 19597  016836  006F FF8F FFE6     	movff	plusw1,postinc1
 19598  01683C  ECA6  F0B8         	call	_fputs	;wreg free
 19599  016840                     l9638:
 19600                           
 19601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 19602                           ;stkvar	_w @ sp[(-4)+0]
 19603                           ;stkvar	_buf @ sp[(-4)+-4]
 19604  016840  0EF8               	movlw	-8
 19605  016842  006F FF8F FFE6     	movff	plusw1,postinc1
 19606  016848  006F FF8F FFE6     	movff	plusw1,postinc1
 19607  01684E  EC55  F0B8         	call	_strlen	;wreg free
 19608  016852  0EFC               	movlw	-4
 19609  016854  50E3               	movf	plusw1,w,c
 19610  016856  2632               	addwf	btemp^0,f,c
 19611  016858  0EFD               	movlw	-3
 19612  01685A  50E3               	movf	plusw1,w,c
 19613  01685C  2233               	addwfc	(btemp+1)^0,f,c
 19614                           
 19615                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 19616  01685E  0EF6               	movlw	246
 19617  016860  26E1               	addwf	fsr1l,f,c
 19618  016862  0EFF               	movlw	255
 19619  016864  22E2               	addwfc	fsr1h,f,c
 19620  016866  0012               	return		;funcret
 19621  016868                     __end_of_pad:
 19622                           	opt callstack 0
 19623                           
 19624 ;; *************** function _strlen *****************
 19625 ;; Defined at:
 19626 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 19627 ;; Parameters:    Size  Location     Type
 19628 ;;  s               2  [STACK] PTR const unsigned char 
 19629 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19630 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 19631 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 19632 ;; Auto vars:     Size  Location     Type
 19633 ;;  a               2  [STACK] PTR const unsigned char 
 19634 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 19635 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 19636 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 19637 ;; Return value:  Size  Location     Type
 19638 ;;                  2  [STACK] unsigned int 
 19639 ;; Registers used:
 19640 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 19641 ;; Tracked objects:
 19642 ;;		On entry : 0/0
 19643 ;;		On exit  : 0/0
 19644 ;;		Unchanged: 0/0
 19645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19650 ;;Total ram usage:        0 bytes
 19651 ;; Hardware stack levels used:    1
 19652 ;; Hardware stack levels required when called:    6
 19653 ;; This function calls:
 19654 ;;		Nothing
 19655 ;; This function is called by:
 19656 ;;		_eaDogM_WriteString
 19657 ;;		_pad
 19658 ;;		_stoa
 19659 ;; This function uses a reentrant model
 19660 ;;
 19661                           
 19662                           	psect	text66
 19663  0170AA                     __ptext66:
 19664                           	opt callstack 0
 19665  0170AA                     _strlen:
 19666                           	opt callstack 0
 19667                           
 19668                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19669  0170AA  52E6               	movf	postinc1,f,c
 19670  0170AC  52E6               	movf	postinc1,f,c
 19671                           
 19672                           ;stkvar	_s @ sp[(-2)+-2]
 19673                           
 19674                           ;incstack = 0
 19675  0170AE  0EFC               	movlw	-4
 19676  0170B0  006F FF8C  F03C    	movff	plusw1,btemp+10
 19677  0170B6  0EFD               	movlw	-3
 19678  0170B8  006F FF8C  F03D    	movff	plusw1,btemp+11
 19679                           
 19680                           ;stkvar	_a @ sp[(-2)+0]
 19681  0170BE  0EFF               	movlw	-1
 19682  0170C0  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19683  0170C6  0EFE               	movlw	-2
 19684  0170C8  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 19685  0170CE  D011               	goto	l9378
 19686  0170D0                     l9376:
 19687                           
 19688                           ;stkvar	_s @ sp[(-2)+-2]
 19689  0170D0  0EFC               	movlw	-4
 19690  0170D2  50E3               	movf	plusw1,w,c
 19691  0170D4  0F01               	addlw	1
 19692  0170D6  6E32               	movwf	btemp^0,c
 19693  0170D8  0EFC               	movlw	-4
 19694  0170DA  0060  F0CB  FFE3   	movff	btemp,plusw1
 19695  0170E0  6A32               	clrf	btemp^0,c
 19696  0170E2  0EFD               	movlw	-3
 19697  0170E4  50E3               	movf	plusw1,w,c
 19698  0170E6  2032               	addwfc	btemp^0,w,c
 19699  0170E8  6E32               	movwf	btemp^0,c
 19700  0170EA  0EFD               	movlw	-3
 19701  0170EC  0060  F0CB  FFE3   	movff	btemp,plusw1
 19702  0170F2                     l9378:
 19703                           
 19704                           ;stkvar	_s @ sp[(-2)+-2]
 19705  0170F2  0EFC               	movlw	-4
 19706  0170F4  006F FF8F FFF6     	movff	plusw1,tblptrl
 19707  0170FA  0EFD               	movlw	-3
 19708  0170FC  006F FF8F FFF7     	movff	plusw1,tblptrh
 19709  017102  0E00               	movlw	low (__mediumconst shr (0+16))
 19710  017104  6EF8               	movwf	tblptru,c
 19711  017106  0E1F               	movlw	(high __ramtop+-1)
 19712  017108  64F7               	cpfsgt	tblptrh,c
 19713  01710A  D003               	bra	u8847
 19714  01710C  0008               	tblrd		*
 19715  01710E  50F5               	movf	tablat,w,c
 19716  017110  D007               	bra	u8840
 19717  017112                     u8847:
 19718  017112  006F FFDB FFE9     	movff	tblptrl,fsr0l
 19719  017118  006F FFDF FFEA     	movff	tblptrh,fsr0h
 19720  01711E  50EF               	movf	indf0,w,c
 19721  017120                     u8840:
 19722  017120  0900               	iorlw	0
 19723  017122  A4D8               	btfss	status,2,c
 19724  017124  D7D5               	goto	l9376
 19725                           
 19726                           ;stkvar	_a @ sp[(-2)+0]
 19727                           ;stkvar	_s @ sp[(-2)+-2]
 19728  017126  0EFC               	movlw	-4
 19729  017128  006F FF8C  F032    	movff	plusw1,btemp
 19730  01712E  0EFD               	movlw	-3
 19731  017130  006F FF8C  F033    	movff	plusw1,btemp+1
 19732  017136  0EFE               	movlw	-2
 19733  017138  50E3               	movf	plusw1,w,c
 19734  01713A  5E32               	subwf	btemp^0,f,c
 19735  01713C  0EFF               	movlw	-1
 19736  01713E  50E3               	movf	plusw1,w,c
 19737  017140  5A33               	subwfb	(btemp+1)^0,f,c
 19738                           
 19739                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 19740  017142  52E5               	movf	postdec1,f,c
 19741  017144  52E5               	movf	postdec1,f,c
 19742  017146  52E5               	movf	postdec1,f,c
 19743  017148  52E5               	movf	postdec1,f,c
 19744  01714A  0012               	return		;funcret
 19745  01714C                     __end_of_strlen:
 19746                           	opt callstack 0
 19747                           
 19748 ;; *************** function _fputs *****************
 19749 ;; Defined at:
 19750 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 19751 ;; Parameters:    Size  Location     Type
 19752 ;;  s               2  [STACK] PTR const unsigned char 
 19753 ;;		 -> dbuf(80), 
 19754 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19755 ;;		 -> f(6), NULL(0), 
 19756 ;; Auto vars:     Size  Location     Type
 19757 ;;  i               2  [STACK] int 
 19758 ;;  c               1  [STACK] unsigned char 
 19759 ;; Return value:  Size  Location     Type
 19760 ;;                  2  [STACK] int 
 19761 ;; Registers used:
 19762 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19763 ;; Tracked objects:
 19764 ;;		On entry : 0/2
 19765 ;;		On exit  : 0/0
 19766 ;;		Unchanged: 0/0
 19767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19771 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19772 ;;Total ram usage:        0 bytes
 19773 ;; Hardware stack levels used:    1
 19774 ;; Hardware stack levels required when called:    9
 19775 ;; This function calls:
 19776 ;;		_fputc
 19777 ;; This function is called by:
 19778 ;;		_pad
 19779 ;; This function uses a reentrant model
 19780 ;;
 19781                           
 19782                           	psect	text67
 19783  01714C                     __ptext67:
 19784                           	opt callstack 0
 19785  01714C                     _fputs:
 19786                           	opt callstack 0
 19787                           
 19788                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19789  01714C  52E6               	movf	postinc1,f,c
 19790  01714E  52E6               	movf	postinc1,f,c
 19791  017150  52E6               	movf	postinc1,f,c
 19792                           
 19793                           ;stkvar	_i @ sp[(-3)+0]
 19794                           
 19795                           ;incstack = 0
 19796  017152  0EFD               	movlw	-3
 19797  017154  6AE3               	clrf	plusw1,c
 19798  017156  0EFE               	movlw	-2
 19799  017158  6AE3               	clrf	plusw1,c
 19800  01715A  D01F               	goto	l9390
 19801  01715C                     l9386:
 19802                           
 19803                           ;stkvar	_fp @ sp[(-3)+-4]
 19804  01715C  0EF9               	movlw	-7
 19805  01715E  006F FF8F FFE6     	movff	plusw1,postinc1
 19806  017164  006F FF8F FFE6     	movff	plusw1,postinc1
 19807                           
 19808                           ;stkvar	_c @ sp[(-5)+2]
 19809  01716A  0EFD               	movlw	-3
 19810  01716C  50E3               	movf	plusw1,w,c
 19811  01716E  6EE6               	movwf	postinc1,c
 19812  017170  0E00               	movlw	0
 19813  017172  6EE6               	movwf	postinc1,c
 19814  017174  EC8C  F0B2         	call	_fputc	;wreg free
 19815                           
 19816                           ;stkvar	_i @ sp[(-3)+0]
 19817  017178  0EFD               	movlw	-3
 19818  01717A  50E3               	movf	plusw1,w,c
 19819  01717C  0F01               	addlw	1
 19820  01717E  6E32               	movwf	btemp^0,c
 19821  017180  0EFD               	movlw	-3
 19822  017182  0060  F0CB  FFE3   	movff	btemp,plusw1
 19823  017188  6A32               	clrf	btemp^0,c
 19824  01718A  0EFE               	movlw	-2
 19825  01718C  50E3               	movf	plusw1,w,c
 19826  01718E  2032               	addwfc	btemp^0,w,c
 19827  017190  6E32               	movwf	btemp^0,c
 19828  017192  0EFE               	movlw	-2
 19829  017194  0060  F0CB  FFE3   	movff	btemp,plusw1
 19830  01719A                     l9390:
 19831                           
 19832                           ;stkvar	_i @ sp[(-3)+0]
 19833  01719A  0EFD               	movlw	-3
 19834  01719C  006F FF8C  F03C    	movff	plusw1,btemp+10
 19835  0171A2  0EFE               	movlw	-2
 19836  0171A4  006F FF8C  F03D    	movff	plusw1,btemp+11
 19837                           
 19838                           ;stkvar	_s @ sp[(-3)+-2]
 19839  0171AA  0EFB               	movlw	-5
 19840  0171AC  006F FF8C  F03A    	movff	plusw1,btemp+8
 19841  0171B2  0EFC               	movlw	-4
 19842  0171B4  006F FF8C  F03B    	movff	plusw1,btemp+9
 19843  0171BA  503C               	movf	(btemp+10)^0,w,c
 19844  0171BC  243A               	addwf	(btemp+8)^0,w,c
 19845  0171BE  6ED9               	movwf	fsr2l,c
 19846  0171C0  503D               	movf	(btemp+11)^0,w,c
 19847  0171C2  203B               	addwfc	(btemp+9)^0,w,c
 19848  0171C4  6EDA               	movwf	fsr2h,c
 19849  0171C6  50DF               	movf	indf2,w,c
 19850  0171C8  6E3D               	movwf	(btemp+11)^0,c
 19851                           
 19852                           ;stkvar	_c @ sp[(-3)+2]
 19853  0171CA  0EFF               	movlw	-1
 19854  0171CC  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 19855  0171D2  0EFF               	movlw	-1
 19856  0171D4  50E3               	movf	plusw1,w,c
 19857  0171D6  A4D8               	btfss	status,2,c
 19858  0171D8  D7C1               	goto	l9386
 19859                           
 19860                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 19861  0171DA  0EF9               	movlw	249
 19862  0171DC  26E1               	addwf	fsr1l,f,c
 19863  0171DE  0EFF               	movlw	255
 19864  0171E0  22E2               	addwfc	fsr1h,f,c
 19865  0171E2  0012               	return		;funcret
 19866  0171E4                     __end_of_fputs:
 19867                           	opt callstack 0
 19868                           
 19869 ;; *************** function _fputc *****************
 19870 ;; Defined at:
 19871 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 19872 ;; Parameters:    Size  Location     Type
 19873 ;;  c               2  [STACK] int 
 19874 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19875 ;;		 -> f(6), NULL(0), 
 19876 ;; Auto vars:     Size  Location     Type
 19877 ;;		None
 19878 ;; Return value:  Size  Location     Type
 19879 ;;                  2  [STACK] int 
 19880 ;; Registers used:
 19881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 19882 ;; Tracked objects:
 19883 ;;		On entry : 0/5
 19884 ;;		On exit  : 0/0
 19885 ;;		Unchanged: 0/0
 19886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19890 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19891 ;;Total ram usage:        0 bytes
 19892 ;; Hardware stack levels used:    1
 19893 ;; Hardware stack levels required when called:    8
 19894 ;; This function calls:
 19895 ;;		_putch
 19896 ;; This function is called by:
 19897 ;;		_pad
 19898 ;;		_stoa
 19899 ;;		_vfpfcnvrt
 19900 ;;		_fputs
 19901 ;; This function uses a reentrant model
 19902 ;;
 19903                           
 19904                           	psect	text68
 19905  016518                     __ptext68:
 19906                           	opt callstack 0
 19907  016518                     _fputc:
 19908                           	opt callstack 13
 19909                           
 19910                           ;stkvar	_fp @ sp[(0)+-4]
 19911                           
 19912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19913                           ;incstack = 0
 19914  016518  0EFC               	movlw	-4
 19915  01651A  006F FF8C  F032    	movff	plusw1,btemp
 19916  016520  0EFD               	movlw	-3
 19917  016522  50E3               	movf	plusw1,w,c
 19918  016524  1032               	iorwf	btemp^0,w,c
 19919  016526  B4D8               	btfsc	status,2,c
 19920  016528  D009               	goto	u8810
 19921                           
 19922                           ;stkvar	_fp @ sp[(0)+-4]
 19923  01652A  0EFC               	movlw	-4
 19924  01652C  006F FF8C  F032    	movff	plusw1,btemp
 19925  016532  0EFD               	movlw	-3
 19926  016534  50E3               	movf	plusw1,w,c
 19927  016536  1032               	iorwf	btemp^0,w,c
 19928  016538  A4D8               	btfss	status,2,c
 19929  01653A  D006               	goto	l9364
 19930  01653C                     u8810:
 19931                           
 19932                           ;stkvar	_c @ sp[(0)+-2]
 19933  01653C  0EFE               	movlw	-2
 19934  01653E  50E3               	movf	plusw1,w,c
 19935  016540  6EE6               	movwf	postinc1,c
 19936  016542  EC7A  F0C2         	call	_putch	;wreg free
 19937  016546  D075               	goto	l2833
 19938  016548                     l9364:
 19939                           
 19940                           ;stkvar	_fp @ sp[(0)+-4]
 19941  016548  0EFC               	movlw	-4
 19942  01654A  006F FF8C  F03C    	movff	plusw1,btemp+10
 19943  016550  0EFD               	movlw	-3
 19944  016552  006F FF8C  F03D    	movff	plusw1,btemp+11
 19945  016558  0E04               	movlw	4
 19946  01655A  243C               	addwf	(btemp+10)^0,w,c
 19947  01655C  6ED9               	movwf	fsr2l,c
 19948  01655E  0E00               	movlw	0
 19949  016560  203D               	addwfc	(btemp+11)^0,w,c
 19950  016562  6EDA               	movwf	fsr2h,c
 19951  016564  50DE               	movf	postinc2,w,c
 19952  016566  10DE               	iorwf	postinc2,w,c
 19953  016568  B4D8               	btfsc	status,2,c
 19954  01656A  D026               	goto	u8830
 19955                           
 19956                           ;stkvar	_fp @ sp[(0)+-4]
 19957  01656C  0EFC               	movlw	-4
 19958  01656E  006F FF8C  F03C    	movff	plusw1,btemp+10
 19959  016574  0EFD               	movlw	-3
 19960  016576  006F FF8C  F03D    	movff	plusw1,btemp+11
 19961  01657C  0E04               	movlw	4
 19962  01657E  243C               	addwf	(btemp+10)^0,w,c
 19963  016580  6ED9               	movwf	fsr2l,c
 19964  016582  0E00               	movlw	0
 19965  016584  203D               	addwfc	(btemp+11)^0,w,c
 19966  016586  6EDA               	movwf	fsr2h,c
 19967                           
 19968                           ;stkvar	_fp @ sp[(0)+-4]
 19969  016588  0EFC               	movlw	-4
 19970  01658A  006F FF8C  F03C    	movff	plusw1,btemp+10
 19971  016590  0EFD               	movlw	-3
 19972  016592  006F FF8C  F03D    	movff	plusw1,btemp+11
 19973  016598  0E02               	movlw	2
 19974  01659A  243C               	addwf	(btemp+10)^0,w,c
 19975  01659C  6EE9               	movwf	fsr0l,c
 19976  01659E  0E00               	movlw	0
 19977  0165A0  203D               	addwfc	(btemp+11)^0,w,c
 19978  0165A2  6EEA               	movwf	fsr0h,c
 19979  0165A4  50DE               	movf	postinc2,w,c
 19980  0165A6  5CEE               	subwf	postinc0,w,c
 19981  0165A8  50EE               	movf	postinc0,w,c
 19982  0165AA  0A80               	xorlw	128
 19983  0165AC  6E32               	movwf	btemp^0,c
 19984  0165AE  50DE               	movf	postinc2,w,c
 19985  0165B0  0A80               	xorlw	128
 19986  0165B2  5832               	subwfb	btemp^0,w,c
 19987  0165B4  B0D8               	btfsc	status,0,c
 19988  0165B6  D03D               	goto	l2833
 19989  0165B8                     u8830:
 19990                           
 19991                           ;stkvar	_c @ sp[(0)+-2]
 19992                           ;stkvar	_fp @ sp[(0)+-4]
 19993  0165B8  0EFC               	movlw	-4
 19994  0165BA  006F FF8C  F03C    	movff	plusw1,btemp+10
 19995  0165C0  0EFD               	movlw	-3
 19996  0165C2  006F FF8C  F03D    	movff	plusw1,btemp+11
 19997  0165C8  0E02               	movlw	2
 19998  0165CA  243C               	addwf	(btemp+10)^0,w,c
 19999  0165CC  6ED9               	movwf	fsr2l,c
 20000  0165CE  0E00               	movlw	0
 20001  0165D0  203D               	addwfc	(btemp+11)^0,w,c
 20002  0165D2  6EDA               	movwf	fsr2h,c
 20003  0165D4  006F FF78  F03C    	movff	postinc2,btemp+10
 20004  0165DA  006F FF74  F03D    	movff	postdec2,btemp+11
 20005                           
 20006                           ;stkvar	_fp @ sp[(0)+-4]
 20007  0165E0  0EFC               	movlw	-4
 20008  0165E2  006F FF8F FFD9     	movff	plusw1,fsr2l
 20009  0165E8  0EFD               	movlw	-3
 20010  0165EA  006F FF8F FFDA     	movff	plusw1,fsr2h
 20011  0165F0  006F FF78  F03A    	movff	postinc2,btemp+8
 20012  0165F6  006F FF74  F03B    	movff	postdec2,btemp+9
 20013  0165FC  503C               	movf	(btemp+10)^0,w,c
 20014  0165FE  243A               	addwf	(btemp+8)^0,w,c
 20015  016600  6ED9               	movwf	fsr2l,c
 20016  016602  503D               	movf	(btemp+11)^0,w,c
 20017  016604  203B               	addwfc	(btemp+9)^0,w,c
 20018  016606  6EDA               	movwf	fsr2h,c
 20019  016608  0EFE               	movlw	-2
 20020  01660A  006F FF8F FFDF     	movff	plusw1,indf2
 20021                           
 20022                           ;stkvar	_fp @ sp[(0)+-4]
 20023  016610  0EFC               	movlw	-4
 20024  016612  006F FF8C  F03C    	movff	plusw1,btemp+10
 20025  016618  0EFD               	movlw	-3
 20026  01661A  006F FF8C  F03D    	movff	plusw1,btemp+11
 20027  016620  0E02               	movlw	2
 20028  016622  243C               	addwf	(btemp+10)^0,w,c
 20029  016624  6ED9               	movwf	fsr2l,c
 20030  016626  0E00               	movlw	0
 20031  016628  203D               	addwfc	(btemp+11)^0,w,c
 20032  01662A  6EDA               	movwf	fsr2h,c
 20033  01662C  2ADE               	incf	postinc2,f,c
 20034  01662E  0E00               	movlw	0
 20035  016630  22DD               	addwfc	postdec2,f,c
 20036  016632                     l2833:
 20037                           
 20038                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20039  016632  52E5               	movf	postdec1,f,c
 20040  016634  52E5               	movf	postdec1,f,c
 20041  016636  52E5               	movf	postdec1,f,c
 20042  016638  52E5               	movf	postdec1,f,c
 20043  01663A  0012               	return		;funcret
 20044  01663C                     __end_of_fputc:
 20045                           	opt callstack 0
 20046                           
 20047 ;; *************** function _putch *****************
 20048 ;; Defined at:
 20049 ;;		line 155 in file "eadog.c"
 20050 ;; Parameters:    Size  Location     Type
 20051 ;;  c               1  [STACK] unsigned char 
 20052 ;; Auto vars:     Size  Location     Type
 20053 ;;		None
 20054 ;; Return value:  Size  Location     Type
 20055 ;;                  1  [STACK] void 
 20056 ;; Registers used:
 20057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20058 ;; Tracked objects:
 20059 ;;		On entry : 0/5
 20060 ;;		On exit  : 0/0
 20061 ;;		Unchanged: 0/0
 20062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20067 ;;Total ram usage:        0 bytes
 20068 ;; Hardware stack levels used:    1
 20069 ;; Hardware stack levels required when called:    7
 20070 ;; This function calls:
 20071 ;;		_ringBufS_put_dma
 20072 ;; This function is called by:
 20073 ;;		_fputc
 20074 ;; This function uses a reentrant model
 20075 ;;
 20076                           
 20077                           	psect	text69
 20078  0184F4                     __ptext69:
 20079                           	opt callstack 0
 20080  0184F4                     _putch:
 20081                           	opt callstack 13
 20082                           
 20083                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 20084                           ;stkvar	_c @ sp[(0)+-1]
 20085                           
 20086                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20087                           ;incstack = 0
 20088  0184F4  0EFF               	movlw	-1
 20089  0184F6  50E3               	movf	plusw1,w,c
 20090  0184F8  6EE6               	movwf	postinc1,c
 20091  0184FA  0060  F29F  FFE6   	movff	_spi_link+6,postinc1
 20092  018500  0060  F2A3  FFE6   	movff	_spi_link+7,postinc1
 20093  018506  EC59  F0B7         	call	_ringBufS_put_dma	;wreg free
 20094                           
 20095                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 20096  01850A  52E5               	movf	postdec1,f,c
 20097  01850C  0012               	return		;funcret
 20098  01850E                     __end_of_putch:
 20099                           	opt callstack 0
 20100                           
 20101 ;; *************** function _ringBufS_put_dma *****************
 20102 ;; Defined at:
 20103 ;;		line 67 in file "ringbufs.c"
 20104 ;; Parameters:    Size  Location     Type
 20105 ;;  _this           2  [STACK] PTR struct ringBufS_t
 20106 ;;		 -> ring_buf1(67), 
 20107 ;;  c               1  [STACK] const unsigned char 
 20108 ;; Auto vars:     Size  Location     Type
 20109 ;;		None
 20110 ;; Return value:  Size  Location     Type
 20111 ;;                  1  [STACK] void 
 20112 ;; Registers used:
 20113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20114 ;; Tracked objects:
 20115 ;;		On entry : 0/5
 20116 ;;		On exit  : 0/0
 20117 ;;		Unchanged: 0/0
 20118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20123 ;;Total ram usage:        0 bytes
 20124 ;; Hardware stack levels used:    1
 20125 ;; Hardware stack levels required when called:    6
 20126 ;; This function calls:
 20127 ;;		Nothing
 20128 ;; This function is called by:
 20129 ;;		_putch
 20130 ;; This function uses a reentrant model
 20131 ;;
 20132                           
 20133                           	psect	text70
 20134  016EB2                     __ptext70:
 20135                           	opt callstack 0
 20136  016EB2                     _ringBufS_put_dma:
 20137                           	opt callstack 13
 20138                           
 20139                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 20140                           ;stkvar	__this @ sp[(0)+-2]
 20141                           
 20142                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20143                           ;incstack = 0
 20144  016EB2  0EFE               	movlw	-2
 20145  016EB4  006F FF8C  F03C    	movff	plusw1,btemp+10
 20146  016EBA  0EFF               	movlw	-1
 20147  016EBC  006F FF8C  F03D    	movff	plusw1,btemp+11
 20148  016EC2  0E42               	movlw	66
 20149  016EC4  243C               	addwf	(btemp+10)^0,w,c
 20150  016EC6  6ED9               	movwf	fsr2l,c
 20151  016EC8  0E00               	movlw	0
 20152  016ECA  203D               	addwfc	(btemp+11)^0,w,c
 20153  016ECC  6EDA               	movwf	fsr2h,c
 20154  016ECE  0E40               	movlw	64
 20155  016ED0  60DF               	cpfslt	indf2,c
 20156  016ED2  D040               	goto	l1478
 20157                           
 20158                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 20159                           ;stkvar	_c @ sp[(0)+-3]
 20160                           ;stkvar	__this @ sp[(0)+-2]
 20161  016ED4  0EFE               	movlw	-2
 20162  016ED6  006F FF8C  F03C    	movff	plusw1,btemp+10
 20163  016EDC  0EFF               	movlw	-1
 20164  016EDE  006F FF8C  F03D    	movff	plusw1,btemp+11
 20165  016EE4  0E40               	movlw	64
 20166  016EE6  243C               	addwf	(btemp+10)^0,w,c
 20167  016EE8  6ED9               	movwf	fsr2l,c
 20168  016EEA  0E00               	movlw	0
 20169  016EEC  203D               	addwfc	(btemp+11)^0,w,c
 20170  016EEE  6EDA               	movwf	fsr2h,c
 20171  016EF0  50DF               	movf	indf2,w,c
 20172  016EF2  6E3D               	movwf	(btemp+11)^0,c
 20173                           
 20174                           ;stkvar	__this @ sp[(0)+-2]
 20175  016EF4  0EFE               	movlw	-2
 20176  016EF6  006F FF8C  F03A    	movff	plusw1,btemp+8
 20177  016EFC  0EFF               	movlw	-1
 20178  016EFE  006F FF8C  F03B    	movff	plusw1,btemp+9
 20179  016F04  503D               	movf	(btemp+11)^0,w,c
 20180  016F06  243A               	addwf	(btemp+8)^0,w,c
 20181  016F08  6ED9               	movwf	fsr2l,c
 20182  016F0A  0E00               	movlw	0
 20183  016F0C  203B               	addwfc	(btemp+9)^0,w,c
 20184  016F0E  6EDA               	movwf	fsr2h,c
 20185  016F10  0EFD               	movlw	-3
 20186  016F12  006F FF8F FFDF     	movff	plusw1,indf2
 20187                           
 20188                           ;ringbufs.c: 71:   ++_this->head;
 20189                           ;stkvar	__this @ sp[(0)+-2]
 20190  016F18  0EFE               	movlw	-2
 20191  016F1A  006F FF8C  F03C    	movff	plusw1,btemp+10
 20192  016F20  0EFF               	movlw	-1
 20193  016F22  006F FF8C  F03D    	movff	plusw1,btemp+11
 20194  016F28  0E40               	movlw	64
 20195  016F2A  243C               	addwf	(btemp+10)^0,w,c
 20196  016F2C  6ED9               	movwf	fsr2l,c
 20197  016F2E  0E00               	movlw	0
 20198  016F30  203D               	addwfc	(btemp+11)^0,w,c
 20199  016F32  6EDA               	movwf	fsr2h,c
 20200  016F34  2ADF               	incf	indf2,f,c
 20201                           
 20202                           ;ringbufs.c: 72:   ++_this->count;
 20203                           ;stkvar	__this @ sp[(0)+-2]
 20204  016F36  0EFE               	movlw	-2
 20205  016F38  006F FF8C  F03C    	movff	plusw1,btemp+10
 20206  016F3E  0EFF               	movlw	-1
 20207  016F40  006F FF8C  F03D    	movff	plusw1,btemp+11
 20208  016F46  0E42               	movlw	66
 20209  016F48  243C               	addwf	(btemp+10)^0,w,c
 20210  016F4A  6ED9               	movwf	fsr2l,c
 20211  016F4C  0E00               	movlw	0
 20212  016F4E  203D               	addwfc	(btemp+11)^0,w,c
 20213  016F50  6EDA               	movwf	fsr2h,c
 20214  016F52  2ADF               	incf	indf2,f,c
 20215  016F54                     l1478:
 20216                           
 20217                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 20218  016F54  52E5               	movf	postdec1,f,c
 20219  016F56  52E5               	movf	postdec1,f,c
 20220  016F58  52E5               	movf	postdec1,f,c
 20221  016F5A  0012               	return		;funcret
 20222  016F5C                     __end_of_ringBufS_put_dma:
 20223                           	opt callstack 0
 20224                           
 20225 ;; *************** function _atoi *****************
 20226 ;; Defined at:
 20227 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 20228 ;; Parameters:    Size  Location     Type
 20229 ;;  s               2  [STACK] PTR const unsigned char 
 20230 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
 20231 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
 20232 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
 20233 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
 20234 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(17), 
 20235 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
 20236 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 20237 ;; Auto vars:     Size  Location     Type
 20238 ;;  n               2  [STACK] int 
 20239 ;;  neg             2  [STACK] int 
 20240 ;; Return value:  Size  Location     Type
 20241 ;;                  2  [STACK] int 
 20242 ;; Registers used:
 20243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 20244 ;; Tracked objects:
 20245 ;;		On entry : 0/5
 20246 ;;		On exit  : 0/0
 20247 ;;		Unchanged: 0/0
 20248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20253 ;;Total ram usage:        0 bytes
 20254 ;; Hardware stack levels used:    1
 20255 ;; Hardware stack levels required when called:    7
 20256 ;; This function calls:
 20257 ;;		_isdigit
 20258 ;;		_isspace
 20259 ;; This function is called by:
 20260 ;;		_vfpfcnvrt
 20261 ;; This function uses a reentrant model
 20262 ;;
 20263                           
 20264                           	psect	text71
 20265  015082                     __ptext71:
 20266                           	opt callstack 0
 20267  015082                     _atoi:
 20268                           	opt callstack 0
 20269                           
 20270                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20271  015082  0E09               	movlw	9
 20272  015084  26E1               	addwf	fsr1l,f,c
 20273  015086  0E00               	movlw	0
 20274  015088  22E2               	addwfc	fsr1h,f,c
 20275                           
 20276                           ;stkvar	_n @ sp[(-9)+5]
 20277                           
 20278                           ;incstack = 0
 20279  01508A  0EFC               	movlw	-4
 20280  01508C  6AE3               	clrf	plusw1,c
 20281  01508E  0EFD               	movlw	-3
 20282  015090  6AE3               	clrf	plusw1,c
 20283                           
 20284                           ;stkvar	_neg @ sp[(-9)+7]
 20285  015092  0EFE               	movlw	-2
 20286  015094  6AE3               	clrf	plusw1,c
 20287  015096  0EFF               	movlw	-1
 20288  015098  6AE3               	clrf	plusw1,c
 20289  01509A  D011               	goto	l10850
 20290  01509C                     l10848:
 20291                           
 20292                           ;stkvar	_s @ sp[(-9)+-2]
 20293  01509C  0EF5               	movlw	-11
 20294  01509E  50E3               	movf	plusw1,w,c
 20295  0150A0  0F01               	addlw	1
 20296  0150A2  6E32               	movwf	btemp^0,c
 20297  0150A4  0EF5               	movlw	-11
 20298  0150A6  0060  F0CB  FFE3   	movff	btemp,plusw1
 20299  0150AC  6A32               	clrf	btemp^0,c
 20300  0150AE  0EF6               	movlw	-10
 20301  0150B0  50E3               	movf	plusw1,w,c
 20302  0150B2  2032               	addwfc	btemp^0,w,c
 20303  0150B4  6E32               	movwf	btemp^0,c
 20304  0150B6  0EF6               	movlw	-10
 20305  0150B8  0060  F0CB  FFE3   	movff	btemp,plusw1
 20306  0150BE                     l10850:
 20307                           
 20308                           ;stkvar	_atoi$4908 @ sp[(-9)+4]
 20309  0150BE  0EFB               	movlw	-5
 20310  0150C0  6AE3               	clrf	plusw1,c
 20311  0150C2  2AE3               	incf	plusw1,f,c
 20312                           
 20313                           ;stkvar	_s @ sp[(-9)+-2]
 20314  0150C4  50E1               	movf	fsr1l,w,c
 20315  0150C6  0FF5               	addlw	-11
 20316  0150C8  6ED9               	movwf	fsr2l,c
 20317  0150CA  50E2               	movf	fsr1h,w,c
 20318  0150CC  6EDA               	movwf	fsr2h,c
 20319  0150CE  0EFF               	movlw	255
 20320  0150D0  22DA               	addwfc	fsr2h,f,c
 20321  0150D2  006F FF7B FFF6     	movff	postinc2,tblptrl
 20322  0150D8  006F FF77 FFF7     	movff	postdec2,tblptrh
 20323  0150DE                     	if	0	;tblptru may be non-zero
 20324  0150DE                     	endif
 20325  0150DE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20326  0150DE  0E00               	movlw	low (__mediumconst shr (0+16))
 20327  0150E0  6EF8               	movwf	tblptru,c
 20328  0150E2                     	endif
 20329  0150E2  0008               	tblrd		*
 20330  0150E4  50F5               	movf	tablat,w,c
 20331  0150E6  0A20               	xorlw	32
 20332  0150E8  B4D8               	btfsc	status,2,c
 20333  0150EA  D023               	goto	l10858
 20334  0150EC  0EF7               	movlw	247
 20335  0150EE  6E3C               	movwf	(btemp+10)^0,c
 20336  0150F0  0EFF               	movlw	255
 20337  0150F2  6E3D               	movwf	(btemp+11)^0,c
 20338                           
 20339                           ;stkvar	_s @ sp[(-9)+-2]
 20340  0150F4  50E1               	movf	fsr1l,w,c
 20341  0150F6  0FF5               	addlw	-11
 20342  0150F8  6ED9               	movwf	fsr2l,c
 20343  0150FA  50E2               	movf	fsr1h,w,c
 20344  0150FC  6EDA               	movwf	fsr2h,c
 20345  0150FE  0EFF               	movlw	255
 20346  015100  22DA               	addwfc	fsr2h,f,c
 20347  015102  006F FF7B FFF6     	movff	postinc2,tblptrl
 20348  015108  006F FF77 FFF7     	movff	postdec2,tblptrh
 20349  01510E                     	if	0	;tblptru may be non-zero
 20350  01510E                     	endif
 20351  01510E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20352  01510E  0E00               	movlw	low (__mediumconst shr (0+16))
 20353  015110  6EF8               	movwf	tblptru,c
 20354  015112                     	endif
 20355  015112  0008               	tblrd		*
 20356  015114  50F5               	movf	tablat,w,c
 20357  015116  6E3A               	movwf	(btemp+8)^0,c
 20358  015118  6A3B               	clrf	(btemp+9)^0,c
 20359  01511A  503C               	movf	(btemp+10)^0,w,c
 20360  01511C  263A               	addwf	(btemp+8)^0,f,c
 20361  01511E  503D               	movf	(btemp+11)^0,w,c
 20362  015120  223B               	addwfc	(btemp+9)^0,f,c
 20363  015122  503B               	movf	(btemp+9)^0,w,c
 20364  015124  E104               	bnz	u11700
 20365  015126  0E05               	movlw	5
 20366  015128  5C3A               	subwf	(btemp+8)^0,w,c
 20367  01512A  A0D8               	btfss	status,0,c
 20368  01512C  D002               	goto	l10858
 20369  01512E                     u11700:
 20370                           
 20371                           ;stkvar	_atoi$4908 @ sp[(-9)+4]
 20372  01512E  0EFB               	movlw	-5
 20373  015130  6AE3               	clrf	plusw1,c
 20374  015132                     l10858:
 20375                           
 20376                           ;stkvar	_atoi$4908 @ sp[(-9)+4]
 20377  015132  0EFB               	movlw	-5
 20378  015134  50E3               	movf	plusw1,w,c
 20379  015136  6E3C               	movwf	(btemp+10)^0,c
 20380  015138  6A3D               	clrf	(btemp+11)^0,c
 20381                           
 20382                           ;stkvar	_atoi$4907 @ sp[(-9)+2]
 20383  01513A  0EF9               	movlw	-7
 20384  01513C  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20385  015142  0EFA               	movlw	-6
 20386  015144  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20387                           
 20388                           ;stkvar	_atoi$4907 @ sp[(-9)+2]
 20389  01514A  0EF9               	movlw	-7
 20390  01514C  006F FF8C  F032    	movff	plusw1,btemp
 20391  015152  0EFA               	movlw	-6
 20392  015154  50E3               	movf	plusw1,w,c
 20393  015156  1032               	iorwf	btemp^0,w,c
 20394  015158  B4D8               	btfsc	status,2,c
 20395  01515A  D01F               	goto	l10868
 20396  01515C  D79F               	goto	l10848
 20397  01515E                     l10864:
 20398  01515E  0E01               	movlw	1
 20399  015160  6E3C               	movwf	(btemp+10)^0,c
 20400  015162  0E00               	movlw	0
 20401  015164  6E3D               	movwf	(btemp+11)^0,c
 20402                           
 20403                           ;stkvar	_neg @ sp[(-9)+7]
 20404  015166  0EFE               	movlw	-2
 20405  015168  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20406  01516E  0EFF               	movlw	-1
 20407  015170  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20408  015176                     l10866:
 20409                           
 20410                           ;stkvar	_s @ sp[(-9)+-2]
 20411  015176  0EF5               	movlw	-11
 20412  015178  50E3               	movf	plusw1,w,c
 20413  01517A  0F01               	addlw	1
 20414  01517C  6E32               	movwf	btemp^0,c
 20415  01517E  0EF5               	movlw	-11
 20416  015180  0060  F0CB  FFE3   	movff	btemp,plusw1
 20417  015186  6A32               	clrf	btemp^0,c
 20418  015188  0EF6               	movlw	-10
 20419  01518A  50E3               	movf	plusw1,w,c
 20420  01518C  2032               	addwfc	btemp^0,w,c
 20421  01518E  6E32               	movwf	btemp^0,c
 20422  015190  0EF6               	movlw	-10
 20423  015192  0060  F0CB  FFE3   	movff	btemp,plusw1
 20424  015198  D053               	goto	l10874
 20425  01519A                     l10868:
 20426                           
 20427                           ;stkvar	_s @ sp[(-9)+-2]
 20428  01519A  50E1               	movf	fsr1l,w,c
 20429  01519C  0FF5               	addlw	-11
 20430  01519E  6ED9               	movwf	fsr2l,c
 20431  0151A0  50E2               	movf	fsr1h,w,c
 20432  0151A2  6EDA               	movwf	fsr2h,c
 20433  0151A4  0EFF               	movlw	255
 20434  0151A6  22DA               	addwfc	fsr2h,f,c
 20435  0151A8  006F FF7B FFF6     	movff	postinc2,tblptrl
 20436  0151AE  006F FF77 FFF7     	movff	postdec2,tblptrh
 20437  0151B4                     	if	0	;tblptru may be non-zero
 20438  0151B4                     	endif
 20439  0151B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20440  0151B4  0E00               	movlw	low (__mediumconst shr (0+16))
 20441  0151B6  6EF8               	movwf	tblptru,c
 20442  0151B8                     	endif
 20443  0151B8  0008               	tblrd		*
 20444  0151BA  50F5               	movf	tablat,w,c
 20445  0151BC  6E3C               	movwf	(btemp+10)^0,c
 20446  0151BE  6A3D               	clrf	(btemp+11)^0,c
 20447                           
 20448                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 20449                           ; Switch size 1, requested type "simple"
 20450                           ; Number of cases is 1, Range of values is 0 to 0
 20451                           ; switch strategies available:
 20452                           ; Name         Instructions Cycles
 20453                           ; simple_byte            4     3 (average)
 20454                           ;	Chosen strategy is simple_byte
 20455  0151C0  503D               	movf	(btemp+11)^0,w,c
 20456  0151C2  0A00               	xorlw	0	; case 0
 20457  0151C4  A4D8               	btfss	status,2,c
 20458  0151C6  D03C               	goto	l10874
 20459                           
 20460                           ; Switch size 1, requested type "simple"
 20461                           ; Number of cases is 2, Range of values is 43 to 45
 20462                           ; switch strategies available:
 20463                           ; Name         Instructions Cycles
 20464                           ; simple_byte            7     4 (average)
 20465                           ;	Chosen strategy is simple_byte
 20466  0151C8  503C               	movf	(btemp+10)^0,w,c
 20467  0151CA  0A2B               	xorlw	43	; case 43
 20468  0151CC  B4D8               	btfsc	status,2,c
 20469  0151CE  D7D3               	goto	l10866
 20470  0151D0  0A06               	xorlw	6	; case 45
 20471  0151D2  B4D8               	btfsc	status,2,c
 20472  0151D4  D7C4               	goto	l10864
 20473  0151D6  D034               	goto	l10874
 20474  0151D8                     l10870:
 20475                           
 20476                           ;stkvar	_n @ sp[(-9)+5]
 20477  0151D8  0EFC               	movlw	-4
 20478  0151DA  006F FF8C  F03C    	movff	plusw1,btemp+10
 20479  0151E0  0EFD               	movlw	-3
 20480  0151E2  006F FF8C  F03D    	movff	plusw1,btemp+11
 20481  0151E8  0E0A               	movlw	10
 20482  0151EA  023C               	mulwf	(btemp+10)^0,c
 20483  0151EC  006F FFCC  F03A    	movff	prodl,btemp+8
 20484  0151F2  006F FFD0  F03B    	movff	prodh,btemp+9
 20485  0151F8  023D               	mulwf	(btemp+11)^0,c
 20486  0151FA  50F3               	movf	prodl,w,c
 20487  0151FC  263B               	addwf	(btemp+9)^0,f,c
 20488                           
 20489                           ;stkvar	_s @ sp[(-9)+-2]
 20490  0151FE  50E1               	movf	fsr1l,w,c
 20491  015200  0FF5               	addlw	-11
 20492  015202  6ED9               	movwf	fsr2l,c
 20493  015204  50E2               	movf	fsr1h,w,c
 20494  015206  6EDA               	movwf	fsr2h,c
 20495  015208  0EFF               	movlw	255
 20496  01520A  22DA               	addwfc	fsr2h,f,c
 20497  01520C  006F FF7B FFF6     	movff	postinc2,tblptrl
 20498  015212  006F FF77 FFF7     	movff	postdec2,tblptrh
 20499  015218                     	if	0	;tblptru may be non-zero
 20500  015218                     	endif
 20501  015218                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20502  015218  0E00               	movlw	low (__mediumconst shr (0+16))
 20503  01521A  6EF8               	movwf	tblptru,c
 20504  01521C                     	endif
 20505  01521C  0008               	tblrd		*
 20506  01521E  50F5               	movf	tablat,w,c
 20507  015220  5E3A               	subwf	(btemp+8)^0,f,c
 20508  015222  0E00               	movlw	0
 20509  015224  5A3B               	subwfb	(btemp+9)^0,f,c
 20510  015226  0E30               	movlw	48
 20511  015228  263A               	addwf	(btemp+8)^0,f,c
 20512  01522A  0E00               	movlw	0
 20513  01522C  223B               	addwfc	(btemp+9)^0,f,c
 20514                           
 20515                           ;stkvar	_n @ sp[(-9)+5]
 20516  01522E  0EFC               	movlw	-4
 20517  015230  0060  F0EB  FFE3   	movff	btemp+8,plusw1
 20518  015236  0EFD               	movlw	-3
 20519  015238  0060  F0EF  FFE3   	movff	btemp+9,plusw1
 20520  01523E  D79B               	goto	l10866
 20521  015240                     l10874:
 20522  015240  0ED0               	movlw	208
 20523  015242  6E3C               	movwf	(btemp+10)^0,c
 20524  015244  0EFF               	movlw	255
 20525  015246  6E3D               	movwf	(btemp+11)^0,c
 20526                           
 20527                           ;stkvar	_s @ sp[(-9)+-2]
 20528  015248  50E1               	movf	fsr1l,w,c
 20529  01524A  0FF5               	addlw	-11
 20530  01524C  6ED9               	movwf	fsr2l,c
 20531  01524E  50E2               	movf	fsr1h,w,c
 20532  015250  6EDA               	movwf	fsr2h,c
 20533  015252  0EFF               	movlw	255
 20534  015254  22DA               	addwfc	fsr2h,f,c
 20535  015256  006F FF7B FFF6     	movff	postinc2,tblptrl
 20536  01525C  006F FF77 FFF7     	movff	postdec2,tblptrh
 20537  015262                     	if	0	;tblptru may be non-zero
 20538  015262                     	endif
 20539  015262                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 20540  015262  0E00               	movlw	low (__mediumconst shr (0+16))
 20541  015264  6EF8               	movwf	tblptru,c
 20542  015266                     	endif
 20543  015266  0008               	tblrd		*
 20544  015268  50F5               	movf	tablat,w,c
 20545  01526A  6E3A               	movwf	(btemp+8)^0,c
 20546  01526C  6A3B               	clrf	(btemp+9)^0,c
 20547  01526E  503C               	movf	(btemp+10)^0,w,c
 20548  015270  263A               	addwf	(btemp+8)^0,f,c
 20549  015272  503D               	movf	(btemp+11)^0,w,c
 20550  015274  223B               	addwfc	(btemp+9)^0,f,c
 20551  015276  503B               	movf	(btemp+9)^0,w,c
 20552  015278  E106               	bnz	u11720
 20553  01527A  0E0A               	movlw	10
 20554  01527C  5C3A               	subwf	(btemp+8)^0,w,c
 20555  01527E  B0D8               	btfsc	status,0,c
 20556  015280  D002               	goto	u11720
 20557  015282  0E01               	movlw	1
 20558  015284  D001               	goto	u11730
 20559  015286                     u11720:
 20560  015286  0E00               	movlw	0
 20561  015288                     u11730:
 20562  015288  6E3C               	movwf	(btemp+10)^0,c
 20563  01528A  6A3D               	clrf	(btemp+11)^0,c
 20564                           
 20565                           ;stkvar	_atoi$4909 @ sp[(-9)+0]
 20566  01528C  0EF7               	movlw	-9
 20567  01528E  0060  F0F3  FFE3   	movff	btemp+10,plusw1
 20568  015294  0EF8               	movlw	-8
 20569  015296  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 20570                           
 20571                           ;stkvar	_atoi$4909 @ sp[(-9)+0]
 20572  01529C  0EF7               	movlw	-9
 20573  01529E  006F FF8C  F032    	movff	plusw1,btemp
 20574  0152A4  0EF8               	movlw	-8
 20575  0152A6  50E3               	movf	plusw1,w,c
 20576  0152A8  1032               	iorwf	btemp^0,w,c
 20577  0152AA  A4D8               	btfss	status,2,c
 20578  0152AC  D795               	goto	l10870
 20579                           
 20580                           ;stkvar	_neg @ sp[(-9)+7]
 20581  0152AE  0EFE               	movlw	-2
 20582  0152B0  006F FF8C  F032    	movff	plusw1,btemp
 20583  0152B6  0EFF               	movlw	-1
 20584  0152B8  50E3               	movf	plusw1,w,c
 20585  0152BA  1032               	iorwf	btemp^0,w,c
 20586  0152BC  A4D8               	btfss	status,2,c
 20587  0152BE  D00E               	goto	l10884
 20588                           
 20589                           ;stkvar	_n @ sp[(-9)+5]
 20590  0152C0  0EFC               	movlw	-4
 20591  0152C2  006F FF8C  F032    	movff	plusw1,btemp
 20592  0152C8  1E32               	comf	btemp^0,f,c
 20593  0152CA  0EFD               	movlw	-3
 20594  0152CC  006F FF8C  F033    	movff	plusw1,btemp+1
 20595  0152D2  1E33               	comf	(btemp+1)^0,f,c
 20596  0152D4  2A32               	incf	btemp^0,f,c
 20597  0152D6  B4D8               	btfsc	status,2,c
 20598  0152D8  2A33               	incf	(btemp+1)^0,f,c
 20599  0152DA  D008               	goto	l2769
 20600  0152DC                     l10884:
 20601                           
 20602                           ;stkvar	_n @ sp[(-9)+5]
 20603  0152DC  0EFC               	movlw	-4
 20604  0152DE  006F FF8C  F032    	movff	plusw1,btemp
 20605  0152E4  0EFD               	movlw	-3
 20606  0152E6  006F FF8C  F033    	movff	plusw1,btemp+1
 20607  0152EC                     l2769:
 20608                           
 20609                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 20610  0152EC  0EF5               	movlw	245
 20611  0152EE  26E1               	addwf	fsr1l,f,c
 20612  0152F0  0EFF               	movlw	255
 20613  0152F2  22E2               	addwfc	fsr1h,f,c
 20614  0152F4  0012               	return		;funcret
 20615  0152F6                     __end_of_atoi:
 20616                           	opt callstack 0
 20617                           
 20618 ;; *************** function _isspace *****************
 20619 ;; Defined at:
 20620 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 20621 ;; Parameters:    Size  Location     Type
 20622 ;;  c               2  [STACK] int 
 20623 ;; Auto vars:     Size  Location     Type
 20624 ;;		None
 20625 ;; Return value:  Size  Location     Type
 20626 ;;                  2  [STACK] int 
 20627 ;; Registers used:
 20628 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20629 ;; Tracked objects:
 20630 ;;		On entry : 0/0
 20631 ;;		On exit  : 0/0
 20632 ;;		Unchanged: 0/0
 20633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20638 ;;Total ram usage:        0 bytes
 20639 ;; Hardware stack levels used:    1
 20640 ;; Hardware stack levels required when called:    6
 20641 ;; This function calls:
 20642 ;;		Nothing
 20643 ;; This function is called by:
 20644 ;;		_atoi
 20645 ;; This function uses a reentrant model
 20646 ;;
 20647                           
 20648                           	psect	text72
 20649  017A7C                     __ptext72:
 20650                           	opt callstack 0
 20651  017A7C                     _isspace:
 20652                           	opt callstack 0
 20653                           
 20654                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20655  017A7C  52E6               	movf	postinc1,f,c
 20656                           
 20657                           ;stkvar	_isspace$4947 @ sp[(-1)+0]
 20658                           
 20659                           ;incstack = 0
 20660  017A7E  0EFF               	movlw	-1
 20661  017A80  6AE3               	clrf	plusw1,c
 20662  017A82  2AE3               	incf	plusw1,f,c
 20663                           
 20664                           ;stkvar	_c @ sp[(-1)+-2]
 20665  017A84  0EFD               	movlw	-3
 20666  017A86  006F FF8C  F032    	movff	plusw1,btemp
 20667  017A8C  0E20               	movlw	32
 20668  017A8E  1832               	xorwf	btemp^0,w,c
 20669  017A90  E104               	bnz	u10690
 20670  017A92  0EFE               	movlw	-2
 20671  017A94  50E3               	movf	plusw1,w,c
 20672  017A96  B4D8               	btfsc	status,2,c
 20673  017A98  D012               	goto	l10334
 20674  017A9A                     u10690:
 20675                           
 20676                           ;stkvar	_c @ sp[(-1)+-2]
 20677  017A9A  0EFD               	movlw	-3
 20678  017A9C  50E3               	movf	plusw1,w,c
 20679  017A9E  0FF7               	addlw	247
 20680  017AA0  6E3C               	movwf	(btemp+10)^0,c
 20681  017AA2  0EFE               	movlw	-2
 20682  017AA4  006F FF8C  F03D    	movff	plusw1,btemp+11
 20683  017AAA  0EFF               	movlw	255
 20684  017AAC  223D               	addwfc	(btemp+11)^0,f,c
 20685  017AAE  503D               	movf	(btemp+11)^0,w,c
 20686  017AB0  E104               	bnz	u10700
 20687  017AB2  0E05               	movlw	5
 20688  017AB4  5C3C               	subwf	(btemp+10)^0,w,c
 20689  017AB6  A0D8               	btfss	status,0,c
 20690  017AB8  D002               	goto	l10334
 20691  017ABA                     u10700:
 20692                           
 20693                           ;stkvar	_isspace$4947 @ sp[(-1)+0]
 20694  017ABA  0EFF               	movlw	-1
 20695  017ABC  6AE3               	clrf	plusw1,c
 20696  017ABE                     l10334:
 20697                           
 20698                           ;stkvar	_isspace$4947 @ sp[(-1)+0]
 20699  017ABE  0EFF               	movlw	-1
 20700  017AC0  50E3               	movf	plusw1,w,c
 20701  017AC2  6E32               	movwf	btemp^0,c
 20702  017AC4  6A33               	clrf	(btemp+1)^0,c
 20703                           
 20704                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20705  017AC6  52E5               	movf	postdec1,f,c
 20706  017AC8  52E5               	movf	postdec1,f,c
 20707  017ACA  52E5               	movf	postdec1,f,c
 20708  017ACC  0012               	return		;funcret
 20709  017ACE                     __end_of_isspace:
 20710                           	opt callstack 0
 20711                           
 20712 ;; *************** function _isdigit *****************
 20713 ;; Defined at:
 20714 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 20715 ;; Parameters:    Size  Location     Type
 20716 ;;  c               2  [STACK] int 
 20717 ;; Auto vars:     Size  Location     Type
 20718 ;;		None
 20719 ;; Return value:  Size  Location     Type
 20720 ;;                  2  [STACK] int 
 20721 ;; Registers used:
 20722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 20723 ;; Tracked objects:
 20724 ;;		On entry : 0/0
 20725 ;;		On exit  : 0/0
 20726 ;;		Unchanged: 0/0
 20727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20732 ;;Total ram usage:        0 bytes
 20733 ;; Hardware stack levels used:    1
 20734 ;; Hardware stack levels required when called:    6
 20735 ;; This function calls:
 20736 ;;		Nothing
 20737 ;; This function is called by:
 20738 ;;		_vfpfcnvrt
 20739 ;;		_atoi
 20740 ;; This function uses a reentrant model
 20741 ;;
 20742                           
 20743                           	psect	text73
 20744  017F22                     __ptext73:
 20745                           	opt callstack 0
 20746  017F22                     _isdigit:
 20747                           	opt callstack 18
 20748                           
 20749                           ;stkvar	_c @ sp[(0)+-2]
 20750                           
 20751                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20752                           ;incstack = 0
 20753  017F22  0EFE               	movlw	-2
 20754  017F24  50E3               	movf	plusw1,w,c
 20755  017F26  0FD0               	addlw	208
 20756  017F28  6E3C               	movwf	(btemp+10)^0,c
 20757  017F2A  0EFF               	movlw	-1
 20758  017F2C  006F FF8C  F03D    	movff	plusw1,btemp+11
 20759  017F32  0EFF               	movlw	255
 20760  017F34  223D               	addwfc	(btemp+11)^0,f,c
 20761  017F36  503D               	movf	(btemp+11)^0,w,c
 20762  017F38  E106               	bnz	u9650
 20763  017F3A  0E0A               	movlw	10
 20764  017F3C  5C3C               	subwf	(btemp+10)^0,w,c
 20765  017F3E  B0D8               	btfsc	status,0,c
 20766  017F40  D002               	goto	u9650
 20767  017F42  0E01               	movlw	1
 20768  017F44  D001               	goto	u9660
 20769  017F46                     u9650:
 20770  017F46  0E00               	movlw	0
 20771  017F48                     u9660:
 20772  017F48  6E32               	movwf	btemp^0,c
 20773  017F4A  6A33               	clrf	(btemp+1)^0,c
 20774                           
 20775                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 20776  017F4C  52E5               	movf	postdec1,f,c
 20777  017F4E  52E5               	movf	postdec1,f,c
 20778  017F50  0012               	return		;funcret
 20779  017F52                     __end_of_isdigit:
 20780                           	opt callstack 0
 20781                           
 20782 ;; *************** function _set_vterm *****************
 20783 ;; Defined at:
 20784 ;;		line 107 in file "mconfig.c"
 20785 ;; Parameters:    Size  Location     Type
 20786 ;;  vterm           1  [STACK] const unsigned char 
 20787 ;; Auto vars:     Size  Location     Type
 20788 ;;		None
 20789 ;; Return value:  Size  Location     Type
 20790 ;;                  1  [STACK] unsigned char 
 20791 ;; Registers used:
 20792 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 20793 ;; Tracked objects:
 20794 ;;		On entry : 0/1
 20795 ;;		On exit  : 3F/5
 20796 ;;		Unchanged: 0/0
 20797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20802 ;;Total ram usage:        0 bytes
 20803 ;; Hardware stack levels used:    1
 20804 ;; Hardware stack levels required when called:    6
 20805 ;; This function calls:
 20806 ;;		Nothing
 20807 ;; This function is called by:
 20808 ;;		_main
 20809 ;;		_check_help
 20810 ;; This function uses a reentrant model
 20811 ;;
 20812                           
 20813                           	psect	text74
 20814  0184D8                     __ptext74:
 20815                           	opt callstack 0
 20816  0184D8                     _set_vterm:
 20817                           	opt callstack 24
 20818                           
 20819                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 20820                           ;stkvar	_vterm @ sp[(0)+-1]
 20821                           
 20822                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20823                           ;incstack = 0
 20824  0184D8  0EFF               	movlw	-1
 20825  0184DA  006F FF8C  F03D    	movff	plusw1,btemp+11
 20826  0184E0  0E03               	movlw	3
 20827  0184E2  163D               	andwf	(btemp+11)^0,f,c
 20828  0184E4  0105               	movlb	5	; () banked
 20829  0184E6  51D8               	movf	(_D+216)& (0+255),w,b
 20830  0184E8  183D               	xorwf	(btemp+11)^0,w,c
 20831  0184EA  0BFE               	andlw	-2
 20832  0184EC  183D               	xorwf	(btemp+11)^0,w,c
 20833  0184EE  6FD8               	movwf	(_D+216)& (0+255),b
 20834                           
 20835                           ; BSR set to: 5
 20836                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 20837  0184F0  52E5               	movf	postdec1,f,c
 20838  0184F2  0012               	return		;funcret
 20839  0184F4                     __end_of_set_vterm:
 20840                           	opt callstack 0
 20841                           
 20842 ;; *************** function _set_temp_display_help *****************
 20843 ;; Defined at:
 20844 ;;		line 211 in file "mconfig.c"
 20845 ;; Parameters:    Size  Location     Type
 20846 ;;  new_response    1  [STACK] const enum E16501
 20847 ;; Auto vars:     Size  Location     Type
 20848 ;;		None
 20849 ;; Return value:  Size  Location     Type
 20850 ;;                  1  [STACK] enum E16501
 20851 ;; Registers used:
 20852 ;;		wreg, fsr1l, fsr1h
 20853 ;; Tracked objects:
 20854 ;;		On entry : 0/5
 20855 ;;		On exit  : 3F/1
 20856 ;;		Unchanged: 0/0
 20857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20862 ;;Total ram usage:        0 bytes
 20863 ;; Hardware stack levels used:    1
 20864 ;; Hardware stack levels required when called:    6
 20865 ;; This function calls:
 20866 ;;		Nothing
 20867 ;; This function is called by:
 20868 ;;		_check_help
 20869 ;; This function uses a reentrant model
 20870 ;;
 20871                           
 20872                           	psect	text75
 20873  0185D2                     __ptext75:
 20874                           	opt callstack 0
 20875  0185D2                     _set_temp_display_help:
 20876                           	opt callstack 23
 20877                           
 20878                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 20879                           
 20880                           ; BSR set to: 5
 20881                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20882                           ;incstack = 0
 20883  0185D2  0101               	movlb	1	; () banked
 20884  0185D4  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 20885                           
 20886                           ; BSR set to: 1
 20887                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 20888                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20889  0185D6  0EFF               	movlw	-1
 20890  0185D8  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 20891                           
 20892                           ; BSR set to: 1
 20893                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 20894  0185DE  52E5               	movf	postdec1,f,c
 20895  0185E0  0012               	return		;funcret
 20896  0185E2                     __end_of_set_temp_display_help:
 20897                           	opt callstack 0
 20898                           
 20899 ;; *************** function _set_display_info *****************
 20900 ;; Defined at:
 20901 ;;		line 200 in file "mconfig.c"
 20902 ;; Parameters:    Size  Location     Type
 20903 ;;  new_response    1  [STACK] const enum E16501
 20904 ;; Auto vars:     Size  Location     Type
 20905 ;;		None
 20906 ;; Return value:  Size  Location     Type
 20907 ;;                  1  [STACK] enum E16986
 20908 ;; Registers used:
 20909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 20910 ;; Tracked objects:
 20911 ;;		On entry : 0/39
 20912 ;;		On exit  : 0/0
 20913 ;;		Unchanged: 0/0
 20914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20919 ;;Total ram usage:        0 bytes
 20920 ;; Hardware stack levels used:    1
 20921 ;; Hardware stack levels required when called:    7
 20922 ;; This function calls:
 20923 ;;		_TimerDone
 20924 ;; This function is called by:
 20925 ;;		_main
 20926 ;;		_check_help
 20927 ;; This function uses a reentrant model
 20928 ;;
 20929                           
 20930                           	psect	text76
 20931  018462                     __ptext76:
 20932                           	opt callstack 0
 20933  018462                     _set_display_info:
 20934                           	opt callstack 23
 20935                           
 20936                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 20937                           
 20938                           ; BSR set to: 1
 20939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20940                           ;incstack = 0
 20941  018462  0E07               	movlw	7
 20942  018464  6EE6               	movwf	postinc1,c
 20943  018466  ECAB  F0C1         	call	_TimerDone	;wreg free
 20944  01846A  5032               	movf	btemp^0,w,c
 20945  01846C  B4D8               	btfsc	status,2,c
 20946  01846E  D006               	goto	l1615
 20947                           
 20948                           ;mconfig.c: 205:   old_info = V.response.info;
 20949  018470  0101               	movlb	1	; () banked
 20950  018472  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 20951                           
 20952                           ; BSR set to: 1
 20953                           ;mconfig.c: 206:   V.response.info = new_response_info;
 20954                           ;stkvar	_new_response_info @ sp[(0)+-1]
 20955  018474  0EFF               	movlw	-1
 20956  018476  006F FF8C  F1A3    	movff	plusw1,_V+163	;volatile
 20957  01847C                     l1615:
 20958                           
 20959                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 20960  01847C  52E5               	movf	postdec1,f,c
 20961  01847E  0012               	return		;funcret
 20962  018480                     __end_of_set_display_info:
 20963                           	opt callstack 0
 20964                           
 20965 ;; *************** function _mode_lamp_dim *****************
 20966 ;; Defined at:
 20967 ;;		line 13 in file "mconfig.c"
 20968 ;; Parameters:    Size  Location     Type
 20969 ;;  level           2  [STACK] const unsigned short 
 20970 ;; Auto vars:     Size  Location     Type
 20971 ;;		None
 20972 ;; Return value:  Size  Location     Type
 20973 ;;                  1  [STACK] void 
 20974 ;; Registers used:
 20975 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 20976 ;; Tracked objects:
 20977 ;;		On entry : 0/1
 20978 ;;		On exit  : 0/0
 20979 ;;		Unchanged: 0/0
 20980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20985 ;;Total ram usage:        0 bytes
 20986 ;; Hardware stack levels used:    1
 20987 ;; Hardware stack levels required when called:    7
 20988 ;; This function calls:
 20989 ;;		_PWM8_LoadDutyValue
 20990 ;; This function is called by:
 20991 ;;		_main
 20992 ;;		_check_help
 20993 ;; This function uses a reentrant model
 20994 ;;
 20995                           
 20996                           	psect	text77
 20997  01852A                     __ptext77:
 20998                           	opt callstack 0
 20999  01852A                     _mode_lamp_dim:
 21000                           	opt callstack 23
 21001                           
 21002                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 21003                           ;stkvar	_level @ sp[(0)+-2]
 21004                           
 21005                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21006                           ;incstack = 0
 21007  01852A  0EFE               	movlw	-2
 21008  01852C  006F FF8F FFE6     	movff	plusw1,postinc1
 21009  018532  006F FF8F FFE6     	movff	plusw1,postinc1
 21010  018538  EC5C  F0BE         	call	_PWM8_LoadDutyValue	;wreg free
 21011                           
 21012                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 21013  01853C  52E5               	movf	postdec1,f,c
 21014  01853E  52E5               	movf	postdec1,f,c
 21015  018540  0012               	return		;funcret
 21016  018542                     __end_of_mode_lamp_dim:
 21017                           	opt callstack 0
 21018                           
 21019 ;; *************** function _mode_lamp_bright *****************
 21020 ;; Defined at:
 21021 ;;		line 18 in file "mconfig.c"
 21022 ;; Parameters:    Size  Location     Type
 21023 ;;		None
 21024 ;; Auto vars:     Size  Location     Type
 21025 ;;		None
 21026 ;; Return value:  Size  Location     Type
 21027 ;;                  1  [STACK] void 
 21028 ;; Registers used:
 21029 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21030 ;; Tracked objects:
 21031 ;;		On entry : 0/1
 21032 ;;		On exit  : 0/0
 21033 ;;		Unchanged: 0/0
 21034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21039 ;;Total ram usage:        0 bytes
 21040 ;; Hardware stack levels used:    1
 21041 ;; Hardware stack levels required when called:    7
 21042 ;; This function calls:
 21043 ;;		_PWM8_LoadDutyValue
 21044 ;; This function is called by:
 21045 ;;		_check_help
 21046 ;; This function uses a reentrant model
 21047 ;;
 21048                           
 21049                           	psect	text78
 21050  0185F0                     __ptext78:
 21051                           	opt callstack 0
 21052  0185F0                     _mode_lamp_bright:
 21053                           	opt callstack 22
 21054                           
 21055                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 21056                           
 21057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21058                           ;incstack = 0
 21059  0185F0  0E2C               	movlw	44
 21060  0185F2  6EE6               	movwf	postinc1,c
 21061  0185F4  0E01               	movlw	1
 21062  0185F6  6EE6               	movwf	postinc1,c
 21063  0185F8  EC5C  F0BE         	call	_PWM8_LoadDutyValue	;wreg free
 21064                           
 21065                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21066  0185FC  0012               	return		;funcret
 21067  0185FE                     __end_of_mode_lamp_bright:
 21068                           	opt callstack 0
 21069                           
 21070 ;; *************** function _PWM8_LoadDutyValue *****************
 21071 ;; Defined at:
 21072 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 21073 ;; Parameters:    Size  Location     Type
 21074 ;;  dutyValue       2  [STACK] unsigned short 
 21075 ;; Auto vars:     Size  Location     Type
 21076 ;;		None
 21077 ;; Return value:  Size  Location     Type
 21078 ;;                  1  [STACK] void 
 21079 ;; Registers used:
 21080 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21081 ;; Tracked objects:
 21082 ;;		On entry : 0/1
 21083 ;;		On exit  : 0/0
 21084 ;;		Unchanged: 0/0
 21085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21090 ;;Total ram usage:        0 bytes
 21091 ;; Hardware stack levels used:    1
 21092 ;; Hardware stack levels required when called:    6
 21093 ;; This function calls:
 21094 ;;		Nothing
 21095 ;; This function is called by:
 21096 ;;		_mode_lamp_dim
 21097 ;;		_mode_lamp_bright
 21098 ;; This function uses a reentrant model
 21099 ;;
 21100                           
 21101                           	psect	text79
 21102  017CB8                     __ptext79:
 21103                           	opt callstack 0
 21104  017CB8                     _PWM8_LoadDutyValue:
 21105                           	opt callstack 23
 21106                           
 21107                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 21108                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21109                           
 21110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21111                           ;incstack = 0
 21112  017CB8  0EFE               	movlw	-2
 21113  017CBA  006F FF8C  F03C    	movff	plusw1,btemp+10
 21114  017CC0  0EFF               	movlw	-1
 21115  017CC2  006F FF8C  F03D    	movff	plusw1,btemp+11
 21116  017CC8  90D8               	bcf	status,0,c
 21117  017CCA  323D               	rrcf	(btemp+11)^0,f,c
 21118  017CCC  323C               	rrcf	(btemp+10)^0,f,c
 21119  017CCE  90D8               	bcf	status,0,c
 21120  017CD0  323D               	rrcf	(btemp+11)^0,f,c
 21121  017CD2  323C               	rrcf	(btemp+10)^0,f,c
 21122  017CD4  503C               	movf	(btemp+10)^0,w,c
 21123  017CD6  6E61               	movwf	97,c	;volatile
 21124                           
 21125                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 21126                           ;stkvar	_dutyValue @ sp[(0)+-2]
 21127  017CD8  0EFE               	movlw	-2
 21128  017CDA  006F FF8C  F03D    	movff	plusw1,btemp+11
 21129  017CE0  0E03               	movlw	3
 21130  017CE2  163D               	andwf	(btemp+11)^0,f,c
 21131  017CE4  0E06               	movlw	6
 21132  017CE6  6E32               	movwf	btemp^0,c
 21133  017CE8                     u12185:
 21134  017CE8  90D8               	bcf	status,0,c
 21135  017CEA  363D               	rlcf	(btemp+11)^0,f,c
 21136  017CEC  2E32               	decfsz	btemp^0,f,c
 21137  017CEE  D7FC               	goto	u12185
 21138  017CF0  503D               	movf	(btemp+11)^0,w,c
 21139  017CF2  6E60               	movwf	96,c	;volatile
 21140                           
 21141                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 21142  017CF4  52E5               	movf	postdec1,f,c
 21143  017CF6  52E5               	movf	postdec1,f,c
 21144  017CF8  0012               	return		;funcret
 21145  017CFA                     __end_of_PWM8_LoadDutyValue:
 21146                           	opt callstack 0
 21147                           
 21148 ;; *************** function _help_button *****************
 21149 ;; Defined at:
 21150 ;;		line 26 in file "mconfig.c"
 21151 ;; Parameters:    Size  Location     Type
 21152 ;;		None
 21153 ;; Auto vars:     Size  Location     Type
 21154 ;;		None
 21155 ;; Return value:  Size  Location     Type
 21156 ;;                  1  [STACK] _Bool 
 21157 ;; Registers used:
 21158 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21159 ;; Tracked objects:
 21160 ;;		On entry : 0/1
 21161 ;;		On exit  : 0/0
 21162 ;;		Unchanged: 0/0
 21163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21168 ;;Total ram usage:        0 bytes
 21169 ;; Hardware stack levels used:    1
 21170 ;; Hardware stack levels required when called:    7
 21171 ;; This function calls:
 21172 ;;		_StartTimer
 21173 ;;		_TimerDone
 21174 ;; This function is called by:
 21175 ;;		_check_help
 21176 ;; This function uses a reentrant model
 21177 ;;
 21178                           
 21179                           	psect	text80
 21180  017DB6                     __ptext80:
 21181                           	opt callstack 0
 21182  017DB6                     _help_button:
 21183                           	opt callstack 22
 21184                           
 21185                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 21186                           
 21187                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21188                           ;incstack = 0
 21189  017DB6  B0CB               	btfsc	203,0,c	;volatile
 21190  017DB8  D00C               	goto	l1558
 21191                           
 21192                           ;mconfig.c: 29:   V.help = 1;
 21193  017DBA  0101               	movlb	1	; () banked
 21194  017DBC  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 21195                           
 21196                           ; BSR set to: 1
 21197                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 21198  017DBE  0E08               	movlw	8
 21199  017DC0  6EE6               	movwf	postinc1,c
 21200  017DC2  ECAB  F0C1         	call	_TimerDone	;wreg free
 21201  017DC6  5032               	movf	btemp^0,w,c
 21202  017DC8  B4D8               	btfsc	status,2,c
 21203  017DCA  D003               	goto	l1558
 21204                           
 21205                           ;mconfig.c: 31:    return 1;
 21206  017DCC  0E01               	movlw	1
 21207  017DCE  6E32               	movwf	btemp^0,c
 21208  017DD0  0012               	return	
 21209  017DD2                     l1558:
 21210                           
 21211                           ;mconfig.c: 34:  if (!V.help)
 21212  017DD2  0101               	movlb	1	; () banked
 21213  017DD4  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 21214  017DD6  D008               	goto	l11756
 21215                           
 21216                           ; BSR set to: 1
 21217                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 21218  017DD8  0E2C               	movlw	44
 21219  017DDA  6EE6               	movwf	postinc1,c
 21220  017DDC  0E01               	movlw	1
 21221  017DDE  6EE6               	movwf	postinc1,c
 21222  017DE0  0E08               	movlw	8
 21223  017DE2  6EE6               	movwf	postinc1,c
 21224  017DE4  ECBD  F0BE         	call	_StartTimer	;wreg free
 21225  017DE8                     l11756:
 21226                           
 21227                           ;mconfig.c: 37:  return 0;
 21228  017DE8  0E00               	movlw	0
 21229  017DEA  6E32               	movwf	btemp^0,c
 21230                           
 21231                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 21232  017DEC  0012               	return		;funcret
 21233  017DEE                     __end_of_help_button:
 21234                           	opt callstack 0
 21235                           
 21236 ;; *************** function _TimerDone *****************
 21237 ;; Defined at:
 21238 ;;		line 20 in file "timers.c"
 21239 ;; Parameters:    Size  Location     Type
 21240 ;;  timer           1  [STACK] const unsigned char 
 21241 ;; Auto vars:     Size  Location     Type
 21242 ;;		None
 21243 ;; Return value:  Size  Location     Type
 21244 ;;                  1  [STACK] _Bool 
 21245 ;; Registers used:
 21246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21247 ;; Tracked objects:
 21248 ;;		On entry : 0/39
 21249 ;;		On exit  : 0/0
 21250 ;;		Unchanged: 0/0
 21251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21256 ;;Total ram usage:        0 bytes
 21257 ;; Hardware stack levels used:    1
 21258 ;; Hardware stack levels required when called:    6
 21259 ;; This function calls:
 21260 ;;		Nothing
 21261 ;; This function is called by:
 21262 ;;		_main
 21263 ;;		_WaitMs
 21264 ;;		_help_button
 21265 ;;		_check_help
 21266 ;;		_set_display_info
 21267 ;; This function uses a reentrant model
 21268 ;;
 21269                           
 21270                           	psect	text81
 21271  018356                     __ptext81:
 21272                           	opt callstack 0
 21273  018356                     _TimerDone:
 21274                           	opt callstack 23
 21275                           
 21276                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21277                           ;incstack = 0
 21278  018356  0004               	clrwdt		;# 
 21279                           
 21280                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 21281                           ;stkvar	_timer @ sp[(0)+-1]
 21282  018358  0EFF               	movlw	-1
 21283  01835A  50E3               	movf	plusw1,w,c
 21284  01835C  0D02               	mullw	2
 21285  01835E  50F3               	movf	243,w,c
 21286  018360  0F89               	addlw	low _tickCount
 21287  018362  6ED9               	movwf	fsr2l,c
 21288  018364  6ADA               	clrf	fsr2h,c
 21289  018366  50DE               	movf	postinc2,w,c
 21290  018368  10DE               	iorwf	postinc2,w,c
 21291  01836A  A4D8               	btfss	status,2,c
 21292  01836C  D002               	goto	l11170
 21293                           
 21294                           ;timers.c: 24:   return 1;
 21295  01836E  0E01               	movlw	1
 21296  018370  D001               	goto	L19
 21297  018372                     l11170:
 21298                           
 21299                           ;timers.c: 26:  return 0;
 21300  018372  0E00               	movlw	0
 21301  018374                     L19:
 21302  018374  6E32               	movwf	btemp^0,c
 21303                           
 21304                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21305  018376  52E5               	movf	postdec1,f,c
 21306  018378  0012               	return		;funcret
 21307  01837A                     __end_of_TimerDone:
 21308                           	opt callstack 0
 21309                           
 21310 ;; *************** function _StartTimer *****************
 21311 ;; Defined at:
 21312 ;;		line 12 in file "timers.c"
 21313 ;; Parameters:    Size  Location     Type
 21314 ;;  timer           1  [STACK] const unsigned char 
 21315 ;;  count           2  [STACK] const unsigned short 
 21316 ;; Auto vars:     Size  Location     Type
 21317 ;;		None
 21318 ;; Return value:  Size  Location     Type
 21319 ;;                  1  [STACK] void 
 21320 ;; Registers used:
 21321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 21322 ;; Tracked objects:
 21323 ;;		On entry : 0/5
 21324 ;;		On exit  : 0/0
 21325 ;;		Unchanged: 0/0
 21326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21331 ;;Total ram usage:        0 bytes
 21332 ;; Hardware stack levels used:    1
 21333 ;; Hardware stack levels required when called:    6
 21334 ;; This function calls:
 21335 ;;		Nothing
 21336 ;; This function is called by:
 21337 ;;		_main
 21338 ;;		_WaitMs
 21339 ;;		_help_button
 21340 ;;		_check_help
 21341 ;; This function uses a reentrant model
 21342 ;;
 21343                           
 21344                           	psect	text82
 21345  017D7A                     __ptext82:
 21346                           	opt callstack 0
 21347  017D7A                     _StartTimer:
 21348                           	opt callstack 21
 21349                           
 21350                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 21351                           ;stkvar	_count @ sp[(0)+-3]
 21352                           
 21353                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21354                           ;incstack = 0
 21355  017D7A  0EFD               	movlw	-3
 21356  017D7C  006F FF8C  F03C    	movff	plusw1,btemp+10
 21357  017D82  0EFE               	movlw	-2
 21358  017D84  006F FF8C  F03D    	movff	plusw1,btemp+11
 21359  017D8A  90D8               	bcf	status,0,c
 21360  017D8C  343C               	rlcf	(btemp+10)^0,w,c
 21361  017D8E  6E3A               	movwf	(btemp+8)^0,c
 21362  017D90  343D               	rlcf	(btemp+11)^0,w,c
 21363  017D92  6E3B               	movwf	(btemp+9)^0,c
 21364                           
 21365                           ;stkvar	_timer @ sp[(0)+-1]
 21366  017D94  0EFF               	movlw	-1
 21367  017D96  50E3               	movf	plusw1,w,c
 21368  017D98  0D02               	mullw	2
 21369  017D9A  50F3               	movf	243,w,c
 21370  017D9C  0F89               	addlw	low _tickCount
 21371  017D9E  6ED9               	movwf	fsr2l,c
 21372  017DA0  6ADA               	clrf	fsr2h,c
 21373  017DA2  0060  F0EB  FFDE   	movff	btemp+8,postinc2
 21374  017DA8  0060  F0EF  FFDD   	movff	btemp+9,postdec2
 21375                           
 21376                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 21377  017DAE  52E5               	movf	postdec1,f,c
 21378  017DB0  52E5               	movf	postdec1,f,c
 21379  017DB2  52E5               	movf	postdec1,f,c
 21380  017DB4  0012               	return		;funcret
 21381  017DB6                     __end_of_StartTimer:
 21382                           	opt callstack 0
 21383                           
 21384 ;; *************** function _display_info *****************
 21385 ;; Defined at:
 21386 ;;		line 190 in file "mconfig.c"
 21387 ;; Parameters:    Size  Location     Type
 21388 ;;		None
 21389 ;; Auto vars:     Size  Location     Type
 21390 ;;		None
 21391 ;; Return value:  Size  Location     Type
 21392 ;;                  1  [STACK] enum E16501
 21393 ;; Registers used:
 21394 ;;		btemp
 21395 ;; Tracked objects:
 21396 ;;		On entry : 0/1
 21397 ;;		On exit  : 0/0
 21398 ;;		Unchanged: 0/0
 21399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21403 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21404 ;;Total ram usage:        0 bytes
 21405 ;; Hardware stack levels used:    1
 21406 ;; Hardware stack levels required when called:    6
 21407 ;; This function calls:
 21408 ;;		Nothing
 21409 ;; This function is called by:
 21410 ;;		_check_help
 21411 ;; This function uses a reentrant model
 21412 ;;
 21413                           
 21414                           	psect	text83
 21415  018652                     __ptext83:
 21416                           	opt callstack 0
 21417  018652                     _display_info:
 21418                           	opt callstack 23
 21419                           
 21420                           ;mconfig.c: 192:  return V.response.info;
 21421                           
 21422                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21423                           ;incstack = 0
 21424  018652  0060  F68C  F032   	movff	_V+163,btemp	;volatile
 21425                           
 21426                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21427  018658  0012               	return		;funcret
 21428  01865A                     __end_of_display_info:
 21429                           	opt callstack 0
 21430                           
 21431 ;; *************** function _display_help *****************
 21432 ;; Defined at:
 21433 ;;		line 195 in file "mconfig.c"
 21434 ;; Parameters:    Size  Location     Type
 21435 ;;		None
 21436 ;; Auto vars:     Size  Location     Type
 21437 ;;		None
 21438 ;; Return value:  Size  Location     Type
 21439 ;;                  1  [STACK] enum E16501
 21440 ;; Registers used:
 21441 ;;		btemp
 21442 ;; Tracked objects:
 21443 ;;		On entry : 3F/1
 21444 ;;		On exit  : 0/0
 21445 ;;		Unchanged: 0/0
 21446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21451 ;;Total ram usage:        0 bytes
 21452 ;; Hardware stack levels used:    1
 21453 ;; Hardware stack levels required when called:    6
 21454 ;; This function calls:
 21455 ;;		Nothing
 21456 ;; This function is called by:
 21457 ;;		_check_help
 21458 ;; This function uses a reentrant model
 21459 ;;
 21460                           
 21461                           	psect	text84
 21462  01865A                     __ptext84:
 21463                           	opt callstack 0
 21464  01865A                     _display_help:
 21465                           	opt callstack 23
 21466                           
 21467                           ;mconfig.c: 197:  return V.response.help_temp;
 21468                           
 21469                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21470                           ;incstack = 0
 21471  01865A  0060  F690  F032   	movff	_V+164,btemp	;volatile
 21472                           
 21473                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 21474  018660  0012               	return		;funcret
 21475  018662                     __end_of_display_help:
 21476                           	opt callstack 0
 21477                           
 21478 ;; *************** function _check_adc_scan *****************
 21479 ;; Defined at:
 21480 ;;		line 56 in file "daq.c"
 21481 ;; Parameters:    Size  Location     Type
 21482 ;;		None
 21483 ;; Auto vars:     Size  Location     Type
 21484 ;;		None
 21485 ;; Return value:  Size  Location     Type
 21486 ;;                  1  [STACK] _Bool 
 21487 ;; Registers used:
 21488 ;;		btemp
 21489 ;; Tracked objects:
 21490 ;;		On entry : 0/39
 21491 ;;		On exit  : 0/0
 21492 ;;		Unchanged: 0/0
 21493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21498 ;;Total ram usage:        0 bytes
 21499 ;; Hardware stack levels used:    1
 21500 ;; Hardware stack levels required when called:    6
 21501 ;; This function calls:
 21502 ;;		Nothing
 21503 ;; This function is called by:
 21504 ;;		_main
 21505 ;; This function uses a reentrant model
 21506 ;;
 21507                           
 21508                           	psect	text85
 21509  018662                     __ptext85:
 21510                           	opt callstack 0
 21511  018662                     _check_adc_scan:
 21512                           	opt callstack 24
 21513                           
 21514                           ;daq.c: 58:  return R.done;
 21515                           
 21516                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21517                           ;incstack = 0
 21518  018662  0060  F3B8  F032   	movff	_R+39,btemp	;volatile
 21519                           
 21520                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 21521  018668  0012               	return		;funcret
 21522  01866A                     __end_of_check_adc_scan:
 21523                           	opt callstack 0
 21524                           
 21525 ;; *************** function _SYSTEM_Initialize *****************
 21526 ;; Defined at:
 21527 ;;		line 50 in file "mcc_generated_files/mcc.c"
 21528 ;; Parameters:    Size  Location     Type
 21529 ;;		None
 21530 ;; Auto vars:     Size  Location     Type
 21531 ;;		None
 21532 ;; Return value:  Size  Location     Type
 21533 ;;                  1  [STACK] void 
 21534 ;; Registers used:
 21535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 21536 ;; Tracked objects:
 21537 ;;		On entry : 0/0
 21538 ;;		On exit  : 3F/3C
 21539 ;;		Unchanged: 0/0
 21540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21545 ;;Total ram usage:        0 bytes
 21546 ;; Hardware stack levels used:    1
 21547 ;; Hardware stack levels required when called:    8
 21548 ;; This function calls:
 21549 ;;		_ADCC_Initialize
 21550 ;;		_CLKREF_Initialize
 21551 ;;		_DMA1_Initialize
 21552 ;;		_DMA2_Initialize
 21553 ;;		_EXT_INT_Initialize
 21554 ;;		_FVR_Initialize
 21555 ;;		_INTERRUPT_Initialize
 21556 ;;		_OSCILLATOR_Initialize
 21557 ;;		_PIN_MANAGER_Initialize
 21558 ;;		_PMD_Initialize
 21559 ;;		_PWM8_Initialize
 21560 ;;		_SPI1_Initialize
 21561 ;;		_TMR2_Initialize
 21562 ;;		_TMR5_Initialize
 21563 ;;		_TMR6_Initialize
 21564 ;;		_UART1_Initialize
 21565 ;;		_UART2_Initialize
 21566 ;; This function is called by:
 21567 ;;		_main
 21568 ;; This function uses a reentrant model
 21569 ;;
 21570                           
 21571                           	psect	text86
 21572  017BA2                     __ptext86:
 21573                           	opt callstack 0
 21574  017BA2                     _SYSTEM_Initialize:
 21575                           	opt callstack 22
 21576                           
 21577                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 21578                           
 21579                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21580                           ;incstack = 0
 21581  017BA2  EC66  F0BB         	call	_INTERRUPT_Initialize	;wreg free
 21582                           
 21583                           ; BSR set to: 57
 21584                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 21585  017BA6  ECCE  F0C2         	call	_PMD_Initialize	;wreg free
 21586                           
 21587                           ; BSR set to: 57
 21588                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 21589  017BAA  EC3B  F0B9         	call	_PIN_MANAGER_Initialize	;wreg free
 21590                           
 21591                           ; BSR set to: 58
 21592                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 21593  017BAE  ECC3  F0C2         	call	_OSCILLATOR_Initialize	;wreg free
 21594                           
 21595                           ; BSR set to: 57
 21596                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 21597  017BB2  EC35  F0C3         	call	_FVR_Initialize	;wreg free
 21598                           
 21599                           ; BSR set to: 62
 21600                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 21601  017BB6  ECFD  F0BA         	call	_ADCC_Initialize	;wreg free
 21602                           
 21603                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 21604  017BBA  ECA1  F0C2         	call	_TMR2_Initialize	;wreg free
 21605                           
 21606                           ; BSR set to: 57
 21607                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 21608  017BBE  ECB8  F0C2         	call	_PWM8_Initialize	;wreg free
 21609                           
 21610                           ; BSR set to: 63
 21611                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 21612  017BC2  EC47  F0BF         	call	_EXT_INT_Initialize	;wreg free
 21613                           
 21614                           ; BSR set to: 57
 21615                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 21616  017BC6  EC04  F0C0         	call	_TMR6_Initialize	;wreg free
 21617                           
 21618                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 21619  017BCA  ECF4  F0BD         	call	_TMR5_Initialize	;wreg free
 21620                           
 21621                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 21622  017BCE  ECCB  F0BB         	call	_UART1_Initialize	;wreg free
 21623                           
 21624                           ; BSR set to: 57
 21625                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 21626  017BD2  EC5F  F0BC         	call	_UART2_Initialize	;wreg free
 21627                           
 21628                           ; BSR set to: 57
 21629                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 21630  017BD6  ECAD  F0C2         	call	_SPI1_Initialize	;wreg free
 21631                           
 21632                           ; BSR set to: 61
 21633                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 21634  017BDA  ECBB  F0BC         	call	_DMA2_Initialize	;wreg free
 21635                           
 21636                           ; BSR set to: 59
 21637                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 21638  017BDE  ECC8  F0BA         	call	_DMA1_Initialize	;wreg free
 21639                           
 21640                           ; BSR set to: 59
 21641                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 21642  017BE2  EC0F  F0C3         	call	_CLKREF_Initialize	;wreg free
 21643                           
 21644                           ; BSR set to: 60
 21645                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 21646  017BE6  0012               	return		;funcret
 21647  017BE8                     __end_of_SYSTEM_Initialize:
 21648                           	opt callstack 0
 21649                           
 21650 ;; *************** function _UART2_Initialize *****************
 21651 ;; Defined at:
 21652 ;;		line 78 in file "mcc_generated_files/uart2.c"
 21653 ;; Parameters:    Size  Location     Type
 21654 ;;		None
 21655 ;; Auto vars:     Size  Location     Type
 21656 ;;		None
 21657 ;; Return value:  Size  Location     Type
 21658 ;;                  1  [STACK] void 
 21659 ;; Registers used:
 21660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21661 ;; Tracked objects:
 21662 ;;		On entry : 3F/39
 21663 ;;		On exit  : 3F/39
 21664 ;;		Unchanged: 0/0
 21665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21670 ;;Total ram usage:        0 bytes
 21671 ;; Hardware stack levels used:    1
 21672 ;; Hardware stack levels required when called:    7
 21673 ;; This function calls:
 21674 ;;		_UART2_SetRxInterruptHandler
 21675 ;;		_UART2_SetTxInterruptHandler
 21676 ;; This function is called by:
 21677 ;;		_SYSTEM_Initialize
 21678 ;; This function uses a reentrant model
 21679 ;;
 21680                           
 21681                           	psect	text87
 21682  0178BE                     __ptext87:
 21683                           	opt callstack 0
 21684  0178BE                     _UART2_Initialize:
 21685                           	opt callstack 22
 21686                           
 21687                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 21688                           
 21689                           ; BSR set to: 60
 21690                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21691                           ;incstack = 0
 21692  0178BE  0139               	movlb	57	; () banked
 21693  0178C0  9596               	bcf	150,2,b	;volatile
 21694                           
 21695                           ; BSR set to: 57
 21696                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 21697  0178C2  0E9E               	movlw	low _UART2_Receive_ISR
 21698  0178C4  6EE6               	movwf	postinc1,c
 21699  0178C6  0E84               	movlw	high _UART2_Receive_ISR
 21700  0178C8  6EE6               	movwf	postinc1,c
 21701  0178CA  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 21702  0178CC  6EE6               	movwf	postinc1,c
 21703  0178CE  EC93  F0C0         	call	_UART2_SetRxInterruptHandler	;wreg free
 21704                           
 21705                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 21706  0178D2  0139               	movlb	57	; () banked
 21707  0178D4  9796               	bcf	150,3,b	;volatile
 21708                           
 21709                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 21710  0178D6  0EDC               	movlw	low _UART2_Transmit_ISR
 21711  0178D8  6EE6               	movwf	postinc1,c
 21712  0178DA  0E7F               	movlw	high _UART2_Transmit_ISR
 21713  0178DC  6EE6               	movwf	postinc1,c
 21714  0178DE  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 21715  0178E0  6EE6               	movwf	postinc1,c
 21716  0178E2  EC7F  F0C0         	call	_UART2_SetTxInterruptHandler	;wreg free
 21717                           
 21718                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 21719  0178E6  013D               	movlb	61	; () banked
 21720  0178E8  6BD4               	clrf	212,b	;volatile
 21721                           
 21722                           ; BSR set to: 61
 21723                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 21724  0178EA  6BD6               	clrf	214,b	;volatile
 21725                           
 21726                           ; BSR set to: 61
 21727                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 21728  0178EC  6BD8               	clrf	216,b	;volatile
 21729                           
 21730                           ; BSR set to: 61
 21731                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 21732  0178EE  0EB0               	movlw	176
 21733  0178F0  6FDA               	movwf	218,b	;volatile
 21734                           
 21735                           ; BSR set to: 61
 21736                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 21737  0178F2  0E80               	movlw	128
 21738  0178F4  6FDB               	movwf	219,b	;volatile
 21739                           
 21740                           ; BSR set to: 61
 21741                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 21742  0178F6  6BDC               	clrf	220,b	;volatile
 21743                           
 21744                           ; BSR set to: 61
 21745                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 21746  0178F8  0E82               	movlw	130
 21747  0178FA  6FDD               	movwf	221,b	;volatile
 21748                           
 21749                           ; BSR set to: 61
 21750                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 21751  0178FC  0E06               	movlw	6
 21752  0178FE  6FDE               	movwf	222,b	;volatile
 21753                           
 21754                           ; BSR set to: 61
 21755                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 21756  017900  6BDF               	clrf	223,b	;volatile
 21757                           
 21758                           ; BSR set to: 61
 21759                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 21760  017902  6BE0               	clrf	224,b	;volatile
 21761                           
 21762                           ; BSR set to: 61
 21763                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 21764  017904  6BE1               	clrf	225,b	;volatile
 21765                           
 21766                           ; BSR set to: 61
 21767                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 21768  017906  6BE2               	clrf	226,b	;volatile
 21769                           
 21770                           ; BSR set to: 61
 21771                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 21772  017908  6A2B               	clrf	_uart2TxHead^0,c	;volatile
 21773                           
 21774                           ; BSR set to: 61
 21775                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 21776  01790A  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 21777                           
 21778                           ; BSR set to: 61
 21779                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 21780  01790C  0E40               	movlw	64
 21781  01790E  6E29               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 21782                           
 21783                           ; BSR set to: 61
 21784                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 21785  017910  6A28               	clrf	_uart2RxHead^0,c	;volatile
 21786                           
 21787                           ; BSR set to: 61
 21788                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 21789  017912  6A27               	clrf	_uart2RxTail^0,c	;volatile
 21790                           
 21791                           ; BSR set to: 61
 21792                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 21793  017914  6A26               	clrf	_uart2RxCount^0,c	;volatile
 21794                           
 21795                           ; BSR set to: 61
 21796                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 21797  017916  0139               	movlb	57	; () banked
 21798  017918  8596               	bsf	150,2,b	;volatile
 21799                           
 21800                           ; BSR set to: 57
 21801                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21802  01791A  0012               	return		;funcret
 21803  01791C                     __end_of_UART2_Initialize:
 21804                           	opt callstack 0
 21805                           
 21806 ;; *************** function _UART2_SetTxInterruptHandler *****************
 21807 ;; Defined at:
 21808 ;;		line 252 in file "mcc_generated_files/uart2.c"
 21809 ;; Parameters:    Size  Location     Type
 21810 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21811 ;;		 -> UART2_Transmit_ISR(1), 
 21812 ;; Auto vars:     Size  Location     Type
 21813 ;;		None
 21814 ;; Return value:  Size  Location     Type
 21815 ;;                  1  [STACK] void 
 21816 ;; Registers used:
 21817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21818 ;; Tracked objects:
 21819 ;;		On entry : 3F/39
 21820 ;;		On exit  : 0/0
 21821 ;;		Unchanged: 0/0
 21822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21827 ;;Total ram usage:        0 bytes
 21828 ;; Hardware stack levels used:    1
 21829 ;; Hardware stack levels required when called:    6
 21830 ;; This function calls:
 21831 ;;		Nothing
 21832 ;; This function is called by:
 21833 ;;		_UART2_Initialize
 21834 ;; This function uses a reentrant model
 21835 ;;
 21836                           
 21837                           	psect	text88
 21838  0180FE                     __ptext88:
 21839                           	opt callstack 0
 21840  0180FE                     _UART2_SetTxInterruptHandler:
 21841                           	opt callstack 22
 21842                           
 21843                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 21844                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21845                           
 21846                           ; BSR set to: 57
 21847                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21848                           ;incstack = 0
 21849  0180FE  50E1               	movf	fsr1l,w,c
 21850  018100  0FFD               	addlw	-3
 21851  018102  6ED9               	movwf	fsr2l,c
 21852  018104  50E2               	movf	fsr1h,w,c
 21853  018106  6EDA               	movwf	fsr2h,c
 21854  018108  0EFF               	movlw	255
 21855  01810A  22DA               	addwfc	fsr2h,f,c
 21856  01810C  006F FF78  F00D    	movff	postinc2,_UART2_TxInterruptHandler
 21857  018112  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler+1
 21858  018118  006F FF74  F00F    	movff	postdec2,_UART2_TxInterruptHandler+2
 21859                           
 21860                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21861  01811E  52E5               	movf	postdec1,f,c
 21862  018120  52E5               	movf	postdec1,f,c
 21863  018122  52E5               	movf	postdec1,f,c
 21864  018124  0012               	return		;funcret
 21865  018126                     __end_of_UART2_SetTxInterruptHandler:
 21866                           	opt callstack 0
 21867                           
 21868 ;; *************** function _UART2_SetRxInterruptHandler *****************
 21869 ;; Defined at:
 21870 ;;		line 248 in file "mcc_generated_files/uart2.c"
 21871 ;; Parameters:    Size  Location     Type
 21872 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 21873 ;;		 -> UART2_Receive_ISR(1), 
 21874 ;; Auto vars:     Size  Location     Type
 21875 ;;		None
 21876 ;; Return value:  Size  Location     Type
 21877 ;;                  1  [STACK] void 
 21878 ;; Registers used:
 21879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 21880 ;; Tracked objects:
 21881 ;;		On entry : 3F/39
 21882 ;;		On exit  : 0/0
 21883 ;;		Unchanged: 0/0
 21884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21889 ;;Total ram usage:        0 bytes
 21890 ;; Hardware stack levels used:    1
 21891 ;; Hardware stack levels required when called:    6
 21892 ;; This function calls:
 21893 ;;		Nothing
 21894 ;; This function is called by:
 21895 ;;		_UART2_Initialize
 21896 ;; This function uses a reentrant model
 21897 ;;
 21898                           
 21899                           	psect	text89
 21900  018126                     __ptext89:
 21901                           	opt callstack 0
 21902  018126                     _UART2_SetRxInterruptHandler:
 21903                           	opt callstack 22
 21904                           
 21905                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 21906                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 21907                           
 21908                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21909                           ;incstack = 0
 21910  018126  50E1               	movf	fsr1l,w,c
 21911  018128  0FFD               	addlw	-3
 21912  01812A  6ED9               	movwf	fsr2l,c
 21913  01812C  50E2               	movf	fsr1h,w,c
 21914  01812E  6EDA               	movwf	fsr2h,c
 21915  018130  0EFF               	movlw	255
 21916  018132  22DA               	addwfc	fsr2h,f,c
 21917  018134  006F FF78  F010    	movff	postinc2,_UART2_RxInterruptHandler
 21918  01813A  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler+1
 21919  018140  006F FF74  F012    	movff	postdec2,_UART2_RxInterruptHandler+2
 21920                           
 21921                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 21922  018146  52E5               	movf	postdec1,f,c
 21923  018148  52E5               	movf	postdec1,f,c
 21924  01814A  52E5               	movf	postdec1,f,c
 21925  01814C  0012               	return		;funcret
 21926  01814E                     __end_of_UART2_SetRxInterruptHandler:
 21927                           	opt callstack 0
 21928                           
 21929 ;; *************** function _UART1_Initialize *****************
 21930 ;; Defined at:
 21931 ;;		line 79 in file "mcc_generated_files/uart1.c"
 21932 ;; Parameters:    Size  Location     Type
 21933 ;;		None
 21934 ;; Auto vars:     Size  Location     Type
 21935 ;;		None
 21936 ;; Return value:  Size  Location     Type
 21937 ;;                  1  [STACK] void 
 21938 ;; Registers used:
 21939 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 21940 ;; Tracked objects:
 21941 ;;		On entry : 0/39
 21942 ;;		On exit  : 3F/39
 21943 ;;		Unchanged: 0/0
 21944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21949 ;;Total ram usage:        0 bytes
 21950 ;; Hardware stack levels used:    1
 21951 ;; Hardware stack levels required when called:    7
 21952 ;; This function calls:
 21953 ;;		_UART1_SetRxInterruptHandler
 21954 ;;		_UART1_SetTxInterruptHandler
 21955 ;; This function is called by:
 21956 ;;		_SYSTEM_Initialize
 21957 ;; This function uses a reentrant model
 21958 ;;
 21959                           
 21960                           	psect	text90
 21961  017796                     __ptext90:
 21962                           	opt callstack 0
 21963  017796                     _UART1_Initialize:
 21964                           	opt callstack 22
 21965                           
 21966                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 21967                           
 21968                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21969                           ;incstack = 0
 21970  017796  0139               	movlb	57	; () banked
 21971  017798  9793               	bcf	147,3,b	;volatile
 21972                           
 21973                           ; BSR set to: 57
 21974                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 21975  01779A  0E80               	movlw	low _UART1_Receive_ISR
 21976  01779C  6EE6               	movwf	postinc1,c
 21977  01779E  0E84               	movlw	high _UART1_Receive_ISR
 21978  0177A0  6EE6               	movwf	postinc1,c
 21979  0177A2  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 21980  0177A4  6EE6               	movwf	postinc1,c
 21981  0177A6  ECBB  F0C0         	call	_UART1_SetRxInterruptHandler	;wreg free
 21982                           
 21983                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 21984  0177AA  0139               	movlb	57	; () banked
 21985  0177AC  9993               	bcf	147,4,b	;volatile
 21986                           
 21987                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 21988  0177AE  0EB0               	movlw	low _UART1_Transmit_ISR
 21989  0177B0  6EE6               	movwf	postinc1,c
 21990  0177B2  0E7F               	movlw	high _UART1_Transmit_ISR
 21991  0177B4  6EE6               	movwf	postinc1,c
 21992  0177B6  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 21993  0177B8  6EE6               	movwf	postinc1,c
 21994  0177BA  ECA7  F0C0         	call	_UART1_SetTxInterruptHandler	;wreg free
 21995                           
 21996                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 21997  0177BE  013D               	movlb	61	; () banked
 21998  0177C0  6BEC               	clrf	236,b	;volatile
 21999                           
 22000                           ; BSR set to: 61
 22001                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 22002  0177C2  6BED               	clrf	237,b	;volatile
 22003                           
 22004                           ; BSR set to: 61
 22005                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 22006  0177C4  6BEE               	clrf	238,b	;volatile
 22007                           
 22008                           ; BSR set to: 61
 22009                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 22010  0177C6  6BEF               	clrf	239,b	;volatile
 22011                           
 22012                           ; BSR set to: 61
 22013                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 22014  0177C8  6BF0               	clrf	240,b	;volatile
 22015                           
 22016                           ; BSR set to: 61
 22017                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 22018  0177CA  6BF1               	clrf	241,b	;volatile
 22019                           
 22020                           ; BSR set to: 61
 22021                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 22022  0177CC  0EB0               	movlw	176
 22023  0177CE  6FF2               	movwf	242,b	;volatile
 22024                           
 22025                           ; BSR set to: 61
 22026                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 22027  0177D0  0E80               	movlw	128
 22028  0177D2  6FF3               	movwf	243,b	;volatile
 22029                           
 22030                           ; BSR set to: 61
 22031                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 22032  0177D4  6BF4               	clrf	244,b	;volatile
 22033                           
 22034                           ; BSR set to: 61
 22035                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 22036  0177D6  0E82               	movlw	130
 22037  0177D8  6FF5               	movwf	245,b	;volatile
 22038                           
 22039                           ; BSR set to: 61
 22040                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 22041  0177DA  0E06               	movlw	6
 22042  0177DC  6FF6               	movwf	246,b	;volatile
 22043                           
 22044                           ; BSR set to: 61
 22045                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 22046  0177DE  6BF7               	clrf	247,b	;volatile
 22047                           
 22048                           ; BSR set to: 61
 22049                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 22050  0177E0  6BF8               	clrf	248,b	;volatile
 22051                           
 22052                           ; BSR set to: 61
 22053                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 22054  0177E2  6BF9               	clrf	249,b	;volatile
 22055                           
 22056                           ; BSR set to: 61
 22057                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 22058  0177E4  6BFA               	clrf	250,b	;volatile
 22059                           
 22060                           ; BSR set to: 61
 22061                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 22062  0177E6  6A31               	clrf	_uart1TxHead^0,c	;volatile
 22063                           
 22064                           ; BSR set to: 61
 22065                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 22066  0177E8  6A30               	clrf	_uart1TxTail^0,c	;volatile
 22067                           
 22068                           ; BSR set to: 61
 22069                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 22070  0177EA  0E40               	movlw	64
 22071  0177EC  6E2F               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 22072                           
 22073                           ; BSR set to: 61
 22074                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 22075  0177EE  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 22076                           
 22077                           ; BSR set to: 61
 22078                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 22079  0177F0  6A2D               	clrf	_uart1RxTail^0,c	;volatile
 22080                           
 22081                           ; BSR set to: 61
 22082                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 22083  0177F2  6A2C               	clrf	_uart1RxCount^0,c	;volatile
 22084                           
 22085                           ; BSR set to: 61
 22086                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 22087  0177F4  0139               	movlb	57	; () banked
 22088  0177F6  8793               	bsf	147,3,b	;volatile
 22089                           
 22090                           ; BSR set to: 57
 22091                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22092  0177F8  0012               	return		;funcret
 22093  0177FA                     __end_of_UART1_Initialize:
 22094                           	opt callstack 0
 22095                           
 22096 ;; *************** function _UART1_SetTxInterruptHandler *****************
 22097 ;; Defined at:
 22098 ;;		line 246 in file "mcc_generated_files/uart1.c"
 22099 ;; Parameters:    Size  Location     Type
 22100 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22101 ;;		 -> UART1_Transmit_ISR(1), 
 22102 ;; Auto vars:     Size  Location     Type
 22103 ;;		None
 22104 ;; Return value:  Size  Location     Type
 22105 ;;                  1  [STACK] void 
 22106 ;; Registers used:
 22107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22108 ;; Tracked objects:
 22109 ;;		On entry : 3F/39
 22110 ;;		On exit  : 0/0
 22111 ;;		Unchanged: 0/0
 22112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22117 ;;Total ram usage:        0 bytes
 22118 ;; Hardware stack levels used:    1
 22119 ;; Hardware stack levels required when called:    6
 22120 ;; This function calls:
 22121 ;;		Nothing
 22122 ;; This function is called by:
 22123 ;;		_UART1_Initialize
 22124 ;; This function uses a reentrant model
 22125 ;;
 22126                           
 22127                           	psect	text91
 22128  01814E                     __ptext91:
 22129                           	opt callstack 0
 22130  01814E                     _UART1_SetTxInterruptHandler:
 22131                           	opt callstack 22
 22132                           
 22133                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 22134                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22135                           
 22136                           ; BSR set to: 57
 22137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22138                           ;incstack = 0
 22139  01814E  50E1               	movf	fsr1l,w,c
 22140  018150  0FFD               	addlw	-3
 22141  018152  6ED9               	movwf	fsr2l,c
 22142  018154  50E2               	movf	fsr1h,w,c
 22143  018156  6EDA               	movwf	fsr2h,c
 22144  018158  0EFF               	movlw	255
 22145  01815A  22DA               	addwfc	fsr2h,f,c
 22146  01815C  006F FF78  F007    	movff	postinc2,_UART1_TxInterruptHandler
 22147  018162  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler+1
 22148  018168  006F FF74  F009    	movff	postdec2,_UART1_TxInterruptHandler+2
 22149                           
 22150                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22151  01816E  52E5               	movf	postdec1,f,c
 22152  018170  52E5               	movf	postdec1,f,c
 22153  018172  52E5               	movf	postdec1,f,c
 22154  018174  0012               	return		;funcret
 22155  018176                     __end_of_UART1_SetTxInterruptHandler:
 22156                           	opt callstack 0
 22157                           
 22158 ;; *************** function _UART1_SetRxInterruptHandler *****************
 22159 ;; Defined at:
 22160 ;;		line 241 in file "mcc_generated_files/uart1.c"
 22161 ;; Parameters:    Size  Location     Type
 22162 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22163 ;;		 -> UART1_Receive_ISR(1), 
 22164 ;; Auto vars:     Size  Location     Type
 22165 ;;		None
 22166 ;; Return value:  Size  Location     Type
 22167 ;;                  1  [STACK] void 
 22168 ;; Registers used:
 22169 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22170 ;; Tracked objects:
 22171 ;;		On entry : 3F/39
 22172 ;;		On exit  : 0/0
 22173 ;;		Unchanged: 0/0
 22174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22179 ;;Total ram usage:        0 bytes
 22180 ;; Hardware stack levels used:    1
 22181 ;; Hardware stack levels required when called:    6
 22182 ;; This function calls:
 22183 ;;		Nothing
 22184 ;; This function is called by:
 22185 ;;		_UART1_Initialize
 22186 ;; This function uses a reentrant model
 22187 ;;
 22188                           
 22189                           	psect	text92
 22190  018176                     __ptext92:
 22191                           	opt callstack 0
 22192  018176                     _UART1_SetRxInterruptHandler:
 22193                           	opt callstack 22
 22194                           
 22195                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 22196                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22197                           
 22198                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22199                           ;incstack = 0
 22200  018176  50E1               	movf	fsr1l,w,c
 22201  018178  0FFD               	addlw	-3
 22202  01817A  6ED9               	movwf	fsr2l,c
 22203  01817C  50E2               	movf	fsr1h,w,c
 22204  01817E  6EDA               	movwf	fsr2h,c
 22205  018180  0EFF               	movlw	255
 22206  018182  22DA               	addwfc	fsr2h,f,c
 22207  018184  006F FF78  F00A    	movff	postinc2,_UART1_RxInterruptHandler
 22208  01818A  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler+1
 22209  018190  006F FF74  F00C    	movff	postdec2,_UART1_RxInterruptHandler+2
 22210                           
 22211                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22212  018196  52E5               	movf	postdec1,f,c
 22213  018198  52E5               	movf	postdec1,f,c
 22214  01819A  52E5               	movf	postdec1,f,c
 22215  01819C  0012               	return		;funcret
 22216  01819E                     __end_of_UART1_SetRxInterruptHandler:
 22217                           	opt callstack 0
 22218                           
 22219 ;; *************** function _TMR6_Initialize *****************
 22220 ;; Defined at:
 22221 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 22222 ;; Parameters:    Size  Location     Type
 22223 ;;		None
 22224 ;; Auto vars:     Size  Location     Type
 22225 ;;		None
 22226 ;; Return value:  Size  Location     Type
 22227 ;;                  1  [STACK] void 
 22228 ;; Registers used:
 22229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22230 ;; Tracked objects:
 22231 ;;		On entry : 3F/39
 22232 ;;		On exit  : 0/0
 22233 ;;		Unchanged: 0/0
 22234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22239 ;;Total ram usage:        0 bytes
 22240 ;; Hardware stack levels used:    1
 22241 ;; Hardware stack levels required when called:    7
 22242 ;; This function calls:
 22243 ;;		_TMR6_SetInterruptHandler
 22244 ;; This function is called by:
 22245 ;;		_SYSTEM_Initialize
 22246 ;; This function uses a reentrant model
 22247 ;;
 22248                           
 22249                           	psect	text93
 22250  018008                     __ptext93:
 22251                           	opt callstack 0
 22252  018008                     _TMR6_Initialize:
 22253                           	opt callstack 22
 22254                           
 22255                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 22256                           
 22257                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22258                           ;incstack = 0
 22259  018008  0E01               	movlw	1
 22260  01800A  6E96               	movwf	150,c	;volatile
 22261                           
 22262                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 22263  01800C  6A95               	clrf	149,c	;volatile
 22264                           
 22265                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 22266  01800E  6A97               	clrf	151,c	;volatile
 22267                           
 22268                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 22269  018010  0E7C               	movlw	124
 22270  018012  6E93               	movwf	147,c	;volatile
 22271                           
 22272                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 22273  018014  6A92               	clrf	146,c	;volatile
 22274                           
 22275                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 22276  018016  0139               	movlb	57	; () banked
 22277  018018  91A9               	bcf	169,0,b	;volatile
 22278                           
 22279                           ; BSR set to: 57
 22280                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 22281  01801A  8199               	bsf	153,0,b	;volatile
 22282                           
 22283                           ; BSR set to: 57
 22284                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 22285  01801C  0E2E               	movlw	low _TMR6_DefaultInterruptHandler
 22286  01801E  6EE6               	movwf	postinc1,c
 22287  018020  0E7C               	movlw	high _TMR6_DefaultInterruptHandler
 22288  018022  6EE6               	movwf	postinc1,c
 22289  018024  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 22290  018026  6EE6               	movwf	postinc1,c
 22291  018028  ECCF  F0C0         	call	_TMR6_SetInterruptHandler	;wreg free
 22292                           
 22293                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 22294  01802C  0EE0               	movlw	224
 22295  01802E  6E94               	movwf	148,c	;volatile
 22296                           
 22297                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22298  018030  0012               	return		;funcret
 22299  018032                     __end_of_TMR6_Initialize:
 22300                           	opt callstack 0
 22301                           
 22302 ;; *************** function _TMR6_SetInterruptHandler *****************
 22303 ;; Defined at:
 22304 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 22305 ;; Parameters:    Size  Location     Type
 22306 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22307 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 22308 ;; Auto vars:     Size  Location     Type
 22309 ;;		None
 22310 ;; Return value:  Size  Location     Type
 22311 ;;                  1  [STACK] void 
 22312 ;; Registers used:
 22313 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22314 ;; Tracked objects:
 22315 ;;		On entry : 3F/39
 22316 ;;		On exit  : 0/0
 22317 ;;		Unchanged: 0/0
 22318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22323 ;;Total ram usage:        0 bytes
 22324 ;; Hardware stack levels used:    1
 22325 ;; Hardware stack levels required when called:    6
 22326 ;; This function calls:
 22327 ;;		Nothing
 22328 ;; This function is called by:
 22329 ;;		_TMR6_Initialize
 22330 ;; This function uses a reentrant model
 22331 ;;
 22332                           
 22333                           	psect	text94
 22334  01819E                     __ptext94:
 22335                           	opt callstack 0
 22336  01819E                     _TMR6_SetInterruptHandler:
 22337                           	opt callstack 22
 22338                           
 22339                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 22340                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22341                           
 22342                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22343                           ;incstack = 0
 22344  01819E  50E1               	movf	fsr1l,w,c
 22345  0181A0  0FFD               	addlw	-3
 22346  0181A2  6ED9               	movwf	fsr2l,c
 22347  0181A4  50E2               	movf	fsr1h,w,c
 22348  0181A6  6EDA               	movwf	fsr2h,c
 22349  0181A8  0EFF               	movlw	255
 22350  0181AA  22DA               	addwfc	fsr2h,f,c
 22351  0181AC  006F FF78  F0C4    	movff	postinc2,_TMR6_InterruptHandler
 22352  0181B2  006F FF78  F0C5    	movff	postinc2,_TMR6_InterruptHandler+1
 22353  0181B8  006F FF74  F0C6    	movff	postdec2,_TMR6_InterruptHandler+2
 22354                           
 22355                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22356  0181BE  52E5               	movf	postdec1,f,c
 22357  0181C0  52E5               	movf	postdec1,f,c
 22358  0181C2  52E5               	movf	postdec1,f,c
 22359  0181C4  0012               	return		;funcret
 22360  0181C6                     __end_of_TMR6_SetInterruptHandler:
 22361                           	opt callstack 0
 22362                           
 22363 ;; *************** function _TMR5_Initialize *****************
 22364 ;; Defined at:
 22365 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 22366 ;; Parameters:    Size  Location     Type
 22367 ;;		None
 22368 ;; Auto vars:     Size  Location     Type
 22369 ;;		None
 22370 ;; Return value:  Size  Location     Type
 22371 ;;                  1  [STACK] void 
 22372 ;; Registers used:
 22373 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 22374 ;; Tracked objects:
 22375 ;;		On entry : 0/39
 22376 ;;		On exit  : 0/0
 22377 ;;		Unchanged: 0/0
 22378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22383 ;;Total ram usage:        0 bytes
 22384 ;; Hardware stack levels used:    1
 22385 ;; Hardware stack levels required when called:    7
 22386 ;; This function calls:
 22387 ;;		_TMR5_SetInterruptHandler
 22388 ;; This function is called by:
 22389 ;;		_SYSTEM_Initialize
 22390 ;; This function uses a reentrant model
 22391 ;;
 22392                           
 22393                           	psect	text95
 22394  017BE8                     __ptext95:
 22395                           	opt callstack 0
 22396  017BE8                     _TMR5_Initialize:
 22397                           	opt callstack 22
 22398                           
 22399                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 22400                           
 22401                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22402                           ;incstack = 0
 22403  017BE8  6A9B               	clrf	155,c	;volatile
 22404                           
 22405                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 22406  017BEA  6A9C               	clrf	156,c	;volatile
 22407                           
 22408                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 22409  017BEC  0E01               	movlw	1
 22410  017BEE  6E9D               	movwf	157,c	;volatile
 22411                           
 22412                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 22413  017BF0  0E63               	movlw	99
 22414  017BF2  6E99               	movwf	153,c	;volatile
 22415                           
 22416                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 22417  017BF4  0EC0               	movlw	192
 22418  017BF6  6E98               	movwf	152,c	;volatile
 22419                           
 22420                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 22421  017BF8  5098               	movf	152,w,c	;volatile
 22422  017BFA  006F FE64  F032    	movff	16281,btemp	;volatile
 22423  017C00  6A33               	clrf	(btemp+1)^0,c
 22424  017C02  0060  F0C8  F033   	movff	btemp,btemp+1
 22425  017C08  6A32               	clrf	btemp^0,c
 22426  017C0A  1032               	iorwf	btemp^0,w,c
 22427  017C0C  6E23               	movwf	_timer5ReloadVal^0,c	;volatile
 22428  017C0E  5033               	movf	(btemp+1)^0,w,c
 22429  017C10  6E24               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 22430                           
 22431                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 22432  017C12  0139               	movlb	57	; () banked
 22433  017C14  9DA8               	bcf	168,6,b	;volatile
 22434                           
 22435                           ; BSR set to: 57
 22436                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 22437  017C16  8D98               	bsf	152,6,b	;volatile
 22438                           
 22439                           ; BSR set to: 57
 22440                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 22441  017C18  0E8E               	movlw	low _TMR5_DefaultInterruptHandler
 22442  017C1A  6EE6               	movwf	postinc1,c
 22443  017C1C  0E82               	movlw	high _TMR5_DefaultInterruptHandler
 22444  017C1E  6EE6               	movwf	postinc1,c
 22445  017C20  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 22446  017C22  6EE6               	movwf	postinc1,c
 22447  017C24  ECE3  F0C0         	call	_TMR5_SetInterruptHandler	;wreg free
 22448                           
 22449                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 22450  017C28  0E31               	movlw	49
 22451  017C2A  6E9A               	movwf	154,c	;volatile
 22452                           
 22453                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22454  017C2C  0012               	return		;funcret
 22455  017C2E                     __end_of_TMR5_Initialize:
 22456                           	opt callstack 0
 22457                           
 22458 ;; *************** function _TMR5_SetInterruptHandler *****************
 22459 ;; Defined at:
 22460 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 22461 ;; Parameters:    Size  Location     Type
 22462 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22463 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 22464 ;; Auto vars:     Size  Location     Type
 22465 ;;		None
 22466 ;; Return value:  Size  Location     Type
 22467 ;;                  1  [STACK] void 
 22468 ;; Registers used:
 22469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22470 ;; Tracked objects:
 22471 ;;		On entry : 3F/39
 22472 ;;		On exit  : 0/0
 22473 ;;		Unchanged: 0/0
 22474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22479 ;;Total ram usage:        0 bytes
 22480 ;; Hardware stack levels used:    1
 22481 ;; Hardware stack levels required when called:    6
 22482 ;; This function calls:
 22483 ;;		Nothing
 22484 ;; This function is called by:
 22485 ;;		_TMR5_Initialize
 22486 ;; This function uses a reentrant model
 22487 ;;
 22488                           
 22489                           	psect	text96
 22490  0181C6                     __ptext96:
 22491                           	opt callstack 0
 22492  0181C6                     _TMR5_SetInterruptHandler:
 22493                           	opt callstack 22
 22494                           
 22495                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 22496                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22497                           
 22498                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22499                           ;incstack = 0
 22500  0181C6  50E1               	movf	fsr1l,w,c
 22501  0181C8  0FFD               	addlw	-3
 22502  0181CA  6ED9               	movwf	fsr2l,c
 22503  0181CC  50E2               	movf	fsr1h,w,c
 22504  0181CE  6EDA               	movwf	fsr2h,c
 22505  0181D0  0EFF               	movlw	255
 22506  0181D2  22DA               	addwfc	fsr2h,f,c
 22507  0181D4  006F FF78  F0C1    	movff	postinc2,_TMR5_InterruptHandler
 22508  0181DA  006F FF78  F0C2    	movff	postinc2,_TMR5_InterruptHandler+1
 22509  0181E0  006F FF74  F0C3    	movff	postdec2,_TMR5_InterruptHandler+2
 22510                           
 22511                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 22512  0181E6  52E5               	movf	postdec1,f,c
 22513  0181E8  52E5               	movf	postdec1,f,c
 22514  0181EA  52E5               	movf	postdec1,f,c
 22515  0181EC  0012               	return		;funcret
 22516  0181EE                     __end_of_TMR5_SetInterruptHandler:
 22517                           	opt callstack 0
 22518                           
 22519 ;; *************** function _TMR2_Initialize *****************
 22520 ;; Defined at:
 22521 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 22522 ;; Parameters:    Size  Location     Type
 22523 ;;		None
 22524 ;; Auto vars:     Size  Location     Type
 22525 ;;		None
 22526 ;; Return value:  Size  Location     Type
 22527 ;;                  1  [STACK] void 
 22528 ;; Registers used:
 22529 ;;		wreg, status,2
 22530 ;; Tracked objects:
 22531 ;;		On entry : 0/3E
 22532 ;;		On exit  : 3F/39
 22533 ;;		Unchanged: 0/0
 22534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22539 ;;Total ram usage:        0 bytes
 22540 ;; Hardware stack levels used:    1
 22541 ;; Hardware stack levels required when called:    6
 22542 ;; This function calls:
 22543 ;;		Nothing
 22544 ;; This function is called by:
 22545 ;;		_SYSTEM_Initialize
 22546 ;; This function uses a reentrant model
 22547 ;;
 22548                           
 22549                           	psect	text97
 22550  018542                     __ptext97:
 22551                           	opt callstack 0
 22552  018542                     _TMR2_Initialize:
 22553                           	opt callstack 23
 22554                           
 22555                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 22556                           
 22557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22558                           ;incstack = 0
 22559  018542  0E01               	movlw	1
 22560  018544  6EAE               	movwf	174,c	;volatile
 22561                           
 22562                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 22563  018546  6AAD               	clrf	173,c	;volatile
 22564                           
 22565                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 22566  018548  6AAF               	clrf	175,c	;volatile
 22567                           
 22568                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 22569  01854A  0E63               	movlw	99
 22570  01854C  6EAB               	movwf	171,c	;volatile
 22571                           
 22572                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 22573  01854E  6AAA               	clrf	170,c	;volatile
 22574                           
 22575                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 22576  018550  0139               	movlb	57	; () banked
 22577  018552  95A4               	bcf	164,2,b	;volatile
 22578                           
 22579                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 22580  018554  0EC0               	movlw	192
 22581  018556  6EAC               	movwf	172,c	;volatile
 22582                           
 22583                           ; BSR set to: 57
 22584                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22585  018558  0012               	return		;funcret
 22586  01855A                     __end_of_TMR2_Initialize:
 22587                           	opt callstack 0
 22588                           
 22589 ;; *************** function _SPI1_Initialize *****************
 22590 ;; Defined at:
 22591 ;;		line 64 in file "mcc_generated_files/spi1.c"
 22592 ;; Parameters:    Size  Location     Type
 22593 ;;		None
 22594 ;; Auto vars:     Size  Location     Type
 22595 ;;		None
 22596 ;; Return value:  Size  Location     Type
 22597 ;;                  1  [STACK] void 
 22598 ;; Registers used:
 22599 ;;		wreg, status,2
 22600 ;; Tracked objects:
 22601 ;;		On entry : 3F/39
 22602 ;;		On exit  : 3F/3D
 22603 ;;		Unchanged: 0/0
 22604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22609 ;;Total ram usage:        0 bytes
 22610 ;; Hardware stack levels used:    1
 22611 ;; Hardware stack levels required when called:    6
 22612 ;; This function calls:
 22613 ;;		Nothing
 22614 ;; This function is called by:
 22615 ;;		_SYSTEM_Initialize
 22616 ;; This function uses a reentrant model
 22617 ;;
 22618                           
 22619                           	psect	text98
 22620  01855A                     __ptext98:
 22621                           	opt callstack 0
 22622  01855A                     _SPI1_Initialize:
 22623                           	opt callstack 23
 22624                           
 22625                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 22626                           
 22627                           ; BSR set to: 57
 22628                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22629                           ;incstack = 0
 22630  01855A  0E40               	movlw	64
 22631  01855C  013D               	movlb	61	; () banked
 22632  01855E  6F15               	movwf	21,b	;volatile
 22633                           
 22634                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 22635  018560  0E03               	movlw	3
 22636  018562  6F16               	movwf	22,b	;volatile
 22637                           
 22638                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 22639  018564  0E4F               	movlw	79
 22640  018566  6F19               	movwf	25,b	;volatile
 22641                           
 22642                           ; BSR set to: 61
 22643                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 22644  018568  6B1C               	clrf	28,b	;volatile
 22645                           
 22646                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 22647  01856A  0E83               	movlw	131
 22648  01856C  6F14               	movwf	20,b	;volatile
 22649                           
 22650                           ; BSR set to: 61
 22651                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22652  01856E  0012               	return		;funcret
 22653  018570                     __end_of_SPI1_Initialize:
 22654                           	opt callstack 0
 22655                           
 22656 ;; *************** function _PWM8_Initialize *****************
 22657 ;; Defined at:
 22658 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 22659 ;; Parameters:    Size  Location     Type
 22660 ;;		None
 22661 ;; Auto vars:     Size  Location     Type
 22662 ;;		None
 22663 ;; Return value:  Size  Location     Type
 22664 ;;                  1  [STACK] void 
 22665 ;; Registers used:
 22666 ;;		wreg, status,2
 22667 ;; Tracked objects:
 22668 ;;		On entry : 3F/39
 22669 ;;		On exit  : 3F/3F
 22670 ;;		Unchanged: 0/0
 22671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22676 ;;Total ram usage:        0 bytes
 22677 ;; Hardware stack levels used:    1
 22678 ;; Hardware stack levels required when called:    6
 22679 ;; This function calls:
 22680 ;;		Nothing
 22681 ;; This function is called by:
 22682 ;;		_SYSTEM_Initialize
 22683 ;; This function uses a reentrant model
 22684 ;;
 22685                           
 22686                           	psect	text99
 22687  018570                     __ptext99:
 22688                           	opt callstack 0
 22689  018570                     _PWM8_Initialize:
 22690                           	opt callstack 23
 22691                           
 22692                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 22693                           
 22694                           ; BSR set to: 61
 22695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22696                           ;incstack = 0
 22697  018570  0E80               	movlw	128
 22698  018572  6E62               	movwf	98,c	;volatile
 22699                           
 22700                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 22701  018574  6A61               	clrf	97,c	;volatile
 22702                           
 22703                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 22704  018576  0E40               	movlw	64
 22705  018578  6E60               	movwf	96,c	;volatile
 22706                           
 22707                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 22708  01857A  013F               	movlb	63	; () banked
 22709  01857C  515F               	movf	95,w,b	;volatile
 22710  01857E  0B3F               	andlw	-193
 22711  018580  0940               	iorlw	64
 22712  018582  6F5F               	movwf	95,b	;volatile
 22713                           
 22714                           ; BSR set to: 63
 22715                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 22716  018584  0012               	return		;funcret
 22717  018586                     __end_of_PWM8_Initialize:
 22718                           	opt callstack 0
 22719                           
 22720 ;; *************** function _PMD_Initialize *****************
 22721 ;; Defined at:
 22722 ;;		line 89 in file "mcc_generated_files/mcc.c"
 22723 ;; Parameters:    Size  Location     Type
 22724 ;;		None
 22725 ;; Auto vars:     Size  Location     Type
 22726 ;;		None
 22727 ;; Return value:  Size  Location     Type
 22728 ;;                  1  [STACK] void 
 22729 ;; Registers used:
 22730 ;;		None
 22731 ;; Tracked objects:
 22732 ;;		On entry : 3F/39
 22733 ;;		On exit  : 3F/39
 22734 ;;		Unchanged: 0/0
 22735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22740 ;;Total ram usage:        0 bytes
 22741 ;; Hardware stack levels used:    1
 22742 ;; Hardware stack levels required when called:    6
 22743 ;; This function calls:
 22744 ;;		Nothing
 22745 ;; This function is called by:
 22746 ;;		_SYSTEM_Initialize
 22747 ;; This function uses a reentrant model
 22748 ;;
 22749                           
 22750                           	psect	text100
 22751  01859C                     __ptext100:
 22752                           	opt callstack 0
 22753  01859C                     _PMD_Initialize:
 22754                           	opt callstack 23
 22755                           
 22756                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 22757                           
 22758                           ; BSR set to: 63
 22759                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22760                           ;incstack = 0
 22761  01859C  0139               	movlb	57	; () banked
 22762  01859E  6BC0               	clrf	192,b	;volatile
 22763                           
 22764                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 22765  0185A0  6BC1               	clrf	193,b	;volatile
 22766                           
 22767                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 22768  0185A2  6BC2               	clrf	194,b	;volatile
 22769                           
 22770                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 22771  0185A4  6BC3               	clrf	195,b	;volatile
 22772                           
 22773                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 22774  0185A6  6BC4               	clrf	196,b	;volatile
 22775                           
 22776                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 22777  0185A8  6BC5               	clrf	197,b	;volatile
 22778                           
 22779                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 22780  0185AA  6BC6               	clrf	198,b	;volatile
 22781                           
 22782                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 22783  0185AC  6BC7               	clrf	199,b	;volatile
 22784                           
 22785                           ; BSR set to: 57
 22786                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22787  0185AE  0012               	return		;funcret
 22788  0185B0                     __end_of_PMD_Initialize:
 22789                           	opt callstack 0
 22790                           
 22791 ;; *************** function _PIN_MANAGER_Initialize *****************
 22792 ;; Defined at:
 22793 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 22794 ;; Parameters:    Size  Location     Type
 22795 ;;		None
 22796 ;; Auto vars:     Size  Location     Type
 22797 ;;		None
 22798 ;; Return value:  Size  Location     Type
 22799 ;;                  1  [STACK] void 
 22800 ;; Registers used:
 22801 ;;		wreg, status,2
 22802 ;; Tracked objects:
 22803 ;;		On entry : 3F/39
 22804 ;;		On exit  : 3F/3A
 22805 ;;		Unchanged: 0/0
 22806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22811 ;;Total ram usage:        0 bytes
 22812 ;; Hardware stack levels used:    1
 22813 ;; Hardware stack levels required when called:    6
 22814 ;; This function calls:
 22815 ;;		Nothing
 22816 ;; This function is called by:
 22817 ;;		_SYSTEM_Initialize
 22818 ;; This function uses a reentrant model
 22819 ;;
 22820                           
 22821                           	psect	text101
 22822  017276                     __ptext101:
 22823                           	opt callstack 0
 22824  017276                     _PIN_MANAGER_Initialize:
 22825                           	opt callstack 23
 22826                           
 22827                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 22828                           
 22829                           ; BSR set to: 57
 22830                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22831                           ;incstack = 0
 22832  017276  0E07               	movlw	7
 22833  017278  6EBE               	movwf	190,c	;volatile
 22834                           
 22835                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 22836  01727A  0E80               	movlw	128
 22837  01727C  6EBD               	movwf	189,c	;volatile
 22838                           
 22839                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 22840  01727E  6ABA               	clrf	186,c	;volatile
 22841                           
 22842                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 22843  017280  6ABF               	clrf	191,c	;volatile
 22844                           
 22845                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 22846  017282  6ABB               	clrf	187,c	;volatile
 22847                           
 22848                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 22849  017284  0E07               	movlw	7
 22850  017286  6EBC               	movwf	188,c	;volatile
 22851                           
 22852                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 22853  017288  6AC6               	clrf	198,c	;volatile
 22854                           
 22855                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 22856  01728A  0E0F               	movlw	15
 22857  01728C  6EC7               	movwf	199,c	;volatile
 22858                           
 22859                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 22860  01728E  68C2               	setf	194,c	;volatile
 22861                           
 22862                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 22863  017290  0EBF               	movlw	191
 22864  017292  6EC3               	movwf	195,c	;volatile
 22865                           
 22866                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 22867  017294  0E90               	movlw	144
 22868  017296  6EC4               	movwf	196,c	;volatile
 22869                           
 22870                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 22871  017298  0E0C               	movlw	12
 22872  01729A  6EC5               	movwf	197,c	;volatile
 22873                           
 22874                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 22875  01729C  013A               	movlb	58	; () banked
 22876  01729E  6B70               	clrf	112,b	;volatile
 22877                           
 22878                           ; BSR set to: 58
 22879                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 22880  0172A0  6B60               	clrf	96,b	;volatile
 22881                           
 22882                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 22883  0172A2  0E3C               	movlw	60
 22884  0172A4  6F50               	movwf	80,b	;volatile
 22885                           
 22886                           ; BSR set to: 58
 22887                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 22888  0172A6  6B80               	clrf	128,b	;volatile
 22889                           
 22890                           ; BSR set to: 58
 22891                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 22892  0172A8  6B90               	clrf	144,b	;volatile
 22893                           
 22894                           ; BSR set to: 58
 22895                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 22896  0172AA  6940               	setf	64,b	;volatile
 22897                           
 22898                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 22899  0172AC  0E0C               	movlw	12
 22900  0172AE  6F71               	movwf	113,b	;volatile
 22901                           
 22902                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 22903  0172B0  0E0F               	movlw	15
 22904  0172B2  6F91               	movwf	145,b	;volatile
 22905                           
 22906                           ; BSR set to: 58
 22907                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 22908  0172B4  6B81               	clrf	129,b	;volatile
 22909                           
 22910                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 22911  0172B6  0E83               	movlw	131
 22912  0172B8  6F51               	movwf	81,b	;volatile
 22913                           
 22914                           ; BSR set to: 58
 22915                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 22916  0172BA  6B41               	clrf	65,b	;volatile
 22917                           
 22918                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 22919  0172BC  0E97               	movlw	151
 22920  0172BE  6F61               	movwf	97,b	;volatile
 22921                           
 22922                           ; BSR set to: 58
 22923                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 22924  0172C0  6B82               	clrf	130,b	;volatile
 22925                           
 22926                           ; BSR set to: 58
 22927                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 22928  0172C2  6B92               	clrf	146,b	;volatile
 22929                           
 22930                           ; BSR set to: 58
 22931                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 22932  0172C4  6B42               	clrf	66,b	;volatile
 22933                           
 22934                           ; BSR set to: 58
 22935                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 22936  0172C6  6B52               	clrf	82,b	;volatile
 22937                           
 22938                           ; BSR set to: 58
 22939                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 22940  0172C8  6B62               	clrf	98,b	;volatile
 22941                           
 22942                           ; BSR set to: 58
 22943                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 22944  0172CA  6B72               	clrf	114,b	;volatile
 22945                           
 22946                           ; BSR set to: 58
 22947                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 22948  0172CC  6943               	setf	67,b	;volatile
 22949                           
 22950                           ; BSR set to: 58
 22951                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 22952  0172CE  6953               	setf	83,b	;volatile
 22953                           
 22954                           ; BSR set to: 58
 22955                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 22956  0172D0  6963               	setf	99,b	;volatile
 22957                           
 22958                           ; BSR set to: 58
 22959                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 22960  0172D2  6973               	setf	115,b	;volatile
 22961                           
 22962                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 22963  0172D4  0E07               	movlw	7
 22964  0172D6  6F83               	movwf	131,b	;volatile
 22965                           
 22966                           ; BSR set to: 58
 22967                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 22968  0172D8  6993               	setf	147,b	;volatile
 22969                           
 22970                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 22971  0172DA  0E0F               	movlw	15
 22972  0172DC  6FE8               	movwf	232,b	;volatile
 22973                           
 22974                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 22975  0172DE  0E13               	movlw	19
 22976  0172E0  6FDE               	movwf	222,b	;volatile
 22977                           
 22978                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 22979  0172E2  0E16               	movlw	22
 22980  0172E4  6F0E               	movwf	14,b	;volatile
 22981                           
 22982                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 22983  0172E6  0E1E               	movlw	30
 22984  0172E8  6F13               	movwf	19,b	;volatile
 22985                           
 22986                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 22987  0172EA  0E08               	movlw	8
 22988  0172EC  6FC0               	movwf	192,b	;volatile
 22989                           
 22990                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 22991  0172EE  0E10               	movlw	16
 22992  0172F0  6F19               	movwf	25,b	;volatile
 22993                           
 22994                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 22995  0172F2  0E09               	movlw	9
 22996  0172F4  6FC1               	movwf	193,b	;volatile
 22997                           
 22998                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 22999  0172F6  0E1F               	movlw	31
 23000  0172F8  6F15               	movwf	21,b	;volatile
 23001                           
 23002                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 23003  0172FA  0E13               	movlw	19
 23004  0172FC  6F16               	movwf	22,b	;volatile
 23005                           
 23006                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 23007  0172FE  0E17               	movlw	23
 23008  017300  6FE5               	movwf	229,b	;volatile
 23009                           
 23010                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 23011  017302  0E14               	movlw	20
 23012  017304  6FDF               	movwf	223,b	;volatile
 23013                           
 23014                           ; BSR set to: 58
 23015                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 23016  017306  0012               	return		;funcret
 23017  017308                     __end_of_PIN_MANAGER_Initialize:
 23018                           	opt callstack 0
 23019                           
 23020 ;; *************** function _OSCILLATOR_Initialize *****************
 23021 ;; Defined at:
 23022 ;;		line 71 in file "mcc_generated_files/mcc.c"
 23023 ;; Parameters:    Size  Location     Type
 23024 ;;		None
 23025 ;; Auto vars:     Size  Location     Type
 23026 ;;		None
 23027 ;; Return value:  Size  Location     Type
 23028 ;;                  1  [STACK] void 
 23029 ;; Registers used:
 23030 ;;		wreg, status,2
 23031 ;; Tracked objects:
 23032 ;;		On entry : 3F/3A
 23033 ;;		On exit  : 3F/39
 23034 ;;		Unchanged: 0/0
 23035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23040 ;;Total ram usage:        0 bytes
 23041 ;; Hardware stack levels used:    1
 23042 ;; Hardware stack levels required when called:    6
 23043 ;; This function calls:
 23044 ;;		Nothing
 23045 ;; This function is called by:
 23046 ;;		_SYSTEM_Initialize
 23047 ;; This function uses a reentrant model
 23048 ;;
 23049                           
 23050                           	psect	text102
 23051  018586                     __ptext102:
 23052                           	opt callstack 0
 23053  018586                     _OSCILLATOR_Initialize:
 23054                           	opt callstack 23
 23055                           
 23056                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 23057                           
 23058                           ; BSR set to: 58
 23059                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23060                           ;incstack = 0
 23061  018586  0E20               	movlw	32
 23062  018588  0139               	movlb	57	; () banked
 23063  01858A  6FD9               	movwf	217,b	;volatile
 23064                           
 23065                           ; BSR set to: 57
 23066                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 23067  01858C  6BDB               	clrf	219,b	;volatile
 23068                           
 23069                           ; BSR set to: 57
 23070                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 23071  01858E  6BDD               	clrf	221,b	;volatile
 23072                           
 23073                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 23074  018590  0E02               	movlw	2
 23075  018592  6FDF               	movwf	223,b	;volatile
 23076                           
 23077                           ; BSR set to: 57
 23078                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 23079  018594  6BDE               	clrf	222,b	;volatile
 23080  018596                     l171:
 23081                           
 23082                           ; BSR set to: 57
 23083                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 23084  018596  B1DC               	btfsc	220,0,b	;volatile
 23085  018598  0012               	return	
 23086  01859A  D7FD               	goto	l171
 23087  01859C                     __end_of_OSCILLATOR_Initialize:
 23088                           	opt callstack 0
 23089                           
 23090 ;; *************** function _INTERRUPT_Initialize *****************
 23091 ;; Defined at:
 23092 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 23093 ;; Parameters:    Size  Location     Type
 23094 ;;		None
 23095 ;; Auto vars:     Size  Location     Type
 23096 ;;  state           1  [STACK] _Bool 
 23097 ;; Return value:  Size  Location     Type
 23098 ;;                  1  [STACK] void 
 23099 ;; Registers used:
 23100 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 23101 ;; Tracked objects:
 23102 ;;		On entry : 0/0
 23103 ;;		On exit  : 3F/39
 23104 ;;		Unchanged: 0/0
 23105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23110 ;;Total ram usage:        0 bytes
 23111 ;; Hardware stack levels used:    1
 23112 ;; Hardware stack levels required when called:    6
 23113 ;; This function calls:
 23114 ;;		Nothing
 23115 ;; This function is called by:
 23116 ;;		_SYSTEM_Initialize
 23117 ;; This function uses a reentrant model
 23118 ;;
 23119                           
 23120                           	psect	text103
 23121  0176CC                     __ptext103:
 23122                           	opt callstack 0
 23123  0176CC                     _INTERRUPT_Initialize:
 23124                           	opt callstack 0
 23125                           
 23126                           ; BSR set to: 57
 23127                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23128  0176CC  52E6               	movf	postinc1,f,c
 23129                           
 23130                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 23131                           
 23132                           ;incstack = 0
 23133  0176CE  8AD2               	bsf	210,5,c	;volatile
 23134                           
 23135                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 23136  0176D0  AED2               	btfss	16338,7,c	;volatile
 23137  0176D2  D003               	goto	u12300
 23138  0176D4  6A3D               	clrf	(btemp+11)^0,c
 23139  0176D6  2A3D               	incf	(btemp+11)^0,f,c
 23140  0176D8  D001               	goto	u12318
 23141  0176DA                     u12300:
 23142  0176DA  6A3D               	clrf	(btemp+11)^0,c
 23143  0176DC                     u12318:
 23144                           
 23145                           ;stkvar	_state @ sp[(-1)+0]
 23146  0176DC  0EFF               	movlw	-1
 23147  0176DE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 23148                           
 23149                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 23150  0176E4  9ED2               	bcf	16338,7,c	;volatile
 23151                           
 23152                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 23153  0176E6  0E55               	movlw	85
 23154  0176E8  6ED4               	movwf	212,c	;volatile
 23155                           
 23156                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 23157  0176EA  0EAA               	movlw	170
 23158  0176EC  6ED4               	movwf	212,c	;volatile
 23159                           
 23160                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 23161  0176EE  90D4               	bcf	212,0,c	;volatile
 23162                           
 23163                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 23164  0176F0  0138               	movlb	56	; () banked
 23165  0176F2  6B9F               	clrf	159,b	;volatile
 23166                           
 23167                           ; BSR set to: 56
 23168                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 23169  0176F4  6B9E               	clrf	158,b	;volatile
 23170                           
 23171                           ; BSR set to: 56
 23172                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 23173  0176F6  0E08               	movlw	8
 23174  0176F8  6F9D               	movwf	157,b	;volatile
 23175                           
 23176                           ; BSR set to: 56
 23177                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 23178  0176FA  0E55               	movlw	85
 23179  0176FC  6ED4               	movwf	212,c	;volatile
 23180                           
 23181                           ; BSR set to: 56
 23182                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 23183  0176FE  0EAA               	movlw	170
 23184  017700  6ED4               	movwf	212,c	;volatile
 23185                           
 23186                           ; BSR set to: 56
 23187                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 23188  017702  80D4               	bsf	212,0,c	;volatile
 23189                           
 23190                           ; BSR set to: 56
 23191                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 23192                           ;stkvar	_state @ sp[(-1)+0]
 23193  017704  0EFF               	movlw	-1
 23194  017706  B0E3               	btfsc	plusw1,0,c
 23195  017708  D002               	bra	u12325
 23196  01770A  9ED2               	bcf	16338,7,c	;volatile
 23197  01770C  D001               	bra	u12326
 23198  01770E                     u12325:
 23199  01770E  8ED2               	bsf	16338,7,c	;volatile
 23200  017710                     u12326:
 23201                           
 23202                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 23203  017710  0139               	movlb	57	; () banked
 23204  017712  8782               	bsf	130,3,b	;volatile
 23205                           
 23206                           ; BSR set to: 57
 23207                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 23208  017714  8382               	bsf	130,1,b	;volatile
 23209                           
 23210                           ; BSR set to: 57
 23211                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 23212  017716  8182               	bsf	130,0,b	;volatile
 23213                           
 23214                           ; BSR set to: 57
 23215                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 23216  017718  8582               	bsf	130,2,b	;volatile
 23217                           
 23218                           ; BSR set to: 57
 23219                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 23220  01771A  8786               	bsf	134,3,b	;volatile
 23221                           
 23222                           ; BSR set to: 57
 23223                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 23224  01771C  8586               	bsf	134,2,b	;volatile
 23225                           
 23226                           ; BSR set to: 57
 23227                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 23228  01771E  8983               	bsf	131,4,b	;volatile
 23229                           
 23230                           ; BSR set to: 57
 23231                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 23232  017720  8783               	bsf	131,3,b	;volatile
 23233                           
 23234                           ; BSR set to: 57
 23235                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 23236  017722  8181               	bsf	129,0,b	;volatile
 23237                           
 23238                           ; BSR set to: 57
 23239                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 23240  017724  9185               	bcf	133,0,b	;volatile
 23241                           
 23242                           ; BSR set to: 57
 23243                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 23244  017726  8189               	bsf	137,0,b	;volatile
 23245                           
 23246                           ; BSR set to: 57
 23247                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 23248  017728  9D88               	bcf	136,6,b	;volatile
 23249                           
 23250                           ; BSR set to: 57
 23251                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 23252  01772A  8581               	bsf	129,2,b	;volatile
 23253                           
 23254                           ; BSR set to: 57
 23255                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 23256  01772C  8781               	bsf	129,3,b	;volatile
 23257                           
 23258                           ; BSR set to: 57
 23259                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 23260  01772E  52E5               	movf	postdec1,f,c
 23261  017730  0012               	return		;funcret
 23262  017732                     __end_of_INTERRUPT_Initialize:
 23263                           	opt callstack 0
 23264                           
 23265 ;; *************** function _FVR_Initialize *****************
 23266 ;; Defined at:
 23267 ;;		line 58 in file "mcc_generated_files/fvr.c"
 23268 ;; Parameters:    Size  Location     Type
 23269 ;;		None
 23270 ;; Auto vars:     Size  Location     Type
 23271 ;;		None
 23272 ;; Return value:  Size  Location     Type
 23273 ;;                  1  [STACK] void 
 23274 ;; Registers used:
 23275 ;;		wreg, status,2
 23276 ;; Tracked objects:
 23277 ;;		On entry : 3F/39
 23278 ;;		On exit  : 3F/3E
 23279 ;;		Unchanged: 0/0
 23280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23285 ;;Total ram usage:        0 bytes
 23286 ;; Hardware stack levels used:    1
 23287 ;; Hardware stack levels required when called:    6
 23288 ;; This function calls:
 23289 ;;		Nothing
 23290 ;; This function is called by:
 23291 ;;		_SYSTEM_Initialize
 23292 ;; This function uses a reentrant model
 23293 ;;
 23294                           
 23295                           	psect	text104
 23296  01866A                     __ptext104:
 23297                           	opt callstack 0
 23298  01866A                     _FVR_Initialize:
 23299                           	opt callstack 23
 23300                           
 23301                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 23302                           
 23303                           ; BSR set to: 57
 23304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23305                           ;incstack = 0
 23306  01866A  0EAF               	movlw	175
 23307  01866C  013E               	movlb	62	; () banked
 23308  01866E  6FC1               	movwf	193,b	;volatile
 23309                           
 23310                           ; BSR set to: 62
 23311                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23312  018670  0012               	return		;funcret
 23313  018672                     __end_of_FVR_Initialize:
 23314                           	opt callstack 0
 23315                           
 23316 ;; *************** function _EXT_INT_Initialize *****************
 23317 ;; Defined at:
 23318 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 23319 ;; Parameters:    Size  Location     Type
 23320 ;;		None
 23321 ;; Auto vars:     Size  Location     Type
 23322 ;;		None
 23323 ;; Return value:  Size  Location     Type
 23324 ;;                  1  [STACK] void 
 23325 ;; Registers used:
 23326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23327 ;; Tracked objects:
 23328 ;;		On entry : 3F/3F
 23329 ;;		On exit  : 3F/39
 23330 ;;		Unchanged: 0/0
 23331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23336 ;;Total ram usage:        0 bytes
 23337 ;; Hardware stack levels used:    1
 23338 ;; Hardware stack levels required when called:    7
 23339 ;; This function calls:
 23340 ;;		_INT0_SetInterruptHandler
 23341 ;;		_INT1_SetInterruptHandler
 23342 ;; This function is called by:
 23343 ;;		_SYSTEM_Initialize
 23344 ;; This function uses a reentrant model
 23345 ;;
 23346                           
 23347                           	psect	text105
 23348  017E8E                     __ptext105:
 23349                           	opt callstack 0
 23350  017E8E                     _EXT_INT_Initialize:
 23351                           	opt callstack 22
 23352                           
 23353                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 23354                           
 23355                           ; BSR set to: 62
 23356                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23357                           ;incstack = 0
 23358  017E8E  0139               	movlb	57	; () banked
 23359  017E90  91A1               	bcf	161,0,b	;volatile
 23360                           
 23361                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 23362  017E92  90D2               	bcf	210,0,c	;volatile
 23363                           
 23364                           ; BSR set to: 57
 23365                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 23366  017E94  0E8C               	movlw	low _INT0_DefaultInterruptHandler
 23367  017E96  6EE6               	movwf	postinc1,c
 23368  017E98  0E86               	movlw	high _INT0_DefaultInterruptHandler
 23369  017E9A  6EE6               	movwf	postinc1,c
 23370  017E9C  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 23371  017E9E  6EE6               	movwf	postinc1,c
 23372  017EA0  EC0B  F0C1         	call	_INT0_SetInterruptHandler	;wreg free
 23373                           
 23374                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 23375  017EA4  0139               	movlb	57	; () banked
 23376  017EA6  8191               	bsf	145,0,b	;volatile
 23377                           
 23378                           ; BSR set to: 57
 23379                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 23380  017EA8  91A5               	bcf	165,0,b	;volatile
 23381                           
 23382                           ; BSR set to: 57
 23383                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 23384  017EAA  92D2               	bcf	210,1,c	;volatile
 23385                           
 23386                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 23387  017EAC  0E8A               	movlw	low _INT1_DefaultInterruptHandler
 23388  017EAE  6EE6               	movwf	postinc1,c
 23389  017EB0  0E86               	movlw	high _INT1_DefaultInterruptHandler
 23390  017EB2  6EE6               	movwf	postinc1,c
 23391  017EB4  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 23392  017EB6  6EE6               	movwf	postinc1,c
 23393  017EB8  ECF7  F0C0         	call	_INT1_SetInterruptHandler	;wreg free
 23394                           
 23395                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 23396  017EBC  0139               	movlb	57	; () banked
 23397  017EBE  8195               	bsf	149,0,b	;volatile
 23398                           
 23399                           ; BSR set to: 57
 23400                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 23401  017EC0  0012               	return		;funcret
 23402  017EC2                     __end_of_EXT_INT_Initialize:
 23403                           	opt callstack 0
 23404                           
 23405 ;; *************** function _INT1_SetInterruptHandler *****************
 23406 ;; Defined at:
 23407 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 23408 ;; Parameters:    Size  Location     Type
 23409 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23410 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 23411 ;; Auto vars:     Size  Location     Type
 23412 ;;		None
 23413 ;; Return value:  Size  Location     Type
 23414 ;;                  1  [STACK] void 
 23415 ;; Registers used:
 23416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23417 ;; Tracked objects:
 23418 ;;		On entry : 3F/39
 23419 ;;		On exit  : 0/0
 23420 ;;		Unchanged: 0/0
 23421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23425 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23426 ;;Total ram usage:        0 bytes
 23427 ;; Hardware stack levels used:    1
 23428 ;; Hardware stack levels required when called:    6
 23429 ;; This function calls:
 23430 ;;		Nothing
 23431 ;; This function is called by:
 23432 ;;		_EXT_INT_Initialize
 23433 ;;		_start_switch_handler
 23434 ;; This function uses a reentrant model
 23435 ;;
 23436                           
 23437                           	psect	text106
 23438  0181EE                     __ptext106:
 23439                           	opt callstack 0
 23440  0181EE                     _INT1_SetInterruptHandler:
 23441                           	opt callstack 23
 23442                           
 23443                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 23444                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23445                           
 23446                           ; BSR set to: 57
 23447                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23448                           ;incstack = 0
 23449  0181EE  50E1               	movf	fsr1l,w,c
 23450  0181F0  0FFD               	addlw	-3
 23451  0181F2  6ED9               	movwf	fsr2l,c
 23452  0181F4  50E2               	movf	fsr1h,w,c
 23453  0181F6  6EDA               	movwf	fsr2h,c
 23454  0181F8  0EFF               	movlw	255
 23455  0181FA  22DA               	addwfc	fsr2h,f,c
 23456  0181FC  006F FF78  F013    	movff	postinc2,_INT1_InterruptHandler
 23457  018202  006F FF78  F014    	movff	postinc2,_INT1_InterruptHandler+1
 23458  018208  006F FF74  F015    	movff	postdec2,_INT1_InterruptHandler+2
 23459                           
 23460                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23461  01820E  52E5               	movf	postdec1,f,c
 23462  018210  52E5               	movf	postdec1,f,c
 23463  018212  52E5               	movf	postdec1,f,c
 23464  018214  0012               	return		;funcret
 23465  018216                     __end_of_INT1_SetInterruptHandler:
 23466                           	opt callstack 0
 23467                           
 23468 ;; *************** function _INT0_SetInterruptHandler *****************
 23469 ;; Defined at:
 23470 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 23471 ;; Parameters:    Size  Location     Type
 23472 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23473 ;;		 -> INT0_DefaultInterruptHandler(1), 
 23474 ;; Auto vars:     Size  Location     Type
 23475 ;;		None
 23476 ;; Return value:  Size  Location     Type
 23477 ;;                  1  [STACK] void 
 23478 ;; Registers used:
 23479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23480 ;; Tracked objects:
 23481 ;;		On entry : 3F/39
 23482 ;;		On exit  : 0/0
 23483 ;;		Unchanged: 0/0
 23484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23489 ;;Total ram usage:        0 bytes
 23490 ;; Hardware stack levels used:    1
 23491 ;; Hardware stack levels required when called:    6
 23492 ;; This function calls:
 23493 ;;		Nothing
 23494 ;; This function is called by:
 23495 ;;		_EXT_INT_Initialize
 23496 ;; This function uses a reentrant model
 23497 ;;
 23498                           
 23499                           	psect	text107
 23500  018216                     __ptext107:
 23501                           	opt callstack 0
 23502  018216                     _INT0_SetInterruptHandler:
 23503                           	opt callstack 22
 23504                           
 23505                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 23506                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23507                           
 23508                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23509                           ;incstack = 0
 23510  018216  50E1               	movf	fsr1l,w,c
 23511  018218  0FFD               	addlw	-3
 23512  01821A  6ED9               	movwf	fsr2l,c
 23513  01821C  50E2               	movf	fsr1h,w,c
 23514  01821E  6EDA               	movwf	fsr2h,c
 23515  018220  0EFF               	movlw	255
 23516  018222  22DA               	addwfc	fsr2h,f,c
 23517  018224  006F FF78  F016    	movff	postinc2,_INT0_InterruptHandler
 23518  01822A  006F FF78  F017    	movff	postinc2,_INT0_InterruptHandler+1
 23519  018230  006F FF74  F018    	movff	postdec2,_INT0_InterruptHandler+2
 23520                           
 23521                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23522  018236  52E5               	movf	postdec1,f,c
 23523  018238  52E5               	movf	postdec1,f,c
 23524  01823A  52E5               	movf	postdec1,f,c
 23525  01823C  0012               	return		;funcret
 23526  01823E                     __end_of_INT0_SetInterruptHandler:
 23527                           	opt callstack 0
 23528                           
 23529 ;; *************** function _DMA2_Initialize *****************
 23530 ;; Defined at:
 23531 ;;		line 61 in file "mcc_generated_files/dma2.c"
 23532 ;; Parameters:    Size  Location     Type
 23533 ;;		None
 23534 ;; Auto vars:     Size  Location     Type
 23535 ;;		None
 23536 ;; Return value:  Size  Location     Type
 23537 ;;                  1  [STACK] void 
 23538 ;; Registers used:
 23539 ;;		wreg, status,2
 23540 ;; Tracked objects:
 23541 ;;		On entry : 3F/3D
 23542 ;;		On exit  : 3F/3B
 23543 ;;		Unchanged: 0/0
 23544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23549 ;;Total ram usage:        0 bytes
 23550 ;; Hardware stack levels used:    1
 23551 ;; Hardware stack levels required when called:    6
 23552 ;; This function calls:
 23553 ;;		Nothing
 23554 ;; This function is called by:
 23555 ;;		_SYSTEM_Initialize
 23556 ;; This function uses a reentrant model
 23557 ;;
 23558                           
 23559                           	psect	text108
 23560  017976                     __ptext108:
 23561                           	opt callstack 0
 23562  017976                     _DMA2_Initialize:
 23563                           	opt callstack 23
 23564                           
 23565                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 23566                           
 23567                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23568                           ;incstack = 0
 23569  017976  0E00               	movlw	0
 23570  017978  013B               	movlb	59	; () banked
 23571  01797A  6FD9               	movwf	217,b	;volatile
 23572  01797C  0E10               	movlw	16
 23573  01797E  6FDA               	movwf	218,b	;volatile
 23574  017980  0E00               	movlw	0
 23575  017982  6FDB               	movwf	219,b	;volatile
 23576                           
 23577                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 23578  017984  0E3F               	movlw	63
 23579  017986  6FD1               	movwf	209,b	;volatile
 23580  017988  0EBB               	movlw	187
 23581  01798A  6FD0               	movwf	208,b	;volatile
 23582                           
 23583                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 23584  01798C  0E03               	movlw	3
 23585  01798E  6FDD               	movwf	221,b	;volatile
 23586                           
 23587                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 23588  017990  0E00               	movlw	0
 23589  017992  6FD8               	movwf	216,b	;volatile
 23590  017994  0E01               	movlw	1
 23591  017996  6FD7               	movwf	215,b	;volatile
 23592                           
 23593                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 23594  017998  0E00               	movlw	0
 23595  01799A  6FCF               	movwf	207,b	;volatile
 23596  01799C  0E01               	movlw	1
 23597  01799E  6FCE               	movwf	206,b	;volatile
 23598                           
 23599                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 23600  0179A0  0E46               	movlw	70
 23601  0179A2  6FDF               	movwf	223,b	;volatile
 23602                           
 23603                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 23604  0179A4  0E3D               	movlw	61
 23605  0179A6  6FDE               	movwf	222,b	;volatile
 23606                           
 23607                           ; BSR set to: 59
 23608                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 23609  0179A8  0139               	movlb	57	; () banked
 23610  0179AA  97A5               	bcf	165,3,b	;volatile
 23611                           
 23612                           ; BSR set to: 57
 23613                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 23614  0179AC  95A5               	bcf	165,2,b	;volatile
 23615                           
 23616                           ; BSR set to: 57
 23617                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 23618  0179AE  9BA5               	bcf	165,5,b	;volatile
 23619                           
 23620                           ; BSR set to: 57
 23621                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 23622  0179B0  99A5               	bcf	165,4,b	;volatile
 23623                           
 23624                           ; BSR set to: 57
 23625                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 23626  0179B2  9795               	bcf	149,3,b	;volatile
 23627                           
 23628                           ; BSR set to: 57
 23629                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 23630  0179B4  9595               	bcf	149,2,b	;volatile
 23631                           
 23632                           ; BSR set to: 57
 23633                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 23634  0179B6  9B95               	bcf	149,5,b	;volatile
 23635                           
 23636                           ; BSR set to: 57
 23637                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 23638  0179B8  9995               	bcf	149,4,b	;volatile
 23639  0179BA  9ED2               	bcf	16338,7,c	;# 
 23640  0179BC  0139               	banksel	14831	;# 
 23641  0179BE  0E55               	movlw	85	;# 
 23642  0179C0  6FEF               	movwf	14831,b	;# 
 23643  0179C2  0EAA               	movlw	170	;# 
 23644  0179C4  6FEF               	movwf	14831,b	;# 
 23645  0179C6  81EF               	bsf	14831,0,b	;# 
 23646  0179C8  8ED2               	bsf	16338,7,c	;# 
 23647                           
 23648                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 23649  0179CA  013B               	movlb	59	; () banked
 23650  0179CC  6BDC               	clrf	220,b	;volatile
 23651                           
 23652                           ; BSR set to: 59
 23653                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23654  0179CE  0012               	return		;funcret
 23655  0179D0                     __end_of_DMA2_Initialize:
 23656                           	opt callstack 0
 23657                           
 23658 ;; *************** function _DMA1_Initialize *****************
 23659 ;; Defined at:
 23660 ;;		line 86 in file "mcc_generated_files/dma1.c"
 23661 ;; Parameters:    Size  Location     Type
 23662 ;;		None
 23663 ;; Auto vars:     Size  Location     Type
 23664 ;;		None
 23665 ;; Return value:  Size  Location     Type
 23666 ;;                  1  [STACK] void 
 23667 ;; Registers used:
 23668 ;;		wreg, status,2
 23669 ;; Tracked objects:
 23670 ;;		On entry : 3F/3B
 23671 ;;		On exit  : 3F/3B
 23672 ;;		Unchanged: 0/0
 23673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23678 ;;Total ram usage:        0 bytes
 23679 ;; Hardware stack levels used:    1
 23680 ;; Hardware stack levels required when called:    6
 23681 ;; This function calls:
 23682 ;;		Nothing
 23683 ;; This function is called by:
 23684 ;;		_SYSTEM_Initialize
 23685 ;; This function uses a reentrant model
 23686 ;;
 23687                           
 23688                           	psect	text109
 23689  017590                     __ptext109:
 23690                           	opt callstack 0
 23691  017590                     _DMA1_Initialize:
 23692                           	opt callstack 23
 23693                           
 23694                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 23695                           
 23696                           ; BSR set to: 59
 23697                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23698                           ;incstack = 0
 23699  017590  0E00               	movlw	0
 23700  017592  013B               	movlb	59	; () banked
 23701  017594  6FF9               	movwf	249,b	;volatile
 23702  017596  0E10               	movlw	16
 23703  017598  6FFA               	movwf	250,b	;volatile
 23704  01759A  0E00               	movlw	0
 23705  01759C  6FFB               	movwf	251,b	;volatile
 23706                           
 23707                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 23708  01759E  0E3D               	movlw	61
 23709  0175A0  6FF1               	movwf	241,b	;volatile
 23710  0175A2  0E11               	movlw	17
 23711  0175A4  6FF0               	movwf	240,b	;volatile
 23712                           
 23713                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 23714  0175A6  0E03               	movlw	3
 23715  0175A8  6FFD               	movwf	253,b	;volatile
 23716                           
 23717                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 23718  0175AA  0E00               	movlw	0
 23719  0175AC  6FF8               	movwf	248,b	;volatile
 23720  0175AE  0E01               	movlw	1
 23721  0175B0  6FF7               	movwf	247,b	;volatile
 23722                           
 23723                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 23724  0175B2  0E00               	movlw	0
 23725  0175B4  6FEF               	movwf	239,b	;volatile
 23726  0175B6  0E01               	movlw	1
 23727  0175B8  6FEE               	movwf	238,b	;volatile
 23728                           
 23729                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 23730  0175BA  0E15               	movlw	21
 23731  0175BC  6FFF               	movwf	255,b	;volatile
 23732                           
 23733                           ; BSR set to: 59
 23734                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 23735  0175BE  6BFE               	clrf	254,b	;volatile
 23736                           
 23737                           ; BSR set to: 59
 23738                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 23739  0175C0  0139               	movlb	57	; () banked
 23740  0175C2  93A2               	bcf	162,1,b	;volatile
 23741                           
 23742                           ; BSR set to: 57
 23743                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 23744  0175C4  91A2               	bcf	162,0,b	;volatile
 23745                           
 23746                           ; BSR set to: 57
 23747                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 23748  0175C6  97A2               	bcf	162,3,b	;volatile
 23749                           
 23750                           ; BSR set to: 57
 23751                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 23752  0175C8  95A2               	bcf	162,2,b	;volatile
 23753                           
 23754                           ; BSR set to: 57
 23755                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 23756  0175CA  8392               	bsf	146,1,b	;volatile
 23757                           
 23758                           ; BSR set to: 57
 23759                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 23760  0175CC  8192               	bsf	146,0,b	;volatile
 23761                           
 23762                           ; BSR set to: 57
 23763                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 23764  0175CE  8792               	bsf	146,3,b	;volatile
 23765                           
 23766                           ; BSR set to: 57
 23767                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 23768  0175D0  8592               	bsf	146,2,b	;volatile
 23769                           
 23770                           ; BSR set to: 57
 23771                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 23772  0175D2  6BF1               	clrf	241,b	;volatile
 23773                           
 23774                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 23775  0175D4  0E01               	movlw	1
 23776  0175D6  6FF2               	movwf	242,b	;volatile
 23777                           
 23778                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 23779  0175D8  0E04               	movlw	4
 23780  0175DA  6FF3               	movwf	243,b	;volatile
 23781                           
 23782                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 23783  0175DC  0E02               	movlw	2
 23784  0175DE  6FF4               	movwf	244,b	;volatile
 23785                           
 23786                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 23787  0175E0  0E03               	movlw	3
 23788  0175E2  6FF7               	movwf	247,b	;volatile
 23789  0175E4  9ED2               	bcf	16338,7,c	;# 
 23790  0175E6  0139               	banksel	14831	;# 
 23791  0175E8  0E55               	movlw	85	;# 
 23792  0175EA  6FEF               	movwf	14831,b	;# 
 23793  0175EC  0EAA               	movlw	170	;# 
 23794  0175EE  6FEF               	movwf	14831,b	;# 
 23795  0175F0  81EF               	bsf	14831,0,b	;# 
 23796  0175F2  8ED2               	bsf	16338,7,c	;# 
 23797                           
 23798                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 23799  0175F4  013B               	movlb	59	; () banked
 23800  0175F6  6BFC               	clrf	252,b	;volatile
 23801                           
 23802                           ; BSR set to: 59
 23803                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23804  0175F8  0012               	return		;funcret
 23805  0175FA                     __end_of_DMA1_Initialize:
 23806                           	opt callstack 0
 23807                           
 23808 ;; *************** function _CLKREF_Initialize *****************
 23809 ;; Defined at:
 23810 ;;		line 58 in file "mcc_generated_files/clkref.c"
 23811 ;; Parameters:    Size  Location     Type
 23812 ;;		None
 23813 ;; Auto vars:     Size  Location     Type
 23814 ;;		None
 23815 ;; Return value:  Size  Location     Type
 23816 ;;                  1  [STACK] void 
 23817 ;; Registers used:
 23818 ;;		wreg, status,2
 23819 ;; Tracked objects:
 23820 ;;		On entry : 3F/3B
 23821 ;;		On exit  : 3F/3C
 23822 ;;		Unchanged: 0/0
 23823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23828 ;;Total ram usage:        0 bytes
 23829 ;; Hardware stack levels used:    1
 23830 ;; Hardware stack levels required when called:    6
 23831 ;; This function calls:
 23832 ;;		Nothing
 23833 ;; This function is called by:
 23834 ;;		_SYSTEM_Initialize
 23835 ;; This function uses a reentrant model
 23836 ;;
 23837                           
 23838                           	psect	text110
 23839  01861E                     __ptext110:
 23840                           	opt callstack 0
 23841  01861E                     _CLKREF_Initialize:
 23842                           	opt callstack 23
 23843                           
 23844                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 23845                           
 23846                           ; BSR set to: 59
 23847                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23848                           ;incstack = 0
 23849  01861E  013C               	movlb	60	; () banked
 23850  018620  6BE6               	clrf	230,b	;volatile
 23851                           
 23852                           ; BSR set to: 60
 23853                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 23854  018622  0E94               	movlw	148
 23855  018624  6FE5               	movwf	229,b	;volatile
 23856                           
 23857                           ; BSR set to: 60
 23858                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23859  018626  0012               	return		;funcret
 23860  018628                     __end_of_CLKREF_Initialize:
 23861                           	opt callstack 0
 23862                           
 23863 ;; *************** function _ADCC_Initialize *****************
 23864 ;; Defined at:
 23865 ;;		line 65 in file "mcc_generated_files/adcc.c"
 23866 ;; Parameters:    Size  Location     Type
 23867 ;;		None
 23868 ;; Auto vars:     Size  Location     Type
 23869 ;;		None
 23870 ;; Return value:  Size  Location     Type
 23871 ;;                  1  [STACK] void 
 23872 ;; Registers used:
 23873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23874 ;; Tracked objects:
 23875 ;;		On entry : 3F/3E
 23876 ;;		On exit  : 0/0
 23877 ;;		Unchanged: 0/0
 23878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23883 ;;Total ram usage:        0 bytes
 23884 ;; Hardware stack levels used:    1
 23885 ;; Hardware stack levels required when called:    7
 23886 ;; This function calls:
 23887 ;;		_ADCC_SetADIInterruptHandler
 23888 ;;		_ADCC_SetADTIInterruptHandler
 23889 ;; This function is called by:
 23890 ;;		_SYSTEM_Initialize
 23891 ;; This function uses a reentrant model
 23892 ;;
 23893                           
 23894                           	psect	text111
 23895  0175FA                     __ptext111:
 23896                           	opt callstack 0
 23897  0175FA                     _ADCC_Initialize:
 23898                           	opt callstack 22
 23899                           
 23900                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 23901                           
 23902                           ; BSR set to: 60
 23903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23904                           ;incstack = 0
 23905  0175FA  013E               	movlb	62	; () banked
 23906  0175FC  6BDE               	clrf	222,b	;volatile
 23907                           
 23908                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 23909  0175FE  6BDF               	clrf	223,b	;volatile
 23910                           
 23911                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 23912  017600  6BE0               	clrf	224,b	;volatile
 23913                           
 23914                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 23915  017602  6BE1               	clrf	225,b	;volatile
 23916                           
 23917                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 23918  017604  6BE4               	clrf	228,b	;volatile
 23919                           
 23920                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 23921  017606  6BE5               	clrf	229,b	;volatile
 23922                           
 23923                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 23924  017608  6BEA               	clrf	234,b	;volatile
 23925                           
 23926                           ; BSR set to: 62
 23927                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 23928  01760A  0E40               	movlw	64
 23929  01760C  6FEC               	movwf	236,b	;volatile
 23930                           
 23931                           ; BSR set to: 62
 23932                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 23933  01760E  6BF1               	clrf	241,b	;volatile
 23934                           
 23935                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 23936  017610  0E20               	movlw	32
 23937  017612  6FF3               	movwf	243,b	;volatile
 23938                           
 23939                           ; BSR set to: 62
 23940                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 23941  017614  6BF4               	clrf	244,b	;volatile
 23942                           
 23943                           ; BSR set to: 62
 23944                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 23945  017616  6BF5               	clrf	245,b	;volatile
 23946                           
 23947                           ; BSR set to: 62
 23948                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 23949  017618  6BF6               	clrf	246,b	;volatile
 23950                           
 23951                           ; BSR set to: 62
 23952                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 23953  01761A  6BF7               	clrf	247,b	;volatile
 23954                           
 23955                           ; BSR set to: 62
 23956                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 23957  01761C  6BF9               	clrf	249,b	;volatile
 23958                           
 23959                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 23960  01761E  0E5B               	movlw	91
 23961  017620  6FFA               	movwf	250,b	;volatile
 23962                           
 23963                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 23964  017622  0E27               	movlw	39
 23965  017624  6FFB               	movwf	251,b	;volatile
 23966                           
 23967                           ; BSR set to: 62
 23968                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 23969  017626  6BFC               	clrf	252,b	;volatile
 23970                           
 23971                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 23972  017628  0E02               	movlw	2
 23973  01762A  6FFD               	movwf	253,b	;volatile
 23974                           
 23975                           ; BSR set to: 62
 23976                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 23977  01762C  6BFE               	clrf	254,b	;volatile
 23978                           
 23979                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 23980  01762E  0E07               	movlw	7
 23981  017630  6FFF               	movwf	255,b	;volatile
 23982                           
 23983                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 23984  017632  0E84               	movlw	132
 23985  017634  6FF8               	movwf	248,b	;volatile
 23986                           
 23987                           ; BSR set to: 62
 23988                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 23989  017636  0139               	movlb	57	; () banked
 23990  017638  95A1               	bcf	161,2,b	;volatile
 23991                           
 23992                           ; BSR set to: 57
 23993                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 23994  01763A  8591               	bsf	145,2,b	;volatile
 23995                           
 23996                           ; BSR set to: 57
 23997                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 23998  01763C  0E8E               	movlw	low _ADCC_DefaultInterruptHandler
 23999  01763E  6EE6               	movwf	postinc1,c
 24000  017640  0E86               	movlw	high _ADCC_DefaultInterruptHandler
 24001  017642  6EE6               	movwf	postinc1,c
 24002  017644  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24003  017646  6EE6               	movwf	postinc1,c
 24004  017648  EC33  F0C1         	call	_ADCC_SetADIInterruptHandler	;wreg free
 24005                           
 24006                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 24007  01764C  0139               	movlb	57	; () banked
 24008  01764E  97A1               	bcf	161,3,b	;volatile
 24009                           
 24010                           ; BSR set to: 57
 24011                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 24012  017650  8791               	bsf	145,3,b	;volatile
 24013                           
 24014                           ; BSR set to: 57
 24015                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 24016  017652  0E8E               	movlw	low _ADCC_DefaultInterruptHandler
 24017  017654  6EE6               	movwf	postinc1,c
 24018  017656  0E86               	movlw	high _ADCC_DefaultInterruptHandler
 24019  017658  6EE6               	movwf	postinc1,c
 24020  01765A  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24021  01765C  6EE6               	movwf	postinc1,c
 24022  01765E  EC1F  F0C1         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 24023                           
 24024                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24025  017662  0012               	return		;funcret
 24026  017664                     __end_of_ADCC_Initialize:
 24027                           	opt callstack 0
 24028                           
 24029 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 24030 ;; Defined at:
 24031 ;;		line 336 in file "mcc_generated_files/adcc.c"
 24032 ;; Parameters:    Size  Location     Type
 24033 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24034 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 24035 ;; Auto vars:     Size  Location     Type
 24036 ;;		None
 24037 ;; Return value:  Size  Location     Type
 24038 ;;                  1  [STACK] void 
 24039 ;; Registers used:
 24040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24041 ;; Tracked objects:
 24042 ;;		On entry : 0/0
 24043 ;;		On exit  : 0/0
 24044 ;;		Unchanged: 0/0
 24045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24050 ;;Total ram usage:        0 bytes
 24051 ;; Hardware stack levels used:    1
 24052 ;; Hardware stack levels required when called:    6
 24053 ;; This function calls:
 24054 ;;		Nothing
 24055 ;; This function is called by:
 24056 ;;		_ADCC_Initialize
 24057 ;;		_start_adc_scan
 24058 ;; This function uses a reentrant model
 24059 ;;
 24060                           
 24061                           	psect	text112
 24062  01823E                     __ptext112:
 24063                           	opt callstack 0
 24064  01823E                     _ADCC_SetADTIInterruptHandler:
 24065                           	opt callstack 23
 24066                           
 24067                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 24068                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24069                           
 24070                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24071                           ;incstack = 0
 24072  01823E  50E1               	movf	fsr1l,w,c
 24073  018240  0FFD               	addlw	-3
 24074  018242  6ED9               	movwf	fsr2l,c
 24075  018244  50E2               	movf	fsr1h,w,c
 24076  018246  6EDA               	movwf	fsr2h,c
 24077  018248  0EFF               	movlw	255
 24078  01824A  22DA               	addwfc	fsr2h,f,c
 24079  01824C  006F FF78  F001    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 24080  018252  006F FF78  F002    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 24081  018258  006F FF74  F003    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 24082                           
 24083                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 24084  01825E  52E5               	movf	postdec1,f,c
 24085  018260  52E5               	movf	postdec1,f,c
 24086  018262  52E5               	movf	postdec1,f,c
 24087  018264  0012               	return		;funcret
 24088  018266                     __end_of_ADCC_SetADTIInterruptHandler:
 24089                           	opt callstack 0
 24090                           
 24091 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 24092 ;; Defined at:
 24093 ;;		line 323 in file "mcc_generated_files/adcc.c"
 24094 ;; Parameters:    Size  Location     Type
 24095 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24096 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 24097 ;; Auto vars:     Size  Location     Type
 24098 ;;		None
 24099 ;; Return value:  Size  Location     Type
 24100 ;;                  1  [STACK] void 
 24101 ;; Registers used:
 24102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24103 ;; Tracked objects:
 24104 ;;		On entry : 6/0
 24105 ;;		On exit  : 0/0
 24106 ;;		Unchanged: 0/0
 24107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24112 ;;Total ram usage:        0 bytes
 24113 ;; Hardware stack levels used:    1
 24114 ;; Hardware stack levels required when called:    6
 24115 ;; This function calls:
 24116 ;;		Nothing
 24117 ;; This function is called by:
 24118 ;;		_ADCC_Initialize
 24119 ;;		_start_adc_scan
 24120 ;; This function uses a reentrant model
 24121 ;;
 24122                           
 24123                           	psect	text113
 24124  018266                     __ptext113:
 24125                           	opt callstack 0
 24126  018266                     _ADCC_SetADIInterruptHandler:
 24127                           	opt callstack 23
 24128                           
 24129                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 24130                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24131                           
 24132                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24133                           ;incstack = 0
 24134  018266  50E1               	movf	fsr1l,w,c
 24135  018268  0FFD               	addlw	-3
 24136  01826A  6ED9               	movwf	fsr2l,c
 24137  01826C  50E2               	movf	fsr1h,w,c
 24138  01826E  6EDA               	movwf	fsr2h,c
 24139  018270  0EFF               	movlw	255
 24140  018272  22DA               	addwfc	fsr2h,f,c
 24141  018274  006F FF78  F004    	movff	postinc2,_ADCC_ADI_InterruptHandler
 24142  01827A  006F FF78  F005    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 24143  018280  006F FF74  F006    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 24144                           
 24145                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24146  018286  52E5               	movf	postdec1,f,c
 24147  018288  52E5               	movf	postdec1,f,c
 24148  01828A  52E5               	movf	postdec1,f,c
 24149  01828C  0012               	return		;funcret
 24150  01828E                     __end_of_ADCC_SetADIInterruptHandler:
 24151                           	opt callstack 0
 24152                           
 24153 ;; *************** function _INT1_ISR *****************
 24154 ;; Defined at:
 24155 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 24156 ;; Parameters:    Size  Location     Type
 24157 ;;		None
 24158 ;; Auto vars:     Size  Location     Type
 24159 ;;		None
 24160 ;; Return value:  Size  Location     Type
 24161 ;;                  1    wreg      void 
 24162 ;; Registers used:
 24163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24164 ;; Tracked objects:
 24165 ;;		On entry : 0/0
 24166 ;;		On exit  : 0/0
 24167 ;;		Unchanged: 0/0
 24168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24171 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24172 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24173 ;;Total ram usage:        4 bytes
 24174 ;; Hardware stack levels used:    1
 24175 ;; Hardware stack levels required when called:    5
 24176 ;; This function calls:
 24177 ;;		_INT1_CallBack
 24178 ;; This function is called by:
 24179 ;;		Interrupt level 1
 24180 ;; This function uses a non-reentrant model
 24181 ;;
 24182                           
 24183                           	psect	text114
 24184  017D3C                     __ptext114:
 24185                           	opt callstack 0
 24186  017D3C                     _INT1_ISR:
 24187                           	opt callstack 12
 24188                           
 24189                           ;incstack = 0
 24190  017D3C  006F FF60  F0F6    	movff	status,??_INT1_ISR
 24191  017D42  0060  F0C8  F0F7   	movff	btemp,??_INT1_ISR+1
 24192  017D48  0060  F0F0  F0F8   	movff	btemp+10,??_INT1_ISR+2
 24193  017D4E  0060  F0F4  F0F9   	movff	btemp+11,??_INT1_ISR+3
 24194  017D54  EE16  F000         	lfsr	1,___intlo_sp
 24195                           
 24196                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 24197  017D58  0139               	movlb	57	; () banked
 24198  017D5A  91A5               	bcf	165,0,b	;volatile
 24199                           
 24200                           ; BSR set to: 57
 24201                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 24202  017D5C  ECE1  F0C1         	call	_INT1_CallBack	;wreg free
 24203  017D60  0060  F3E4  F03D   	movff	??_INT1_ISR+3,btemp+11
 24204  017D66  0060  F3E0  F03C   	movff	??_INT1_ISR+2,btemp+10
 24205  017D6C  0060  F3DC  F032   	movff	??_INT1_ISR+1,btemp
 24206  017D72  0060  F3DB  FFD8   	movff	??_INT1_ISR,status
 24207  017D78  0011               	retfie		f
 24208  017D7A                     __end_of_INT1_ISR:
 24209                           	opt callstack 0
 24210                           
 24211 ;; *************** function _INT1_CallBack *****************
 24212 ;; Defined at:
 24213 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 24214 ;; Parameters:    Size  Location     Type
 24215 ;;		None
 24216 ;; Auto vars:     Size  Location     Type
 24217 ;;		None
 24218 ;; Return value:  Size  Location     Type
 24219 ;;                  1  [STACK] void 
 24220 ;; Registers used:
 24221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 24222 ;; Tracked objects:
 24223 ;;		On entry : 3F/39
 24224 ;;		On exit  : 0/0
 24225 ;;		Unchanged: 0/0
 24226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24231 ;;Total ram usage:        0 bytes
 24232 ;; Hardware stack levels used:    1
 24233 ;; Hardware stack levels required when called:    4
 24234 ;; This function calls:
 24235 ;;		Absolute function
 24236 ;;		_INT1_DefaultInterruptHandler
 24237 ;;		_switch_handler
 24238 ;; This function is called by:
 24239 ;;		_INT1_ISR
 24240 ;; This function uses a reentrant model
 24241 ;;
 24242                           
 24243                           	psect	text115
 24244  0183C2                     __ptext115:
 24245                           	opt callstack 0
 24246  0183C2                     _INT1_CallBack:
 24247                           	opt callstack 12
 24248                           
 24249                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 24250                           
 24251                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24252                           ;incstack = 0
 24253  0183C2  5013               	movf	_INT1_InterruptHandler^0,w,c
 24254  0183C4  1014               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 24255  0183C6  1015               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 24256  0183C8  B4D8               	btfsc	status,2,c
 24257  0183CA  0012               	return	
 24258                           
 24259                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 24260  0183CC  D801               	call	u832_28
 24261  0183CE  0012               	return	
 24262  0183D0                     u832_28:
 24263  0183D0  0005               	push	
 24264  0183D2  6EFA               	movwf	pclath,c
 24265  0183D4  5013               	movf	_INT1_InterruptHandler^0,w,c
 24266  0183D6  6EFD               	movwf	tosl,c
 24267  0183D8  5014               	movf	(_INT1_InterruptHandler+1)^0,w,c
 24268  0183DA  6EFE               	movwf	tosh,c
 24269  0183DC  5015               	movf	(_INT1_InterruptHandler+2)^0,w,c
 24270  0183DE  6EFF               	movwf	tosu,c
 24271  0183E0  50FA               	movf	pclath,w,c
 24272  0183E2  0012               	return		;indir
 24273  0183E4                     __end_of_INT1_CallBack:
 24274                           	opt callstack 0
 24275                           
 24276 ;; *************** function _INT1_DefaultInterruptHandler *****************
 24277 ;; Defined at:
 24278 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 24279 ;; Parameters:    Size  Location     Type
 24280 ;;		None
 24281 ;; Auto vars:     Size  Location     Type
 24282 ;;		None
 24283 ;; Return value:  Size  Location     Type
 24284 ;;                  1  [STACK] void 
 24285 ;; Registers used:
 24286 ;;		None
 24287 ;; Tracked objects:
 24288 ;;		On entry : 0/39
 24289 ;;		On exit  : 0/0
 24290 ;;		Unchanged: 0/0
 24291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24296 ;;Total ram usage:        0 bytes
 24297 ;; Hardware stack levels used:    1
 24298 ;; Hardware stack levels required when called:    3
 24299 ;; This function calls:
 24300 ;;		Nothing
 24301 ;; This function is called by:
 24302 ;;		_EXT_INT_Initialize
 24303 ;;		_INT1_CallBack
 24304 ;; This function uses a reentrant model
 24305 ;;
 24306                           
 24307                           	psect	text116
 24308  01868A                     __ptext116:
 24309                           	opt callstack 0
 24310  01868A                     _INT1_DefaultInterruptHandler:
 24311                           	opt callstack 12
 24312                           
 24313                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24314                           
 24315                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24316                           ;incstack = 0
 24317  01868A  0012               	return		;funcret
 24318  01868C                     __end_of_INT1_DefaultInterruptHandler:
 24319                           	opt callstack 0
 24320                           
 24321 ;; *************** function _switch_handler *****************
 24322 ;; Defined at:
 24323 ;;		line 58 in file "dio.c"
 24324 ;; Parameters:    Size  Location     Type
 24325 ;;		None
 24326 ;; Auto vars:     Size  Location     Type
 24327 ;;  i               1  [STACK] unsigned char 
 24328 ;;  sw_value        1  [STACK] unsigned char 
 24329 ;; Return value:  Size  Location     Type
 24330 ;;                  1  [STACK] void 
 24331 ;; Registers used:
 24332 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 24333 ;; Tracked objects:
 24334 ;;		On entry : 0/39
 24335 ;;		On exit  : 0/0
 24336 ;;		Unchanged: 0/0
 24337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24342 ;;Total ram usage:        0 bytes
 24343 ;; Hardware stack levels used:    1
 24344 ;; Hardware stack levels required when called:    3
 24345 ;; This function calls:
 24346 ;;		Nothing
 24347 ;; This function is called by:
 24348 ;;		_start_switch_handler
 24349 ;;		_INT1_CallBack
 24350 ;; This function uses a reentrant model
 24351 ;;
 24352                           
 24353                           	psect	text117
 24354  0162A2                     __ptext117:
 24355                           	opt callstack 0
 24356  0162A2                     _switch_handler:
 24357                           	opt callstack 0
 24358                           
 24359                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24360  0162A2  52E6               	movf	postinc1,f,c
 24361  0162A4  52E6               	movf	postinc1,f,c
 24362                           
 24363                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 24364                           ;stkvar	_i @ sp[(-2)+0]
 24365                           
 24366                           ;incstack = 0
 24367  0162A6  0EFE               	movlw	-2
 24368  0162A8  6AE3               	clrf	plusw1,c
 24369  0162AA  9EBD               	bcf	189,7,c	;volatile
 24370  0162AC  82BE               	bsf	190,1,c	;volatile
 24371                           
 24372                           ;dio.c: 72:  __nop();
 24373  0162AE  F000               	nop	
 24374                           
 24375                           ;dio.c: 73:  __nop();
 24376  0162B0  F000               	nop	
 24377                           
 24378                           ;dio.c: 74:  __nop();
 24379  0162B2  F000               	nop	
 24380  0162B4  D019               	goto	l8724
 24381  0162B6                     l8712:
 24382                           
 24383                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 24384  0162B6  A6CF               	btfss	207,3,c	;volatile
 24385  0162B8  D011               	goto	u824_20
 24386  0162BA  D00D               	goto	u824_21
 24387  0162BC                     u821_28:
 24388                           
 24389                           ;stkvar	_sw_value @ sp[(-2)+1]
 24390  0162BC  0EFF               	movlw	-1
 24391  0162BE  0060  F0F7  FFE3   	movff	btemp+11,plusw1
 24392                           
 24393                           ;dio.c: 80:    break;
 24394  0162C4  D027               	goto	l8726
 24395  0162C6                     l8714:
 24396                           
 24397                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 24398  0162C6  A4CF               	btfss	207,2,c	;volatile
 24399  0162C8  D009               	goto	u824_20
 24400  0162CA  D005               	goto	u824_21
 24401  0162CC                     l8716:
 24402                           
 24403                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 24404  0162CC  A2CF               	btfss	207,1,c	;volatile
 24405  0162CE  D006               	goto	u824_20
 24406  0162D0  D002               	goto	u824_21
 24407  0162D2                     l8718:
 24408                           
 24409                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 24410  0162D2  A0CF               	btfss	207,0,c	;volatile
 24411  0162D4  D003               	goto	u824_20
 24412  0162D6                     u824_21:
 24413  0162D6  6A3D               	clrf	(btemp+11)^0,c
 24414  0162D8  2A3D               	incf	(btemp+11)^0,f,c
 24415  0162DA  D7F0               	goto	u821_28
 24416  0162DC                     u824_20:
 24417  0162DC  6A3D               	clrf	(btemp+11)^0,c
 24418  0162DE  D7EE               	goto	u821_28
 24419  0162E0                     l8720:
 24420                           
 24421                           ;dio.c: 91:    sw_value = 1;
 24422                           ;stkvar	_sw_value @ sp[(-2)+1]
 24423  0162E0  0EFF               	movlw	-1
 24424  0162E2  6AE3               	clrf	plusw1,c
 24425  0162E4  2AE3               	incf	plusw1,f,c
 24426                           
 24427                           ;dio.c: 92:    break;
 24428  0162E6  D016               	goto	l8726
 24429  0162E8                     l8724:
 24430                           
 24431                           ;stkvar	_i @ sp[(-2)+0]
 24432  0162E8  0EFE               	movlw	-2
 24433  0162EA  50E3               	movf	plusw1,w,c
 24434  0162EC  6E3C               	movwf	(btemp+10)^0,c
 24435  0162EE  6A3D               	clrf	(btemp+11)^0,c
 24436                           
 24437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 24438                           ; Switch size 1, requested type "simple"
 24439                           ; Number of cases is 1, Range of values is 0 to 0
 24440                           ; switch strategies available:
 24441                           ; Name         Instructions Cycles
 24442                           ; simple_byte            4     3 (average)
 24443                           ;	Chosen strategy is simple_byte
 24444  0162F0  503D               	movf	(btemp+11)^0,w,c
 24445  0162F2  0A00               	xorlw	0	; case 0
 24446  0162F4  A4D8               	btfss	status,2,c
 24447  0162F6  D7F4               	goto	l8720
 24448                           
 24449                           ; Switch size 1, requested type "simple"
 24450                           ; Number of cases is 4, Range of values is 0 to 3
 24451                           ; switch strategies available:
 24452                           ; Name         Instructions Cycles
 24453                           ; simple_byte           13     7 (average)
 24454                           ;	Chosen strategy is simple_byte
 24455  0162F8  503C               	movf	(btemp+10)^0,w,c
 24456  0162FA  0A00               	xorlw	0	; case 0
 24457  0162FC  B4D8               	btfsc	status,2,c
 24458  0162FE  D7E9               	goto	l8718
 24459  016300  0A01               	xorlw	1	; case 1
 24460  016302  B4D8               	btfsc	status,2,c
 24461  016304  D7E3               	goto	l8716
 24462  016306  0A03               	xorlw	3	; case 2
 24463  016308  B4D8               	btfsc	status,2,c
 24464  01630A  D7DD               	goto	l8714
 24465  01630C  0A01               	xorlw	1	; case 3
 24466  01630E  B4D8               	btfsc	status,2,c
 24467  016310  D7D2               	goto	l8712
 24468  016312  D7E6               	goto	l8720
 24469  016314                     l8726:
 24470                           
 24471                           ;dio.c: 96:   if (sw_value) {
 24472                           ;stkvar	_sw_value @ sp[(-2)+1]
 24473  016314  0EFF               	movlw	-1
 24474  016316  50E3               	movf	plusw1,w,c
 24475  016318  B4D8               	btfsc	status,2,c
 24476  01631A  D014               	goto	l8732
 24477                           
 24478                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 24479                           ;stkvar	_i @ sp[(-2)+0]
 24480  01631C  0EFE               	movlw	-2
 24481  01631E  50E3               	movf	plusw1,w,c
 24482  016320  0D05               	mullw	5
 24483  016322  50F3               	movf	243,w,c
 24484  016324  0F60               	addlw	low _S
 24485  016326  6ED9               	movwf	fsr2l,c
 24486  016328  6ADA               	clrf	fsr2h,c
 24487  01632A  04DE               	decf	postinc2,w,c
 24488  01632C  A4D8               	btfss	status,2,c
 24489  01632E  D041               	goto	l8740
 24490                           
 24491                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 24492                           ;stkvar	_i @ sp[(-2)+0]
 24493  016330  0EFE               	movlw	-2
 24494  016332  50E3               	movf	plusw1,w,c
 24495  016334  0D05               	mullw	5
 24496  016336  50F3               	movf	243,w,c
 24497  016338  0F60               	addlw	low _S
 24498  01633A  6ED9               	movwf	fsr2l,c
 24499  01633C  6ADA               	clrf	fsr2h,c
 24500  01633E  0E00               	movlw	0
 24501  016340  6EDF               	movwf	indf2,c
 24502  016342  D037               	goto	l8740
 24503  016344                     l8732:
 24504                           
 24505                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 24506                           ;stkvar	_i @ sp[(-2)+0]
 24507  016344  0EFE               	movlw	-2
 24508  016346  50E3               	movf	plusw1,w,c
 24509  016348  0D05               	mullw	5
 24510  01634A  50F3               	movf	243,w,c
 24511  01634C  0F60               	addlw	low _S
 24512  01634E  6ED9               	movwf	fsr2l,c
 24513  016350  6ADA               	clrf	fsr2h,c
 24514  016352  50DF               	movf	indf2,w,c
 24515  016354  A4D8               	btfss	status,2,c
 24516  016356  D02D               	goto	l8740
 24517                           
 24518                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 24519                           ;stkvar	_i @ sp[(-2)+0]
 24520  016358  0EFE               	movlw	-2
 24521  01635A  50E3               	movf	plusw1,w,c
 24522  01635C  0D05               	mullw	5
 24523  01635E  50F3               	movf	243,w,c
 24524  016360  0F60               	addlw	low _S
 24525  016362  6ED9               	movwf	fsr2l,c
 24526  016364  6ADA               	clrf	fsr2h,c
 24527  016366  0E01               	movlw	1
 24528  016368  6EDF               	movwf	indf2,c
 24529                           
 24530                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 24531  01636A  EE20  F1B7         	lfsr	2,_V+183	;volatile
 24532                           
 24533                           ;stkvar	_i @ sp[(-2)+0]
 24534  01636E  0EFE               	movlw	-2
 24535  016370  50E3               	movf	plusw1,w,c
 24536  016372  0D05               	mullw	5
 24537  016374  50F3               	movf	243,w,c
 24538  016376  0F61               	addlw	low (_S+1)
 24539  016378  6EE9               	movwf	fsr0l,c
 24540  01637A  6AEA               	clrf	fsr0h,c
 24541  01637C  006F FF7B FFEE     	movff	postinc2,postinc0
 24542  016382  006F FF7B FFEE     	movff	postinc2,postinc0
 24543  016388  006F FF7B FFEE     	movff	postinc2,postinc0
 24544  01638E  006F FF7B FFEE     	movff	postinc2,postinc0
 24545                           
 24546                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 24547                           ;stkvar	_i @ sp[(-2)+0]
 24548  016394  0EFE               	movlw	-2
 24549  016396  006F FF8C  F03D    	movff	plusw1,btemp+11
 24550  01639C  0E01               	movlw	1
 24551  01639E  6E3C               	movwf	(btemp+10)^0,c
 24552  0163A0  2A3D               	incf	(btemp+11)^0,f,c
 24553  0163A2  D002               	goto	u828_24
 24554  0163A4                     u828_25:
 24555  0163A4  90D8               	bcf	status,0,c
 24556  0163A6  363C               	rlcf	(btemp+10)^0,f,c
 24557  0163A8                     u828_24:
 24558  0163A8  2E3D               	decfsz	(btemp+11)^0,f,c
 24559  0163AA  D7FC               	goto	u828_25
 24560  0163AC  503C               	movf	(btemp+10)^0,w,c
 24561  0163AE  0100               	movlb	0	; () banked
 24562  0163B0  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 24563  0163B2                     l8740:
 24564                           
 24565                           ;dio.c: 107:  } while (++i < 4);
 24566                           ;stkvar	_i @ sp[(-2)+0]
 24567  0163B2  0EFE               	movlw	-2
 24568  0163B4  2AE3               	incf	plusw1,f,c
 24569  0163B6  0EFE               	movlw	-2
 24570  0163B8  006F FF8C  F032    	movff	plusw1,btemp
 24571  0163BE  0E03               	movlw	3
 24572  0163C0  6432               	cpfsgt	btemp^0,c
 24573  0163C2  D792               	goto	l8724
 24574                           
 24575                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 24576  0163C4  92BE               	bcf	190,1,c	;volatile
 24577  0163C6  A4BE               	btfss	190,2,c	;volatile
 24578  0163C8  D002               	goto	u830_20
 24579  0163CA  0E01               	movlw	1
 24580  0163CC  D001               	goto	u830_26
 24581  0163CE                     u830_20:
 24582  0163CE  0E00               	movlw	0
 24583  0163D0                     u830_26:
 24584  0163D0  0AFF               	xorlw	255
 24585  0163D2  6E3D               	movwf	(btemp+11)^0,c
 24586  0163D4  463D               	rlncf	(btemp+11)^0,f,c
 24587  0163D6  463D               	rlncf	(btemp+11)^0,f,c
 24588  0163D8  50BE               	movf	190,w,c	;volatile
 24589  0163DA  183D               	xorwf	(btemp+11)^0,w,c
 24590  0163DC  0BFB               	andlw	-5
 24591  0163DE  183D               	xorwf	(btemp+11)^0,w,c
 24592  0163E0  6EBE               	movwf	190,c	;volatile
 24593  0163E2  8EBD               	bsf	189,7,c	;volatile
 24594                           
 24595                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24596  0163E4  52E5               	movf	postdec1,f,c
 24597  0163E6  52E5               	movf	postdec1,f,c
 24598  0163E8  0012               	return		;funcret
 24599  0163EA                     __end_of_switch_handler:
 24600                           	opt callstack 0
 24601                           
 24602 ;; *************** function _TMR5_ISR *****************
 24603 ;; Defined at:
 24604 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 24605 ;; Parameters:    Size  Location     Type
 24606 ;;		None
 24607 ;; Auto vars:     Size  Location     Type
 24608 ;;		None
 24609 ;; Return value:  Size  Location     Type
 24610 ;;                  1    wreg      void 
 24611 ;; Registers used:
 24612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 24613 ;; Tracked objects:
 24614 ;;		On entry : 0/0
 24615 ;;		On exit  : 0/0
 24616 ;;		Unchanged: 0/0
 24617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24620 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24621 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24622 ;;Total ram usage:        4 bytes
 24623 ;; Hardware stack levels used:    1
 24624 ;; Hardware stack levels required when called:    5
 24625 ;; This function calls:
 24626 ;;		_TMR5_CallBack
 24627 ;;		_TMR5_WriteTimer
 24628 ;; This function is called by:
 24629 ;;		Interrupt level 1
 24630 ;; This function uses a non-reentrant model
 24631 ;;
 24632                           
 24633                           	psect	text118
 24634  0179D0                     __ptext118:
 24635                           	opt callstack 0
 24636  0179D0                     _TMR5_ISR:
 24637                           	opt callstack 12
 24638                           
 24639                           ;incstack = 0
 24640  0179D0  006F FF60  F1C5    	movff	status,??_TMR5_ISR+2
 24641  0179D6  0060  F0F4  F1C6   	movff	btemp+11,??_TMR5_ISR+3
 24642  0179DC  EE16  F000         	lfsr	1,___intlo_sp
 24643                           
 24644                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 24645  0179E0  0139               	movlb	57	; () banked
 24646  0179E2  9DA8               	bcf	168,6,b	;volatile
 24647                           
 24648                           ; BSR set to: 57
 24649                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 24650  0179E4  0060  F08F  FFE6   	movff	_timer5ReloadVal,postinc1
 24651  0179EA  0060  F093  FFE6   	movff	_timer5ReloadVal+1,postinc1
 24652  0179F0  EC7D  F0BE         	call	_TMR5_WriteTimer	;wreg free
 24653                           
 24654                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 24655  0179F4  0101               	movlb	1	; () banked
 24656  0179F6  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 24657  0179F8  6FC3               	movwf	??_TMR5_ISR& (0+255),b
 24658  0179FA  6BC4               	clrf	(??_TMR5_ISR+1)& (0+255),b
 24659  0179FC  0E05               	movlw	5
 24660  0179FE  27C3               	addwf	??_TMR5_ISR& (0+255),f,b
 24661  017A00  0E00               	movlw	0
 24662  017A02  23C4               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 24663  017A04  4A21               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 24664  017A06  2A22               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 24665  017A08  51C3               	movf	??_TMR5_ISR& (0+255),w,b
 24666  017A0A  5C21               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 24667  017A0C  51C4               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 24668  017A0E  5822               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 24669  017A10  A0D8               	btfss	status,0,c
 24670  017A12  D004               	goto	i1l1045
 24671                           
 24672                           ; BSR set to: 1
 24673                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 24674  017A14  ECBD  F0C1         	call	_TMR5_CallBack	;wreg free
 24675                           
 24676                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 24677  017A18  6A21               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 24678  017A1A  6A22               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 24679  017A1C                     i1l1045:
 24680  017A1C  0060  F718  F03D   	movff	??_TMR5_ISR+3,btemp+11
 24681  017A22  0060  F717  FFD8   	movff	??_TMR5_ISR+2,status
 24682  017A28  0011               	retfie		f
 24683  017A2A                     __end_of_TMR5_ISR:
 24684                           	opt callstack 0
 24685                           
 24686 ;; *************** function _TMR5_WriteTimer *****************
 24687 ;; Defined at:
 24688 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 24689 ;; Parameters:    Size  Location     Type
 24690 ;;  timerVal        2  [STACK] unsigned short 
 24691 ;; Auto vars:     Size  Location     Type
 24692 ;;		None
 24693 ;; Return value:  Size  Location     Type
 24694 ;;                  1  [STACK] void 
 24695 ;; Registers used:
 24696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 24697 ;; Tracked objects:
 24698 ;;		On entry : 3F/39
 24699 ;;		On exit  : 0/0
 24700 ;;		Unchanged: 0/0
 24701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24706 ;;Total ram usage:        0 bytes
 24707 ;; Hardware stack levels used:    1
 24708 ;; Hardware stack levels required when called:    3
 24709 ;; This function calls:
 24710 ;;		Nothing
 24711 ;; This function is called by:
 24712 ;;		_TMR5_ISR
 24713 ;; This function uses a reentrant model
 24714 ;;
 24715                           
 24716                           	psect	text119
 24717  017CFA                     __ptext119:
 24718                           	opt callstack 0
 24719  017CFA                     _TMR5_WriteTimer:
 24720                           	opt callstack 13
 24721                           
 24722                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 24723                           
 24724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24725                           ;incstack = 0
 24726  017CFA  A49A               	btfss	154,2,c	;volatile
 24727  017CFC  D00F               	goto	l8846
 24728                           
 24729                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 24730  017CFE  909A               	bcf	154,0,c	;volatile
 24731                           
 24732                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 24733                           ;stkvar	_timerVal @ sp[(0)+-2]
 24734  017D00  0EFF               	movlw	255
 24735  017D02  24E1               	addwf	fsr1l,w,c
 24736  017D04  6ED9               	movwf	fsr2l,c
 24737  017D06  0EFF               	movlw	255
 24738  017D08  20E2               	addwfc	fsr1h,w,c
 24739  017D0A  6EDA               	movwf	fsr2h,c
 24740  017D0C  50DF               	movf	indf2,w,c
 24741  017D0E  6E99               	movwf	153,c	;volatile
 24742                           
 24743                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 24744                           ;stkvar	_timerVal @ sp[(0)+-2]
 24745  017D10  0EFE               	movlw	-2
 24746  017D12  006F FF8F FF98     	movff	plusw1,16280	;volatile
 24747                           
 24748                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 24749  017D18  809A               	bsf	154,0,c	;volatile
 24750                           
 24751                           ;mcc_generated_files/tmr5.c: 142:  } else {
 24752  017D1A  D00C               	goto	l1028
 24753  017D1C                     l8846:
 24754                           
 24755                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 24756                           ;stkvar	_timerVal @ sp[(0)+-2]
 24757  017D1C  0EFF               	movlw	255
 24758  017D1E  24E1               	addwf	fsr1l,w,c
 24759  017D20  6ED9               	movwf	fsr2l,c
 24760  017D22  0EFF               	movlw	255
 24761  017D24  20E2               	addwfc	fsr1h,w,c
 24762  017D26  6EDA               	movwf	fsr2h,c
 24763  017D28  50DF               	movf	indf2,w,c
 24764  017D2A  6E99               	movwf	153,c	;volatile
 24765                           
 24766                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 24767                           ;stkvar	_timerVal @ sp[(0)+-2]
 24768  017D2C  0EFE               	movlw	-2
 24769  017D2E  006F FF8F FF98     	movff	plusw1,16280	;volatile
 24770  017D34                     l1028:
 24771                           
 24772                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 24773  017D34  52E5               	movf	postdec1,f,c
 24774  017D36  52E5               	movf	postdec1,f,c
 24775  017D38  0012               	return		;funcret
 24776  017D3A                     __end_of_TMR5_WriteTimer:
 24777                           	opt callstack 0
 24778                           
 24779 ;; *************** function _TMR5_CallBack *****************
 24780 ;; Defined at:
 24781 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 24782 ;; Parameters:    Size  Location     Type
 24783 ;;		None
 24784 ;; Auto vars:     Size  Location     Type
 24785 ;;		None
 24786 ;; Return value:  Size  Location     Type
 24787 ;;                  1  [STACK] void 
 24788 ;; Registers used:
 24789 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 24790 ;; Tracked objects:
 24791 ;;		On entry : 3F/1
 24792 ;;		On exit  : 0/0
 24793 ;;		Unchanged: 0/0
 24794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24799 ;;Total ram usage:        0 bytes
 24800 ;; Hardware stack levels used:    1
 24801 ;; Hardware stack levels required when called:    4
 24802 ;; This function calls:
 24803 ;;		Absolute function
 24804 ;;		_TMR5_DefaultInterruptHandler
 24805 ;; This function is called by:
 24806 ;;		_TMR5_ISR
 24807 ;; This function uses a reentrant model
 24808 ;;
 24809                           
 24810                           	psect	text120
 24811  01837A                     __ptext120:
 24812                           	opt callstack 0
 24813  01837A                     _TMR5_CallBack:
 24814                           	opt callstack 12
 24815                           
 24816                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 24817                           
 24818                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24819                           ;incstack = 0
 24820  01837A  0100               	movlb	0	; () banked
 24821  01837C  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24822  01837E  11C2               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24823  018380  11C3               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24824  018382  B4D8               	btfsc	status,2,c
 24825  018384  0012               	return	
 24826                           
 24827                           ; BSR set to: 0
 24828                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 24829  018386  D801               	call	u843_28
 24830  018388  0012               	return	
 24831  01838A                     u843_28:
 24832  01838A  0005               	push	
 24833  01838C  6EFA               	movwf	pclath,c
 24834  01838E  51C1               	movf	_TMR5_InterruptHandler& (0+255),w,b
 24835  018390  6EFD               	movwf	tosl,c
 24836  018392  51C2               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 24837  018394  6EFE               	movwf	tosh,c
 24838  018396  51C3               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 24839  018398  6EFF               	movwf	tosu,c
 24840  01839A  50FA               	movf	pclath,w,c
 24841  01839C  0012               	return		;indir
 24842  01839E                     __end_of_TMR5_CallBack:
 24843                           	opt callstack 0
 24844                           
 24845 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 24846 ;; Defined at:
 24847 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 24848 ;; Parameters:    Size  Location     Type
 24849 ;;		None
 24850 ;; Auto vars:     Size  Location     Type
 24851 ;;		None
 24852 ;; Return value:  Size  Location     Type
 24853 ;;                  1  [STACK] void 
 24854 ;; Registers used:
 24855 ;;		wreg, status,2, status,0, btemp+11
 24856 ;; Tracked objects:
 24857 ;;		On entry : 3F/0
 24858 ;;		On exit  : 3F/1
 24859 ;;		Unchanged: 0/0
 24860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24865 ;;Total ram usage:        0 bytes
 24866 ;; Hardware stack levels used:    1
 24867 ;; Hardware stack levels required when called:    3
 24868 ;; This function calls:
 24869 ;;		Nothing
 24870 ;; This function is called by:
 24871 ;;		_TMR5_Initialize
 24872 ;;		_TMR5_CallBack
 24873 ;; This function uses a reentrant model
 24874 ;;
 24875                           
 24876                           	psect	text121
 24877  01828E                     __ptext121:
 24878                           	opt callstack 0
 24879  01828E                     _TMR5_DefaultInterruptHandler:
 24880                           	opt callstack 12
 24881                           
 24882                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 24883                           
 24884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24885                           ;incstack = 0
 24886  01828E  A0BE               	btfss	190,0,c	;volatile
 24887  018290  D002               	goto	u799_20
 24888  018292  0E01               	movlw	1
 24889  018294  D001               	goto	u799_26
 24890  018296                     u799_20:
 24891  018296  0E00               	movlw	0
 24892  018298                     u799_26:
 24893  018298  0AFF               	xorlw	255
 24894  01829A  6E3D               	movwf	(btemp+11)^0,c
 24895  01829C  50BE               	movf	190,w,c	;volatile
 24896  01829E  183D               	xorwf	(btemp+11)^0,w,c
 24897  0182A0  0BFE               	andlw	-2
 24898  0182A2  183D               	xorwf	(btemp+11)^0,w,c
 24899  0182A4  6EBE               	movwf	190,c	;volatile
 24900                           
 24901                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 24902  0182A6  0E01               	movlw	1
 24903  0182A8  0101               	movlb	1	; () banked
 24904  0182AA  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 24905  0182AC  0E00               	movlw	0
 24906  0182AE  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 24907  0182B0  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 24908  0182B2  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 24909                           
 24910                           ; BSR set to: 1
 24911                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 24912  0182B4  0012               	return		;funcret
 24913  0182B6                     __end_of_TMR5_DefaultInterruptHandler:
 24914                           	opt callstack 0
 24915                           
 24916 ;; *************** function _INT0_ISR *****************
 24917 ;; Defined at:
 24918 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 24919 ;; Parameters:    Size  Location     Type
 24920 ;;		None
 24921 ;; Auto vars:     Size  Location     Type
 24922 ;;		None
 24923 ;; Return value:  Size  Location     Type
 24924 ;;                  1    wreg      void 
 24925 ;; Registers used:
 24926 ;;		wreg, status,2, status,0, pclath, tosl
 24927 ;; Tracked objects:
 24928 ;;		On entry : 0/0
 24929 ;;		On exit  : 0/0
 24930 ;;		Unchanged: 0/0
 24931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24936 ;;Total ram usage:        0 bytes
 24937 ;; Hardware stack levels used:    1
 24938 ;; Hardware stack levels required when called:    2
 24939 ;; This function calls:
 24940 ;;		_INT0_CallBack
 24941 ;; This function is called by:
 24942 ;;		Interrupt level 2
 24943 ;; This function uses a non-reentrant model
 24944 ;;
 24945                           
 24946                           	psect	text122
 24947  018600                     __ptext122:
 24948                           	opt callstack 0
 24949  018600                     _INT0_ISR:
 24950                           	opt callstack 12
 24951                           
 24952                           ; BSR set to: 1
 24953                           ;incstack = 0
 24954  018600  EE14  F000         	lfsr	1,___inthi_sp
 24955                           
 24956                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 24957  018604  0139               	movlb	57	; () banked
 24958  018606  91A1               	bcf	161,0,b	;volatile
 24959                           
 24960                           ; BSR set to: 57
 24961                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 24962  018608  ECF2  F0C1         	call	_INT0_CallBack	;wreg free
 24963  01860C  0011               	retfie		f
 24964  01860E                     __end_of_INT0_ISR:
 24965                           	opt callstack 0
 24966                           
 24967 ;; *************** function _INT0_CallBack *****************
 24968 ;; Defined at:
 24969 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 24970 ;; Parameters:    Size  Location     Type
 24971 ;;		None
 24972 ;; Auto vars:     Size  Location     Type
 24973 ;;		None
 24974 ;; Return value:  Size  Location     Type
 24975 ;;                  1  [STACK] void 
 24976 ;; Registers used:
 24977 ;;		wreg, status,2, status,0, pclath, tosl
 24978 ;; Tracked objects:
 24979 ;;		On entry : 3F/39
 24980 ;;		On exit  : 0/0
 24981 ;;		Unchanged: 0/0
 24982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24986 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24987 ;;Total ram usage:        0 bytes
 24988 ;; Hardware stack levels used:    1
 24989 ;; Hardware stack levels required when called:    1
 24990 ;; This function calls:
 24991 ;;		Absolute function
 24992 ;;		_INT0_DefaultInterruptHandler
 24993 ;; This function is called by:
 24994 ;;		_INT0_ISR
 24995 ;; This function uses a reentrant model
 24996 ;;
 24997                           
 24998                           	psect	text123
 24999  0183E4                     __ptext123:
 25000                           	opt callstack 0
 25001  0183E4                     _INT0_CallBack:
 25002                           	opt callstack 12
 25003                           
 25004                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 25005                           
 25006                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25007                           ;incstack = 0
 25008  0183E4  5016               	movf	_INT0_InterruptHandler^0,w,c
 25009  0183E6  1017               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 25010  0183E8  1018               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 25011  0183EA  B4D8               	btfsc	status,2,c
 25012  0183EC  0012               	return	
 25013                           
 25014                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 25015  0183EE  D801               	call	u391_48
 25016  0183F0  0012               	return	
 25017  0183F2                     u391_48:
 25018  0183F2  0005               	push	
 25019  0183F4  6EFA               	movwf	pclath,c
 25020  0183F6  5016               	movf	_INT0_InterruptHandler^0,w,c
 25021  0183F8  6EFD               	movwf	tosl,c
 25022  0183FA  5017               	movf	(_INT0_InterruptHandler+1)^0,w,c
 25023  0183FC  6EFE               	movwf	tosh,c
 25024  0183FE  5018               	movf	(_INT0_InterruptHandler+2)^0,w,c
 25025  018400  6EFF               	movwf	tosu,c
 25026  018402  50FA               	movf	pclath,w,c
 25027  018404  0012               	return		;indir
 25028  018406                     __end_of_INT0_CallBack:
 25029                           	opt callstack 0
 25030                           
 25031 ;; *************** function _INT0_DefaultInterruptHandler *****************
 25032 ;; Defined at:
 25033 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 25034 ;; Parameters:    Size  Location     Type
 25035 ;;		None
 25036 ;; Auto vars:     Size  Location     Type
 25037 ;;		None
 25038 ;; Return value:  Size  Location     Type
 25039 ;;                  1  [STACK] void 
 25040 ;; Registers used:
 25041 ;;		None
 25042 ;; Tracked objects:
 25043 ;;		On entry : 0/39
 25044 ;;		On exit  : 0/0
 25045 ;;		Unchanged: 0/0
 25046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25051 ;;Total ram usage:        0 bytes
 25052 ;; Hardware stack levels used:    1
 25053 ;; This function calls:
 25054 ;;		Nothing
 25055 ;; This function is called by:
 25056 ;;		_EXT_INT_Initialize
 25057 ;;		_INT0_CallBack
 25058 ;; This function uses a reentrant model
 25059 ;;
 25060                           
 25061                           	psect	text124
 25062  01868C                     __ptext124:
 25063                           	opt callstack 0
 25064  01868C                     _INT0_DefaultInterruptHandler:
 25065                           	opt callstack 12
 25066                           
 25067                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25068                           
 25069                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25070                           ;incstack = 0
 25071  01868C  0012               	return		;funcret
 25072  01868E                     __end_of_INT0_DefaultInterruptHandler:
 25073                           	opt callstack 0
 25074                           
 25075 ;; *************** function _Default_ISR *****************
 25076 ;; Defined at:
 25077 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 25078 ;; Parameters:    Size  Location     Type
 25079 ;;		None
 25080 ;; Auto vars:     Size  Location     Type
 25081 ;;		None
 25082 ;; Return value:  Size  Location     Type
 25083 ;;                  1    wreg      void 
 25084 ;; Registers used:
 25085 ;;		None
 25086 ;; Tracked objects:
 25087 ;;		On entry : 0/0
 25088 ;;		On exit  : 0/0
 25089 ;;		Unchanged: 0/0
 25090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25095 ;;Total ram usage:        0 bytes
 25096 ;; Hardware stack levels used:    1
 25097 ;; This function calls:
 25098 ;;		Nothing
 25099 ;; This function is called by:
 25100 ;;		Interrupt level 2
 25101 ;; This function uses a non-reentrant model
 25102 ;;
 25103                           
 25104                           	psect	text125
 25105  018684                     __ptext125:
 25106                           	opt callstack 0
 25107  018684                     _Default_ISR:
 25108                           	opt callstack 14
 25109                           
 25110                           ;incstack = 0
 25111  018684  EE14  F000         	lfsr	1,___inthi_sp
 25112  018688  0011               	retfie		f
 25113  01868A                     __end_of_Default_ISR:
 25114                           	opt callstack 0
 25115                           
 25116 ;; *************** function _ADCC_ISR *****************
 25117 ;; Defined at:
 25118 ;;		line 314 in file "mcc_generated_files/adcc.c"
 25119 ;; Parameters:    Size  Location     Type
 25120 ;;		None
 25121 ;; Auto vars:     Size  Location     Type
 25122 ;;		None
 25123 ;; Return value:  Size  Location     Type
 25124 ;;                  1    wreg      void 
 25125 ;; Registers used:
 25126 ;;		wreg, status,2, status,0, pclath, tosl
 25127 ;; Tracked objects:
 25128 ;;		On entry : 0/0
 25129 ;;		On exit  : 0/0
 25130 ;;		Unchanged: 0/0
 25131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25136 ;;Total ram usage:        0 bytes
 25137 ;; Hardware stack levels used:    1
 25138 ;; Hardware stack levels required when called:    1
 25139 ;; This function calls:
 25140 ;;		Absolute function
 25141 ;;		_ADCC_DefaultInterruptHandler
 25142 ;;		_adc_int_handler
 25143 ;; This function is called by:
 25144 ;;		Interrupt level 2
 25145 ;; This function uses a non-reentrant model
 25146 ;;
 25147                           
 25148                           	psect	text126
 25149  018034                     __ptext126:
 25150                           	opt callstack 0
 25151  018034                     _ADCC_ISR:
 25152                           	opt callstack 13
 25153                           
 25154                           ;incstack = 0
 25155  018034  EE14  F000         	lfsr	1,___inthi_sp
 25156                           
 25157                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 25158  018038  0139               	movlb	57	; () banked
 25159  01803A  95A1               	bcf	161,2,b	;volatile
 25160                           
 25161                           ; BSR set to: 57
 25162                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 25163  01803C  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25164  01803E  1005               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25165  018040  1006               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25166  018042  B4D8               	btfsc	status,2,c
 25167  018044  0011               	retfie		f
 25168                           
 25169                           ; BSR set to: 57
 25170                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 25171  018046  D801               	call	i2u420_48
 25172  018048  0011               	retfie		f
 25173  01804A                     i2u420_48:
 25174  01804A  0005               	push	
 25175  01804C  6EFA               	movwf	pclath,c
 25176  01804E  5004               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25177  018050  6EFD               	movwf	tosl,c
 25178  018052  5005               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25179  018054  6EFE               	movwf	tosh,c
 25180  018056  5006               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25181  018058  6EFF               	movwf	tosu,c
 25182  01805A  50FA               	movf	pclath,w,c
 25183  01805C  0012               	return		;indir
 25184  01805E                     __end_of_ADCC_ISR:
 25185                           	opt callstack 0
 25186                           
 25187 ;; *************** function _adc_int_t_handler *****************
 25188 ;; Defined at:
 25189 ;;		line 128 in file "daq.c"
 25190 ;; Parameters:    Size  Location     Type
 25191 ;;		None
 25192 ;; Auto vars:     Size  Location     Type
 25193 ;;		None
 25194 ;; Return value:  Size  Location     Type
 25195 ;;                  1  [STACK] void 
 25196 ;; Registers used:
 25197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 25198 ;; Tracked objects:
 25199 ;;		On entry : 3F/39
 25200 ;;		On exit  : 1/0
 25201 ;;		Unchanged: 0/0
 25202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25207 ;;Total ram usage:        0 bytes
 25208 ;; Hardware stack levels used:    1
 25209 ;; Hardware stack levels required when called:    1
 25210 ;; This function calls:
 25211 ;;		_ADCC_DischargeSampleCapacitor
 25212 ;;		_ADCC_StartConversion
 25213 ;; This function is called by:
 25214 ;;		_start_adc_scan
 25215 ;;		_ADCC_ThresholdISR
 25216 ;; This function uses a reentrant model
 25217 ;;
 25218                           
 25219                           	psect	text127
 25220  017498                     __ptext127:
 25221                           	opt callstack 0
 25222  017498                     _adc_int_t_handler:
 25223                           	opt callstack 12
 25224                           
 25225                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 25226                           
 25227                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25228                           ;incstack = 0
 25229  017498  013E               	movlb	62	; () banked
 25230  01749A  51E6               	movf	230,w,b	;volatile
 25231  01749C  006F FB9C  F032    	movff	16103,btemp	;volatile
 25232  0174A2  6A33               	clrf	(btemp+1)^0,c
 25233  0174A4  0060  F0C8  F033   	movff	btemp,btemp+1
 25234  0174AA  6A32               	clrf	btemp^0,c
 25235  0174AC  2632               	addwf	btemp^0,f,c
 25236  0174AE  0E00               	movlw	0
 25237  0174B0  2233               	addwfc	(btemp+1)^0,f,c
 25238  0174B2  0100               	movlb	0	; () banked
 25239  0174B4  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 25240  0174B6  0D02               	mullw	2
 25241  0174B8  50F3               	movf	243,w,c
 25242  0174BA  0FC7               	addlw	low _R
 25243  0174BC  6ED9               	movwf	fsr2l,c
 25244  0174BE  6ADA               	clrf	fsr2h,c
 25245  0174C0  0060  F0CB  FFDE   	movff	btemp,postinc2
 25246  0174C6  0060  F0CF  FFDD   	movff	btemp+1,postdec2
 25247  0174CC                     l12082:
 25248                           
 25249                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 25250  0174CC  0100               	movlb	0	; () banked
 25251  0174CE  2BEB               	incf	(_R+36)& (0+255),f,b	;volatile
 25252  0174D0  0E0D               	movlw	13
 25253  0174D2  65EB               	cpfsgt	(_R+36)& (0+255),b	;volatile
 25254  0174D4  D003               	goto	l12088
 25255                           
 25256                           ; BSR set to: 0
 25257                           ;daq.c: 136:    R.done = 1;
 25258  0174D6  0E01               	movlw	1
 25259  0174D8  6FEE               	movwf	(_R+39)& (0+255),b	;volatile
 25260  0174DA  0012               	return	
 25261  0174DC                     l12088:
 25262                           
 25263                           ; BSR set to: 0
 25264                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 25265  0174DC  0060  F3AC  F03D   	movff	_R+36,btemp+11	;volatile
 25266  0174E2  EE20  F0EC         	lfsr	2,_R+37	;volatile
 25267  0174E6  006F FF78  F03A    	movff	postinc2,btemp+8
 25268  0174EC  006F FF74  F03B    	movff	postdec2,btemp+9
 25269  0174F2  2A3D               	incf	(btemp+11)^0,f,c
 25270  0174F4  D003               	goto	u1267_44
 25271  0174F6                     u1267_45:
 25272  0174F6  90D8               	bcf	status,0,c
 25273  0174F8  323B               	rrcf	(btemp+9)^0,f,c
 25274  0174FA  323A               	rrcf	(btemp+8)^0,f,c
 25275  0174FC                     u1267_44:
 25276  0174FC  2E3D               	decfsz	(btemp+11)^0,f,c
 25277  0174FE  D7FB               	goto	u1267_45
 25278  017500  A03A               	btfss	(btemp+8)^0,0,c
 25279  017502  D7E4               	goto	l12082
 25280                           
 25281                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 25282  017504  EC25  F0C3         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 25283                           
 25284                           ; BSR set to: 62
 25285                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 25286  017508  0100               	movlb	0	; () banked
 25287  01750A  51EB               	movf	(_R+36)& (0+255),w,b	;volatile
 25288  01750C  0B0F               	andlw	15
 25289  01750E  6EE6               	movwf	postinc1,c
 25290  017510  ECD8  F0C2         	call	_ADCC_StartConversion	;wreg free
 25291                           
 25292                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25293  017514  0012               	return		;funcret
 25294  017516                     __end_of_adc_int_t_handler:
 25295                           	opt callstack 0
 25296                           
 25297 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 25298 ;; Defined at:
 25299 ;;		line 339 in file "mcc_generated_files/adcc.c"
 25300 ;; Parameters:    Size  Location     Type
 25301 ;;		None
 25302 ;; Auto vars:     Size  Location     Type
 25303 ;;		None
 25304 ;; Return value:  Size  Location     Type
 25305 ;;                  1  [STACK] void 
 25306 ;; Registers used:
 25307 ;;		None
 25308 ;; Tracked objects:
 25309 ;;		On entry : 3F/39
 25310 ;;		On exit  : 0/0
 25311 ;;		Unchanged: 0/0
 25312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25317 ;;Total ram usage:        0 bytes
 25318 ;; Hardware stack levels used:    1
 25319 ;; This function calls:
 25320 ;;		Nothing
 25321 ;; This function is called by:
 25322 ;;		_ADCC_Initialize
 25323 ;;		_ADCC_ISR
 25324 ;;		_ADCC_ThresholdISR
 25325 ;; This function uses a reentrant model
 25326 ;;
 25327                           
 25328                           	psect	text128
 25329  01868E                     __ptext128:
 25330                           	opt callstack 0
 25331  01868E                     _ADCC_DefaultInterruptHandler:
 25332                           	opt callstack 13
 25333                           
 25334                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25335                           
 25336                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25337                           ;incstack = 0
 25338  01868E  0012               	return		;funcret
 25339  018690                     __end_of_ADCC_DefaultInterruptHandler:
 25340                           	opt callstack 0
 25341                           
 25342 ;; *************** function _adc_int_handler *****************
 25343 ;; Defined at:
 25344 ;;		line 118 in file "daq.c"
 25345 ;; Parameters:    Size  Location     Type
 25346 ;;		None
 25347 ;; Auto vars:     Size  Location     Type
 25348 ;;		None
 25349 ;; Return value:  Size  Location     Type
 25350 ;;                  1  [STACK] void 
 25351 ;; Registers used:
 25352 ;;		None
 25353 ;; Tracked objects:
 25354 ;;		On entry : 3F/39
 25355 ;;		On exit  : 0/0
 25356 ;;		Unchanged: 0/0
 25357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25362 ;;Total ram usage:        0 bytes
 25363 ;; Hardware stack levels used:    1
 25364 ;; This function calls:
 25365 ;;		Nothing
 25366 ;; This function is called by:
 25367 ;;		_start_adc_scan
 25368 ;;		_ADCC_ISR
 25369 ;; This function uses a reentrant model
 25370 ;;
 25371                           
 25372                           	psect	text129
 25373  018690                     __ptext129:
 25374                           	opt callstack 0
 25375  018690                     _adc_int_handler:
 25376                           	opt callstack 13
 25377                           
 25378                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25379                           
 25380                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25381                           ;incstack = 0
 25382  018690  0012               	return		;funcret
 25383  018692                     __end_of_adc_int_handler:
 25384                           	opt callstack 0
 25385                           
 25386 ;; *************** function _ADCC_ThresholdISR *****************
 25387 ;; Defined at:
 25388 ;;		line 327 in file "mcc_generated_files/adcc.c"
 25389 ;; Parameters:    Size  Location     Type
 25390 ;;		None
 25391 ;; Auto vars:     Size  Location     Type
 25392 ;;		None
 25393 ;; Return value:  Size  Location     Type
 25394 ;;                  1    wreg      void 
 25395 ;; Registers used:
 25396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 25397 ;; Tracked objects:
 25398 ;;		On entry : 0/0
 25399 ;;		On exit  : 0/0
 25400 ;;		Unchanged: 0/0
 25401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25404 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25405 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25406 ;;Total ram usage:        5 bytes
 25407 ;; Hardware stack levels used:    1
 25408 ;; Hardware stack levels required when called:    2
 25409 ;; This function calls:
 25410 ;;		Absolute function
 25411 ;;		_ADCC_DefaultInterruptHandler
 25412 ;;		_adc_int_t_handler
 25413 ;; This function is called by:
 25414 ;;		Interrupt level 2
 25415 ;; This function uses a non-reentrant model
 25416 ;;
 25417                           
 25418                           	psect	text130
 25419  017664                     __ptext130:
 25420                           	opt callstack 0
 25421  017664                     _ADCC_ThresholdISR:
 25422                           	opt callstack 12
 25423                           
 25424                           ;incstack = 0
 25425  017664  0060  F0C8  F052   	movff	btemp,??_ADCC_ThresholdISR
 25426  01766A  0060  F0CC  F053   	movff	btemp+1,??_ADCC_ThresholdISR+1
 25427  017670  0060  F0E8  F054   	movff	btemp+8,??_ADCC_ThresholdISR+2
 25428  017676  0060  F0EC  F055   	movff	btemp+9,??_ADCC_ThresholdISR+3
 25429  01767C  0060  F0F4  F056   	movff	btemp+11,??_ADCC_ThresholdISR+4
 25430  017682  EE14  F000         	lfsr	1,___inthi_sp
 25431                           
 25432                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 25433  017686  0139               	movlb	57	; () banked
 25434  017688  97A1               	bcf	161,3,b	;volatile
 25435                           
 25436                           ; BSR set to: 57
 25437                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 25438  01768A  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25439  01768C  1002               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25440  01768E  1003               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25441  017690  B4D8               	btfsc	status,2,c
 25442  017692  D00C               	goto	i2u1270_49
 25443                           
 25444                           ; BSR set to: 57
 25445                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 25446  017694  D801               	call	i2u1270_48
 25447  017696  D00A               	goto	i2u1270_49
 25448  017698                     i2u1270_48:
 25449  017698  0005               	push	
 25450  01769A  6EFA               	movwf	pclath,c
 25451  01769C  5001               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 25452  01769E  6EFD               	movwf	tosl,c
 25453  0176A0  5002               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 25454  0176A2  6EFE               	movwf	tosh,c
 25455  0176A4  5003               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 25456  0176A6  6EFF               	movwf	tosu,c
 25457  0176A8  50FA               	movf	pclath,w,c
 25458  0176AA  0012               	return		;indir
 25459  0176AC                     i2u1270_49:
 25460  0176AC  0060  F158  F03D   	movff	??_ADCC_ThresholdISR+4,btemp+11
 25461  0176B2  0060  F154  F03B   	movff	??_ADCC_ThresholdISR+3,btemp+9
 25462  0176B8  0060  F150  F03A   	movff	??_ADCC_ThresholdISR+2,btemp+8
 25463  0176BE  0060  F14C  F033   	movff	??_ADCC_ThresholdISR+1,btemp+1
 25464  0176C4  0060  F148  F032   	movff	??_ADCC_ThresholdISR,btemp
 25465  0176CA  0011               	retfie		f
 25466  0176CC                     __end_of_ADCC_ThresholdISR:
 25467                           	opt callstack 0
 25468                           
 25469 ;; *************** function _UART1_tx_vect_isr *****************
 25470 ;; Defined at:
 25471 ;;		line 199 in file "mcc_generated_files/uart1.c"
 25472 ;; Parameters:    Size  Location     Type
 25473 ;;		None
 25474 ;; Auto vars:     Size  Location     Type
 25475 ;;		None
 25476 ;; Return value:  Size  Location     Type
 25477 ;;                  1    wreg      void 
 25478 ;; Registers used:
 25479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25480 ;; Tracked objects:
 25481 ;;		On entry : 0/0
 25482 ;;		On exit  : 0/0
 25483 ;;		Unchanged: 0/0
 25484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25489 ;;Total ram usage:        0 bytes
 25490 ;; Hardware stack levels used:    1
 25491 ;; Hardware stack levels required when called:    1
 25492 ;; This function calls:
 25493 ;;		Absolute function
 25494 ;;		_UART1_Transmit_ISR
 25495 ;; This function is called by:
 25496 ;;		Interrupt level 2
 25497 ;; This function uses a non-reentrant model
 25498 ;;
 25499                           
 25500                           	psect	text131
 25501  0182B8                     __ptext131:
 25502                           	opt callstack 0
 25503  0182B8                     _UART1_tx_vect_isr:
 25504                           	opt callstack 13
 25505                           
 25506                           ;incstack = 0
 25507  0182B8  EE14  F000         	lfsr	1,___inthi_sp
 25508                           
 25509                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 25510  0182BC  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25511  0182BE  1008               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 25512  0182C0  1009               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 25513  0182C2  B4D8               	btfsc	status,2,c
 25514  0182C4  0011               	retfie		f
 25515                           
 25516                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 25517  0182C6  D801               	call	i2u861_48
 25518  0182C8  0011               	retfie		f
 25519  0182CA                     i2u861_48:
 25520  0182CA  0005               	push	
 25521  0182CC  6EFA               	movwf	pclath,c
 25522  0182CE  5007               	movf	_UART1_TxInterruptHandler^0,w,c
 25523  0182D0  6EFD               	movwf	tosl,c
 25524  0182D2  5008               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 25525  0182D4  6EFE               	movwf	tosh,c
 25526  0182D6  5009               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 25527  0182D8  6EFF               	movwf	tosu,c
 25528  0182DA  50FA               	movf	pclath,w,c
 25529  0182DC  0012               	return		;indir
 25530  0182DE                     __end_of_UART1_tx_vect_isr:
 25531                           	opt callstack 0
 25532                           
 25533 ;; *************** function _UART1_Transmit_ISR *****************
 25534 ;; Defined at:
 25535 ;;		line 213 in file "mcc_generated_files/uart1.c"
 25536 ;; Parameters:    Size  Location     Type
 25537 ;;		None
 25538 ;; Auto vars:     Size  Location     Type
 25539 ;;		None
 25540 ;; Return value:  Size  Location     Type
 25541 ;;                  1  [STACK] void 
 25542 ;; Registers used:
 25543 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25544 ;; Tracked objects:
 25545 ;;		On entry : 0/0
 25546 ;;		On exit  : 3B/39
 25547 ;;		Unchanged: 0/0
 25548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25553 ;;Total ram usage:        0 bytes
 25554 ;; Hardware stack levels used:    1
 25555 ;; This function calls:
 25556 ;;		Nothing
 25557 ;; This function is called by:
 25558 ;;		_UART1_Initialize
 25559 ;;		_UART1_tx_vect_isr
 25560 ;; This function uses a reentrant model
 25561 ;;
 25562                           
 25563                           	psect	text132
 25564  017FB0                     __ptext132:
 25565                           	opt callstack 0
 25566  017FB0                     _UART1_Transmit_ISR:
 25567                           	opt callstack 13
 25568                           
 25569                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 25570                           
 25571                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25572                           ;incstack = 0
 25573  017FB0  0E40               	movlw	64
 25574  017FB2  602F               	cpfslt	_uart1TxBufferRemaining^0,c
 25575  017FB4  D010               	goto	l581
 25576                           
 25577                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 25578  017FB6  0EAC               	movlw	low _uart1TxBuffer
 25579  017FB8  2430               	addwf	_uart1TxTail^0,w,c	;volatile
 25580  017FBA  6ED9               	movwf	fsr2l,c
 25581  017FBC  6ADA               	clrf	fsr2h,c
 25582  017FBE  0E03               	movlw	high _uart1TxBuffer
 25583  017FC0  22DA               	addwfc	fsr2h,f,c
 25584  017FC2  50DF               	movf	indf2,w,c
 25585  017FC4  013D               	movlb	61	; () banked
 25586  017FC6  6FEA               	movwf	234,b	;volatile
 25587                           
 25588                           ; BSR set to: 61
 25589  017FC8  2A30               	incf	_uart1TxTail^0,f,c	;volatile
 25590                           
 25591                           ; BSR set to: 61
 25592                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 25593  017FCA  0E3F               	movlw	63
 25594  017FCC  6430               	cpfsgt	_uart1TxTail^0,c
 25595  017FCE  D001               	goto	l8798
 25596                           
 25597                           ; BSR set to: 61
 25598                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 25599  017FD0  6A30               	clrf	_uart1TxTail^0,c	;volatile
 25600  017FD2                     l8798:
 25601                           
 25602                           ; BSR set to: 61
 25603                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 25604  017FD2  2A2F               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 25605                           
 25606                           ;mcc_generated_files/uart1.c: 222:  } else {
 25607  017FD4  0012               	return	
 25608  017FD6                     l581:
 25609                           
 25610                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 25611  017FD6  0139               	movlb	57	; () banked
 25612  017FD8  9993               	bcf	147,4,b	;volatile
 25613                           
 25614                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25615  017FDA  0012               	return		;funcret
 25616  017FDC                     __end_of_UART1_Transmit_ISR:
 25617                           	opt callstack 0
 25618                           
 25619 ;; *************** function _UART1_rx_vect_isr *****************
 25620 ;; Defined at:
 25621 ;;		line 206 in file "mcc_generated_files/uart1.c"
 25622 ;; Parameters:    Size  Location     Type
 25623 ;;		None
 25624 ;; Auto vars:     Size  Location     Type
 25625 ;;		None
 25626 ;; Return value:  Size  Location     Type
 25627 ;;                  1    wreg      void 
 25628 ;; Registers used:
 25629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25630 ;; Tracked objects:
 25631 ;;		On entry : 0/0
 25632 ;;		On exit  : 0/0
 25633 ;;		Unchanged: 0/0
 25634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25639 ;;Total ram usage:        0 bytes
 25640 ;; Hardware stack levels used:    1
 25641 ;; Hardware stack levels required when called:    1
 25642 ;; This function calls:
 25643 ;;		Absolute function
 25644 ;;		_UART1_Receive_ISR
 25645 ;; This function is called by:
 25646 ;;		Interrupt level 2
 25647 ;; This function uses a non-reentrant model
 25648 ;;
 25649                           
 25650                           	psect	text133
 25651  0182E0                     __ptext133:
 25652                           	opt callstack 0
 25653  0182E0                     _UART1_rx_vect_isr:
 25654                           	opt callstack 13
 25655                           
 25656                           ;incstack = 0
 25657  0182E0  EE14  F000         	lfsr	1,___inthi_sp
 25658                           
 25659                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 25660  0182E4  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 25661  0182E6  100B               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 25662  0182E8  100C               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 25663  0182EA  B4D8               	btfsc	status,2,c
 25664  0182EC  0011               	retfie		f
 25665                           
 25666                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 25667  0182EE  D801               	call	i2u863_48
 25668  0182F0  0011               	retfie		f
 25669  0182F2                     i2u863_48:
 25670  0182F2  0005               	push	
 25671  0182F4  6EFA               	movwf	pclath,c
 25672  0182F6  500A               	movf	_UART1_RxInterruptHandler^0,w,c
 25673  0182F8  6EFD               	movwf	tosl,c
 25674  0182FA  500B               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 25675  0182FC  6EFE               	movwf	tosh,c
 25676  0182FE  500C               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 25677  018300  6EFF               	movwf	tosu,c
 25678  018302  50FA               	movf	pclath,w,c
 25679  018304  0012               	return		;indir
 25680  018306                     __end_of_UART1_rx_vect_isr:
 25681                           	opt callstack 0
 25682                           
 25683 ;; *************** function _UART1_Receive_ISR *****************
 25684 ;; Defined at:
 25685 ;;		line 229 in file "mcc_generated_files/uart1.c"
 25686 ;; Parameters:    Size  Location     Type
 25687 ;;		None
 25688 ;; Auto vars:     Size  Location     Type
 25689 ;;		None
 25690 ;; Return value:  Size  Location     Type
 25691 ;;                  1  [STACK] void 
 25692 ;; Registers used:
 25693 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25694 ;; Tracked objects:
 25695 ;;		On entry : 0/0
 25696 ;;		On exit  : 0/0
 25697 ;;		Unchanged: 0/0
 25698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25703 ;;Total ram usage:        0 bytes
 25704 ;; Hardware stack levels used:    1
 25705 ;; This function calls:
 25706 ;;		Nothing
 25707 ;; This function is called by:
 25708 ;;		_UART1_Initialize
 25709 ;;		_UART1_rx_vect_isr
 25710 ;; This function uses a reentrant model
 25711 ;;
 25712                           
 25713                           	psect	text134
 25714  018480                     __ptext134:
 25715                           	opt callstack 0
 25716  018480                     _UART1_Receive_ISR:
 25717                           	opt callstack 13
 25718                           
 25719                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 25720                           
 25721                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25722                           ;incstack = 0
 25723  018480  0E00               	movlw	low _uart1RxBuffer
 25724  018482  242E               	addwf	_uart1RxHead^0,w,c	;volatile
 25725  018484  6ED9               	movwf	fsr2l,c
 25726  018486  6ADA               	clrf	fsr2h,c
 25727  018488  0E06               	movlw	high _uart1RxBuffer
 25728  01848A  22DA               	addwfc	fsr2h,f,c
 25729  01848C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 25730  018492  2A2E               	incf	_uart1RxHead^0,f,c	;volatile
 25731                           
 25732                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 25733  018494  282E               	incf	_uart1RxHead^0,w,c
 25734  018496  B4D8               	btfsc	status,2,c
 25735                           
 25736                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 25737  018498  6A2E               	clrf	_uart1RxHead^0,c	;volatile
 25738                           
 25739                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 25740  01849A  2A2C               	incf	_uart1RxCount^0,f,c	;volatile
 25741                           
 25742                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25743  01849C  0012               	return		;funcret
 25744  01849E                     __end_of_UART1_Receive_ISR:
 25745                           	opt callstack 0
 25746                           
 25747 ;; *************** function _UART2_tx_vect_isr *****************
 25748 ;; Defined at:
 25749 ;;		line 195 in file "mcc_generated_files/uart2.c"
 25750 ;; Parameters:    Size  Location     Type
 25751 ;;		None
 25752 ;; Auto vars:     Size  Location     Type
 25753 ;;		None
 25754 ;; Return value:  Size  Location     Type
 25755 ;;                  1    wreg      void 
 25756 ;; Registers used:
 25757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25758 ;; Tracked objects:
 25759 ;;		On entry : 0/0
 25760 ;;		On exit  : 0/0
 25761 ;;		Unchanged: 0/0
 25762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25767 ;;Total ram usage:        0 bytes
 25768 ;; Hardware stack levels used:    1
 25769 ;; Hardware stack levels required when called:    1
 25770 ;; This function calls:
 25771 ;;		Absolute function
 25772 ;;		_UART2_Transmit_ISR
 25773 ;; This function is called by:
 25774 ;;		Interrupt level 2
 25775 ;; This function uses a non-reentrant model
 25776 ;;
 25777                           
 25778                           	psect	text135
 25779  018308                     __ptext135:
 25780                           	opt callstack 0
 25781  018308                     _UART2_tx_vect_isr:
 25782                           	opt callstack 13
 25783                           
 25784                           ;incstack = 0
 25785  018308  EE14  F000         	lfsr	1,___inthi_sp
 25786                           
 25787                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 25788  01830C  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 25789  01830E  100E               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 25790  018310  100F               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 25791  018312  B4D8               	btfsc	status,2,c
 25792  018314  0011               	retfie		f
 25793                           
 25794                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 25795  018316  D801               	call	i2u865_48
 25796  018318  0011               	retfie		f
 25797  01831A                     i2u865_48:
 25798  01831A  0005               	push	
 25799  01831C  6EFA               	movwf	pclath,c
 25800  01831E  500D               	movf	_UART2_TxInterruptHandler^0,w,c
 25801  018320  6EFD               	movwf	tosl,c
 25802  018322  500E               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 25803  018324  6EFE               	movwf	tosh,c
 25804  018326  500F               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 25805  018328  6EFF               	movwf	tosu,c
 25806  01832A  50FA               	movf	pclath,w,c
 25807  01832C  0012               	return		;indir
 25808  01832E                     __end_of_UART2_tx_vect_isr:
 25809                           	opt callstack 0
 25810                           
 25811 ;; *************** function _UART2_Transmit_ISR *****************
 25812 ;; Defined at:
 25813 ;;		line 213 in file "mcc_generated_files/uart2.c"
 25814 ;; Parameters:    Size  Location     Type
 25815 ;;		None
 25816 ;; Auto vars:     Size  Location     Type
 25817 ;;		None
 25818 ;; Return value:  Size  Location     Type
 25819 ;;                  1  [STACK] void 
 25820 ;; Registers used:
 25821 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25822 ;; Tracked objects:
 25823 ;;		On entry : 0/0
 25824 ;;		On exit  : 3B/39
 25825 ;;		Unchanged: 0/0
 25826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25831 ;;Total ram usage:        0 bytes
 25832 ;; Hardware stack levels used:    1
 25833 ;; This function calls:
 25834 ;;		Nothing
 25835 ;; This function is called by:
 25836 ;;		_UART2_Initialize
 25837 ;;		_UART2_tx_vect_isr
 25838 ;; This function uses a reentrant model
 25839 ;;
 25840                           
 25841                           	psect	text136
 25842  017FDC                     __ptext136:
 25843                           	opt callstack 0
 25844  017FDC                     _UART2_Transmit_ISR:
 25845                           	opt callstack 13
 25846                           
 25847                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 25848                           
 25849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25850                           ;incstack = 0
 25851  017FDC  0E40               	movlw	64
 25852  017FDE  6029               	cpfslt	_uart2TxBufferRemaining^0,c
 25853  017FE0  D010               	goto	l701
 25854                           
 25855                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 25856  017FE2  0E6C               	movlw	low _uart2TxBuffer
 25857  017FE4  242A               	addwf	_uart2TxTail^0,w,c	;volatile
 25858  017FE6  6ED9               	movwf	fsr2l,c
 25859  017FE8  6ADA               	clrf	fsr2h,c
 25860  017FEA  0E03               	movlw	high _uart2TxBuffer
 25861  017FEC  22DA               	addwfc	fsr2h,f,c
 25862  017FEE  50DF               	movf	indf2,w,c
 25863  017FF0  013D               	movlb	61	; () banked
 25864  017FF2  6FD2               	movwf	210,b	;volatile
 25865                           
 25866                           ; BSR set to: 61
 25867  017FF4  2A2A               	incf	_uart2TxTail^0,f,c	;volatile
 25868                           
 25869                           ; BSR set to: 61
 25870                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 25871  017FF6  0E3F               	movlw	63
 25872  017FF8  642A               	cpfsgt	_uart2TxTail^0,c
 25873  017FFA  D001               	goto	l8820
 25874                           
 25875                           ; BSR set to: 61
 25876                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 25877  017FFC  6A2A               	clrf	_uart2TxTail^0,c	;volatile
 25878  017FFE                     l8820:
 25879                           
 25880                           ; BSR set to: 61
 25881                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 25882  017FFE  2A29               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 25883                           
 25884                           ;mcc_generated_files/uart2.c: 224:     }
 25885  018000  0012               	return	
 25886  018002                     l701:
 25887                           
 25888                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 25889  018002  0139               	movlb	57	; () banked
 25890  018004  9796               	bcf	150,3,b	;volatile
 25891                           
 25892                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25893  018006  0012               	return		;funcret
 25894  018008                     __end_of_UART2_Transmit_ISR:
 25895                           	opt callstack 0
 25896                           
 25897 ;; *************** function _UART2_rx_vect_isr *****************
 25898 ;; Defined at:
 25899 ;;		line 203 in file "mcc_generated_files/uart2.c"
 25900 ;; Parameters:    Size  Location     Type
 25901 ;;		None
 25902 ;; Auto vars:     Size  Location     Type
 25903 ;;		None
 25904 ;; Return value:  Size  Location     Type
 25905 ;;                  1    wreg      void 
 25906 ;; Registers used:
 25907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 25908 ;; Tracked objects:
 25909 ;;		On entry : 0/0
 25910 ;;		On exit  : 0/0
 25911 ;;		Unchanged: 0/0
 25912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25917 ;;Total ram usage:        0 bytes
 25918 ;; Hardware stack levels used:    1
 25919 ;; Hardware stack levels required when called:    1
 25920 ;; This function calls:
 25921 ;;		Absolute function
 25922 ;;		_UART2_Receive_ISR
 25923 ;; This function is called by:
 25924 ;;		Interrupt level 2
 25925 ;; This function uses a non-reentrant model
 25926 ;;
 25927                           
 25928                           	psect	text137
 25929  018330                     __ptext137:
 25930                           	opt callstack 0
 25931  018330                     _UART2_rx_vect_isr:
 25932                           	opt callstack 13
 25933                           
 25934                           ;incstack = 0
 25935  018330  EE14  F000         	lfsr	1,___inthi_sp
 25936                           
 25937                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 25938  018334  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 25939  018336  1011               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 25940  018338  1012               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 25941  01833A  B4D8               	btfsc	status,2,c
 25942  01833C  0011               	retfie		f
 25943                           
 25944                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 25945  01833E  D801               	call	i2u867_48
 25946  018340  0011               	retfie		f
 25947  018342                     i2u867_48:
 25948  018342  0005               	push	
 25949  018344  6EFA               	movwf	pclath,c
 25950  018346  5010               	movf	_UART2_RxInterruptHandler^0,w,c
 25951  018348  6EFD               	movwf	tosl,c
 25952  01834A  5011               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 25953  01834C  6EFE               	movwf	tosh,c
 25954  01834E  5012               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 25955  018350  6EFF               	movwf	tosu,c
 25956  018352  50FA               	movf	pclath,w,c
 25957  018354  0012               	return		;indir
 25958  018356                     __end_of_UART2_rx_vect_isr:
 25959                           	opt callstack 0
 25960                           
 25961 ;; *************** function _UART2_Receive_ISR *****************
 25962 ;; Defined at:
 25963 ;;		line 233 in file "mcc_generated_files/uart2.c"
 25964 ;; Parameters:    Size  Location     Type
 25965 ;;		None
 25966 ;; Auto vars:     Size  Location     Type
 25967 ;;		None
 25968 ;; Return value:  Size  Location     Type
 25969 ;;                  1  [STACK] void 
 25970 ;; Registers used:
 25971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25972 ;; Tracked objects:
 25973 ;;		On entry : 0/0
 25974 ;;		On exit  : 0/0
 25975 ;;		Unchanged: 0/0
 25976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25981 ;;Total ram usage:        0 bytes
 25982 ;; Hardware stack levels used:    1
 25983 ;; This function calls:
 25984 ;;		Nothing
 25985 ;; This function is called by:
 25986 ;;		_UART2_Initialize
 25987 ;;		_UART2_rx_vect_isr
 25988 ;; This function uses a reentrant model
 25989 ;;
 25990                           
 25991                           	psect	text138
 25992  01849E                     __ptext138:
 25993                           	opt callstack 0
 25994  01849E                     _UART2_Receive_ISR:
 25995                           	opt callstack 13
 25996                           
 25997                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 25998                           
 25999                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26000                           ;incstack = 0
 26001  01849E  0E00               	movlw	low _uart2RxBuffer
 26002  0184A0  2428               	addwf	_uart2RxHead^0,w,c	;volatile
 26003  0184A2  6ED9               	movwf	fsr2l,c
 26004  0184A4  6ADA               	clrf	fsr2h,c
 26005  0184A6  0E07               	movlw	high _uart2RxBuffer
 26006  0184A8  22DA               	addwfc	fsr2h,f,c
 26007  0184AA  006F F743 FFDF     	movff	15824,indf2	;volatile
 26008  0184B0  2A28               	incf	_uart2RxHead^0,f,c	;volatile
 26009                           
 26010                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 26011  0184B2  2828               	incf	_uart2RxHead^0,w,c
 26012  0184B4  B4D8               	btfsc	status,2,c
 26013                           
 26014                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 26015  0184B6  6A28               	clrf	_uart2RxHead^0,c	;volatile
 26016                           
 26017                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 26018  0184B8  2A26               	incf	_uart2RxCount^0,f,c	;volatile
 26019                           
 26020                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26021  0184BA  0012               	return		;funcret
 26022  0184BC                     __end_of_UART2_Receive_ISR:
 26023                           	opt callstack 0
 26024                           
 26025 ;; *************** function _TMR6_ISR *****************
 26026 ;; Defined at:
 26027 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 26028 ;; Parameters:    Size  Location     Type
 26029 ;;		None
 26030 ;; Auto vars:     Size  Location     Type
 26031 ;;		None
 26032 ;; Return value:  Size  Location     Type
 26033 ;;                  1    wreg      void 
 26034 ;; Registers used:
 26035 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26036 ;; Tracked objects:
 26037 ;;		On entry : 0/0
 26038 ;;		On exit  : 0/0
 26039 ;;		Unchanged: 0/0
 26040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26044 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26045 ;;Total ram usage:        1 bytes
 26046 ;; Hardware stack levels used:    1
 26047 ;; Hardware stack levels required when called:    2
 26048 ;; This function calls:
 26049 ;;		_TMR6_CallBack
 26050 ;; This function is called by:
 26051 ;;		Interrupt level 2
 26052 ;; This function uses a non-reentrant model
 26053 ;;
 26054                           
 26055                           	psect	text139
 26056  018510                     __ptext139:
 26057                           	opt callstack 0
 26058  018510                     _TMR6_ISR:
 26059                           	opt callstack 12
 26060                           
 26061                           ;incstack = 0
 26062  018510  0060  F0C8  F057   	movff	btemp,??_TMR6_ISR
 26063  018516  EE14  F000         	lfsr	1,___inthi_sp
 26064                           
 26065                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 26066  01851A  0139               	movlb	57	; () banked
 26067  01851C  91A9               	bcf	169,0,b	;volatile
 26068                           
 26069                           ; BSR set to: 57
 26070                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 26071  01851E  ECCF  F0C1         	call	_TMR6_CallBack	;wreg free
 26072  018522  0060  F15C  F032   	movff	??_TMR6_ISR,btemp
 26073  018528  0011               	retfie		f
 26074  01852A                     __end_of_TMR6_ISR:
 26075                           	opt callstack 0
 26076                           
 26077 ;; *************** function _TMR6_CallBack *****************
 26078 ;; Defined at:
 26079 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 26080 ;; Parameters:    Size  Location     Type
 26081 ;;		None
 26082 ;; Auto vars:     Size  Location     Type
 26083 ;;		None
 26084 ;; Return value:  Size  Location     Type
 26085 ;;                  1  [STACK] void 
 26086 ;; Registers used:
 26087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26088 ;; Tracked objects:
 26089 ;;		On entry : 3F/39
 26090 ;;		On exit  : 0/0
 26091 ;;		Unchanged: 0/0
 26092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26097 ;;Total ram usage:        0 bytes
 26098 ;; Hardware stack levels used:    1
 26099 ;; Hardware stack levels required when called:    1
 26100 ;; This function calls:
 26101 ;;		Absolute function
 26102 ;;		_TMR6_DefaultInterruptHandler
 26103 ;; This function is called by:
 26104 ;;		_TMR6_ISR
 26105 ;; This function uses a reentrant model
 26106 ;;
 26107                           
 26108                           	psect	text140
 26109  01839E                     __ptext140:
 26110                           	opt callstack 0
 26111  01839E                     _TMR6_CallBack:
 26112                           	opt callstack 12
 26113                           
 26114                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 26115                           
 26116                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26117                           ;incstack = 0
 26118  01839E  0100               	movlb	0	; () banked
 26119  0183A0  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 26120  0183A2  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 26121  0183A4  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 26122  0183A6  B4D8               	btfsc	status,2,c
 26123  0183A8  0012               	return	
 26124                           
 26125                           ; BSR set to: 0
 26126                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 26127  0183AA  D801               	call	u840_48
 26128  0183AC  0012               	return	
 26129  0183AE                     u840_48:
 26130  0183AE  0005               	push	
 26131  0183B0  6EFA               	movwf	pclath,c
 26132  0183B2  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 26133  0183B4  6EFD               	movwf	tosl,c
 26134  0183B6  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 26135  0183B8  6EFE               	movwf	tosh,c
 26136  0183BA  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 26137  0183BC  6EFF               	movwf	tosu,c
 26138  0183BE  50FA               	movf	pclath,w,c
 26139  0183C0  0012               	return		;indir
 26140  0183C2                     __end_of_TMR6_CallBack:
 26141                           	opt callstack 0
 26142                           
 26143 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 26144 ;; Defined at:
 26145 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 26146 ;; Parameters:    Size  Location     Type
 26147 ;;		None
 26148 ;; Auto vars:     Size  Location     Type
 26149 ;;  i               1  [STACK] unsigned char 
 26150 ;; Return value:  Size  Location     Type
 26151 ;;                  1  [STACK] void 
 26152 ;; Registers used:
 26153 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26154 ;; Tracked objects:
 26155 ;;		On entry : 3F/0
 26156 ;;		On exit  : 0/0
 26157 ;;		Unchanged: 0/0
 26158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26163 ;;Total ram usage:        0 bytes
 26164 ;; Hardware stack levels used:    1
 26165 ;; This function calls:
 26166 ;;		Nothing
 26167 ;; This function is called by:
 26168 ;;		_TMR6_Initialize
 26169 ;;		_TMR6_CallBack
 26170 ;; This function uses a reentrant model
 26171 ;;
 26172                           
 26173                           	psect	text141
 26174  017C2E                     __ptext141:
 26175                           	opt callstack 0
 26176  017C2E                     _TMR6_DefaultInterruptHandler:
 26177                           	opt callstack 0
 26178                           
 26179                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26180  017C2E  52E6               	movf	postinc1,f,c
 26181                           
 26182                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 26183                           ;stkvar	_i @ sp[(-1)+0]
 26184                           
 26185                           ;incstack = 0
 26186  017C30  0EFF               	movlw	-1
 26187  017C32  6AE3               	clrf	plusw1,c
 26188  017C34                     l8498:
 26189                           
 26190                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 26191                           ;stkvar	_i @ sp[(-1)+0]
 26192  017C34  0EFF               	movlw	-1
 26193  017C36  50E3               	movf	plusw1,w,c
 26194  017C38  0D02               	mullw	2
 26195  017C3A  50F3               	movf	243,w,c
 26196  017C3C  0F89               	addlw	low _tickCount
 26197  017C3E  6ED9               	movwf	fsr2l,c
 26198  017C40  6ADA               	clrf	fsr2h,c
 26199  017C42  50DE               	movf	postinc2,w,c
 26200  017C44  10DE               	iorwf	postinc2,w,c
 26201  017C46  B4D8               	btfsc	status,2,c
 26202  017C48  D00A               	goto	l8502
 26203                           
 26204                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 26205                           ;stkvar	_i @ sp[(-1)+0]
 26206  017C4A  0EFF               	movlw	-1
 26207  017C4C  50E3               	movf	plusw1,w,c
 26208  017C4E  0D02               	mullw	2
 26209  017C50  50F3               	movf	243,w,c
 26210  017C52  0F89               	addlw	low _tickCount
 26211  017C54  6ED9               	movwf	fsr2l,c
 26212  017C56  6ADA               	clrf	fsr2h,c
 26213  017C58  06DE               	decf	postinc2,f,c
 26214  017C5A  0E00               	movlw	0
 26215  017C5C  5ADD               	subwfb	postdec2,f,c
 26216  017C5E                     l8502:
 26217                           
 26218                           ;mcc_generated_files/tmr6.c: 207:  }
 26219                           ;stkvar	_i @ sp[(-1)+0]
 26220  017C5E  0EFF               	movlw	-1
 26221  017C60  2AE3               	incf	plusw1,f,c
 26222                           
 26223                           ;stkvar	_i @ sp[(-1)+0]
 26224  017C62  0EFF               	movlw	-1
 26225  017C64  006F FF8C  F032    	movff	plusw1,btemp
 26226  017C6A  0E0B               	movlw	11
 26227  017C6C  6432               	cpfsgt	btemp^0,c
 26228  017C6E  D7E2               	goto	l8498
 26229                           
 26230                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26231  017C70  52E5               	movf	postdec1,f,c
 26232  017C72  0012               	return		;funcret
 26233  017C74                     __end_of_TMR6_DefaultInterruptHandler:
 26234                           	opt callstack 0
 26235                           
 26236 ;; *************** function _DMA1_DMASCNT_ISR *****************
 26237 ;; Defined at:
 26238 ;;		line 126 in file "mcc_generated_files/dma1.c"
 26239 ;; Parameters:    Size  Location     Type
 26240 ;;		None
 26241 ;; Auto vars:     Size  Location     Type
 26242 ;;		None
 26243 ;; Return value:  Size  Location     Type
 26244 ;;                  1    wreg      void 
 26245 ;; Registers used:
 26246 ;;		None
 26247 ;; Tracked objects:
 26248 ;;		On entry : 0/0
 26249 ;;		On exit  : 3F/0
 26250 ;;		Unchanged: 0/0
 26251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26253 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26255 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26256 ;;Total ram usage:        0 bytes
 26257 ;; Hardware stack levels used:    1
 26258 ;; This function calls:
 26259 ;;		Nothing
 26260 ;; This function is called by:
 26261 ;;		Interrupt level 2
 26262 ;; This function uses a non-reentrant model
 26263 ;;
 26264                           
 26265                           	psect	text142
 26266  018610                     __ptext142:
 26267                           	opt callstack 0
 26268  018610                     _DMA1_DMASCNT_ISR:
 26269                           	opt callstack 14
 26270                           
 26271                           ;incstack = 0
 26272  018610  EE14  F000         	lfsr	1,___inthi_sp
 26273                           
 26274                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 26275  018614  0139               	movlb	57	; () banked
 26276  018616  91A2               	bcf	162,0,b	;volatile
 26277                           
 26278                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 26279  018618  0100               	movlb	0	; () banked
 26280  01861A  97A1               	bcf	_spi_link& (0+255),3,b	;volatile
 26281                           
 26282                           ; BSR set to: 0
 26283  01861C  0011               	retfie		f
 26284  01861E                     __end_of_DMA1_DMASCNT_ISR:
 26285                           	opt callstack 0
 26286                           
 26287 ;; *************** function _DMA1_DMADCNT_ISR *****************
 26288 ;; Defined at:
 26289 ;;		line 134 in file "mcc_generated_files/dma1.c"
 26290 ;; Parameters:    Size  Location     Type
 26291 ;;		None
 26292 ;; Auto vars:     Size  Location     Type
 26293 ;;		None
 26294 ;; Return value:  Size  Location     Type
 26295 ;;                  1    wreg      void 
 26296 ;; Registers used:
 26297 ;;		None
 26298 ;; Tracked objects:
 26299 ;;		On entry : 0/0
 26300 ;;		On exit  : 3F/39
 26301 ;;		Unchanged: 0/0
 26302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26307 ;;Total ram usage:        0 bytes
 26308 ;; Hardware stack levels used:    1
 26309 ;; This function calls:
 26310 ;;		Nothing
 26311 ;; This function is called by:
 26312 ;;		Interrupt level 2
 26313 ;; This function uses a non-reentrant model
 26314 ;;
 26315                           
 26316                           	psect	text143
 26317  018628                     __ptext143:
 26318                           	opt callstack 0
 26319  018628                     _DMA1_DMADCNT_ISR:
 26320                           	opt callstack 14
 26321                           
 26322                           ; BSR set to: 0
 26323                           ;incstack = 0
 26324  018628  EE14  F000         	lfsr	1,___inthi_sp
 26325                           
 26326                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 26327  01862C  0139               	movlb	57	; () banked
 26328  01862E  93A2               	bcf	162,1,b	;volatile
 26329                           
 26330                           ; BSR set to: 57
 26331  018630  0011               	retfie		f
 26332  018632                     __end_of_DMA1_DMADCNT_ISR:
 26333                           	opt callstack 0
 26334                           
 26335 ;; *************** function _DMA1_DMAA_ISR *****************
 26336 ;; Defined at:
 26337 ;;		line 144 in file "mcc_generated_files/dma1.c"
 26338 ;; Parameters:    Size  Location     Type
 26339 ;;		None
 26340 ;; Auto vars:     Size  Location     Type
 26341 ;;		None
 26342 ;; Return value:  Size  Location     Type
 26343 ;;                  1    wreg      void 
 26344 ;; Registers used:
 26345 ;;		None
 26346 ;; Tracked objects:
 26347 ;;		On entry : 0/0
 26348 ;;		On exit  : 3F/39
 26349 ;;		Unchanged: 0/0
 26350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26355 ;;Total ram usage:        0 bytes
 26356 ;; Hardware stack levels used:    1
 26357 ;; This function calls:
 26358 ;;		Nothing
 26359 ;; This function is called by:
 26360 ;;		Interrupt level 2
 26361 ;; This function uses a non-reentrant model
 26362 ;;
 26363                           
 26364                           	psect	text144
 26365  018634                     __ptext144:
 26366                           	opt callstack 0
 26367  018634                     _DMA1_DMAA_ISR:
 26368                           	opt callstack 14
 26369                           
 26370                           ; BSR set to: 57
 26371                           ;incstack = 0
 26372  018634  EE14  F000         	lfsr	1,___inthi_sp
 26373                           
 26374                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 26375  018638  0139               	movlb	57	; () banked
 26376  01863A  97A2               	bcf	162,3,b	;volatile
 26377                           
 26378                           ; BSR set to: 57
 26379  01863C  0011               	retfie		f
 26380  01863E                     __end_of_DMA1_DMAA_ISR:
 26381                           	opt callstack 0
 26382                           
 26383 ;; *************** function _DMA1_DMAOR_ISR *****************
 26384 ;; Defined at:
 26385 ;;		line 155 in file "mcc_generated_files/dma1.c"
 26386 ;; Parameters:    Size  Location     Type
 26387 ;;		None
 26388 ;; Auto vars:     Size  Location     Type
 26389 ;;		None
 26390 ;; Return value:  Size  Location     Type
 26391 ;;                  1    wreg      void 
 26392 ;; Registers used:
 26393 ;;		None
 26394 ;; Tracked objects:
 26395 ;;		On entry : 0/0
 26396 ;;		On exit  : 3F/39
 26397 ;;		Unchanged: 0/0
 26398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26403 ;;Total ram usage:        0 bytes
 26404 ;; Hardware stack levels used:    1
 26405 ;; This function calls:
 26406 ;;		Nothing
 26407 ;; This function is called by:
 26408 ;;		Interrupt level 2
 26409 ;; This function uses a non-reentrant model
 26410 ;;
 26411                           
 26412                           	psect	text145
 26413  018640                     __ptext145:
 26414                           	opt callstack 0
 26415  018640                     _DMA1_DMAOR_ISR:
 26416                           	opt callstack 14
 26417                           
 26418                           ; BSR set to: 57
 26419                           ;incstack = 0
 26420  018640  EE14  F000         	lfsr	1,___inthi_sp
 26421                           
 26422                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 26423  018644  0139               	movlb	57	; () banked
 26424  018646  95A2               	bcf	162,2,b	;volatile
 26425                           
 26426                           ; BSR set to: 57
 26427  018648  0011               	retfie		f
 26428  01864A                     __end_of_DMA1_DMAOR_ISR:
 26429                           	opt callstack 0
 26430                           
 26431                           ;
 26432                           ; Interrupt Vector Table @ 0x8
 26433                           ;
 26434                           
 26435                           	psect	ivt0x8
 26436  000008                     __pivt0x8:
 26437                           	opt callstack 0
 26438  000008                     ivt0x8_base:
 26439                           	opt callstack 0
 26440                           
 26441                           ; Vector 0 : SWINT
 26442  000008  61A1               	dw	_Default_ISR shr (0+2)
 26443                           
 26444                           ; Vector 1 : HLVD
 26445  00000A  61A1               	dw	_Default_ISR shr (0+2)
 26446                           
 26447                           ; Vector 2 : OSF
 26448  00000C  61A1               	dw	_Default_ISR shr (0+2)
 26449                           
 26450                           ; Vector 3 : CSW
 26451  00000E  61A1               	dw	_Default_ISR shr (0+2)
 26452                           
 26453                           ; Vector 4 : NVM
 26454  000010  61A1               	dw	_Default_ISR shr (0+2)
 26455                           
 26456                           ; Vector 5 : SCAN
 26457  000012  61A1               	dw	_Default_ISR shr (0+2)
 26458                           
 26459                           ; Vector 6 : CRC
 26460  000014  61A1               	dw	_Default_ISR shr (0+2)
 26461                           
 26462                           ; Vector 7 : IOC
 26463  000016  61A1               	dw	_Default_ISR shr (0+2)
 26464                           
 26465                           ; Vector 8 : INT0
 26466  000018  6180               	dw	_INT0_ISR shr (0+2)
 26467                           
 26468                           ; Vector 9 : ZCD
 26469  00001A  61A1               	dw	_Default_ISR shr (0+2)
 26470                           
 26471                           ; Vector 10 : AD
 26472  00001C  600D               	dw	_ADCC_ISR shr (0+2)
 26473                           
 26474                           ; Vector 11 : ADT
 26475  00001E  5D99               	dw	_ADCC_ThresholdISR shr (0+2)
 26476                           
 26477                           ; Vector 12 : CMP1
 26478  000020  61A1               	dw	_Default_ISR shr (0+2)
 26479                           
 26480                           ; Vector 13 : SMT1
 26481  000022  61A1               	dw	_Default_ISR shr (0+2)
 26482                           
 26483                           ; Vector 14 : SMT1PRA
 26484  000024  61A1               	dw	_Default_ISR shr (0+2)
 26485                           
 26486                           ; Vector 15 : SMT1PRW
 26487  000026  61A1               	dw	_Default_ISR shr (0+2)
 26488                           
 26489                           ; Vector 16 : DMA1SCNT
 26490  000028  6184               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 26491                           
 26492                           ; Vector 17 : DMA1DCNT
 26493  00002A  618A               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 26494                           
 26495                           ; Vector 18 : DMA1OR
 26496  00002C  6190               	dw	_DMA1_DMAOR_ISR shr (0+2)
 26497                           
 26498                           ; Vector 19 : DMA1A
 26499  00002E  618D               	dw	_DMA1_DMAA_ISR shr (0+2)
 26500                           
 26501                           ; Vector 20 : SPI1RX
 26502  000030  61A1               	dw	_Default_ISR shr (0+2)
 26503                           
 26504                           ; Vector 21 : SPI1TX
 26505  000032  61A1               	dw	_Default_ISR shr (0+2)
 26506                           
 26507                           ; Vector 22 : SPI1
 26508  000034  61A1               	dw	_Default_ISR shr (0+2)
 26509                           
 26510                           ; Vector 23 : I2C1RX
 26511  000036  61A1               	dw	_Default_ISR shr (0+2)
 26512                           
 26513                           ; Vector 24 : I2C1TX
 26514  000038  61A1               	dw	_Default_ISR shr (0+2)
 26515                           
 26516                           ; Vector 25 : I2C1
 26517  00003A  61A1               	dw	_Default_ISR shr (0+2)
 26518                           
 26519                           ; Vector 26 : I2C1E
 26520  00003C  61A1               	dw	_Default_ISR shr (0+2)
 26521                           
 26522                           ; Vector 27 : U1RX
 26523  00003E  60B8               	dw	_UART1_rx_vect_isr shr (0+2)
 26524                           
 26525                           ; Vector 28 : U1TX
 26526  000040  60AE               	dw	_UART1_tx_vect_isr shr (0+2)
 26527                           
 26528                           ; Vector 29 : U1E
 26529  000042  61A1               	dw	_Default_ISR shr (0+2)
 26530                           
 26531                           ; Vector 30 : U1
 26532  000044  61A1               	dw	_Default_ISR shr (0+2)
 26533                           
 26534                           ; Vector 31 : TMR0
 26535  000046  61A1               	dw	_Default_ISR shr (0+2)
 26536                           
 26537                           ; Vector 32 : TMR1
 26538  000048  61A1               	dw	_Default_ISR shr (0+2)
 26539                           
 26540                           ; Vector 33 : TMR1G
 26541  00004A  61A1               	dw	_Default_ISR shr (0+2)
 26542                           
 26543                           ; Vector 34 : TMR2
 26544  00004C  61A1               	dw	_Default_ISR shr (0+2)
 26545                           
 26546                           ; Vector 35 : CCP1
 26547  00004E  61A1               	dw	_Default_ISR shr (0+2)
 26548                           
 26549                           ; Vector 36 : Undefined
 26550  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 26551                           
 26552                           ; Vector 37 : NCO1
 26553  000052  61A1               	dw	_Default_ISR shr (0+2)
 26554                           
 26555                           ; Vector 38 : CWG1
 26556  000054  61A1               	dw	_Default_ISR shr (0+2)
 26557                           
 26558                           ; Vector 39 : CLC1
 26559  000056  61A1               	dw	_Default_ISR shr (0+2)
 26560                           
 26561                           ; Vector 40 : INT1
 26562  000058  5F4F               	dw	_INT1_ISR shr (0+2)
 26563                           
 26564                           ; Vector 41 : CMP2
 26565  00005A  61A1               	dw	_Default_ISR shr (0+2)
 26566                           
 26567                           ; Vector 42 : DMA2SCNT
 26568  00005C  61A1               	dw	_Default_ISR shr (0+2)
 26569                           
 26570                           ; Vector 43 : DMA2DCNT
 26571  00005E  61A1               	dw	_Default_ISR shr (0+2)
 26572                           
 26573                           ; Vector 44 : DMA2OR
 26574  000060  61A1               	dw	_Default_ISR shr (0+2)
 26575                           
 26576                           ; Vector 45 : DMA2A
 26577  000062  61A1               	dw	_Default_ISR shr (0+2)
 26578                           
 26579                           ; Vector 46 : I2C2RX
 26580  000064  61A1               	dw	_Default_ISR shr (0+2)
 26581                           
 26582                           ; Vector 47 : I2C2TX
 26583  000066  61A1               	dw	_Default_ISR shr (0+2)
 26584                           
 26585                           ; Vector 48 : I2C2
 26586  000068  61A1               	dw	_Default_ISR shr (0+2)
 26587                           
 26588                           ; Vector 49 : I2C2E
 26589  00006A  61A1               	dw	_Default_ISR shr (0+2)
 26590                           
 26591                           ; Vector 50 : U2RX
 26592  00006C  60CC               	dw	_UART2_rx_vect_isr shr (0+2)
 26593                           
 26594                           ; Vector 51 : U2TX
 26595  00006E  60C2               	dw	_UART2_tx_vect_isr shr (0+2)
 26596                           
 26597                           ; Vector 52 : U2E
 26598  000070  61A1               	dw	_Default_ISR shr (0+2)
 26599                           
 26600                           ; Vector 53 : U2
 26601  000072  61A1               	dw	_Default_ISR shr (0+2)
 26602                           
 26603                           ; Vector 54 : TMR3
 26604  000074  61A1               	dw	_Default_ISR shr (0+2)
 26605                           
 26606                           ; Vector 55 : TMR3G
 26607  000076  61A1               	dw	_Default_ISR shr (0+2)
 26608                           
 26609                           ; Vector 56 : TMR4
 26610  000078  61A1               	dw	_Default_ISR shr (0+2)
 26611                           
 26612                           ; Vector 57 : CCP2
 26613  00007A  61A1               	dw	_Default_ISR shr (0+2)
 26614                           
 26615                           ; Vector 58 : Undefined
 26616  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 26617                           
 26618                           ; Vector 59 : CWG2
 26619  00007E  61A1               	dw	_Default_ISR shr (0+2)
 26620                           
 26621                           ; Vector 60 : CLC2
 26622  000080  61A1               	dw	_Default_ISR shr (0+2)
 26623                           
 26624                           ; Vector 61 : INT2
 26625  000082  61A1               	dw	_Default_ISR shr (0+2)
 26626                           
 26627                           ; Vector 62 : Undefined
 26628  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 26629                           
 26630                           ; Vector 63 : Undefined
 26631  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 26632                           
 26633                           ; Vector 64 : Undefined
 26634  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 26635                           
 26636                           ; Vector 65 : Undefined
 26637  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 26638                           
 26639                           ; Vector 66 : Undefined
 26640  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 26641                           
 26642                           ; Vector 67 : Undefined
 26643  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 26644                           
 26645                           ; Vector 68 : Undefined
 26646  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 26647                           
 26648                           ; Vector 69 : Undefined
 26649  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 26650                           
 26651                           ; Vector 70 : TMR5
 26652  000094  5E74               	dw	_TMR5_ISR shr (0+2)
 26653                           
 26654                           ; Vector 71 : TMR5G
 26655  000096  61A1               	dw	_Default_ISR shr (0+2)
 26656                           
 26657                           ; Vector 72 : TMR6
 26658  000098  6144               	dw	_TMR6_ISR shr (0+2)
 26659                           
 26660                           ; Vector 73 : CCP3
 26661  00009A  61A1               	dw	_Default_ISR shr (0+2)
 26662                           
 26663                           ; Vector 74 : CWG3
 26664  00009C  61A1               	dw	_Default_ISR shr (0+2)
 26665                           
 26666                           ; Vector 75 : CLC3
 26667  00009E  61A1               	dw	_Default_ISR shr (0+2)
 26668                           
 26669                           ; Vector 76 : Undefined
 26670  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 26671                           
 26672                           ; Vector 77 : Undefined
 26673  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 26674                           
 26675                           ; Vector 78 : Undefined
 26676  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 26677                           
 26678                           ; Vector 79 : Undefined
 26679  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 26680                           
 26681                           ; Vector 80 : CCP4
 26682  0000A8  61A1               	dw	_Default_ISR shr (0+2)
 26683                           
 26684                           ; Vector 81 : CLC4
 26685  0000AA  61A1               	dw	_Default_ISR shr (0+2)
 26686  0000AC                     ivt0x8_undefint:
 26687                           	opt callstack 0
 26688  0000AC  00FF               	reset	
 26689                           
 26690                           	psect	text146
 26691  000000                     __ptext146:
 26692                           	opt callstack 0
 26693                           
 26694                           	psect	rparam
 26695  0000                     
 26696                           	psect	temp
 26697  000032                     btemp:
 26698                           	opt callstack 0
 26699  000032                     	ds	32
 26700  0000                     wtemp0	set	btemp
 26701  0000                     wtemp1	set	btemp+2
 26702  0000                     wtemp2	set	btemp+4
 26703  0000                     wtemp3	set	btemp+6
 26704  0000                     wtemp4	set	btemp+8
 26705  0000                     wtemp5	set	btemp+10
 26706  0000                     wtemp8	set	btemp+1
 26707  0000                     ttemp0	set	btemp
 26708  0000                     ttemp1	set	btemp+3
 26709  0000                     ttemp2	set	btemp+6
 26710  0000                     ttemp3	set	btemp+9
 26711  0000                     ttemp5	set	btemp+1
 26712  0000                     ttemp6	set	btemp+4
 26713  0000                     ttemp7	set	btemp+8
 26714  0000                     ltemp0	set	btemp
 26715  0000                     ltemp1	set	btemp+4
 26716  0000                     ltemp2	set	btemp+8
 26717  0000                     lltemp0	set	btemp
 26718  0000                     lltemp1	set	btemp+8
 26719  0000                     lltemp2	set	btemp+16
 26720  0000                     lltemp3	set	btemp+24
 26721                           tosu	equ	0x3FFF
 26722                           tosh	equ	0x3FFE
 26723                           tosl	equ	0x3FFD
 26724                           stkptr	equ	0x3FFC
 26725                           pclatu	equ	0x3FFB
 26726                           pclath	equ	0x3FFA
 26727                           pcl	equ	0x3FF9
 26728                           tblptru	equ	0x3FF8
 26729                           tblptrh	equ	0x3FF7
 26730                           tblptrl	equ	0x3FF6
 26731                           tablat	equ	0x3FF5
 26732                           prodh	equ	0x3FF4
 26733                           prodl	equ	0x3FF3
 26734                           indf0	equ	0x3FEF
 26735                           postinc0	equ	0x3FEE
 26736                           postdec0	equ	0x3FED
 26737                           preinc0	equ	0x3FEC
 26738                           plusw0	equ	0x3FEB
 26739                           fsr0h	equ	0x3FEA
 26740                           fsr0l	equ	0x3FE9
 26741                           wreg	equ	0x3FE8
 26742                           indf1	equ	0x3FE7
 26743                           postinc1	equ	0x3FE6
 26744                           postdec1	equ	0x3FE5
 26745                           preinc1	equ	0x3FE4
 26746                           plusw1	equ	0x3FE3
 26747                           fsr1h	equ	0x3FE2
 26748                           fsr1l	equ	0x3FE1
 26749                           bsr	equ	0x3FE0
 26750                           indf2	equ	0x3FDF
 26751                           postinc2	equ	0x3FDE
 26752                           postdec2	equ	0x3FDD
 26753                           preinc2	equ	0x3FDC
 26754                           plusw2	equ	0x3FDB
 26755                           fsr2h	equ	0x3FDA
 26756                           fsr2l	equ	0x3FD9
 26757                           status	equ	0x3FD8


Data Sizes:
    Strings     273
    Constant    144
    Data        250
    BSS         1402
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      55
    BANK0           160      4     154
    BANK1           256      4     199
    BANK2           256      0     160
    BANK3           256      0     236
    BANK4           256      0     134
    BANK5           256      0     218
    BANK6           256      0     255
    BANK7           256      0     255
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_33(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_44(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4975_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK1[187]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK5[218]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_16(CODE[9]), 
		 -> STR_15(CODE[12]), D.lcd(BANK5[216]), D(BANK5[218]), T(CODE[144]), 
		 -> STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    S3988tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_15(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), V(BANK1[187]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK5[216]), D(BANK5[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  347318
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      31
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      93
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      31
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1358
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1     124
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _get_switch                                           1     0      1      62
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   32950
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   16232
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    8399
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    7706
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      34
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      31
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     476
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  197067
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   98219
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   31879
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      62
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2     124
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   66374
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   66092
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   32919
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      62
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      62
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   33080
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   31654
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   31525
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   31193
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2780
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     192
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     325
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   17820
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     192
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     489
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     195
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     337
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2976
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    2911
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      65
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    2165
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     266
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8     130
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1652
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     433
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     445
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    3327
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      93
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     433
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     445
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     603
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      99
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      31
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      62
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      93
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      62
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      62
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      93
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      31
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      62
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     344
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      62
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      62
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      31
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      31
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      34
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      62
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      62
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      31
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      31
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              0 BANK0      4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              0 BANK1      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      31
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      31
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      31
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0      FF      19       99.6%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      DA      15       85.2%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      EC      11       92.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      A0       9       62.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      C7       7       77.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      4      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      37       1       87.3%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     682      58        0.0%
DATA                 0      0     682       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Nov 27 01:03:06 2019

                     _SPI1_Exchange8bit 8426                __end_of_set_display_info 8480  
                                     _C 0300                                       _D 0500  
                                     _P 00BD                                       _R 00C7  
                                     _S 0060                                       _T FE5D  
                                     _V 0100        __end_of_TMR5_SetInterruptHandler 81EE  
          __end_of_start_switch_handler 8426                             __CFG_CP$OFF 000000  
               __size_of_ringBufS_flush 0092                  __end_of_FVR_Initialize 8672  
                           __CFG_LVP$ON 000000                                     l171 8596  
                                   l701 8002                                     l581 7FD6  
                                   l835 8434                                     _GIE 01FE97  
                                   _abs 7B5C                                     _pad 6754  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize 8542  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack 83E4  
                    _UART1_Transmit_ISR 7FB0                           __CFG_BBEN$OFF 000000  
                         _INT1_CallBack 83C2                            __CFG_ZCD$OFF 000000  
                                  l1028 7D34                                    l2024 1D78  
                                  l1261 37CA                                    l1342 7926  
                                  l1254 34F0                                    l1246 3340  
                                  l2312 6076                                    l1256 34F6  
                                  l2308 6DEC                                    l1700 5CE0  
                                  l1615 847C                                    l2319 614A  
                                  l2346 5FE8                                    l1482 726E  
                                  l1900 066A                                    l1558 7DD2  
                                  l1478 6F54                                    l1815 67B0  
                                  l2631 32D8                                    l1575 6972  
                                  l1567 55EE                                    l1663 3CAC  
                                  l1497 7E06                                    l2730 5E76  
                                  l1835 3D90                                    l1915 0B1A  
                                  l2707 5958                    _ADCC_StartConversion 85B0  
                                  l1871 123A                                    l2833 6632  
                                  l1953 4C2E                                    l2738 7B9C  
                                  l2586 2D5E                                    l2667 25A2  
                                  l2907 740A                                    l2598 2BEE  
                                  l1974 4176                                    l2769 52EC  
                                  l2894 748E                                    l2879 5B20  
                                  l8502 7C5E                                    l9410 2642  
                                  l9500 29B6                                    l9404 2602  
                                  l9422 26C0                                    l9414 2658  
                                  l8720 62E0                                    l8712 62B6  
                                  l9600 2CE6                                    l9520 2A64  
                                  l9440 2778                                    l9416 2688  
                                  l8714 62C6                                    l9434 2732  
                                  l8820 7FFE                                    l8740 63B2  
                                  l8732 6344                                    l8716 62CC  
                                  l8724 62E8                                    l9364 6548  
                                  l9612 2D3E                                    l9604 2CFE  
                                  l9540 2B78                                    l9524 2A6E  
                                  l9428 26F2                                    l8718 62D2  
                                  l8726 6314                                    l9390 719A  
                                  l9630 67BA                                    l9606 2D0E  
                                  l9550 2BD2                                    l9542 2B9E  
                                  l9518 2A52                                    l9446 279A  
                                  l9438 2748                                    l9702 460A  
                                  l9376 70D0                                    l9624 6780  
                                  l9560 2C22                                    l9528 2AA0  
                                  l8498 7C34                                    l9386 715C  
                                  l9378 70F2                                    l9634 67F6  
                                  l9490 296A                                    l9722 47C0  
                                  l9628 67A8                                    l9820 5488  
                                  l9812 53DC                                    l9804 5354  
                                  l9564 2C2E                                    l9492 297C  
                                  l9476 28D8                                    l9660 5E14  
                                  l9716 4728                                    l8846 7D1C  
                                  l9638 6840                                    l9646 7B8C  
                                  l9910 307A                                    l9902 3044  
                                  l9590 2CBA                                    l9574 2C56  
                                  l9558 2C10                                    l9486 294A  
                                  l9670 5E6E                                    l9726 482E  
                                  l9718 4778                                    l9760 4E64  
                                  l9912 308C                                    l9920 30E4  
                                  l9840 2DBE                                    l9496 2986  
                                  l9664 5E18                                    l9744 73FA  
                                  l9850 2E14                                    l9578 2C5C  
                                  l9772 4EFE                                    l9932 312E  
                                  l9860 2E9C                                    l9852 2E44  
                                  l9676 6CA6                                    l8798 7FD2  
                                  l9766 4EB8                                    l9950 31A4  
                                  l9926 3112                                    l9918 30E0  
                                  l9870 2EF2                                    l9846 2DFE  
                                  STR_1 FF60                                    l9784 4FD0  
                                  l9960 3218                                    l9936 3154  
                                  l9872 2F22                                    l9688 747E  
                                  STR_2 FFB2                                    STR_3 FFE0  
                                  l9946 319E                                    l9866 2EDC  
                                  STR_4 FF4F                                    STR_5 FF71  
                                  l9980 32BC                                    l9972 3284  
                                  l9892 2FB4                                    l9884 2F9A  
                                  STR_6 FFB2                                    STR_7 FFE0  
                                  l9966 3254                                    l9878 2F60  
                                  STR_8 FF3E                                    STR_9 FF93  
                                  l9978 32AC                                    l9996 1DD8  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    _T6PR 003F93  
                                  _PMD0 0039C0                                    _PMD1 0039C1  
                                  _PMD2 0039C2                                    _PMD3 0039C3  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  _PMD6 0039C6                                    _PMD7 0039C7  
                                  u9100 2A96                                    u9030 29AE  
                                  u9200 2C4E                                    u9040 29CE  
                                  u9008 2920                                    u9105 2A86  
                                  u9035 299E                                    u9140 2BC0  
                                  u9310 7EE6                                    u9240 2CAA  
                                  u9320 7EE8                                    u9180 2C34  
                                  u9500 45A2                                    u9245 2C9A  
                                  u9270 2CCA                                    u9430 5E66  
                                  u9510 45EE                                    u9440 5E68  
                                  u9600 7CAC                                    u9425 5E48  
                                  u9505 4598                                    u8810 653C  
                                  u9370 7B70                                    u9450 6D20  
                                  u9610 7CAE                                    u9700 4EB4  
                                  u9380 5D98                                    u9620 73B8  
                                  u8830 65B8                                    u9550 46CE  
                                  u9470 743C                                    u9630 73BA  
                                  u9711 4EBE                                    u9535 4628  
                                  u8840 7120                                    u9720 4EF8  
                                  u9800 534E                                    u9536 462E  
                                  u9480 743E                                    u9385 5D8E  
                                  u9537 463C                                    u9457 6D12  
                                  u9650 7F46                                    u9730 4F2A  
                                  u9570 47A6                                    _PLLR 01CEE0  
                                  u9555 46C4                                    u9660 7F48  
                                  u9820 53A4                                    u9750 5008  
                                  u9830 53D6                                    u8870 7F16  
                                  u8847 7112                                    u9575 479C  
                                  u9680 4E5E                                    u9840 5408  
                                  u8880 7F18                                    u9770 505A  
                                  u9860 54C0                                    u8980 28FE  
                                  u8990 291E                                    u8991 2918  
                                  u9880 5512                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 805E  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0240  
                                  _atoi 5082                                    _ctoa 7308  
                                  _main 32E2                                    _dtoa 3CB2  
                                  _nanf 77FA                                    _seed 01BB  
                                  _prec 001D                                    _nout 0019  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 4B44  
                                  btemp 0032                                    _xtoa 4132  
                __end_of_check_adc_scan 866A                           ___fpclassifyf 5CEA  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0023  
             __end_of_SPI1_Exchange8bit 8444                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr 82E0                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0052                        __end_of_INT0_ISR 860E  
                      __end_of_INT1_ISR 7D7A          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 6F5C           __end_of_OSCILLATOR_Initialize 859C  
                                 l10002 1E18                                   l10020 1EE6  
                                 l10004 1E1E                                   l10022 1EEC  
                                 l10014 1EA6                                   l10006 1E4E  
                                 l10104 2422                                   l10032 1F3E  
                                 l10024 1F1C                                   l10122 24E2  
                                 l10212 6686                                   l10204 665C  
                                 l10108 2428                                   l11004 18E8  
                                 l11100 48F0                                   l10230 673A  
                                 l10222 6706                                   l10118 249C  
                                 l10208 666E                                   l10136 2550  
                                 l10128 250C                                   l11008 191C  
                                 l11120 4AC6                                   l11112 4A18  
                                 l10410 40AC                                   l10170 61AE  
                                 l10242 6DB6                                   l10138 256A  
                                 l10090 23B2                                   l10314 5F80  
                                 l10306 5F54                                   l11106 49AE  
                                 l10164 618E                                   l10260 60C4  
                                 l10084 2396                                   l10316 5F96  
                                 l10308 5F70                                   l11052 1CA6  
                                 l11028 1A7C                                   l11132 6F86  
                                 l11300 5838                                   l12020 80E8  
                                 l10334 7ABE                                   l10342 7326  
                                 l10414 40E8                                   l10158 6178  
                                 l10246 6DEA                                   l10238 6D74  
                                 l10254 6034                                   l10094 23D8  
                                 l10502 04D2                                   l11062 1D04  
                                 l11038 1B2A                                   l11134 6FC6  
                                 l11206 705C                                   l11310 58A2  
                                 l11302 5856                                   l10344 7352  
                                 l10192 6288                                   l10184 6254  
                                 l10272 6148                                   l10264 6112  
                                 l10280 7AEC                                   l10520 058E  
                                 l10440 00F0                                   l11320 58D6  
                                 l11312 58B8                                   l12008 751C  
                                 l11170 8372                                   l10290 5ED2  
                                 l10610 0C32                                   l10514 0554  
                                 l11058 1D00                                   l11250 7E10  
                                 l11330 5938                                   l10380 3DE8  
                                 l10460 0216                                   l10428 00AC  
                                 l11068 1D24                                   l12060 56EC  
                                 l11308 5884                                   l12140 3348  
                                 l10390 3FFA                                   l10710 119A  
                                 l10622 0CBA                                   l10630 0D24  
                                 l10534 05F6                                   l10526 0594  
                                 l10518 057C                                   l10462 022C  
                                 l12046 55BE                                   l12230 375C  
                                 l12222 3732                                   l12206 3580  
                                 l12142 335A                                   l12134 3322  
                                 l10376 3DCA                                   l10368 3D80  
                                 l10552 06B8                                   l10536 0602  
                                 l10448 0146                                   l12240 37A0  
                                 l12216 36FA                                   l12136 332A  
                                 l12082 74CC                                   l10562 077A  
                                 l10458 01EA                                   l10466 0258  
                                 l10730 4BB0                                   l10802 423C  
                                 l12250 37F4                                   l10572 0926  
                                 l10556 06F0                                   l10492 0396  
                                 l10476 02FC                                   l10484 032A  
                                 l10900 59EA                                   l12076 5750  
                                 l12236 377A                                   l12228 3744  
                                 l10638 0D90                                   l10646 0EA2  
                                 l10750 4CA0                                   l10902 5A56  
                                 l12088 74DC                                   l10672 0FD6  
                                 l10496 0406                                   l10760 4D5A  
                                 l11704 688A                                   l11296 5814  
                                 l11288 57A8                                   l12184 34FA  
                                 l10850 50BE                                   l10674 0FF0  
                                 l10658 0F3A                                   l10594 0B12  
                                 l10586 0A48                                   l10498 0470  
                                 l10754 4CD0                                   l10746 4C64  
                                 l10842 44A2                                   l10818 4332  
                                 l10826 43B8                                   l11298 5822  
                                 l12186 3528                                   l10684 1092  
                                 l10596 0B34                                   l10764 4D86  
                                 l10932 1326                                   l11820 3A62  
                                 l11812 3A30                                   PRLOCK 0039EF  
                                 l10870 51D8                                   l10694 10E2  
                                 l10782 4166                                   l10934 1360  
                                 l12198 355C                                   l10864 515E  
                                 l10848 509C                                   l10768 4DC2  
                                 l10936 1376                                   l11832 3BDE  
                                 l11824 3AFE                                   l11808 3956  
                                 l10874 5240                                   l10866 5176  
                                 l10858 5132                                   l10794 41DC  
                                 l10954 14A8                                   l11756 7DE8  
                                 l10884 52DC                                   l10868 519A  
                                 l10788 41A0                                   l10956 14E2  
                                 l10974 165C                                   l10958 14F8  
                                 l11838 3C7A                                   l11846 3C8C  
                                 l11870 5B8E                                   l11862 5B62  
                                 l10984 16F2                                   l11792 3808  
                                 l11874 5BA6                                   l10996 1830  
                                 l11798 3838                         __end_of___aodiv 5082  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 2D68                                   _ADCLK 003EFF  
                       __end_of___aomod 5536                                   _ADPCH 003EF1  
                       __end_of___fldiv 32E2                                   _ADREF 003EFD  
                       __end_of___awdiv 62A2                         __end_of___flneg 7B16  
                                 STR_10 FF93                                   STR_11 FF82  
                                 STR_20 FFCD                                   STR_12 FFFB  
                                 STR_13 FFF8                                   STR_21 FFA3  
                                 STR_22 FFA3                                   STR_23 FFA3  
                                 STR_15 FFC1                                   STR_16 FFD7  
                                 STR_24 FEED                                   STR_33 FF17  
                                 STR_17 FF18                           __CFG_WDTE$OFF 000000  
                                 STR_18 FF18                                   STR_42 FFF5  
                                 STR_34 FFE5                                   STR_26 FF2B  
                                 STR_35 FFED                                   STR_19 FFCD  
                                 STR_27 FF05                                   STR_44 FFF5  
                       __end_of___awmod 6754                                   STR_38 FFE9  
                                 STR_39 FFF1                                   _ADRPT 003EEC  
                       __end_of___flmul 25AC                         __end_of___flsub 7B5C  
                       __end_of___fltol 5FF2                                   u10100 31F2  
                                 u10020 310C                                   u10110 322C  
                                 u10120 3268                                   u10105 31E2  
                                 u10210 1F2C                                   u10060 3196  
                                 u11030 050E                                   u10320 2476  
                                 u11200 0A18                                   u12000 19D8  
                                 u10225 20C0                                   u10410 6274  
                                 u10330 24B0                                   u11130 0648  
                                 u10235 2188                                   u10340 24F6  
                                 u11300 0EE4                                   u11060 0562  
                                 u10325 2466                                   u10245 2350  
                                 u12110 4B3A                                   u10520 6DE6  
                                 u10280 241A                                   u10600 5EC6  
                                 u12040 1B7E                                   u10610 5F00  
                                 u11090 05C6                                   u12300 76DA  
                                 u10700 7ABA                                   u10460 66B2  
                                 u11500 4DE8                                   u10390 61DA  
                                 u10615 5EF6                                   u10800 3DB6  
                                 u10480 6726                                   u11360 10B8  
                                 u11600 42EA                                   u11520 414C  
                                 u12160 703C                                   u10810 400E  
                                 u10730 3CE2                                   _U1P1H 003DED  
                                 u11700 512E                                   u10740 3CE4  
                                 u10580 7AE8                                   u10660 5F9E  
                                 u11380 116E                                   u11460 4CC6  
                                 u11620 43B4                                   u12260 58CC  
                                 u12404 3822                                   _U1P2H 003DEF  
                                 u12325 770E                                   u10821 403E  
                                 u12405 381C                                   u12326 7710  
                                 u12318 76DC                                   u10830 4054  
                                 u10590 5EB2                                   u11390 1170  
                                 u10910 00DA                                   u11470 4D0C  
                                 u11630 43D4                                   u11550 4234  
                                 u12510 3B42                                   _U1P1L 003DEC  
                                 _U1P3H 003DF1                                   u10831 4052  
                                 u11720 5286                                   u10840 4068  
                                 u10760 3D54                                   u10680 5FC8  
                                 u11800 5AE2                                   u11560 4288  
                                 u12504 3B3A                                   u12424 3852  
                                 u12520 5B40                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u12185 7CE8  
                                 u11641 4404                                   u11625 4396  
                                 u12505 3B34                                   u12425 384C  
                                 u10690 7A9A                                   u11730 5288  
                                 u10850 406C                                   u11650 441A  
                                 u11570 428A                                   _U1P3L 003DF0  
                                 u10595 5EA8                                   u11651 4418  
                                 u10780 3D66                                   u10940 0194  
                                 u11660 442E                                   u11900 1542  
                                 u12444 3874                                   u11477 4CFE  
                                 u12445 386E                                   u10870 4082  
                                 u10950 0196                                   u11670 4432  
                                 u11590 42E8                                   u11910 1568  
                                 _U2P1L 003DD4                                   u11840 13BE  
                                 u12640 573C                                   u12464 3A4A  
                                 _U2P2L 003DD6                                   u12465 3A44  
                                 u11850 13C0                                   u12650 573E  
                                 _U2P3L 003DD8                                   u10980 02A6  
                                 u11860 13E6                                   u12484 3B18  
                                 u12485 3B12                                   u10990 02A8  
                                 _T5CLK 003F9D                                   u11960 1746  
                                 u11890 1540                                   _T2HLT 003FAD  
                                 u11990 19D6                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0001  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U1TXB 003DEA  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 0057                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR5H 003F99  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR 8684  
               __size_of_clear_adc_scan 0006       __size_of_TMR6_SetInterruptHandler 0028  
                     _UART1_tx_vect_isr 82B8                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 7A2A                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 852A                            _DMA1CON1bits 003BFD  
                                 _flags 001F                                   _fputc 6518  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 7CB8  
                                 _fputs 714C                         __end_of_isdigit 7F52  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0052  
                                 _srand 7E5A                                   _width 001B  
                                 _putch 84F4                         __end_of_islower 7EF2  
                       __end_of_isspace 7ACE                _INT1_SetInterruptHandler 81EE  
                       __end_of_isupper 7F22                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0032  
                                 ltemp1 0036                                   ltemp2 003A  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0032  
                                 ttemp1 0035                                   ttemp2 0038  
                                 ttemp3 003B                                   ttemp5 0033  
                                 ttemp6 0036                                   ttemp7 003A  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 819E  
           _UART1_SetRxInterruptHandler 8176                                   wtemp0 0032  
                                 wtemp1 0034                                   wtemp2 0036  
                                 wtemp3 0038                                   wtemp4 003A  
                                 wtemp5 003C                                   wtemp8 0033  
                       __end_of_sprintf 6A80                         __end_of_tolower 7498  
                       __end_of_strncmp 5B2A                         __end_of_toupper 7414  
                   ??_UART1_tx_vect_isr 0057               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 8306                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 7BE8                   __end_of_ringBufS_init 80D6  
                       __initialization 6A80                       _UART2_rx_vect_isr 8330  
                          __end_of_atoi 52F6                            __end_of_ctoa 7390  
                          __end_of_main 3806                            __end_of_dtoa 4132  
                          __end_of_nanf 785C                            __end_of_stoa 4E02  
                          __end_of_xtoa 44EC                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0052                 __end_of_TMR2_Initialize 855A  
              __size_of_DMA2_Initialize 005A                _TMR5_SetInterruptHandler 81C6  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
  __size_of_UART1_SetTxInterruptHandler 0028                     ??_UART2_rx_vect_isr 0057  
             __end_of_UART1_tx_vect_isr 82DE                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize 8008                         _PWM8_Initialize 8570  
                      _UART1_Initialize 7796                       _UART2_tx_vect_isr 8308  
                    _UART2_Transmit_ISR 7FDC                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan 7732                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue 7CB8                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0052  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  _RB6PPS 003A0E  
                                i1l1045 7A1C                    _start_switch_handler 8406  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 85F0                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F                                  u391_48 83F2  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u830_20 63CE                                  u821_28 62BC  
                                u830_26 63D0                                  u824_20 62DC  
                                u824_21 62D6                                  u832_28 83D0  
                                u840_48 83AE                                  u843_28 838A  
                                u828_24 63A8                                  u828_25 63A4  
                                u799_20 8296                                  u799_26 8298  
                      __end_of___xxtofl 5962   __end_of_ADCC_DischargeSampleCapacitor 8652  
__size_of_ADCC_DischargeSampleCapacitor 0008           _ADCC_DischargeSampleCapacitor 864A  
              __end_of_send_lcd_cmd_dma 7A7C                     ??_UART2_tx_vect_isr 0057  
             __end_of_UART2_rx_vect_isr 8356              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize 861E                        _UART2_Initialize 78BE  
                                _WaitMs 7DEE                         _conv_raw_result 3806  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 5FF2                                  ___fleq 6D32  
                     _ADCC_ThresholdISR 7664                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush 71E4                                  _efgtoa 0000  
                                _floorf 44EC                      ?_ADCC_ThresholdISR 0052  
                                _memset 4858                    __size_of_help_button 0038  
                                clear_0 6AEE                                  clear_1 6B02  
                                clear_2 6B14                                  clear_3 6B20  
                                clear_4 6B2C                                  clear_5 6B38  
                                clear_6 6B44                                  clear_7 6B50  
                                clear_8 6B5C                                  _printf 785C  
                    _eaDogM_WriteString 7004                                  _strcpy 6C5E  
                             ?_ADCC_ISR 0052                                  _strlen 70AA  
                    __size_of_TimerDone 0024                         _ADCC_Initialize 75FA  
                        _PMD_Initialize 859C               __end_of_UART2_tx_vect_isr 832E  
                                lltemp0 0032                                  lltemp1 003A  
                                lltemp2 0042                                  lltemp3 004A  
                   ??_ADCC_ThresholdISR 0052                  __end_of_start_adc_scan 7796  
                          __mediumconst FE5C                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 7976  
                      __end_of_vfprintf 7004                              _StartTimer 7D7A  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize 7C2E  
                     _SYSTEM_Initialize 7BA2                              __accesstop 0060  
               __end_of__initialization 6B6E                               ?_INT0_ISR 0052  
                             ?_INT1_ISR 0052                    __end_of_display_help 8662  
                  __end_of_display_info 865A               __end_of_CLKREF_Initialize 8628  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0026  
                       _TMR5_WriteTimer 7CFA                   _set_temp_display_help 85D2  
             __end_of_ADCC_ThresholdISR 76CC                  __end_of_ringBufS_flush 7276  
                        __pcstackCOMRAM 0052                              ___inthi_sp 1000  
                            ___intlo_sp 1800                            __pidataBANK0 7F52  
                          __pidataBANK1 6DF6                            __pidataBANK2 85C2  
                             ?_TMR5_ISR 0052                               ?_TMR6_ISR 0052  
                        ivt0x8_undefint 00AC                           __end_of_fputc 663C  
                         __end_of_fputs 71E4                           __end_of_srand 7E8E  
                 __end_of_TMR5_CallBack 839E                           __end_of_putch 850E  
               __end_of_PWM8_Initialize 8586                 __end_of_TMR6_Initialize 8032  
                     _adc_int_t_handler 7498                  __end_of_PMD_Initialize 85B0  
                            ??_ADCC_ISR 0052                   __end_of_TMR6_CallBack 83C2  
           __size_of_EXT_INT_Initialize 0034              __size_of_UART1_tx_vect_isr 0026  
                         _DMA1_DMAA_ISR 8634                          _clear_adc_scan 8672  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0010  
             __end_of_SYSTEM_Initialize 7BE8                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                              __pbssBANK0 0060  
                            __pbssBANK1 01BB                              __pbssBANK2 0200  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              __pbssBANK6 0600  
                            __pbssBANK7 0700                              _check_help 5536  
               __end_of_conv_raw_result 3CB2                   _INT0_InterruptHandler 0016  
                            ??_INT0_ISR 0052                              ??_INT1_ISR 00F6  
                     __end_of_TimerDone 837A                        _DMA1_DMADCNT_ISR 8628  
            __size_of_UART2_rx_vect_isr 0026                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                   __end_of_wait_lcd_done 84D8  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 81C6  
               __end_of_ADCC_Initialize 7664                              ??_TMR5_ISR 01C3  
             __end_of_adc_int_t_handler 7516                              ??_TMR6_ISR 0057  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler 8266   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler 823E                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 8480  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 8678                          ?_DMA1_DMAA_ISR 0052  
                      _DMA1_DMASCNT_ISR 8610                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001C                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               u1267_44 74FC                                 u1267_45 74F6  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0052  
            __size_of_UART2_tx_vect_isr 0026                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0B3E                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch 80D6                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 7D3A                 __size_of_switch_handler 0148  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 0068                           _mode_lamp_dim 852A  
                               __Lparam 0000                __end_of_UART1_Initialize 77FA  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 4E02  
                               ___fladd 25AC                                 ___aomod 52F6  
                               ___fldiv 2D68                                 ___awdiv 6154  
                               ___flneg 7ACE                                 ___awmod 663C  
                               ___flmul 1D82                                 ___flsub 7B16  
                               ___fltol 5E80               __end_of_UART1_Receive_ISR 849E  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 6C5E                                 __pcinit 6A80  
              __end_of_mode_lamp_bright 85FE                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 85E2  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 32E2                                 __ptext1 8406  
                               __ptext2 7732                                 __ptext3 85B0  
                               __ptext4 864A                                 __ptext5 7E5A  
                               __ptext6 6B74                                 __ptext7 805E  
                               __ptext8 8086                                 __ptext9 8426  
                     _UART2_Receive_ISR 849E                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize 8586  
                          __size_of_abs 0046                            __size_of_pad 0114  
                               _isalpha 7C74                                 _isdigit 7F22  
                               _mode_sw 0025                                 us978999 506C  
                     __end_of_lp_filter 5CEA                                 us989999 5524  
                               _islower 7EC2                                 _isspace 7A7C  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize 791C                                 _isupper 7EF2  
            __size_of_SYSTEM_Initialize 0046                                 _sprintf 6976  
                               _tolower 7414                   __size_of_display_help 0008  
                               _utctime 00B5                   __size_of_display_info 0008  
                               _strncmp 5962                                 _toupper 7390  
                  end_of_initialization 6B6E               __size_of_convert_adc_data 007A  
   __end_of_UART1_SetTxInterruptHandler 8176             _UART1_SetTxInterruptHandler 814E  
   __end_of_UART2_SetRxInterruptHandler 814E             _UART2_SetRxInterruptHandler 8126  
                             i2u1270_48 7698                               i2u1270_49 76AC  
                     __end_of_set_vterm 84F4                       __end_of_vfpfcnvrt 1D82  
                             _SPI1TCNTL 003D12                                 postdec0 003FED  
                               postdec1 003FE5                                 postdec2 003FDD  
                               postinc0 003FEE                                 postinc1 003FE6  
                               postinc2 003FDE              __size_of_adc_int_t_handler 007E  
                   __size_of_StartTimer 003C                       __end_of_start_lcd 8684  
             __end_of_UART2_Receive_ISR 84BC                          wdtdelay@dcount 00B9  
                 __CFG_WDTCPS$WDTCPS_31 000000                         ??_DMA1_DMAA_ISR 0058  
                 _INT1_InterruptHandler 0013                               _PORTBbits 003FCB  
                             _PORTFbits 003FCF                _TMR6_SetInterruptHandler 819E  
                          _display_help 865A                   _TMR5_InterruptHandler 00C1  
                          _display_info 8652    __size_of_UART2_SetTxInterruptHandler 0028  
                     __size_of_ADCC_ISR 002A     __end_of_ADCC_SetADIInterruptHandler 828E  
           _ADCC_SetADIInterruptHandler 8266                              _update_lcd 6868  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                       _DMA1_Initialize 7590                         _SPI1_Initialize 855A  
                 __end_of_get_vterm_ptr 7FB0                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 003E                          __end_of_WaitMs 7E24  
          __end_of_INTERRUPT_Initialize 7732                              _vterm_dump 63EA  
                        __end_of___flge 6154                          __end_of___fleq 6DF6  
  __end_of_INT0_DefaultInterruptHandler 868E   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler 868C              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize 7976                          __end_of_efgtoa 1244  
                     __size_of_TMR5_ISR 005A                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0228                          __end_of_floorf 4858  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 00AD  
                        __end_of_memset 4B44                          __end_of_printf 78BE  
              __end_of_DMA1_DMADCNT_ISR 8632             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack 8406                          __end_of_strcpy 6D32  
                        __end_of_strlen 714C                     start_initialization 6A80  
  __end_of_TMR5_DefaultInterruptHandler 82B6   __size_of_TMR5_DefaultInterruptHandler 0028  
          _TMR5_DefaultInterruptHandler 828E         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 7BA2                   __end_of_INT1_CallBack 83E4  
             __size_of_set_display_info 001E                             __end_of_pad 6868  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd 80AE  
                        _switch_handler 62A2           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 0600  
                 __end_of___fpclassifyf 5E80                           _uart2RxBuffer 0700  
                         _uart1TxBuffer 03AC                __end_of_DMA1_DMASCNT_ISR 861E  
                         _uart2TxBuffer 036C                          _DMA1_DMAOR_ISR 8640  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone 8356  
                         _ringBufS_init 80AE                             __pdataBANK0 00C7  
                           __pdataBANK1 0100                             __pdataBANK2 0290  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 0028  
            __end_of_EXT_INT_Initialize 7EC2                     __end_of_help_button 7DEE  
       __end_of_eaDogM_WriteStringAtPos 7E5A                 __end_of_DMA1_Initialize 75FA  
                           __pbssCOMRAM 0001        __end_of_INT0_SetInterruptHandler 823E  
                         __pcstackBANK0 00F6                           __pcstackBANK1 01C3  
              __size_of_TMR2_Initialize 0018                  __end_of_switch_handler 63EA  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize 8570  
              _UART1_RxInterruptHandler 000A                _UART2_TxInterruptHandler 000D  
                             __end_of_T FEED                        _convert_adc_data 7516  
             __size_of_ringBufS_put_dma 00AA                            _init_display 6B74  
                __end_of_DMA1_DMAOR_ISR 864A                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00C4                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize 79D0                  _PIN_MANAGER_Initialize 7276  
                  __end_of_wait_lcd_set 867E                           __pmediumconst FE5C  
                             __ptext100 859C                               __ptext101 7276  
                             __ptext110 861E                               __ptext102 8586  
                             __ptext111 75FA                               __ptext103 76CC  
                             __ptext120 837A                               __ptext112 823E  
                             __ptext104 866A                               __ptext121 828E  
                             __ptext113 8266                               __ptext105 7E8E  
                             __ptext130 7664                               __ptext122 8600  
                             __ptext114 7D3C                               __ptext106 81EE  
                             __ptext131 82B8                               __ptext123 83E4  
                             __ptext115 83C2                               __ptext107 8216  
                             __ptext140 839E                               __ptext132 7FB0  
                             __ptext124 868C                               __ptext116 868A  
                             __ptext108 7976                               __ptext141 7C2E  
                             __ptext133 82E0                               __ptext125 8684  
                             __ptext117 62A2                               __ptext109 7590  
                             __ptext142 8610                               __ptext134 8480  
                             __ptext126 8034                               __ptext118 79D0  
                             __ptext143 8628                               __ptext135 8308  
                             __ptext127 7498                               __ptext119 7CFA  
                             __ptext144 8634                               __ptext136 7FDC  
                             __ptext128 868E                               __ptext145 8640  
                             __ptext137 8330                               __ptext129 8690  
                             __ptext146 0000                               __ptext138 849E  
                             __ptext139 8510                      __end_of_StartTimer 7DB6  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00A8  
                              _ADCC_ISR 8034                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                  __size_of_wait_lcd_done 001C  
                        __size_of_fputc 0124                                _T2CLKCON 003FAE  
                        __size_of_fputs 0098                               _lp_filter 5B2A  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 76CC                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0052  
                              _INT0_ISR 8600                                _INT1_ISR 7D3C  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0089  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              i2u420_48 804A                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                              _PIR5bits 0039A5                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                                i2u861_48 82CA  
                              i2u863_48 82F2                                i2u865_48 831A  
                              i2u867_48 8342                __size_of_TMR5_Initialize 0046  
                             _set_vterm 84D8                     __size_of_update_lcd 010E  
                           _help_button 7DB6              __end_of_UART1_Transmit_ISR 7FDC  
                              _TMR5_ISR 79D0                                _TMR6_ISR 8510  
                             _port_data 0290                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                           _TMR5_CallBack 837A  
                            _ADCON0bits 003EF8                      __end_of_check_help 575E  
                             _start_lcd 867E                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack 839E  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                      _set_display_info 8462                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 6A94                               copy_data1 6AB6  
                             copy_data2 6AD8                _INT0_SetInterruptHandler 8216  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 002F  
   __end_of_UART2_SetTxInterruptHandler 8126             _UART2_SetTxInterruptHandler 80FE  
                          _uart1RxCount 002C                            _uart2RxCount 0026  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done 84BC  
                          _send_lcd_cmd 8086                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 8690                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                    __end_of_get_switch 80FE                   __end_of_DMA1_DMAA_ISR 863E  
                    ___fpclassifyf@F463 00B1    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0200                                ___xxtofl 575E  
                     ?_DMA1_DMADCNT_ISR 0052                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 85F0                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0058                                __ptext10 80AE  
                              __ptext11 80D6                                __ptext20 5536  
                              __ptext12 85E2                                __ptext21 63EA  
                              __ptext13 7516                                __ptext30 7004  
                              __ptext22 6976                                __ptext14 5B2A  
                              __ptext31 8678                                __ptext23 7F82  
                              __ptext15 3806                                __ptext40 7EC2  
                              __ptext32 867E                                __ptext24 7DEE  
                              __ptext16 77FA                                __ptext41 7C74  
                              __ptext33 71E4                                __ptext25 6868  
                              __ptext17 8444                                __ptext50 5E80  
                              __ptext42 5962                                __ptext34 4858  
                              __ptext26 7E24                                __ptext18 575E  
                              __ptext51 7B16                                __ptext43 4B44  
                              __ptext35 785C                                __ptext27 7A2A  
                              __ptext19 8672                                __ptext60 3CB2  
                              __ptext52 25AC                                __ptext44 0000  
                              __ptext36 6F5C                                __ptext28 84BC  
                              __ptext61 7B5C                                __ptext53 7ACE  
                              __ptext45 7414                                __ptext37 1244  
                              __ptext29 791C                                __ptext70 6EB2  
                              __ptext62 52F6                                __ptext54 1D82  
                              __ptext46 7EF2                                __ptext38 4132  
                              __ptext71 5082                                __ptext63 4E02  
                              __ptext55 5FF2                                __ptext47 6C5E  
                              __ptext39 7390                                __ptext80 7DB6  
                              __ptext72 7A7C                                __ptext64 7308  
                              __ptext56 6D32                                __ptext48 44EC  
                              __ptext81 8356                                __ptext73 7F22  
                              __ptext65 6754                                __ptext57 2D68  
                              __ptext49 5CEA                                __ptext90 7796  
                              __ptext82 7D7A                                __ptext74 84D8  
                              __ptext66 70AA                                __ptext58 663C  
                              __ptext91 814E                                __ptext83 8652  
                              __ptext75 85D2                                __ptext67 714C  
                              __ptext59 6154                                __ptext92 8176  
                              __ptext84 865A                                __ptext76 8462  
                              __ptext68 6518                                __ptext93 8008  
                              __ptext85 8662                                __ptext77 852A  
                              __ptext69 84F4                                __ptext94 819E  
                              __ptext86 7BA2                                __ptext78 85F0  
                              __ptext95 7BE8                                __ptext87 78BE  
                              __ptext79 7CB8                                __ptext96 81C6  
                              __ptext88 80FE                                __ptext97 8542  
                              __ptext89 8126                                __ptext98 855A  
                              __ptext99 8570                        __size_of_isupper 0030  
                              us1141999 4B56                                us1072999 3CCC  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1154999 41B2                        __size_of_strncmp 01C8  
                      __size_of_toupper 0084                        _ringBufS_put_dma 6EB2  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 0524                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0052  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0004                               stoa@F1166 00EF  
                    ??_DMA1_DMASCNT_ISR 0058            __end_of_ADCC_StartConversion 85C2  
                              _spi_link 00A1                                _wdtdelay 791C  
            __end_of_UART2_Transmit_ISR 8008                                _vfprintf 6F5C  
              __end_of_convert_adc_data 7590              __end_of_PWM8_LoadDutyValue 7CFA  
  __end_of_INT1_DefaultInterruptHandler 868C   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler 868A                           ??_Default_ISR 0052  
                           _uart1RxHead 002E                  __size_of_get_vterm_ptr 002E  
                           _uart1TxHead 0031                             _uart2RxHead 0028  
                           _uart1RxTail 002D                          _get_raw_result 8444  
                           _uart2TxHead 002B                             _uart1TxTail 0030  
                           _uart2RxTail 0027                             _uart2TxTail 002A  
                          _wait_lcd_set 8678                      _EXT_INT_Initialize 7E8E  
  __end_of_TMR6_DefaultInterruptHandler 7C74   __size_of_TMR6_DefaultInterruptHandler 0046  
          _TMR6_DefaultInterruptHandler 7C2E    __end_of_ADCC_DefaultInterruptHandler 8690  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 868E  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 805E          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 85E2                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 70AA                   __end_of_mode_lamp_dim 8542  
               __end_of_adc_int_handler 8692                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0022                      __end_of_update_lcd 6976  
                _uart2TxBufferRemaining 0029                          _FVR_Initialize 866A  
                __end_of_get_raw_result 8462                        _send_lcd_cmd_dma 7A2A  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0021  
      __end_of_INT1_SetInterruptHandler 8216               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 0058                _UART1_TxInterruptHandler 0007  
             __end_of_send_lcd_cmd_long 8086                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR 868A          __end_of_PIN_MANAGER_Initialize 7308  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 6518  
               _eaDogM_WriteStringAtPos 7E24                           _get_vterm_ptr 7F82  
                        _check_adc_scan 8662               __size_of_UART2_Initialize 005E  
