

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Mar  9 00:52:37 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=4,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=4,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=4,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,delta=1
   109                           	psect	text90,global,reloc=4,class=CODE,delta=1
   110                           	psect	text91,global,reloc=4,class=CODE,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,delta=1
   112                           	psect	text93,global,reloc=4,class=CODE,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,delta=1
   114                           	psect	text95,global,reloc=4,class=CODE,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,delta=1
   116                           	psect	text97,global,reloc=4,class=CODE,delta=1
   117                           	psect	text98,global,reloc=2,class=CODE,delta=1
   118                           	psect	text99,global,reloc=4,class=CODE,delta=1
   119                           	psect	text100,global,reloc=2,class=CODE,delta=1
   120                           	psect	text101,global,reloc=4,class=CODE,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,delta=1
   123                           	psect	text104,global,reloc=4,class=CODE,delta=1
   124                           	psect	text105,global,reloc=4,class=CODE,delta=1
   125                           	psect	text106,global,reloc=4,class=CODE,delta=1
   126                           	psect	text107,global,reloc=4,class=CODE,delta=1
   127                           	psect	text108,global,reloc=4,class=CODE,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,delta=1
   131                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   132                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   135                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   136  0000                     
   137                           ; Version 2.05
   138                           ; Generated 20/12/2018 GMT
   139                           ; 
   140                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   141                           ; All rights reserved.
   142                           ; 
   143                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   144                           ; 
   145                           ; Redistribution and use in source and binary forms, with or without modification, are
   146                           ; permitted provided that the following conditions are met:
   147                           ; 
   148                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   149                           ;        conditions and the following disclaimer.
   150                           ; 
   151                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   152                           ;        of conditions and the following disclaimer in the documentation and/or other
   153                           ;        materials provided with the distribution.
   154                           ; 
   155                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   156                           ;        software without specific prior written permission.
   157                           ; 
   158                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   159                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   160                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   161                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   162                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   163                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   164                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   165                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   166                           ; 
   167                           ; 
   168                           ; Code-generator required, PIC18F57K42 Definitions
   169                           ; 
   170                           ; SFR Addresses
   171  0000                     
   172 ;;_sum	offset	0
   173 ;;_mode	offset	2
   174 ;;_block	offset	0
   175 ;;_rxData	offset	3
   176 ;;_t_link	offset=-1 (param)
   177 ;;_stream	offset=-1 (param)
   178 ;;_function	offset=-2 (param)
   179 ;;_f	offset	0
   180 ;;_ap	offset	5
   181 ;;_s	offset=-2 (param)
   182 ;;_fmt	offset=-3 (param)
   183 ;;_rxData	offset	0
   184 ;;_r_link	offset=-1 (param)
   185 ;;_k	offset	0
   186 ;;_checksum	offset	2
   187 ;;_i	offset	4
   188 ;;_byte_block	offset=-2 (param)
   189 ;;_length	offset=-3 (param)
   190 ;;_fake	offset=-4 (param)
   191 ;;_i	offset	0
   192 ;;_sum	offset	2
   193 ;;_byte_block	offset=-2 (param)
   194 ;;_byte_count	offset=-4 (param)
   195 ;;_bufData	offset=-1 (param)
   196 ;;_txData	offset=-1 (param)
   197 ;;_byte_block	offset=-1 (param)
   198 ;;_clear	offset=-2 (param)
   199 ;;_numMilliseconds	offset=-2 (param)
   200 ;;_timer	offset=-1 (param)
   201 ;;_timer	offset=-1 (param)
   202 ;;_count	offset=-3 (param)
   203 ;;_readValue	offset	0
   204 ;;_cmd	offset=-1 (param)
   205 ;;_cmd	offset=-1 (param)
   206 ;;_data	offset=-1 (param)
   207 ;;__this	offset=-2 (param)
   208 ;;_r	offset=-1 (param)
   209 ;;_c	offset=-2 (param)
   210 ;;_strPtr	offset=-3 (param)
   211 ;;_strPtr	offset=-1 (param)
   212 ;;_cmd	offset=-1 (param)
   213 ;;_strPtr	offset=-1 (param)
   214 ;;_delay	offset=-4 (param)
   215 ;;__this	offset=-2 (param)
   216 ;;_clearBuffer	offset=-3 (param)
   217 ;;_s	offset	0
   218 ;;_k	offset	2
   219 ;;_dest	offset=-2 (param)
   220 ;;_c	offset=-4 (param)
   221 ;;_n	offset=-6 (param)
   222 ;;_ap	offset	0
   223 ;;_fmt	offset=-2 (param)
   224 ;;_cfmt	offset	0
   225 ;;_fp	offset=-2 (param)
   226 ;;_fmt	offset=-3 (param)
   227 ;;_ap	offset=-5 (param)
   228 ;;_vfpfcnvrt$3790	offset	0
   229 ;;_llu	offset	2
   230 ;;_ll	offset	10
   231 ;;_done	offset	18
   232 ;;_cp	offset	20
   233 ;;_c	offset	22
   234 ;;_fp	offset=-2 (param)
   235 ;;_fmt	offset=-4 (param)
   236 ;;_ap	offset=-6 (param)
   237 ;;_xtoa$3776	offset	0
   238 ;;_xtoa$3775	offset	2
   239 ;;_n	offset	4
   240 ;;_c	offset	12
   241 ;;_i	offset	14
   242 ;;_w	offset	16
   243 ;;_p	offset	18
   244 ;;_fp	offset=-2 (param)
   245 ;;_d	offset=-10 (param)
   246 ;;_x	offset=-11 (param)
   247 ;;_toupper$4365	offset	0
   248 ;;_c	offset=-2 (param)
   249 ;;_c	offset=-2 (param)
   250 ;;_c	offset=-2 (param)
   251 ;;_c	offset=-2 (param)
   252 ;;_nuls	offset	0
   253 ;;_l	offset	7
   254 ;;_p	offset	9
   255 ;;_cp	offset	11
   256 ;;_w	offset	13
   257 ;;_i	offset	15
   258 ;;_fp	offset=-2 (param)
   259 ;;_s	offset=-4 (param)
   260 ;;_dtoa$3755	offset	0
   261 ;;_n	offset	2
   262 ;;_i	offset	10
   263 ;;_s	offset	12
   264 ;;_w	offset	14
   265 ;;_p	offset	16
   266 ;;_fp	offset=-2 (param)
   267 ;;_d	offset=-10 (param)
   268 ;;_a	offset=-2 (param)
   269 ;;_sign	offset	0
   270 ;;_counter	offset	1
   271 ;;_dividend	offset=-8 (param)
   272 ;;_divisor	offset=-16 (param)
   273 ;;_quotient	offset	0
   274 ;;_sign	offset	8
   275 ;;_counter	offset	9
   276 ;;_dividend	offset=-8 (param)
   277 ;;_divisor	offset=-16 (param)
   278 ;;_w	offset	0
   279 ;;_fp	offset=-2 (param)
   280 ;;_c	offset=-3 (param)
   281 ;;_w	offset	0
   282 ;;_i	offset	2
   283 ;;_fp	offset=-2 (param)
   284 ;;_buf	offset=-3 (param)
   285 ;;_p	offset=-5 (param)
   286 ;;_a	offset	0
   287 ;;_s	offset=-2 (param)
   288 ;;_i	offset	0
   289 ;;_c	offset	2
   290 ;;_s	offset=-1 (param)
   291 ;;_fp	offset=-3 (param)
   292 ;;_c	offset=-2 (param)
   293 ;;_fp	offset=-4 (param)
   294 ;;_c	offset=-1 (param)
   295 ;;__this	offset=-2 (param)
   296 ;;_c	offset=-3 (param)
   297 ;;_atoi$4252	offset	0
   298 ;;_atoi$4250	offset	2
   299 ;;_atoi$4251	offset	4
   300 ;;_n	offset	5
   301 ;;_neg	offset	7
   302 ;;_s	offset=-1 (param)
   303 ;;_isspace$4277	offset	0
   304 ;;_c	offset=-2 (param)
   305 ;;_c	offset=-2 (param)
   306 ;;_InterruptHandler	offset=-3 (param)
   307 ;;_InterruptHandler	offset=-3 (param)
   308 ;;_InterruptHandler	offset=-3 (param)
   309 ;;_InterruptHandler	offset=-3 (param)
   310 ;;_InterruptHandler	offset=-3 (param)
   311 ;;_InterruptHandler	offset=-3 (param)
   312 ;;_state	offset	0
   313 ;;_InterruptHandler	offset=-3 (param)
   314 ;;_InterruptHandler	offset=-3 (param)
   315 ;;_InterruptHandler	offset=-3 (param)
   316 ;;_InterruptHandler	offset=-3 (param)
   317 ;;_i	offset	0
   318 ;;_timerVal	offset=-2 (param)
   319                           
   320                           	psect	idataBANK0
   321  005FBA                     __pidataBANK0:
   322                           	opt callstack 0
   323                           
   324                           ;initializer for stoa@F1144
   325  005FBA  28                 	db	40
   326  005FBB  6E                 	db	110
   327  005FBC  75                 	db	117
   328  005FBD  6C                 	db	108
   329  005FBE  6C                 	db	108
   330  005FBF  29                 	db	41
   331  005FC0  00                 	db	0
   332                           
   333                           	psect	idataBANK1
   334  004D78                     __pidataBANK1:
   335                           	opt callstack 0
   336                           
   337                           ;initializer for _H10
   338  004D78  0000               	dw	0
   339  004D7A  9F75               	dw	40821
   340  004D7C  000C               	dw	12
   341  004D7E  01                 	db	1
   342  004D7F  80                 	db	128
   343  004D80  01                 	db	1
   344  004D81  81                 	db	129
   345  004D82  00                 	db	0
   346  004D83  00                 	db	0
   347  004D84  0A                 	db	10
   348  004D85  0000               	dw	0
   349  004D87  00                 	db	0
   350  004D88  00                 	db	0
   351  004D89  00                 	db	0
   352  004D8A  00                 	db	0
   353  004D8B  00                 	db	0
   354  004D8C  00                 	db	0
   355  004D8D  00                 	db	0
   356  004D8E  00                 	db	0
   357  004D8F  00                 	db	0
   358  004D90  00                 	db	0
   359  004D91  0A                 	db	10
   360  004D92  0000               	dw	0
   361  004D94  0001               	dw	1
   362  004D96  0000               	dw	0
   363  004D98  01                 	db	1
   364  004D99  80                 	db	128
   365  004D9A  00                 	db	0
   366  004D9B  01                 	db	1
   367  004D9C  00                 	db	0
   368  004D9D  00                 	db	0
   369  004D9E  0A                 	db	10
   370  004D9F  0000               	dw	0
   371  004DA1  0D89               	dw	3465
   372  004DA3  0000               	dw	0
   373  004DA5  01                 	db	1
   374  004DA6  80                 	db	128
   375  004DA7  01                 	db	1
   376  004DA8  81                 	db	129
   377  004DA9  00                 	db	0
   378  004DAA  80                 	db	128
   379  004DAB  0A                 	db	10
   380  004DAC  0000               	dw	0
   381  004DAE  0D89               	dw	3465
   382  004DB0  0000               	dw	0
   383  004DB2  01                 	db	1
   384  004DB3  80                 	db	128
   385  004DB4  11                 	db	17
   386  004DB5  82                 	db	130
   387  004DB6  00                 	db	0
   388  004DB7  00                 	db	0
   389  004DB8  0A                 	db	10
   390                           
   391                           ;initializer for _H24
   392  004DB9  0000               	dw	0
   393  004DBB  30                 	db	48
   394  004DBC  31                 	db	49
   395  004DBD  30                 	db	48
   396  004DBE  39                 	db	57
   397  004DBF  31                 	db	49
   398  004DC0  31                 	db	49
   399  004DC1  30                 	db	48
   400  004DC2  38                 	db	56
   401  004DC3  34                 	db	52
   402  004DC4  36                 	db	54
   403  004DC5  30                 	db	48
   404  004DC6  30                 	db	48
   405  004DC7  00                 	db	0
   406  004DC8  00                 	db	0
   407  004DC9  0001               	dw	1
   408  004DCB  0000               	dw	0
   409  004DCD  01                 	db	1
   410  004DCE  80                 	db	128
   411  004DCF  12                 	db	18
   412  004DD0  82                 	db	130
   413  004DD1  00                 	db	0
   414  004DD2  00                 	db	0
   415  004DD3  18                 	db	24
   416                           
   417                           ;initializer for _H18
   418  004DD4  0000               	dw	0
   419  004DD6  00                 	db	0
   420  004DD7  00                 	db	0
   421  004DD8  00                 	db	0
   422  004DD9  00                 	db	0
   423  004DDA  00                 	db	0
   424  004DDB  00                 	db	0
   425  004DDC  00                 	db	0
   426  004DDD  00                 	db	0
   427  004DDE  0001               	dw	1
   428  004DE0  0000               	dw	0
   429  004DE2  01                 	db	1
   430  004DE3  80                 	db	128
   431  004DE4  03                 	db	3
   432  004DE5  81                 	db	129
   433  004DE6  00                 	db	0
   434  004DE7  00                 	db	0
   435  004DE8  12                 	db	18
   436                           
   437                           ;initializer for _H14
   438  004DE9  0000               	dw	0
   439  004DEB  00                 	db	0
   440  004DEC  41                 	db	65
   441  004DED  11                 	db	17
   442  004DEE  01                 	db	1
   443  004DEF  0001               	dw	1
   444  004DF1  0000               	dw	0
   445  004DF3  01                 	db	1
   446  004DF4  80                 	db	128
   447  004DF5  04                 	db	4
   448  004DF6  81                 	db	129
   449  004DF7  00                 	db	0
   450  004DF8  00                 	db	0
   451  004DF9  0E                 	db	14
   452                           
   453                           ;initializer for _H13
   454  004DFA  0000               	dw	0
   455  004DFC  00                 	db	0
   456  004DFD  01                 	db	1
   457  004DFE  21                 	db	33
   458  004DFF  0001               	dw	1
   459  004E01  0000               	dw	0
   460  004E03  01                 	db	1
   461  004E04  80                 	db	128
   462  004E05  0C                 	db	12
   463  004E06  86                 	db	134
   464  004E07  00                 	db	0
   465  004E08  00                 	db	0
   466  004E09  0D                 	db	13
   467                           
   468                           ;initializer for _H12
   469  004E0A  0000               	dw	0
   470  004E0C  00                 	db	0
   471  004E0D  01                 	db	1
   472  004E0E  0001               	dw	1
   473  004E10  0000               	dw	0
   474  004E12  01                 	db	1
   475  004E13  80                 	db	128
   476  004E14  02                 	db	2
   477  004E15  81                 	db	129
   478  004E16  00                 	db	0
   479  004E17  00                 	db	0
   480  004E18  0C                 	db	12
   481                           
   482                           	psect	idataBANK3
   483  0051EA                     __pidataBANK3:
   484                           	opt callstack 0
   485                           
   486                           ;initializer for _H53
   487  0051EA  0000               	dw	0
   488  0051EC  00                 	db	0
   489  0051ED  00                 	db	0
   490  0051EE  00                 	db	0
   491  0051EF  00                 	db	0
   492  0051F0  00                 	db	0
   493  0051F1  00                 	db	0
   494  0051F2  00                 	db	0
   495  0051F3  00                 	db	0
   496  0051F4  00                 	db	0
   497  0051F5  00                 	db	0
   498  0051F6  00                 	db	0
   499  0051F7  00                 	db	0
   500  0051F8  00                 	db	0
   501  0051F9  00                 	db	0
   502  0051FA  00                 	db	0
   503  0051FB  00                 	db	0
   504  0051FC  00                 	db	0
   505  0051FD  00                 	db	0
   506  0051FE  00                 	db	0
   507  0051FF  00                 	db	0
   508  005200  00                 	db	0
   509  005201  00                 	db	0
   510  005202  00                 	db	0
   511  005203  00                 	db	0
   512  005204  00                 	db	0
   513  005205  00                 	db	0
   514  005206  00                 	db	0
   515  005207  00                 	db	0
   516  005208  00                 	db	0
   517  005209  00                 	db	0
   518  00520A  00                 	db	0
   519  00520B  00                 	db	0
   520  00520C  00                 	db	0
   521  00520D  00                 	db	0
   522  00520E  00                 	db	0
   523  00520F  00                 	db	0
   524  005210  00                 	db	0
   525  005211  00                 	db	0
   526  005212  00                 	db	0
   527  005213  00                 	db	0
   528  005214  00                 	db	0
   529  005215  00                 	db	0
   530  005216  00                 	db	0
   531  005217  0001               	dw	1
   532  005219  0000               	dw	0
   533  00521B  01                 	db	1
   534  00521C  80                 	db	128
   535  00521D  0B                 	db	11
   536  00521E  81                 	db	129
   537  00521F  00                 	db	0
   538  005220  00                 	db	0
   539  005221  35                 	db	53
   540  005222  0000               	dw	0
   541  005224  00                 	db	0
   542  005225  16                 	db	22
   543  005226  20                 	db	32
   544  005227  4E                 	db	78
   545  005228  6F                 	db	111
   546  005229  77                 	db	119
   547  00522A  20                 	db	32
   548  00522B  57                 	db	87
   549  00522C  65                 	db	101
   550  00522D  20                 	db	32
   551  00522E  41                 	db	65
   552  00522F  72                 	db	114
   553  005230  65                 	db	101
   554  005231  20                 	db	32
   555  005232  54                 	db	84
   556  005233  61                 	db	97
   557  005234  6C                 	db	108
   558  005235  6B                 	db	107
   559  005236  69                 	db	105
   560  005237  6E                 	db	110
   561  005238  67                 	db	103
   562  005239  2E                 	db	46
   563  00523A  2E                 	db	46
   564  00523B  2E                 	db	46
   565  00523C  00                 	db	0
   566  00523D  00                 	db	0
   567  00523E  00                 	db	0
   568  00523F  00                 	db	0
   569  005240  00                 	db	0
   570  005241  00                 	db	0
   571  005242  00                 	db	0
   572  005243  00                 	db	0
   573  005244  00                 	db	0
   574  005245  00                 	db	0
   575  005246  00                 	db	0
   576  005247  00                 	db	0
   577  005248  00                 	db	0
   578  005249  00                 	db	0
   579  00524A  00                 	db	0
   580  00524B  00                 	db	0
   581  00524C  00                 	db	0
   582  00524D  00                 	db	0
   583  00524E  00                 	db	0
   584  00524F  0001               	dw	1
   585  005251  0000               	dw	0
   586  005253  01                 	db	1
   587  005254  80                 	db	128
   588  005255  03                 	db	3
   589  005256  8A                 	db	138
   590  005257  00                 	db	0
   591  005258  00                 	db	0
   592  005259  35                 	db	53
   593  0000                     _IVTADL	set	14493
   594  0000                     _IVTADH	set	14494
   595  0000                     _IVTADU	set	14495
   596  0000                     _PIE8bits	set	14744
   597  0000                     _PIR8bits	set	14760
   598  0000                     _SCANPR	set	14839
   599  0000                     _DMA2PR	set	14836
   600  0000                     _DMA1PR	set	14835
   601  0000                     _MAINPR	set	14834
   602  0000                     _ISRPR	set	14833
   603  0000                     _PIE2bits	set	14738
   604  0000                     _PIR2bits	set	14754
   605  0000                     _PIE9bits	set	14745
   606  0000                     _PIR9bits	set	14761
   607  0000                     _PIE6bits	set	14742
   608  0000                     _PIE3bits	set	14739
   609  0000                     _PMD7	set	14791
   610  0000                     _PMD6	set	14790
   611  0000                     _PMD5	set	14789
   612  0000                     _PMD4	set	14788
   613  0000                     _PMD3	set	14787
   614  0000                     _PMD2	set	14786
   615  0000                     _PMD1	set	14785
   616  0000                     _PMD0	set	14784
   617  0000                     _OSCTUNE	set	14814
   618  0000                     _OSCFRQ	set	14815
   619  0000                     _OSCEN	set	14813
   620  0000                     _OSCCON3	set	14811
   621  0000                     _OSCCON1	set	14809
   622  0000                     _IPR8bits	set	14728
   623  0000                     _IPR9bits	set	14729
   624  0000                     _IPR7bits	set	14727
   625  0000                     _IPR5bits	set	14725
   626  0000                     _IPR1bits	set	14721
   627  0000                     _IPR3bits	set	14723
   628  0000                     _IPR6bits	set	14726
   629  0000                     _IPR2bits	set	14722
   630  0000                     _PIE7bits	set	14743
   631  0000                     _PIE5bits	set	14741
   632  0000                     _PIE1bits	set	14737
   633  0000                     _PIR7bits	set	14759
   634  0000                     _PIR5bits	set	14757
   635  0000                     _PIR1bits	set	14753
   636  0000                     _PLLR	set	118496
   637  0000                     _SPI1SDIPPS	set	15071
   638  0000                     _RC6PPS	set	14870
   639  0000                     _RC5PPS	set	14869
   640  0000                     _RA6PPS	set	14854
   641  0000                     _RA5PPS	set	14853
   642  0000                     _RA4PPS	set	14852
   643  0000                     _SPI1SCKPPS	set	15070
   644  0000                     _U1RXPPS	set	15077
   645  0000                     _INT1PPS	set	15041
   646  0000                     _INT2PPS	set	15042
   647  0000                     _INT0PPS	set	15040
   648  0000                     _RC3PPS	set	14867
   649  0000                     _RB6PPS	set	14862
   650  0000                     _U2RXPPS	set	15080
   651  0000                     _SLRCONF	set	14995
   652  0000                     _SLRCONE	set	14979
   653  0000                     _SLRCOND	set	14963
   654  0000                     _SLRCONC	set	14947
   655  0000                     _SLRCONB	set	14931
   656  0000                     _SLRCONA	set	14915
   657  0000                     _ODCOND	set	14962
   658  0000                     _ODCONC	set	14946
   659  0000                     _ODCONB	set	14930
   660  0000                     _ODCONA	set	14914
   661  0000                     _ODCONF	set	14994
   662  0000                     _ODCONE	set	14978
   663  0000                     _WPUC	set	14945
   664  0000                     _WPUA	set	14913
   665  0000                     _WPUB	set	14929
   666  0000                     _WPUE	set	14977
   667  0000                     _WPUF	set	14993
   668  0000                     _WPUD	set	14961
   669  0000                     _ANSELA	set	14912
   670  0000                     _ANSELF	set	14992
   671  0000                     _ANSELE	set	14976
   672  0000                     _ANSELB	set	14928
   673  0000                     _ANSELC	set	14944
   674  0000                     _ANSELD	set	14960
   675  0000                     _DMA1SSA	set	15353
   676  0000                     _DMA1DSZ	set	15342
   677  0000                     _DMA1SSZ	set	15351
   678  0000                     _DMA1DSA	set	15344
   679  0000                     _DMA1CON0bits	set	15356
   680  0000                     _DMA1CON1bits	set	15357
   681  0000                     _DMA1CON0	set	15356
   682  0000                     _DMA1AIRQ	set	15358
   683  0000                     _DMA1SIRQ	set	15359
   684  0000                     _DMA1CON1	set	15357
   685  0000                     _CLC1CON	set	15476
   686  0000                     _CLC1GLS3	set	15485
   687  0000                     _CLC1GLS2	set	15484
   688  0000                     _CLC1GLS1	set	15483
   689  0000                     _CLC1GLS0	set	15482
   690  0000                     _CLC1SEL3	set	15481
   691  0000                     _CLC1SEL2	set	15480
   692  0000                     _CLC1SEL1	set	15479
   693  0000                     _CLC1SEL0	set	15478
   694  0000                     _CLC1POL	set	15477
   695  0000                     _CLKRCON	set	15589
   696  0000                     _CLKRCLK	set	15590
   697  0000                     _MD1CARL	set	15613
   698  0000                     _MD1CARH	set	15614
   699  0000                     _MD1SRC	set	15612
   700  0000                     _MD1CON1bits	set	15611
   701  0000                     _MD1CON0bits	set	15610
   702  0000                     _SPI1INTFbits	set	15642
   703  0000                     _SPI1RXB	set	15632
   704  0000                     _SPI1TXB	set	15633
   705  0000                     _SPI1TCNTL	set	15634
   706  0000                     _SPI1CON0	set	15636
   707  0000                     _SPI1CLK	set	15644
   708  0000                     _SPI1BAUD	set	15641
   709  0000                     _SPI1CON2	set	15638
   710  0000                     _SPI1CON1	set	15637
   711  0000                     _U2RXB	set	15824
   712  0000                     _U2TXB	set	15826
   713  0000                     _U2ERRIE	set	15842
   714  0000                     _U2ERRIR	set	15841
   715  0000                     _U2UIR	set	15840
   716  0000                     _U2FIFO	set	15839
   717  0000                     _U2BRGH	set	15838
   718  0000                     _U2BRGL	set	15837
   719  0000                     _U2CON2	set	15836
   720  0000                     _U2CON1	set	15835
   721  0000                     _U2CON0	set	15834
   722  0000                     _U2P3L	set	15832
   723  0000                     _U2P2L	set	15830
   724  0000                     _U2P1L	set	15828
   725  0000                     _U1RXB	set	15848
   726  0000                     _U1TXB	set	15850
   727  0000                     _U1ERRIE	set	15866
   728  0000                     _U1ERRIR	set	15865
   729  0000                     _U1UIR	set	15864
   730  0000                     _U1FIFO	set	15863
   731  0000                     _U1BRGH	set	15862
   732  0000                     _U1BRGL	set	15861
   733  0000                     _U1CON2	set	15860
   734  0000                     _U1CON1	set	15859
   735  0000                     _U1CON0	set	15858
   736  0000                     _U1P3H	set	15857
   737  0000                     _U1P3L	set	15856
   738  0000                     _U1P2H	set	15855
   739  0000                     _U1P2L	set	15854
   740  0000                     _U1P1H	set	15853
   741  0000                     _U1P1L	set	15852
   742  0000                     _ADCON0	set	16120
   743  0000                     _ADCLK	set	16127
   744  0000                     _ADACT	set	16126
   745  0000                     _ADREF	set	16125
   746  0000                     _ADSTAT	set	16124
   747  0000                     _ADCON3	set	16123
   748  0000                     _ADCON2	set	16122
   749  0000                     _ADCON1	set	16121
   750  0000                     _ADPREH	set	16119
   751  0000                     _ADPREL	set	16118
   752  0000                     _ADCAP	set	16117
   753  0000                     _ADACQH	set	16116
   754  0000                     _ADACQL	set	16115
   755  0000                     _ADPCH	set	16113
   756  0000                     _ADRPT	set	16108
   757  0000                     _ADACCU	set	16106
   758  0000                     _ADSTPTH	set	16101
   759  0000                     _ADSTPTL	set	16100
   760  0000                     _ADUTHH	set	16097
   761  0000                     _ADUTHL	set	16096
   762  0000                     _ADLTHH	set	16095
   763  0000                     _ADLTHL	set	16094
   764  0000                     _NCO1CONbits	set	16190
   765  0000                     _NCO1INCL	set	16187
   766  0000                     _NCO1INCH	set	16188
   767  0000                     _NCO1INCU	set	16189
   768  0000                     _NCO1ACCL	set	16184
   769  0000                     _NCO1ACCH	set	16185
   770  0000                     _NCO1ACCU	set	16186
   771  0000                     _NCO1CLK	set	16191
   772  0000                     _NCO1CON	set	16190
   773  0000                     _LATCbits	set	16316
   774  0000                     _PORTDbits	set	16333
   775  0000                     _T5CONbits	set	16282
   776  0000                     _T5CON	set	16282
   777  0000                     _TMR5L	set	16280
   778  0000                     _TMR5H	set	16281
   779  0000                     _T5CLK	set	16285
   780  0000                     _T5GATE	set	16284
   781  0000                     _T5GCON	set	16283
   782  0000                     _LATEbits	set	16318
   783  0000                     _T6CON	set	16276
   784  0000                     _T6TMR	set	16274
   785  0000                     _T6PR	set	16275
   786  0000                     _T6RST	set	16279
   787  0000                     _T6HLT	set	16277
   788  0000                     _T6CLKCON	set	16278
   789  0000                     _TRISD	set	16325
   790  0000                     _TRISC	set	16324
   791  0000                     _TRISB	set	16323
   792  0000                     _TRISA	set	16322
   793  0000                     _TRISF	set	16327
   794  0000                     _TRISE	set	16326
   795  0000                     _LATC	set	16316
   796  0000                     _LATB	set	16315
   797  0000                     _LATF	set	16319
   798  0000                     _LATA	set	16314
   799  0000                     _LATD	set	16317
   800  0000                     _LATE	set	16318
   801  0000                     _IVTLOCKbits	set	16340
   802  0000                     _IVTLOCK	set	16340
   803  0000                     _INTCON0bits	set	16338
   804  0000                     _GIE	set	130711
   805                           
   806                           	psect	smallconst
   807  002000                     __psmallconst:
   808                           	opt callstack 0
   809  002000  00                 	db	0
   810  002001                     STR_1:
   811  002001  4D                 	db	77	;'M'
   812  002002  20                 	db	32
   813  002003  25                 	db	37
   814  002004  64                 	db	100	;'d'
   815  002005  2C                 	db	44
   816  002006  20                 	db	32
   817  002007  48                 	db	72	;'H'
   818  002008  20                 	db	32
   819  002009  25                 	db	37
   820  00200A  30                 	db	48	;'0'
   821  00200B  32                 	db	50	;'2'
   822  00200C  78                 	db	120	;'x'
   823  00200D  25                 	db	37
   824  00200E  30                 	db	48	;'0'
   825  00200F  32                 	db	50	;'2'
   826  002010  78                 	db	120	;'x'
   827  002011  25                 	db	37
   828  002012  30                 	db	48	;'0'
   829  002013  32                 	db	50	;'2'
   830  002014  78                 	db	120	;'x'
   831  002015  25                 	db	37
   832  002016  30                 	db	48	;'0'
   833  002017  32                 	db	50	;'2'
   834  002018  78                 	db	120	;'x'
   835  002019  25                 	db	37
   836  00201A  30                 	db	48	;'0'
   837  00201B  32                 	db	50	;'2'
   838  00201C  78                 	db	120	;'x'
   839  00201D  25                 	db	37
   840  00201E  30                 	db	48	;'0'
   841  00201F  32                 	db	50	;'2'
   842  002020  78                 	db	120	;'x'
   843  002021  25                 	db	37
   844  002022  30                 	db	48	;'0'
   845  002023  32                 	db	50	;'2'
   846  002024  78                 	db	120	;'x'
   847  002025  25                 	db	37
   848  002026  30                 	db	48	;'0'
   849  002027  32                 	db	50	;'2'
   850  002028  78                 	db	120	;'x'
   851  002029  25                 	db	37
   852  00202A  30                 	db	48	;'0'
   853  00202B  32                 	db	50	;'2'
   854  00202C  78                 	db	120	;'x'
   855  00202D  25                 	db	37
   856  00202E  30                 	db	48	;'0'
   857  00202F  32                 	db	50	;'2'
   858  002030  78                 	db	120	;'x'
   859  002031  2C                 	db	44
   860  002032  20                 	db	32
   861  002033  43                 	db	67	;'C'
   862  002034  20                 	db	32
   863  002035  30                 	db	48	;'0'
   864  002036  78                 	db	120	;'x'
   865  002037  25                 	db	37
   866  002038  30                 	db	48	;'0'
   867  002039  34                 	db	52	;'4'
   868  00203A  78                 	db	120	;'x'
   869  00203B  20                 	db	32
   870  00203C  23                 	db	35
   871  00203D  00                 	db	0
   872  00203E                     STR_5:
   873  00203E  20                 	db	32
   874  00203F  45                 	db	69	;'E'
   875  002040  52                 	db	82	;'R'
   876  002041  52                 	db	82	;'R'
   877  002042  20                 	db	32
   878  002043  52                 	db	82	;'R'
   879  002044  25                 	db	37
   880  002045  64                 	db	100	;'d'
   881  002046  20                 	db	32
   882  002047  54                 	db	84	;'T'
   883  002048  25                 	db	37
   884  002049  64                 	db	100	;'d'
   885  00204A  20                 	db	32
   886  00204B  45                 	db	69	;'E'
   887  00204C  25                 	db	37
   888  00204D  64                 	db	100	;'d'
   889  00204E  20                 	db	32
   890  00204F  41                 	db	65	;'A'
   891  002050  25                 	db	37
   892  002051  64                 	db	100	;'d'
   893  002052  20                 	db	32
   894  002053  23                 	db	35
   895  002054  00                 	db	0
   896  002055                     STR_9:
   897  002055  20                 	db	32
   898  002056  52                 	db	82	;'R'
   899  002057  25                 	db	37
   900  002058  64                 	db	100	;'d'
   901  002059  20                 	db	32
   902  00205A  54                 	db	84	;'T'
   903  00205B  25                 	db	37
   904  00205C  64                 	db	100	;'d'
   905  00205D  20                 	db	32
   906  00205E  45                 	db	69	;'E'
   907  00205F  25                 	db	37
   908  002060  64                 	db	100	;'d'
   909  002061  20                 	db	32
   910  002062  41                 	db	65	;'A'
   911  002063  25                 	db	37
   912  002064  64                 	db	100	;'d'
   913  002065  20                 	db	32
   914  002066  20                 	db	32
   915  002067  20                 	db	32
   916  002068  23                 	db	35
   917  002069  00                 	db	0
   918  00206A                     STR_8:
   919  00206A  20                 	db	32
   920  00206B  4C                 	db	76	;'L'
   921  00206C  4F                 	db	79	;'O'
   922  00206D  47                 	db	71	;'G'
   923  00206E  20                 	db	32
   924  00206F  4D                 	db	77	;'M'
   925  002070  4F                 	db	79	;'O'
   926  002071  44                 	db	68	;'D'
   927  002072  45                 	db	69	;'E'
   928  002073  20                 	db	32
   929  002074  20                 	db	32
   930  002075  20                 	db	32
   931  002076  20                 	db	32
   932  002077  20                 	db	32
   933  002078  20                 	db	32
   934  002079  23                 	db	35
   935  00207A  00                 	db	0
   936  00207B                     STR_6:
   937  00207B  20                 	db	32
   938  00207C  48                 	db	72	;'H'
   939  00207D  4F                 	db	79	;'O'
   940  00207E  53                 	db	83	;'S'
   941  00207F  54                 	db	84	;'T'
   942  002080  20                 	db	32
   943  002081  4D                 	db	77	;'M'
   944  002082  4F                 	db	79	;'O'
   945  002083  44                 	db	68	;'D'
   946  002084  45                 	db	69	;'E'
   947  002085  20                 	db	32
   948  002086  20                 	db	32
   949  002087  20                 	db	32
   950  002088  20                 	db	32
   951  002089  20                 	db	32
   952  00208A  23                 	db	35
   953  00208B  00                 	db	0
   954  00208C                     STR_7:
   955  00208C  20                 	db	32
   956  00208D  45                 	db	69	;'E'
   957  00208E  51                 	db	81	;'Q'
   958  00208F  55                 	db	85	;'U'
   959  002090  49                 	db	73	;'I'
   960  002091  50                 	db	80	;'P'
   961  002092  20                 	db	32
   962  002093  4D                 	db	77	;'M'
   963  002094  4F                 	db	79	;'O'
   964  002095  44                 	db	68	;'D'
   965  002096  45                 	db	69	;'E'
   966  002097  20                 	db	32
   967  002098  20                 	db	32
   968  002099  20                 	db	32
   969  00209A  20                 	db	32
   970  00209B  23                 	db	35
   971  00209C  00                 	db	0
   972  00209D                     STR_3:
   973  00209D  20                 	db	32
   974  00209E  53                 	db	83	;'S'
   975  00209F  25                 	db	37
   976  0020A0  64                 	db	100	;'d'
   977  0020A1  46                 	db	70	;'F'
   978  0020A2  25                 	db	37
   979  0020A3  64                 	db	100	;'d'
   980  0020A4  20                 	db	32
   981  0020A5  23                 	db	35
   982  0020A6  20                 	db	32
   983  0020A7  20                 	db	32
   984  0020A8  20                 	db	32
   985  0020A9  20                 	db	32
   986  0020AA  00                 	db	0
   987  0020AB                     STR_4:
   988  0020AB  20                 	db	32
   989  0020AC  4F                 	db	79	;'O'
   990  0020AD  4B                 	db	75	;'K'
   991  0020AE  20                 	db	32
   992  0020AF  23                 	db	35
   993  0020B0  00                 	db	0
   994  0020B1                     STR_11:
   995  0020B1  25                 	db	37
   996  0020B2  63                 	db	99	;'c'
   997  0020B3  00                 	db	0
   998  0020B4                     STR_10:
   999  0020B4  25                 	db	37
  1000  0020B5  73                 	db	115	;'s'
  1001  0020B6  00                 	db	0
  1002  0000                     
  1003                           ; #config settings
  1004  0020B7  00                 	db	0	; dummy byte at the end
  1005  0000                     
  1006                           	psect	cinit
  1007  004B6E                     __pcinit:
  1008                           	opt callstack 0
  1009  004B6E                     start_initialization:
  1010                           	opt callstack 0
  1011  004B6E                     __initialization:
  1012                           	opt callstack 0
  1013                           
  1014                           ; Initialize objects allocated to BANK3 (112 bytes)
  1015                           ; load TBLPTR registers with __pidataBANK3
  1016  004B6E  0EEA               	movlw	low __pidataBANK3
  1017  004B70  6EF6               	movwf	tblptrl,c
  1018  004B72  0E51               	movlw	high __pidataBANK3
  1019  004B74  6EF7               	movwf	tblptrh,c
  1020  004B76  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1021  004B78  6EF8               	movwf	tblptru,c
  1022  004B7A  EE00  F386         	lfsr	0,__pdataBANK3
  1023  004B7E  EE20 F070          	lfsr	2,112
  1024  004B82                     copy_data0:
  1025  004B82  0009               	tblrd		*+
  1026  004B84  006F FFD7 FFEE     	movff	tablat,postinc0
  1027  004B8A  50DD               	movf	postdec2,w,c
  1028  004B8C  50D9               	movf	fsr2l,w,c
  1029  004B8E  E1F9               	bnz	copy_data0
  1030                           
  1031                           ; Initialize objects allocated to BANK1 (161 bytes)
  1032                           ; load TBLPTR registers with __pidataBANK1
  1033  004B90  0E78               	movlw	low __pidataBANK1
  1034  004B92  6EF6               	movwf	tblptrl,c
  1035  004B94  0E4D               	movlw	high __pidataBANK1
  1036  004B96  6EF7               	movwf	tblptrh,c
  1037  004B98  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1038  004B9A  6EF8               	movwf	tblptru,c
  1039  004B9C  EE00  F100         	lfsr	0,__pdataBANK1
  1040  004BA0  EE20 F0A1          	lfsr	2,161
  1041  004BA4                     copy_data1:
  1042  004BA4  0009               	tblrd		*+
  1043  004BA6  006F FFD7 FFEE     	movff	tablat,postinc0
  1044  004BAC  50DD               	movf	postdec2,w,c
  1045  004BAE  50D9               	movf	fsr2l,w,c
  1046  004BB0  E1F9               	bnz	copy_data1
  1047                           
  1048                           ; Initialize objects allocated to BANK0 (7 bytes)
  1049                           ; load TBLPTR registers with __pidataBANK0
  1050  004BB2  0EBA               	movlw	low __pidataBANK0
  1051  004BB4  6EF6               	movwf	tblptrl,c
  1052  004BB6  0E5F               	movlw	high __pidataBANK0
  1053  004BB8  6EF7               	movwf	tblptrh,c
  1054  004BBA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1055  004BBC  6EF8               	movwf	tblptru,c
  1056  004BBE  EE00  F0F9         	lfsr	0,__pdataBANK0
  1057  004BC2  EE20 F007          	lfsr	2,7
  1058  004BC6                     copy_data2:
  1059  004BC6  0009               	tblrd		*+
  1060  004BC8  006F FFD7 FFEE     	movff	tablat,postinc0
  1061  004BCE  50DD               	movf	postdec2,w,c
  1062  004BD0  50D9               	movf	fsr2l,w,c
  1063  004BD2  E1F9               	bnz	copy_data2
  1064                           
  1065                           ; Clear objects allocated to BANK3 (134 bytes)
  1066  004BD4  EE00  F300         	lfsr	0,__pbssBANK3
  1067  004BD8  0E86               	movlw	134
  1068  004BDA                     clear_0:
  1069  004BDA  6AEE               	clrf	postinc0,c
  1070  004BDC  06E8               	decf	wreg,f,c
  1071  004BDE  E1FD               	bnz	clear_0
  1072                           
  1073                           ; Clear objects allocated to BANK2 (192 bytes)
  1074  004BE0  EE00  F200         	lfsr	0,__pbssBANK2
  1075  004BE4  0EC0               	movlw	192
  1076  004BE6                     clear_1:
  1077  004BE6  6AEE               	clrf	postinc0,c
  1078  004BE8  06E8               	decf	wreg,f,c
  1079  004BEA  E1FD               	bnz	clear_1
  1080                           
  1081                           ; Clear objects allocated to BANK1 (64 bytes)
  1082  004BEC  EE00  F1A1         	lfsr	0,__pbssBANK1
  1083  004BF0  0E40               	movlw	64
  1084  004BF2                     clear_2:
  1085  004BF2  6AEE               	clrf	postinc0,c
  1086  004BF4  06E8               	decf	wreg,f,c
  1087  004BF6  E1FD               	bnz	clear_2
  1088                           
  1089                           ; Clear objects allocated to BANK0 (153 bytes)
  1090  004BF8  EE00  F060         	lfsr	0,__pbssBANK0
  1091  004BFC  0E99               	movlw	153
  1092  004BFE                     clear_3:
  1093  004BFE  6AEE               	clrf	postinc0,c
  1094  004C00  06E8               	decf	wreg,f,c
  1095  004C02  E1FD               	bnz	clear_3
  1096                           
  1097                           ; Clear objects allocated to COMRAM (60 bytes)
  1098  004C04  EE00  F001         	lfsr	0,__pbssCOMRAM
  1099  004C08  0E3C               	movlw	60
  1100  004C0A                     clear_4:
  1101  004C0A  6AEE               	clrf	postinc0,c
  1102  004C0C  06E8               	decf	wreg,f,c
  1103  004C0E  E1FD               	bnz	clear_4
  1104                           
  1105                           ;
  1106                           ; Setup IVTBASE
  1107                           ;
  1108  004C10  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1109  004C12  6ED5               	movwf	213,c
  1110  004C14  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1111  004C16  6ED6               	movwf	214,c
  1112  004C18  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1113  004C1A  6ED7               	movwf	215,c
  1114  004C1C                     end_of_initialization:
  1115                           	opt callstack 0
  1116  004C1C                     __end_of__initialization:
  1117                           	opt callstack 0
  1118  004C1C  0100               	movlb	0
  1119  004C1E  EFF2  F015         	goto	_main	;jump to C main() function
  1120                           
  1121                           	psect	bssCOMRAM
  1122  000001                     __pbssCOMRAM:
  1123                           	opt callstack 0
  1124  000001                     secs_II_message@block:
  1125                           	opt callstack 0
  1126  000001                     	ds	3
  1127  000004                     _TMR5_InterruptHandler:
  1128                           	opt callstack 0
  1129  000004                     	ds	3
  1130  000007                     _TMR6_InterruptHandler:
  1131                           	opt callstack 0
  1132  000007                     	ds	3
  1133  00000A                     _ADCC_ADI_InterruptHandler:
  1134                           	opt callstack 0
  1135  00000A                     	ds	3
  1136  00000D                     _UART1_TxInterruptHandler:
  1137                           	opt callstack 0
  1138  00000D                     	ds	3
  1139  000010                     _UART1_RxInterruptHandler:
  1140                           	opt callstack 0
  1141  000010                     	ds	3
  1142  000013                     _UART2_TxInterruptHandler:
  1143                           	opt callstack 0
  1144  000013                     	ds	3
  1145  000016                     _UART2_RxInterruptHandler:
  1146                           	opt callstack 0
  1147  000016                     	ds	3
  1148  000019                     _INT2_InterruptHandler:
  1149                           	opt callstack 0
  1150  000019                     	ds	3
  1151  00001C                     _INT1_InterruptHandler:
  1152                           	opt callstack 0
  1153  00001C                     	ds	3
  1154  00001F                     _INT0_InterruptHandler:
  1155                           	opt callstack 0
  1156  00001F                     	ds	3
  1157  000022                     _nout:
  1158                           	opt callstack 0
  1159  000022                     	ds	2
  1160  000024                     _width:
  1161                           	opt callstack 0
  1162  000024                     	ds	2
  1163  000026                     _prec:
  1164                           	opt callstack 0
  1165  000026                     	ds	2
  1166  000028                     _flags:
  1167                           	opt callstack 0
  1168  000028                     	ds	2
  1169  00002A                     run_checksum@sum:
  1170                           	opt callstack 0
  1171  00002A                     	ds	2
  1172  00002C                     TMR5_ISR@CountCallBack:
  1173                           	opt callstack 0
  1174  00002C                     	ds	2
  1175  00002E                     _timer5ReloadVal:
  1176                           	opt callstack 0
  1177  00002E                     	ds	2
  1178  000030                     r_protocol@rxData_l:
  1179                           	opt callstack 0
  1180  000030                     	ds	1
  1181  000031                     _uart2RxCount:
  1182                           	opt callstack 0
  1183  000031                     	ds	1
  1184  000032                     _uart2RxTail:
  1185                           	opt callstack 0
  1186  000032                     	ds	1
  1187  000033                     _uart2RxHead:
  1188                           	opt callstack 0
  1189  000033                     	ds	1
  1190  000034                     _uart2TxBufferRemaining:
  1191                           	opt callstack 0
  1192  000034                     	ds	1
  1193  000035                     _uart2TxTail:
  1194                           	opt callstack 0
  1195  000035                     	ds	1
  1196  000036                     _uart2TxHead:
  1197                           	opt callstack 0
  1198  000036                     	ds	1
  1199  000037                     _uart1RxCount:
  1200                           	opt callstack 0
  1201  000037                     	ds	1
  1202  000038                     _uart1RxTail:
  1203                           	opt callstack 0
  1204  000038                     	ds	1
  1205  000039                     _uart1RxHead:
  1206                           	opt callstack 0
  1207  000039                     	ds	1
  1208  00003A                     _uart1TxBufferRemaining:
  1209                           	opt callstack 0
  1210  00003A                     	ds	1
  1211  00003B                     _uart1TxTail:
  1212                           	opt callstack 0
  1213  00003B                     	ds	1
  1214  00003C                     _uart1TxHead:
  1215                           	opt callstack 0
  1216  00003C                     	ds	1
  1217                           
  1218                           	psect	bssBANK0
  1219  000060                     __pbssBANK0:
  1220                           	opt callstack 0
  1221  000060                     _r_block:
  1222                           	opt callstack 0
  1223  000060                     	ds	13
  1224  00006D                     _spi_link:
  1225                           	opt callstack 0
  1226  00006D                     	ds	12
  1227  000079                     _tickCount:
  1228                           	opt callstack 0
  1229  000079                     	ds	12
  1230  000085                     wdtdelay@dcount:
  1231                           	opt callstack 0
  1232  000085                     	ds	4
  1233  000089                     _V:
  1234                           	opt callstack 0
  1235  000089                     	ds	80
  1236  0000D9                     _dbuf:
  1237                           	opt callstack 0
  1238  0000D9                     	ds	32
  1239                           
  1240                           	psect	dataBANK0
  1241  0000F9                     __pdataBANK0:
  1242                           	opt callstack 0
  1243  0000F9                     stoa@F1144:
  1244                           	opt callstack 0
  1245  0000F9                     	ds	7
  1246                           
  1247                           	psect	bssBANK1
  1248  0001A1                     __pbssBANK1:
  1249                           	opt callstack 0
  1250  0001A1                     _uart1RxBuffer:
  1251                           	opt callstack 0
  1252  0001A1                     	ds	64
  1253                           
  1254                           	psect	dataBANK1
  1255  000100                     __pdataBANK1:
  1256                           	opt callstack 0
  1257  000100                     _H10:
  1258                           	opt callstack 0
  1259  000100                     	ds	65
  1260  000141                     _H24:
  1261                           	opt callstack 0
  1262  000141                     	ds	27
  1263  00015C                     _H18:
  1264                           	opt callstack 0
  1265  00015C                     	ds	21
  1266  000171                     _H14:
  1267                           	opt callstack 0
  1268  000171                     	ds	17
  1269  000182                     _H13:
  1270                           	opt callstack 0
  1271  000182                     	ds	16
  1272  000192                     _H12:
  1273                           	opt callstack 0
  1274  000192                     	ds	15
  1275                           
  1276                           	psect	bssBANK2
  1277  000200                     __pbssBANK2:
  1278                           	opt callstack 0
  1279  000200                     _uart2RxBuffer:
  1280                           	opt callstack 0
  1281  000200                     	ds	64
  1282  000240                     _uart2TxBuffer:
  1283                           	opt callstack 0
  1284  000240                     	ds	64
  1285  000280                     _uart1TxBuffer:
  1286                           	opt callstack 0
  1287  000280                     	ds	64
  1288                           
  1289                           	psect	bssBANK3
  1290  000300                     __pbssBANK3:
  1291                           	opt callstack 0
  1292  000300                     _ring_buf2:
  1293                           	opt callstack 0
  1294  000300                     	ds	67
  1295  000343                     _ring_buf1:
  1296                           	opt callstack 0
  1297  000343                     	ds	67
  1298                           
  1299                           	psect	dataBANK3
  1300  000386                     __pdataBANK3:
  1301                           	opt callstack 0
  1302  000386                     _H53:
  1303                           	opt callstack 0
  1304  000386                     	ds	112
  1305                           
  1306                           	psect	cstackCOMRAM
  1307  00005D                     __pcstackCOMRAM:
  1308                           	opt callstack 0
  1309  00005D                     ??_TMR6_ISR:
  1310  00005D                     
  1311                           ; 1 bytes @ 0x0
  1312  00005D                     	ds	1
  1313  00005E                     ??_TMR5_ISR:
  1314                           
  1315                           ; 1 bytes @ 0x1
  1316  00005E                     	ds	1
  1317                           
  1318 ;;
  1319 ;;Main: autosize = 3, tempsize = 0, incstack = 0, save=0
  1320 ;;
  1321 ;; *************** function _main *****************
  1322 ;; Defined at:
  1323 ;;		line 246 in file "main.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;		None
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  j               1    0        unsigned char 
  1328 ;;  sum             2  [STACK] unsigned short 
  1329 ;;  mode            1  [STACK] enum E16894
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1  [STACK] void 
  1332 ;; Registers used:
  1333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp
      ++8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl
      +, tblptrh, tblptru, prodl, prodh
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 3F/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1343 ;;Total ram usage:        0 bytes
  1344 ;; Hardware stack levels required when called:   14
  1345 ;; This function calls:
  1346 ;;		_SYSTEM_Initialize
  1347 ;;		_UART1_Write
  1348 ;;		_UART1_put_buffer
  1349 ;;		_WaitMs
  1350 ;;		_block_checksum
  1351 ;;		_eaDogM_WriteCommand
  1352 ;;		_eaDogM_WriteString
  1353 ;;		_eaDogM_WriteStringAtPos
  1354 ;;		_init_display
  1355 ;;		_r_protocol
  1356 ;;		_secs_send
  1357 ;;		_sprintf
  1358 ;;		_t_protocol
  1359 ;;		_wait_lcd_done
  1360 ;; This function is called by:
  1361 ;;		Startup code after reset
  1362 ;; This function uses a reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text0
  1366  002BE4                     __ptext0:
  1367                           	opt callstack 0
  1368  002BE4                     _main:
  1369                           	opt callstack 0
  1370                           
  1371                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1372  002BE4  52E6               	movf	postinc1,f,c
  1373  002BE6  52E6               	movf	postinc1,f,c
  1374  002BE8  52E6               	movf	postinc1,f,c
  1375                           
  1376                           ;main.c: 248:  uint16_t sum;;main.c: 249:  UI_STATES mode;;main.c: 252:  SYSTEM_Initiali
      +                          ze();
  1377                           
  1378                           ;incstack = 0
  1379  002BEA  EC7C  F02B         	call	_SYSTEM_Initialize	;wreg free
  1380                           
  1381                           ; BSR set to: 60
  1382                           ;main.c: 255:  (INTCON0bits.GIEH = 1);
  1383  002BEE  8ED2               	bsf	16338,7,c	;volatile
  1384                           
  1385                           ; BSR set to: 60
  1386                           ;main.c: 258:  (INTCON0bits.GIEL = 1);
  1387  002BF0  8CD2               	bsf	16338,6,c	;volatile
  1388                           
  1389                           ; BSR set to: 60
  1390                           ;main.c: 260:  V.ui_state = UI_STATE_INIT;
  1391  002BF2  0100               	movlb	0	; () banked
  1392  002BF4  6B8A               	clrf	(_V+1)& (0+255),b	;volatile
  1393  002BF6  D17F               	goto	l7952
  1394  002BF8                     l7836:
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;main.c: 265:    init_display();
  1398  002BF8  EC75  F024         	call	_init_display	;wreg free
  1399                           
  1400                           ; BSR set to: 61
  1401                           ;main.c: 266:    eaDogM_WriteCommand(0b00001100);
  1402  002BFC  0E0C               	movlw	12
  1403  002BFE  6EE6               	movwf	postinc1,c
  1404  002C00  EC96  F02F         	call	_eaDogM_WriteCommand	;wreg free
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;main.c: 267:    mode = PORTDbits.RD2 + UI_STATE_EQUIP;
  1408  002C04  A4CD               	btfss	16333,2,c	;volatile
  1409  002C06  D003               	goto	u4960
  1410  002C08  6A48               	clrf	btemp+11,c
  1411  002C0A  2A48               	incf	btemp+11,f,c
  1412  002C0C  D001               	goto	u4968
  1413  002C0E                     u4960:
  1414  002C0E  6A48               	clrf	btemp+11,c
  1415  002C10                     u4968:
  1416  002C10  0E01               	movlw	1
  1417  002C12  2648               	addwf	btemp+11,f,c
  1418                           
  1419                           ;stkvar	_mode @ sp[(-3)+2]
  1420  002C14  0EFF               	movlw	-1
  1421  002C16  0060  F123  FFE3   	movff	btemp+11,plusw1
  1422                           
  1423                           ;main.c: 268:    if (!PORTDbits.RD3)
  1424  002C1C  B6CD               	btfsc	16333,3,c	;volatile
  1425  002C1E  D003               	goto	l7846
  1426                           
  1427                           ;main.c: 269:     mode = UI_STATE_LOG;
  1428                           ;stkvar	_mode @ sp[(-3)+2]
  1429  002C20  0EFF               	movlw	-1
  1430  002C22  6AE3               	clrf	plusw1,c
  1431  002C24  84E3               	bsf	plusw1,2,c
  1432  002C26                     l7846:
  1433                           
  1434                           ;main.c: 270:    V.ui_state = mode;
  1435                           ;stkvar	_mode @ sp[(-3)+2]
  1436  002C26  0EFF               	movlw	-1
  1437  002C28  006F FF8C  F08A    	movff	plusw1,_V+1	;volatile
  1438                           
  1439                           ;main.c: 271:    V.s_state = SEQ_STATE_INIT;
  1440  002C2E  0100               	movlb	0	; () banked
  1441  002C30  6B89               	clrf	_V& (0+255),b	;volatile
  1442                           
  1443                           ; BSR set to: 0
  1444                           ;main.c: 276:    sum = block_checksum((uint8_t*) & H10[j].block.block, sizeof(block10));
  1445                           
  1446                           ; BSR set to: 0
  1447  002C32  0E0A               	movlw	10
  1448  002C34  6EE6               	movwf	postinc1,c
  1449  002C36  0E00               	movlw	0
  1450  002C38  6EE6               	movwf	postinc1,c
  1451  002C3A  0E29               	movlw	low (_H10+41)
  1452  002C3C  6EE6               	movwf	postinc1,c
  1453  002C3E  0E01               	movlw	high (_H10+41)
  1454  002C40  6EE6               	movwf	postinc1,c
  1455  002C42  ECEA  F024         	call	_block_checksum	;wreg free
  1456                           
  1457                           ;stkvar	_sum @ sp[(-3)+0]
  1458  002C46  0EFD               	movlw	-3
  1459  002C48  0060  F0F7  FFE3   	movff	btemp,plusw1
  1460  002C4E  0EFE               	movlw	-2
  1461  002C50  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  1462                           
  1463                           ;main.c: 277:    H10[j].checksum = sum;
  1464                           ;stkvar	_sum @ sp[(-3)+0]
  1465  002C56  0EFD               	movlw	-3
  1466  002C58  006F FF8C  F127    	movff	plusw1,_H10+39
  1467  002C5E  0EFE               	movlw	-2
  1468  002C60  006F FF8C  F128    	movff	plusw1,_H10+40
  1469                           
  1470                           ;main.c: 278:    sprintf(V.buf, "M %d, H %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x, C 0x%
      +                          04x #",
  1471                           ;stkvar	_sum @ sp[(-3)+0]
  1472  002C66  0EFD               	movlw	-3
  1473  002C68  006F FF8F FFE6     	movff	plusw1,postinc1
  1474  002C6E  006F FF8F FFE6     	movff	plusw1,postinc1
  1475  002C74  0101               	movlb	1	; () banked
  1476  002C76  5129               	movf	(_H10+41)& (0+255),w,b
  1477  002C78  6EE6               	movwf	postinc1,c
  1478  002C7A  0E00               	movlw	0
  1479  002C7C  6EE6               	movwf	postinc1,c
  1480  002C7E  512A               	movf	(_H10+42)& (0+255),w,b
  1481  002C80  6EE6               	movwf	postinc1,c
  1482  002C82  0E00               	movlw	0
  1483  002C84  6EE6               	movwf	postinc1,c
  1484  002C86  512B               	movf	(_H10+43)& (0+255),w,b
  1485  002C88  6EE6               	movwf	postinc1,c
  1486  002C8A  0E00               	movlw	0
  1487  002C8C  6EE6               	movwf	postinc1,c
  1488  002C8E  512C               	movf	(_H10+44)& (0+255),w,b
  1489  002C90  6EE6               	movwf	postinc1,c
  1490  002C92  0E00               	movlw	0
  1491  002C94  6EE6               	movwf	postinc1,c
  1492  002C96  512D               	movf	(_H10+45)& (0+255),w,b
  1493  002C98  6EE6               	movwf	postinc1,c
  1494  002C9A  0E00               	movlw	0
  1495  002C9C  6EE6               	movwf	postinc1,c
  1496  002C9E  512E               	movf	(_H10+46)& (0+255),w,b
  1497  002CA0  6EE6               	movwf	postinc1,c
  1498  002CA2  0E00               	movlw	0
  1499  002CA4  6EE6               	movwf	postinc1,c
  1500  002CA6  512F               	movf	(_H10+47)& (0+255),w,b
  1501  002CA8  6EE6               	movwf	postinc1,c
  1502  002CAA  0E00               	movlw	0
  1503  002CAC  6EE6               	movwf	postinc1,c
  1504  002CAE  5130               	movf	(_H10+48)& (0+255),w,b
  1505  002CB0  6EE6               	movwf	postinc1,c
  1506  002CB2  0E00               	movlw	0
  1507  002CB4  6EE6               	movwf	postinc1,c
  1508  002CB6  5131               	movf	(_H10+49)& (0+255),w,b
  1509  002CB8  6EE6               	movwf	postinc1,c
  1510  002CBA  0E00               	movlw	0
  1511  002CBC  6EE6               	movwf	postinc1,c
  1512  002CBE  5132               	movf	(_H10+50)& (0+255),w,b
  1513  002CC0  6EE6               	movwf	postinc1,c
  1514  002CC2  0E00               	movlw	0
  1515  002CC4  6EE6               	movwf	postinc1,c
  1516                           
  1517                           ;stkvar	_mode @ sp[(-25)+2]
  1518  002CC6  0EE9               	movlw	-23
  1519  002CC8  50E3               	movf	plusw1,w,c
  1520  002CCA  6EE6               	movwf	postinc1,c
  1521  002CCC  0E00               	movlw	0
  1522  002CCE  6EE6               	movwf	postinc1,c
  1523  002CD0  0E01               	movlw	STR_1& (0+255)
  1524  002CD2  6EE6               	movwf	postinc1,c
  1525  002CD4  0E89               	movlw	_V& (0+255)
  1526  002CD6  0F04               	addlw	4
  1527  002CD8  6EE6               	movwf	postinc1,c
  1528  002CDA  0E1A               	movlw	26
  1529  002CDC  6EE6               	movwf	postinc1,c
  1530  002CDE  EC53  F025         	call	_sprintf	;wreg free
  1531                           
  1532                           ;main.c: 291:    wait_lcd_done();
  1533  002CE2  EC25  F02F         	call	_wait_lcd_done	;wreg free
  1534                           
  1535                           ; BSR set to: 0
  1536                           ;main.c: 292:    eaDogM_WriteString(V.buf);
  1537  002CE6  0E89               	movlw	_V& (0+255)
  1538  002CE8  0F04               	addlw	4
  1539  002CEA  6EE6               	movwf	postinc1,c
  1540  002CEC  EC11  F026         	call	_eaDogM_WriteString	;wreg free
  1541                           
  1542                           ; BSR set to: 0
  1543                           ;main.c: 294:    secs_send((uint8_t*) & H10[j], sizeof(header10), 0);
  1544  002CF0  0E00               	movlw	0
  1545  002CF2  6EE6               	movwf	postinc1,c
  1546  002CF4  0E0D               	movlw	13
  1547  002CF6  6EE6               	movwf	postinc1,c
  1548  002CF8  0E27               	movlw	low (_H10+39)
  1549  002CFA  6EE6               	movwf	postinc1,c
  1550  002CFC  0E01               	movlw	high (_H10+39)
  1551  002CFE  6EE6               	movwf	postinc1,c
  1552  002D00  EC06  F022         	call	_secs_send	;wreg free
  1553                           
  1554                           ;main.c: 295:    sprintf(V.buf, " C 0x%04x #", V.t_checksum);
  1555  002D04  0060  F35F  FFE6   	movff	_V+78,postinc1
  1556  002D0A  0060  F363  FFE6   	movff	_V+79,postinc1
  1557  002D10  0E32               	movlw	(STR_1+49)& (0+255)
  1558  002D12  6EE6               	movwf	postinc1,c
  1559  002D14  0E89               	movlw	_V& (0+255)
  1560  002D16  0F04               	addlw	4
  1561  002D18  6EE6               	movwf	postinc1,c
  1562  002D1A  0E04               	movlw	4
  1563  002D1C  6EE6               	movwf	postinc1,c
  1564  002D1E  EC53  F025         	call	_sprintf	;wreg free
  1565                           
  1566                           ;main.c: 296:    wait_lcd_done();
  1567  002D22  EC25  F02F         	call	_wait_lcd_done	;wreg free
  1568                           
  1569                           ; BSR set to: 0
  1570                           ;main.c: 297:    eaDogM_WriteString(V.buf);
  1571  002D26  0E89               	movlw	_V& (0+255)
  1572  002D28  0F04               	addlw	4
  1573  002D2A  6EE6               	movwf	postinc1,c
  1574  002D2C  EC11  F026         	call	_eaDogM_WriteString	;wreg free
  1575                           
  1576                           ;main.c: 300:    break;
  1577  002D30  D0F8               	goto	l7954
  1578  002D32                     l1221:
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;main.c: 304:     V.r_l_state = LINK_STATE_IDLE;
  1582  002D32  6B8B               	clrf	(_V+2)& (0+255),b	;volatile
  1583                           
  1584                           ;main.c: 305:     V.t_l_state = LINK_STATE_IDLE;
  1585  002D34  6B8C               	clrf	(_V+3)& (0+255),b	;volatile
  1586                           
  1587                           ; BSR set to: 0
  1588                           ;main.c: 306:     V.s_state = SEQ_STATE_RX;
  1589  002D36  0E01               	movlw	1
  1590  002D38  6F89               	movwf	_V& (0+255),b	;volatile
  1591                           
  1592                           ; BSR set to: 0
  1593                           ;main.c: 308:     WaitMs(75);
  1594  002D3A  0E4B               	movlw	75
  1595  002D3C  6EE6               	movwf	postinc1,c
  1596  002D3E  0E00               	movlw	0
  1597  002D40  6EE6               	movwf	postinc1,c
  1598  002D42  ECD8  F02C         	call	_WaitMs	;wreg free
  1599                           
  1600                           ;main.c: 309:     UART1_put_buffer(0x05);
  1601  002D46  0E05               	movlw	5
  1602  002D48  6EE6               	movwf	postinc1,c
  1603  002D4A  ECC3  F02C         	call	_UART1_put_buffer	;wreg free
  1604                           
  1605                           ;main.c: 311:     break;
  1606  002D4E  D0A6               	goto	l7926
  1607  002D50                     l7876:
  1608                           
  1609                           ; BSR set to: 0
  1610                           ;main.c: 316:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1611  002D50  0E89               	movlw	_V& (0+255)
  1612  002D52  0F02               	addlw	2
  1613  002D54  6EE6               	movwf	postinc1,c
  1614  002D56  EC81  F01D         	call	_r_protocol	;wreg free
  1615  002D5A  0E04               	movlw	4
  1616  002D5C  183D               	xorwf	btemp,w,c
  1617  002D5E  A4D8               	btfss	status,2,c
  1618  002D60  D028               	goto	l7890
  1619                           
  1620                           ;main.c: 317:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  1621  002D62  0100               	movlb	0	; () banked
  1622  002D64  51D2               	movf	(_V+73)& (0+255),w,b	;volatile
  1623  002D66  6EE6               	movwf	postinc1,c
  1624  002D68  0E00               	movlw	0
  1625  002D6A  6EE6               	movwf	postinc1,c
  1626  002D6C  51D1               	movf	(_V+72)& (0+255),w,b	;volatile
  1627  002D6E  6EE6               	movwf	postinc1,c
  1628  002D70  0E00               	movlw	0
  1629  002D72  6EE6               	movwf	postinc1,c
  1630  002D74  0E9D               	movlw	STR_3& (0+255)
  1631  002D76  6EE6               	movwf	postinc1,c
  1632  002D78  0E89               	movlw	_V& (0+255)
  1633  002D7A  0F04               	addlw	4
  1634  002D7C  6EE6               	movwf	postinc1,c
  1635  002D7E  0E06               	movlw	6
  1636  002D80  6EE6               	movwf	postinc1,c
  1637  002D82  EC53  F025         	call	_sprintf	;wreg free
  1638                           
  1639                           ;main.c: 318:      V.buf[11] = 0;
  1640  002D86  0100               	movlb	0	; () banked
  1641  002D88  6B98               	clrf	(_V+15)& (0+255),b	;volatile
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;main.c: 319:      wait_lcd_done();
  1645  002D8A  EC25  F02F         	call	_wait_lcd_done	;wreg free
  1646                           
  1647                           ; BSR set to: 0
  1648                           ;main.c: 320:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  1649  002D8E  0E89               	movlw	_V& (0+255)
  1650  002D90  0F04               	addlw	4
  1651  002D92  6EE6               	movwf	postinc1,c
  1652  002D94  0E00               	movlw	0
  1653  002D96  6EE6               	movwf	postinc1,c
  1654  002D98  0E00               	movlw	0
  1655  002D9A  6EE6               	movwf	postinc1,c
  1656  002D9C  EC81  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;main.c: 322:      WaitMs(5);
  1660  002DA0  0E05               	movlw	5
  1661  002DA2  6EE6               	movwf	postinc1,c
  1662  002DA4  0E00               	movlw	0
  1663  002DA6  6EE6               	movwf	postinc1,c
  1664  002DA8  ECD8  F02C         	call	_WaitMs	;wreg free
  1665                           
  1666                           ;main.c: 324:      V.s_state = SEQ_STATE_TX;
  1667  002DAC  0E02               	movlw	2
  1668  002DAE  0100               	movlb	0	; () banked
  1669  002DB0  6F89               	movwf	_V& (0+255),b	;volatile
  1670  002DB2                     l7890:
  1671                           
  1672                           ;main.c: 326:     if (V.r_l_state == LINK_STATE_ERROR)
  1673  002DB2  0E06               	movlw	6
  1674  002DB4  0100               	movlb	0	; () banked
  1675  002DB6  198B               	xorwf	(_V+2)& (0+255),w,b	;volatile
  1676  002DB8  D00F               	goto	L24
  1677  002DBA                     l7894:
  1678                           
  1679                           ; BSR set to: 0
  1680                           ;main.c: 333:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1681  002DBA  0E89               	movlw	_V& (0+255)
  1682  002DBC  0F03               	addlw	3
  1683  002DBE  6EE6               	movwf	postinc1,c
  1684  002DC0  ECF7  F020         	call	_t_protocol	;wreg free
  1685  002DC4  0E04               	movlw	4
  1686  002DC6  183D               	xorwf	btemp,w,c
  1687  002DC8  A4D8               	btfss	status,2,c
  1688  002DCA  D003               	goto	l7898
  1689                           
  1690                           ;main.c: 334:      V.s_state = SEQ_STATE_TRIGGER;
  1691  002DCC  0E03               	movlw	3
  1692  002DCE  0100               	movlb	0	; () banked
  1693  002DD0  6F89               	movwf	_V& (0+255),b	;volatile
  1694  002DD2                     l7898:
  1695                           
  1696                           ;main.c: 336:     if (V.t_l_state == LINK_STATE_ERROR)
  1697  002DD2  0E06               	movlw	6
  1698  002DD4  0100               	movlb	0	; () banked
  1699  002DD6  198C               	xorwf	(_V+3)& (0+255),w,b	;volatile
  1700  002DD8                     L24:
  1701  002DD8  A4D8               	btfss	status,2,c
  1702  002DDA  D060               	goto	l7926
  1703                           
  1704                           ; BSR set to: 0
  1705                           ;main.c: 337:      V.s_state = SEQ_STATE_ERROR;
  1706  002DDC  0E05               	movlw	5
  1707  002DDE  6F89               	movwf	_V& (0+255),b	;volatile
  1708  002DE0  D05D               	goto	l7926
  1709  002DE2                     l1230:
  1710                           
  1711                           ; BSR set to: 0
  1712  002DE2  82BE               	bsf	16318,1,c	;volatile
  1713                           
  1714                           ; BSR set to: 0
  1715                           ;main.c: 341:     sprintf(V.buf, " OK #");
  1716  002DE4  0EAB               	movlw	STR_4& (0+255)
  1717  002DE6  6EE6               	movwf	postinc1,c
  1718  002DE8  0E89               	movlw	_V& (0+255)
  1719  002DEA  0F04               	addlw	4
  1720  002DEC  6EE6               	movwf	postinc1,c
  1721  002DEE  0E02               	movlw	2
  1722  002DF0  6EE6               	movwf	postinc1,c
  1723  002DF2  EC53  F025         	call	_sprintf	;wreg free
  1724                           
  1725                           ;main.c: 342:     wait_lcd_done();
  1726  002DF6  EC25  F02F         	call	_wait_lcd_done	;wreg free
  1727                           
  1728                           ; BSR set to: 0
  1729                           ;main.c: 343:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  1730  002DFA  0E89               	movlw	_V& (0+255)
  1731  002DFC  0F04               	addlw	4
  1732  002DFE  6EE6               	movwf	postinc1,c
  1733  002E00  0E0B               	movlw	11
  1734  002E02  6EE6               	movwf	postinc1,c
  1735  002E04  0E00               	movlw	0
  1736  002E06  6EE6               	movwf	postinc1,c
  1737  002E08  EC81  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  1738                           
  1739                           ; BSR set to: 0
  1740                           ;main.c: 344:     V.s_state = SEQ_STATE_DONE;
  1741  002E0C  0E04               	movlw	4
  1742  002E0E  6F89               	movwf	_V& (0+255),b	;volatile
  1743                           
  1744                           ; BSR set to: 0
  1745  002E10  92BE               	bcf	16318,1,c	;volatile
  1746  002E12  D044               	goto	l7926
  1747  002E14                     l7912:
  1748                           
  1749                           ; BSR set to: 0
  1750                           ;main.c: 352:     UART1_Write(0x15);
  1751  002E14  0E15               	movlw	21
  1752  002E16  6EE6               	movwf	postinc1,c
  1753  002E18  ECBD  F02B         	call	_UART1_Write	;wreg free
  1754                           
  1755                           ; BSR set to: 57
  1756                           ;main.c: 353:     sprintf(V.buf, " ERR R%d T%d E%d A%d #", V.r_l_state, V.t_l_state, V.e
      +                          rror, V.abort);
  1757  002E1C  0100               	movlb	0	; () banked
  1758  002E1E  51D4               	movf	(_V+75)& (0+255),w,b	;volatile
  1759  002E20  6EE6               	movwf	postinc1,c
  1760  002E22  0E00               	movlw	0
  1761  002E24  6EE6               	movwf	postinc1,c
  1762  002E26  51D3               	movf	(_V+74)& (0+255),w,b	;volatile
  1763  002E28  6EE6               	movwf	postinc1,c
  1764  002E2A  0E00               	movlw	0
  1765  002E2C  6EE6               	movwf	postinc1,c
  1766  002E2E  518C               	movf	(_V+3)& (0+255),w,b	;volatile
  1767  002E30  6EE6               	movwf	postinc1,c
  1768  002E32  0E00               	movlw	0
  1769  002E34  6EE6               	movwf	postinc1,c
  1770  002E36  518B               	movf	(_V+2)& (0+255),w,b	;volatile
  1771  002E38  6EE6               	movwf	postinc1,c
  1772  002E3A  0E00               	movlw	0
  1773  002E3C  6EE6               	movwf	postinc1,c
  1774  002E3E  0E3E               	movlw	STR_5& (0+255)
  1775  002E40  6EE6               	movwf	postinc1,c
  1776  002E42  0E89               	movlw	_V& (0+255)
  1777  002E44  0F04               	addlw	4
  1778  002E46  6EE6               	movwf	postinc1,c
  1779  002E48  0E0A               	movlw	10
  1780  002E4A  6EE6               	movwf	postinc1,c
  1781  002E4C  EC53  F025         	call	_sprintf	;wreg free
  1782                           
  1783                           ;main.c: 354:     wait_lcd_done();
  1784  002E50  EC25  F02F         	call	_wait_lcd_done	;wreg free
  1785                           
  1786                           ; BSR set to: 0
  1787                           ;main.c: 355:     eaDogM_WriteStringAtPos(0, 0, V.buf);
  1788  002E54  0E89               	movlw	_V& (0+255)
  1789  002E56  0F04               	addlw	4
  1790  002E58  6EE6               	movwf	postinc1,c
  1791  002E5A  0E00               	movlw	0
  1792  002E5C  6EE6               	movwf	postinc1,c
  1793  002E5E  0E00               	movlw	0
  1794  002E60  6EE6               	movwf	postinc1,c
  1795  002E62  EC81  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  1796  002E66                     l7920:
  1797                           
  1798                           ; BSR set to: 0
  1799                           ;main.c: 356:     V.s_state = SEQ_STATE_INIT;
  1800  002E66  6B89               	clrf	_V& (0+255),b	;volatile
  1801                           
  1802                           ;main.c: 357:     break;
  1803  002E68  D019               	goto	l7926
  1804  002E6A                     l7924:
  1805                           
  1806                           ; BSR set to: 0
  1807  002E6A  5189               	movf	_V& (0+255),w,b	;volatile
  1808  002E6C  6E47               	movwf	btemp+10,c
  1809  002E6E  6A48               	clrf	btemp+11,c
  1810                           
  1811                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1812                           ; Switch size 1, requested type "simple"
  1813                           ; Number of cases is 1, Range of values is 0 to 0
  1814                           ; switch strategies available:
  1815                           ; Name         Instructions Cycles
  1816                           ; simple_byte            4     3 (average)
  1817                           ;	Chosen strategy is simple_byte
  1818  002E70  5048               	movf	btemp+11,w,c
  1819  002E72  0A00               	xorlw	0	; case 0
  1820  002E74  A4D8               	btfss	status,2,c
  1821  002E76  D7CE               	goto	l7912
  1822                           
  1823                           ; BSR set to: 0
  1824                           ; Switch size 1, requested type "simple"
  1825                           ; Number of cases is 6, Range of values is 0 to 5
  1826                           ; switch strategies available:
  1827                           ; Name         Instructions Cycles
  1828                           ; simple_byte           19    10 (average)
  1829                           ;	Chosen strategy is simple_byte
  1830  002E78  5047               	movf	btemp+10,w,c
  1831  002E7A  0A00               	xorlw	0	; case 0
  1832  002E7C  B4D8               	btfsc	status,2,c
  1833  002E7E  D759               	goto	l1221
  1834  002E80  0A01               	xorlw	1	; case 1
  1835  002E82  B4D8               	btfsc	status,2,c
  1836  002E84  D765               	goto	l7876
  1837  002E86  0A03               	xorlw	3	; case 2
  1838  002E88  B4D8               	btfsc	status,2,c
  1839  002E8A  D797               	goto	l7894
  1840  002E8C  0A01               	xorlw	1	; case 3
  1841  002E8E  B4D8               	btfsc	status,2,c
  1842  002E90  D7A8               	goto	l1230
  1843  002E92  0A07               	xorlw	7	; case 4
  1844  002E94  B4D8               	btfsc	status,2,c
  1845  002E96  D7E7               	goto	l7920
  1846  002E98  0A01               	xorlw	1	; case 5
  1847  002E9A  D7BC               	goto	l7912
  1848  002E9C                     l7926:
  1849                           
  1850                           ;main.c: 359:    sprintf(V.buf, " HOST MODE     #");
  1851  002E9C  0E7B               	movlw	STR_6& (0+255)
  1852  002E9E  6EE6               	movwf	postinc1,c
  1853  002EA0  0E89               	movlw	_V& (0+255)
  1854  002EA2  0F04               	addlw	4
  1855  002EA4  6EE6               	movwf	postinc1,c
  1856  002EA6  0E02               	movlw	2
  1857  002EA8  6EE6               	movwf	postinc1,c
  1858  002EAA  EC53  F025         	call	_sprintf	;wreg free
  1859  002EAE                     l7928:
  1860                           
  1861                           ;main.c: 360:    V.buf[16] = 0;
  1862  002EAE  0100               	movlb	0	; () banked
  1863  002EB0  6B9D               	clrf	(_V+20)& (0+255),b	;volatile
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;main.c: 361:    wait_lcd_done();
  1867  002EB2  EC25  F02F         	call	_wait_lcd_done	;wreg free
  1868                           
  1869                           ; BSR set to: 0
  1870                           ;main.c: 362:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  1871  002EB6  0E89               	movlw	_V& (0+255)
  1872  002EB8  0F04               	addlw	4
  1873  002EBA  6EE6               	movwf	postinc1,c
  1874  002EBC  0E00               	movlw	0
  1875  002EBE  6EE6               	movwf	postinc1,c
  1876  002EC0  0E02               	movlw	2
  1877  002EC2  6EE6               	movwf	postinc1,c
  1878  002EC4  EC81  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  1879                           
  1880                           ;main.c: 363:    break;
  1881  002EC8  D02C               	goto	l7954
  1882  002ECA                     l7934:
  1883                           
  1884                           ; BSR set to: 0
  1885                           ;main.c: 365:    sprintf(V.buf, " EQUIP MODE    #");
  1886  002ECA  0E8C               	movlw	STR_7& (0+255)
  1887  002ECC  6EE6               	movwf	postinc1,c
  1888  002ECE  0E89               	movlw	_V& (0+255)
  1889  002ED0  0F04               	addlw	4
  1890  002ED2  6EE6               	movwf	postinc1,c
  1891  002ED4  0E02               	movlw	2
  1892  002ED6  6EE6               	movwf	postinc1,c
  1893  002ED8  EC53  F025         	call	_sprintf	;wreg free
  1894  002EDC  D7E8               	goto	l7928
  1895  002EDE                     l7942:
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;main.c: 371:    sprintf(V.buf, " LOG MODE      #");
  1899  002EDE  0E6A               	movlw	STR_8& (0+255)
  1900  002EE0  6EE6               	movwf	postinc1,c
  1901  002EE2  0E89               	movlw	_V& (0+255)
  1902  002EE4  0F04               	addlw	4
  1903  002EE6  6EE6               	movwf	postinc1,c
  1904  002EE8  0E02               	movlw	2
  1905  002EEA  6EE6               	movwf	postinc1,c
  1906  002EEC  EC53  F025         	call	_sprintf	;wreg free
  1907  002EF0  D7DE               	goto	l7928
  1908  002EF2                     l1240:
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;main.c: 378:    V.ui_state = UI_STATE_INIT;
  1912  002EF2  6B8A               	clrf	(_V+1)& (0+255),b	;volatile
  1913                           
  1914                           ;main.c: 379:    break;
  1915  002EF4  D016               	goto	l7954
  1916  002EF6                     l7952:
  1917                           
  1918                           ; BSR set to: 0
  1919  002EF6  518A               	movf	(_V+1)& (0+255),w,b	;volatile
  1920  002EF8  6E47               	movwf	btemp+10,c
  1921  002EFA  6A48               	clrf	btemp+11,c
  1922                           
  1923                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1924                           ; Switch size 1, requested type "simple"
  1925                           ; Number of cases is 1, Range of values is 0 to 0
  1926                           ; switch strategies available:
  1927                           ; Name         Instructions Cycles
  1928                           ; simple_byte            4     3 (average)
  1929                           ;	Chosen strategy is simple_byte
  1930  002EFC  5048               	movf	btemp+11,w,c
  1931  002EFE  0A00               	xorlw	0	; case 0
  1932  002F00  A4D8               	btfss	status,2,c
  1933  002F02  D7F7               	goto	l1240
  1934                           
  1935                           ; BSR set to: 0
  1936                           ; Switch size 1, requested type "simple"
  1937                           ; Number of cases is 5, Range of values is 0 to 5
  1938                           ; switch strategies available:
  1939                           ; Name         Instructions Cycles
  1940                           ; simple_byte           16     9 (average)
  1941                           ;	Chosen strategy is simple_byte
  1942  002F04  5047               	movf	btemp+10,w,c
  1943  002F06  0A00               	xorlw	0	; case 0
  1944  002F08  B4D8               	btfsc	status,2,c
  1945  002F0A  D676               	goto	l7836
  1946  002F0C  0A01               	xorlw	1	; case 1
  1947  002F0E  B4D8               	btfsc	status,2,c
  1948  002F10  D7DC               	goto	l7934
  1949  002F12  0A03               	xorlw	3	; case 2
  1950  002F14  B4D8               	btfsc	status,2,c
  1951  002F16  D7A9               	goto	l7924
  1952  002F18  0A06               	xorlw	6	; case 4
  1953  002F1A  B4D8               	btfsc	status,2,c
  1954  002F1C  D7E0               	goto	l7942
  1955  002F1E  0A01               	xorlw	1	; case 5
  1956  002F20  D7E8               	goto	l1240
  1957  002F22                     l7954:
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;main.c: 381:   sprintf(V.buf, " R%d T%d E%d A%d   #", V.r_l_state, V.t_l_state, V.error
      +                          , V.abort);
  1961  002F22  51D4               	movf	(_V+75)& (0+255),w,b	;volatile
  1962  002F24  6EE6               	movwf	postinc1,c
  1963  002F26  0E00               	movlw	0
  1964  002F28  6EE6               	movwf	postinc1,c
  1965  002F2A  51D3               	movf	(_V+74)& (0+255),w,b	;volatile
  1966  002F2C  6EE6               	movwf	postinc1,c
  1967  002F2E  0E00               	movlw	0
  1968  002F30  6EE6               	movwf	postinc1,c
  1969  002F32  518C               	movf	(_V+3)& (0+255),w,b	;volatile
  1970  002F34  6EE6               	movwf	postinc1,c
  1971  002F36  0E00               	movlw	0
  1972  002F38  6EE6               	movwf	postinc1,c
  1973  002F3A  518B               	movf	(_V+2)& (0+255),w,b	;volatile
  1974  002F3C  6EE6               	movwf	postinc1,c
  1975  002F3E  0E00               	movlw	0
  1976  002F40  6EE6               	movwf	postinc1,c
  1977  002F42  0E55               	movlw	STR_9& (0+255)
  1978  002F44  6EE6               	movwf	postinc1,c
  1979  002F46  0E89               	movlw	_V& (0+255)
  1980  002F48  0F04               	addlw	4
  1981  002F4A  6EE6               	movwf	postinc1,c
  1982  002F4C  0E0A               	movlw	10
  1983  002F4E  6EE6               	movwf	postinc1,c
  1984  002F50  EC53  F025         	call	_sprintf	;wreg free
  1985                           
  1986                           ;main.c: 382:   V.buf[16] = 0;
  1987  002F54  0100               	movlb	0	; () banked
  1988  002F56  6B9D               	clrf	(_V+20)& (0+255),b	;volatile
  1989                           
  1990                           ; BSR set to: 0
  1991                           ;main.c: 383:   wait_lcd_done();
  1992  002F58  EC25  F02F         	call	_wait_lcd_done	;wreg free
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;main.c: 384:   eaDogM_WriteStringAtPos(1, 0, V.buf);
  1996  002F5C  0E89               	movlw	_V& (0+255)
  1997  002F5E  0F04               	addlw	4
  1998  002F60  6EE6               	movwf	postinc1,c
  1999  002F62  0E00               	movlw	0
  2000  002F64  6EE6               	movwf	postinc1,c
  2001  002F66  0E01               	movlw	1
  2002  002F68  6EE6               	movwf	postinc1,c
  2003  002F6A  EC81  F02C         	call	_eaDogM_WriteStringAtPos	;wreg free
  2004  002F6E  D7C3               	goto	l7952
  2005  002F70                     __end_of_main:
  2006                           	opt callstack 0
  2007                           
  2008 ;; *************** function _t_protocol *****************
  2009 ;; Defined at:
  2010 ;;		line 126 in file "gemsecs.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  t_link          1  [STACK] PTR enum E16164
  2013 ;;		 -> V(80), 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  block           3  [STACK] struct response_type
  2016 ;;  rxData          1  [STACK] unsigned char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1  [STACK] enum E16902
  2019 ;; Registers used:
  2020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+6, btemp+7, btemp
      ++8, btemp+9, btemp+10, btemp+11, prodl, prodh
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2030 ;;Total ram usage:        0 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    5
  2033 ;; This function calls:
  2034 ;;		_StartTimer
  2035 ;;		_TimerDone
  2036 ;;		_UART1_Read
  2037 ;;		_UART1_Write
  2038 ;;		_UART1_is_rx_ready
  2039 ;;		_UART1_put_buffer
  2040 ;;		_WaitMs
  2041 ;;		_secs_II_message
  2042 ;;		_secs_send
  2043 ;; This function is called by:
  2044 ;;		_main
  2045 ;; This function uses a reentrant model
  2046 ;;
  2047                           
  2048                           	psect	text1
  2049  0041EE                     __ptext1:
  2050                           	opt callstack 0
  2051  0041EE                     _t_protocol:
  2052                           	opt callstack 0
  2053                           
  2054                           ; BSR set to: 0
  2055                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2056  0041EE  52E6               	movf	postinc1,f,c
  2057  0041F0  52E6               	movf	postinc1,f,c
  2058  0041F2  52E6               	movf	postinc1,f,c
  2059  0041F4  52E6               	movf	postinc1,f,c
  2060                           
  2061                           ;gemsecs.c: 126: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 127: {;gemsecs.
      +                          c: 128:  uint8_t rxData;;gemsecs.c: 129:  response_type block;;gemsecs.c: 131:  switch (
      +                          *t_link) {
  2062                           
  2063                           ;incstack = 0
  2064  0041F6  D0DE               	goto	l7816
  2065  0041F8                     l1535:
  2066                           
  2067                           ;gemsecs.c: 133:   V.error = LINK_ERROR_NONE;
  2068  0041F8  0100               	movlb	0	; () banked
  2069  0041FA  6BD3               	clrf	(_V+74)& (0+255),b	;volatile
  2070                           
  2071                           ; BSR set to: 0
  2072                           ;gemsecs.c: 134:   UART1_Write(0x05);
  2073  0041FC  0E05               	movlw	5
  2074  0041FE  6EE6               	movwf	postinc1,c
  2075  004200  ECBD  F02B         	call	_UART1_Write	;wreg free
  2076                           
  2077                           ; BSR set to: 57
  2078                           ;gemsecs.c: 135:   StartTimer(TMR_T2, 2000);
  2079  004204  0ED0               	movlw	208
  2080  004206  6EE6               	movwf	postinc1,c
  2081  004208  0E07               	movlw	7
  2082  00420A  6EE6               	movwf	postinc1,c
  2083  00420C  0E02               	movlw	2
  2084  00420E  6EE6               	movwf	postinc1,c
  2085  004210  EC1B  F02C         	call	_StartTimer	;wreg free
  2086                           
  2087                           ;gemsecs.c: 136:   *t_link = LINK_STATE_ENQ;
  2088                           ;stkvar	_t_link @ sp[(-4)+-1]
  2089  004214  0EFB               	movlw	-5
  2090  004216  50E3               	movf	plusw1,w,c
  2091  004218  6ED9               	movwf	fsr2l,c
  2092  00421A  6ADA               	clrf	fsr2h,c
  2093  00421C  0E01               	movlw	1
  2094  00421E  6EDF               	movwf	indf2,c
  2095                           
  2096                           ;gemsecs.c: 138:   WaitMs(5);
  2097  004220  0E05               	movlw	5
  2098  004222  6EE6               	movwf	postinc1,c
  2099  004224  0E00               	movlw	0
  2100  004226  6EE6               	movwf	postinc1,c
  2101  004228  ECD8  F02C         	call	_WaitMs	;wreg free
  2102                           
  2103                           ;gemsecs.c: 139:   UART1_put_buffer(0x04);
  2104  00422C  0E04               	movlw	4
  2105  00422E  6EE6               	movwf	postinc1,c
  2106  004230  ECC3  F02C         	call	_UART1_put_buffer	;wreg free
  2107                           
  2108                           ;gemsecs.c: 141:   break;
  2109  004234  D0E0               	goto	l7818
  2110  004236                     l7756:
  2111                           
  2112                           ;gemsecs.c: 143:   if (TimerDone(TMR_T2)) {
  2113  004236  0E02               	movlw	2
  2114  004238  6EE6               	movwf	postinc1,c
  2115  00423A  EC7F  F02E         	call	_TimerDone	;wreg free
  2116  00423E  503D               	movf	btemp,w,c
  2117  004240  B4D8               	btfsc	status,2,c
  2118  004242  D009               	goto	l7762
  2119                           
  2120                           ;gemsecs.c: 144:    V.error = LINK_ERROR_T2;
  2121  004244  0E02               	movlw	2
  2122  004246  0100               	movlb	0	; () banked
  2123  004248  6FD3               	movwf	(_V+74)& (0+255),b	;volatile
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;gemsecs.c: 145:    *t_link = LINK_STATE_NAK;
  2127                           ;stkvar	_t_link @ sp[(-4)+-1]
  2128  00424A  0EFB               	movlw	-5
  2129  00424C  50E3               	movf	plusw1,w,c
  2130  00424E  6ED9               	movwf	fsr2l,c
  2131  004250  6ADA               	clrf	fsr2h,c
  2132  004252  0E05               	movlw	5
  2133  004254  D0AD               	goto	L5
  2134  004256                     l7762:
  2135                           
  2136                           ;gemsecs.c: 147:    if (UART1_is_rx_ready()) {
  2137  004256  ECD9  F02F         	call	_UART1_is_rx_ready	;wreg free
  2138  00425A  503D               	movf	btemp,w,c
  2139  00425C  B4D8               	btfsc	status,2,c
  2140  00425E  D0CB               	goto	l7818
  2141                           
  2142                           ;gemsecs.c: 148:     rxData = UART1_Read();
  2143  004260  ECDC  F02B         	call	_UART1_Read	;wreg free
  2144                           
  2145                           ;stkvar	_rxData @ sp[(-4)+3]
  2146  004264  0EFF               	movlw	-1
  2147  004266  0060  F0F7  FFE3   	movff	btemp,plusw1
  2148                           
  2149                           ; BSR set to: 57
  2150                           ;gemsecs.c: 149:     if (rxData == 0x04) {
  2151                           ;stkvar	_rxData @ sp[(-4)+3]
  2152  00426C  0EFF               	movlw	-1
  2153  00426E  006F FF8C  F03D    	movff	plusw1,btemp
  2154  004274  0E04               	movlw	4
  2155  004276  183D               	xorwf	btemp,w,c
  2156  004278  A4D8               	btfss	status,2,c
  2157  00427A  D0BD               	goto	l7818
  2158                           
  2159                           ; BSR set to: 57
  2160                           ;gemsecs.c: 150:      StartTimer(TMR_T3, 5000);
  2161  00427C  0E88               	movlw	136
  2162  00427E  6EE6               	movwf	postinc1,c
  2163  004280  0E13               	movlw	19
  2164  004282  6EE6               	movwf	postinc1,c
  2165  004284  0E03               	movlw	3
  2166  004286  6EE6               	movwf	postinc1,c
  2167  004288  EC1B  F02C         	call	_StartTimer	;wreg free
  2168                           
  2169                           ;gemsecs.c: 151:      *t_link = LINK_STATE_EOT;
  2170                           ;stkvar	_t_link @ sp[(-4)+-1]
  2171  00428C  0EFB               	movlw	-5
  2172  00428E  50E3               	movf	plusw1,w,c
  2173  004290  6ED9               	movwf	fsr2l,c
  2174  004292  6ADA               	clrf	fsr2h,c
  2175  004294  0E02               	movlw	2
  2176  004296  D08C               	goto	L5
  2177  004298                     l7772:
  2178                           
  2179                           ;gemsecs.c: 157:   block = secs_II_message(V.stream, V.function);
  2180  004298  0100               	movlb	0	; () banked
  2181  00429A  51D2               	movf	(_V+73)& (0+255),w,b	;volatile
  2182  00429C  6EE6               	movwf	postinc1,c
  2183  00429E  51D1               	movf	(_V+72)& (0+255),w,b	;volatile
  2184  0042A0  6EE6               	movwf	postinc1,c
  2185  0042A2  ECE2  F022         	call	_secs_II_message	;wreg free
  2186                           
  2187                           ;stkvar	_block @ sp[(-4)+0]
  2188  0042A6  0EFC               	movlw	-4
  2189  0042A8  0060  F0F7  FFE3   	movff	btemp,plusw1
  2190  0042AE  0EFD               	movlw	-3
  2191  0042B0  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  2192  0042B6  0EFE               	movlw	-2
  2193  0042B8  0060  F0FF  FFE3   	movff	btemp+2,plusw1
  2194                           
  2195                           ; BSR set to: 0
  2196                           ;gemsecs.c: 158:   if (V.abort == LINK_ERROR_ABORT) {
  2197  0042BE  0E07               	movlw	7
  2198  0042C0  19D4               	xorwf	(_V+75)& (0+255),w,b	;volatile
  2199  0042C2  A4D8               	btfss	status,2,c
  2200  0042C4  D019               	goto	l7780
  2201                           
  2202                           ; BSR set to: 0
  2203                           ;gemsecs.c: 159:    secs_send((uint8_t*) block.header, block.length, 0);
  2204  0042C6  0E00               	movlw	0
  2205  0042C8  6EE6               	movwf	postinc1,c
  2206                           
  2207                           ;stkvar	_block @ sp[(-5)+0]
  2208  0042CA  0EFD               	movlw	253
  2209  0042CC  24E1               	addwf	fsr1l,w,c
  2210  0042CE  6ED9               	movwf	fsr2l,c
  2211  0042D0  0EFF               	movlw	255
  2212  0042D2  20E2               	addwfc	fsr1h,w,c
  2213  0042D4  6EDA               	movwf	fsr2h,c
  2214  0042D6  50DF               	movf	indf2,w,c
  2215  0042D8  6EE6               	movwf	postinc1,c
  2216                           
  2217                           ;stkvar	_block @ sp[(-6)+0]
  2218  0042DA  0EFA               	movlw	-6
  2219  0042DC  006F FF8F FFE6     	movff	plusw1,postinc1
  2220  0042E2  006F FF8F FFE6     	movff	plusw1,postinc1
  2221  0042E8  EC06  F022         	call	_secs_send	;wreg free
  2222  0042EC                     l7778:
  2223                           
  2224                           ;gemsecs.c: 160:    *t_link = LINK_STATE_ERROR;
  2225                           ;stkvar	_t_link @ sp[(-4)+-1]
  2226  0042EC  0EFB               	movlw	-5
  2227  0042EE  50E3               	movf	plusw1,w,c
  2228  0042F0  6ED9               	movwf	fsr2l,c
  2229  0042F2  6ADA               	clrf	fsr2h,c
  2230  0042F4  0E06               	movlw	6
  2231  0042F6  D01C               	goto	L3
  2232  0042F8                     l7780:
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;gemsecs.c: 162:    secs_send((uint8_t*) block.header, block.length, 0);
  2236  0042F8  0E00               	movlw	0
  2237  0042FA  6EE6               	movwf	postinc1,c
  2238                           
  2239                           ;stkvar	_block @ sp[(-5)+0]
  2240  0042FC  0EFD               	movlw	253
  2241  0042FE  24E1               	addwf	fsr1l,w,c
  2242  004300  6ED9               	movwf	fsr2l,c
  2243  004302  0EFF               	movlw	255
  2244  004304  20E2               	addwfc	fsr1h,w,c
  2245  004306  6EDA               	movwf	fsr2h,c
  2246  004308  50DF               	movf	indf2,w,c
  2247  00430A  6EE6               	movwf	postinc1,c
  2248                           
  2249                           ;stkvar	_block @ sp[(-6)+0]
  2250  00430C  0EFA               	movlw	-6
  2251  00430E  006F FF8F FFE6     	movff	plusw1,postinc1
  2252  004314  006F FF8F FFE6     	movff	plusw1,postinc1
  2253  00431A  EC06  F022         	call	_secs_send	;wreg free
  2254                           
  2255                           ;gemsecs.c: 163:    if (V.error == LINK_ERROR_NONE) {
  2256  00431E  0100               	movlb	0	; () banked
  2257  004320  51D3               	movf	(_V+74)& (0+255),w,b	;volatile
  2258  004322  A4D8               	btfss	status,2,c
  2259  004324  D7E3               	goto	l7778
  2260                           
  2261                           ; BSR set to: 0
  2262                           ;gemsecs.c: 164:     *t_link = LINK_STATE_ACK;
  2263                           ;stkvar	_t_link @ sp[(-4)+-1]
  2264  004326  0EFB               	movlw	-5
  2265  004328  50E3               	movf	plusw1,w,c
  2266  00432A  6ED9               	movwf	fsr2l,c
  2267  00432C  6ADA               	clrf	fsr2h,c
  2268  00432E  0E03               	movlw	3
  2269  004330                     L3:
  2270  004330  6EDF               	movwf	indf2,c
  2271                           
  2272                           ;gemsecs.c: 170:   WaitMs(5);
  2273                           
  2274                           ;gemsecs.c: 165:    } else {
  2275  004332  0E05               	movlw	5
  2276  004334  6EE6               	movwf	postinc1,c
  2277  004336  0E00               	movlw	0
  2278  004338  6EE6               	movwf	postinc1,c
  2279  00433A  ECD8  F02C         	call	_WaitMs	;wreg free
  2280                           
  2281                           ;gemsecs.c: 171:   UART1_put_buffer(0x06);
  2282  00433E  0E06               	movlw	6
  2283  004340  6EE6               	movwf	postinc1,c
  2284  004342  ECC3  F02C         	call	_UART1_put_buffer	;wreg free
  2285                           
  2286                           ;gemsecs.c: 173:   break;
  2287  004346  D057               	goto	l7818
  2288  004348                     l7792:
  2289                           
  2290                           ;gemsecs.c: 175:   if (TimerDone(TMR_T3)) {
  2291  004348  0E03               	movlw	3
  2292  00434A  6EE6               	movwf	postinc1,c
  2293  00434C  EC7F  F02E         	call	_TimerDone	;wreg free
  2294  004350  503D               	movf	btemp,w,c
  2295  004352  B4D8               	btfsc	status,2,c
  2296  004354  D002               	goto	l7798
  2297                           
  2298                           ;gemsecs.c: 176:    V.error = LINK_ERROR_T3;
  2299  004356  0E03               	movlw	3
  2300  004358  D776               	goto	L4
  2301  00435A                     l7798:
  2302                           
  2303                           ;gemsecs.c: 179:    if (UART1_is_rx_ready()) {
  2304  00435A  ECD9  F02F         	call	_UART1_is_rx_ready	;wreg free
  2305  00435E  503D               	movf	btemp,w,c
  2306  004360  B4D8               	btfsc	status,2,c
  2307  004362  D049               	goto	l7818
  2308                           
  2309                           ;gemsecs.c: 180:     rxData = UART1_Read();
  2310  004364  ECDC  F02B         	call	_UART1_Read	;wreg free
  2311                           
  2312                           ;stkvar	_rxData @ sp[(-4)+3]
  2313  004368  0EFF               	movlw	-1
  2314  00436A  0060  F0F7  FFE3   	movff	btemp,plusw1
  2315                           
  2316                           ; BSR set to: 57
  2317                           ;gemsecs.c: 181:     if (rxData == 0x06) {
  2318                           ;stkvar	_rxData @ sp[(-4)+3]
  2319  004370  0EFF               	movlw	-1
  2320  004372  006F FF8C  F03D    	movff	plusw1,btemp
  2321  004378  0E06               	movlw	6
  2322  00437A  183D               	xorwf	btemp,w,c
  2323  00437C  A4D8               	btfss	status,2,c
  2324  00437E  D03B               	goto	l7818
  2325                           
  2326                           ; BSR set to: 57
  2327                           ;gemsecs.c: 182:      *t_link = LINK_STATE_DONE;
  2328                           ;stkvar	_t_link @ sp[(-4)+-1]
  2329  004380  0EFB               	movlw	-5
  2330  004382  50E3               	movf	plusw1,w,c
  2331  004384  6ED9               	movwf	fsr2l,c
  2332  004386  6ADA               	clrf	fsr2h,c
  2333  004388  0E04               	movlw	4
  2334  00438A  D012               	goto	L5
  2335  00438C                     l7806:
  2336                           
  2337                           ;gemsecs.c: 188:   *t_link = LINK_STATE_ERROR;
  2338                           ;stkvar	_t_link @ sp[(-4)+-1]
  2339  00438C  0EFB               	movlw	-5
  2340  00438E  50E3               	movf	plusw1,w,c
  2341  004390  6ED9               	movwf	fsr2l,c
  2342  004392  6ADA               	clrf	fsr2h,c
  2343  004394  0E06               	movlw	6
  2344  004396  6EDF               	movwf	indf2,c
  2345                           
  2346                           ;gemsecs.c: 189:   while ((uart1RxCount)) {
  2347  004398  D002               	goto	l7810
  2348  00439A                     l7808:
  2349                           
  2350                           ;gemsecs.c: 190:    UART1_Read();
  2351  00439A  ECDC  F02B         	call	_UART1_Read	;wreg free
  2352  00439E                     l7810:
  2353                           
  2354                           ;gemsecs.c: 189:   while ((uart1RxCount)) {
  2355  00439E  5037               	movf	_uart1RxCount,w,c	;volatile
  2356  0043A0  B4D8               	btfsc	status,2,c
  2357  0043A2  D029               	goto	l7818
  2358  0043A4  D7FA               	goto	l7808
  2359  0043A6                     l7812:
  2360                           
  2361                           ;gemsecs.c: 198:   *t_link = LINK_STATE_IDLE;
  2362                           ;stkvar	_t_link @ sp[(-4)+-1]
  2363  0043A6  0EFB               	movlw	-5
  2364  0043A8  50E3               	movf	plusw1,w,c
  2365  0043AA  6ED9               	movwf	fsr2l,c
  2366  0043AC  6ADA               	clrf	fsr2h,c
  2367  0043AE  0E00               	movlw	0
  2368  0043B0                     L5:
  2369  0043B0  6EDF               	movwf	indf2,c
  2370                           
  2371                           ;gemsecs.c: 199:   break;
  2372  0043B2  D021               	goto	l7818
  2373  0043B4                     l7816:
  2374                           
  2375                           ;stkvar	_t_link @ sp[(-4)+-1]
  2376  0043B4  0EFB               	movlw	-5
  2377  0043B6  50E3               	movf	plusw1,w,c
  2378  0043B8  6ED9               	movwf	fsr2l,c
  2379  0043BA  6ADA               	clrf	fsr2h,c
  2380  0043BC  50DF               	movf	indf2,w,c
  2381  0043BE  6E47               	movwf	btemp+10,c
  2382  0043C0  6A48               	clrf	btemp+11,c
  2383                           
  2384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2385                           ; Switch size 1, requested type "simple"
  2386                           ; Number of cases is 1, Range of values is 0 to 0
  2387                           ; switch strategies available:
  2388                           ; Name         Instructions Cycles
  2389                           ; simple_byte            4     3 (average)
  2390                           ;	Chosen strategy is simple_byte
  2391  0043C2  5048               	movf	btemp+11,w,c
  2392  0043C4  0A00               	xorlw	0	; case 0
  2393  0043C6  A4D8               	btfss	status,2,c
  2394  0043C8  D7EE               	goto	l7812
  2395                           
  2396                           ; Switch size 1, requested type "simple"
  2397                           ; Number of cases is 7, Range of values is 0 to 6
  2398                           ; switch strategies available:
  2399                           ; Name         Instructions Cycles
  2400                           ; simple_byte           22    12 (average)
  2401                           ;	Chosen strategy is simple_byte
  2402  0043CA  5047               	movf	btemp+10,w,c
  2403  0043CC  0A00               	xorlw	0	; case 0
  2404  0043CE  B4D8               	btfsc	status,2,c
  2405  0043D0  D713               	goto	l1535
  2406  0043D2  0A01               	xorlw	1	; case 1
  2407  0043D4  B4D8               	btfsc	status,2,c
  2408  0043D6  D72F               	goto	l7756
  2409  0043D8  0A03               	xorlw	3	; case 2
  2410  0043DA  B4D8               	btfsc	status,2,c
  2411  0043DC  D75D               	goto	l7772
  2412  0043DE  0A01               	xorlw	1	; case 3
  2413  0043E0  B4D8               	btfsc	status,2,c
  2414  0043E2  D7B2               	goto	l7792
  2415  0043E4  0A07               	xorlw	7	; case 4
  2416  0043E6  B4D8               	btfsc	status,2,c
  2417  0043E8  D006               	goto	l7818
  2418  0043EA  0A01               	xorlw	1	; case 5
  2419  0043EC  B4D8               	btfsc	status,2,c
  2420  0043EE  D7CE               	goto	l7806
  2421  0043F0  0A03               	xorlw	3	; case 6
  2422  0043F2  A4D8               	btfss	status,2,c
  2423  0043F4  D7D8               	goto	l7812
  2424  0043F6                     l7818:
  2425                           
  2426                           ;gemsecs.c: 202:  return *t_link;
  2427                           ;stkvar	_t_link @ sp[(-4)+-1]
  2428  0043F6  0EFB               	movlw	-5
  2429  0043F8  50E3               	movf	plusw1,w,c
  2430  0043FA  6ED9               	movwf	fsr2l,c
  2431  0043FC  6ADA               	clrf	fsr2h,c
  2432  0043FE  50DF               	movf	indf2,w,c
  2433  004400  6E3D               	movwf	btemp,c
  2434                           
  2435                           ; _t_protocol: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  2436  004402  0EFB               	movlw	251
  2437  004404  26E1               	addwf	fsr1l,f,c
  2438  004406  0EFF               	movlw	255
  2439  004408  22E2               	addwfc	fsr1h,f,c
  2440  00440A  0012               	return		;funcret
  2441  00440C                     __end_of_t_protocol:
  2442                           	opt callstack 0
  2443                           
  2444 ;; *************** function _secs_II_message *****************
  2445 ;; Defined at:
  2446 ;;		line 244 in file "gemsecs.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;  stream          1  [STACK] unsigned char 
  2449 ;;  function        1  [STACK] unsigned char 
  2450 ;; Auto vars:     Size  Location     Type
  2451 ;;		None
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  3  [STACK] struct response_type
  2454 ;; Registers used:
  2455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+10, btemp+11
  2456 ;; Tracked objects:
  2457 ;;		On entry : 3F/0
  2458 ;;		On exit  : 3F/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2465 ;;Total ram usage:        0 bytes
  2466 ;; Hardware stack levels used:    1
  2467 ;; Hardware stack levels required when called:    3
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_t_protocol
  2472 ;; This function uses a reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text2
  2476  0045C4                     __ptext2:
  2477                           	opt callstack 0
  2478  0045C4                     _secs_II_message:
  2479                           	opt callstack 26
  2480                           
  2481                           ;gemsecs.c: 244: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 245: {;gemsecs.c: 246:  static response_type block;;gemsecs.c: 248:  V.abort = LINK_
      +                          ERROR_NONE;
  2482                           
  2483                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2484                           ;incstack = 0
  2485  0045C4  0100               	movlb	0	; () banked
  2486  0045C6  6BD4               	clrf	(_V+75)& (0+255),b	;volatile
  2487                           
  2488                           ;gemsecs.c: 250:  switch (stream) {
  2489  0045C8  D067               	goto	l6146
  2490  0045CA                     l6080:
  2491                           
  2492                           ; BSR set to: 0
  2493                           ;gemsecs.c: 254:    block.header = (uint8_t*) & H12[0];
  2494  0045CA  0E92               	movlw	low _H12
  2495  0045CC  6E01               	movwf	secs_II_message@block,c
  2496  0045CE  0E01               	movlw	high _H12
  2497  0045D0  6E02               	movwf	secs_II_message@block+1,c
  2498                           
  2499                           ; BSR set to: 0
  2500                           ;gemsecs.c: 255:    block.length = sizeof(header12);
  2501  0045D2  0E0F               	movlw	15
  2502  0045D4  D04F               	goto	L11
  2503  0045D6                     l6084:
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;gemsecs.c: 258:    block.header = (uint8_t*) & H10[0];
  2507  0045D6  0E00               	movlw	low _H10
  2508  0045D8  6E01               	movwf	secs_II_message@block,c
  2509  0045DA  0E01               	movlw	high _H10
  2510  0045DC  6E02               	movwf	secs_II_message@block+1,c
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;gemsecs.c: 259:    block.length = sizeof(header10);
  2514  0045DE  0E0D               	movlw	13
  2515  0045E0  D049               	goto	L11
  2516  0045E2                     l6088:
  2517                           
  2518                           ; BSR set to: 0
  2519                           ;gemsecs.c: 262:    block.header = (uint8_t*) & H14[0];
  2520  0045E2  0E71               	movlw	low _H14
  2521  0045E4  6E01               	movwf	secs_II_message@block,c
  2522  0045E6  0E01               	movlw	high _H14
  2523  0045E8  6E02               	movwf	secs_II_message@block+1,c
  2524                           
  2525                           ; BSR set to: 0
  2526                           ;gemsecs.c: 263:    block.length = sizeof(header14);
  2527  0045EA  0E11               	movlw	17
  2528  0045EC  D043               	goto	L11
  2529  0045EE                     l6092:
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;gemsecs.c: 266:    block.header = (uint8_t*) & H18[0];
  2533  0045EE  0E5C               	movlw	low _H18
  2534  0045F0  6E01               	movwf	secs_II_message@block,c
  2535  0045F2  0E01               	movlw	high _H18
  2536  0045F4  6E02               	movwf	secs_II_message@block+1,c
  2537                           
  2538                           ; BSR set to: 0
  2539                           ;gemsecs.c: 267:    block.length = sizeof(header18);
  2540  0045F6  0E15               	movlw	21
  2541  0045F8  D03D               	goto	L11
  2542  0045FA                     l6096:
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;gemsecs.c: 270:    block.header = (uint8_t*) & H10[2];
  2546  0045FA  0E1A               	movlw	low (_H10+26)
  2547  0045FC  6E01               	movwf	secs_II_message@block,c
  2548  0045FE  0E01               	movlw	high (_H10+26)
  2549  004600  6E02               	movwf	secs_II_message@block+1,c
  2550                           
  2551                           ; BSR set to: 0
  2552                           ;gemsecs.c: 271:    block.length = sizeof(header10);
  2553  004602  0E0D               	movlw	13
  2554  004604  6E03               	movwf	secs_II_message@block+2,c
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;gemsecs.c: 272:    V.abort = LINK_ERROR_ABORT;
  2558  004606  0E07               	movlw	7
  2559  004608  6FD4               	movwf	(_V+75)& (0+255),b	;volatile
  2560                           
  2561                           ;gemsecs.c: 273:    break;
  2562  00460A  D059               	goto	l6148
  2563  00460C                     l6104:
  2564                           
  2565                           ; BSR set to: 0
  2566                           ;stkvar	_function @ sp[(0)+-2]
  2567  00460C  0EFE               	movlw	-2
  2568  00460E  50E3               	movf	plusw1,w,c
  2569  004610  6E47               	movwf	btemp+10,c
  2570  004612  6A48               	clrf	btemp+11,c
  2571                           
  2572                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2573                           ; Switch size 1, requested type "simple"
  2574                           ; Number of cases is 1, Range of values is 0 to 0
  2575                           ; switch strategies available:
  2576                           ; Name         Instructions Cycles
  2577                           ; simple_byte            4     3 (average)
  2578                           ;	Chosen strategy is simple_byte
  2579  004614  5048               	movf	btemp+11,w,c
  2580  004616  0A00               	xorlw	0	; case 0
  2581  004618  A4D8               	btfss	status,2,c
  2582  00461A  D7EF               	goto	l6096
  2583                           
  2584                           ; BSR set to: 0
  2585                           ; Switch size 1, requested type "simple"
  2586                           ; Number of cases is 4, Range of values is 1 to 4
  2587                           ; switch strategies available:
  2588                           ; Name         Instructions Cycles
  2589                           ; simple_byte           13     7 (average)
  2590                           ;	Chosen strategy is simple_byte
  2591  00461C  5047               	movf	btemp+10,w,c
  2592  00461E  0A01               	xorlw	1	; case 1
  2593  004620  B4D8               	btfsc	status,2,c
  2594  004622  D7D3               	goto	l6080
  2595  004624  0A03               	xorlw	3	; case 2
  2596  004626  B4D8               	btfsc	status,2,c
  2597  004628  D7D6               	goto	l6084
  2598  00462A  0A01               	xorlw	1	; case 3
  2599  00462C  B4D8               	btfsc	status,2,c
  2600  00462E  D7D9               	goto	l6088
  2601  004630  0A07               	xorlw	7	; case 4
  2602  004632  B4D8               	btfsc	status,2,c
  2603  004634  D7DC               	goto	l6092
  2604  004636  D7E1               	goto	l6096
  2605  004638                     l6106:
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;gemsecs.c: 279:    block.header = (uint8_t*) & H24[0];
  2609  004638  0E41               	movlw	low _H24
  2610  00463A  6E01               	movwf	secs_II_message@block,c
  2611  00463C  0E01               	movlw	high _H24
  2612  00463E  6E02               	movwf	secs_II_message@block+1,c
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;gemsecs.c: 280:    block.length = sizeof(header24);
  2616  004640  0E1B               	movlw	27
  2617  004642  D018               	goto	L11
  2618  004644                     l6118:
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;stkvar	_function @ sp[(0)+-2]
  2622  004644  0EFE               	movlw	-2
  2623  004646  50E3               	movf	plusw1,w,c
  2624  004648  6E47               	movwf	btemp+10,c
  2625  00464A  6A48               	clrf	btemp+11,c
  2626                           
  2627                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2628                           ; Switch size 1, requested type "simple"
  2629                           ; Number of cases is 1, Range of values is 0 to 0
  2630                           ; switch strategies available:
  2631                           ; Name         Instructions Cycles
  2632                           ; simple_byte            4     3 (average)
  2633                           ;	Chosen strategy is simple_byte
  2634  00464C  5048               	movf	btemp+11,w,c
  2635  00464E  0A00               	xorlw	0	; case 0
  2636  004650  A4D8               	btfss	status,2,c
  2637  004652  D7D3               	goto	l6096
  2638                           
  2639                           ; BSR set to: 0
  2640                           ; Switch size 1, requested type "simple"
  2641                           ; Number of cases is 1, Range of values is 17 to 17
  2642                           ; switch strategies available:
  2643                           ; Name         Instructions Cycles
  2644                           ; simple_byte            4     3 (average)
  2645                           ;	Chosen strategy is simple_byte
  2646  004654  5047               	movf	btemp+10,w,c
  2647  004656  0A11               	xorlw	17	; case 17
  2648  004658  B4D8               	btfsc	status,2,c
  2649  00465A  D7EE               	goto	l6106
  2650  00465C  D7CE               	goto	l6096
  2651  00465E                     l6120:
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;gemsecs.c: 292:    block.header = (uint8_t*) & H13[0];
  2655  00465E  0E82               	movlw	low _H13
  2656  004660  6E01               	movwf	secs_II_message@block,c
  2657  004662  0E01               	movlw	high _H13
  2658  004664  6E02               	movwf	secs_II_message@block+1,c
  2659                           
  2660                           ; BSR set to: 0
  2661                           ;gemsecs.c: 293:    block.length = sizeof(header13);
  2662  004666  0E10               	movlw	16
  2663  004668  D005               	goto	L11
  2664  00466A                     l6124:
  2665                           
  2666                           ; BSR set to: 0
  2667                           ;gemsecs.c: 296:    block.header = (uint8_t*) & H53[0];
  2668  00466A  0E86               	movlw	low _H53
  2669  00466C  6E01               	movwf	secs_II_message@block,c
  2670  00466E  0E03               	movlw	high _H53
  2671  004670  6E02               	movwf	secs_II_message@block+1,c
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;gemsecs.c: 297:    block.length = sizeof(header53);
  2675  004672  0E38               	movlw	56
  2676  004674                     L11:
  2677  004674  6E03               	movwf	secs_II_message@block+2,c
  2678                           
  2679                           ;gemsecs.c: 298:    break;
  2680  004676  D023               	goto	l6148
  2681  004678                     l6136:
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;stkvar	_function @ sp[(0)+-2]
  2685  004678  0EFE               	movlw	-2
  2686  00467A  50E3               	movf	plusw1,w,c
  2687  00467C  6E47               	movwf	btemp+10,c
  2688  00467E  6A48               	clrf	btemp+11,c
  2689                           
  2690                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2691                           ; Switch size 1, requested type "simple"
  2692                           ; Number of cases is 1, Range of values is 0 to 0
  2693                           ; switch strategies available:
  2694                           ; Name         Instructions Cycles
  2695                           ; simple_byte            4     3 (average)
  2696                           ;	Chosen strategy is simple_byte
  2697  004680  5048               	movf	btemp+11,w,c
  2698  004682  0A00               	xorlw	0	; case 0
  2699  004684  A4D8               	btfss	status,2,c
  2700  004686  D7B9               	goto	l6096
  2701                           
  2702                           ; BSR set to: 0
  2703                           ; Switch size 1, requested type "simple"
  2704                           ; Number of cases is 2, Range of values is 11 to 12
  2705                           ; switch strategies available:
  2706                           ; Name         Instructions Cycles
  2707                           ; simple_byte            7     4 (average)
  2708                           ;	Chosen strategy is simple_byte
  2709  004688  5047               	movf	btemp+10,w,c
  2710  00468A  0A0B               	xorlw	11	; case 11
  2711  00468C  B4D8               	btfsc	status,2,c
  2712  00468E  D7E7               	goto	l6120
  2713  004690  0A07               	xorlw	7	; case 12
  2714  004692  B4D8               	btfsc	status,2,c
  2715  004694  D7EA               	goto	l6124
  2716  004696  D7B1               	goto	l6096
  2717  004698                     l6146:
  2718                           
  2719                           ; BSR set to: 0
  2720                           ;stkvar	_stream @ sp[(0)+-1]
  2721  004698  0EFF               	movlw	-1
  2722  00469A  50E3               	movf	plusw1,w,c
  2723  00469C  6E47               	movwf	btemp+10,c
  2724  00469E  6A48               	clrf	btemp+11,c
  2725                           
  2726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2727                           ; Switch size 1, requested type "simple"
  2728                           ; Number of cases is 1, Range of values is 0 to 0
  2729                           ; switch strategies available:
  2730                           ; Name         Instructions Cycles
  2731                           ; simple_byte            4     3 (average)
  2732                           ;	Chosen strategy is simple_byte
  2733  0046A0  5048               	movf	btemp+11,w,c
  2734  0046A2  0A00               	xorlw	0	; case 0
  2735  0046A4  A4D8               	btfss	status,2,c
  2736  0046A6  D7A9               	goto	l6096
  2737                           
  2738                           ; BSR set to: 0
  2739                           ; Switch size 1, requested type "simple"
  2740                           ; Number of cases is 3, Range of values is 1 to 6
  2741                           ; switch strategies available:
  2742                           ; Name         Instructions Cycles
  2743                           ; simple_byte           10     6 (average)
  2744                           ;	Chosen strategy is simple_byte
  2745  0046A8  5047               	movf	btemp+10,w,c
  2746  0046AA  0A01               	xorlw	1	; case 1
  2747  0046AC  B4D8               	btfsc	status,2,c
  2748  0046AE  D7AE               	goto	l6104
  2749  0046B0  0A03               	xorlw	3	; case 2
  2750  0046B2  B4D8               	btfsc	status,2,c
  2751  0046B4  D7C7               	goto	l6118
  2752  0046B6  0A04               	xorlw	4	; case 6
  2753  0046B8  B4D8               	btfsc	status,2,c
  2754  0046BA  D7DE               	goto	l6136
  2755  0046BC  D79E               	goto	l6096
  2756  0046BE                     l6148:
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;gemsecs.c: 313:  return(block);
  2760  0046BE  0060  F004  F03D   	movff	secs_II_message@block,btemp
  2761  0046C4  0060  F008  F03E   	movff	secs_II_message@block+1,btemp+1
  2762  0046CA  0060  F00C  F03F   	movff	secs_II_message@block+2,btemp+2
  2763                           
  2764                           ; BSR set to: 0
  2765                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  2766  0046D0  52E5               	movf	postdec1,f,c
  2767  0046D2  52E5               	movf	postdec1,f,c
  2768  0046D4  0012               	return		;funcret
  2769  0046D6                     __end_of_secs_II_message:
  2770                           	opt callstack 0
  2771                           
  2772 ;; *************** function _sprintf *****************
  2773 ;; Defined at:
  2774 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;  s               1  [STACK] PTR unsigned char 
  2777 ;;		 -> V(80), 
  2778 ;;  fmt             1  [STACK] PTR const unsigned char 
  2779 ;;		 -> STR_9(21), STR_8(17), STR_7(17), STR_6(17), 
  2780 ;;		 -> STR_5(23), STR_4(6), STR_3(14), STR_2(12), 
  2781 ;;		 -> STR_1(61), 
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;  f               5  [STACK] struct _IO_FILE
  2784 ;;  ap              2  [STACK] PTR void [1]
  2785 ;;		 -> ?_printf(2), ?_sprintf(2), 
  2786 ;;  ret             2    0        int 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  2  [STACK] int 
  2789 ;; Registers used:
  2790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/1
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2800 ;;Total ram usage:        0 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:   11
  2803 ;; This function calls:
  2804 ;;		_vfprintf
  2805 ;; This function is called by:
  2806 ;;		_main
  2807 ;; This function uses a reentrant model
  2808 ;;
  2809                           
  2810                           	psect	text3
  2811  004AA6                     __ptext3:
  2812                           	opt callstack 0
  2813  004AA6                     _sprintf:
  2814                           	opt callstack 0
  2815                           
  2816                           ; BSR set to: 0
  2817                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 26, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  2818  004AA6  0E07               	movlw	7
  2819  004AA8  26E1               	addwf	fsr1l,f,c
  2820  004AAA  0E00               	movlw	0
  2821  004AAC  22E2               	addwfc	fsr1h,f,c
  2822                           
  2823                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  2824                           
  2825                           ;incstack = 0
  2826  004AAE  0EF6               	movlw	246
  2827  004AB0  24E1               	addwf	fsr1l,w,c
  2828  004AB2  6E47               	movwf	btemp+10,c
  2829  004AB4  0EFF               	movlw	255
  2830  004AB6  20E2               	addwfc	fsr1h,w,c
  2831  004AB8  6E48               	movwf	btemp+11,c
  2832                           
  2833                           ;stkvar	_ap @ sp[(-7)+5]
  2834  004ABA  0EFF               	movlw	-1
  2835  004ABC  0060  F123  FFE3   	movff	btemp+11,plusw1
  2836  004AC2  0EFE               	movlw	-2
  2837  004AC4  0060  F11F  FFE3   	movff	btemp+10,plusw1
  2838                           
  2839                           ;stkvar	_s @ sp[(-7)+-2]
  2840  004ACA  0EF7               	movlw	-9
  2841  004ACC  006F FF8C  F048    	movff	plusw1,btemp+11
  2842                           
  2843                           ;stkvar	_f @ sp[(-7)+0]
  2844  004AD2  0EF9               	movlw	-7
  2845  004AD4  0060  F123  FFE3   	movff	btemp+11,plusw1
  2846                           
  2847                           ;stkvar	_f @ sp[(-7)+0]
  2848  004ADA  0EFA               	movlw	250
  2849  004ADC  24E1               	addwf	fsr1l,w,c
  2850  004ADE  6ED9               	movwf	fsr2l,c
  2851  004AE0  0EFF               	movlw	255
  2852  004AE2  20E2               	addwfc	fsr1h,w,c
  2853  004AE4  6EDA               	movwf	fsr2h,c
  2854  004AE6  0E00               	movlw	0
  2855  004AE8  6EDE               	movwf	postinc2,c
  2856  004AEA  0E00               	movlw	0
  2857  004AEC  6EDD               	movwf	postdec2,c
  2858                           
  2859                           ;stkvar	_f @ sp[(-7)+0]
  2860  004AEE  0EFC               	movlw	252
  2861  004AF0  24E1               	addwf	fsr1l,w,c
  2862  004AF2  6ED9               	movwf	fsr2l,c
  2863  004AF4  0EFF               	movlw	255
  2864  004AF6  20E2               	addwfc	fsr1h,w,c
  2865  004AF8  6EDA               	movwf	fsr2h,c
  2866  004AFA  0E00               	movlw	0
  2867  004AFC  6EDE               	movwf	postinc2,c
  2868  004AFE  0E00               	movlw	0
  2869  004B00  6EDD               	movwf	postdec2,c
  2870                           
  2871                           ;stkvar	_ap @ sp[(-7)+5]
  2872  004B02  0EFE               	movlw	254
  2873  004B04  24E1               	addwf	fsr1l,w,c
  2874  004B06  6E3D               	movwf	btemp,c
  2875  004B08  0EFF               	movlw	255
  2876  004B0A  20E2               	addwfc	fsr1h,w,c
  2877  004B0C  6E3E               	movwf	btemp+1,c
  2878  004B0E  0060  F0F7  FFE6   	movff	btemp,postinc1
  2879  004B14  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  2880                           
  2881                           ;stkvar	_fmt @ sp[(-9)+-3]
  2882  004B1A  0EF4               	movlw	-12
  2883  004B1C  50E3               	movf	plusw1,w,c
  2884  004B1E  6EE6               	movwf	postinc1,c
  2885                           
  2886                           ;stkvar	_f @ sp[(-10)+0]
  2887  004B20  0EF6               	movlw	246
  2888  004B22  24E1               	addwf	fsr1l,w,c
  2889  004B24  6E3D               	movwf	btemp,c
  2890  004B26  0EFF               	movlw	255
  2891  004B28  20E2               	addwfc	fsr1h,w,c
  2892  004B2A  6E3E               	movwf	btemp+1,c
  2893  004B2C  0060  F0F7  FFE6   	movff	btemp,postinc1
  2894  004B32  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  2895  004B38  EC5D  F027         	call	_vfprintf	;wreg free
  2896                           
  2897                           ;stkvar	_f @ sp[(-7)+0]
  2898  004B3C  0EFA               	movlw	250
  2899  004B3E  24E1               	addwf	fsr1l,w,c
  2900  004B40  6ED9               	movwf	fsr2l,c
  2901  004B42  0EFF               	movlw	255
  2902  004B44  20E2               	addwfc	fsr1h,w,c
  2903  004B46  6EDA               	movwf	fsr2h,c
  2904  004B48  50DF               	movf	indf2,w,c
  2905  004B4A  6E48               	movwf	btemp+11,c
  2906                           
  2907                           ;stkvar	_s @ sp[(-7)+-2]
  2908  004B4C  0EF7               	movlw	-9
  2909  004B4E  50E3               	movf	plusw1,w,c
  2910  004B50  2448               	addwf	btemp+11,w,c
  2911  004B52  6ED9               	movwf	fsr2l,c
  2912  004B54  6ADA               	clrf	fsr2h,c
  2913  004B56  0E00               	movlw	0
  2914  004B58  6EDF               	movwf	indf2,c
  2915                           
  2916                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 26, args
      +                          ize = 2, vargsize = 0
  2917  004B5A  0EF9               	movlw	249
  2918  004B5C  26E1               	addwf	fsr1l,f,c
  2919  004B5E  0EFF               	movlw	255
  2920  004B60  22E2               	addwfc	fsr1h,f,c
  2921  004B62  52E5               	movf	postdec1,f,c
  2922  004B64  50E7               	movf	indf1,w,c
  2923  004B66  5EE1               	subwf	fsr1l,f,c
  2924  004B68  0E00               	movlw	0
  2925  004B6A  5AE2               	subwfb	fsr1h,f,c
  2926  004B6C  0012               	return		;funcret
  2927  004B6E                     __end_of_sprintf:
  2928                           	opt callstack 0
  2929                           
  2930 ;; *************** function _r_protocol *****************
  2931 ;; Defined at:
  2932 ;;		line 40 in file "gemsecs.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;  r_link          1  [STACK] PTR enum E16164
  2935 ;;		 -> V(80), 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;  rxData          1  [STACK] unsigned char 
  2938 ;; Return value:  Size  Location     Type
  2939 ;;                  1  [STACK] enum E16902
  2940 ;; Registers used:
  2941 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2942 ;; Tracked objects:
  2943 ;;		On entry : 0/0
  2944 ;;		On exit  : 0/0
  2945 ;;		Unchanged: 0/0
  2946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2951 ;;Total ram usage:        0 bytes
  2952 ;; Hardware stack levels used:    1
  2953 ;; Hardware stack levels required when called:    5
  2954 ;; This function calls:
  2955 ;;		_StartTimer
  2956 ;;		_TimerDone
  2957 ;;		_UART1_Read
  2958 ;;		_UART1_Write
  2959 ;;		_UART1_is_rx_ready
  2960 ;;		_WaitMs
  2961 ;;		_run_checksum
  2962 ;;		_secs_send
  2963 ;; This function is called by:
  2964 ;;		_main
  2965 ;; This function uses a reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text4
  2969  003B02                     __ptext4:
  2970                           	opt callstack 0
  2971  003B02                     _r_protocol:
  2972                           	opt callstack 0
  2973                           
  2974                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2975  003B02  52E6               	movf	postinc1,f,c
  2976                           
  2977                           ;gemsecs.c: 40: LINK_STATES r_protocol(LINK_STATES *r_link);gemsecs.c: 41: {;gemsecs.c: 
      +                          42:  uint8_t rxData;;gemsecs.c: 43:  static uint8_t rxData_l = 0;;gemsecs.c: 45:  switch
      +                           (*r_link) {
  2978                           
  2979                           ;incstack = 0
  2980  003B04  D113               	goto	l7730
  2981  003B06                     l7646:
  2982                           
  2983                           ;gemsecs.c: 47:   if (UART1_is_rx_ready()) {
  2984  003B06  ECD9  F02F         	call	_UART1_is_rx_ready	;wreg free
  2985  003B0A  503D               	movf	btemp,w,c
  2986  003B0C  B4D8               	btfsc	status,2,c
  2987  003B0E  D12F               	goto	l7732
  2988                           
  2989                           ;gemsecs.c: 48:    rxData = UART1_Read();
  2990  003B10  ECDC  F02B         	call	_UART1_Read	;wreg free
  2991                           
  2992                           ;stkvar	_rxData @ sp[(-1)+0]
  2993  003B14  0EFF               	movlw	-1
  2994  003B16  0060  F0F7  FFE3   	movff	btemp,plusw1
  2995                           
  2996                           ; BSR set to: 57
  2997                           ;gemsecs.c: 49:    if (rxData == 0x05) {
  2998                           ;stkvar	_rxData @ sp[(-1)+0]
  2999  003B1C  0EFF               	movlw	-1
  3000  003B1E  006F FF8C  F03D    	movff	plusw1,btemp
  3001  003B24  0E05               	movlw	5
  3002  003B26  183D               	xorwf	btemp,w,c
  3003  003B28  A4D8               	btfss	status,2,c
  3004  003B2A  D121               	goto	l7732
  3005                           
  3006                           ; BSR set to: 57
  3007                           ;gemsecs.c: 50:     V.error = LINK_ERROR_NONE;
  3008  003B2C  0100               	movlb	0	; () banked
  3009  003B2E  6BD3               	clrf	(_V+74)& (0+255),b	;volatile
  3010                           
  3011                           ; BSR set to: 0
  3012                           ;gemsecs.c: 51:     *r_link = LINK_STATE_ENQ;
  3013                           ;stkvar	_r_link @ sp[(-1)+-1]
  3014  003B30  0EFE               	movlw	-2
  3015  003B32  50E3               	movf	plusw1,w,c
  3016  003B34  6ED9               	movwf	fsr2l,c
  3017  003B36  6ADA               	clrf	fsr2h,c
  3018  003B38  0E01               	movlw	1
  3019  003B3A  D0F6               	goto	L16
  3020  003B3C                     l1509:
  3021                           
  3022                           ;gemsecs.c: 56:   rxData_l = 0;
  3023  003B3C  6A30               	clrf	r_protocol@rxData_l,c
  3024                           
  3025                           ;gemsecs.c: 57:   UART1_Write(0x04);
  3026  003B3E  0E04               	movlw	4
  3027  003B40  6EE6               	movwf	postinc1,c
  3028  003B42  ECBD  F02B         	call	_UART1_Write	;wreg free
  3029                           
  3030                           ; BSR set to: 57
  3031                           ;gemsecs.c: 58:   StartTimer(TMR_T2, 2000);
  3032  003B46  0ED0               	movlw	208
  3033  003B48  6EE6               	movwf	postinc1,c
  3034  003B4A  0E07               	movlw	7
  3035  003B4C  6EE6               	movwf	postinc1,c
  3036  003B4E  0E02               	movlw	2
  3037  003B50  6EE6               	movwf	postinc1,c
  3038  003B52  EC1B  F02C         	call	_StartTimer	;wreg free
  3039                           
  3040                           ;gemsecs.c: 59:   *r_link = LINK_STATE_EOT;
  3041                           ;stkvar	_r_link @ sp[(-1)+-1]
  3042  003B56  0EFE               	movlw	-2
  3043  003B58  50E3               	movf	plusw1,w,c
  3044  003B5A  6ED9               	movwf	fsr2l,c
  3045  003B5C  6ADA               	clrf	fsr2h,c
  3046  003B5E  0E02               	movlw	2
  3047  003B60  6EDF               	movwf	indf2,c
  3048                           
  3049                           ;gemsecs.c: 61:   WaitMs(5);
  3050  003B62  0E05               	movlw	5
  3051  003B64  6EE6               	movwf	postinc1,c
  3052  003B66  0E00               	movlw	0
  3053  003B68  6EE6               	movwf	postinc1,c
  3054  003B6A  ECD8  F02C         	call	_WaitMs	;wreg free
  3055                           
  3056                           ;gemsecs.c: 62:   secs_send((uint8_t*) & H10[3], sizeof(header10), 1);
  3057  003B6E  0E01               	movlw	1
  3058  003B70  6EE6               	movwf	postinc1,c
  3059  003B72  0E0D               	movlw	13
  3060  003B74  6EE6               	movwf	postinc1,c
  3061  003B76  0E27               	movlw	low (_H10+39)
  3062  003B78  6EE6               	movwf	postinc1,c
  3063  003B7A  0E01               	movlw	high (_H10+39)
  3064  003B7C  6EE6               	movwf	postinc1,c
  3065  003B7E  EC06  F022         	call	_secs_send	;wreg free
  3066                           
  3067                           ;gemsecs.c: 64:   break;
  3068  003B82  D0F5               	goto	l7732
  3069  003B84                     l7666:
  3070                           
  3071                           ;gemsecs.c: 66:   if (TimerDone(TMR_T2)) {
  3072  003B84  0E02               	movlw	2
  3073  003B86  6EE6               	movwf	postinc1,c
  3074  003B88  EC7F  F02E         	call	_TimerDone	;wreg free
  3075  003B8C  503D               	movf	btemp,w,c
  3076  003B8E  B4D8               	btfsc	status,2,c
  3077  003B90  D009               	goto	l7672
  3078                           
  3079                           ;gemsecs.c: 67:    V.error = LINK_ERROR_T2;
  3080  003B92  0E02               	movlw	2
  3081  003B94  0100               	movlb	0	; () banked
  3082  003B96  6FD3               	movwf	(_V+74)& (0+255),b	;volatile
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;gemsecs.c: 68:    *r_link = LINK_STATE_NAK;
  3086                           ;stkvar	_r_link @ sp[(-1)+-1]
  3087  003B98  0EFE               	movlw	-2
  3088  003B9A  50E3               	movf	plusw1,w,c
  3089  003B9C  6ED9               	movwf	fsr2l,c
  3090  003B9E  6ADA               	clrf	fsr2h,c
  3091  003BA0  0E05               	movlw	5
  3092  003BA2  D0C2               	goto	L16
  3093  003BA4                     l7672:
  3094                           
  3095                           ;gemsecs.c: 70:    if (UART1_is_rx_ready()) {
  3096  003BA4  ECD9  F02F         	call	_UART1_is_rx_ready	;wreg free
  3097  003BA8  503D               	movf	btemp,w,c
  3098  003BAA  B4D8               	btfsc	status,2,c
  3099  003BAC  D0E0               	goto	l7732
  3100                           
  3101                           ;gemsecs.c: 71:     rxData = UART1_Read();
  3102  003BAE  ECDC  F02B         	call	_UART1_Read	;wreg free
  3103                           
  3104                           ;stkvar	_rxData @ sp[(-1)+0]
  3105  003BB2  0EFF               	movlw	-1
  3106  003BB4  0060  F0F7  FFE3   	movff	btemp,plusw1
  3107                           
  3108                           ; BSR set to: 57
  3109                           ;gemsecs.c: 72:     if (rxData_l == 0) {
  3110  003BBA  5030               	movf	r_protocol@rxData_l,w,c
  3111  003BBC  A4D8               	btfss	status,2,c
  3112  003BBE  D00C               	goto	l7684
  3113                           
  3114                           ; BSR set to: 57
  3115                           ;gemsecs.c: 73:      r_block.length = rxData;
  3116                           ;stkvar	_rxData @ sp[(-1)+0]
  3117  003BC0  0EFF               	movlw	-1
  3118  003BC2  006F FF8C  F06C    	movff	plusw1,_r_block+12
  3119                           
  3120                           ; BSR set to: 57
  3121                           ;gemsecs.c: 74:      run_checksum(0, 1);
  3122  003BC8  0E01               	movlw	1
  3123  003BCA  6EE6               	movwf	postinc1,c
  3124  003BCC  0E00               	movlw	0
  3125  003BCE  6EE6               	movwf	postinc1,c
  3126  003BD0  EC03  F02D         	call	_run_checksum	;wreg free
  3127                           
  3128                           ;gemsecs.c: 75:      rxData_l++;
  3129  003BD4  2A30               	incf	r_protocol@rxData_l,f,c
  3130                           
  3131                           ;gemsecs.c: 76:     } else {
  3132  003BD6  D0CB               	goto	l7732
  3133  003BD8                     l7684:
  3134                           
  3135                           ; BSR set to: 57
  3136                           ;gemsecs.c: 80:      if (rxData_l <= 10)
  3137  003BD8  0E0B               	movlw	11
  3138  003BDA  6030               	cpfslt	r_protocol@rxData_l,c
  3139  003BDC  D018               	goto	l7688
  3140                           
  3141                           ; BSR set to: 57
  3142                           ;gemsecs.c: 81:       H10[1].block.b[r_block.length - rxData_l] = rxData;
  3143                           ;stkvar	_rxData @ sp[(-1)+0]
  3144  003BDE  0E00               	movlw	low _H10
  3145  003BE0  6E47               	movwf	btemp+10,c
  3146  003BE2  0E01               	movlw	high _H10
  3147  003BE4  6E48               	movwf	btemp+11,c
  3148  003BE6  0E0F               	movlw	15
  3149  003BE8  2647               	addwf	btemp+10,f,c
  3150  003BEA  0E00               	movlw	0
  3151  003BEC  2248               	addwfc	btemp+11,f,c
  3152  003BEE  0100               	movlb	0	; () banked
  3153  003BF0  516C               	movf	(_r_block+12)& (0+255),w,b
  3154  003BF2  2647               	addwf	btemp+10,f,c
  3155  003BF4  0E00               	movlw	0
  3156  003BF6  2248               	addwfc	btemp+11,f,c
  3157  003BF8  5030               	movf	r_protocol@rxData_l,w,c
  3158  003BFA  5C47               	subwf	btemp+10,w,c
  3159  003BFC  6ED9               	movwf	fsr2l,c
  3160  003BFE  5048               	movf	btemp+11,w,c
  3161  003C00  A0D8               	btfss	status,0,c
  3162  003C02  0448               	decf	btemp+11,w,c
  3163  003C04  6EDA               	movwf	fsr2h,c
  3164  003C06  0EFF               	movlw	-1
  3165  003C08  006F FF8F FFDF     	movff	plusw1,indf2
  3166  003C0E                     l7688:
  3167                           
  3168                           ;gemsecs.c: 82:      if (rxData_l <= r_block.length)
  3169  003C0E  5030               	movf	r_protocol@rxData_l,w,c
  3170  003C10  0100               	movlb	0	; () banked
  3171  003C12  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  3172  003C14  A0D8               	btfss	status,0,c
  3173  003C16  D00D               	goto	l7692
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;gemsecs.c: 83:       V.r_checksum = run_checksum(rxData, 0);
  3177  003C18  0E00               	movlw	0
  3178  003C1A  6EE6               	movwf	postinc1,c
  3179                           
  3180                           ;stkvar	_rxData @ sp[(-2)+0]
  3181  003C1C  0EFE               	movlw	-2
  3182  003C1E  50E3               	movf	plusw1,w,c
  3183  003C20  6EE6               	movwf	postinc1,c
  3184  003C22  EC03  F02D         	call	_run_checksum	;wreg free
  3185  003C26  0060  F0F4  F0D5   	movff	btemp,_V+76	;volatile
  3186  003C2C  0060  F0F8  F0D6   	movff	btemp+1,_V+77	;volatile
  3187  003C32                     l7692:
  3188                           
  3189                           ;gemsecs.c: 85:      if (rxData_l == r_block.length + 1)
  3190  003C32  5030               	movf	r_protocol@rxData_l,w,c
  3191  003C34  6E47               	movwf	btemp+10,c
  3192  003C36  6A48               	clrf	btemp+11,c
  3193  003C38  0100               	movlb	0	; () banked
  3194  003C3A  516C               	movf	(_r_block+12)& (0+255),w,b
  3195  003C3C  6E45               	movwf	btemp+8,c
  3196  003C3E  6A46               	clrf	btemp+9,c
  3197  003C40  0E01               	movlw	1
  3198  003C42  2645               	addwf	btemp+8,f,c
  3199  003C44  0E00               	movlw	0
  3200  003C46  2246               	addwfc	btemp+9,f,c
  3201  003C48  5047               	movf	btemp+10,w,c
  3202  003C4A  1845               	xorwf	btemp+8,w,c
  3203  003C4C  E109               	bnz	l7696
  3204  003C4E  5048               	movf	btemp+11,w,c
  3205  003C50  1846               	xorwf	btemp+9,w,c
  3206  003C52  A4D8               	btfss	status,2,c
  3207  003C54  D005               	goto	l7696
  3208                           
  3209                           ; BSR set to: 0
  3210                           ;gemsecs.c: 86:       H10[1].checksum = (uint16_t) rxData << 8;
  3211                           ;stkvar	_rxData @ sp[(-1)+0]
  3212  003C56  0EFF               	movlw	-1
  3213  003C58  50E3               	movf	plusw1,w,c
  3214  003C5A  0101               	movlb	1	; () banked
  3215  003C5C  6F0E               	movwf	(_H10+14)& (0+255),b
  3216  003C5E  6B0D               	clrf	(_H10+13)& (0+255),b
  3217  003C60                     l7696:
  3218                           
  3219                           ;gemsecs.c: 87:      if (rxData_l == r_block.length + 2)
  3220  003C60  5030               	movf	r_protocol@rxData_l,w,c
  3221  003C62  6E47               	movwf	btemp+10,c
  3222  003C64  6A48               	clrf	btemp+11,c
  3223  003C66  0100               	movlb	0	; () banked
  3224  003C68  516C               	movf	(_r_block+12)& (0+255),w,b
  3225  003C6A  6E45               	movwf	btemp+8,c
  3226  003C6C  6A46               	clrf	btemp+9,c
  3227  003C6E  0E02               	movlw	2
  3228  003C70  2645               	addwf	btemp+8,f,c
  3229  003C72  0E00               	movlw	0
  3230  003C74  2246               	addwfc	btemp+9,f,c
  3231  003C76  5047               	movf	btemp+10,w,c
  3232  003C78  1845               	xorwf	btemp+8,w,c
  3233  003C7A  E10A               	bnz	l7700
  3234  003C7C  5048               	movf	btemp+11,w,c
  3235  003C7E  1846               	xorwf	btemp+9,w,c
  3236  003C80  A4D8               	btfss	status,2,c
  3237  003C82  D006               	goto	l7700
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;gemsecs.c: 88:       H10[1].checksum += rxData;
  3241                           ;stkvar	_rxData @ sp[(-1)+0]
  3242  003C84  0EFF               	movlw	-1
  3243  003C86  50E3               	movf	plusw1,w,c
  3244  003C88  0101               	movlb	1	; () banked
  3245  003C8A  270D               	addwf	(_H10+13)& (0+255),f,b
  3246  003C8C  0E00               	movlw	0
  3247  003C8E  230E               	addwfc	(_H10+14)& (0+255),f,b
  3248  003C90                     l7700:
  3249                           
  3250                           ;gemsecs.c: 90:      rxData_l++;
  3251  003C90  2A30               	incf	r_protocol@rxData_l,f,c
  3252                           
  3253                           ;gemsecs.c: 91:      if (rxData_l > (r_block.length + 2)) {
  3254  003C92  5030               	movf	r_protocol@rxData_l,w,c
  3255  003C94  6E47               	movwf	btemp+10,c
  3256  003C96  6A48               	clrf	btemp+11,c
  3257  003C98  0100               	movlb	0	; () banked
  3258  003C9A  516C               	movf	(_r_block+12)& (0+255),w,b
  3259  003C9C  6E45               	movwf	btemp+8,c
  3260  003C9E  6A46               	clrf	btemp+9,c
  3261  003CA0  0E02               	movlw	2
  3262  003CA2  2645               	addwf	btemp+8,f,c
  3263  003CA4  0E00               	movlw	0
  3264  003CA6  2246               	addwfc	btemp+9,f,c
  3265  003CA8  5047               	movf	btemp+10,w,c
  3266  003CAA  5C45               	subwf	btemp+8,w,c
  3267  003CAC  5046               	movf	btemp+9,w,c
  3268  003CAE  0A80               	xorlw	128
  3269  003CB0  6E3D               	movwf	btemp,c
  3270  003CB2  5048               	movf	btemp+11,w,c
  3271  003CB4  0A80               	xorlw	128
  3272  003CB6  583D               	subwfb	btemp,w,c
  3273  003CB8  B0D8               	btfsc	status,0,c
  3274  003CBA  D059               	goto	l7732
  3275                           
  3276                           ; BSR set to: 0
  3277                           ;gemsecs.c: 92:       if (V.r_checksum == H10[1].checksum) {
  3278  003CBC  0101               	movlb	1	; () banked
  3279  003CBE  510D               	movf	(_H10+13)& (0+255),w,b
  3280  003CC0  0100               	movlb	0	; () banked
  3281  003CC2  19D5               	xorwf	(_V+76)& (0+255),w,b	;volatile
  3282  003CC4  E10C               	bnz	l7708
  3283  003CC6  0101               	movlb	1	; () banked
  3284  003CC8  510E               	movf	(_H10+14)& (0+255),w,b
  3285  003CCA  0100               	movlb	0	; () banked
  3286  003CCC  19D6               	xorwf	(_V+77)& (0+255),w,b	;volatile
  3287  003CCE  A4D8               	btfss	status,2,c
  3288  003CD0  D006               	goto	l7708
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;gemsecs.c: 93:        *r_link = LINK_STATE_ACK;
  3292                           ;stkvar	_r_link @ sp[(-1)+-1]
  3293  003CD2  0EFE               	movlw	-2
  3294  003CD4  50E3               	movf	plusw1,w,c
  3295  003CD6  6ED9               	movwf	fsr2l,c
  3296  003CD8  6ADA               	clrf	fsr2h,c
  3297  003CDA  0E03               	movlw	3
  3298  003CDC  D025               	goto	L16
  3299  003CDE                     l7708:
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;gemsecs.c: 95:        V.error = LINK_ERROR_CHECKSUM;
  3303  003CDE  0E05               	movlw	5
  3304  003CE0  D75A               	goto	L15
  3305  003CE2                     l7712:
  3306                           
  3307                           ;gemsecs.c: 104:   V.stream = H10[1].block.block.stream;
  3308  003CE2  0101               	movlb	1	; () banked
  3309  003CE4  5116               	movf	(_H10+22)& (0+255),w,b
  3310  003CE6  0B7F               	andlw	127
  3311  003CE8  0100               	movlb	0	; () banked
  3312  003CEA  6FD1               	movwf	(_V+72)& (0+255),b	;volatile
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;gemsecs.c: 105:   V.function = H10[1].block.block.function;
  3316  003CEC  C115  F0D2         	movff	_H10+21,_V+73	;volatile
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;gemsecs.c: 106:   UART1_Write(0x06);
  3320  003CF0  0E06               	movlw	6
  3321  003CF2  6EE6               	movwf	postinc1,c
  3322  003CF4  ECBD  F02B         	call	_UART1_Write	;wreg free
  3323                           
  3324                           ; BSR set to: 57
  3325                           ;gemsecs.c: 107:   *r_link = LINK_STATE_DONE;
  3326                           ;stkvar	_r_link @ sp[(-1)+-1]
  3327  003CF8  0EFE               	movlw	-2
  3328  003CFA  50E3               	movf	plusw1,w,c
  3329  003CFC  6ED9               	movwf	fsr2l,c
  3330  003CFE  6ADA               	clrf	fsr2h,c
  3331  003D00  0E04               	movlw	4
  3332  003D02  D012               	goto	L16
  3333  003D04                     l7720:
  3334                           
  3335                           ;gemsecs.c: 110:   *r_link = LINK_STATE_ERROR;
  3336                           ;stkvar	_r_link @ sp[(-1)+-1]
  3337  003D04  0EFE               	movlw	-2
  3338  003D06  50E3               	movf	plusw1,w,c
  3339  003D08  6ED9               	movwf	fsr2l,c
  3340  003D0A  6ADA               	clrf	fsr2h,c
  3341  003D0C  0E06               	movlw	6
  3342  003D0E  6EDF               	movwf	indf2,c
  3343                           
  3344                           ;gemsecs.c: 111:   while ((uart1RxCount)) {
  3345  003D10  D002               	goto	l7724
  3346  003D12                     l7722:
  3347                           
  3348                           ;gemsecs.c: 112:    UART1_Read();
  3349  003D12  ECDC  F02B         	call	_UART1_Read	;wreg free
  3350  003D16                     l7724:
  3351                           
  3352                           ;gemsecs.c: 111:   while ((uart1RxCount)) {
  3353  003D16  5037               	movf	_uart1RxCount,w,c	;volatile
  3354  003D18  B4D8               	btfsc	status,2,c
  3355  003D1A  D029               	goto	l7732
  3356  003D1C  D7FA               	goto	l7722
  3357  003D1E                     l7726:
  3358                           
  3359                           ;gemsecs.c: 119:   *r_link = LINK_STATE_IDLE;
  3360                           ;stkvar	_r_link @ sp[(-1)+-1]
  3361  003D1E  0EFE               	movlw	-2
  3362  003D20  50E3               	movf	plusw1,w,c
  3363  003D22  6ED9               	movwf	fsr2l,c
  3364  003D24  6ADA               	clrf	fsr2h,c
  3365  003D26  0E00               	movlw	0
  3366  003D28                     L16:
  3367  003D28  6EDF               	movwf	indf2,c
  3368                           
  3369                           ;gemsecs.c: 120:   break;
  3370  003D2A  D021               	goto	l7732
  3371  003D2C                     l7730:
  3372                           
  3373                           ;stkvar	_r_link @ sp[(-1)+-1]
  3374  003D2C  0EFE               	movlw	-2
  3375  003D2E  50E3               	movf	plusw1,w,c
  3376  003D30  6ED9               	movwf	fsr2l,c
  3377  003D32  6ADA               	clrf	fsr2h,c
  3378  003D34  50DF               	movf	indf2,w,c
  3379  003D36  6E47               	movwf	btemp+10,c
  3380  003D38  6A48               	clrf	btemp+11,c
  3381                           
  3382                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3383                           ; Switch size 1, requested type "simple"
  3384                           ; Number of cases is 1, Range of values is 0 to 0
  3385                           ; switch strategies available:
  3386                           ; Name         Instructions Cycles
  3387                           ; simple_byte            4     3 (average)
  3388                           ;	Chosen strategy is simple_byte
  3389  003D3A  5048               	movf	btemp+11,w,c
  3390  003D3C  0A00               	xorlw	0	; case 0
  3391  003D3E  A4D8               	btfss	status,2,c
  3392  003D40  D7EE               	goto	l7726
  3393                           
  3394                           ; Switch size 1, requested type "simple"
  3395                           ; Number of cases is 7, Range of values is 0 to 6
  3396                           ; switch strategies available:
  3397                           ; Name         Instructions Cycles
  3398                           ; simple_byte           22    12 (average)
  3399                           ;	Chosen strategy is simple_byte
  3400  003D42  5047               	movf	btemp+10,w,c
  3401  003D44  0A00               	xorlw	0	; case 0
  3402  003D46  B4D8               	btfsc	status,2,c
  3403  003D48  D6DE               	goto	l7646
  3404  003D4A  0A01               	xorlw	1	; case 1
  3405  003D4C  B4D8               	btfsc	status,2,c
  3406  003D4E  D6F6               	goto	l1509
  3407  003D50  0A03               	xorlw	3	; case 2
  3408  003D52  B4D8               	btfsc	status,2,c
  3409  003D54  D717               	goto	l7666
  3410  003D56  0A01               	xorlw	1	; case 3
  3411  003D58  B4D8               	btfsc	status,2,c
  3412  003D5A  D7C3               	goto	l7712
  3413  003D5C  0A07               	xorlw	7	; case 4
  3414  003D5E  B4D8               	btfsc	status,2,c
  3415  003D60  D7DE               	goto	l7726
  3416  003D62  0A01               	xorlw	1	; case 5
  3417  003D64  B4D8               	btfsc	status,2,c
  3418  003D66  D7CE               	goto	l7720
  3419  003D68  0A03               	xorlw	3	; case 6
  3420  003D6A  A4D8               	btfss	status,2,c
  3421  003D6C  D7D8               	goto	l7726
  3422  003D6E                     l7732:
  3423                           
  3424                           ;gemsecs.c: 123:  return *r_link;
  3425                           ;stkvar	_r_link @ sp[(-1)+-1]
  3426  003D6E  0EFE               	movlw	-2
  3427  003D70  50E3               	movf	plusw1,w,c
  3428  003D72  6ED9               	movwf	fsr2l,c
  3429  003D74  6ADA               	clrf	fsr2h,c
  3430  003D76  50DF               	movf	indf2,w,c
  3431  003D78  6E3D               	movwf	btemp,c
  3432                           
  3433                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3434  003D7A  52E5               	movf	postdec1,f,c
  3435  003D7C  52E5               	movf	postdec1,f,c
  3436  003D7E  0012               	return		;funcret
  3437  003D80                     __end_of_r_protocol:
  3438                           	opt callstack 0
  3439                           
  3440 ;; *************** function _secs_send *****************
  3441 ;; Defined at:
  3442 ;;		line 206 in file "gemsecs.c"
  3443 ;; Parameters:    Size  Location     Type
  3444 ;;  byte_block      2  [STACK] PTR unsigned char 
  3445 ;;		 -> H53(112), H24(27), H18(21), H14(17), 
  3446 ;;		 -> H13(16), H12(15), H10(65), 
  3447 ;;  length          1  [STACK] unsigned char 
  3448 ;;  fake            1  [STACK] _Bool 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;  k               2  [STACK] PTR unsigned char 
  3451 ;;		 -> H53(112), H24(27), H18(21), H14(17), 
  3452 ;;		 -> H13(16), H12(15), H10(65), 
  3453 ;;  checksum        2  [STACK] unsigned short 
  3454 ;;  i               1  [STACK] unsigned char 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1  [STACK] _Bool 
  3457 ;; Registers used:
  3458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3468 ;;Total ram usage:        0 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; Hardware stack levels required when called:    4
  3471 ;; This function calls:
  3472 ;;		_UART1_Write
  3473 ;;		_UART1_is_tx_ready
  3474 ;;		_UART1_put_buffer
  3475 ;;		_block_checksum
  3476 ;; This function is called by:
  3477 ;;		_main
  3478 ;;		_r_protocol
  3479 ;;		_t_protocol
  3480 ;; This function uses a reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text5
  3484  00440C                     __ptext5:
  3485                           	opt callstack 0
  3486  00440C                     _secs_send:
  3487                           	opt callstack 0
  3488                           
  3489                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3490  00440C  0E05               	movlw	5
  3491  00440E  26E1               	addwf	fsr1l,f,c
  3492  004410  0E00               	movlw	0
  3493  004412  22E2               	addwfc	fsr1h,f,c
  3494                           
  3495                           ;gemsecs.c: 206: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake);gemsec
      +                          s.c: 207: {;gemsecs.c: 208:  uint8_t i, *k;;gemsecs.c: 209:  uint16_t checksum;;gemsecs.
      +                          c: 211:  k = (uint8_t *) byte_block;
  3496                           ;stkvar	_byte_block @ sp[(-5)+-2]
  3497                           
  3498                           ;incstack = 0
  3499  004414  0EF9               	movlw	-7
  3500  004416  006F FF8C  F047    	movff	plusw1,btemp+10
  3501  00441C  0EFA               	movlw	-6
  3502  00441E  006F FF8C  F048    	movff	plusw1,btemp+11
  3503                           
  3504                           ;stkvar	_k @ sp[(-5)+0]
  3505  004424  0EFC               	movlw	-4
  3506  004426  0060  F123  FFE3   	movff	btemp+11,plusw1
  3507  00442C  0EFB               	movlw	-5
  3508  00442E  0060  F11F  FFE3   	movff	btemp+10,plusw1
  3509                           
  3510                           ;gemsecs.c: 213:  V.error = LINK_ERROR_NONE;
  3511  004434  0100               	movlb	0	; () banked
  3512  004436  6BD3               	clrf	(_V+74)& (0+255),b	;volatile
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;gemsecs.c: 214:  if ((length - 3) != k[length - 1]) {
  3516                           ;stkvar	_length @ sp[(-5)+-3]
  3517  004438  0EF8               	movlw	-8
  3518  00443A  50E3               	movf	plusw1,w,c
  3519  00443C  6E47               	movwf	btemp+10,c
  3520  00443E  6A48               	clrf	btemp+11,c
  3521                           
  3522                           ;stkvar	_k @ sp[(-5)+0]
  3523  004440  0EFB               	movlw	-5
  3524  004442  50E3               	movf	plusw1,w,c
  3525  004444  2647               	addwf	btemp+10,f,c
  3526  004446  0EFC               	movlw	-4
  3527  004448  50E3               	movf	plusw1,w,c
  3528  00444A  2248               	addwfc	btemp+11,f,c
  3529  00444C  0EFF               	movlw	255
  3530  00444E  2447               	addwf	btemp+10,w,c
  3531  004450  6ED9               	movwf	fsr2l,c
  3532  004452  0EFF               	movlw	255
  3533  004454  2048               	addwfc	btemp+11,w,c
  3534  004456  6EDA               	movwf	fsr2h,c
  3535  004458  50DF               	movf	indf2,w,c
  3536  00445A  6E47               	movwf	btemp+10,c
  3537  00445C  6A48               	clrf	btemp+11,c
  3538  00445E  0EFD               	movlw	253
  3539  004460  6E45               	movwf	btemp+8,c
  3540  004462  0EFF               	movlw	255
  3541  004464  6E46               	movwf	btemp+9,c
  3542                           
  3543                           ;stkvar	_length @ sp[(-5)+-3]
  3544  004466  0EF8               	movlw	-8
  3545  004468  50E3               	movf	plusw1,w,c
  3546  00446A  6E43               	movwf	btemp+6,c
  3547  00446C  6A44               	clrf	btemp+7,c
  3548  00446E  5045               	movf	btemp+8,w,c
  3549  004470  2643               	addwf	btemp+6,f,c
  3550  004472  5046               	movf	btemp+9,w,c
  3551  004474  2244               	addwfc	btemp+7,f,c
  3552  004476  5047               	movf	btemp+10,w,c
  3553  004478  1843               	xorwf	btemp+6,w,c
  3554  00447A  E104               	bnz	u4710
  3555  00447C  5048               	movf	btemp+11,w,c
  3556  00447E  1844               	xorwf	btemp+7,w,c
  3557  004480  B4D8               	btfsc	status,2,c
  3558  004482  D003               	goto	l7516
  3559  004484                     u4710:
  3560                           
  3561                           ; BSR set to: 0
  3562                           ;gemsecs.c: 215:   V.error = LINK_ERROR_SEND;
  3563  004484  0E08               	movlw	8
  3564  004486  6FD3               	movwf	(_V+74)& (0+255),b	;volatile
  3565  004488  D098               	goto	l1563
  3566  00448A                     l7516:
  3567                           
  3568                           ; BSR set to: 0
  3569                           ;gemsecs.c: 224:  checksum = block_checksum(&k[2], length - 3);
  3570  00448A  0EFD               	movlw	253
  3571  00448C  6E47               	movwf	btemp+10,c
  3572  00448E  0EFF               	movlw	255
  3573  004490  6E48               	movwf	btemp+11,c
  3574                           
  3575                           ;stkvar	_length @ sp[(-5)+-3]
  3576  004492  0EF8               	movlw	-8
  3577  004494  50E3               	movf	plusw1,w,c
  3578  004496  6E45               	movwf	btemp+8,c
  3579  004498  6A46               	clrf	btemp+9,c
  3580  00449A  5047               	movf	btemp+10,w,c
  3581  00449C  2645               	addwf	btemp+8,f,c
  3582  00449E  5048               	movf	btemp+11,w,c
  3583  0044A0  2246               	addwfc	btemp+9,f,c
  3584  0044A2  0060  F117  FFE6   	movff	btemp+8,postinc1
  3585  0044A8  0060  F11B  FFE6   	movff	btemp+9,postinc1
  3586                           
  3587                           ;stkvar	_k @ sp[(-7)+0]
  3588  0044AE  0EF9               	movlw	-7
  3589  0044B0  50E3               	movf	plusw1,w,c
  3590  0044B2  0F02               	addlw	2
  3591  0044B4  6E47               	movwf	btemp+10,c
  3592  0044B6  0EFA               	movlw	-6
  3593  0044B8  006F FF8C  F048    	movff	plusw1,btemp+11
  3594  0044BE  0E00               	movlw	0
  3595  0044C0  2248               	addwfc	btemp+11,f,c
  3596  0044C2  0060  F11F  FFE6   	movff	btemp+10,postinc1
  3597  0044C8  0060  F123  FFE6   	movff	btemp+11,postinc1
  3598  0044CE  ECEA  F024         	call	_block_checksum	;wreg free
  3599                           
  3600                           ;stkvar	_checksum @ sp[(-5)+2]
  3601  0044D2  0EFD               	movlw	-3
  3602  0044D4  0060  F0F7  FFE3   	movff	btemp,plusw1
  3603  0044DA  0EFE               	movlw	-2
  3604  0044DC  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  3605                           
  3606                           ;gemsecs.c: 225:  k[0] = checksum & 0xff;
  3607                           ;stkvar	_checksum @ sp[(-5)+2]
  3608                           ;stkvar	_k @ sp[(-5)+0]
  3609  0044E2  0EFB               	movlw	-5
  3610  0044E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  3611  0044EA  0EFC               	movlw	-4
  3612  0044EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  3613  0044F2  0EFD               	movlw	-3
  3614  0044F4  006F FF8F FFDF     	movff	plusw1,indf2
  3615                           
  3616                           ;gemsecs.c: 226:  k[1] = (checksum >> 8)&0xff;
  3617                           ;stkvar	_checksum @ sp[(-5)+2]
  3618  0044FA  0EFE               	movlw	254
  3619  0044FC  24E1               	addwf	fsr1l,w,c
  3620  0044FE  6ED9               	movwf	fsr2l,c
  3621  004500  0EFF               	movlw	255
  3622  004502  20E2               	addwfc	fsr1h,w,c
  3623  004504  6EDA               	movwf	fsr2h,c
  3624                           
  3625                           ;stkvar	_k @ sp[(-5)+0]
  3626  004506  0EFB               	movlw	-5
  3627  004508  006F FF8C  F047    	movff	plusw1,btemp+10
  3628  00450E  0EFC               	movlw	-4
  3629  004510  006F FF8C  F048    	movff	plusw1,btemp+11
  3630  004516  0E01               	movlw	1
  3631  004518  2447               	addwf	btemp+10,w,c
  3632  00451A  6EE9               	movwf	fsr0l,c
  3633  00451C  0E00               	movlw	0
  3634  00451E  2048               	addwfc	btemp+11,w,c
  3635  004520  6EEA               	movwf	fsr0h,c
  3636  004522  006F FF7F FFEF     	movff	indf2,indf0
  3637                           
  3638                           ;gemsecs.c: 227:  V.t_checksum = checksum;
  3639                           ;stkvar	_checksum @ sp[(-5)+2]
  3640  004528  0EFD               	movlw	-3
  3641  00452A  006F FF8C  F0D7    	movff	plusw1,_V+78	;volatile
  3642  004530  0EFE               	movlw	-2
  3643  004532  006F FF8C  F0D8    	movff	plusw1,_V+79	;volatile
  3644  004538                     l7524:
  3645  004538  ECD5  F02F         	call	_UART1_is_tx_ready	;wreg free
  3646  00453C  0E3F               	movlw	63
  3647  00453E  643D               	cpfsgt	btemp,c
  3648  004540  D7FB               	goto	l7524
  3649                           
  3650                           ;gemsecs.c: 230:  for (i = length; i > 0; i--) {
  3651                           ;stkvar	_length @ sp[(-5)+-3]
  3652                           ;stkvar	_i @ sp[(-5)+4]
  3653  004542  0EF8               	movlw	-8
  3654  004544  006F FF8C  F03D    	movff	plusw1,btemp
  3655  00454A  0EFF               	movlw	-1
  3656  00454C  0060  F0F7  FFE3   	movff	btemp,plusw1
  3657  004552                     l7528:
  3658                           
  3659                           ;stkvar	_i @ sp[(-5)+4]
  3660  004552  0EFF               	movlw	-1
  3661  004554  50E3               	movf	plusw1,w,c
  3662  004556  B4D8               	btfsc	status,2,c
  3663  004558  D030               	goto	l1563
  3664                           
  3665                           ;gemsecs.c: 231:   if (fake) {
  3666                           ;stkvar	_fake @ sp[(-5)+-4]
  3667  00455A  0EF7               	movlw	-9
  3668  00455C  50E3               	movf	plusw1,w,c
  3669  00455E  B4D8               	btfsc	status,2,c
  3670  004560  D015               	goto	l7536
  3671                           
  3672                           ;gemsecs.c: 232:    UART1_put_buffer(k[i - 1]);
  3673                           ;stkvar	_i @ sp[(-5)+4]
  3674  004562  0EFF               	movlw	-1
  3675  004564  50E3               	movf	plusw1,w,c
  3676  004566  6E47               	movwf	btemp+10,c
  3677  004568  6A48               	clrf	btemp+11,c
  3678                           
  3679                           ;stkvar	_k @ sp[(-5)+0]
  3680  00456A  0EFB               	movlw	-5
  3681  00456C  50E3               	movf	plusw1,w,c
  3682  00456E  2647               	addwf	btemp+10,f,c
  3683  004570  0EFC               	movlw	-4
  3684  004572  50E3               	movf	plusw1,w,c
  3685  004574  2248               	addwfc	btemp+11,f,c
  3686  004576  0EFF               	movlw	255
  3687  004578  2447               	addwf	btemp+10,w,c
  3688  00457A  6ED9               	movwf	fsr2l,c
  3689  00457C  0EFF               	movlw	255
  3690  00457E  2048               	addwfc	btemp+11,w,c
  3691  004580  6EDA               	movwf	fsr2h,c
  3692  004582  50DF               	movf	indf2,w,c
  3693  004584  6EE6               	movwf	postinc1,c
  3694  004586  ECC3  F02C         	call	_UART1_put_buffer	;wreg free
  3695                           
  3696                           ;gemsecs.c: 233:   } else {
  3697  00458A  D014               	goto	l7538
  3698  00458C                     l7536:
  3699                           
  3700                           ;gemsecs.c: 234:    UART1_Write(k[i - 1]);
  3701                           ;stkvar	_i @ sp[(-5)+4]
  3702  00458C  0EFF               	movlw	-1
  3703  00458E  50E3               	movf	plusw1,w,c
  3704  004590  6E47               	movwf	btemp+10,c
  3705  004592  6A48               	clrf	btemp+11,c
  3706                           
  3707                           ;stkvar	_k @ sp[(-5)+0]
  3708  004594  0EFB               	movlw	-5
  3709  004596  50E3               	movf	plusw1,w,c
  3710  004598  2647               	addwf	btemp+10,f,c
  3711  00459A  0EFC               	movlw	-4
  3712  00459C  50E3               	movf	plusw1,w,c
  3713  00459E  2248               	addwfc	btemp+11,f,c
  3714  0045A0  0EFF               	movlw	255
  3715  0045A2  2447               	addwf	btemp+10,w,c
  3716  0045A4  6ED9               	movwf	fsr2l,c
  3717  0045A6  0EFF               	movlw	255
  3718  0045A8  2048               	addwfc	btemp+11,w,c
  3719  0045AA  6EDA               	movwf	fsr2h,c
  3720  0045AC  50DF               	movf	indf2,w,c
  3721  0045AE  6EE6               	movwf	postinc1,c
  3722  0045B0  ECBD  F02B         	call	_UART1_Write	;wreg free
  3723  0045B4                     l7538:
  3724                           
  3725                           ; BSR set to: 57
  3726                           ;gemsecs.c: 236:  }
  3727                           ;stkvar	_i @ sp[(-5)+4]
  3728  0045B4  0EFF               	movlw	-1
  3729  0045B6  06E3               	decf	plusw1,f,c
  3730  0045B8  D7CC               	goto	l7528
  3731  0045BA                     l1563:
  3732                           
  3733                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, arg
      +                          size = 4, vargsize = 0
  3734  0045BA  0EF7               	movlw	247
  3735  0045BC  26E1               	addwf	fsr1l,f,c
  3736  0045BE  0EFF               	movlw	255
  3737  0045C0  22E2               	addwfc	fsr1h,f,c
  3738  0045C2  0012               	return		;funcret
  3739  0045C4                     __end_of_secs_send:
  3740                           	opt callstack 0
  3741                           
  3742 ;; *************** function _block_checksum *****************
  3743 ;; Defined at:
  3744 ;;		line 16 in file "gemsecs.c"
  3745 ;; Parameters:    Size  Location     Type
  3746 ;;  byte_block      2  [STACK] PTR unsigned char 
  3747 ;;		 -> H53(112), H24(27), H18(21), H14(17), 
  3748 ;;		 -> H13(16), H12(15), H10.block(10), H10(65), 
  3749 ;;  byte_count      2  [STACK] unsigned short 
  3750 ;; Auto vars:     Size  Location     Type
  3751 ;;  i               2  [STACK] unsigned short 
  3752 ;;  sum             2  [STACK] unsigned short 
  3753 ;; Return value:  Size  Location     Type
  3754 ;;                  2  [STACK] unsigned short 
  3755 ;; Registers used:
  3756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  3757 ;; Tracked objects:
  3758 ;;		On entry : 3F/0
  3759 ;;		On exit  : 0/0
  3760 ;;		Unchanged: 0/0
  3761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3766 ;;Total ram usage:        0 bytes
  3767 ;; Hardware stack levels used:    1
  3768 ;; Hardware stack levels required when called:    3
  3769 ;; This function calls:
  3770 ;;		Nothing
  3771 ;; This function is called by:
  3772 ;;		_main
  3773 ;;		_secs_send
  3774 ;; This function uses a reentrant model
  3775 ;;
  3776                           
  3777                           	psect	text6
  3778  0049D4                     __ptext6:
  3779                           	opt callstack 0
  3780  0049D4                     _block_checksum:
  3781                           	opt callstack 0
  3782                           
  3783                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3784  0049D4  52E6               	movf	postinc1,f,c
  3785  0049D6  52E6               	movf	postinc1,f,c
  3786  0049D8  52E6               	movf	postinc1,f,c
  3787  0049DA  52E6               	movf	postinc1,f,c
  3788                           
  3789                           ;gemsecs.c: 16: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 17: {;gemsecs.c: 18:  uint16_t sum = 0, i;
  3790                           ;stkvar	_sum @ sp[(-4)+2]
  3791                           
  3792                           ;incstack = 0
  3793  0049DC  0EFE               	movlw	-2
  3794  0049DE  6AE3               	clrf	plusw1,c
  3795  0049E0  0EFF               	movlw	-1
  3796  0049E2  6AE3               	clrf	plusw1,c
  3797                           
  3798                           ;gemsecs.c: 20:  for (i = 0; i < byte_count; i++) {
  3799                           ;stkvar	_i @ sp[(-4)+0]
  3800  0049E4  0EFC               	movlw	-4
  3801  0049E6  6AE3               	clrf	plusw1,c
  3802  0049E8  0EFD               	movlw	-3
  3803  0049EA  6AE3               	clrf	plusw1,c
  3804  0049EC  D039               	goto	l7464
  3805  0049EE                     l7460:
  3806                           
  3807                           ;gemsecs.c: 21:   sum += byte_block[i];
  3808                           ;stkvar	_i @ sp[(-4)+0]
  3809  0049EE  0EFC               	movlw	-4
  3810  0049F0  006F FF8C  F047    	movff	plusw1,btemp+10
  3811  0049F6  0EFD               	movlw	-3
  3812  0049F8  006F FF8C  F048    	movff	plusw1,btemp+11
  3813                           
  3814                           ;stkvar	_byte_block @ sp[(-4)+-2]
  3815  0049FE  0EFA               	movlw	-6
  3816  004A00  006F FF8C  F045    	movff	plusw1,btemp+8
  3817  004A06  0EFB               	movlw	-5
  3818  004A08  006F FF8C  F046    	movff	plusw1,btemp+9
  3819  004A0E  5047               	movf	btemp+10,w,c
  3820  004A10  2445               	addwf	btemp+8,w,c
  3821  004A12  6ED9               	movwf	fsr2l,c
  3822  004A14  5048               	movf	btemp+11,w,c
  3823  004A16  2046               	addwfc	btemp+9,w,c
  3824  004A18  6EDA               	movwf	fsr2h,c
  3825  004A1A  50DF               	movf	indf2,w,c
  3826  004A1C  6E48               	movwf	btemp+11,c
  3827                           
  3828                           ;stkvar	_sum @ sp[(-4)+2]
  3829  004A1E  0EFE               	movlw	-2
  3830  004A20  50E3               	movf	plusw1,w,c
  3831  004A22  2448               	addwf	btemp+11,w,c
  3832  004A24  6E3D               	movwf	btemp,c
  3833  004A26  0EFE               	movlw	-2
  3834  004A28  0060  F0F7  FFE3   	movff	btemp,plusw1
  3835  004A2E  6A3D               	clrf	btemp,c
  3836  004A30  0EFF               	movlw	-1
  3837  004A32  50E3               	movf	plusw1,w,c
  3838  004A34  223D               	addwfc	btemp,f,c
  3839  004A36  0EFF               	movlw	-1
  3840  004A38  0060  F0F7  FFE3   	movff	btemp,plusw1
  3841                           
  3842                           ;gemsecs.c: 22:  }
  3843                           ;stkvar	_i @ sp[(-4)+0]
  3844  004A3E  0EFC               	movlw	-4
  3845  004A40  50E3               	movf	plusw1,w,c
  3846  004A42  0F01               	addlw	1
  3847  004A44  6E3D               	movwf	btemp,c
  3848  004A46  0EFC               	movlw	-4
  3849  004A48  0060  F0F7  FFE3   	movff	btemp,plusw1
  3850  004A4E  6A3D               	clrf	btemp,c
  3851  004A50  0EFD               	movlw	-3
  3852  004A52  50E3               	movf	plusw1,w,c
  3853  004A54  203D               	addwfc	btemp,w,c
  3854  004A56  6E3D               	movwf	btemp,c
  3855  004A58  0EFD               	movlw	-3
  3856  004A5A  0060  F0F7  FFE3   	movff	btemp,plusw1
  3857  004A60                     l7464:
  3858                           
  3859                           ;stkvar	_byte_count @ sp[(-4)+-4]
  3860  004A60  0EF8               	movlw	-8
  3861  004A62  006F FF8C  F047    	movff	plusw1,btemp+10
  3862  004A68  0EF9               	movlw	-7
  3863  004A6A  006F FF8C  F048    	movff	plusw1,btemp+11
  3864                           
  3865                           ;stkvar	_i @ sp[(-4)+0]
  3866  004A70  0EFC               	movlw	-4
  3867  004A72  006F FF8C  F045    	movff	plusw1,btemp+8
  3868  004A78  0EFD               	movlw	-3
  3869  004A7A  006F FF8C  F046    	movff	plusw1,btemp+9
  3870  004A80  5047               	movf	btemp+10,w,c
  3871  004A82  5C45               	subwf	btemp+8,w,c
  3872  004A84  5048               	movf	btemp+11,w,c
  3873  004A86  5846               	subwfb	btemp+9,w,c
  3874  004A88  A0D8               	btfss	status,0,c
  3875  004A8A  D7B1               	goto	l7460
  3876                           
  3877                           ;gemsecs.c: 23:  return sum;
  3878                           ;stkvar	_sum @ sp[(-4)+2]
  3879  004A8C  0EFE               	movlw	-2
  3880  004A8E  006F FF8C  F03D    	movff	plusw1,btemp
  3881  004A94  0EFF               	movlw	-1
  3882  004A96  006F FF8C  F03E    	movff	plusw1,btemp+1
  3883                           
  3884                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  3885  004A9C  0EF8               	movlw	248
  3886  004A9E  26E1               	addwf	fsr1l,f,c
  3887  004AA0  0EFF               	movlw	255
  3888  004AA2  22E2               	addwfc	fsr1h,f,c
  3889  004AA4  0012               	return		;funcret
  3890  004AA6                     __end_of_block_checksum:
  3891                           	opt callstack 0
  3892                           
  3893 ;; *************** function _UART1_put_buffer *****************
  3894 ;; Defined at:
  3895 ;;		line 250 in file "mcc_generated_files/uart1.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;  bufData         1  [STACK] unsigned char 
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;		None
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  1  [STACK] void 
  3902 ;; Registers used:
  3903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 3F/39
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3913 ;;Total ram usage:        0 bytes
  3914 ;; Hardware stack levels used:    1
  3915 ;; Hardware stack levels required when called:    3
  3916 ;; This function calls:
  3917 ;;		Nothing
  3918 ;; This function is called by:
  3919 ;;		_main
  3920 ;;		_t_protocol
  3921 ;;		_secs_send
  3922 ;; This function uses a reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text7
  3926  005986                     __ptext7:
  3927                           	opt callstack 0
  3928  005986                     _UART1_put_buffer:
  3929                           	opt callstack 25
  3930                           
  3931                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  3932                           
  3933                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3934                           ;incstack = 0
  3935  005986  0139               	movlb	57	; () banked
  3936  005988  9793               	bcf	147,3,b	;volatile
  3937                           
  3938                           ; BSR set to: 57
  3939                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  3940                           ;stkvar	_bufData @ sp[(0)+-1]
  3941  00598A  0EA1               	movlw	low _uart1RxBuffer
  3942  00598C  2439               	addwf	_uart1RxHead,w,c	;volatile
  3943  00598E  6ED9               	movwf	fsr2l,c
  3944  005990  6ADA               	clrf	fsr2h,c
  3945  005992  0E01               	movlw	high _uart1RxBuffer
  3946  005994  22DA               	addwfc	fsr2h,f,c
  3947  005996  0EFF               	movlw	-1
  3948  005998  006F FF8F FFDF     	movff	plusw1,indf2
  3949                           
  3950                           ; BSR set to: 57
  3951  00599E  2A39               	incf	_uart1RxHead,f,c	;volatile
  3952                           
  3953                           ; BSR set to: 57
  3954                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  3955  0059A0  0E3F               	movlw	63
  3956  0059A2  6439               	cpfsgt	_uart1RxHead,c
  3957  0059A4  D001               	goto	l5542
  3958                           
  3959                           ; BSR set to: 57
  3960                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  3961  0059A6  6A39               	clrf	_uart1RxHead,c	;volatile
  3962  0059A8                     l5542:
  3963                           
  3964                           ; BSR set to: 57
  3965                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  3966  0059A8  2A37               	incf	_uart1RxCount,f,c	;volatile
  3967                           
  3968                           ; BSR set to: 57
  3969                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  3970  0059AA  8793               	bsf	147,3,b	;volatile
  3971                           
  3972                           ; BSR set to: 57
  3973                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  3974  0059AC  52E5               	movf	postdec1,f,c
  3975  0059AE  0012               	return		;funcret
  3976  0059B0                     __end_of_UART1_put_buffer:
  3977                           	opt callstack 0
  3978                           
  3979 ;; *************** function _UART1_is_tx_ready *****************
  3980 ;; Defined at:
  3981 ;;		line 151 in file "mcc_generated_files/uart1.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;		None
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;		None
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  1  [STACK] unsigned char 
  3988 ;; Registers used:
  3989 ;;		btemp
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3999 ;;Total ram usage:        0 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:    3
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_secs_send
  4006 ;; This function uses a reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text8
  4010  005FAA                     __ptext8:
  4011                           	opt callstack 0
  4012  005FAA                     _UART1_is_tx_ready:
  4013                           	opt callstack 25
  4014                           
  4015                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  4016                           
  4017                           ; BSR set to: 57
  4018                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4019                           ;incstack = 0
  4020  005FAA  0060  F0E8  F03D   	movff	_uart1TxBufferRemaining,btemp	;volatile
  4021                           
  4022                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4023  005FB0  0012               	return		;funcret
  4024  005FB2                     __end_of_UART1_is_tx_ready:
  4025                           	opt callstack 0
  4026                           
  4027 ;; *************** function _UART1_Write *****************
  4028 ;; Defined at:
  4029 ;;		line 179 in file "mcc_generated_files/uart1.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;  txData          1  [STACK] unsigned char 
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;		None
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1  [STACK] void 
  4036 ;; Registers used:
  4037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 3F/39
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4047 ;;Total ram usage:        0 bytes
  4048 ;; Hardware stack levels used:    1
  4049 ;; Hardware stack levels required when called:    3
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_main
  4054 ;;		_r_protocol
  4055 ;;		_t_protocol
  4056 ;;		_secs_send
  4057 ;; This function uses a reentrant model
  4058 ;;
  4059                           
  4060                           	psect	text9
  4061  00577A                     __ptext9:
  4062                           	opt callstack 0
  4063  00577A                     _UART1_Write:
  4064                           	opt callstack 25
  4065                           
  4066                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4067                           
  4068                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  4069                           
  4070                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4071                           ;incstack = 0
  4072  00577A  503A               	movf	_uart1TxBufferRemaining,w,c	;volatile
  4073  00577C  B4D8               	btfsc	status,2,c
  4074  00577E  D7FD               	goto	_UART1_Write
  4075                           
  4076                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  4077  005780  0139               	movlb	57	; () banked
  4078  005782  B993               	btfsc	147,4,b	;volatile
  4079  005784  D005               	goto	l579
  4080                           
  4081                           ; BSR set to: 57
  4082                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  4083                           ;stkvar	_txData @ sp[(0)+-1]
  4084  005786  0EFF               	movlw	-1
  4085  005788  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  4086                           
  4087                           ;mcc_generated_files/uart1.c: 186:  } else {
  4088  00578E  D011               	goto	l5530
  4089  005790                     l579:
  4090                           
  4091                           ; BSR set to: 57
  4092                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  4093  005790  9993               	bcf	147,4,b	;volatile
  4094                           
  4095                           ; BSR set to: 57
  4096                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  4097                           ;stkvar	_txData @ sp[(0)+-1]
  4098  005792  0E80               	movlw	low _uart1TxBuffer
  4099  005794  243C               	addwf	_uart1TxHead,w,c	;volatile
  4100  005796  6ED9               	movwf	fsr2l,c
  4101  005798  6ADA               	clrf	fsr2h,c
  4102  00579A  0E02               	movlw	high _uart1TxBuffer
  4103  00579C  22DA               	addwfc	fsr2h,f,c
  4104  00579E  0EFF               	movlw	-1
  4105  0057A0  006F FF8F FFDF     	movff	plusw1,indf2
  4106                           
  4107                           ; BSR set to: 57
  4108  0057A6  2A3C               	incf	_uart1TxHead,f,c	;volatile
  4109                           
  4110                           ; BSR set to: 57
  4111                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  4112  0057A8  0E3F               	movlw	63
  4113  0057AA  643C               	cpfsgt	_uart1TxHead,c
  4114  0057AC  D001               	goto	l5528
  4115                           
  4116                           ; BSR set to: 57
  4117                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  4118  0057AE  6A3C               	clrf	_uart1TxHead,c	;volatile
  4119  0057B0                     l5528:
  4120                           
  4121                           ; BSR set to: 57
  4122                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  4123  0057B0  063A               	decf	_uart1TxBufferRemaining,f,c	;volatile
  4124  0057B2                     l5530:
  4125                           
  4126                           ; BSR set to: 57
  4127                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  4128  0057B2  8993               	bsf	147,4,b	;volatile
  4129                           
  4130                           ; BSR set to: 57
  4131                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4132  0057B4  52E5               	movf	postdec1,f,c
  4133  0057B6  0012               	return		;funcret
  4134  0057B8                     __end_of_UART1_Write:
  4135                           	opt callstack 0
  4136                           
  4137 ;; *************** function _run_checksum *****************
  4138 ;; Defined at:
  4139 ;;		line 29 in file "gemsecs.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  byte_block      1  [STACK] unsigned char 
  4142 ;;  clear           1  [STACK] _Bool 
  4143 ;; Auto vars:     Size  Location     Type
  4144 ;;		None
  4145 ;; Return value:  Size  Location     Type
  4146 ;;                  2  [STACK] unsigned short 
  4147 ;; Registers used:
  4148 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  4149 ;; Tracked objects:
  4150 ;;		On entry : 6/39
  4151 ;;		On exit  : 0/0
  4152 ;;		Unchanged: 0/0
  4153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4154 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4157 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4158 ;;Total ram usage:        0 bytes
  4159 ;; Hardware stack levels used:    1
  4160 ;; Hardware stack levels required when called:    3
  4161 ;; This function calls:
  4162 ;;		Nothing
  4163 ;; This function is called by:
  4164 ;;		_r_protocol
  4165 ;; This function uses a reentrant model
  4166 ;;
  4167                           
  4168                           	psect	text10
  4169  005A06                     __ptext10:
  4170                           	opt callstack 0
  4171  005A06                     _run_checksum:
  4172                           	opt callstack 26
  4173                           
  4174                           ;gemsecs.c: 29: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 30: {;
      +                          gemsecs.c: 31:  static uint16_t sum = 0;;gemsecs.c: 33:  if (clear)
  4175                           ;stkvar	_clear @ sp[(0)+-2]
  4176                           
  4177                           ; BSR set to: 57
  4178                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4179                           ;incstack = 0
  4180  005A06  0EFE               	movlw	-2
  4181  005A08  50E3               	movf	plusw1,w,c
  4182  005A0A  B4D8               	btfsc	status,2,c
  4183  005A0C  D002               	goto	l6072
  4184                           
  4185                           ;gemsecs.c: 34:   sum = 0;
  4186  005A0E  6A2A               	clrf	run_checksum@sum,c
  4187  005A10  6A2B               	clrf	run_checksum@sum+1,c
  4188  005A12                     l6072:
  4189                           
  4190                           ;gemsecs.c: 36:  sum += byte_block;
  4191                           ;stkvar	_byte_block @ sp[(0)+-1]
  4192  005A12  0EFF               	movlw	-1
  4193  005A14  50E3               	movf	plusw1,w,c
  4194  005A16  262A               	addwf	run_checksum@sum,f,c
  4195  005A18  0E00               	movlw	0
  4196  005A1A  222B               	addwfc	run_checksum@sum+1,f,c
  4197                           
  4198                           ;gemsecs.c: 37:  return sum;
  4199  005A1C  0060  F0A8  F03D   	movff	run_checksum@sum,btemp
  4200  005A22  0060  F0AC  F03E   	movff	run_checksum@sum+1,btemp+1
  4201                           
  4202                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  4203  005A28  52E5               	movf	postdec1,f,c
  4204  005A2A  52E5               	movf	postdec1,f,c
  4205  005A2C  0012               	return		;funcret
  4206  005A2E                     __end_of_run_checksum:
  4207                           	opt callstack 0
  4208                           
  4209 ;; *************** function _WaitMs *****************
  4210 ;; Defined at:
  4211 ;;		line 31 in file "timers.c"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;  numMilliseco    2  [STACK] unsigned short 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;		None
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  1  [STACK] void 
  4218 ;; Registers used:
  4219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4229 ;;Total ram usage:        0 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:    4
  4232 ;; This function calls:
  4233 ;;		_StartTimer
  4234 ;;		_TimerDone
  4235 ;; This function is called by:
  4236 ;;		_main
  4237 ;;		_r_protocol
  4238 ;;		_t_protocol
  4239 ;; This function uses a reentrant model
  4240 ;;
  4241                           
  4242                           	psect	text11
  4243  0059B0                     __ptext11:
  4244                           	opt callstack 0
  4245  0059B0                     _WaitMs:
  4246                           	opt callstack 25
  4247                           
  4248                           ;timers.c: 31: void WaitMs(uint16_t numMilliseconds);timers.c: 32: {;timers.c: 33:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  4249                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  4250                           
  4251                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4252                           ;incstack = 0
  4253  0059B0  0EFE               	movlw	-2
  4254  0059B2  006F FF8F FFE6     	movff	plusw1,postinc1
  4255  0059B8  006F FF8F FFE6     	movff	plusw1,postinc1
  4256  0059BE  0E00               	movlw	0
  4257  0059C0  6EE6               	movwf	postinc1,c
  4258  0059C2  EC1B  F02C         	call	_StartTimer	;wreg free
  4259  0059C6                     l6028:
  4260                           
  4261                           ;timers.c: 34:  while (!TimerDone(TMR_INTERNAL)) {
  4262  0059C6  0E00               	movlw	0
  4263  0059C8  6EE6               	movwf	postinc1,c
  4264  0059CA  EC7F  F02E         	call	_TimerDone	;wreg free
  4265  0059CE  503D               	movf	btemp,w,c
  4266  0059D0  B4D8               	btfsc	status,2,c
  4267  0059D2  D7F9               	goto	l6028
  4268                           
  4269                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  4270  0059D4  52E5               	movf	postdec1,f,c
  4271  0059D6  52E5               	movf	postdec1,f,c
  4272  0059D8  0012               	return		;funcret
  4273  0059DA                     __end_of_WaitMs:
  4274                           	opt callstack 0
  4275                           
  4276 ;; *************** function _TimerDone *****************
  4277 ;; Defined at:
  4278 ;;		line 20 in file "timers.c"
  4279 ;; Parameters:    Size  Location     Type
  4280 ;;  timer           1  [STACK] unsigned char 
  4281 ;; Auto vars:     Size  Location     Type
  4282 ;;		None
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  1  [STACK] _Bool 
  4285 ;; Registers used:
  4286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4296 ;;Total ram usage:        0 bytes
  4297 ;; Hardware stack levels used:    1
  4298 ;; Hardware stack levels required when called:    3
  4299 ;; This function calls:
  4300 ;;		Nothing
  4301 ;; This function is called by:
  4302 ;;		_r_protocol
  4303 ;;		_t_protocol
  4304 ;;		_WaitMs
  4305 ;; This function uses a reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text12
  4309  005CFE                     __ptext12:
  4310                           	opt callstack 0
  4311  005CFE                     _TimerDone:
  4312                           	opt callstack 25
  4313                           
  4314                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  4315                           ;stkvar	_timer @ sp[(0)+-1]
  4316                           
  4317                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4318                           ;incstack = 0
  4319  005CFE  0EFF               	movlw	-1
  4320  005D00  50E3               	movf	plusw1,w,c
  4321  005D02  0D02               	mullw	2
  4322  005D04  50F3               	movf	prodl,w,c
  4323  005D06  0F79               	addlw	low _tickCount
  4324  005D08  6ED9               	movwf	fsr2l,c
  4325  005D0A  6ADA               	clrf	fsr2h,c
  4326  005D0C  50DE               	movf	postinc2,w,c
  4327  005D0E  10DE               	iorwf	postinc2,w,c
  4328  005D10  A4D8               	btfss	status,2,c
  4329  005D12  D002               	goto	l5602
  4330                           
  4331                           ;timers.c: 23:   return 1;
  4332  005D14  0E01               	movlw	1
  4333  005D16  D001               	goto	L17
  4334  005D18                     l5602:
  4335                           
  4336                           ;timers.c: 25:  return 0;
  4337  005D18  0E00               	movlw	0
  4338  005D1A                     L17:
  4339  005D1A  6E3D               	movwf	btemp,c
  4340                           
  4341                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4342  005D1C  52E5               	movf	postdec1,f,c
  4343  005D1E  0012               	return		;funcret
  4344  005D20                     __end_of_TimerDone:
  4345                           	opt callstack 0
  4346                           
  4347 ;; *************** function _StartTimer *****************
  4348 ;; Defined at:
  4349 ;;		line 12 in file "timers.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  timer           1  [STACK] unsigned char 
  4352 ;;  count           2  [STACK] unsigned short 
  4353 ;; Auto vars:     Size  Location     Type
  4354 ;;		None
  4355 ;; Return value:  Size  Location     Type
  4356 ;;                  1  [STACK] void 
  4357 ;; Registers used:
  4358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4359 ;; Tracked objects:
  4360 ;;		On entry : 0/39
  4361 ;;		On exit  : 0/0
  4362 ;;		Unchanged: 0/0
  4363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4368 ;;Total ram usage:        0 bytes
  4369 ;; Hardware stack levels used:    1
  4370 ;; Hardware stack levels required when called:    3
  4371 ;; This function calls:
  4372 ;;		Nothing
  4373 ;; This function is called by:
  4374 ;;		_r_protocol
  4375 ;;		_t_protocol
  4376 ;;		_WaitMs
  4377 ;; This function uses a reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text13
  4381  005836                     __ptext13:
  4382                           	opt callstack 0
  4383  005836                     _StartTimer:
  4384                           	opt callstack 25
  4385                           
  4386                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  4387                           ;stkvar	_count @ sp[(0)+-3]
  4388                           
  4389                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4390                           ;incstack = 0
  4391  005836  0EFD               	movlw	-3
  4392  005838  006F FF8C  F047    	movff	plusw1,btemp+10
  4393  00583E  0EFE               	movlw	-2
  4394  005840  006F FF8C  F048    	movff	plusw1,btemp+11
  4395  005846  90D8               	bcf	status,0,c
  4396  005848  3447               	rlcf	btemp+10,w,c
  4397  00584A  6E45               	movwf	btemp+8,c
  4398  00584C  3448               	rlcf	btemp+11,w,c
  4399  00584E  6E46               	movwf	btemp+9,c
  4400                           
  4401                           ;stkvar	_timer @ sp[(0)+-1]
  4402  005850  0EFF               	movlw	-1
  4403  005852  50E3               	movf	plusw1,w,c
  4404  005854  0D02               	mullw	2
  4405  005856  50F3               	movf	prodl,w,c
  4406  005858  0F79               	addlw	low _tickCount
  4407  00585A  6ED9               	movwf	fsr2l,c
  4408  00585C  6ADA               	clrf	fsr2h,c
  4409  00585E  0060  F117  FFDE   	movff	btemp+8,postinc2
  4410  005864  0060  F11B  FFDD   	movff	btemp+9,postdec2
  4411                           
  4412                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  4413  00586A  52E5               	movf	postdec1,f,c
  4414  00586C  52E5               	movf	postdec1,f,c
  4415  00586E  52E5               	movf	postdec1,f,c
  4416  005870  0012               	return		;funcret
  4417  005872                     __end_of_StartTimer:
  4418                           	opt callstack 0
  4419                           
  4420 ;; *************** function _UART1_is_rx_ready *****************
  4421 ;; Defined at:
  4422 ;;		line 146 in file "mcc_generated_files/uart1.c"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;		None
  4425 ;; Auto vars:     Size  Location     Type
  4426 ;;		None
  4427 ;; Return value:  Size  Location     Type
  4428 ;;                  1  [STACK] unsigned char 
  4429 ;; Registers used:
  4430 ;;		btemp
  4431 ;; Tracked objects:
  4432 ;;		On entry : 0/0
  4433 ;;		On exit  : 0/0
  4434 ;;		Unchanged: 0/0
  4435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4440 ;;Total ram usage:        0 bytes
  4441 ;; Hardware stack levels used:    1
  4442 ;; Hardware stack levels required when called:    3
  4443 ;; This function calls:
  4444 ;;		Nothing
  4445 ;; This function is called by:
  4446 ;;		_r_protocol
  4447 ;;		_t_protocol
  4448 ;; This function uses a reentrant model
  4449 ;;
  4450                           
  4451                           	psect	text14
  4452  005FB2                     __ptext14:
  4453                           	opt callstack 0
  4454  005FB2                     _UART1_is_rx_ready:
  4455                           	opt callstack 26
  4456                           
  4457                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  4458                           
  4459                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4460                           ;incstack = 0
  4461  005FB2  0060  F0DC  F03D   	movff	_uart1RxCount,btemp	;volatile
  4462                           
  4463                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4464  005FB8  0012               	return		;funcret
  4465  005FBA                     __end_of_UART1_is_rx_ready:
  4466                           	opt callstack 0
  4467                           
  4468 ;; *************** function _UART1_Read *****************
  4469 ;; Defined at:
  4470 ;;		line 161 in file "mcc_generated_files/uart1.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;		None
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  readValue       1  [STACK] unsigned char 
  4475 ;; Return value:  Size  Location     Type
  4476 ;;                  1  [STACK] unsigned char 
  4477 ;; Registers used:
  4478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  4479 ;; Tracked objects:
  4480 ;;		On entry : 0/0
  4481 ;;		On exit  : 3F/39
  4482 ;;		Unchanged: 0/0
  4483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4488 ;;Total ram usage:        0 bytes
  4489 ;; Hardware stack levels used:    1
  4490 ;; Hardware stack levels required when called:    3
  4491 ;; This function calls:
  4492 ;;		Nothing
  4493 ;; This function is called by:
  4494 ;;		_r_protocol
  4495 ;;		_t_protocol
  4496 ;; This function uses a reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text15
  4500  0057B8                     __ptext15:
  4501                           	opt callstack 0
  4502  0057B8                     _UART1_Read:
  4503                           	opt callstack 0
  4504                           
  4505                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4506  0057B8  52E6               	movf	postinc1,f,c
  4507  0057BA                     
  4508                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4509                           
  4510                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  4511  0057BA  5037               	movf	_uart1RxCount,w,c	;volatile
  4512  0057BC  B4D8               	btfsc	status,2,c
  4513  0057BE  D7FD               	goto	l5932
  4514                           
  4515                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  4516  0057C0  0EA1               	movlw	low _uart1RxBuffer
  4517  0057C2  2438               	addwf	_uart1RxTail,w,c	;volatile
  4518  0057C4  6ED9               	movwf	fsr2l,c
  4519  0057C6  6ADA               	clrf	fsr2h,c
  4520  0057C8  0E01               	movlw	high _uart1RxBuffer
  4521  0057CA  22DA               	addwfc	fsr2h,f,c
  4522  0057CC  50DF               	movf	indf2,w,c
  4523  0057CE  6E48               	movwf	btemp+11,c
  4524                           
  4525                           ;stkvar	_readValue @ sp[(-1)+0]
  4526  0057D0  0EFF               	movlw	-1
  4527  0057D2  0060  F123  FFE3   	movff	btemp+11,plusw1
  4528  0057D8  2A38               	incf	_uart1RxTail,f,c	;volatile
  4529                           
  4530                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  4531  0057DA  0E3F               	movlw	63
  4532  0057DC  6438               	cpfsgt	_uart1RxTail,c
  4533  0057DE  D001               	goto	l572
  4534                           
  4535                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  4536  0057E0  6A38               	clrf	_uart1RxTail,c	;volatile
  4537  0057E2                     l572:
  4538                           
  4539                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  4540  0057E2  0139               	movlb	57	; () banked
  4541  0057E4  9793               	bcf	147,3,b	;volatile
  4542                           
  4543                           ; BSR set to: 57
  4544                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  4545  0057E6  0637               	decf	_uart1RxCount,f,c	;volatile
  4546                           
  4547                           ; BSR set to: 57
  4548                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  4549  0057E8  8793               	bsf	147,3,b	;volatile
  4550                           
  4551                           ; BSR set to: 57
  4552                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  4553                           ;stkvar	_readValue @ sp[(-1)+0]
  4554  0057EA  0EFF               	movlw	-1
  4555  0057EC  006F FF8C  F03D    	movff	plusw1,btemp
  4556                           
  4557                           ; BSR set to: 57
  4558                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  4559  0057F2  52E5               	movf	postdec1,f,c
  4560  0057F4  0012               	return		;funcret
  4561  0057F6                     __end_of_UART1_Read:
  4562                           	opt callstack 0
  4563                           
  4564 ;; *************** function _init_display *****************
  4565 ;; Defined at:
  4566 ;;		line 35 in file "eadog.c"
  4567 ;; Parameters:    Size  Location     Type
  4568 ;;		None
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;		None
  4571 ;; Return value:  Size  Location     Type
  4572 ;;                  1  [STACK] void 
  4573 ;; Registers used:
  4574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4575 ;; Tracked objects:
  4576 ;;		On entry : 0/0
  4577 ;;		On exit  : 3F/3D
  4578 ;;		Unchanged: 0/0
  4579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4584 ;;Total ram usage:        0 bytes
  4585 ;; Hardware stack levels used:    1
  4586 ;; Hardware stack levels required when called:    5
  4587 ;; This function calls:
  4588 ;;		_ringBufS_init
  4589 ;;		_send_lcd_cmd
  4590 ;;		_send_lcd_cmd_long
  4591 ;;		_wdtdelay
  4592 ;; This function is called by:
  4593 ;;		_main
  4594 ;; This function uses a reentrant model
  4595 ;;
  4596                           
  4597                           	psect	text16
  4598  0048EA                     __ptext16:
  4599                           	opt callstack 0
  4600  0048EA                     _init_display:
  4601                           	opt callstack 25
  4602                           
  4603                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  4604                           
  4605                           ; BSR set to: 57
  4606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4607                           ;incstack = 0
  4608  0048EA  0E43               	movlw	low _ring_buf1
  4609  0048EC  0100               	movlb	0	; () banked
  4610  0048EE  6F73               	movwf	(_spi_link+6)& (0+255),b	;volatile
  4611  0048F0  0E03               	movlw	high _ring_buf1
  4612  0048F2  6F74               	movwf	(_spi_link+7)& (0+255),b	;volatile
  4613                           
  4614                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  4615  0048F4  0E00               	movlw	low _ring_buf2
  4616  0048F6  6F71               	movwf	(_spi_link+4)& (0+255),b	;volatile
  4617  0048F8  0E03               	movlw	high _ring_buf2
  4618  0048FA  6F72               	movwf	(_spi_link+5)& (0+255),b	;volatile
  4619                           
  4620                           ; BSR set to: 0
  4621                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  4622  0048FC  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  4623  004902  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  4624  004908  EC3F  F02D         	call	_ringBufS_init	;wreg free
  4625                           
  4626                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  4627  00490C  0060  F1C7  FFE6   	movff	_spi_link+4,postinc1
  4628  004912  0060  F1CB  FFE6   	movff	_spi_link+5,postinc1
  4629  004918  EC3F  F02D         	call	_ringBufS_init	;wreg free
  4630                           
  4631                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  4632  00491C  80BE               	bsf	16318,0,c	;volatile
  4633  00491E  84BC               	bsf	16316,2,c	;volatile
  4634                           
  4635                           ;eadog.c: 44:  wdtdelay(350000);
  4636  004920  0E30               	movlw	48
  4637  004922  6EE6               	movwf	postinc1,c
  4638  004924  0E57               	movlw	87
  4639  004926  6EE6               	movwf	postinc1,c
  4640  004928  0E05               	movlw	5
  4641  00492A  6EE6               	movwf	postinc1,c
  4642  00492C  0E00               	movlw	0
  4643  00492E  6EE6               	movwf	postinc1,c
  4644  004930  EC27  F02A         	call	_wdtdelay	;wreg free
  4645                           
  4646                           ; BSR set to: 0
  4647                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  4648  004934  0E39               	movlw	57
  4649  004936  6EE6               	movwf	postinc1,c
  4650  004938  EC2B  F02D         	call	_send_lcd_cmd	;wreg free
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  4654  00493C  0E1D               	movlw	29
  4655  00493E  6EE6               	movwf	postinc1,c
  4656  004940  EC2B  F02D         	call	_send_lcd_cmd	;wreg free
  4657                           
  4658                           ; BSR set to: 0
  4659                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  4660  004944  0E50               	movlw	80
  4661  004946  6EE6               	movwf	postinc1,c
  4662  004948  EC2B  F02D         	call	_send_lcd_cmd	;wreg free
  4663                           
  4664                           ; BSR set to: 0
  4665                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  4666  00494C  0E6C               	movlw	108
  4667  00494E  6EE6               	movwf	postinc1,c
  4668  004950  EC2B  F02D         	call	_send_lcd_cmd	;wreg free
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  4672  004954  0E76               	movlw	118
  4673  004956  6EE6               	movwf	postinc1,c
  4674  004958  EC2B  F02D         	call	_send_lcd_cmd	;wreg free
  4675                           
  4676                           ; BSR set to: 0
  4677                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  4678  00495C  0E38               	movlw	56
  4679  00495E  6EE6               	movwf	postinc1,c
  4680  004960  EC17  F02D         	call	_send_lcd_cmd_long	;wreg free
  4681                           
  4682                           ; BSR set to: 0
  4683                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  4684  004964  0E0F               	movlw	15
  4685  004966  6EE6               	movwf	postinc1,c
  4686  004968  EC2B  F02D         	call	_send_lcd_cmd	;wreg free
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  4690  00496C  0E01               	movlw	1
  4691  00496E  6EE6               	movwf	postinc1,c
  4692  004970  EC17  F02D         	call	_send_lcd_cmd_long	;wreg free
  4693                           
  4694                           ; BSR set to: 0
  4695                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  4696  004974  0E02               	movlw	2
  4697  004976  6EE6               	movwf	postinc1,c
  4698  004978  EC2B  F02D         	call	_send_lcd_cmd	;wreg free
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  4702  00497C  0E06               	movlw	6
  4703  00497E  6EE6               	movwf	postinc1,c
  4704  004980  EC2B  F02D         	call	_send_lcd_cmd	;wreg free
  4705                           
  4706                           ; BSR set to: 0
  4707                           ;eadog.c: 55:  wdtdelay(30);
  4708  004984  0E1E               	movlw	30
  4709  004986  6EE6               	movwf	postinc1,c
  4710  004988  0E00               	movlw	0
  4711  00498A  6EE6               	movwf	postinc1,c
  4712  00498C  0E00               	movlw	0
  4713  00498E  6EE6               	movwf	postinc1,c
  4714  004990  0E00               	movlw	0
  4715  004992  6EE6               	movwf	postinc1,c
  4716  004994  EC27  F02A         	call	_wdtdelay	;wreg free
  4717                           
  4718                           ; BSR set to: 0
  4719                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  4720  004998  0E02               	movlw	2
  4721  00499A  013D               	movlb	61	; () banked
  4722  00499C  6F16               	movwf	22,b	;volatile
  4723                           
  4724                           ; BSR set to: 61
  4725                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  4726  00499E  0E40               	movlw	64
  4727  0049A0  6F15               	movwf	21,b	;volatile
  4728                           
  4729                           ; BSR set to: 61
  4730                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  4731  0049A2  0E83               	movlw	131
  4732  0049A4  6F14               	movwf	20,b	;volatile
  4733                           
  4734                           ; BSR set to: 61
  4735                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  4736  0049A6  931A               	bcf	26,1,b	;volatile
  4737                           
  4738                           ; BSR set to: 61
  4739                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  4740  0049A8  0E3F               	movlw	-193
  4741  0049AA  013B               	movlb	59	; () banked
  4742  0049AC  17FD               	andwf	253,f,b	;volatile
  4743                           
  4744                           ; BSR set to: 59
  4745                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  4746  0049AE  9BFD               	bcf	253,5,b	;volatile
  4747                           
  4748                           ; BSR set to: 59
  4749                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  4750  0049B0  51FD               	movf	253,w,b	;volatile
  4751  0049B2  0BF9               	andlw	-7
  4752  0049B4  0902               	iorlw	2
  4753  0049B6  6FFD               	movwf	253,b	;volatile
  4754                           
  4755                           ; BSR set to: 59
  4756                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  4757  0049B8  0EE7               	movlw	-25
  4758  0049BA  17FD               	andwf	253,f,b	;volatile
  4759                           
  4760                           ; BSR set to: 59
  4761                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  4762  0049BC  81FD               	bsf	253,0,b	;volatile
  4763                           
  4764                           ; BSR set to: 59
  4765                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  4766  0049BE  0E43               	movlw	low _ring_buf1
  4767  0049C0  6FF9               	movwf	249,b	;volatile
  4768  0049C2  0E03               	movlw	high _ring_buf1
  4769  0049C4  6FFA               	movwf	250,b	;volatile
  4770  0049C6  0E00               	movlw	low (_ring_buf1 shr (0+16))
  4771  0049C8  6FFB               	movwf	251,b	;volatile
  4772                           
  4773                           ; BSR set to: 59
  4774                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  4775  0049CA  9BFC               	bcf	252,5,b	;volatile
  4776                           
  4777                           ; BSR set to: 59
  4778                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  4779  0049CC  013D               	movlb	61	; () banked
  4780  0049CE  831A               	bsf	26,1,b	;volatile
  4781                           
  4782                           ; BSR set to: 61
  4783                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  4784  0049D0  90BE               	bcf	16318,0,c	;volatile
  4785                           
  4786                           ; BSR set to: 61
  4787                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4788  0049D2  0012               	return		;funcret
  4789  0049D4                     __end_of_init_display:
  4790                           	opt callstack 0
  4791                           
  4792 ;; *************** function _send_lcd_cmd_long *****************
  4793 ;; Defined at:
  4794 ;;		line 97 in file "eadog.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  cmd             1  [STACK] unsigned char 
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;		None
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  1  [STACK] void 
  4801 ;; Registers used:
  4802 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4803 ;; Tracked objects:
  4804 ;;		On entry : 3F/0
  4805 ;;		On exit  : 3F/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4812 ;;Total ram usage:        0 bytes
  4813 ;; Hardware stack levels used:    1
  4814 ;; Hardware stack levels required when called:    4
  4815 ;; This function calls:
  4816 ;;		_SPI1_Exchange8bit
  4817 ;;		_wdtdelay
  4818 ;; This function is called by:
  4819 ;;		_init_display
  4820 ;; This function uses a reentrant model
  4821 ;;
  4822                           
  4823                           	psect	text17
  4824  005A2E                     __ptext17:
  4825                           	opt callstack 0
  4826  005A2E                     _send_lcd_cmd_long:
  4827                           	opt callstack 25
  4828                           
  4829                           ; BSR set to: 61
  4830                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4831                           ;incstack = 0
  4832                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  4833  005A2E  92BC               	bcf	16316,1,c	;volatile
  4834                           
  4835                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  4836  005A30  94BC               	bcf	16316,2,c	;volatile
  4837                           
  4838                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  4839                           ;stkvar	_cmd @ sp[(0)+-1]
  4840  005A32  0EFF               	movlw	-1
  4841  005A34  50E3               	movf	plusw1,w,c
  4842  005A36  6EE6               	movwf	postinc1,c
  4843  005A38  EC16  F02F         	call	_SPI1_Exchange8bit	;wreg free
  4844                           
  4845                           ; BSR set to: 57
  4846                           ;eadog.c: 102:  wdtdelay(800);
  4847  005A3C  0E20               	movlw	32
  4848  005A3E  6EE6               	movwf	postinc1,c
  4849  005A40  0E03               	movlw	3
  4850  005A42  6EE6               	movwf	postinc1,c
  4851  005A44  0E00               	movlw	0
  4852  005A46  6EE6               	movwf	postinc1,c
  4853  005A48  0E00               	movlw	0
  4854  005A4A  6EE6               	movwf	postinc1,c
  4855  005A4C  EC27  F02A         	call	_wdtdelay	;wreg free
  4856                           
  4857                           ; BSR set to: 0
  4858  005A50  82BC               	bsf	16316,1,c	;volatile
  4859                           
  4860                           ; BSR set to: 0
  4861                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4862  005A52  52E5               	movf	postdec1,f,c
  4863  005A54  0012               	return		;funcret
  4864  005A56                     __end_of_send_lcd_cmd_long:
  4865                           	opt callstack 0
  4866                           
  4867 ;; *************** function _send_lcd_cmd *****************
  4868 ;; Defined at:
  4869 ;;		line 85 in file "eadog.c"
  4870 ;; Parameters:    Size  Location     Type
  4871 ;;  cmd             1  [STACK] unsigned char 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;		None
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1  [STACK] void 
  4876 ;; Registers used:
  4877 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4878 ;; Tracked objects:
  4879 ;;		On entry : 3F/0
  4880 ;;		On exit  : 3F/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4887 ;;Total ram usage:        0 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:    4
  4890 ;; This function calls:
  4891 ;;		_SPI1_Exchange8bit
  4892 ;;		_wdtdelay
  4893 ;; This function is called by:
  4894 ;;		_init_display
  4895 ;; This function uses a reentrant model
  4896 ;;
  4897                           
  4898                           	psect	text18
  4899  005A56                     __ptext18:
  4900                           	opt callstack 0
  4901  005A56                     _send_lcd_cmd:
  4902                           	opt callstack 25
  4903                           
  4904                           ; BSR set to: 0
  4905                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4906                           ;incstack = 0
  4907                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  4908  005A56  92BC               	bcf	16316,1,c	;volatile
  4909                           
  4910                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  4911  005A58  94BC               	bcf	16316,2,c	;volatile
  4912                           
  4913                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  4914                           ;stkvar	_cmd @ sp[(0)+-1]
  4915  005A5A  0EFF               	movlw	-1
  4916  005A5C  50E3               	movf	plusw1,w,c
  4917  005A5E  6EE6               	movwf	postinc1,c
  4918  005A60  EC16  F02F         	call	_SPI1_Exchange8bit	;wreg free
  4919                           
  4920                           ; BSR set to: 57
  4921                           ;eadog.c: 90:  wdtdelay(30);
  4922  005A64  0E1E               	movlw	30
  4923  005A66  6EE6               	movwf	postinc1,c
  4924  005A68  0E00               	movlw	0
  4925  005A6A  6EE6               	movwf	postinc1,c
  4926  005A6C  0E00               	movlw	0
  4927  005A6E  6EE6               	movwf	postinc1,c
  4928  005A70  0E00               	movlw	0
  4929  005A72  6EE6               	movwf	postinc1,c
  4930  005A74  EC27  F02A         	call	_wdtdelay	;wreg free
  4931                           
  4932                           ; BSR set to: 0
  4933  005A78  82BC               	bsf	16316,1,c	;volatile
  4934                           
  4935                           ; BSR set to: 0
  4936                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  4937  005A7A  52E5               	movf	postdec1,f,c
  4938  005A7C  0012               	return		;funcret
  4939  005A7E                     __end_of_send_lcd_cmd:
  4940                           	opt callstack 0
  4941                           
  4942 ;; *************** function _SPI1_Exchange8bit *****************
  4943 ;; Defined at:
  4944 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;  data            1  [STACK] unsigned char 
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;		None
  4949 ;; Return value:  Size  Location     Type
  4950 ;;                  1  [STACK] unsigned char 
  4951 ;; Registers used:
  4952 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  4953 ;; Tracked objects:
  4954 ;;		On entry : 0/0
  4955 ;;		On exit  : 3F/39
  4956 ;;		Unchanged: 0/0
  4957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4962 ;;Total ram usage:        0 bytes
  4963 ;; Hardware stack levels used:    1
  4964 ;; Hardware stack levels required when called:    3
  4965 ;; This function calls:
  4966 ;;		Nothing
  4967 ;; This function is called by:
  4968 ;;		_send_lcd_cmd
  4969 ;;		_send_lcd_cmd_long
  4970 ;; This function uses a reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text19
  4974  005E2C                     __ptext19:
  4975                           	opt callstack 0
  4976  005E2C                     _SPI1_Exchange8bit:
  4977                           	opt callstack 25
  4978                           
  4979                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4980                           
  4981                           ; BSR set to: 0
  4982                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4983                           ;incstack = 0
  4984  005E2C  0E01               	movlw	1
  4985  005E2E  013D               	movlb	61	; () banked
  4986  005E30  6F12               	movwf	18,b	;volatile
  4987                           
  4988                           ; BSR set to: 61
  4989                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4990                           ;stkvar	_data @ sp[(0)+-1]
  4991  005E32  0EFF               	movlw	-1
  4992  005E34  006F FF8F FD11     	movff	plusw1,15633	;volatile
  4993  005E3A                     l847:
  4994                           
  4995                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4996  005E3A  0139               	movlb	57	; () banked
  4997  005E3C  A9A2               	btfss	162,4,b	;volatile
  4998  005E3E  D7FD               	goto	l847
  4999                           
  5000                           ; BSR set to: 57
  5001                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  5002  005E40  006F F440  F03D    	movff	15632,btemp	;volatile
  5003                           
  5004                           ; BSR set to: 57
  5005                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  5006  005E46  52E5               	movf	postdec1,f,c
  5007  005E48  0012               	return		;funcret
  5008  005E4A                     __end_of_SPI1_Exchange8bit:
  5009                           	opt callstack 0
  5010                           
  5011 ;; *************** function _ringBufS_init *****************
  5012 ;; Defined at:
  5013 ;;		line 22 in file "ringbufs.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  _this           2  [STACK] PTR volatile struct ring
  5016 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;		None
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  1  [STACK] void 
  5021 ;; Registers used:
  5022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5032 ;;Total ram usage:        0 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; Hardware stack levels required when called:    4
  5035 ;; This function calls:
  5036 ;;		_memset
  5037 ;; This function is called by:
  5038 ;;		_init_display
  5039 ;; This function uses a reentrant model
  5040 ;;
  5041                           
  5042                           	psect	text20
  5043  005A7E                     __ptext20:
  5044                           	opt callstack 0
  5045  005A7E                     _ringBufS_init:
  5046                           	opt callstack 25
  5047                           
  5048                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  5049                           
  5050                           ; BSR set to: 57
  5051                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5052                           ;incstack = 0
  5053  005A7E  0E43               	movlw	67
  5054  005A80  6EE6               	movwf	postinc1,c
  5055  005A82  0E00               	movlw	0
  5056  005A84  6EE6               	movwf	postinc1,c
  5057  005A86  0E00               	movlw	0
  5058  005A88  6EE6               	movwf	postinc1,c
  5059  005A8A  0E00               	movlw	0
  5060  005A8C  6EE6               	movwf	postinc1,c
  5061                           
  5062                           ;stkvar	__this @ sp[(-4)+-2]
  5063  005A8E  0EFA               	movlw	-6
  5064  005A90  006F FF8F FFE6     	movff	plusw1,postinc1
  5065  005A96  006F FF8F FFE6     	movff	plusw1,postinc1
  5066  005A9C  EC7A  F019         	call	_memset	;wreg free
  5067                           
  5068                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5069  005AA0  52E5               	movf	postdec1,f,c
  5070  005AA2  52E5               	movf	postdec1,f,c
  5071  005AA4  0012               	return		;funcret
  5072  005AA6                     __end_of_ringBufS_init:
  5073                           	opt callstack 0
  5074                           
  5075 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5076 ;; Defined at:
  5077 ;;		line 222 in file "eadog.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;  r               1  [STACK] unsigned char 
  5080 ;;  c               1  [STACK] unsigned char 
  5081 ;;  strPtr          1  [STACK] PTR unsigned char 
  5082 ;;		 -> V(80), 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;		None
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  1  [STACK] void 
  5087 ;; Registers used:
  5088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5089 ;; Tracked objects:
  5090 ;;		On entry : 3F/0
  5091 ;;		On exit  : 3F/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5098 ;;Total ram usage:        0 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; Hardware stack levels required when called:   13
  5101 ;; This function calls:
  5102 ;;		_eaDogM_WriteString
  5103 ;;		_send_lcd_cmd_dma
  5104 ;; This function is called by:
  5105 ;;		_main
  5106 ;; This function uses a reentrant model
  5107 ;;
  5108                           
  5109                           	psect	text21
  5110  005902                     __ptext21:
  5111                           	opt callstack 0
  5112  005902                     _eaDogM_WriteStringAtPos:
  5113                           	opt callstack 17
  5114                           
  5115                           ;eadog.c: 222: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           223: {;eadog.c: 224:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5116                           ;stkvar	_c @ sp[(0)+-2]
  5117                           
  5118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5119                           ;incstack = 0
  5120  005902  0EFE               	movlw	-2
  5121  005904  006F FF8C  F048    	movff	plusw1,btemp+11
  5122                           
  5123                           ;stkvar	_r @ sp[(0)+-1]
  5124  00590A  0EFF               	movlw	-1
  5125  00590C  50E3               	movf	plusw1,w,c
  5126  00590E  0D10               	mullw	16
  5127  005910  50F3               	movf	prodl,w,c
  5128  005912  2448               	addwf	btemp+11,w,c
  5129  005914  0F80               	addlw	128
  5130  005916  6EE6               	movwf	postinc1,c
  5131  005918  EC7E  F02A         	call	_send_lcd_cmd_dma	;wreg free
  5132                           
  5133                           ;eadog.c: 225:  eaDogM_WriteString(strPtr);
  5134                           ;stkvar	_strPtr @ sp[(0)+-3]
  5135  00591C  0EFD               	movlw	-3
  5136  00591E  50E3               	movf	plusw1,w,c
  5137  005920  6EE6               	movwf	postinc1,c
  5138  005922  EC11  F026         	call	_eaDogM_WriteString	;wreg free
  5139                           
  5140                           ; BSR set to: 0
  5141                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  5142  005926  52E5               	movf	postdec1,f,c
  5143  005928  52E5               	movf	postdec1,f,c
  5144  00592A  52E5               	movf	postdec1,f,c
  5145  00592C  0012               	return		;funcret
  5146  00592E                     __end_of_eaDogM_WriteStringAtPos:
  5147                           	opt callstack 0
  5148                           
  5149 ;; *************** function _eaDogM_WriteString *****************
  5150 ;; Defined at:
  5151 ;;		line 167 in file "eadog.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  strPtr          1  [STACK] PTR unsigned char 
  5154 ;;		 -> V(80), 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1  [STACK] void 
  5159 ;; Registers used:
  5160 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5161 ;; Tracked objects:
  5162 ;;		On entry : 3F/0
  5163 ;;		On exit  : 3F/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5170 ;;Total ram usage:        0 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; Hardware stack levels required when called:   12
  5173 ;; This function calls:
  5174 ;;		_printf
  5175 ;;		_ringBufS_flush
  5176 ;;		_start_lcd
  5177 ;;		_strlen
  5178 ;;		_wait_lcd_set
  5179 ;; This function is called by:
  5180 ;;		_main
  5181 ;;		_eaDogM_WriteStringAtPos
  5182 ;; This function uses a reentrant model
  5183 ;;
  5184                           
  5185                           	psect	text22
  5186  004C22                     __ptext22:
  5187                           	opt callstack 0
  5188  004C22                     _eaDogM_WriteString:
  5189                           	opt callstack 17
  5190                           
  5191                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  5192                           
  5193                           ; BSR set to: 0
  5194                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5195                           ;incstack = 0
  5196  004C22  ECE1  F02F         	call	_wait_lcd_set	;wreg free
  5197                           
  5198                           ; BSR set to: 0
  5199                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  5200  004C26  0E00               	movlw	0
  5201  004C28  6EE6               	movwf	postinc1,c
  5202  004C2A  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5203  004C30  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5204  004C36  ECA7  F027         	call	_ringBufS_flush	;wreg free
  5205  004C3A  94BC               	bcf	16316,2,c	;volatile
  5206                           
  5207                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  5208                           ;stkvar	_strPtr @ sp[(0)+-1]
  5209  004C3C  0EFF               	movlw	-1
  5210  004C3E  006F FF8C  F048    	movff	plusw1,btemp+11
  5211  004C44  0060  F123  FFE6   	movff	btemp+11,postinc1
  5212  004C4A  0E00               	movlw	0
  5213  004C4C  6EE6               	movwf	postinc1,c
  5214  004C4E  EC74  F028         	call	_strlen	;wreg free
  5215  004C52  503E               	movf	btemp+1,w,c
  5216  004C54  E104               	bnz	u4700
  5217  004C56  0E41               	movlw	65
  5218  004C58  5C3D               	subwf	btemp,w,c
  5219  004C5A  A0D8               	btfss	status,0,c
  5220  004C5C  D008               	goto	l7492
  5221  004C5E                     u4700:
  5222                           
  5223                           ;stkvar	_strPtr @ sp[(0)+-1]
  5224  004C5E  0EFF               	movlw	-1
  5225  004C60  50E3               	movf	plusw1,w,c
  5226  004C62  6ED9               	movwf	fsr2l,c
  5227  004C64  6ADA               	clrf	fsr2h,c
  5228  004C66  0E40               	movlw	64
  5229  004C68  26D9               	addwf	fsr2l,f,c
  5230  004C6A  0E00               	movlw	0
  5231  004C6C  6EDF               	movwf	indf2,c
  5232  004C6E                     l7492:
  5233                           
  5234                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  5235  004C6E  013B               	movlb	59	; () banked
  5236  004C70  9FFC               	bcf	252,7,b	;volatile
  5237                           
  5238                           ; BSR set to: 59
  5239                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  5240                           ;stkvar	_strPtr @ sp[(0)+-1]
  5241  004C72  0EFF               	movlw	-1
  5242  004C74  006F FF8C  F048    	movff	plusw1,btemp+11
  5243  004C7A  0060  F123  FFE6   	movff	btemp+11,postinc1
  5244  004C80  0E00               	movlw	0
  5245  004C82  6EE6               	movwf	postinc1,c
  5246  004C84  EC74  F028         	call	_strlen	;wreg free
  5247  004C88  0060  F0F7  FBF7   	movff	btemp,15351	;volatile
  5248  004C8E  0060  F0FB  FBF8   	movff	btemp+1,15352	;volatile
  5249                           
  5250                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  5251  004C94  013B               	movlb	59	; () banked
  5252  004C96  8FFC               	bsf	252,7,b	;volatile
  5253                           
  5254                           ; BSR set to: 59
  5255                           ;eadog.c: 177:  printf("%s", strPtr);
  5256                           ;stkvar	_strPtr @ sp[(0)+-1]
  5257  004C98  0EFF               	movlw	-1
  5258  004C9A  006F FF8C  F048    	movff	plusw1,btemp+11
  5259  004CA0  0060  F123  FFE6   	movff	btemp+11,postinc1
  5260  004CA6  0E00               	movlw	0
  5261  004CA8  6EE6               	movwf	postinc1,c
  5262  004CAA  0EB4               	movlw	STR_10& (0+255)
  5263  004CAC  6EE6               	movwf	postinc1,c
  5264  004CAE  0E03               	movlw	3
  5265  004CB0  6EE6               	movwf	postinc1,c
  5266  004CB2  ECC7  F029         	call	_printf	;wreg free
  5267  004CB6  94BE               	bcf	16318,2,c	;volatile
  5268                           
  5269                           ;eadog.c: 179:  start_lcd();
  5270  004CB8  ECE4  F02F         	call	_start_lcd	;wreg free
  5271                           
  5272                           ; BSR set to: 59
  5273                           ;eadog.c: 180:  ++V.ticks;
  5274  004CBC  0E01               	movlw	1
  5275  004CBE  0100               	movlb	0	; () banked
  5276  004CC0  27CD               	addwf	(_V+68)& (0+255),f,b	;volatile
  5277  004CC2  0E00               	movlw	0
  5278  004CC4  23CE               	addwfc	(_V+69)& (0+255),f,b	;volatile
  5279  004CC6  23CF               	addwfc	(_V+70)& (0+255),f,b	;volatile
  5280  004CC8  23D0               	addwfc	(_V+71)& (0+255),f,b	;volatile
  5281                           
  5282                           ; BSR set to: 0
  5283                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  5284  004CCA  52E5               	movf	postdec1,f,c
  5285  004CCC  0012               	return		;funcret
  5286  004CCE                     __end_of_eaDogM_WriteString:
  5287                           	opt callstack 0
  5288                           
  5289 ;; *************** function _eaDogM_WriteCommand *****************
  5290 ;; Defined at:
  5291 ;;		line 143 in file "eadog.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  cmd             1  [STACK] unsigned char 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;		None
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1  [STACK] void 
  5298 ;; Registers used:
  5299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5300 ;; Tracked objects:
  5301 ;;		On entry : 3F/3D
  5302 ;;		On exit  : 3F/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5309 ;;Total ram usage:        0 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:   13
  5312 ;; This function calls:
  5313 ;;		_send_lcd_cmd_dma
  5314 ;; This function is called by:
  5315 ;;		_main
  5316 ;; This function uses a reentrant model
  5317 ;;
  5318                           
  5319                           	psect	text23
  5320  005F2C                     __ptext23:
  5321                           	opt callstack 0
  5322  005F2C                     _eaDogM_WriteCommand:
  5323                           	opt callstack 17
  5324                           
  5325                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  5326                           ;stkvar	_cmd @ sp[(0)+-1]
  5327                           
  5328                           ; BSR set to: 0
  5329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5330                           ;incstack = 0
  5331  005F2C  0EFF               	movlw	-1
  5332  005F2E  50E3               	movf	plusw1,w,c
  5333  005F30  6EE6               	movwf	postinc1,c
  5334  005F32  EC7E  F02A         	call	_send_lcd_cmd_dma	;wreg free
  5335                           
  5336                           ; BSR set to: 0
  5337                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  5338  005F36  52E5               	movf	postdec1,f,c
  5339  005F38  0012               	return		;funcret
  5340  005F3A                     __end_of_eaDogM_WriteCommand:
  5341                           	opt callstack 0
  5342                           
  5343 ;; *************** function _send_lcd_cmd_dma *****************
  5344 ;; Defined at:
  5345 ;;		line 186 in file "eadog.c"
  5346 ;; Parameters:    Size  Location     Type
  5347 ;;  strPtr          1  [STACK] unsigned char 
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;		None
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  1  [STACK] void 
  5352 ;; Registers used:
  5353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 3F/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5363 ;;Total ram usage:        0 bytes
  5364 ;; Hardware stack levels used:    1
  5365 ;; Hardware stack levels required when called:   12
  5366 ;; This function calls:
  5367 ;;		_printf
  5368 ;;		_ringBufS_flush
  5369 ;;		_start_lcd
  5370 ;;		_wait_lcd_done
  5371 ;;		_wait_lcd_set
  5372 ;; This function is called by:
  5373 ;;		_eaDogM_WriteCommand
  5374 ;;		_eaDogM_WriteStringAtPos
  5375 ;; This function uses a reentrant model
  5376 ;;
  5377                           
  5378                           	psect	text24
  5379  0054FC                     __ptext24:
  5380                           	opt callstack 0
  5381  0054FC                     _send_lcd_cmd_dma:
  5382                           	opt callstack 17
  5383                           
  5384                           ;eadog.c: 186: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 187: {;eadog.c: 188:  wait
      +                          _lcd_set();
  5385                           
  5386                           ; BSR set to: 0
  5387                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5388                           ;incstack = 0
  5389  0054FC  ECE1  F02F         	call	_wait_lcd_set	;wreg free
  5390                           
  5391                           ; BSR set to: 0
  5392                           ;eadog.c: 190:  ringBufS_flush(spi_link.tx1a, 0);
  5393  005500  0E00               	movlw	0
  5394  005502  6EE6               	movwf	postinc1,c
  5395  005504  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  5396  00550A  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  5397  005510  ECA7  F027         	call	_ringBufS_flush	;wreg free
  5398  005514  92BC               	bcf	16316,1,c	;volatile
  5399  005516  94BC               	bcf	16316,2,c	;volatile
  5400                           
  5401                           ;eadog.c: 193:  DMA1CON0bits.EN = 0;
  5402  005518  013B               	movlb	59	; () banked
  5403  00551A  9FFC               	bcf	252,7,b	;volatile
  5404                           
  5405                           ; BSR set to: 59
  5406                           ;eadog.c: 194:  DMA1SSZ = 1;
  5407  00551C  0E00               	movlw	0
  5408  00551E  6FF8               	movwf	248,b	;volatile
  5409  005520  0E01               	movlw	1
  5410  005522  6FF7               	movwf	247,b	;volatile
  5411                           
  5412                           ; BSR set to: 59
  5413                           ;eadog.c: 195:  DMA1CON0bits.EN = 1;
  5414  005524  8FFC               	bsf	252,7,b	;volatile
  5415                           
  5416                           ; BSR set to: 59
  5417                           ;eadog.c: 196:  printf("%c", strPtr);
  5418                           ;stkvar	_strPtr @ sp[(0)+-1]
  5419  005526  0EFF               	movlw	-1
  5420  005528  50E3               	movf	plusw1,w,c
  5421  00552A  6EE6               	movwf	postinc1,c
  5422  00552C  0E00               	movlw	0
  5423  00552E  6EE6               	movwf	postinc1,c
  5424  005530  0EB1               	movlw	STR_11& (0+255)
  5425  005532  6EE6               	movwf	postinc1,c
  5426  005534  0E03               	movlw	3
  5427  005536  6EE6               	movwf	postinc1,c
  5428  005538  ECC7  F029         	call	_printf	;wreg free
  5429  00553C  94BE               	bcf	16318,2,c	;volatile
  5430                           
  5431                           ;eadog.c: 198:  start_lcd();
  5432  00553E  ECE4  F02F         	call	_start_lcd	;wreg free
  5433                           
  5434                           ; BSR set to: 59
  5435                           ;eadog.c: 199:  wait_lcd_done();
  5436  005542  EC25  F02F         	call	_wait_lcd_done	;wreg free
  5437                           
  5438                           ; BSR set to: 0
  5439  005546  82BC               	bsf	16316,1,c	;volatile
  5440                           
  5441                           ; BSR set to: 0
  5442                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5443  005548  52E5               	movf	postdec1,f,c
  5444  00554A  0012               	return		;funcret
  5445  00554C                     __end_of_send_lcd_cmd_dma:
  5446                           	opt callstack 0
  5447                           
  5448 ;; *************** function _wait_lcd_set *****************
  5449 ;; Defined at:
  5450 ;;		line 114 in file "eadog.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;		None
  5453 ;; Auto vars:     Size  Location     Type
  5454 ;;		None
  5455 ;; Return value:  Size  Location     Type
  5456 ;;                  1  [STACK] void 
  5457 ;; Registers used:
  5458 ;;		None
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 3F/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5467 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5468 ;;Total ram usage:        0 bytes
  5469 ;; Hardware stack levels used:    1
  5470 ;; Hardware stack levels required when called:    3
  5471 ;; This function calls:
  5472 ;;		Nothing
  5473 ;; This function is called by:
  5474 ;;		_eaDogM_WriteString
  5475 ;;		_send_lcd_cmd_dma
  5476 ;; This function uses a reentrant model
  5477 ;;
  5478                           
  5479                           	psect	text25
  5480  005FC2                     __ptext25:
  5481                           	opt callstack 0
  5482  005FC2                     _wait_lcd_set:
  5483                           	opt callstack 25
  5484                           
  5485                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  5486                           
  5487                           ; BSR set to: 0
  5488                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5489                           ;incstack = 0
  5490  005FC2  0100               	movlb	0	; () banked
  5491  005FC4  876D               	bsf	_spi_link& (0+255),3,b	;volatile
  5492                           
  5493                           ; BSR set to: 0
  5494                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  5495  005FC6  0012               	return		;funcret
  5496  005FC8                     __end_of_wait_lcd_set:
  5497                           	opt callstack 0
  5498                           
  5499 ;; *************** function _wait_lcd_done *****************
  5500 ;; Defined at:
  5501 ;;		line 124 in file "eadog.c"
  5502 ;; Parameters:    Size  Location     Type
  5503 ;;		None
  5504 ;; Auto vars:     Size  Location     Type
  5505 ;;		None
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  1  [STACK] void 
  5508 ;; Registers used:
  5509 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 3F/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5519 ;;Total ram usage:        0 bytes
  5520 ;; Hardware stack levels used:    1
  5521 ;; Hardware stack levels required when called:    4
  5522 ;; This function calls:
  5523 ;;		_wdtdelay
  5524 ;; This function is called by:
  5525 ;;		_main
  5526 ;;		_send_lcd_cmd_dma
  5527 ;; This function uses a reentrant model
  5528 ;;
  5529                           
  5530                           	psect	text26
  5531  005E4A                     __ptext26:
  5532                           	opt callstack 0
  5533  005E4A                     _wait_lcd_done:
  5534                           	opt callstack 26
  5535                           
  5536                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  5537                           
  5538                           ; BSR set to: 0
  5539                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5540                           ;incstack = 0
  5541  005E4A  0100               	movlb	0	; () banked
  5542  005E4C  B76D               	btfsc	_spi_link& (0+255),3,b	;volatile
  5543  005E4E  D7FD               	goto	_wait_lcd_done
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;eadog.c: 127:  wdtdelay(50);
  5547  005E50  0E32               	movlw	50
  5548  005E52  6EE6               	movwf	postinc1,c
  5549  005E54  0E00               	movlw	0
  5550  005E56  6EE6               	movwf	postinc1,c
  5551  005E58  0E00               	movlw	0
  5552  005E5A  6EE6               	movwf	postinc1,c
  5553  005E5C  0E00               	movlw	0
  5554  005E5E  6EE6               	movwf	postinc1,c
  5555  005E60  EC27  F02A         	call	_wdtdelay	;wreg free
  5556                           
  5557                           ; BSR set to: 0
  5558                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5559  005E64  0012               	return		;funcret
  5560  005E66                     __end_of_wait_lcd_done:
  5561                           	opt callstack 0
  5562                           
  5563 ;; *************** function _wdtdelay *****************
  5564 ;; Defined at:
  5565 ;;		line 21 in file "eadog.c"
  5566 ;; Parameters:    Size  Location     Type
  5567 ;;  delay           4  [STACK] unsigned long 
  5568 ;; Auto vars:     Size  Location     Type
  5569 ;;		None
  5570 ;; Return value:  Size  Location     Type
  5571 ;;                  1  [STACK] void 
  5572 ;; Registers used:
  5573 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5574 ;; Tracked objects:
  5575 ;;		On entry : 0/0
  5576 ;;		On exit  : 3F/0
  5577 ;;		Unchanged: 0/0
  5578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5583 ;;Total ram usage:        0 bytes
  5584 ;; Hardware stack levels used:    1
  5585 ;; Hardware stack levels required when called:    3
  5586 ;; This function calls:
  5587 ;;		Nothing
  5588 ;; This function is called by:
  5589 ;;		_init_display
  5590 ;;		_send_lcd_cmd
  5591 ;;		_send_lcd_cmd_long
  5592 ;;		_wait_lcd_done
  5593 ;; This function uses a reentrant model
  5594 ;;
  5595                           
  5596                           	psect	text27
  5597  00544E                     __ptext27:
  5598                           	opt callstack 0
  5599  00544E                     _wdtdelay:
  5600                           	opt callstack 26
  5601                           
  5602                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  5603                           
  5604                           ; BSR set to: 0
  5605                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5606                           ;incstack = 0
  5607  00544E  0100               	movlb	0	; () banked
  5608  005450  6B85               	clrf	wdtdelay@dcount& (0+255),b
  5609  005452  6B86               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5610  005454  6B87               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5611  005456  6B88               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5612  005458  D009               	goto	l5442
  5613  00545A                     l1299:
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;eadog.c: 26:   __nop();
  5617  00545A  F000               	nop	
  5618  00545C  0004               	clrwdt		;# 
  5619                           
  5620                           ;eadog.c: 28:  };
  5621  00545E  0E01               	movlw	1
  5622  005460  0100               	movlb	0	; () banked
  5623  005462  2785               	addwf	wdtdelay@dcount& (0+255),f,b
  5624  005464  0E00               	movlw	0
  5625  005466  2386               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  5626  005468  2387               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  5627  00546A  2388               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  5628  00546C                     l5442:
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;stkvar	_delay @ sp[(0)+-4]
  5632  00546C  0EFC               	movlw	-4
  5633  00546E  006F FF8C  F03D    	movff	plusw1,btemp
  5634  005474  5185               	movf	wdtdelay@dcount& (0+255),w,b
  5635  005476  5C3D               	subwf	btemp,w,c
  5636  005478  0EFD               	movlw	-3
  5637  00547A  006F FF8C  F03D    	movff	plusw1,btemp
  5638  005480  5186               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  5639  005482  583D               	subwfb	btemp,w,c
  5640  005484  0EFE               	movlw	-2
  5641  005486  006F FF8C  F03D    	movff	plusw1,btemp
  5642  00548C  5187               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  5643  00548E  583D               	subwfb	btemp,w,c
  5644  005490  0EFF               	movlw	-1
  5645  005492  006F FF8C  F03D    	movff	plusw1,btemp
  5646  005498  5188               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  5647  00549A  583D               	subwfb	btemp,w,c
  5648  00549C  B0D8               	btfsc	status,0,c
  5649  00549E  D7DD               	goto	l1299
  5650                           
  5651                           ; BSR set to: 0
  5652                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  5653  0054A0  52E5               	movf	postdec1,f,c
  5654  0054A2  52E5               	movf	postdec1,f,c
  5655  0054A4  52E5               	movf	postdec1,f,c
  5656  0054A6  52E5               	movf	postdec1,f,c
  5657  0054A8  0012               	return		;funcret
  5658  0054AA                     __end_of_wdtdelay:
  5659                           	opt callstack 0
  5660                           
  5661 ;; *************** function _start_lcd *****************
  5662 ;; Defined at:
  5663 ;;		line 109 in file "eadog.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;		None
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;		None
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  1  [STACK] void 
  5670 ;; Registers used:
  5671 ;;		None
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/3B
  5674 ;;		On exit  : 3F/3B
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5680 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5681 ;;Total ram usage:        0 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    3
  5684 ;; This function calls:
  5685 ;;		Nothing
  5686 ;; This function is called by:
  5687 ;;		_eaDogM_WriteString
  5688 ;;		_send_lcd_cmd_dma
  5689 ;; This function uses a reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text28
  5693  005FC8                     __ptext28:
  5694                           	opt callstack 0
  5695  005FC8                     _start_lcd:
  5696                           	opt callstack 25
  5697                           
  5698                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  5699                           
  5700                           ; BSR set to: 0
  5701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5702                           ;incstack = 0
  5703  005FC8  013B               	movlb	59	; () banked
  5704  005FCA  8DFC               	bsf	252,6,b	;volatile
  5705                           
  5706                           ; BSR set to: 59
  5707                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  5708  005FCC  0012               	return		;funcret
  5709  005FCE                     __end_of_start_lcd:
  5710                           	opt callstack 0
  5711                           
  5712 ;; *************** function _ringBufS_flush *****************
  5713 ;; Defined at:
  5714 ;;		line 76 in file "ringbufs.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  _this           2  [STACK] PTR struct ringBufS_t
  5717 ;;		 -> ring_buf1(67), 
  5718 ;;  clearBuffer     1  [STACK] const char 
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;		None
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  1  [STACK] void 
  5723 ;; Registers used:
  5724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5725 ;; Tracked objects:
  5726 ;;		On entry : 3F/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5734 ;;Total ram usage:        0 bytes
  5735 ;; Hardware stack levels used:    1
  5736 ;; Hardware stack levels required when called:    4
  5737 ;; This function calls:
  5738 ;;		_memset
  5739 ;; This function is called by:
  5740 ;;		_eaDogM_WriteString
  5741 ;;		_send_lcd_cmd_dma
  5742 ;; This function uses a reentrant model
  5743 ;;
  5744                           
  5745                           	psect	text29
  5746  004F4E                     __ptext29:
  5747                           	opt callstack 0
  5748  004F4E                     _ringBufS_flush:
  5749                           	opt callstack 24
  5750                           
  5751                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  5752                           ;stkvar	__this @ sp[(0)+-2]
  5753                           
  5754                           ; BSR set to: 59
  5755                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5756                           ;incstack = 0
  5757  004F4E  0EFE               	movlw	-2
  5758  004F50  006F FF8C  F047    	movff	plusw1,btemp+10
  5759  004F56  0EFF               	movlw	-1
  5760  004F58  006F FF8C  F048    	movff	plusw1,btemp+11
  5761  004F5E  0E42               	movlw	66
  5762  004F60  2447               	addwf	btemp+10,w,c
  5763  004F62  6ED9               	movwf	fsr2l,c
  5764  004F64  0E00               	movlw	0
  5765  004F66  2048               	addwfc	btemp+11,w,c
  5766  004F68  6EDA               	movwf	fsr2h,c
  5767  004F6A  0E00               	movlw	0
  5768  004F6C  6EDF               	movwf	indf2,c
  5769                           
  5770                           ;ringbufs.c: 79:  _this->head = 0;
  5771                           ;stkvar	__this @ sp[(0)+-2]
  5772  004F6E  0EFE               	movlw	-2
  5773  004F70  006F FF8C  F047    	movff	plusw1,btemp+10
  5774  004F76  0EFF               	movlw	-1
  5775  004F78  006F FF8C  F048    	movff	plusw1,btemp+11
  5776  004F7E  0E40               	movlw	64
  5777  004F80  2447               	addwf	btemp+10,w,c
  5778  004F82  6ED9               	movwf	fsr2l,c
  5779  004F84  0E00               	movlw	0
  5780  004F86  2048               	addwfc	btemp+11,w,c
  5781  004F88  6EDA               	movwf	fsr2h,c
  5782  004F8A  0E00               	movlw	0
  5783  004F8C  6EDF               	movwf	indf2,c
  5784                           
  5785                           ;ringbufs.c: 80:  _this->tail = 0;
  5786                           ;stkvar	__this @ sp[(0)+-2]
  5787  004F8E  0EFE               	movlw	-2
  5788  004F90  006F FF8C  F047    	movff	plusw1,btemp+10
  5789  004F96  0EFF               	movlw	-1
  5790  004F98  006F FF8C  F048    	movff	plusw1,btemp+11
  5791  004F9E  0E41               	movlw	65
  5792  004FA0  2447               	addwf	btemp+10,w,c
  5793  004FA2  6ED9               	movwf	fsr2l,c
  5794  004FA4  0E00               	movlw	0
  5795  004FA6  2048               	addwfc	btemp+11,w,c
  5796  004FA8  6EDA               	movwf	fsr2h,c
  5797  004FAA  0E00               	movlw	0
  5798  004FAC  6EDF               	movwf	indf2,c
  5799                           
  5800                           ;ringbufs.c: 81:  if (clearBuffer) {
  5801                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  5802  004FAE  0EFD               	movlw	-3
  5803  004FB0  50E3               	movf	plusw1,w,c
  5804  004FB2  B4D8               	btfsc	status,2,c
  5805  004FB4  D011               	goto	l1439
  5806                           
  5807                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  5808  004FB6  0E40               	movlw	64
  5809  004FB8  6EE6               	movwf	postinc1,c
  5810  004FBA  0E00               	movlw	0
  5811  004FBC  6EE6               	movwf	postinc1,c
  5812  004FBE  0E00               	movlw	0
  5813  004FC0  6EE6               	movwf	postinc1,c
  5814  004FC2  0E00               	movlw	0
  5815  004FC4  6EE6               	movwf	postinc1,c
  5816                           
  5817                           ;stkvar	__this @ sp[(-4)+-2]
  5818  004FC6  0EFA               	movlw	-6
  5819  004FC8  006F FF8F FFE6     	movff	plusw1,postinc1
  5820  004FCE  006F FF8F FFE6     	movff	plusw1,postinc1
  5821  004FD4  EC7A  F019         	call	_memset	;wreg free
  5822  004FD8                     l1439:
  5823                           
  5824                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  5825  004FD8  52E5               	movf	postdec1,f,c
  5826  004FDA  52E5               	movf	postdec1,f,c
  5827  004FDC  52E5               	movf	postdec1,f,c
  5828  004FDE  0012               	return		;funcret
  5829  004FE0                     __end_of_ringBufS_flush:
  5830                           	opt callstack 0
  5831                           
  5832 ;; *************** function _memset *****************
  5833 ;; Defined at:
  5834 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;  dest            2  [STACK] PTR void 
  5837 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5838 ;;  c               2  [STACK] int 
  5839 ;;  n               2  [STACK] unsigned int 
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;  s               2  [STACK] PTR unsigned char 
  5842 ;;		 -> ring_buf2(67), ring_buf1(67), 
  5843 ;;  k               2  [STACK] unsigned int 
  5844 ;; Return value:  Size  Location     Type
  5845 ;;                  2  [STACK] PTR void 
  5846 ;; Registers used:
  5847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  5848 ;; Tracked objects:
  5849 ;;		On entry : 0/0
  5850 ;;		On exit  : 0/0
  5851 ;;		Unchanged: 0/0
  5852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5857 ;;Total ram usage:        0 bytes
  5858 ;; Hardware stack levels used:    1
  5859 ;; Hardware stack levels required when called:    3
  5860 ;; This function calls:
  5861 ;;		Nothing
  5862 ;; This function is called by:
  5863 ;;		_ringBufS_init
  5864 ;;		_ringBufS_flush
  5865 ;; This function uses a reentrant model
  5866 ;;
  5867                           
  5868                           	psect	text30
  5869  0032F4                     __ptext30:
  5870                           	opt callstack 0
  5871  0032F4                     _memset:
  5872                           	opt callstack 0
  5873                           
  5874                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5875  0032F4  52E6               	movf	postinc1,f,c
  5876  0032F6  52E6               	movf	postinc1,f,c
  5877  0032F8  52E6               	movf	postinc1,f,c
  5878  0032FA  52E6               	movf	postinc1,f,c
  5879                           
  5880                           ;stkvar	_dest @ sp[(-4)+-2]
  5881                           
  5882                           ;incstack = 0
  5883  0032FC  0EFA               	movlw	-6
  5884  0032FE  006F FF8C  F047    	movff	plusw1,btemp+10
  5885  003304  0EFB               	movlw	-5
  5886  003306  006F FF8C  F048    	movff	plusw1,btemp+11
  5887                           
  5888                           ;stkvar	_s @ sp[(-4)+0]
  5889  00330C  0EFD               	movlw	-3
  5890  00330E  0060  F123  FFE3   	movff	btemp+11,plusw1
  5891  003314  0EFC               	movlw	-4
  5892  003316  0060  F11F  FFE3   	movff	btemp+10,plusw1
  5893                           
  5894                           ;stkvar	_n @ sp[(-4)+-6]
  5895  00331C  0EF6               	movlw	-10
  5896  00331E  006F FF8C  F03D    	movff	plusw1,btemp
  5897  003324  0EF7               	movlw	-9
  5898  003326  50E3               	movf	plusw1,w,c
  5899  003328  103D               	iorwf	btemp,w,c
  5900  00332A  B4D8               	btfsc	status,2,c
  5901  00332C  D154               	goto	u4660
  5902                           
  5903                           ;stkvar	_c @ sp[(-4)+-4]
  5904                           ;stkvar	_s @ sp[(-4)+0]
  5905  00332E  0EFC               	movlw	-4
  5906  003330  006F FF8F FFD9     	movff	plusw1,fsr2l
  5907  003336  0EFD               	movlw	-3
  5908  003338  006F FF8F FFDA     	movff	plusw1,fsr2h
  5909  00333E  0EF8               	movlw	-8
  5910  003340  006F FF8F FFDF     	movff	plusw1,indf2
  5911                           
  5912                           ;stkvar	_c @ sp[(-4)+-4]
  5913                           ;stkvar	_n @ sp[(-4)+-6]
  5914                           ;stkvar	_s @ sp[(-4)+0]
  5915  003346  0EFC               	movlw	-4
  5916  003348  006F FF8C  F047    	movff	plusw1,btemp+10
  5917  00334E  0EFD               	movlw	-3
  5918  003350  006F FF8C  F048    	movff	plusw1,btemp+11
  5919  003356  0EF6               	movlw	-10
  5920  003358  50E3               	movf	plusw1,w,c
  5921  00335A  2647               	addwf	btemp+10,f,c
  5922  00335C  0EF7               	movlw	-9
  5923  00335E  50E3               	movf	plusw1,w,c
  5924  003360  2248               	addwfc	btemp+11,f,c
  5925  003362  0EFF               	movlw	255
  5926  003364  2447               	addwf	btemp+10,w,c
  5927  003366  6ED9               	movwf	fsr2l,c
  5928  003368  0EFF               	movlw	255
  5929  00336A  2048               	addwfc	btemp+11,w,c
  5930  00336C  6EDA               	movwf	fsr2h,c
  5931  00336E  0EF8               	movlw	-8
  5932  003370  006F FF8F FFDF     	movff	plusw1,indf2
  5933                           
  5934                           ;stkvar	_n @ sp[(-4)+-6]
  5935  003376  0EF7               	movlw	-9
  5936  003378  50E3               	movf	plusw1,w,c
  5937  00337A  E108               	bnz	l7418
  5938  00337C  0EF6               	movlw	-10
  5939  00337E  006F FF8C  F03D    	movff	plusw1,btemp
  5940  003384  0E03               	movlw	3
  5941  003386  5E3D               	subwf	btemp,f,c
  5942  003388  A0D8               	btfss	status,0,c
  5943  00338A  D125               	goto	u4660
  5944  00338C                     l7418:
  5945                           
  5946                           ;stkvar	_c @ sp[(-4)+-4]
  5947                           ;stkvar	_s @ sp[(-4)+0]
  5948  00338C  0EFC               	movlw	-4
  5949  00338E  006F FF8C  F047    	movff	plusw1,btemp+10
  5950  003394  0EFD               	movlw	-3
  5951  003396  006F FF8C  F048    	movff	plusw1,btemp+11
  5952  00339C  0E01               	movlw	1
  5953  00339E  2447               	addwf	btemp+10,w,c
  5954  0033A0  6ED9               	movwf	fsr2l,c
  5955  0033A2  0E00               	movlw	0
  5956  0033A4  2048               	addwfc	btemp+11,w,c
  5957  0033A6  6EDA               	movwf	fsr2h,c
  5958  0033A8  0EF8               	movlw	-8
  5959  0033AA  006F FF8F FFDF     	movff	plusw1,indf2
  5960                           
  5961                           ;stkvar	_c @ sp[(-4)+-4]
  5962                           ;stkvar	_s @ sp[(-4)+0]
  5963  0033B0  0EFC               	movlw	-4
  5964  0033B2  006F FF8C  F047    	movff	plusw1,btemp+10
  5965  0033B8  0EFD               	movlw	-3
  5966  0033BA  006F FF8C  F048    	movff	plusw1,btemp+11
  5967  0033C0  0E02               	movlw	2
  5968  0033C2  2447               	addwf	btemp+10,w,c
  5969  0033C4  6ED9               	movwf	fsr2l,c
  5970  0033C6  0E00               	movlw	0
  5971  0033C8  2048               	addwfc	btemp+11,w,c
  5972  0033CA  6EDA               	movwf	fsr2h,c
  5973  0033CC  0EF8               	movlw	-8
  5974  0033CE  006F FF8F FFDF     	movff	plusw1,indf2
  5975                           
  5976                           ;stkvar	_c @ sp[(-4)+-4]
  5977                           ;stkvar	_n @ sp[(-4)+-6]
  5978                           ;stkvar	_s @ sp[(-4)+0]
  5979  0033D4  0EFC               	movlw	-4
  5980  0033D6  006F FF8C  F047    	movff	plusw1,btemp+10
  5981  0033DC  0EFD               	movlw	-3
  5982  0033DE  006F FF8C  F048    	movff	plusw1,btemp+11
  5983  0033E4  0EF6               	movlw	-10
  5984  0033E6  50E3               	movf	plusw1,w,c
  5985  0033E8  2647               	addwf	btemp+10,f,c
  5986  0033EA  0EF7               	movlw	-9
  5987  0033EC  50E3               	movf	plusw1,w,c
  5988  0033EE  2248               	addwfc	btemp+11,f,c
  5989  0033F0  0EFE               	movlw	254
  5990  0033F2  2447               	addwf	btemp+10,w,c
  5991  0033F4  6ED9               	movwf	fsr2l,c
  5992  0033F6  0EFF               	movlw	255
  5993  0033F8  2048               	addwfc	btemp+11,w,c
  5994  0033FA  6EDA               	movwf	fsr2h,c
  5995  0033FC  0EF8               	movlw	-8
  5996  0033FE  006F FF8F FFDF     	movff	plusw1,indf2
  5997                           
  5998                           ;stkvar	_c @ sp[(-4)+-4]
  5999                           ;stkvar	_n @ sp[(-4)+-6]
  6000                           ;stkvar	_s @ sp[(-4)+0]
  6001  003404  0EFC               	movlw	-4
  6002  003406  006F FF8C  F047    	movff	plusw1,btemp+10
  6003  00340C  0EFD               	movlw	-3
  6004  00340E  006F FF8C  F048    	movff	plusw1,btemp+11
  6005  003414  0EF6               	movlw	-10
  6006  003416  50E3               	movf	plusw1,w,c
  6007  003418  2647               	addwf	btemp+10,f,c
  6008  00341A  0EF7               	movlw	-9
  6009  00341C  50E3               	movf	plusw1,w,c
  6010  00341E  2248               	addwfc	btemp+11,f,c
  6011  003420  0EFD               	movlw	253
  6012  003422  2447               	addwf	btemp+10,w,c
  6013  003424  6ED9               	movwf	fsr2l,c
  6014  003426  0EFF               	movlw	255
  6015  003428  2048               	addwfc	btemp+11,w,c
  6016  00342A  6EDA               	movwf	fsr2h,c
  6017  00342C  0EF8               	movlw	-8
  6018  00342E  006F FF8F FFDF     	movff	plusw1,indf2
  6019                           
  6020                           ;stkvar	_n @ sp[(-4)+-6]
  6021  003434  0EF7               	movlw	-9
  6022  003436  50E3               	movf	plusw1,w,c
  6023  003438  E108               	bnz	l7424
  6024  00343A  0EF6               	movlw	-10
  6025  00343C  006F FF8C  F03D    	movff	plusw1,btemp
  6026  003442  0E07               	movlw	7
  6027  003444  5E3D               	subwf	btemp,f,c
  6028  003446  A0D8               	btfss	status,0,c
  6029  003448  D0C6               	goto	u4660
  6030  00344A                     l7424:
  6031                           
  6032                           ;stkvar	_c @ sp[(-4)+-4]
  6033                           ;stkvar	_s @ sp[(-4)+0]
  6034  00344A  0EFC               	movlw	-4
  6035  00344C  006F FF8C  F047    	movff	plusw1,btemp+10
  6036  003452  0EFD               	movlw	-3
  6037  003454  006F FF8C  F048    	movff	plusw1,btemp+11
  6038  00345A  0E03               	movlw	3
  6039  00345C  2447               	addwf	btemp+10,w,c
  6040  00345E  6ED9               	movwf	fsr2l,c
  6041  003460  0E00               	movlw	0
  6042  003462  2048               	addwfc	btemp+11,w,c
  6043  003464  6EDA               	movwf	fsr2h,c
  6044  003466  0EF8               	movlw	-8
  6045  003468  006F FF8F FFDF     	movff	plusw1,indf2
  6046                           
  6047                           ;stkvar	_c @ sp[(-4)+-4]
  6048                           ;stkvar	_n @ sp[(-4)+-6]
  6049                           ;stkvar	_s @ sp[(-4)+0]
  6050  00346E  0EFC               	movlw	-4
  6051  003470  006F FF8C  F047    	movff	plusw1,btemp+10
  6052  003476  0EFD               	movlw	-3
  6053  003478  006F FF8C  F048    	movff	plusw1,btemp+11
  6054  00347E  0EF6               	movlw	-10
  6055  003480  50E3               	movf	plusw1,w,c
  6056  003482  2647               	addwf	btemp+10,f,c
  6057  003484  0EF7               	movlw	-9
  6058  003486  50E3               	movf	plusw1,w,c
  6059  003488  2248               	addwfc	btemp+11,f,c
  6060  00348A  0EFC               	movlw	252
  6061  00348C  2447               	addwf	btemp+10,w,c
  6062  00348E  6ED9               	movwf	fsr2l,c
  6063  003490  0EFF               	movlw	255
  6064  003492  2048               	addwfc	btemp+11,w,c
  6065  003494  6EDA               	movwf	fsr2h,c
  6066  003496  0EF8               	movlw	-8
  6067  003498  006F FF8F FFDF     	movff	plusw1,indf2
  6068                           
  6069                           ;stkvar	_n @ sp[(-4)+-6]
  6070  00349E  0EF7               	movlw	-9
  6071  0034A0  50E3               	movf	plusw1,w,c
  6072  0034A2  E108               	bnz	l7430
  6073  0034A4  0EF6               	movlw	-10
  6074  0034A6  006F FF8C  F03D    	movff	plusw1,btemp
  6075  0034AC  0E09               	movlw	9
  6076  0034AE  5E3D               	subwf	btemp,f,c
  6077  0034B0  A0D8               	btfss	status,0,c
  6078  0034B2  D091               	goto	u4660
  6079  0034B4                     l7430:
  6080                           
  6081                           ;stkvar	_s @ sp[(-4)+0]
  6082  0034B4  0EFC               	movlw	-4
  6083  0034B6  006F FF8C  F047    	movff	plusw1,btemp+10
  6084  0034BC  1E47               	comf	btemp+10,f,c
  6085  0034BE  0EFD               	movlw	-3
  6086  0034C0  006F FF8C  F048    	movff	plusw1,btemp+11
  6087  0034C6  1E48               	comf	btemp+11,f,c
  6088  0034C8  2A47               	incf	btemp+10,f,c
  6089  0034CA  B4D8               	btfsc	status,2,c
  6090  0034CC  2A48               	incf	btemp+11,f,c
  6091  0034CE  0E03               	movlw	3
  6092  0034D0  1647               	andwf	btemp+10,f,c
  6093  0034D2  0E00               	movlw	0
  6094  0034D4  1648               	andwf	btemp+11,f,c
  6095                           
  6096                           ;stkvar	_k @ sp[(-4)+2]
  6097  0034D6  0EFE               	movlw	-2
  6098  0034D8  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6099  0034DE  0EFF               	movlw	-1
  6100  0034E0  0060  F123  FFE3   	movff	btemp+11,plusw1
  6101                           
  6102                           ;stkvar	_k @ sp[(-4)+2]
  6103                           ;stkvar	_s @ sp[(-4)+0]
  6104  0034E6  0EFC               	movlw	-4
  6105  0034E8  50E3               	movf	plusw1,w,c
  6106  0034EA  6E3D               	movwf	btemp,c
  6107  0034EC  0EFE               	movlw	-2
  6108  0034EE  50E3               	movf	plusw1,w,c
  6109  0034F0  263D               	addwf	btemp,f,c
  6110  0034F2  0EFC               	movlw	-4
  6111  0034F4  0060  F0F7  FFE3   	movff	btemp,plusw1
  6112  0034FA  0EFD               	movlw	-3
  6113  0034FC  50E3               	movf	plusw1,w,c
  6114  0034FE  6E3D               	movwf	btemp,c
  6115  003500  0EFF               	movlw	-1
  6116  003502  50E3               	movf	plusw1,w,c
  6117  003504  223D               	addwfc	btemp,f,c
  6118  003506  0EFD               	movlw	-3
  6119  003508  0060  F0F7  FFE3   	movff	btemp,plusw1
  6120                           
  6121                           ;stkvar	_k @ sp[(-4)+2]
  6122                           ;stkvar	_n @ sp[(-4)+-6]
  6123  00350E  0EF6               	movlw	-10
  6124  003510  50E3               	movf	plusw1,w,c
  6125  003512  6E3D               	movwf	btemp,c
  6126  003514  0EFE               	movlw	-2
  6127  003516  50E3               	movf	plusw1,w,c
  6128  003518  5E3D               	subwf	btemp,f,c
  6129  00351A  0EF6               	movlw	-10
  6130  00351C  0060  F0F7  FFE3   	movff	btemp,plusw1
  6131  003522  0EF7               	movlw	-9
  6132  003524  50E3               	movf	plusw1,w,c
  6133  003526  6E3D               	movwf	btemp,c
  6134  003528  0EFF               	movlw	-1
  6135  00352A  50E3               	movf	plusw1,w,c
  6136  00352C  5A3D               	subwfb	btemp,f,c
  6137  00352E  0EF7               	movlw	-9
  6138  003530  0060  F0F7  FFE3   	movff	btemp,plusw1
  6139  003536  0EFC               	movlw	252
  6140  003538  6E47               	movwf	btemp+10,c
  6141  00353A  0EFF               	movlw	255
  6142  00353C  6E48               	movwf	btemp+11,c
  6143                           
  6144                           ;stkvar	_n @ sp[(-4)+-6]
  6145  00353E  0EF6               	movlw	-10
  6146  003540  006F FF8C  F03D    	movff	plusw1,btemp
  6147  003546  5047               	movf	btemp+10,w,c
  6148  003548  163D               	andwf	btemp,f,c
  6149  00354A  0EF6               	movlw	-10
  6150  00354C  0060  F0F7  FFE3   	movff	btemp,plusw1
  6151  003552  0EF7               	movlw	-9
  6152  003554  006F FF8C  F03D    	movff	plusw1,btemp
  6153  00355A  5048               	movf	btemp+11,w,c
  6154  00355C  163D               	andwf	btemp,f,c
  6155  00355E  0EF7               	movlw	-9
  6156  003560  D02E               	goto	L18
  6157  003562                     l7438:
  6158                           
  6159                           ;stkvar	_c @ sp[(-4)+-4]
  6160                           ;stkvar	_s @ sp[(-4)+0]
  6161  003562  0EFC               	movlw	-4
  6162  003564  006F FF8F FFD9     	movff	plusw1,fsr2l
  6163  00356A  0EFD               	movlw	-3
  6164  00356C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6165  003572  0EF8               	movlw	-8
  6166  003574  006F FF8F FFDF     	movff	plusw1,indf2
  6167                           
  6168                           ;stkvar	_n @ sp[(-4)+-6]
  6169  00357A  0EF6               	movlw	-10
  6170  00357C  006F FF8C  F03D    	movff	plusw1,btemp
  6171  003582  0E01               	movlw	1
  6172  003584  5E3D               	subwf	btemp,f,c
  6173  003586  0EF6               	movlw	-10
  6174  003588  0060  F0F7  FFE3   	movff	btemp,plusw1
  6175  00358E  0EF7               	movlw	-9
  6176  003590  006F FF8C  F03D    	movff	plusw1,btemp
  6177  003596  0E00               	movlw	0
  6178  003598  5A3D               	subwfb	btemp,f,c
  6179  00359A  0EF7               	movlw	-9
  6180  00359C  0060  F0F7  FFE3   	movff	btemp,plusw1
  6181                           
  6182                           ;stkvar	_s @ sp[(-4)+0]
  6183  0035A2  0EFC               	movlw	-4
  6184  0035A4  50E3               	movf	plusw1,w,c
  6185  0035A6  0F01               	addlw	1
  6186  0035A8  6E3D               	movwf	btemp,c
  6187  0035AA  0EFC               	movlw	-4
  6188  0035AC  0060  F0F7  FFE3   	movff	btemp,plusw1
  6189  0035B2  6A3D               	clrf	btemp,c
  6190  0035B4  0EFD               	movlw	-3
  6191  0035B6  50E3               	movf	plusw1,w,c
  6192  0035B8  203D               	addwfc	btemp,w,c
  6193  0035BA  6E3D               	movwf	btemp,c
  6194  0035BC  0EFD               	movlw	-3
  6195  0035BE                     L18:
  6196  0035BE  0060  F0F7  FFE3   	movff	btemp,plusw1
  6197                           
  6198                           ;stkvar	_n @ sp[(-4)+-6]
  6199  0035C4  0EF6               	movlw	-10
  6200  0035C6  006F FF8C  F03D    	movff	plusw1,btemp
  6201  0035CC  0EF7               	movlw	-9
  6202  0035CE  50E3               	movf	plusw1,w,c
  6203  0035D0  103D               	iorwf	btemp,w,c
  6204  0035D2  A4D8               	btfss	status,2,c
  6205  0035D4  D7C6               	goto	l7438
  6206  0035D6                     u4660:
  6207                           
  6208                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6209  0035D6  0EF6               	movlw	246
  6210  0035D8  26E1               	addwf	fsr1l,f,c
  6211  0035DA  0EFF               	movlw	255
  6212  0035DC  22E2               	addwfc	fsr1h,f,c
  6213  0035DE  0012               	return		;funcret
  6214  0035E0                     __end_of_memset:
  6215                           	opt callstack 0
  6216                           
  6217 ;; *************** function _printf *****************
  6218 ;; Defined at:
  6219 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;  fmt             1  [STACK] PTR const unsigned char 
  6222 ;;		 -> STR_12(3), STR_11(3), STR_10(3), 
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;  ap              2  [STACK] PTR void [1]
  6225 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6226 ;;  ret             2    0        int 
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  2  [STACK] int 
  6229 ;; Registers used:
  6230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  6231 ;; Tracked objects:
  6232 ;;		On entry : 3F/3B
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6240 ;;Total ram usage:        0 bytes
  6241 ;; Hardware stack levels used:    1
  6242 ;; Hardware stack levels required when called:   11
  6243 ;; This function calls:
  6244 ;;		_vfprintf
  6245 ;; This function is called by:
  6246 ;;		_eaDogM_WriteString
  6247 ;;		_send_lcd_cmd_dma
  6248 ;; This function uses a reentrant model
  6249 ;;
  6250                           
  6251                           	psect	text31
  6252  00538E                     __ptext31:
  6253                           	opt callstack 0
  6254  00538E                     _printf:
  6255                           	opt callstack 0
  6256                           
  6257                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6258  00538E  52E6               	movf	postinc1,f,c
  6259  005390  52E6               	movf	postinc1,f,c
  6260                           
  6261                           ;stkvar	?_printf @ sp[(-2)+-3]
  6262                           
  6263                           ;incstack = 0
  6264  005392  0EFB               	movlw	251
  6265  005394  24E1               	addwf	fsr1l,w,c
  6266  005396  6E47               	movwf	btemp+10,c
  6267  005398  0EFF               	movlw	255
  6268  00539A  20E2               	addwfc	fsr1h,w,c
  6269  00539C  6E48               	movwf	btemp+11,c
  6270  00539E  0E01               	movlw	1
  6271  0053A0  2647               	addwf	btemp+10,f,c
  6272  0053A2  0E00               	movlw	0
  6273  0053A4  2248               	addwfc	btemp+11,f,c
  6274                           
  6275                           ;stkvar	_ap @ sp[(-2)+0]
  6276  0053A6  0EFF               	movlw	-1
  6277  0053A8  0060  F123  FFE3   	movff	btemp+11,plusw1
  6278  0053AE  0EFE               	movlw	-2
  6279  0053B0  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6280                           
  6281                           ;stkvar	_ap @ sp[(-2)+0]
  6282  0053B6  0EFE               	movlw	254
  6283  0053B8  24E1               	addwf	fsr1l,w,c
  6284  0053BA  6E3D               	movwf	btemp,c
  6285  0053BC  0EFF               	movlw	255
  6286  0053BE  20E2               	addwfc	fsr1h,w,c
  6287  0053C0  6E3E               	movwf	btemp+1,c
  6288  0053C2  0060  F0F7  FFE6   	movff	btemp,postinc1
  6289  0053C8  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  6290                           
  6291                           ;stkvar	_fmt @ sp[(-4)+-2]
  6292  0053CE  0EFA               	movlw	-6
  6293  0053D0  50E3               	movf	plusw1,w,c
  6294  0053D2  6EE6               	movwf	postinc1,c
  6295  0053D4  0E00               	movlw	0
  6296  0053D6  6EE6               	movwf	postinc1,c
  6297  0053D8  0E00               	movlw	0
  6298  0053DA  6EE6               	movwf	postinc1,c
  6299  0053DC  EC5D  F027         	call	_vfprintf	;wreg free
  6300                           
  6301                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  6302  0053E0  52E5               	movf	postdec1,f,c
  6303  0053E2  52E5               	movf	postdec1,f,c
  6304  0053E4  52E5               	movf	postdec1,f,c
  6305  0053E6  50E7               	movf	indf1,w,c
  6306  0053E8  5EE1               	subwf	fsr1l,f,c
  6307  0053EA  0E00               	movlw	0
  6308  0053EC  5AE2               	subwfb	fsr1h,f,c
  6309  0053EE  0012               	return		;funcret
  6310  0053F0                     __end_of_printf:
  6311                           	opt callstack 0
  6312                           
  6313 ;; *************** function _vfprintf *****************
  6314 ;; Defined at:
  6315 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6318 ;;		 -> f(5), NULL(0), 
  6319 ;;  fmt             1  [STACK] PTR const unsigned char 
  6320 ;;		 -> STR_12(3), STR_11(3), STR_10(3), STR_9(21), 
  6321 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(23), 
  6322 ;;		 -> STR_4(6), STR_3(14), STR_2(12), STR_1(61), 
  6323 ;;  ap              2  [STACK] PTR PTR void 
  6324 ;;		 -> ap(2), ap(2), 
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;  cfmt            1  [STACK] PTR unsigned char 
  6327 ;;		 -> STR_12(3), STR_11(3), STR_10(3), STR_9(21), 
  6328 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(23), 
  6329 ;;		 -> STR_4(6), STR_3(14), STR_2(12), STR_1(61), 
  6330 ;; Return value:  Size  Location     Type
  6331 ;;                  2  [STACK] int 
  6332 ;; Registers used:
  6333 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  6334 ;; Tracked objects:
  6335 ;;		On entry : 0/1
  6336 ;;		On exit  : 0/0
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6339 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6342 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6343 ;;Total ram usage:        0 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:   10
  6346 ;; This function calls:
  6347 ;;		_vfpfcnvrt
  6348 ;; This function is called by:
  6349 ;;		_sprintf
  6350 ;;		_printf
  6351 ;; This function uses a reentrant model
  6352 ;;
  6353                           
  6354                           	psect	text32
  6355  004EBA                     __ptext32:
  6356                           	opt callstack 0
  6357  004EBA                     _vfprintf:
  6358                           	opt callstack 0
  6359                           
  6360                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6361  004EBA  52E6               	movf	postinc1,f,c
  6362                           
  6363                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6364                           ;stkvar	_fmt @ sp[(-1)+-3]
  6365                           
  6366                           ;incstack = 0
  6367  004EBC  0EFC               	movlw	-4
  6368  004EBE  006F FF8C  F048    	movff	plusw1,btemp+11
  6369                           
  6370                           ;stkvar	_cfmt @ sp[(-1)+0]
  6371  004EC4  0EFF               	movlw	-1
  6372  004EC6  0060  F123  FFE3   	movff	btemp+11,plusw1
  6373                           
  6374                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6375  004ECC  6A22               	clrf	_nout,c
  6376  004ECE  6A23               	clrf	_nout+1,c
  6377                           
  6378                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6379  004ED0  D020               	goto	l7452
  6380  004ED2                     l7450:
  6381                           
  6382                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6383                           ;stkvar	_ap @ sp[(-1)+-5]
  6384  004ED2  0EFA               	movlw	-6
  6385  004ED4  006F FF8F FFE6     	movff	plusw1,postinc1
  6386  004EDA  006F FF8F FFE6     	movff	plusw1,postinc1
  6387                           
  6388                           ;stkvar	_cfmt @ sp[(-3)+0]
  6389  004EE0  0EFD               	movlw	253
  6390  004EE2  24E1               	addwf	fsr1l,w,c
  6391  004EE4  6E3D               	movwf	btemp,c
  6392  004EE6  0EFF               	movlw	255
  6393  004EE8  20E2               	addwfc	fsr1h,w,c
  6394  004EEA  6E3E               	movwf	btemp+1,c
  6395  004EEC  0060  F0F7  FFE6   	movff	btemp,postinc1
  6396  004EF2  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  6397                           
  6398                           ;stkvar	_fp @ sp[(-5)+-2]
  6399  004EF8  0EF9               	movlw	-7
  6400  004EFA  006F FF8F FFE6     	movff	plusw1,postinc1
  6401  004F00  006F FF8F FFE6     	movff	plusw1,postinc1
  6402  004F06  EC5C  F010         	call	_vfpfcnvrt	;wreg free
  6403  004F0A  503D               	movf	btemp,w,c
  6404  004F0C  2622               	addwf	_nout,f,c
  6405  004F0E  503E               	movf	btemp+1,w,c
  6406  004F10  2223               	addwfc	_nout+1,f,c
  6407  004F12                     l7452:
  6408                           
  6409                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6410                           ;stkvar	_cfmt @ sp[(-1)+0]
  6411  004F12  50E1               	movf	fsr1l,w,c
  6412  004F14  0FFF               	addlw	-1
  6413  004F16  6ED9               	movwf	fsr2l,c
  6414  004F18  50E2               	movf	fsr1h,w,c
  6415  004F1A  6EDA               	movwf	fsr2h,c
  6416  004F1C  0EFF               	movlw	255
  6417  004F1E  22DA               	addwfc	fsr2h,f,c
  6418  004F20  006F FF7F FFF6     	movff	indf2,tblptrl
  6419  004F26                     	if	1	;There is more than 1 active tblptr byte
  6420  004F26  0E20               	movlw	high __smallconst
  6421  004F28  6EF7               	movwf	tblptrh,c
  6422  004F2A                     	endif
  6423  004F2A                     	if	0	;tblptru may be non-zero
  6424  004F2A                     	endif
  6425  004F2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6426  004F2A  0E00               	movlw	low (__smallconst shr (0+16))
  6427  004F2C  6EF8               	movwf	tblptru,c
  6428  004F2E                     	endif
  6429  004F2E  0008               	tblrd		*
  6430  004F30  50F5               	movf	tablat,w,c
  6431  004F32  0900               	iorlw	0
  6432  004F34  A4D8               	btfss	status,2,c
  6433  004F36  D7CD               	goto	l7450
  6434                           
  6435                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6436  004F38  0060  F088  F03D   	movff	_nout,btemp
  6437  004F3E  0060  F08C  F03E   	movff	_nout+1,btemp+1
  6438                           
  6439                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  6440  004F44  0EFA               	movlw	250
  6441  004F46  26E1               	addwf	fsr1l,f,c
  6442  004F48  0EFF               	movlw	255
  6443  004F4A  22E2               	addwfc	fsr1h,f,c
  6444  004F4C  0012               	return		;funcret
  6445  004F4E                     __end_of_vfprintf:
  6446                           	opt callstack 0
  6447                           
  6448 ;; *************** function _vfpfcnvrt *****************
  6449 ;; Defined at:
  6450 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6451 ;; Parameters:    Size  Location     Type
  6452 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6453 ;;		 -> f(5), NULL(0), 
  6454 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6455 ;;		 -> cfmt(1), 
  6456 ;;  ap              2  [STACK] PTR PTR void 
  6457 ;;		 -> ap(2), ap(2), 
  6458 ;; Auto vars:     Size  Location     Type
  6459 ;;  llu             8  [STACK] unsigned long long 
  6460 ;;  ll              8  [STACK] long long 
  6461 ;;  f               4    0        long long 
  6462 ;;  vp              3    0        PTR void 
  6463 ;;  ct              3    0        unsigned char [3]
  6464 ;;  done            2  [STACK] int 
  6465 ;;  cp              2  [STACK] PTR unsigned char 
  6466 ;;		 -> ?_printf(2), ?_sprintf(2), V(80), 
  6467 ;;  i               2    0        int 
  6468 ;;  c               1  [STACK] unsigned char 
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  2  [STACK] int 
  6471 ;; Registers used:
  6472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/1
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6482 ;;Total ram usage:        0 bytes
  6483 ;; Hardware stack levels used:    1
  6484 ;; Hardware stack levels required when called:    9
  6485 ;; This function calls:
  6486 ;;		_atoi
  6487 ;;		_ctoa
  6488 ;;		_dtoa
  6489 ;;		_fputc
  6490 ;;		_isdigit
  6491 ;;		_stoa
  6492 ;;		_xtoa
  6493 ;; This function is called by:
  6494 ;;		_vfprintf
  6495 ;; This function uses a reentrant model
  6496 ;;
  6497                           
  6498                           	psect	text33
  6499  0020B8                     __ptext33:
  6500                           	opt callstack 0
  6501  0020B8                     _vfpfcnvrt:
  6502                           	opt callstack 0
  6503                           
  6504                           ; autosize = 23, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6505  0020B8  0E17               	movlw	23
  6506  0020BA  26E1               	addwf	fsr1l,f,c
  6507  0020BC  0E00               	movlw	0
  6508  0020BE  22E2               	addwfc	fsr1h,f,c
  6509                           
  6510                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  6511                           ;stkvar	_fmt @ sp[(-23)+-4]
  6512                           
  6513                           ;incstack = 0
  6514  0020C0  0EE5               	movlw	-27
  6515  0020C2  006F FF8F FFD9     	movff	plusw1,fsr2l
  6516  0020C8  0EE6               	movlw	-26
  6517  0020CA  006F FF8F FFDA     	movff	plusw1,fsr2h
  6518  0020D0  006F FF7F FFF6     	movff	indf2,tblptrl
  6519  0020D6                     	if	1	;There is more than 1 active tblptr byte
  6520  0020D6  0E20               	movlw	high __smallconst
  6521  0020D8  6EF7               	movwf	tblptrh,c
  6522  0020DA                     	endif
  6523  0020DA                     	if	0	;tblptru may be non-zero
  6524  0020DA                     	endif
  6525  0020DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6526  0020DA  0E00               	movlw	low (__smallconst shr (0+16))
  6527  0020DC  6EF8               	movwf	tblptru,c
  6528  0020DE                     	endif
  6529  0020DE  0008               	tblrd		*
  6530  0020E0  50F5               	movf	tablat,w,c
  6531  0020E2  0A25               	xorlw	37
  6532  0020E4  A4D8               	btfss	status,2,c
  6533  0020E6  D327               	goto	l7392
  6534                           
  6535                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  6536                           ;stkvar	_fmt @ sp[(-23)+-4]
  6537  0020E8  0EE5               	movlw	-27
  6538  0020EA  006F FF8F FFD9     	movff	plusw1,fsr2l
  6539  0020F0  0EE6               	movlw	-26
  6540  0020F2  006F FF8F FFDA     	movff	plusw1,fsr2h
  6541  0020F8  2ADF               	incf	indf2,f,c
  6542                           
  6543                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  6544  0020FA  6A24               	clrf	_width,c
  6545  0020FC  6A25               	clrf	_width+1,c
  6546  0020FE  6A28               	clrf	_flags,c
  6547  002100  6A29               	clrf	_flags+1,c
  6548                           
  6549                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  6550  002102  6826               	setf	_prec,c
  6551  002104  6827               	setf	_prec+1,c
  6552                           
  6553                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  6554                           ;stkvar	_done @ sp[(-23)+18]
  6555  002106  0EFB               	movlw	-5
  6556  002108  6AE3               	clrf	plusw1,c
  6557  00210A  0EFC               	movlw	-4
  6558  00210C  6AE3               	clrf	plusw1,c
  6559                           
  6560                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  6561  00210E  D048               	goto	l7306
  6562  002110                     l7280:
  6563                           
  6564                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  6565  002110  8028               	bsf	_flags,0,c
  6566  002112                     l7282:
  6567                           
  6568                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  6569                           ;stkvar	_fmt @ sp[(-23)+-4]
  6570  002112  0EE5               	movlw	-27
  6571  002114  006F FF8F FFD9     	movff	plusw1,fsr2l
  6572  00211A  0EE6               	movlw	-26
  6573  00211C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6574  002122  2ADF               	incf	indf2,f,c
  6575                           
  6576                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  6577  002124  D03D               	goto	l7306
  6578  002126                     l7284:
  6579                           
  6580                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  6581  002126  8228               	bsf	_flags,1,c
  6582  002128  D7F4               	goto	l7282
  6583  00212A                     l7288:
  6584                           
  6585                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  6586  00212A  8428               	bsf	_flags,2,c
  6587  00212C  D7F2               	goto	l7282
  6588  00212E                     l7292:
  6589                           
  6590                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  6591  00212E  8628               	bsf	_flags,3,c
  6592  002130  D7F0               	goto	l7282
  6593  002132                     l7296:
  6594                           
  6595                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  6596  002132  8828               	bsf	_flags,4,c
  6597  002134  D7EE               	goto	l7282
  6598  002136                     l7300:
  6599                           
  6600                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  6601  002136  0E01               	movlw	1
  6602  002138  6E47               	movwf	btemp+10,c
  6603  00213A  0E00               	movlw	0
  6604  00213C  6E48               	movwf	btemp+11,c
  6605                           
  6606                           ;stkvar	_done @ sp[(-23)+18]
  6607  00213E  0EFB               	movlw	-5
  6608  002140  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6609  002146  0EFC               	movlw	-4
  6610  002148  0060  F123  FFE3   	movff	btemp+11,plusw1
  6611                           
  6612                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  6613  00214E  D028               	goto	l7306
  6614  002150                     l7304:
  6615                           
  6616                           ;stkvar	_fmt @ sp[(-23)+-4]
  6617  002150  0EE5               	movlw	-27
  6618  002152  006F FF8F FFD9     	movff	plusw1,fsr2l
  6619  002158  0EE6               	movlw	-26
  6620  00215A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6621  002160  006F FF7F FFF6     	movff	indf2,tblptrl
  6622  002166                     	if	1	;There is more than 1 active tblptr byte
  6623  002166  0E20               	movlw	high __smallconst
  6624  002168  6EF7               	movwf	tblptrh,c
  6625  00216A                     	endif
  6626  00216A                     	if	0	;tblptru may be non-zero
  6627  00216A                     	endif
  6628  00216A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6629  00216A  0E00               	movlw	low (__smallconst shr (0+16))
  6630  00216C  6EF8               	movwf	tblptru,c
  6631  00216E                     	endif
  6632  00216E  0008               	tblrd		*
  6633  002170  50F5               	movf	tablat,w,c
  6634  002172  6E47               	movwf	btemp+10,c
  6635  002174  6A48               	clrf	btemp+11,c
  6636                           
  6637                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6638                           ; Switch size 1, requested type "simple"
  6639                           ; Number of cases is 1, Range of values is 0 to 0
  6640                           ; switch strategies available:
  6641                           ; Name         Instructions Cycles
  6642                           ; simple_byte            4     3 (average)
  6643                           ;	Chosen strategy is simple_byte
  6644  002176  5048               	movf	btemp+11,w,c
  6645  002178  0A00               	xorlw	0	; case 0
  6646  00217A  A4D8               	btfss	status,2,c
  6647  00217C  D7DC               	goto	l7300
  6648                           
  6649                           ; Switch size 1, requested type "simple"
  6650                           ; Number of cases is 5, Range of values is 32 to 48
  6651                           ; switch strategies available:
  6652                           ; Name         Instructions Cycles
  6653                           ; simple_byte           16     9 (average)
  6654                           ;	Chosen strategy is simple_byte
  6655  00217E  5047               	movf	btemp+10,w,c
  6656  002180  0A20               	xorlw	32	; case 32
  6657  002182  B4D8               	btfsc	status,2,c
  6658  002184  D7D4               	goto	l7292
  6659  002186  0A03               	xorlw	3	; case 35
  6660  002188  B4D8               	btfsc	status,2,c
  6661  00218A  D7D3               	goto	l7296
  6662  00218C  0A08               	xorlw	8	; case 43
  6663  00218E  B4D8               	btfsc	status,2,c
  6664  002190  D7CC               	goto	l7288
  6665  002192  0A06               	xorlw	6	; case 45
  6666  002194  B4D8               	btfsc	status,2,c
  6667  002196  D7BC               	goto	l7280
  6668  002198  0A1D               	xorlw	29	; case 48
  6669  00219A  B4D8               	btfsc	status,2,c
  6670  00219C  D7C4               	goto	l7284
  6671  00219E  D7CB               	goto	l7300
  6672  0021A0                     l7306:
  6673                           
  6674                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  6675                           ;stkvar	_done @ sp[(-23)+18]
  6676  0021A0  0EFB               	movlw	-5
  6677  0021A2  006F FF8C  F03D    	movff	plusw1,btemp
  6678  0021A8  0EFC               	movlw	-4
  6679  0021AA  50E3               	movf	plusw1,w,c
  6680  0021AC  103D               	iorwf	btemp,w,c
  6681  0021AE  B4D8               	btfsc	status,2,c
  6682  0021B0  D7CF               	goto	l7304
  6683                           
  6684                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  6685  0021B2  B028               	btfsc	_flags,0,c
  6686                           
  6687                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  6688  0021B4  9228               	bcf	_flags,1,c
  6689                           
  6690                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  6691                           ;stkvar	_fmt @ sp[(-23)+-4]
  6692  0021B6  0EE5               	movlw	-27
  6693  0021B8  006F FF8F FFD9     	movff	plusw1,fsr2l
  6694  0021BE  0EE6               	movlw	-26
  6695  0021C0  006F FF8F FFDA     	movff	plusw1,fsr2h
  6696  0021C6  006F FF7F FFF6     	movff	indf2,tblptrl
  6697  0021CC                     	if	1	;There is more than 1 active tblptr byte
  6698  0021CC  0E20               	movlw	high __smallconst
  6699  0021CE  6EF7               	movwf	tblptrh,c
  6700  0021D0                     	endif
  6701  0021D0                     	if	0	;tblptru may be non-zero
  6702  0021D0                     	endif
  6703  0021D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6704  0021D0  0E00               	movlw	low (__smallconst shr (0+16))
  6705  0021D2  6EF8               	movwf	tblptru,c
  6706  0021D4                     	endif
  6707  0021D4  0008               	tblrd		*
  6708  0021D6  50F5               	movf	tablat,w,c
  6709  0021D8  0A2A               	xorlw	42
  6710  0021DA  A4D8               	btfss	status,2,c
  6711  0021DC  D02F               	goto	l7320
  6712                           
  6713                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  6714                           ;stkvar	_fmt @ sp[(-23)+-4]
  6715  0021DE  0EE5               	movlw	-27
  6716  0021E0  006F FF8F FFD9     	movff	plusw1,fsr2l
  6717  0021E6  0EE6               	movlw	-26
  6718  0021E8  006F FF8F FFDA     	movff	plusw1,fsr2h
  6719  0021EE  2ADF               	incf	indf2,f,c
  6720                           
  6721                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  6722                           ;stkvar	_ap @ sp[(-23)+-6]
  6723  0021F0  0EE3               	movlw	-29
  6724  0021F2  006F FF8F FFD9     	movff	plusw1,fsr2l
  6725  0021F8  0EE4               	movlw	-28
  6726  0021FA  006F FF8F FFDA     	movff	plusw1,fsr2h
  6727  002200  0E02               	movlw	2
  6728  002202  5EDE               	subwf	postinc2,f,c
  6729  002204  0E00               	movlw	0
  6730  002206  5ADD               	subwfb	postdec2,f,c
  6731  002208  006F FF78  F047    	movff	postinc2,btemp+10
  6732  00220E  006F FF74  F048    	movff	postdec2,btemp+11
  6733  002214  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  6734  00221A  0060  F123  FFDA   	movff	btemp+11,fsr2h
  6735  002220  006F FF78  F024    	movff	postinc2,_width
  6736  002226  006F FF74  F025    	movff	postdec2,_width+1
  6737                           
  6738                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  6739  00222C  AE25               	btfss	_width+1,7,c
  6740  00222E  D059               	goto	u4540
  6741                           
  6742                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  6743  002230  8028               	bsf	_flags,0,c
  6744                           
  6745                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  6746  002232  6C24               	negf	_width,c
  6747  002234  1E25               	comf	_width+1,f,c
  6748  002236  B0D8               	btfsc	status,0,c
  6749  002238  2A25               	incf	_width+1,f,c
  6750  00223A  D053               	goto	u4540
  6751  00223C                     l7320:
  6752                           
  6753                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  6754                           ;stkvar	_fmt @ sp[(-23)+-4]
  6755  00223C  0EE5               	movlw	-27
  6756  00223E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6757  002244  0EE6               	movlw	-26
  6758  002246  006F FF8F FFDA     	movff	plusw1,fsr2h
  6759  00224C  50DF               	movf	indf2,w,c
  6760  00224E  6EE6               	movwf	postinc1,c
  6761  002250  ECE0  F01F         	call	_atoi	;wreg free
  6762  002254  0060  F0F4  F024   	movff	btemp,_width
  6763  00225A  0060  F0F8  F025   	movff	btemp+1,_width+1
  6764                           
  6765                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6766  002260  D009               	goto	l7324
  6767  002262                     l7322:
  6768                           
  6769                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  6770                           ;stkvar	_fmt @ sp[(-23)+-4]
  6771  002262  0EE5               	movlw	-27
  6772  002264  006F FF8F FFD9     	movff	plusw1,fsr2l
  6773  00226A  0EE6               	movlw	-26
  6774  00226C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6775  002272  2ADF               	incf	indf2,f,c
  6776  002274                     l7324:
  6777  002274  0ED0               	movlw	208
  6778  002276  6E47               	movwf	btemp+10,c
  6779  002278  0EFF               	movlw	255
  6780  00227A  6E48               	movwf	btemp+11,c
  6781                           
  6782                           ;stkvar	_fmt @ sp[(-23)+-4]
  6783  00227C  0EE5               	movlw	-27
  6784  00227E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6785  002284  0EE6               	movlw	-26
  6786  002286  006F FF8F FFDA     	movff	plusw1,fsr2h
  6787  00228C  006F FF7F FFF6     	movff	indf2,tblptrl
  6788  002292                     	if	1	;There is more than 1 active tblptr byte
  6789  002292  0E20               	movlw	high __smallconst
  6790  002294  6EF7               	movwf	tblptrh,c
  6791  002296                     	endif
  6792  002296                     	if	0	;tblptru may be non-zero
  6793  002296                     	endif
  6794  002296                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6795  002296  0E00               	movlw	low (__smallconst shr (0+16))
  6796  002298  6EF8               	movwf	tblptru,c
  6797  00229A                     	endif
  6798  00229A  0008               	tblrd		*
  6799  00229C  50F5               	movf	tablat,w,c
  6800  00229E  6E45               	movwf	btemp+8,c
  6801  0022A0  6A46               	clrf	btemp+9,c
  6802  0022A2  5047               	movf	btemp+10,w,c
  6803  0022A4  2645               	addwf	btemp+8,f,c
  6804  0022A6  5048               	movf	btemp+11,w,c
  6805  0022A8  2246               	addwfc	btemp+9,f,c
  6806  0022AA  5046               	movf	btemp+9,w,c
  6807  0022AC  E106               	bnz	u4520
  6808  0022AE  0E0A               	movlw	10
  6809  0022B0  5C45               	subwf	btemp+8,w,c
  6810  0022B2  B0D8               	btfsc	status,0,c
  6811  0022B4  D002               	goto	u4520
  6812  0022B6  0E01               	movlw	1
  6813  0022B8  D001               	goto	u4530
  6814  0022BA                     u4520:
  6815  0022BA  0E00               	movlw	0
  6816  0022BC                     u4530:
  6817  0022BC  6E47               	movwf	btemp+10,c
  6818  0022BE  6A48               	clrf	btemp+11,c
  6819                           
  6820                           ;stkvar	_vfpfcnvrt$3790 @ sp[(-23)+0]
  6821  0022C0  0EE9               	movlw	-23
  6822  0022C2  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6823  0022C8  0EEA               	movlw	-22
  6824  0022CA  0060  F123  FFE3   	movff	btemp+11,plusw1
  6825                           
  6826                           ;stkvar	_vfpfcnvrt$3790 @ sp[(-23)+0]
  6827  0022D0  0EE9               	movlw	-23
  6828  0022D2  006F FF8C  F03D    	movff	plusw1,btemp
  6829  0022D8  0EEA               	movlw	-22
  6830  0022DA  50E3               	movf	plusw1,w,c
  6831  0022DC  103D               	iorwf	btemp,w,c
  6832  0022DE  A4D8               	btfss	status,2,c
  6833  0022E0  D7C0               	goto	l7322
  6834  0022E2                     u4540:
  6835                           
  6836                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  6837                           ;stkvar	_fmt @ sp[(-23)+-4]
  6838  0022E2  0EE5               	movlw	-27
  6839  0022E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6840  0022EA  0EE6               	movlw	-26
  6841  0022EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6842  0022F2  006F FF7F FFF6     	movff	indf2,tblptrl
  6843  0022F8                     	if	1	;There is more than 1 active tblptr byte
  6844  0022F8  0E20               	movlw	high __smallconst
  6845  0022FA  6EF7               	movwf	tblptrh,c
  6846  0022FC                     	endif
  6847  0022FC                     	if	0	;tblptru may be non-zero
  6848  0022FC                     	endif
  6849  0022FC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6850  0022FC  0E00               	movlw	low (__smallconst shr (0+16))
  6851  0022FE  6EF8               	movwf	tblptru,c
  6852  002300                     	endif
  6853  002300  0008               	tblrd		*
  6854  002302  50F5               	movf	tablat,w,c
  6855  002304  0A63               	xorlw	99
  6856  002306  A4D8               	btfss	status,2,c
  6857  002308  D034               	goto	l7340
  6858                           
  6859                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  6860                           ;stkvar	_fmt @ sp[(-23)+-4]
  6861  00230A  0EE5               	movlw	-27
  6862  00230C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6863  002312  0EE6               	movlw	-26
  6864  002314  006F FF8F FFDA     	movff	plusw1,fsr2h
  6865  00231A  2ADF               	incf	indf2,f,c
  6866                           
  6867                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  6868                           ;stkvar	_ap @ sp[(-23)+-6]
  6869  00231C  0EE3               	movlw	-29
  6870  00231E  006F FF8F FFD9     	movff	plusw1,fsr2l
  6871  002324  0EE4               	movlw	-28
  6872  002326  006F FF8F FFDA     	movff	plusw1,fsr2h
  6873  00232C  0E02               	movlw	2
  6874  00232E  5EDE               	subwf	postinc2,f,c
  6875  002330  0E00               	movlw	0
  6876  002332  5ADD               	subwfb	postdec2,f,c
  6877  002334  006F FF78  F047    	movff	postinc2,btemp+10
  6878  00233A  006F FF74  F048    	movff	postdec2,btemp+11
  6879  002340  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  6880  002346  0060  F123  FFDA   	movff	btemp+11,fsr2h
  6881  00234C  50DF               	movf	indf2,w,c
  6882  00234E  6E48               	movwf	btemp+11,c
  6883                           
  6884                           ;stkvar	_c @ sp[(-23)+22]
  6885  002350  0EFF               	movlw	-1
  6886  002352  0060  F123  FFE3   	movff	btemp+11,plusw1
  6887                           
  6888                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  6889                           ;stkvar	_c @ sp[(-23)+22]
  6890  002358  0EFF               	movlw	-1
  6891  00235A  50E3               	movf	plusw1,w,c
  6892  00235C  6EE6               	movwf	postinc1,c
  6893                           
  6894                           ;stkvar	_fp @ sp[(-24)+-2]
  6895  00235E  0EE6               	movlw	-26
  6896  002360  006F FF8F FFE6     	movff	plusw1,postinc1
  6897  002366  006F FF8F FFE6     	movff	plusw1,postinc1
  6898  00236C  EC32  F028         	call	_ctoa	;wreg free
  6899  002370  D209               	goto	l1767
  6900  002372                     l7340:
  6901                           
  6902                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6903                           ;stkvar	_fmt @ sp[(-23)+-4]
  6904  002372  0EE5               	movlw	-27
  6905  002374  006F FF8F FFD9     	movff	plusw1,fsr2l
  6906  00237A  0EE6               	movlw	-26
  6907  00237C  006F FF8F FFDA     	movff	plusw1,fsr2h
  6908  002382  006F FF7F FFF6     	movff	indf2,tblptrl
  6909  002388                     	if	1	;There is more than 1 active tblptr byte
  6910  002388  0E20               	movlw	high __smallconst
  6911  00238A  6EF7               	movwf	tblptrh,c
  6912  00238C                     	endif
  6913  00238C                     	if	0	;tblptru may be non-zero
  6914  00238C                     	endif
  6915  00238C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6916  00238C  0E00               	movlw	low (__smallconst shr (0+16))
  6917  00238E  6EF8               	movwf	tblptru,c
  6918  002390                     	endif
  6919  002390  0008               	tblrd		*
  6920  002392  50F5               	movf	tablat,w,c
  6921  002394  0A64               	xorlw	100
  6922  002396  B4D8               	btfsc	status,2,c
  6923  002398  D014               	goto	u4570
  6924                           
  6925                           ;stkvar	_fmt @ sp[(-23)+-4]
  6926  00239A  0EE5               	movlw	-27
  6927  00239C  006F FF8F FFD9     	movff	plusw1,fsr2l
  6928  0023A2  0EE6               	movlw	-26
  6929  0023A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6930  0023AA  006F FF7F FFF6     	movff	indf2,tblptrl
  6931  0023B0                     	if	1	;There is more than 1 active tblptr byte
  6932  0023B0  0E20               	movlw	high __smallconst
  6933  0023B2  6EF7               	movwf	tblptrh,c
  6934  0023B4                     	endif
  6935  0023B4                     	if	0	;tblptru may be non-zero
  6936  0023B4                     	endif
  6937  0023B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6938  0023B4  0E00               	movlw	low (__smallconst shr (0+16))
  6939  0023B6  6EF8               	movwf	tblptru,c
  6940  0023B8                     	endif
  6941  0023B8  0008               	tblrd		*
  6942  0023BA  50F5               	movf	tablat,w,c
  6943  0023BC  0A69               	xorlw	105
  6944  0023BE  A4D8               	btfss	status,2,c
  6945  0023C0  D073               	goto	l7352
  6946  0023C2                     u4570:
  6947                           
  6948                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  6949                           ;stkvar	_fmt @ sp[(-23)+-4]
  6950  0023C2  0EE5               	movlw	-27
  6951  0023C4  006F FF8F FFD9     	movff	plusw1,fsr2l
  6952  0023CA  0EE6               	movlw	-26
  6953  0023CC  006F FF8F FFDA     	movff	plusw1,fsr2h
  6954  0023D2  2ADF               	incf	indf2,f,c
  6955                           
  6956                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  6957                           ;stkvar	_ap @ sp[(-23)+-6]
  6958  0023D4  0EE3               	movlw	-29
  6959  0023D6  006F FF8F FFD9     	movff	plusw1,fsr2l
  6960  0023DC  0EE4               	movlw	-28
  6961  0023DE  006F FF8F FFDA     	movff	plusw1,fsr2h
  6962  0023E4  0E02               	movlw	2
  6963  0023E6  5EDE               	subwf	postinc2,f,c
  6964  0023E8  0E00               	movlw	0
  6965  0023EA  5ADD               	subwfb	postdec2,f,c
  6966  0023EC  006F FF78  F047    	movff	postinc2,btemp+10
  6967  0023F2  006F FF74  F048    	movff	postdec2,btemp+11
  6968  0023F8  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  6969  0023FE  0060  F123  FFDA   	movff	btemp+11,fsr2h
  6970  002404  006F FF78  F047    	movff	postinc2,btemp+10
  6971  00240A  006F FF74  F048    	movff	postdec2,btemp+11
  6972                           
  6973                           ;stkvar	_ll @ sp[(-23)+10]
  6974  002410  0EF3               	movlw	-13
  6975  002412  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6976  002418  0EF4               	movlw	-12
  6977  00241A  0060  F123  FFE3   	movff	btemp+11,plusw1
  6978  002420  6A3D               	clrf	btemp,c
  6979  002422  BEE3               	btfsc	plusw1,7,c
  6980  002424  683D               	setf	btemp,c
  6981  002426  0EF5               	movlw	-11
  6982  002428  0060  F0F7  FFE3   	movff	btemp,plusw1
  6983  00242E  0EF6               	movlw	-10
  6984  002430  0060  F0F7  FFE3   	movff	btemp,plusw1
  6985  002436  0EF7               	movlw	-9
  6986  002438  0060  F0F7  FFE3   	movff	btemp,plusw1
  6987  00243E  0EF8               	movlw	-8
  6988  002440  0060  F0F7  FFE3   	movff	btemp,plusw1
  6989  002446  0EF9               	movlw	-7
  6990  002448  0060  F0F7  FFE3   	movff	btemp,plusw1
  6991  00244E  0EFA               	movlw	-6
  6992  002450  0060  F0F7  FFE3   	movff	btemp,plusw1
  6993                           
  6994                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  6995                           ;stkvar	_ll @ sp[(-23)+10]
  6996  002456  50E1               	movf	fsr1l,w,c
  6997  002458  0FF3               	addlw	-13
  6998  00245A  6ED9               	movwf	fsr2l,c
  6999  00245C  50E2               	movf	fsr1h,w,c
  7000  00245E  6EDA               	movwf	fsr2h,c
  7001  002460  0EFF               	movlw	255
  7002  002462  22DA               	addwfc	fsr2h,f,c
  7003  002464  006F FF7B FFE6     	movff	postinc2,postinc1
  7004  00246A  006F FF7B FFE6     	movff	postinc2,postinc1
  7005  002470  006F FF7B FFE6     	movff	postinc2,postinc1
  7006  002476  006F FF7B FFE6     	movff	postinc2,postinc1
  7007  00247C  006F FF7B FFE6     	movff	postinc2,postinc1
  7008  002482  006F FF7B FFE6     	movff	postinc2,postinc1
  7009  002488  006F FF7B FFE6     	movff	postinc2,postinc1
  7010  00248E  006F FF7B FFE6     	movff	postinc2,postinc1
  7011                           
  7012                           ;stkvar	_fp @ sp[(-31)+-2]
  7013  002494  0EDF               	movlw	-33
  7014  002496  006F FF8F FFE6     	movff	plusw1,postinc1
  7015  00249C  006F FF8F FFE6     	movff	plusw1,postinc1
  7016  0024A2  ECC7  F013         	call	_dtoa	;wreg free
  7017  0024A6  D16E               	goto	l1767
  7018  0024A8                     l7352:
  7019                           
  7020                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  7021                           ;stkvar	_fmt @ sp[(-23)+-4]
  7022  0024A8  0EE5               	movlw	-27
  7023  0024AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7024  0024B0  0EE6               	movlw	-26
  7025  0024B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7026  0024B8  006F FF7F FFF6     	movff	indf2,tblptrl
  7027  0024BE                     	if	1	;There is more than 1 active tblptr byte
  7028  0024BE  0E20               	movlw	high __smallconst
  7029  0024C0  6EF7               	movwf	tblptrh,c
  7030  0024C2                     	endif
  7031  0024C2                     	if	0	;tblptru may be non-zero
  7032  0024C2                     	endif
  7033  0024C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7034  0024C2  0E00               	movlw	low (__smallconst shr (0+16))
  7035  0024C4  6EF8               	movwf	tblptru,c
  7036  0024C6                     	endif
  7037  0024C6  0008               	tblrd		*
  7038  0024C8  50F5               	movf	tablat,w,c
  7039  0024CA  0A73               	xorlw	115
  7040  0024CC  A4D8               	btfss	status,2,c
  7041  0024CE  D040               	goto	l7362
  7042                           
  7043                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  7044                           ;stkvar	_fmt @ sp[(-23)+-4]
  7045  0024D0  0EE5               	movlw	-27
  7046  0024D2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7047  0024D8  0EE6               	movlw	-26
  7048  0024DA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7049  0024E0  2ADF               	incf	indf2,f,c
  7050                           
  7051                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  7052                           ;stkvar	_ap @ sp[(-23)+-6]
  7053  0024E2  0EE3               	movlw	-29
  7054  0024E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7055  0024EA  0EE4               	movlw	-28
  7056  0024EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7057  0024F2  0E02               	movlw	2
  7058  0024F4  5EDE               	subwf	postinc2,f,c
  7059  0024F6  0E00               	movlw	0
  7060  0024F8  5ADD               	subwfb	postdec2,f,c
  7061  0024FA  006F FF78  F047    	movff	postinc2,btemp+10
  7062  002500  006F FF74  F048    	movff	postdec2,btemp+11
  7063  002506  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  7064  00250C  0060  F123  FFDA   	movff	btemp+11,fsr2h
  7065  002512  006F FF78  F047    	movff	postinc2,btemp+10
  7066  002518  006F FF74  F048    	movff	postdec2,btemp+11
  7067                           
  7068                           ;stkvar	_cp @ sp[(-23)+20]
  7069  00251E  0EFE               	movlw	-2
  7070  002520  0060  F123  FFE3   	movff	btemp+11,plusw1
  7071  002526  0EFD               	movlw	-3
  7072  002528  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7073                           
  7074                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  7075                           ;stkvar	_cp @ sp[(-23)+20]
  7076  00252E  0EFD               	movlw	-3
  7077  002530  006F FF8F FFE6     	movff	plusw1,postinc1
  7078  002536  006F FF8F FFE6     	movff	plusw1,postinc1
  7079                           
  7080                           ;stkvar	_fp @ sp[(-25)+-2]
  7081  00253C  0EE5               	movlw	-27
  7082  00253E  006F FF8F FFE6     	movff	plusw1,postinc1
  7083  002544  006F FF8F FFE6     	movff	plusw1,postinc1
  7084  00254A  ECF0  F01A         	call	_stoa	;wreg free
  7085  00254E  D11A               	goto	l1767
  7086  002550                     l7362:
  7087                           
  7088                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  7089                           ;stkvar	_fmt @ sp[(-23)+-4]
  7090  002550  0EE5               	movlw	-27
  7091  002552  006F FF8F FFD9     	movff	plusw1,fsr2l
  7092  002558  0EE6               	movlw	-26
  7093  00255A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7094  002560  006F FF7F FFF6     	movff	indf2,tblptrl
  7095  002566                     	if	1	;There is more than 1 active tblptr byte
  7096  002566  0E20               	movlw	high __smallconst
  7097  002568  6EF7               	movwf	tblptrh,c
  7098  00256A                     	endif
  7099  00256A                     	if	0	;tblptru may be non-zero
  7100  00256A                     	endif
  7101  00256A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7102  00256A  0E00               	movlw	low (__smallconst shr (0+16))
  7103  00256C  6EF8               	movwf	tblptru,c
  7104  00256E                     	endif
  7105  00256E  0008               	tblrd		*
  7106  002570  50F5               	movf	tablat,w,c
  7107  002572  0A78               	xorlw	120
  7108  002574  B4D8               	btfsc	status,2,c
  7109  002576  D014               	goto	u4600
  7110                           
  7111                           ;stkvar	_fmt @ sp[(-23)+-4]
  7112  002578  0EE5               	movlw	-27
  7113  00257A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7114  002580  0EE6               	movlw	-26
  7115  002582  006F FF8F FFDA     	movff	plusw1,fsr2h
  7116  002588  006F FF7F FFF6     	movff	indf2,tblptrl
  7117  00258E                     	if	1	;There is more than 1 active tblptr byte
  7118  00258E  0E20               	movlw	high __smallconst
  7119  002590  6EF7               	movwf	tblptrh,c
  7120  002592                     	endif
  7121  002592                     	if	0	;tblptru may be non-zero
  7122  002592                     	endif
  7123  002592                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7124  002592  0E00               	movlw	low (__smallconst shr (0+16))
  7125  002594  6EF8               	movwf	tblptru,c
  7126  002596                     	endif
  7127  002596  0008               	tblrd		*
  7128  002598  50F5               	movf	tablat,w,c
  7129  00259A  0A58               	xorlw	88
  7130  00259C  A4D8               	btfss	status,2,c
  7131  00259E  D091               	goto	l7376
  7132  0025A0                     u4600:
  7133                           
  7134                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  7135                           ;stkvar	_fmt @ sp[(-23)+-4]
  7136  0025A0  0EE5               	movlw	-27
  7137  0025A2  006F FF8F FFD9     	movff	plusw1,fsr2l
  7138  0025A8  0EE6               	movlw	-26
  7139  0025AA  006F FF8F FFDA     	movff	plusw1,fsr2h
  7140  0025B0  006F FF7F FFF6     	movff	indf2,tblptrl
  7141  0025B6                     	if	1	;There is more than 1 active tblptr byte
  7142  0025B6  0E20               	movlw	high __smallconst
  7143  0025B8  6EF7               	movwf	tblptrh,c
  7144  0025BA                     	endif
  7145  0025BA                     	if	0	;tblptru may be non-zero
  7146  0025BA                     	endif
  7147  0025BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7148  0025BA  0E00               	movlw	low (__smallconst shr (0+16))
  7149  0025BC  6EF8               	movwf	tblptru,c
  7150  0025BE                     	endif
  7151                           
  7152                           ;stkvar	_c @ sp[(-23)+22]
  7153  0025BE  0008               	tblrd		*
  7154  0025C0  0EFF               	movlw	-1
  7155  0025C2  006F FFD7 FFE3     	movff	tablat,plusw1
  7156                           
  7157                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  7158                           ;stkvar	_fmt @ sp[(-23)+-4]
  7159  0025C8  0EE5               	movlw	-27
  7160  0025CA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7161  0025D0  0EE6               	movlw	-26
  7162  0025D2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7163  0025D8  2ADF               	incf	indf2,f,c
  7164                           
  7165                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  7166                           ;stkvar	_ap @ sp[(-23)+-6]
  7167  0025DA  0EE3               	movlw	-29
  7168  0025DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7169  0025E2  0EE4               	movlw	-28
  7170  0025E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7171  0025EA  0E02               	movlw	2
  7172  0025EC  5EDE               	subwf	postinc2,f,c
  7173  0025EE  0E00               	movlw	0
  7174  0025F0  5ADD               	subwfb	postdec2,f,c
  7175  0025F2  006F FF78  F047    	movff	postinc2,btemp+10
  7176  0025F8  006F FF74  F048    	movff	postdec2,btemp+11
  7177  0025FE  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  7178  002604  0060  F123  FFDA   	movff	btemp+11,fsr2h
  7179  00260A  006F FF78  F047    	movff	postinc2,btemp+10
  7180  002610  006F FF74  F048    	movff	postdec2,btemp+11
  7181  002616  5047               	movf	btemp+10,w,c
  7182  002618  6E4D               	movwf	btemp+16,c
  7183  00261A  5048               	movf	btemp+11,w,c
  7184  00261C  6E4E               	movwf	btemp+17,c
  7185  00261E  6A4F               	clrf	btemp+18,c
  7186  002620  6A50               	clrf	btemp+19,c
  7187  002622  6A51               	clrf	btemp+20,c
  7188  002624  6A52               	clrf	btemp+21,c
  7189  002626  6A53               	clrf	btemp+22,c
  7190  002628  6A54               	clrf	btemp+23,c
  7191                           
  7192                           ;stkvar	_llu @ sp[(-23)+2]
  7193  00262A  0EEB               	movlw	-21
  7194  00262C  0060  F137  FFE3   	movff	btemp+16,plusw1
  7195  002632  0EEC               	movlw	-20
  7196  002634  0060  F13B  FFE3   	movff	btemp+17,plusw1
  7197  00263A  0EED               	movlw	-19
  7198  00263C  0060  F13F  FFE3   	movff	btemp+18,plusw1
  7199  002642  0EEE               	movlw	-18
  7200  002644  0060  F143  FFE3   	movff	btemp+19,plusw1
  7201  00264A  0EEF               	movlw	-17
  7202  00264C  0060  F147  FFE3   	movff	btemp+20,plusw1
  7203  002652  0EF0               	movlw	-16
  7204  002654  0060  F14B  FFE3   	movff	btemp+21,plusw1
  7205  00265A  0EF1               	movlw	-15
  7206  00265C  0060  F14F  FFE3   	movff	btemp+22,plusw1
  7207  002662  0EF2               	movlw	-14
  7208  002664  0060  F153  FFE3   	movff	btemp+23,plusw1
  7209                           
  7210                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  7211                           ;stkvar	_c @ sp[(-23)+22]
  7212  00266A  0EFF               	movlw	-1
  7213  00266C  50E3               	movf	plusw1,w,c
  7214  00266E  6EE6               	movwf	postinc1,c
  7215                           
  7216                           ;stkvar	_llu @ sp[(-24)+2]
  7217  002670  50E1               	movf	fsr1l,w,c
  7218  002672  0FEA               	addlw	-22
  7219  002674  6ED9               	movwf	fsr2l,c
  7220  002676  50E2               	movf	fsr1h,w,c
  7221  002678  6EDA               	movwf	fsr2h,c
  7222  00267A  0EFF               	movlw	255
  7223  00267C  22DA               	addwfc	fsr2h,f,c
  7224  00267E  006F FF7B FFE6     	movff	postinc2,postinc1
  7225  002684  006F FF7B FFE6     	movff	postinc2,postinc1
  7226  00268A  006F FF7B FFE6     	movff	postinc2,postinc1
  7227  002690  006F FF7B FFE6     	movff	postinc2,postinc1
  7228  002696  006F FF7B FFE6     	movff	postinc2,postinc1
  7229  00269C  006F FF7B FFE6     	movff	postinc2,postinc1
  7230  0026A2  006F FF7B FFE6     	movff	postinc2,postinc1
  7231  0026A8  006F FF7B FFE6     	movff	postinc2,postinc1
  7232                           
  7233                           ;stkvar	_fp @ sp[(-32)+-2]
  7234  0026AE  0EDE               	movlw	-34
  7235  0026B0  006F FF8F FFE6     	movff	plusw1,postinc1
  7236  0026B6  006F FF8F FFE6     	movff	plusw1,postinc1
  7237  0026BC  ECB8  F017         	call	_xtoa	;wreg free
  7238  0026C0  D061               	goto	l1767
  7239  0026C2                     l7376:
  7240                           
  7241                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  7242                           ;stkvar	_fmt @ sp[(-23)+-4]
  7243  0026C2  0EE5               	movlw	-27
  7244  0026C4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7245  0026CA  0EE6               	movlw	-26
  7246  0026CC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7247  0026D2  006F FF7F FFF6     	movff	indf2,tblptrl
  7248  0026D8                     	if	1	;There is more than 1 active tblptr byte
  7249  0026D8  0E20               	movlw	high __smallconst
  7250  0026DA  6EF7               	movwf	tblptrh,c
  7251  0026DC                     	endif
  7252  0026DC                     	if	0	;tblptru may be non-zero
  7253  0026DC                     	endif
  7254  0026DC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7255  0026DC  0E00               	movlw	low (__smallconst shr (0+16))
  7256  0026DE  6EF8               	movwf	tblptru,c
  7257  0026E0                     	endif
  7258  0026E0  0008               	tblrd		*
  7259  0026E2  50F5               	movf	tablat,w,c
  7260  0026E4  0A25               	xorlw	37
  7261  0026E6  A4D8               	btfss	status,2,c
  7262  0026E8  D018               	goto	l7386
  7263                           
  7264                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  7265                           ;stkvar	_fmt @ sp[(-23)+-4]
  7266  0026EA  0EE5               	movlw	-27
  7267  0026EC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7268  0026F2  0EE6               	movlw	-26
  7269  0026F4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7270  0026FA  2ADF               	incf	indf2,f,c
  7271                           
  7272                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  7273                           ;stkvar	_fp @ sp[(-23)+-2]
  7274  0026FC  0EE7               	movlw	-25
  7275  0026FE  006F FF8F FFE6     	movff	plusw1,postinc1
  7276  002704  006F FF8F FFE6     	movff	plusw1,postinc1
  7277  00270A  0E25               	movlw	37
  7278  00270C  6EE6               	movwf	postinc1,c
  7279  00270E  0E00               	movlw	0
  7280  002710  6EE6               	movwf	postinc1,c
  7281  002712  EC6B  F023         	call	_fputc	;wreg free
  7282  002716                     l7382:
  7283                           
  7284                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  7285  002716  0E01               	movlw	1
  7286  002718  D00A               	goto	L19
  7287  00271A                     l7386:
  7288                           
  7289                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  7290                           ;stkvar	_fmt @ sp[(-23)+-4]
  7291  00271A  0EE5               	movlw	-27
  7292  00271C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7293  002722  0EE6               	movlw	-26
  7294  002724  006F FF8F FFDA     	movff	plusw1,fsr2h
  7295  00272A  2ADF               	incf	indf2,f,c
  7296                           
  7297                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  7298  00272C  0E00               	movlw	0
  7299  00272E                     L19:
  7300  00272E  6E3D               	movwf	btemp,c
  7301  002730  0E00               	movlw	0
  7302  002732  6E3E               	movwf	btemp+1,c
  7303  002734  D027               	goto	l1767
  7304  002736                     l7392:
  7305                           
  7306                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  7307                           ;stkvar	_fp @ sp[(-23)+-2]
  7308  002736  0EE7               	movlw	-25
  7309  002738  006F FF8F FFE6     	movff	plusw1,postinc1
  7310  00273E  006F FF8F FFE6     	movff	plusw1,postinc1
  7311                           
  7312                           ;stkvar	_fmt @ sp[(-25)+-4]
  7313  002744  0EE3               	movlw	-29
  7314  002746  006F FF8F FFD9     	movff	plusw1,fsr2l
  7315  00274C  0EE4               	movlw	-28
  7316  00274E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7317  002754  006F FF7F FFF6     	movff	indf2,tblptrl
  7318  00275A                     	if	1	;There is more than 1 active tblptr byte
  7319  00275A  0E20               	movlw	high __smallconst
  7320  00275C  6EF7               	movwf	tblptrh,c
  7321  00275E                     	endif
  7322  00275E                     	if	0	;tblptru may be non-zero
  7323  00275E                     	endif
  7324  00275E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7325  00275E  0E00               	movlw	low (__smallconst shr (0+16))
  7326  002760  6EF8               	movwf	tblptru,c
  7327  002762                     	endif
  7328  002762  0008               	tblrd		*
  7329  002764  50F5               	movf	tablat,w,c
  7330  002766  6EE6               	movwf	postinc1,c
  7331  002768  0E00               	movlw	0
  7332  00276A  6EE6               	movwf	postinc1,c
  7333  00276C  EC6B  F023         	call	_fputc	;wreg free
  7334                           
  7335                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  7336                           ;stkvar	_fmt @ sp[(-23)+-4]
  7337  002770  0EE5               	movlw	-27
  7338  002772  006F FF8F FFD9     	movff	plusw1,fsr2l
  7339  002778  0EE6               	movlw	-26
  7340  00277A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7341  002780  2ADF               	incf	indf2,f,c
  7342  002782  D7C9               	goto	l7382
  7343  002784                     l1767:
  7344                           
  7345                           ; _vfpfcnvrt: autosize = 23, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  7346  002784  0EE3               	movlw	227
  7347  002786  26E1               	addwf	fsr1l,f,c
  7348  002788  0EFF               	movlw	255
  7349  00278A  22E2               	addwfc	fsr1h,f,c
  7350  00278C  0012               	return		;funcret
  7351  00278E                     __end_of_vfpfcnvrt:
  7352                           	opt callstack 0
  7353                           
  7354 ;; *************** function _xtoa *****************
  7355 ;; Defined at:
  7356 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7359 ;;		 -> f(5), NULL(0), 
  7360 ;;  d               8  [STACK] unsigned long long 
  7361 ;;  x               1  [STACK] unsigned char 
  7362 ;; Auto vars:     Size  Location     Type
  7363 ;;  n               8  [STACK] unsigned long long 
  7364 ;;  c               2  [STACK] int 
  7365 ;;  i               2  [STACK] int 
  7366 ;;  w               2  [STACK] int 
  7367 ;;  p               2  [STACK] int 
  7368 ;; Return value:  Size  Location     Type
  7369 ;;                  2  [STACK] int 
  7370 ;; Registers used:
  7371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
  7372 ;; Tracked objects:
  7373 ;;		On entry : 0/1
  7374 ;;		On exit  : 0/0
  7375 ;;		Unchanged: 0/0
  7376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7381 ;;Total ram usage:        0 bytes
  7382 ;; Hardware stack levels used:    1
  7383 ;; Hardware stack levels required when called:    8
  7384 ;; This function calls:
  7385 ;;		_isalpha
  7386 ;;		_isupper
  7387 ;;		_pad
  7388 ;;		_toupper
  7389 ;; This function is called by:
  7390 ;;		_vfpfcnvrt
  7391 ;; This function uses a reentrant model
  7392 ;;
  7393                           
  7394                           	psect	text34
  7395  002F70                     __ptext34:
  7396                           	opt callstack 0
  7397  002F70                     _xtoa:
  7398                           	opt callstack 0
  7399                           
  7400                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  7401  002F70  0E14               	movlw	20
  7402  002F72  26E1               	addwf	fsr1l,f,c
  7403  002F74  0E00               	movlw	0
  7404  002F76  22E2               	addwfc	fsr1h,f,c
  7405                           
  7406                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  7407                           
  7408                           ;incstack = 0
  7409  002F78  AE27               	btfss	_prec+1,7,c
  7410                           
  7411                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  7412  002F7A  9228               	bcf	_flags,1,c
  7413                           
  7414                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  7415  002F7C  BE27               	btfsc	_prec+1,7,c
  7416  002F7E  D005               	goto	u4300
  7417  002F80  5027               	movf	_prec+1,w,c
  7418  002F82  E110               	bnz	l7206
  7419  002F84  0426               	decf	_prec,w,c
  7420  002F86  B0D8               	btfsc	status,0,c
  7421  002F88  D00D               	goto	l7206
  7422  002F8A                     u4300:
  7423  002F8A  0E01               	movlw	1
  7424  002F8C  6E47               	movwf	btemp+10,c
  7425  002F8E  0E00               	movlw	0
  7426  002F90  6E48               	movwf	btemp+11,c
  7427                           
  7428                           ;stkvar	_p @ sp[(-20)+18]
  7429  002F92  0EFE               	movlw	-2
  7430  002F94  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7431  002F9A  0EFF               	movlw	-1
  7432  002F9C  0060  F123  FFE3   	movff	btemp+11,plusw1
  7433  002FA2  D008               	goto	l1717
  7434  002FA4                     l7206:
  7435                           
  7436                           ;stkvar	_p @ sp[(-20)+18]
  7437  002FA4  0EFE               	movlw	-2
  7438  002FA6  0060  F09B  FFE3   	movff	_prec,plusw1
  7439  002FAC  0EFF               	movlw	-1
  7440  002FAE  0060  F09F  FFE3   	movff	_prec+1,plusw1
  7441  002FB4                     l1717:
  7442                           
  7443                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  7444                           ;stkvar	_w @ sp[(-20)+16]
  7445  002FB4  0EFC               	movlw	-4
  7446  002FB6  0060  F093  FFE3   	movff	_width,plusw1
  7447  002FBC  0EFD               	movlw	-3
  7448  002FBE  0060  F097  FFE3   	movff	_width+1,plusw1
  7449                           
  7450                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  7451  002FC4  A828               	btfss	_flags,4,c
  7452  002FC6  D00B               	goto	l7212
  7453                           
  7454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  7455                           ;stkvar	_w @ sp[(-20)+16]
  7456  002FC8  50E1               	movf	fsr1l,w,c
  7457  002FCA  0FFC               	addlw	-4
  7458  002FCC  6ED9               	movwf	fsr2l,c
  7459  002FCE  50E2               	movf	fsr1h,w,c
  7460  002FD0  6EDA               	movwf	fsr2h,c
  7461  002FD2  0EFF               	movlw	255
  7462  002FD4  22DA               	addwfc	fsr2h,f,c
  7463  002FD6  0EFE               	movlw	254
  7464  002FD8  26DE               	addwf	postinc2,f,c
  7465  002FDA  0EFF               	movlw	255
  7466  002FDC  22DD               	addwfc	postdec2,f,c
  7467  002FDE                     l7212:
  7468                           
  7469                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  7470                           ;stkvar	_d @ sp[(-20)+-10]
  7471  002FDE  0EE2               	movlw	226
  7472  002FE0  24E1               	addwf	fsr1l,w,c
  7473  002FE2  6ED9               	movwf	fsr2l,c
  7474  002FE4  0EFF               	movlw	255
  7475  002FE6  20E2               	addwfc	fsr1h,w,c
  7476  002FE8  6EDA               	movwf	fsr2h,c
  7477                           
  7478                           ;stkvar	_n @ sp[(-20)+4]
  7479  002FEA  0E08               	movlw	8
  7480  002FEC  6E3D               	movwf	btemp,c
  7481  002FEE  0EF0               	movlw	-16
  7482  002FF0                     us432999:
  7483  002FF0  006F FF7B FFE3     	movff	postinc2,plusw1
  7484  002FF6  28E8               	incf	wreg,w,c
  7485  002FF8  2E3D               	decfsz	btemp,f,c
  7486  002FFA  D7FA               	bra	us432999
  7487                           
  7488                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  7489  002FFC  0E1F               	movlw	31
  7490  002FFE  6E47               	movwf	btemp+10,c
  7491  003000  0E00               	movlw	0
  7492  003002  6E48               	movwf	btemp+11,c
  7493                           
  7494                           ;stkvar	_i @ sp[(-20)+14]
  7495  003004  0EFA               	movlw	-6
  7496  003006  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7497  00300C  0EFB               	movlw	-5
  7498  00300E  0060  F123  FFE3   	movff	btemp+11,plusw1
  7499                           
  7500                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  7501  003014  0100               	movlb	0	; () banked
  7502  003016  6BF8               	clrf	(_dbuf+31)& (0+255),b
  7503                           
  7504                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7505  003018  D0E8               	goto	l7250
  7506  00301A                     l7218:
  7507                           
  7508                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  7509                           ;stkvar	_i @ sp[(-20)+14]
  7510  00301A  50E1               	movf	fsr1l,w,c
  7511  00301C  0FFA               	addlw	-6
  7512  00301E  6ED9               	movwf	fsr2l,c
  7513  003020  50E2               	movf	fsr1h,w,c
  7514  003022  6EDA               	movwf	fsr2h,c
  7515  003024  0EFF               	movlw	255
  7516  003026  22DA               	addwfc	fsr2h,f,c
  7517  003028  06DE               	decf	postinc2,f,c
  7518  00302A  0E00               	movlw	0
  7519  00302C  5ADD               	subwfb	postdec2,f,c
  7520                           
  7521                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  7522                           ;stkvar	_n @ sp[(-20)+4]
  7523  00302E  0EF0               	movlw	-16
  7524  003030  006F FF8C  F047    	movff	plusw1,btemp+10
  7525  003036  0EF1               	movlw	-15
  7526  003038  006F FF8C  F048    	movff	plusw1,btemp+11
  7527  00303E  0E0F               	movlw	15
  7528  003040  1647               	andwf	btemp+10,f,c
  7529  003042  0E00               	movlw	0
  7530  003044  1648               	andwf	btemp+11,f,c
  7531                           
  7532                           ;stkvar	_c @ sp[(-20)+12]
  7533  003046  0EF8               	movlw	-8
  7534  003048  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7535  00304E  0EF9               	movlw	-7
  7536  003050  0060  F123  FFE3   	movff	btemp+11,plusw1
  7537                           
  7538                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  7539                           ;stkvar	_c @ sp[(-20)+12]
  7540  003056  0EF9               	movlw	-7
  7541  003058  BEE3               	btfsc	plusw1,7,c
  7542  00305A  D00F               	goto	l7226
  7543  00305C  0EF9               	movlw	-7
  7544  00305E  50E3               	movf	plusw1,w,c
  7545  003060  E108               	bnz	u4330
  7546  003062  0EF8               	movlw	-8
  7547  003064  006F FF8C  F03D    	movff	plusw1,btemp
  7548  00306A  0E0A               	movlw	10
  7549  00306C  5E3D               	subwf	btemp,f,c
  7550  00306E  A0D8               	btfss	status,0,c
  7551  003070  D004               	goto	l7226
  7552  003072                     u4330:
  7553                           
  7554                           ;stkvar	_c @ sp[(-20)+12]
  7555  003072  0EF8               	movlw	-8
  7556  003074  50E3               	movf	plusw1,w,c
  7557  003076  0F57               	addlw	87
  7558  003078  D003               	goto	L20
  7559  00307A                     l7226:
  7560                           
  7561                           ;stkvar	_c @ sp[(-20)+12]
  7562  00307A  0EF8               	movlw	-8
  7563  00307C  50E3               	movf	plusw1,w,c
  7564  00307E  0F30               	addlw	48
  7565  003080                     L20:
  7566  003080  6E47               	movwf	btemp+10,c
  7567  003082  0EF9               	movlw	-7
  7568  003084  006F FF8C  F048    	movff	plusw1,btemp+11
  7569  00308A  0E00               	movlw	0
  7570  00308C  2248               	addwfc	btemp+11,f,c
  7571                           
  7572                           ;stkvar	_c @ sp[(-20)+12]
  7573  00308E  0EF8               	movlw	-8
  7574  003090  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7575  003096  0EF9               	movlw	-7
  7576  003098  0060  F123  FFE3   	movff	btemp+11,plusw1
  7577  00309E  0EBF               	movlw	191
  7578  0030A0  6E47               	movwf	btemp+10,c
  7579  0030A2  0EFF               	movlw	255
  7580  0030A4  6E48               	movwf	btemp+11,c
  7581                           
  7582                           ;stkvar	_x @ sp[(-20)+-11]
  7583  0030A6  0EE1               	movlw	-31
  7584  0030A8  50E3               	movf	plusw1,w,c
  7585  0030AA  6E45               	movwf	btemp+8,c
  7586  0030AC  6A46               	clrf	btemp+9,c
  7587  0030AE  5047               	movf	btemp+10,w,c
  7588  0030B0  2645               	addwf	btemp+8,f,c
  7589  0030B2  5048               	movf	btemp+11,w,c
  7590  0030B4  2246               	addwfc	btemp+9,f,c
  7591  0030B6  5046               	movf	btemp+9,w,c
  7592  0030B8  E106               	bnz	u4340
  7593  0030BA  0E1A               	movlw	26
  7594  0030BC  5C45               	subwf	btemp+8,w,c
  7595  0030BE  B0D8               	btfsc	status,0,c
  7596  0030C0  D002               	goto	u4340
  7597  0030C2  0E01               	movlw	1
  7598  0030C4  D001               	goto	u4350
  7599  0030C6                     u4340:
  7600  0030C6  0E00               	movlw	0
  7601  0030C8                     u4350:
  7602  0030C8  6E47               	movwf	btemp+10,c
  7603  0030CA  6A48               	clrf	btemp+11,c
  7604                           
  7605                           ;stkvar	_xtoa$3775 @ sp[(-20)+2]
  7606  0030CC  0EEE               	movlw	-18
  7607  0030CE  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7608  0030D4  0EEF               	movlw	-17
  7609  0030D6  0060  F123  FFE3   	movff	btemp+11,plusw1
  7610                           
  7611                           ;stkvar	_xtoa$3775 @ sp[(-20)+2]
  7612  0030DC  0EEE               	movlw	-18
  7613  0030DE  006F FF8C  F03D    	movff	plusw1,btemp
  7614  0030E4  0EEF               	movlw	-17
  7615  0030E6  50E3               	movf	plusw1,w,c
  7616  0030E8  103D               	iorwf	btemp,w,c
  7617  0030EA  B4D8               	btfsc	status,2,c
  7618  0030EC  D041               	goto	l7242
  7619  0030EE  0E9F               	movlw	159
  7620  0030F0  6E47               	movwf	btemp+10,c
  7621  0030F2  0EFF               	movlw	255
  7622  0030F4  6E48               	movwf	btemp+11,c
  7623                           
  7624                           ;stkvar	_c @ sp[(-20)+12]
  7625  0030F6  0EF8               	movlw	-8
  7626  0030F8  006F FF8C  F045    	movff	plusw1,btemp+8
  7627  0030FE  0EF9               	movlw	-7
  7628  003100  006F FF8C  F046    	movff	plusw1,btemp+9
  7629  003106  0E20               	movlw	32
  7630  003108  1245               	iorwf	btemp+8,f,c
  7631  00310A  0E00               	movlw	0
  7632  00310C  1246               	iorwf	btemp+9,f,c
  7633  00310E  5047               	movf	btemp+10,w,c
  7634  003110  2645               	addwf	btemp+8,f,c
  7635  003112  5048               	movf	btemp+11,w,c
  7636  003114  2246               	addwfc	btemp+9,f,c
  7637  003116  5046               	movf	btemp+9,w,c
  7638  003118  E106               	bnz	u4370
  7639  00311A  0E1A               	movlw	26
  7640  00311C  5C45               	subwf	btemp+8,w,c
  7641  00311E  B0D8               	btfsc	status,0,c
  7642  003120  D002               	goto	u4370
  7643  003122  0E01               	movlw	1
  7644  003124  D001               	goto	u4380
  7645  003126                     u4370:
  7646  003126  0E00               	movlw	0
  7647  003128                     u4380:
  7648  003128  6E47               	movwf	btemp+10,c
  7649  00312A  6A48               	clrf	btemp+11,c
  7650                           
  7651                           ;stkvar	_xtoa$3776 @ sp[(-20)+0]
  7652  00312C  0EEC               	movlw	-20
  7653  00312E  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7654  003134  0EED               	movlw	-19
  7655  003136  0060  F123  FFE3   	movff	btemp+11,plusw1
  7656                           
  7657                           ;stkvar	_xtoa$3776 @ sp[(-20)+0]
  7658  00313C  0EEC               	movlw	-20
  7659  00313E  006F FF8C  F03D    	movff	plusw1,btemp
  7660  003144  0EED               	movlw	-19
  7661  003146  50E3               	movf	plusw1,w,c
  7662  003148  103D               	iorwf	btemp,w,c
  7663  00314A  B4D8               	btfsc	status,2,c
  7664  00314C  D011               	goto	l7242
  7665                           
  7666                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  7667                           ;stkvar	_c @ sp[(-20)+12]
  7668  00314E  0EF8               	movlw	-8
  7669  003150  006F FF8F FFE6     	movff	plusw1,postinc1
  7670  003156  006F FF8F FFE6     	movff	plusw1,postinc1
  7671  00315C  ECF0  F027         	call	_toupper	;wreg free
  7672                           
  7673                           ;stkvar	_c @ sp[(-20)+12]
  7674  003160  0EF8               	movlw	-8
  7675  003162  0060  F0F7  FFE3   	movff	btemp,plusw1
  7676  003168  0EF9               	movlw	-7
  7677  00316A  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  7678  003170                     l7242:
  7679                           
  7680                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  7681                           ;stkvar	_c @ sp[(-20)+12]
  7682                           ;stkvar	_i @ sp[(-20)+14]
  7683  003170  0EFA               	movlw	-6
  7684  003172  006F FF8C  F048    	movff	plusw1,btemp+11
  7685  003178  5048               	movf	btemp+11,w,c
  7686  00317A  0FD9               	addlw	low _dbuf
  7687  00317C  6ED9               	movwf	fsr2l,c
  7688  00317E  6ADA               	clrf	fsr2h,c
  7689  003180  0EF8               	movlw	-8
  7690  003182  006F FF8F FFDF     	movff	plusw1,indf2
  7691                           
  7692                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  7693                           ;stkvar	_p @ sp[(-20)+18]
  7694  003188  50E1               	movf	fsr1l,w,c
  7695  00318A  0FFE               	addlw	-2
  7696  00318C  6ED9               	movwf	fsr2l,c
  7697  00318E  50E2               	movf	fsr1h,w,c
  7698  003190  6EDA               	movwf	fsr2h,c
  7699  003192  0EFF               	movlw	255
  7700  003194  22DA               	addwfc	fsr2h,f,c
  7701  003196  06DE               	decf	postinc2,f,c
  7702  003198  0E00               	movlw	0
  7703  00319A  5ADD               	subwfb	postdec2,f,c
  7704                           
  7705                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  7706                           ;stkvar	_w @ sp[(-20)+16]
  7707  00319C  50E1               	movf	fsr1l,w,c
  7708  00319E  0FFC               	addlw	-4
  7709  0031A0  6ED9               	movwf	fsr2l,c
  7710  0031A2  50E2               	movf	fsr1h,w,c
  7711  0031A4  6EDA               	movwf	fsr2h,c
  7712  0031A6  0EFF               	movlw	255
  7713  0031A8  22DA               	addwfc	fsr2h,f,c
  7714  0031AA  06DE               	decf	postinc2,f,c
  7715  0031AC  0E00               	movlw	0
  7716  0031AE  5ADD               	subwfb	postdec2,f,c
  7717                           
  7718                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  7719  0031B0  0E04               	movlw	4
  7720  0031B2  6E48               	movwf	btemp+11,c
  7721                           
  7722                           ;stkvar	_n @ sp[(-20)+4]
  7723  0031B4  50E1               	movf	fsr1l,w,c
  7724  0031B6  0FF0               	addlw	-16
  7725  0031B8  6ED9               	movwf	fsr2l,c
  7726  0031BA  50E2               	movf	fsr1h,w,c
  7727  0031BC  6EDA               	movwf	fsr2h,c
  7728  0031BE  0EFF               	movlw	255
  7729  0031C0  22DA               	addwfc	fsr2h,f,c
  7730  0031C2  2848               	incf	btemp+11,w,c
  7731  0031C4  52DE               	movf	postinc2,f,c
  7732  0031C6  D00F               	goto	u4400
  7733  0031C8                     u4405:
  7734  0031C8  52DE               	movf	postinc2,f,c
  7735  0031CA  52DE               	movf	postinc2,f,c
  7736  0031CC  52DE               	movf	postinc2,f,c
  7737  0031CE  52DE               	movf	postinc2,f,c
  7738  0031D0  52DE               	movf	postinc2,f,c
  7739  0031D2  52DE               	movf	postinc2,f,c
  7740  0031D4  90D8               	bcf	status,0,c
  7741  0031D6  32DD               	rrcf	postdec2,f,c
  7742  0031D8  32DD               	rrcf	postdec2,f,c
  7743  0031DA  32DD               	rrcf	postdec2,f,c
  7744  0031DC  32DD               	rrcf	postdec2,f,c
  7745  0031DE  32DD               	rrcf	postdec2,f,c
  7746  0031E0  32DD               	rrcf	postdec2,f,c
  7747  0031E2  32DD               	rrcf	postdec2,f,c
  7748  0031E4  32DE               	rrcf	postinc2,f,c
  7749  0031E6                     u4400:
  7750  0031E6  2EE8               	decfsz	wreg,f,c
  7751  0031E8  D7EF               	goto	u4405
  7752  0031EA                     l7250:
  7753                           
  7754                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7755                           ;stkvar	_i @ sp[(-20)+14]
  7756  0031EA  0EFB               	movlw	-5
  7757  0031EC  BEE3               	btfsc	plusw1,7,c
  7758  0031EE  D03A               	goto	u4450
  7759  0031F0  0EFB               	movlw	-5
  7760  0031F2  50E3               	movf	plusw1,w,c
  7761  0031F4  E108               	bnz	u4410
  7762  0031F6  0EFA               	movlw	-6
  7763  0031F8  006F FF8C  F03D    	movff	plusw1,btemp
  7764  0031FE  0E02               	movlw	2
  7765  003200  5E3D               	subwf	btemp,f,c
  7766  003202  A0D8               	btfss	status,0,c
  7767  003204  D02F               	goto	u4450
  7768  003206                     u4410:
  7769                           
  7770                           ;stkvar	_n @ sp[(-20)+4]
  7771  003206  0EF0               	movlw	-16
  7772  003208  50E3               	movf	plusw1,w,c
  7773  00320A  E115               	bnz	u4421
  7774  00320C  0EF1               	movlw	-15
  7775  00320E  50E3               	movf	plusw1,w,c
  7776  003210  E112               	bnz	u4421
  7777  003212  0EF2               	movlw	-14
  7778  003214  50E3               	movf	plusw1,w,c
  7779  003216  E10F               	bnz	u4421
  7780  003218  0EF3               	movlw	-13
  7781  00321A  50E3               	movf	plusw1,w,c
  7782  00321C  E10C               	bnz	u4421
  7783  00321E  0EF4               	movlw	-12
  7784  003220  50E3               	movf	plusw1,w,c
  7785  003222  E109               	bnz	u4421
  7786  003224  0EF5               	movlw	-11
  7787  003226  50E3               	movf	plusw1,w,c
  7788  003228  E106               	bnz	u4421
  7789  00322A  0EF6               	movlw	-10
  7790  00322C  50E3               	movf	plusw1,w,c
  7791  00322E  E103               	bnz	u4421
  7792  003230  0EF7               	movlw	-9
  7793  003232  50E3               	movf	plusw1,w,c
  7794  003234  A4D8               	btfss	status,2,c
  7795  003236                     u4421:
  7796  003236  D6F1               	goto	l7218
  7797                           
  7798                           ;stkvar	_p @ sp[(-20)+18]
  7799  003238  0EFF               	movlw	-1
  7800  00323A  BEE3               	btfsc	plusw1,7,c
  7801  00323C  D007               	goto	u4430
  7802  00323E  0EFF               	movlw	-1
  7803  003240  50E3               	movf	plusw1,w,c
  7804  003242  E103               	bnz	u4431
  7805  003244  0EFE               	movlw	-2
  7806  003246  04E3               	decf	plusw1,w,c
  7807  003248  B0D8               	btfsc	status,0,c
  7808  00324A                     u4431:
  7809  00324A  D6E7               	goto	l7218
  7810  00324C                     u4430:
  7811                           
  7812                           ;stkvar	_w @ sp[(-20)+16]
  7813  00324C  0EFD               	movlw	-3
  7814  00324E  BEE3               	btfsc	plusw1,7,c
  7815  003250  D009               	goto	u4450
  7816  003252  0EFD               	movlw	-3
  7817  003254  50E3               	movf	plusw1,w,c
  7818  003256  E104               	bnz	u4440
  7819  003258  0EFC               	movlw	-4
  7820  00325A  04E3               	decf	plusw1,w,c
  7821  00325C  A0D8               	btfss	status,0,c
  7822  00325E  D002               	goto	u4450
  7823  003260                     u4440:
  7824  003260  B228               	btfsc	_flags,1,c
  7825  003262  D6DB               	goto	l7218
  7826  003264                     u4450:
  7827                           
  7828                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  7829  003264  A828               	btfss	_flags,4,c
  7830  003266  D02A               	goto	l7266
  7831                           
  7832                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  7833                           ;stkvar	_i @ sp[(-20)+14]
  7834  003268  50E1               	movf	fsr1l,w,c
  7835  00326A  0FFA               	addlw	-6
  7836  00326C  6ED9               	movwf	fsr2l,c
  7837  00326E  50E2               	movf	fsr1h,w,c
  7838  003270  6EDA               	movwf	fsr2h,c
  7839  003272  0EFF               	movlw	255
  7840  003274  22DA               	addwfc	fsr2h,f,c
  7841  003276  06DE               	decf	postinc2,f,c
  7842  003278  0E00               	movlw	0
  7843  00327A  5ADD               	subwfb	postdec2,f,c
  7844                           
  7845                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  7846                           ;stkvar	_x @ sp[(-20)+-11]
  7847                           ;stkvar	_i @ sp[(-20)+14]
  7848  00327C  0EFA               	movlw	-6
  7849  00327E  006F FF8C  F048    	movff	plusw1,btemp+11
  7850  003284  5048               	movf	btemp+11,w,c
  7851  003286  0FD9               	addlw	low _dbuf
  7852  003288  6ED9               	movwf	fsr2l,c
  7853  00328A  6ADA               	clrf	fsr2h,c
  7854  00328C  0EE1               	movlw	-31
  7855  00328E  006F FF8F FFDF     	movff	plusw1,indf2
  7856                           
  7857                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  7858                           ;stkvar	_i @ sp[(-20)+14]
  7859  003294  50E1               	movf	fsr1l,w,c
  7860  003296  0FFA               	addlw	-6
  7861  003298  6ED9               	movwf	fsr2l,c
  7862  00329A  50E2               	movf	fsr1h,w,c
  7863  00329C  6EDA               	movwf	fsr2h,c
  7864  00329E  0EFF               	movlw	255
  7865  0032A0  22DA               	addwfc	fsr2h,f,c
  7866  0032A2  06DE               	decf	postinc2,f,c
  7867  0032A4  0E00               	movlw	0
  7868  0032A6  5ADD               	subwfb	postdec2,f,c
  7869                           
  7870                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  7871                           ;stkvar	_i @ sp[(-20)+14]
  7872  0032A8  0EFA               	movlw	-6
  7873  0032AA  006F FF8C  F048    	movff	plusw1,btemp+11
  7874  0032B0  5048               	movf	btemp+11,w,c
  7875  0032B2  0FD9               	addlw	low _dbuf
  7876  0032B4  6ED9               	movwf	fsr2l,c
  7877  0032B6  6ADA               	clrf	fsr2h,c
  7878  0032B8  0E30               	movlw	48
  7879  0032BA  6EDF               	movwf	indf2,c
  7880  0032BC                     l7266:
  7881                           
  7882                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  7883                           ;stkvar	_w @ sp[(-20)+16]
  7884  0032BC  0EFC               	movlw	-4
  7885  0032BE  006F FF8F FFE6     	movff	plusw1,postinc1
  7886  0032C4  006F FF8F FFE6     	movff	plusw1,postinc1
  7887                           
  7888                           ;stkvar	_i @ sp[(-22)+14]
  7889  0032CA  0EF8               	movlw	-8
  7890  0032CC  006F FF8C  F048    	movff	plusw1,btemp+11
  7891  0032D2  5048               	movf	btemp+11,w,c
  7892  0032D4  0FD9               	addlw	low _dbuf
  7893  0032D6  6EE6               	movwf	postinc1,c
  7894                           
  7895                           ;stkvar	_fp @ sp[(-23)+-2]
  7896  0032D8  0EE7               	movlw	-25
  7897  0032DA  006F FF8F FFE6     	movff	plusw1,postinc1
  7898  0032E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7899  0032E6  ECF1  F023         	call	_pad	;wreg free
  7900                           
  7901                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  7902  0032EA  0EE1               	movlw	225
  7903  0032EC  26E1               	addwf	fsr1l,f,c
  7904  0032EE  0EFF               	movlw	255
  7905  0032F0  22E2               	addwfc	fsr1h,f,c
  7906  0032F2  0012               	return		;funcret
  7907  0032F4                     __end_of_xtoa:
  7908                           	opt callstack 0
  7909                           
  7910 ;; *************** function _toupper *****************
  7911 ;; Defined at:
  7912 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  7913 ;; Parameters:    Size  Location     Type
  7914 ;;  c               2  [STACK] int 
  7915 ;; Auto vars:     Size  Location     Type
  7916 ;;		None
  7917 ;; Return value:  Size  Location     Type
  7918 ;;                  2  [STACK] int 
  7919 ;; Registers used:
  7920 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  7921 ;; Tracked objects:
  7922 ;;		On entry : 0/0
  7923 ;;		On exit  : 0/0
  7924 ;;		Unchanged: 0/0
  7925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7930 ;;Total ram usage:        0 bytes
  7931 ;; Hardware stack levels used:    1
  7932 ;; Hardware stack levels required when called:    4
  7933 ;; This function calls:
  7934 ;;		_islower
  7935 ;; This function is called by:
  7936 ;;		_xtoa
  7937 ;; This function uses a reentrant model
  7938 ;;
  7939                           
  7940                           	psect	text35
  7941  004FE0                     __ptext35:
  7942                           	opt callstack 0
  7943  004FE0                     _toupper:
  7944                           	opt callstack 0
  7945                           
  7946                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7947  004FE0  52E6               	movf	postinc1,f,c
  7948  004FE2  52E6               	movf	postinc1,f,c
  7949                           
  7950                           ;stkvar	_c @ sp[(-2)+-2]
  7951                           
  7952                           ;incstack = 0
  7953  004FE4  0EFC               	movlw	-4
  7954  004FE6  50E3               	movf	plusw1,w,c
  7955  004FE8  0F9F               	addlw	159
  7956  004FEA  6E47               	movwf	btemp+10,c
  7957  004FEC  0EFD               	movlw	-3
  7958  004FEE  006F FF8C  F048    	movff	plusw1,btemp+11
  7959  004FF4  0EFF               	movlw	255
  7960  004FF6  2248               	addwfc	btemp+11,f,c
  7961  004FF8  5048               	movf	btemp+11,w,c
  7962  004FFA  E106               	bnz	u2210
  7963  004FFC  0E1A               	movlw	26
  7964  004FFE  5C47               	subwf	btemp+10,w,c
  7965  005000  B0D8               	btfsc	status,0,c
  7966  005002  D002               	goto	u2210
  7967  005004  0E01               	movlw	1
  7968  005006  D001               	goto	u2220
  7969  005008                     u2210:
  7970  005008  0E00               	movlw	0
  7971  00500A                     u2220:
  7972  00500A  6E47               	movwf	btemp+10,c
  7973  00500C  6A48               	clrf	btemp+11,c
  7974                           
  7975                           ;stkvar	_toupper$4365 @ sp[(-2)+0]
  7976  00500E  0EFE               	movlw	-2
  7977  005010  0060  F11F  FFE3   	movff	btemp+10,plusw1
  7978  005016  0EFF               	movlw	-1
  7979  005018  0060  F123  FFE3   	movff	btemp+11,plusw1
  7980                           
  7981                           ;stkvar	_toupper$4365 @ sp[(-2)+0]
  7982  00501E  0EFE               	movlw	-2
  7983  005020  006F FF8C  F03D    	movff	plusw1,btemp
  7984  005026  0EFF               	movlw	-1
  7985  005028  50E3               	movf	plusw1,w,c
  7986  00502A  103D               	iorwf	btemp,w,c
  7987  00502C  B4D8               	btfsc	status,2,c
  7988  00502E  D00D               	goto	l4956
  7989                           
  7990                           ;stkvar	_c @ sp[(-2)+-2]
  7991  005030  0EFC               	movlw	-4
  7992  005032  006F FF8C  F03D    	movff	plusw1,btemp
  7993  005038  0EFD               	movlw	-3
  7994  00503A  006F FF8C  F03E    	movff	plusw1,btemp+1
  7995  005040  0E5F               	movlw	95
  7996  005042  163D               	andwf	btemp,f,c
  7997  005044  0E00               	movlw	0
  7998  005046  163E               	andwf	btemp+1,f,c
  7999  005048  D008               	goto	l2579
  8000  00504A                     l4956:
  8001                           
  8002                           ;stkvar	_c @ sp[(-2)+-2]
  8003  00504A  0EFC               	movlw	-4
  8004  00504C  006F FF8C  F03D    	movff	plusw1,btemp
  8005  005052  0EFD               	movlw	-3
  8006  005054  006F FF8C  F03E    	movff	plusw1,btemp+1
  8007  00505A                     l2579:
  8008                           
  8009                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8010  00505A  52E5               	movf	postdec1,f,c
  8011  00505C  52E5               	movf	postdec1,f,c
  8012  00505E  52E5               	movf	postdec1,f,c
  8013  005060  52E5               	movf	postdec1,f,c
  8014  005062  0012               	return		;funcret
  8015  005064                     __end_of_toupper:
  8016                           	opt callstack 0
  8017                           
  8018 ;; *************** function _islower *****************
  8019 ;; Defined at:
  8020 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  8021 ;; Parameters:    Size  Location     Type
  8022 ;;  c               2  [STACK] int 
  8023 ;; Auto vars:     Size  Location     Type
  8024 ;;		None
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  2  [STACK] int 
  8027 ;; Registers used:
  8028 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8038 ;;Total ram usage:        0 bytes
  8039 ;; Hardware stack levels used:    1
  8040 ;; Hardware stack levels required when called:    3
  8041 ;; This function calls:
  8042 ;;		Nothing
  8043 ;; This function is called by:
  8044 ;;		_toupper
  8045 ;; This function uses a reentrant model
  8046 ;;
  8047                           
  8048                           	psect	text36
  8049  005872                     __ptext36:
  8050                           	opt callstack 0
  8051  005872                     _islower:
  8052                           	opt callstack 22
  8053                           
  8054                           ;stkvar	_c @ sp[(0)+-2]
  8055                           
  8056                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8057                           ;incstack = 0
  8058  005872  0EFE               	movlw	-2
  8059  005874  50E3               	movf	plusw1,w,c
  8060  005876  0F9F               	addlw	159
  8061  005878  6E47               	movwf	btemp+10,c
  8062  00587A  0EFF               	movlw	-1
  8063  00587C  006F FF8C  F048    	movff	plusw1,btemp+11
  8064  005882  0EFF               	movlw	255
  8065  005884  2248               	addwfc	btemp+11,f,c
  8066  005886  5048               	movf	btemp+11,w,c
  8067  005888  E106               	bnz	u2100
  8068  00588A  0E1A               	movlw	26
  8069  00588C  5C47               	subwf	btemp+10,w,c
  8070  00588E  B0D8               	btfsc	status,0,c
  8071  005890  D002               	goto	u2100
  8072  005892  0E01               	movlw	1
  8073  005894  D001               	goto	u2110
  8074  005896                     u2100:
  8075  005896  0E00               	movlw	0
  8076  005898                     u2110:
  8077  005898  6E3D               	movwf	btemp,c
  8078  00589A  6A3E               	clrf	btemp+1,c
  8079                           
  8080                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8081  00589C  52E5               	movf	postdec1,f,c
  8082  00589E  52E5               	movf	postdec1,f,c
  8083  0058A0  0012               	return		;funcret
  8084  0058A2                     __end_of_islower:
  8085                           	opt callstack 0
  8086                           
  8087 ;; *************** function _isupper *****************
  8088 ;; Defined at:
  8089 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  8090 ;; Parameters:    Size  Location     Type
  8091 ;;  c               2  [STACK] int 
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;		None
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  2  [STACK] int 
  8096 ;; Registers used:
  8097 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8107 ;;Total ram usage:        0 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; Hardware stack levels required when called:    3
  8110 ;; This function calls:
  8111 ;;		Nothing
  8112 ;; This function is called by:
  8113 ;;		_xtoa
  8114 ;; This function uses a reentrant model
  8115 ;;
  8116                           
  8117                           	psect	text37
  8118  0058A2                     __ptext37:
  8119                           	opt callstack 0
  8120  0058A2                     _isupper:
  8121                           	opt callstack 23
  8122                           
  8123                           ;stkvar	_c @ sp[(0)+-2]
  8124                           
  8125                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8126                           ;incstack = 0
  8127  0058A2  0EFE               	movlw	-2
  8128  0058A4  50E3               	movf	plusw1,w,c
  8129  0058A6  0FBF               	addlw	191
  8130  0058A8  6E47               	movwf	btemp+10,c
  8131  0058AA  0EFF               	movlw	-1
  8132  0058AC  006F FF8C  F048    	movff	plusw1,btemp+11
  8133  0058B2  0EFF               	movlw	255
  8134  0058B4  2248               	addwfc	btemp+11,f,c
  8135  0058B6  5048               	movf	btemp+11,w,c
  8136  0058B8  E106               	bnz	u2170
  8137  0058BA  0E1A               	movlw	26
  8138  0058BC  5C47               	subwf	btemp+10,w,c
  8139  0058BE  B0D8               	btfsc	status,0,c
  8140  0058C0  D002               	goto	u2170
  8141  0058C2  0E01               	movlw	1
  8142  0058C4  D001               	goto	u2180
  8143  0058C6                     u2170:
  8144  0058C6  0E00               	movlw	0
  8145  0058C8                     u2180:
  8146  0058C8  6E3D               	movwf	btemp,c
  8147  0058CA  6A3E               	clrf	btemp+1,c
  8148                           
  8149                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8150  0058CC  52E5               	movf	postdec1,f,c
  8151  0058CE  52E5               	movf	postdec1,f,c
  8152  0058D0  0012               	return		;funcret
  8153  0058D2                     __end_of_isupper:
  8154                           	opt callstack 0
  8155                           
  8156 ;; *************** function _isalpha *****************
  8157 ;; Defined at:
  8158 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;  c               2  [STACK] int 
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;		None
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  2  [STACK] int 
  8165 ;; Registers used:
  8166 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8176 ;;Total ram usage:        0 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; Hardware stack levels required when called:    3
  8179 ;; This function calls:
  8180 ;;		Nothing
  8181 ;; This function is called by:
  8182 ;;		_xtoa
  8183 ;; This function uses a reentrant model
  8184 ;;
  8185                           
  8186                           	psect	text38
  8187  0056B4                     __ptext38:
  8188                           	opt callstack 0
  8189  0056B4                     _isalpha:
  8190                           	opt callstack 23
  8191                           
  8192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8193                           ;incstack = 0
  8194  0056B4  0E9F               	movlw	159
  8195  0056B6  6E47               	movwf	btemp+10,c
  8196  0056B8  0EFF               	movlw	255
  8197  0056BA  6E48               	movwf	btemp+11,c
  8198                           
  8199                           ;stkvar	_c @ sp[(0)+-2]
  8200  0056BC  0EFE               	movlw	-2
  8201  0056BE  006F FF8C  F045    	movff	plusw1,btemp+8
  8202  0056C4  0EFF               	movlw	-1
  8203  0056C6  006F FF8C  F046    	movff	plusw1,btemp+9
  8204  0056CC  0E20               	movlw	32
  8205  0056CE  1245               	iorwf	btemp+8,f,c
  8206  0056D0  0E00               	movlw	0
  8207  0056D2  1246               	iorwf	btemp+9,f,c
  8208  0056D4  5047               	movf	btemp+10,w,c
  8209  0056D6  2645               	addwf	btemp+8,f,c
  8210  0056D8  5048               	movf	btemp+11,w,c
  8211  0056DA  2246               	addwfc	btemp+9,f,c
  8212  0056DC  5046               	movf	btemp+9,w,c
  8213  0056DE  E106               	bnz	u2190
  8214  0056E0  0E1A               	movlw	26
  8215  0056E2  5C45               	subwf	btemp+8,w,c
  8216  0056E4  B0D8               	btfsc	status,0,c
  8217  0056E6  D002               	goto	u2190
  8218  0056E8  0E01               	movlw	1
  8219  0056EA  D001               	goto	u2200
  8220  0056EC                     u2190:
  8221  0056EC  0E00               	movlw	0
  8222  0056EE                     u2200:
  8223  0056EE  6E3D               	movwf	btemp,c
  8224  0056F0  6A3E               	clrf	btemp+1,c
  8225                           
  8226                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  8227  0056F2  52E5               	movf	postdec1,f,c
  8228  0056F4  52E5               	movf	postdec1,f,c
  8229  0056F6  0012               	return		;funcret
  8230  0056F8                     __end_of_isalpha:
  8231                           	opt callstack 0
  8232                           
  8233 ;; *************** function _stoa *****************
  8234 ;; Defined at:
  8235 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8236 ;; Parameters:    Size  Location     Type
  8237 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8238 ;;		 -> f(5), NULL(0), 
  8239 ;;  s               2  [STACK] PTR unsigned char 
  8240 ;;		 -> ?_printf(2), ?_sprintf(2), V(80), 
  8241 ;; Auto vars:     Size  Location     Type
  8242 ;;  nuls            7  [STACK] unsigned char [7]
  8243 ;;  l               2  [STACK] int 
  8244 ;;  p               2  [STACK] int 
  8245 ;;  cp              2  [STACK] PTR unsigned char 
  8246 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), V(80), 
  8247 ;;  w               2  [STACK] int 
  8248 ;;  i               2  [STACK] int 
  8249 ;; Return value:  Size  Location     Type
  8250 ;;                  2  [STACK] int 
  8251 ;; Registers used:
  8252 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
  8253 ;; Tracked objects:
  8254 ;;		On entry : 0/1
  8255 ;;		On exit  : 0/0
  8256 ;;		Unchanged: 0/0
  8257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8262 ;;Total ram usage:        0 bytes
  8263 ;; Hardware stack levels used:    1
  8264 ;; Hardware stack levels required when called:    6
  8265 ;; This function calls:
  8266 ;;		_fputc
  8267 ;;		_strlen
  8268 ;; This function is called by:
  8269 ;;		_vfpfcnvrt
  8270 ;; This function uses a reentrant model
  8271 ;;
  8272                           
  8273                           	psect	text39
  8274  0035E0                     __ptext39:
  8275                           	opt callstack 0
  8276  0035E0                     _stoa:
  8277                           	opt callstack 0
  8278                           
  8279                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8280  0035E0  0E11               	movlw	17
  8281  0035E2  26E1               	addwf	fsr1l,f,c
  8282  0035E4  0E00               	movlw	0
  8283  0035E6  22E2               	addwfc	fsr1h,f,c
  8284                           
  8285                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  8286                           
  8287                           ;incstack = 0
  8288  0035E8  EE20  F0F9         	lfsr	2,stoa@F1144
  8289                           
  8290                           ;stkvar	_nuls @ sp[(-17)+0]
  8291  0035EC  0E07               	movlw	7
  8292  0035EE  6E3D               	movwf	btemp,c
  8293  0035F0  0EEF               	movlw	-17
  8294  0035F2                     us420999:
  8295  0035F2  006F FF7B FFE3     	movff	postinc2,plusw1
  8296  0035F8  28E8               	incf	wreg,w,c
  8297  0035FA  2E3D               	decfsz	btemp,f,c
  8298  0035FC  D7FA               	bra	us420999
  8299                           
  8300                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  8301                           ;stkvar	_s @ sp[(-17)+-4]
  8302  0035FE  0EEB               	movlw	-21
  8303  003600  006F FF8C  F047    	movff	plusw1,btemp+10
  8304  003606  0EEC               	movlw	-20
  8305  003608  006F FF8C  F048    	movff	plusw1,btemp+11
  8306                           
  8307                           ;stkvar	_cp @ sp[(-17)+11]
  8308  00360E  0EFB               	movlw	-5
  8309  003610  0060  F123  FFE3   	movff	btemp+11,plusw1
  8310  003616  0EFA               	movlw	-6
  8311  003618  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8312                           
  8313                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  8314                           ;stkvar	_cp @ sp[(-17)+11]
  8315  00361E  0EFA               	movlw	-6
  8316  003620  006F FF8C  F03D    	movff	plusw1,btemp
  8317  003626  0EFB               	movlw	-5
  8318  003628  50E3               	movf	plusw1,w,c
  8319  00362A  103D               	iorwf	btemp,w,c
  8320  00362C  A4D8               	btfss	status,2,c
  8321  00362E  D00E               	goto	l7154
  8322                           
  8323                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  8324                           ;stkvar	_nuls @ sp[(-17)+0]
  8325  003630  0EEF               	movlw	239
  8326  003632  24E1               	addwf	fsr1l,w,c
  8327  003634  6E47               	movwf	btemp+10,c
  8328  003636  0EFF               	movlw	255
  8329  003638  20E2               	addwfc	fsr1h,w,c
  8330  00363A  6E48               	movwf	btemp+11,c
  8331                           
  8332                           ;stkvar	_cp @ sp[(-17)+11]
  8333  00363C  0EFB               	movlw	-5
  8334  00363E  0060  F123  FFE3   	movff	btemp+11,plusw1
  8335  003644  0EFA               	movlw	-6
  8336  003646  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8337  00364C                     l7154:
  8338                           
  8339                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  8340                           ;stkvar	_cp @ sp[(-17)+11]
  8341  00364C  0EFA               	movlw	-6
  8342  00364E  006F FF8F FFE6     	movff	plusw1,postinc1
  8343  003654  006F FF8F FFE6     	movff	plusw1,postinc1
  8344  00365A  EC74  F028         	call	_strlen	;wreg free
  8345                           
  8346                           ;stkvar	_l @ sp[(-17)+7]
  8347  00365E  0EF6               	movlw	-10
  8348  003660  0060  F0F7  FFE3   	movff	btemp,plusw1
  8349  003666  0EF7               	movlw	-9
  8350  003668  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  8351                           
  8352                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  8353                           ;stkvar	_p @ sp[(-17)+9]
  8354  00366E  0EF8               	movlw	-8
  8355  003670  0060  F09B  FFE3   	movff	_prec,plusw1
  8356  003676  0EF9               	movlw	-7
  8357  003678  0060  F09F  FFE3   	movff	_prec+1,plusw1
  8358                           
  8359                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  8360                           ;stkvar	_p @ sp[(-17)+9]
  8361  00367E  0EF9               	movlw	-7
  8362  003680  BEE3               	btfsc	plusw1,7,c
  8363  003682  D023               	goto	l1696
  8364                           
  8365                           ;stkvar	_l @ sp[(-17)+7]
  8366                           ;stkvar	_p @ sp[(-17)+9]
  8367  003684  50E1               	movf	fsr1l,w,c
  8368  003686  0FF8               	addlw	-8
  8369  003688  6ED9               	movwf	fsr2l,c
  8370  00368A  50E2               	movf	fsr1h,w,c
  8371  00368C  6EDA               	movwf	fsr2h,c
  8372  00368E  0EFF               	movlw	255
  8373  003690  22DA               	addwfc	fsr2h,f,c
  8374  003692  0EF6               	movlw	-10
  8375  003694  50E3               	movf	plusw1,w,c
  8376  003696  5CDE               	subwf	postinc2,w,c
  8377  003698  50DE               	movf	postinc2,w,c
  8378  00369A  0A80               	xorlw	128
  8379  00369C  6E3D               	movwf	btemp,c
  8380  00369E  0EF7               	movlw	-9
  8381  0036A0  50E3               	movf	plusw1,w,c
  8382  0036A2  0A80               	xorlw	128
  8383  0036A4  583D               	subwfb	btemp,w,c
  8384  0036A6  B0D8               	btfsc	status,0,c
  8385  0036A8  D010               	goto	l1696
  8386                           
  8387                           ;stkvar	_p @ sp[(-17)+9]
  8388                           ;stkvar	_l @ sp[(-17)+7]
  8389  0036AA  0EF8               	movlw	-8
  8390  0036AC  006F FF8C  F03D    	movff	plusw1,btemp
  8391  0036B2  0EF6               	movlw	-10
  8392  0036B4  0060  F0F7  FFE3   	movff	btemp,plusw1
  8393  0036BA  0EF9               	movlw	-7
  8394  0036BC  006F FF8C  F03D    	movff	plusw1,btemp
  8395  0036C2  0EF7               	movlw	-9
  8396  0036C4  0060  F0F7  FFE3   	movff	btemp,plusw1
  8397  0036CA                     l1696:
  8398                           
  8399                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  8400                           ;stkvar	_l @ sp[(-17)+7]
  8401                           ;stkvar	_p @ sp[(-17)+9]
  8402  0036CA  0EF6               	movlw	-10
  8403  0036CC  006F FF8C  F03D    	movff	plusw1,btemp
  8404  0036D2  0EF8               	movlw	-8
  8405  0036D4  0060  F0F7  FFE3   	movff	btemp,plusw1
  8406  0036DA  0EF7               	movlw	-9
  8407  0036DC  006F FF8C  F03D    	movff	plusw1,btemp
  8408  0036E2  0EF9               	movlw	-7
  8409  0036E4  0060  F0F7  FFE3   	movff	btemp,plusw1
  8410                           
  8411                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  8412                           ;stkvar	_w @ sp[(-17)+13]
  8413  0036EA  0EFC               	movlw	-4
  8414  0036EC  0060  F093  FFE3   	movff	_width,plusw1
  8415  0036F2  0EFD               	movlw	-3
  8416  0036F4  0060  F097  FFE3   	movff	_width+1,plusw1
  8417                           
  8418                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  8419  0036FA  A028               	btfss	_flags,0,c
  8420  0036FC  D01F               	goto	l7174
  8421  0036FE  D031               	goto	u4250
  8422  003700                     l7170:
  8423                           
  8424                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  8425                           ;stkvar	_fp @ sp[(-17)+-2]
  8426  003700  0EED               	movlw	-19
  8427  003702  006F FF8F FFE6     	movff	plusw1,postinc1
  8428  003708  006F FF8F FFE6     	movff	plusw1,postinc1
  8429  00370E  0E20               	movlw	32
  8430  003710  6EE6               	movwf	postinc1,c
  8431  003712  0E00               	movlw	0
  8432  003714  6EE6               	movwf	postinc1,c
  8433  003716  EC6B  F023         	call	_fputc	;wreg free
  8434                           
  8435                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  8436                           ;stkvar	_l @ sp[(-17)+7]
  8437  00371A  0EF6               	movlw	-10
  8438  00371C  50E3               	movf	plusw1,w,c
  8439  00371E  0F01               	addlw	1
  8440  003720  6E3D               	movwf	btemp,c
  8441  003722  0EF6               	movlw	-10
  8442  003724  0060  F0F7  FFE3   	movff	btemp,plusw1
  8443  00372A  6A3D               	clrf	btemp,c
  8444  00372C  0EF7               	movlw	-9
  8445  00372E  50E3               	movf	plusw1,w,c
  8446  003730  203D               	addwfc	btemp,w,c
  8447  003732  6E3D               	movwf	btemp,c
  8448  003734  0EF7               	movlw	-9
  8449  003736  0060  F0F7  FFE3   	movff	btemp,plusw1
  8450  00373C                     l7174:
  8451                           
  8452                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  8453                           ;stkvar	_w @ sp[(-17)+13]
  8454                           ;stkvar	_l @ sp[(-17)+7]
  8455  00373C  50E1               	movf	fsr1l,w,c
  8456  00373E  0FF6               	addlw	-10
  8457  003740  6ED9               	movwf	fsr2l,c
  8458  003742  50E2               	movf	fsr1h,w,c
  8459  003744  6EDA               	movwf	fsr2h,c
  8460  003746  0EFF               	movlw	255
  8461  003748  22DA               	addwfc	fsr2h,f,c
  8462  00374A  0EFC               	movlw	-4
  8463  00374C  50E3               	movf	plusw1,w,c
  8464  00374E  5CDE               	subwf	postinc2,w,c
  8465  003750  50DE               	movf	postinc2,w,c
  8466  003752  0A80               	xorlw	128
  8467  003754  6E3D               	movwf	btemp,c
  8468  003756  0EFD               	movlw	-3
  8469  003758  50E3               	movf	plusw1,w,c
  8470  00375A  0A80               	xorlw	128
  8471  00375C  583D               	subwfb	btemp,w,c
  8472  00375E  A0D8               	btfss	status,0,c
  8473  003760  D7CF               	goto	l7170
  8474  003762                     u4250:
  8475                           
  8476                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  8477                           ;stkvar	_i @ sp[(-17)+15]
  8478  003762  0EFE               	movlw	-2
  8479  003764  6AE3               	clrf	plusw1,c
  8480  003766  0EFF               	movlw	-1
  8481  003768  6AE3               	clrf	plusw1,c
  8482                           
  8483                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8484  00376A  D037               	goto	l7184
  8485  00376C                     l7178:
  8486                           
  8487                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  8488                           ;stkvar	_fp @ sp[(-17)+-2]
  8489  00376C  0EED               	movlw	-19
  8490  00376E  006F FF8F FFE6     	movff	plusw1,postinc1
  8491  003774  006F FF8F FFE6     	movff	plusw1,postinc1
  8492                           
  8493                           ;stkvar	_cp @ sp[(-19)+11]
  8494  00377A  0EF8               	movlw	-8
  8495  00377C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8496  003782  0EF9               	movlw	-7
  8497  003784  006F FF8F FFDA     	movff	plusw1,fsr2h
  8498  00378A  50DF               	movf	indf2,w,c
  8499  00378C  6EE6               	movwf	postinc1,c
  8500  00378E  0E00               	movlw	0
  8501  003790  6EE6               	movwf	postinc1,c
  8502  003792  EC6B  F023         	call	_fputc	;wreg free
  8503                           
  8504                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  8505                           ;stkvar	_cp @ sp[(-17)+11]
  8506  003796  0EFA               	movlw	-6
  8507  003798  50E3               	movf	plusw1,w,c
  8508  00379A  0F01               	addlw	1
  8509  00379C  6E3D               	movwf	btemp,c
  8510  00379E  0EFA               	movlw	-6
  8511  0037A0  0060  F0F7  FFE3   	movff	btemp,plusw1
  8512  0037A6  6A3D               	clrf	btemp,c
  8513  0037A8  0EFB               	movlw	-5
  8514  0037AA  50E3               	movf	plusw1,w,c
  8515  0037AC  203D               	addwfc	btemp,w,c
  8516  0037AE  6E3D               	movwf	btemp,c
  8517  0037B0  0EFB               	movlw	-5
  8518  0037B2  0060  F0F7  FFE3   	movff	btemp,plusw1
  8519                           
  8520                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  8521                           ;stkvar	_i @ sp[(-17)+15]
  8522  0037B8  0EFE               	movlw	-2
  8523  0037BA  50E3               	movf	plusw1,w,c
  8524  0037BC  0F01               	addlw	1
  8525  0037BE  6E3D               	movwf	btemp,c
  8526  0037C0  0EFE               	movlw	-2
  8527  0037C2  0060  F0F7  FFE3   	movff	btemp,plusw1
  8528  0037C8  6A3D               	clrf	btemp,c
  8529  0037CA  0EFF               	movlw	-1
  8530  0037CC  50E3               	movf	plusw1,w,c
  8531  0037CE  203D               	addwfc	btemp,w,c
  8532  0037D0  6E3D               	movwf	btemp,c
  8533  0037D2  0EFF               	movlw	-1
  8534  0037D4  0060  F0F7  FFE3   	movff	btemp,plusw1
  8535  0037DA                     l7184:
  8536                           
  8537                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  8538                           ;stkvar	_p @ sp[(-17)+9]
  8539                           ;stkvar	_i @ sp[(-17)+15]
  8540  0037DA  50E1               	movf	fsr1l,w,c
  8541  0037DC  0FFE               	addlw	-2
  8542  0037DE  6ED9               	movwf	fsr2l,c
  8543  0037E0  50E2               	movf	fsr1h,w,c
  8544  0037E2  6EDA               	movwf	fsr2h,c
  8545  0037E4  0EFF               	movlw	255
  8546  0037E6  22DA               	addwfc	fsr2h,f,c
  8547  0037E8  0EF8               	movlw	-8
  8548  0037EA  50E3               	movf	plusw1,w,c
  8549  0037EC  5CDE               	subwf	postinc2,w,c
  8550  0037EE  50DE               	movf	postinc2,w,c
  8551  0037F0  0A80               	xorlw	128
  8552  0037F2  6E3D               	movwf	btemp,c
  8553  0037F4  0EF9               	movlw	-7
  8554  0037F6  50E3               	movf	plusw1,w,c
  8555  0037F8  0A80               	xorlw	128
  8556  0037FA  583D               	subwfb	btemp,w,c
  8557  0037FC  A0D8               	btfss	status,0,c
  8558  0037FE  D7B6               	goto	l7178
  8559                           
  8560                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  8561  003800  B028               	btfsc	_flags,0,c
  8562  003802  D01F               	goto	l7192
  8563  003804  D031               	goto	u4280
  8564  003806                     l7188:
  8565                           
  8566                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  8567                           ;stkvar	_fp @ sp[(-17)+-2]
  8568  003806  0EED               	movlw	-19
  8569  003808  006F FF8F FFE6     	movff	plusw1,postinc1
  8570  00380E  006F FF8F FFE6     	movff	plusw1,postinc1
  8571  003814  0E20               	movlw	32
  8572  003816  6EE6               	movwf	postinc1,c
  8573  003818  0E00               	movlw	0
  8574  00381A  6EE6               	movwf	postinc1,c
  8575  00381C  EC6B  F023         	call	_fputc	;wreg free
  8576                           
  8577                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  8578                           ;stkvar	_l @ sp[(-17)+7]
  8579  003820  0EF6               	movlw	-10
  8580  003822  50E3               	movf	plusw1,w,c
  8581  003824  0F01               	addlw	1
  8582  003826  6E3D               	movwf	btemp,c
  8583  003828  0EF6               	movlw	-10
  8584  00382A  0060  F0F7  FFE3   	movff	btemp,plusw1
  8585  003830  6A3D               	clrf	btemp,c
  8586  003832  0EF7               	movlw	-9
  8587  003834  50E3               	movf	plusw1,w,c
  8588  003836  203D               	addwfc	btemp,w,c
  8589  003838  6E3D               	movwf	btemp,c
  8590  00383A  0EF7               	movlw	-9
  8591  00383C  0060  F0F7  FFE3   	movff	btemp,plusw1
  8592  003842                     l7192:
  8593                           
  8594                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  8595                           ;stkvar	_w @ sp[(-17)+13]
  8596                           ;stkvar	_l @ sp[(-17)+7]
  8597  003842  50E1               	movf	fsr1l,w,c
  8598  003844  0FF6               	addlw	-10
  8599  003846  6ED9               	movwf	fsr2l,c
  8600  003848  50E2               	movf	fsr1h,w,c
  8601  00384A  6EDA               	movwf	fsr2h,c
  8602  00384C  0EFF               	movlw	255
  8603  00384E  22DA               	addwfc	fsr2h,f,c
  8604  003850  0EFC               	movlw	-4
  8605  003852  50E3               	movf	plusw1,w,c
  8606  003854  5CDE               	subwf	postinc2,w,c
  8607  003856  50DE               	movf	postinc2,w,c
  8608  003858  0A80               	xorlw	128
  8609  00385A  6E3D               	movwf	btemp,c
  8610  00385C  0EFD               	movlw	-3
  8611  00385E  50E3               	movf	plusw1,w,c
  8612  003860  0A80               	xorlw	128
  8613  003862  583D               	subwfb	btemp,w,c
  8614  003864  A0D8               	btfss	status,0,c
  8615  003866  D7CF               	goto	l7188
  8616  003868                     u4280:
  8617                           
  8618                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  8619                           ;stkvar	_l @ sp[(-17)+7]
  8620  003868  0EF6               	movlw	-10
  8621  00386A  006F FF8C  F03D    	movff	plusw1,btemp
  8622  003870  0EF7               	movlw	-9
  8623  003872  006F FF8C  F03E    	movff	plusw1,btemp+1
  8624                           
  8625                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  8626  003878  0EEB               	movlw	235
  8627  00387A  26E1               	addwf	fsr1l,f,c
  8628  00387C  0EFF               	movlw	255
  8629  00387E  22E2               	addwfc	fsr1h,f,c
  8630  003880  0012               	return		;funcret
  8631  003882                     __end_of_stoa:
  8632                           	opt callstack 0
  8633                           
  8634 ;; *************** function _dtoa *****************
  8635 ;; Defined at:
  8636 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  8637 ;; Parameters:    Size  Location     Type
  8638 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8639 ;;		 -> f(5), NULL(0), 
  8640 ;;  d               8  [STACK] long long 
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;  n               8  [STACK] long long 
  8643 ;;  i               2  [STACK] int 
  8644 ;;  s               2  [STACK] int 
  8645 ;;  w               2  [STACK] int 
  8646 ;;  p               2  [STACK] int 
  8647 ;; Return value:  Size  Location     Type
  8648 ;;                  2  [STACK] int 
  8649 ;; Registers used:
  8650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, prodl
  8651 ;; Tracked objects:
  8652 ;;		On entry : 0/1
  8653 ;;		On exit  : 0/0
  8654 ;;		Unchanged: 0/0
  8655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8660 ;;Total ram usage:        0 bytes
  8661 ;; Hardware stack levels used:    1
  8662 ;; Hardware stack levels required when called:    8
  8663 ;; This function calls:
  8664 ;;		___aodiv
  8665 ;;		___aomod
  8666 ;;		_abs
  8667 ;;		_pad
  8668 ;; This function is called by:
  8669 ;;		_vfpfcnvrt
  8670 ;; This function uses a reentrant model
  8671 ;;
  8672                           
  8673                           	psect	text40
  8674  00278E                     __ptext40:
  8675                           	opt callstack 0
  8676  00278E                     _dtoa:
  8677                           	opt callstack 0
  8678                           
  8679                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8680  00278E  0E12               	movlw	18
  8681  002790  26E1               	addwf	fsr1l,f,c
  8682  002792  0E00               	movlw	0
  8683  002794  22E2               	addwfc	fsr1h,f,c
  8684                           
  8685                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  8686                           ;stkvar	_d @ sp[(-18)+-10]
  8687                           
  8688                           ;incstack = 0
  8689  002796  0EE4               	movlw	228
  8690  002798  24E1               	addwf	fsr1l,w,c
  8691  00279A  6ED9               	movwf	fsr2l,c
  8692  00279C  0EFF               	movlw	255
  8693  00279E  20E2               	addwfc	fsr1h,w,c
  8694  0027A0  6EDA               	movwf	fsr2h,c
  8695                           
  8696                           ;stkvar	_n @ sp[(-18)+2]
  8697  0027A2  0E08               	movlw	8
  8698  0027A4  6E3D               	movwf	btemp,c
  8699  0027A6  0EF0               	movlw	-16
  8700  0027A8                     us403999:
  8701  0027A8  006F FF7B FFE3     	movff	postinc2,plusw1
  8702  0027AE  28E8               	incf	wreg,w,c
  8703  0027B0  2E3D               	decfsz	btemp,f,c
  8704  0027B2  D7FA               	bra	us403999
  8705                           
  8706                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  8707                           ;stkvar	_n @ sp[(-18)+2]
  8708  0027B4  0EF7               	movlw	-9
  8709  0027B6  AEE3               	btfss	plusw1,7,c
  8710  0027B8  D002               	goto	u4040
  8711  0027BA  0E01               	movlw	1
  8712  0027BC  D001               	goto	u4050
  8713  0027BE                     u4040:
  8714  0027BE  0E00               	movlw	0
  8715  0027C0                     u4050:
  8716  0027C0  6E47               	movwf	btemp+10,c
  8717  0027C2  6A48               	clrf	btemp+11,c
  8718                           
  8719                           ;stkvar	_s @ sp[(-18)+12]
  8720  0027C4  0EFA               	movlw	-6
  8721  0027C6  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8722  0027CC  0EFB               	movlw	-5
  8723  0027CE  0060  F123  FFE3   	movff	btemp+11,plusw1
  8724                           
  8725                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  8726                           ;stkvar	_s @ sp[(-18)+12]
  8727  0027D4  0EFA               	movlw	-6
  8728  0027D6  006F FF8C  F03D    	movff	plusw1,btemp
  8729  0027DC  0EFB               	movlw	-5
  8730  0027DE  50E3               	movf	plusw1,w,c
  8731  0027E0  103D               	iorwf	btemp,w,c
  8732  0027E2  B4D8               	btfsc	status,2,c
  8733  0027E4  D025               	goto	u4070
  8734                           
  8735                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  8736                           ;stkvar	_n @ sp[(-18)+2]
  8737                           ;stkvar	_n @ sp[(-18)+2]
  8738  0027E6  0EF0               	movlw	-16
  8739  0027E8  6CE3               	negf	plusw1,c
  8740  0027EA  0EF1               	movlw	-15
  8741  0027EC  1EE3               	comf	plusw1,f,c
  8742  0027EE  0EF2               	movlw	-14
  8743  0027F0  1EE3               	comf	plusw1,f,c
  8744  0027F2  0EF3               	movlw	-13
  8745  0027F4  1EE3               	comf	plusw1,f,c
  8746  0027F6  0EF4               	movlw	-12
  8747  0027F8  1EE3               	comf	plusw1,f,c
  8748  0027FA  0EF5               	movlw	-11
  8749  0027FC  1EE3               	comf	plusw1,f,c
  8750  0027FE  0EF6               	movlw	-10
  8751  002800  1EE3               	comf	plusw1,f,c
  8752  002802  0EF7               	movlw	-9
  8753  002804  1EE3               	comf	plusw1,f,c
  8754  002806  E314               	bnc	u4070
  8755  002808  0EF1               	movlw	-15
  8756  00280A  2AE3               	incf	plusw1,f,c
  8757  00280C  E311               	bnc	u4070
  8758  00280E  0EF2               	movlw	-14
  8759  002810  2AE3               	incf	plusw1,f,c
  8760  002812  E30E               	bnc	u4070
  8761  002814  0EF3               	movlw	-13
  8762  002816  2AE3               	incf	plusw1,f,c
  8763  002818  E30B               	bnc	u4070
  8764  00281A  0EF4               	movlw	-12
  8765  00281C  2AE3               	incf	plusw1,f,c
  8766  00281E  E308               	bnc	u4070
  8767  002820  0EF5               	movlw	-11
  8768  002822  2AE3               	incf	plusw1,f,c
  8769  002824  E305               	bnc	u4070
  8770  002826  0EF6               	movlw	-10
  8771  002828  2AE3               	incf	plusw1,f,c
  8772  00282A  E302               	bnc	u4070
  8773  00282C  0EF7               	movlw	-9
  8774  00282E  2AE3               	incf	plusw1,f,c
  8775  002830                     u4070:
  8776                           
  8777                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  8778  002830  AE27               	btfss	_prec+1,7,c
  8779                           
  8780                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  8781  002832  9228               	bcf	_flags,1,c
  8782                           
  8783                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  8784  002834  BE27               	btfsc	_prec+1,7,c
  8785  002836  D005               	goto	u4090
  8786  002838  5027               	movf	_prec+1,w,c
  8787  00283A  E110               	bnz	l7096
  8788  00283C  0426               	decf	_prec,w,c
  8789  00283E  B0D8               	btfsc	status,0,c
  8790  002840  D00D               	goto	l7096
  8791  002842                     u4090:
  8792  002842  0E01               	movlw	1
  8793  002844  6E47               	movwf	btemp+10,c
  8794  002846  0E00               	movlw	0
  8795  002848  6E48               	movwf	btemp+11,c
  8796                           
  8797                           ;stkvar	_p @ sp[(-18)+16]
  8798  00284A  0EFE               	movlw	-2
  8799  00284C  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8800  002852  0EFF               	movlw	-1
  8801  002854  0060  F123  FFE3   	movff	btemp+11,plusw1
  8802  00285A  D008               	goto	l1669
  8803  00285C                     l7096:
  8804                           
  8805                           ;stkvar	_p @ sp[(-18)+16]
  8806  00285C  0EFE               	movlw	-2
  8807  00285E  0060  F09B  FFE3   	movff	_prec,plusw1
  8808  002864  0EFF               	movlw	-1
  8809  002866  0060  F09F  FFE3   	movff	_prec+1,plusw1
  8810  00286C                     l1669:
  8811                           
  8812                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  8813                           ;stkvar	_w @ sp[(-18)+14]
  8814  00286C  0EFC               	movlw	-4
  8815  00286E  0060  F093  FFE3   	movff	_width,plusw1
  8816  002874  0EFD               	movlw	-3
  8817  002876  0060  F097  FFE3   	movff	_width+1,plusw1
  8818                           
  8819                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  8820                           ;stkvar	_s @ sp[(-18)+12]
  8821  00287C  0EFA               	movlw	-6
  8822  00287E  006F FF8C  F03D    	movff	plusw1,btemp
  8823  002884  0EFB               	movlw	-5
  8824  002886  50E3               	movf	plusw1,w,c
  8825  002888  103D               	iorwf	btemp,w,c
  8826  00288A  A4D8               	btfss	status,2,c
  8827  00288C  D002               	goto	u4110
  8828  00288E  A428               	btfss	_flags,2,c
  8829  002890  D00A               	goto	l7104
  8830  002892                     u4110:
  8831                           
  8832                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  8833                           ;stkvar	_w @ sp[(-18)+14]
  8834  002892  50E1               	movf	fsr1l,w,c
  8835  002894  0FFC               	addlw	-4
  8836  002896  6ED9               	movwf	fsr2l,c
  8837  002898  50E2               	movf	fsr1h,w,c
  8838  00289A  6EDA               	movwf	fsr2h,c
  8839  00289C  0EFF               	movlw	255
  8840  00289E  22DA               	addwfc	fsr2h,f,c
  8841  0028A0  06DE               	decf	postinc2,f,c
  8842  0028A2  0E00               	movlw	0
  8843  0028A4  5ADD               	subwfb	postdec2,f,c
  8844  0028A6                     l7104:
  8845                           
  8846                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  8847  0028A6  0E1F               	movlw	31
  8848  0028A8  6E47               	movwf	btemp+10,c
  8849  0028AA  0E00               	movlw	0
  8850  0028AC  6E48               	movwf	btemp+11,c
  8851                           
  8852                           ;stkvar	_i @ sp[(-18)+10]
  8853  0028AE  0EF8               	movlw	-8
  8854  0028B0  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8855  0028B6  0EF9               	movlw	-7
  8856  0028B8  0060  F123  FFE3   	movff	btemp+11,plusw1
  8857                           
  8858                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  8859  0028BE  0100               	movlb	0	; () banked
  8860  0028C0  6BF8               	clrf	(_dbuf+31)& (0+255),b
  8861                           
  8862                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8863  0028C2  D103               	goto	l7118
  8864  0028C4                     l7108:
  8865                           
  8866                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  8867                           ;stkvar	_i @ sp[(-18)+10]
  8868  0028C4  50E1               	movf	fsr1l,w,c
  8869  0028C6  0FF8               	addlw	-8
  8870  0028C8  6ED9               	movwf	fsr2l,c
  8871  0028CA  50E2               	movf	fsr1h,w,c
  8872  0028CC  6EDA               	movwf	fsr2h,c
  8873  0028CE  0EFF               	movlw	255
  8874  0028D0  22DA               	addwfc	fsr2h,f,c
  8875  0028D2  06DE               	decf	postinc2,f,c
  8876  0028D4  0E00               	movlw	0
  8877  0028D6  5ADD               	subwfb	postdec2,f,c
  8878                           
  8879                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  8880  0028D8  0E0A               	movlw	10
  8881  0028DA  6EE6               	movwf	postinc1,c
  8882  0028DC  0E00               	movlw	0
  8883  0028DE  6EE6               	movwf	postinc1,c
  8884  0028E0  0E00               	movlw	0
  8885  0028E2  6EE6               	movwf	postinc1,c
  8886  0028E4  0E00               	movlw	0
  8887  0028E6  6EE6               	movwf	postinc1,c
  8888  0028E8  0E00               	movlw	0
  8889  0028EA  6EE6               	movwf	postinc1,c
  8890  0028EC  0E00               	movlw	0
  8891  0028EE  6EE6               	movwf	postinc1,c
  8892  0028F0  0E00               	movlw	0
  8893  0028F2  6EE6               	movwf	postinc1,c
  8894  0028F4  0E00               	movlw	0
  8895  0028F6  6EE6               	movwf	postinc1,c
  8896                           
  8897                           ;stkvar	_n @ sp[(-26)+2]
  8898  0028F8  50E1               	movf	fsr1l,w,c
  8899  0028FA  0FE8               	addlw	-24
  8900  0028FC  6ED9               	movwf	fsr2l,c
  8901  0028FE  50E2               	movf	fsr1h,w,c
  8902  002900  6EDA               	movwf	fsr2h,c
  8903  002902  0EFF               	movlw	255
  8904  002904  22DA               	addwfc	fsr2h,f,c
  8905  002906  006F FF7B FFE6     	movff	postinc2,postinc1
  8906  00290C  006F FF7B FFE6     	movff	postinc2,postinc1
  8907  002912  006F FF7B FFE6     	movff	postinc2,postinc1
  8908  002918  006F FF7B FFE6     	movff	postinc2,postinc1
  8909  00291E  006F FF7B FFE6     	movff	postinc2,postinc1
  8910  002924  006F FF7B FFE6     	movff	postinc2,postinc1
  8911  00292A  006F FF7B FFE6     	movff	postinc2,postinc1
  8912  002930  006F FF7B FFE6     	movff	postinc2,postinc1
  8913  002936  ECC0  F01E         	call	___aomod	;wreg free
  8914  00293A  52E5               	movf	postdec1,f,c
  8915  00293C  006F FF9C  F054    	movff	indf1,btemp+23
  8916  002942  52E5               	movf	postdec1,f,c
  8917  002944  006F FF9C  F053    	movff	indf1,btemp+22
  8918  00294A  52E5               	movf	postdec1,f,c
  8919  00294C  006F FF9C  F052    	movff	indf1,btemp+21
  8920  002952  52E5               	movf	postdec1,f,c
  8921  002954  006F FF9C  F051    	movff	indf1,btemp+20
  8922  00295A  52E5               	movf	postdec1,f,c
  8923  00295C  006F FF9C  F050    	movff	indf1,btemp+19
  8924  002962  52E5               	movf	postdec1,f,c
  8925  002964  006F FF9C  F04F    	movff	indf1,btemp+18
  8926  00296A  52E5               	movf	postdec1,f,c
  8927  00296C  006F FF9C  F04E    	movff	indf1,btemp+17
  8928  002972  52E5               	movf	postdec1,f,c
  8929  002974  006F FF9C  F04D    	movff	indf1,btemp+16
  8930  00297A  0EF8               	movlw	248
  8931  00297C  26E1               	addwf	fsr1l,f,c
  8932  00297E  0EFF               	movlw	255
  8933  002980  22E2               	addwfc	fsr1h,f,c
  8934  002982  0060  F134  F047   	movff	btemp+16,btemp+10
  8935  002988  0060  F138  F048   	movff	btemp+17,btemp+11
  8936  00298E  0060  F11F  FFE6   	movff	btemp+10,postinc1
  8937  002994  0060  F123  FFE6   	movff	btemp+11,postinc1
  8938  00299A  ECF1  F02A         	call	_abs	;wreg free
  8939  00299E  0E30               	movlw	48
  8940  0029A0  263D               	addwf	btemp,f,c
  8941                           
  8942                           ;stkvar	_i @ sp[(-18)+10]
  8943  0029A2  0EF8               	movlw	-8
  8944  0029A4  006F FF8C  F048    	movff	plusw1,btemp+11
  8945  0029AA  5048               	movf	btemp+11,w,c
  8946  0029AC  0FD9               	addlw	low _dbuf
  8947  0029AE  6ED9               	movwf	fsr2l,c
  8948  0029B0  6ADA               	clrf	fsr2h,c
  8949  0029B2  0060  F0F7  FFDF   	movff	btemp,indf2
  8950                           
  8951                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  8952                           ;stkvar	_p @ sp[(-18)+16]
  8953  0029B8  50E1               	movf	fsr1l,w,c
  8954  0029BA  0FFE               	addlw	-2
  8955  0029BC  6ED9               	movwf	fsr2l,c
  8956  0029BE  50E2               	movf	fsr1h,w,c
  8957  0029C0  6EDA               	movwf	fsr2h,c
  8958  0029C2  0EFF               	movlw	255
  8959  0029C4  22DA               	addwfc	fsr2h,f,c
  8960  0029C6  06DE               	decf	postinc2,f,c
  8961  0029C8  0E00               	movlw	0
  8962  0029CA  5ADD               	subwfb	postdec2,f,c
  8963                           
  8964                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  8965                           ;stkvar	_w @ sp[(-18)+14]
  8966  0029CC  50E1               	movf	fsr1l,w,c
  8967  0029CE  0FFC               	addlw	-4
  8968  0029D0  6ED9               	movwf	fsr2l,c
  8969  0029D2  50E2               	movf	fsr1h,w,c
  8970  0029D4  6EDA               	movwf	fsr2h,c
  8971  0029D6  0EFF               	movlw	255
  8972  0029D8  22DA               	addwfc	fsr2h,f,c
  8973  0029DA  06DE               	decf	postinc2,f,c
  8974  0029DC  0E00               	movlw	0
  8975  0029DE  5ADD               	subwfb	postdec2,f,c
  8976                           
  8977                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  8978  0029E0  0E0A               	movlw	10
  8979  0029E2  6EE6               	movwf	postinc1,c
  8980  0029E4  0E00               	movlw	0
  8981  0029E6  6EE6               	movwf	postinc1,c
  8982  0029E8  0E00               	movlw	0
  8983  0029EA  6EE6               	movwf	postinc1,c
  8984  0029EC  0E00               	movlw	0
  8985  0029EE  6EE6               	movwf	postinc1,c
  8986  0029F0  0E00               	movlw	0
  8987  0029F2  6EE6               	movwf	postinc1,c
  8988  0029F4  0E00               	movlw	0
  8989  0029F6  6EE6               	movwf	postinc1,c
  8990  0029F8  0E00               	movlw	0
  8991  0029FA  6EE6               	movwf	postinc1,c
  8992  0029FC  0E00               	movlw	0
  8993  0029FE  6EE6               	movwf	postinc1,c
  8994                           
  8995                           ;stkvar	_n @ sp[(-26)+2]
  8996  002A00  50E1               	movf	fsr1l,w,c
  8997  002A02  0FE8               	addlw	-24
  8998  002A04  6ED9               	movwf	fsr2l,c
  8999  002A06  50E2               	movf	fsr1h,w,c
  9000  002A08  6EDA               	movwf	fsr2h,c
  9001  002A0A  0EFF               	movlw	255
  9002  002A0C  22DA               	addwfc	fsr2h,f,c
  9003  002A0E  006F FF7B FFE6     	movff	postinc2,postinc1
  9004  002A14  006F FF7B FFE6     	movff	postinc2,postinc1
  9005  002A1A  006F FF7B FFE6     	movff	postinc2,postinc1
  9006  002A20  006F FF7B FFE6     	movff	postinc2,postinc1
  9007  002A26  006F FF7B FFE6     	movff	postinc2,postinc1
  9008  002A2C  006F FF7B FFE6     	movff	postinc2,postinc1
  9009  002A32  006F FF7B FFE6     	movff	postinc2,postinc1
  9010  002A38  006F FF7B FFE6     	movff	postinc2,postinc1
  9011  002A3E  EC41  F01C         	call	___aodiv	;wreg free
  9012  002A42  52E5               	movf	postdec1,f,c
  9013  002A44  006F FF9C  F054    	movff	indf1,btemp+23
  9014  002A4A  52E5               	movf	postdec1,f,c
  9015  002A4C  006F FF9C  F053    	movff	indf1,btemp+22
  9016  002A52  52E5               	movf	postdec1,f,c
  9017  002A54  006F FF9C  F052    	movff	indf1,btemp+21
  9018  002A5A  52E5               	movf	postdec1,f,c
  9019  002A5C  006F FF9C  F051    	movff	indf1,btemp+20
  9020  002A62  52E5               	movf	postdec1,f,c
  9021  002A64  006F FF9C  F050    	movff	indf1,btemp+19
  9022  002A6A  52E5               	movf	postdec1,f,c
  9023  002A6C  006F FF9C  F04F    	movff	indf1,btemp+18
  9024  002A72  52E5               	movf	postdec1,f,c
  9025  002A74  006F FF9C  F04E    	movff	indf1,btemp+17
  9026  002A7A  52E5               	movf	postdec1,f,c
  9027  002A7C  006F FF9C  F04D    	movff	indf1,btemp+16
  9028  002A82  0EF8               	movlw	248
  9029  002A84  26E1               	addwf	fsr1l,f,c
  9030  002A86  0EFF               	movlw	255
  9031  002A88  22E2               	addwfc	fsr1h,f,c
  9032                           
  9033                           ;stkvar	_n @ sp[(-18)+2]
  9034  002A8A  0EF0               	movlw	-16
  9035  002A8C  0060  F137  FFE3   	movff	btemp+16,plusw1
  9036  002A92  0EF1               	movlw	-15
  9037  002A94  0060  F13B  FFE3   	movff	btemp+17,plusw1
  9038  002A9A  0EF2               	movlw	-14
  9039  002A9C  0060  F13F  FFE3   	movff	btemp+18,plusw1
  9040  002AA2  0EF3               	movlw	-13
  9041  002AA4  0060  F143  FFE3   	movff	btemp+19,plusw1
  9042  002AAA  0EF4               	movlw	-12
  9043  002AAC  0060  F147  FFE3   	movff	btemp+20,plusw1
  9044  002AB2  0EF5               	movlw	-11
  9045  002AB4  0060  F14B  FFE3   	movff	btemp+21,plusw1
  9046  002ABA  0EF6               	movlw	-10
  9047  002ABC  0060  F14F  FFE3   	movff	btemp+22,plusw1
  9048  002AC2  0EF7               	movlw	-9
  9049  002AC4  0060  F153  FFE3   	movff	btemp+23,plusw1
  9050  002ACA                     l7118:
  9051                           
  9052                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9053                           ;stkvar	_i @ sp[(-18)+10]
  9054  002ACA  0EF9               	movlw	-7
  9055  002ACC  BEE3               	btfsc	plusw1,7,c
  9056  002ACE  D036               	goto	u4160
  9057  002AD0  0EF9               	movlw	-7
  9058  002AD2  50E3               	movf	plusw1,w,c
  9059  002AD4  E104               	bnz	u4120
  9060  002AD6  0EF8               	movlw	-8
  9061  002AD8  04E3               	decf	plusw1,w,c
  9062  002ADA  A0D8               	btfss	status,0,c
  9063  002ADC  D02F               	goto	u4160
  9064  002ADE                     u4120:
  9065                           
  9066                           ;stkvar	_n @ sp[(-18)+2]
  9067  002ADE  0EF0               	movlw	-16
  9068  002AE0  50E3               	movf	plusw1,w,c
  9069  002AE2  E115               	bnz	u4131
  9070  002AE4  0EF1               	movlw	-15
  9071  002AE6  50E3               	movf	plusw1,w,c
  9072  002AE8  E112               	bnz	u4131
  9073  002AEA  0EF2               	movlw	-14
  9074  002AEC  50E3               	movf	plusw1,w,c
  9075  002AEE  E10F               	bnz	u4131
  9076  002AF0  0EF3               	movlw	-13
  9077  002AF2  50E3               	movf	plusw1,w,c
  9078  002AF4  E10C               	bnz	u4131
  9079  002AF6  0EF4               	movlw	-12
  9080  002AF8  50E3               	movf	plusw1,w,c
  9081  002AFA  E109               	bnz	u4131
  9082  002AFC  0EF5               	movlw	-11
  9083  002AFE  50E3               	movf	plusw1,w,c
  9084  002B00  E106               	bnz	u4131
  9085  002B02  0EF6               	movlw	-10
  9086  002B04  50E3               	movf	plusw1,w,c
  9087  002B06  E103               	bnz	u4131
  9088  002B08  0EF7               	movlw	-9
  9089  002B0A  50E3               	movf	plusw1,w,c
  9090  002B0C  A4D8               	btfss	status,2,c
  9091  002B0E                     u4131:
  9092  002B0E  D6DA               	goto	l7108
  9093                           
  9094                           ;stkvar	_p @ sp[(-18)+16]
  9095  002B10  0EFF               	movlw	-1
  9096  002B12  BEE3               	btfsc	plusw1,7,c
  9097  002B14  D007               	goto	u4140
  9098  002B16  0EFF               	movlw	-1
  9099  002B18  50E3               	movf	plusw1,w,c
  9100  002B1A  E103               	bnz	u4141
  9101  002B1C  0EFE               	movlw	-2
  9102  002B1E  04E3               	decf	plusw1,w,c
  9103  002B20  B0D8               	btfsc	status,0,c
  9104  002B22                     u4141:
  9105  002B22  D6D0               	goto	l7108
  9106  002B24                     u4140:
  9107                           
  9108                           ;stkvar	_w @ sp[(-18)+14]
  9109  002B24  0EFD               	movlw	-3
  9110  002B26  BEE3               	btfsc	plusw1,7,c
  9111  002B28  D009               	goto	u4160
  9112  002B2A  0EFD               	movlw	-3
  9113  002B2C  50E3               	movf	plusw1,w,c
  9114  002B2E  E104               	bnz	u4150
  9115  002B30  0EFC               	movlw	-4
  9116  002B32  04E3               	decf	plusw1,w,c
  9117  002B34  A0D8               	btfss	status,0,c
  9118  002B36  D002               	goto	u4160
  9119  002B38                     u4150:
  9120  002B38  B228               	btfsc	_flags,1,c
  9121  002B3A  D6C4               	goto	l7108
  9122  002B3C                     u4160:
  9123                           
  9124                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  9125                           ;stkvar	_s @ sp[(-18)+12]
  9126  002B3C  0EFA               	movlw	-6
  9127  002B3E  006F FF8C  F03D    	movff	plusw1,btemp
  9128  002B44  0EFB               	movlw	-5
  9129  002B46  50E3               	movf	plusw1,w,c
  9130  002B48  103D               	iorwf	btemp,w,c
  9131  002B4A  A4D8               	btfss	status,2,c
  9132  002B4C  D002               	goto	u4180
  9133  002B4E  A428               	btfss	_flags,2,c
  9134  002B50  D02D               	goto	l7142
  9135  002B52                     u4180:
  9136                           
  9137                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  9138                           ;stkvar	_i @ sp[(-18)+10]
  9139  002B52  50E1               	movf	fsr1l,w,c
  9140  002B54  0FF8               	addlw	-8
  9141  002B56  6ED9               	movwf	fsr2l,c
  9142  002B58  50E2               	movf	fsr1h,w,c
  9143  002B5A  6EDA               	movwf	fsr2h,c
  9144  002B5C  0EFF               	movlw	255
  9145  002B5E  22DA               	addwfc	fsr2h,f,c
  9146  002B60  06DE               	decf	postinc2,f,c
  9147  002B62  0E00               	movlw	0
  9148  002B64  5ADD               	subwfb	postdec2,f,c
  9149                           
  9150                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  9151                           ;stkvar	_s @ sp[(-18)+12]
  9152  002B66  0EFA               	movlw	-6
  9153  002B68  006F FF8C  F03D    	movff	plusw1,btemp
  9154  002B6E  0EFB               	movlw	-5
  9155  002B70  50E3               	movf	plusw1,w,c
  9156  002B72  103D               	iorwf	btemp,w,c
  9157  002B74  A4D8               	btfss	status,2,c
  9158  002B76  D002               	goto	l7138
  9159  002B78  0E2B               	movlw	43
  9160  002B7A  D001               	goto	L21
  9161  002B7C                     l7138:
  9162  002B7C  0E2D               	movlw	45
  9163  002B7E                     L21:
  9164  002B7E  6E47               	movwf	btemp+10,c
  9165  002B80  0E00               	movlw	0
  9166  002B82  6E48               	movwf	btemp+11,c
  9167                           
  9168                           ;stkvar	_dtoa$3755 @ sp[(-18)+0]
  9169  002B84  0EEE               	movlw	-18
  9170  002B86  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9171  002B8C  0EEF               	movlw	-17
  9172  002B8E  0060  F123  FFE3   	movff	btemp+11,plusw1
  9173                           
  9174                           ;stkvar	_dtoa$3755 @ sp[(-18)+0]
  9175                           ;stkvar	_i @ sp[(-18)+10]
  9176  002B94  0EF8               	movlw	-8
  9177  002B96  006F FF8C  F048    	movff	plusw1,btemp+11
  9178  002B9C  5048               	movf	btemp+11,w,c
  9179  002B9E  0FD9               	addlw	low _dbuf
  9180  002BA0  6ED9               	movwf	fsr2l,c
  9181  002BA2  6ADA               	clrf	fsr2h,c
  9182  002BA4  0EEE               	movlw	-18
  9183  002BA6  006F FF8F FFDF     	movff	plusw1,indf2
  9184  002BAC                     l7142:
  9185                           
  9186                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  9187                           ;stkvar	_w @ sp[(-18)+14]
  9188  002BAC  0EFC               	movlw	-4
  9189  002BAE  006F FF8F FFE6     	movff	plusw1,postinc1
  9190  002BB4  006F FF8F FFE6     	movff	plusw1,postinc1
  9191                           
  9192                           ;stkvar	_i @ sp[(-20)+10]
  9193  002BBA  0EF6               	movlw	-10
  9194  002BBC  006F FF8C  F048    	movff	plusw1,btemp+11
  9195  002BC2  5048               	movf	btemp+11,w,c
  9196  002BC4  0FD9               	addlw	low _dbuf
  9197  002BC6  6EE6               	movwf	postinc1,c
  9198                           
  9199                           ;stkvar	_fp @ sp[(-21)+-2]
  9200  002BC8  0EE9               	movlw	-23
  9201  002BCA  006F FF8F FFE6     	movff	plusw1,postinc1
  9202  002BD0  006F FF8F FFE6     	movff	plusw1,postinc1
  9203  002BD6  ECF1  F023         	call	_pad	;wreg free
  9204                           
  9205                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  9206  002BDA  0EE4               	movlw	228
  9207  002BDC  26E1               	addwf	fsr1l,f,c
  9208  002BDE  0EFF               	movlw	255
  9209  002BE0  22E2               	addwfc	fsr1h,f,c
  9210  002BE2  0012               	return		;funcret
  9211  002BE4                     __end_of_dtoa:
  9212                           	opt callstack 0
  9213                           
  9214 ;; *************** function _abs *****************
  9215 ;; Defined at:
  9216 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;  a               2  [STACK] int 
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;		None
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  2  [STACK] int 
  9223 ;; Registers used:
  9224 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9234 ;;Total ram usage:        0 bytes
  9235 ;; Hardware stack levels used:    1
  9236 ;; Hardware stack levels required when called:    3
  9237 ;; This function calls:
  9238 ;;		Nothing
  9239 ;; This function is called by:
  9240 ;;		_dtoa
  9241 ;; This function uses a reentrant model
  9242 ;;
  9243                           
  9244                           	psect	text41
  9245  0055E2                     __ptext41:
  9246                           	opt callstack 0
  9247  0055E2                     _abs:
  9248                           	opt callstack 23
  9249                           
  9250                           ;stkvar	_a @ sp[(0)+-2]
  9251                           
  9252                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9253                           ;incstack = 0
  9254  0055E2  0EFF               	movlw	-1
  9255  0055E4  BEE3               	btfsc	plusw1,7,c
  9256  0055E6  D007               	goto	u2160
  9257  0055E8  0EFF               	movlw	-1
  9258  0055EA  50E3               	movf	plusw1,w,c
  9259  0055EC  E112               	bnz	l4934
  9260  0055EE  0EFE               	movlw	-2
  9261  0055F0  04E3               	decf	plusw1,w,c
  9262  0055F2  B0D8               	btfsc	status,0,c
  9263  0055F4  D00E               	goto	l4934
  9264  0055F6                     u2160:
  9265                           
  9266                           ;stkvar	_a @ sp[(0)+-2]
  9267  0055F6  0EFE               	movlw	-2
  9268  0055F8  006F FF8C  F03D    	movff	plusw1,btemp
  9269  0055FE  1E3D               	comf	btemp,f,c
  9270  005600  0EFF               	movlw	-1
  9271  005602  006F FF8C  F03E    	movff	plusw1,btemp+1
  9272  005608  1E3E               	comf	btemp+1,f,c
  9273  00560A  2A3D               	incf	btemp,f,c
  9274  00560C  B4D8               	btfsc	status,2,c
  9275  00560E  2A3E               	incf	btemp+1,f,c
  9276  005610  D008               	goto	l2462
  9277  005612                     l4934:
  9278                           
  9279                           ;stkvar	_a @ sp[(0)+-2]
  9280  005612  0EFE               	movlw	-2
  9281  005614  006F FF8C  F03D    	movff	plusw1,btemp
  9282  00561A  0EFF               	movlw	-1
  9283  00561C  006F FF8C  F03E    	movff	plusw1,btemp+1
  9284  005622                     l2462:
  9285                           
  9286                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
  9287  005622  52E5               	movf	postdec1,f,c
  9288  005624  52E5               	movf	postdec1,f,c
  9289  005626  0012               	return		;funcret
  9290  005628                     __end_of_abs:
  9291                           	opt callstack 0
  9292                           
  9293 ;; *************** function ___aomod *****************
  9294 ;; Defined at:
  9295 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  9296 ;; Parameters:    Size  Location     Type
  9297 ;;  dividend        8  [STACK] long long 
  9298 ;;  divisor         8  [STACK] long long 
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;  sign            1  [STACK] unsigned char 
  9301 ;;  counter         1  [STACK] unsigned char 
  9302 ;; Return value:  Size  Location     Type
  9303 ;;                  8  [STACK] long long 
  9304 ;; Registers used:
  9305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9306 ;; Tracked objects:
  9307 ;;		On entry : 0/0
  9308 ;;		On exit  : 0/0
  9309 ;;		Unchanged: 0/0
  9310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9315 ;;Total ram usage:        0 bytes
  9316 ;; Hardware stack levels used:    1
  9317 ;; Hardware stack levels required when called:    3
  9318 ;; This function calls:
  9319 ;;		Nothing
  9320 ;; This function is called by:
  9321 ;;		_dtoa
  9322 ;; This function uses a reentrant model
  9323 ;;
  9324                           
  9325                           	psect	text42
  9326  003D80                     __ptext42:
  9327                           	opt callstack 0
  9328  003D80                     ___aomod:
  9329                           	opt callstack 0
  9330                           
  9331                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  9332  003D80  52E6               	movf	postinc1,f,c
  9333  003D82  52E6               	movf	postinc1,f,c
  9334                           
  9335                           ;stkvar	_sign @ sp[(-2)+0]
  9336                           
  9337                           ;incstack = 0
  9338  003D84  0EFE               	movlw	-2
  9339  003D86  6AE3               	clrf	plusw1,c
  9340                           
  9341                           ;stkvar	_dividend @ sp[(-2)+-8]
  9342  003D88  0EFD               	movlw	-3
  9343  003D8A  AEE3               	btfss	plusw1,7,c
  9344  003D8C  D028               	goto	l5016
  9345                           
  9346                           ;stkvar	_dividend @ sp[(-2)+-8]
  9347                           ;stkvar	_dividend @ sp[(-2)+-8]
  9348  003D8E  0EF6               	movlw	-10
  9349  003D90  6CE3               	negf	plusw1,c
  9350  003D92  0EF7               	movlw	-9
  9351  003D94  1EE3               	comf	plusw1,f,c
  9352  003D96  0EF8               	movlw	-8
  9353  003D98  1EE3               	comf	plusw1,f,c
  9354  003D9A  0EF9               	movlw	-7
  9355  003D9C  1EE3               	comf	plusw1,f,c
  9356  003D9E  0EFA               	movlw	-6
  9357  003DA0  1EE3               	comf	plusw1,f,c
  9358  003DA2  0EFB               	movlw	-5
  9359  003DA4  1EE3               	comf	plusw1,f,c
  9360  003DA6  0EFC               	movlw	-4
  9361  003DA8  1EE3               	comf	plusw1,f,c
  9362  003DAA  0EFD               	movlw	-3
  9363  003DAC  1EE3               	comf	plusw1,f,c
  9364  003DAE  E314               	bnc	u2390
  9365  003DB0  0EF7               	movlw	-9
  9366  003DB2  2AE3               	incf	plusw1,f,c
  9367  003DB4  E311               	bnc	u2390
  9368  003DB6  0EF8               	movlw	-8
  9369  003DB8  2AE3               	incf	plusw1,f,c
  9370  003DBA  E30E               	bnc	u2390
  9371  003DBC  0EF9               	movlw	-7
  9372  003DBE  2AE3               	incf	plusw1,f,c
  9373  003DC0  E30B               	bnc	u2390
  9374  003DC2  0EFA               	movlw	-6
  9375  003DC4  2AE3               	incf	plusw1,f,c
  9376  003DC6  E308               	bnc	u2390
  9377  003DC8  0EFB               	movlw	-5
  9378  003DCA  2AE3               	incf	plusw1,f,c
  9379  003DCC  E305               	bnc	u2390
  9380  003DCE  0EFC               	movlw	-4
  9381  003DD0  2AE3               	incf	plusw1,f,c
  9382  003DD2  E302               	bnc	u2390
  9383  003DD4  0EFD               	movlw	-3
  9384  003DD6  2AE3               	incf	plusw1,f,c
  9385  003DD8                     u2390:
  9386                           
  9387                           ;stkvar	_sign @ sp[(-2)+0]
  9388  003DD8  0EFE               	movlw	-2
  9389  003DDA  6AE3               	clrf	plusw1,c
  9390  003DDC  2AE3               	incf	plusw1,f,c
  9391  003DDE                     l5016:
  9392                           
  9393                           ;stkvar	_divisor @ sp[(-2)+-16]
  9394  003DDE  0EF5               	movlw	-11
  9395  003DE0  AEE3               	btfss	plusw1,7,c
  9396  003DE2  D025               	goto	u2410
  9397                           
  9398                           ;stkvar	_divisor @ sp[(-2)+-16]
  9399                           ;stkvar	_divisor @ sp[(-2)+-16]
  9400  003DE4  0EEE               	movlw	-18
  9401  003DE6  6CE3               	negf	plusw1,c
  9402  003DE8  0EEF               	movlw	-17
  9403  003DEA  1EE3               	comf	plusw1,f,c
  9404  003DEC  0EF0               	movlw	-16
  9405  003DEE  1EE3               	comf	plusw1,f,c
  9406  003DF0  0EF1               	movlw	-15
  9407  003DF2  1EE3               	comf	plusw1,f,c
  9408  003DF4  0EF2               	movlw	-14
  9409  003DF6  1EE3               	comf	plusw1,f,c
  9410  003DF8  0EF3               	movlw	-13
  9411  003DFA  1EE3               	comf	plusw1,f,c
  9412  003DFC  0EF4               	movlw	-12
  9413  003DFE  1EE3               	comf	plusw1,f,c
  9414  003E00  0EF5               	movlw	-11
  9415  003E02  1EE3               	comf	plusw1,f,c
  9416  003E04  E314               	bnc	u2410
  9417  003E06  0EEF               	movlw	-17
  9418  003E08  2AE3               	incf	plusw1,f,c
  9419  003E0A  E311               	bnc	u2410
  9420  003E0C  0EF0               	movlw	-16
  9421  003E0E  2AE3               	incf	plusw1,f,c
  9422  003E10  E30E               	bnc	u2410
  9423  003E12  0EF1               	movlw	-15
  9424  003E14  2AE3               	incf	plusw1,f,c
  9425  003E16  E30B               	bnc	u2410
  9426  003E18  0EF2               	movlw	-14
  9427  003E1A  2AE3               	incf	plusw1,f,c
  9428  003E1C  E308               	bnc	u2410
  9429  003E1E  0EF3               	movlw	-13
  9430  003E20  2AE3               	incf	plusw1,f,c
  9431  003E22  E305               	bnc	u2410
  9432  003E24  0EF4               	movlw	-12
  9433  003E26  2AE3               	incf	plusw1,f,c
  9434  003E28  E302               	bnc	u2410
  9435  003E2A  0EF5               	movlw	-11
  9436  003E2C  2AE3               	incf	plusw1,f,c
  9437  003E2E                     u2410:
  9438                           
  9439                           ;stkvar	_divisor @ sp[(-2)+-16]
  9440  003E2E  0EEE               	movlw	-18
  9441  003E30  50E3               	movf	plusw1,w,c
  9442  003E32  E116               	bnz	u2420
  9443  003E34  0EEF               	movlw	-17
  9444  003E36  50E3               	movf	plusw1,w,c
  9445  003E38  E113               	bnz	u2420
  9446  003E3A  0EF0               	movlw	-16
  9447  003E3C  50E3               	movf	plusw1,w,c
  9448  003E3E  E110               	bnz	u2420
  9449  003E40  0EF1               	movlw	-15
  9450  003E42  50E3               	movf	plusw1,w,c
  9451  003E44  E10D               	bnz	u2420
  9452  003E46  0EF2               	movlw	-14
  9453  003E48  50E3               	movf	plusw1,w,c
  9454  003E4A  E10A               	bnz	u2420
  9455  003E4C  0EF3               	movlw	-13
  9456  003E4E  50E3               	movf	plusw1,w,c
  9457  003E50  E107               	bnz	u2420
  9458  003E52  0EF4               	movlw	-12
  9459  003E54  50E3               	movf	plusw1,w,c
  9460  003E56  E104               	bnz	u2420
  9461  003E58  0EF5               	movlw	-11
  9462  003E5A  50E3               	movf	plusw1,w,c
  9463  003E5C  B4D8               	btfsc	status,2,c
  9464  003E5E  D075               	goto	u2450
  9465  003E60                     u2420:
  9466                           
  9467                           ;stkvar	_counter @ sp[(-2)+1]
  9468  003E60  0EFF               	movlw	-1
  9469  003E62  6AE3               	clrf	plusw1,c
  9470  003E64  D012               	goto	L22
  9471  003E66                     l5024:
  9472                           
  9473                           ;stkvar	_divisor @ sp[(-2)+-16]
  9474  003E66  90D8               	bcf	status,0,c
  9475  003E68  0EEE               	movlw	-18
  9476  003E6A  36E3               	rlcf	plusw1,f,c
  9477  003E6C  0EEF               	movlw	-17
  9478  003E6E  36E3               	rlcf	plusw1,f,c
  9479  003E70  0EF0               	movlw	-16
  9480  003E72  36E3               	rlcf	plusw1,f,c
  9481  003E74  0EF1               	movlw	-15
  9482  003E76  36E3               	rlcf	plusw1,f,c
  9483  003E78  0EF2               	movlw	-14
  9484  003E7A  36E3               	rlcf	plusw1,f,c
  9485  003E7C  0EF3               	movlw	-13
  9486  003E7E  36E3               	rlcf	plusw1,f,c
  9487  003E80  0EF4               	movlw	-12
  9488  003E82  36E3               	rlcf	plusw1,f,c
  9489  003E84  0EF5               	movlw	-11
  9490  003E86  36E3               	rlcf	plusw1,f,c
  9491                           
  9492                           ;stkvar	_counter @ sp[(-2)+1]
  9493  003E88  0EFF               	movlw	-1
  9494  003E8A                     L22:
  9495  003E8A  2AE3               	incf	plusw1,f,c
  9496                           
  9497                           ;stkvar	_divisor @ sp[(-2)+-16]
  9498  003E8C  0EF5               	movlw	-11
  9499  003E8E  AEE3               	btfss	plusw1,7,c
  9500  003E90  D7EA               	goto	l5024
  9501  003E92                     u2430:
  9502                           
  9503                           ;stkvar	_divisor @ sp[(-2)+-16]
  9504                           ;stkvar	_dividend @ sp[(-2)+-8]
  9505  003E92  50E1               	movf	fsr1l,w,c
  9506  003E94  0FF6               	addlw	-10
  9507  003E96  6ED9               	movwf	fsr2l,c
  9508  003E98  50E2               	movf	fsr1h,w,c
  9509  003E9A  6EDA               	movwf	fsr2h,c
  9510  003E9C  0EFF               	movlw	255
  9511  003E9E  22DA               	addwfc	fsr2h,f,c
  9512  003EA0  0EEE               	movlw	-18
  9513  003EA2  50E3               	movf	plusw1,w,c
  9514  003EA4  5CDE               	subwf	postinc2,w,c
  9515  003EA6  0EEF               	movlw	-17
  9516  003EA8  50E3               	movf	plusw1,w,c
  9517  003EAA  58DE               	subwfb	postinc2,w,c
  9518  003EAC  0EF0               	movlw	-16
  9519  003EAE  50E3               	movf	plusw1,w,c
  9520  003EB0  58DE               	subwfb	postinc2,w,c
  9521  003EB2  0EF1               	movlw	-15
  9522  003EB4  50E3               	movf	plusw1,w,c
  9523  003EB6  58DE               	subwfb	postinc2,w,c
  9524  003EB8  0EF2               	movlw	-14
  9525  003EBA  50E3               	movf	plusw1,w,c
  9526  003EBC  58DE               	subwfb	postinc2,w,c
  9527  003EBE  0EF3               	movlw	-13
  9528  003EC0  50E3               	movf	plusw1,w,c
  9529  003EC2  58DE               	subwfb	postinc2,w,c
  9530  003EC4  0EF4               	movlw	-12
  9531  003EC6  50E3               	movf	plusw1,w,c
  9532  003EC8  58DE               	subwfb	postinc2,w,c
  9533  003ECA  0EF5               	movlw	-11
  9534  003ECC  50E3               	movf	plusw1,w,c
  9535  003ECE  58DE               	subwfb	postinc2,w,c
  9536  003ED0  A0D8               	btfss	status,0,c
  9537  003ED2  D01F               	goto	l5032
  9538                           
  9539                           ;stkvar	_divisor @ sp[(-2)+-16]
  9540                           ;stkvar	_dividend @ sp[(-2)+-8]
  9541  003ED4  50E1               	movf	fsr1l,w,c
  9542  003ED6  0FF6               	addlw	-10
  9543  003ED8  6ED9               	movwf	fsr2l,c
  9544  003EDA  50E2               	movf	fsr1h,w,c
  9545  003EDC  6EDA               	movwf	fsr2h,c
  9546  003EDE  0EFF               	movlw	255
  9547  003EE0  22DA               	addwfc	fsr2h,f,c
  9548  003EE2  0EEE               	movlw	-18
  9549  003EE4  50E3               	movf	plusw1,w,c
  9550  003EE6  5EDE               	subwf	postinc2,f,c
  9551  003EE8  0EEF               	movlw	-17
  9552  003EEA  50E3               	movf	plusw1,w,c
  9553  003EEC  5ADE               	subwfb	postinc2,f,c
  9554  003EEE  0EF0               	movlw	-16
  9555  003EF0  50E3               	movf	plusw1,w,c
  9556  003EF2  5ADE               	subwfb	postinc2,f,c
  9557  003EF4  0EF1               	movlw	-15
  9558  003EF6  50E3               	movf	plusw1,w,c
  9559  003EF8  5ADE               	subwfb	postinc2,f,c
  9560  003EFA  0EF2               	movlw	-14
  9561  003EFC  50E3               	movf	plusw1,w,c
  9562  003EFE  5ADE               	subwfb	postinc2,f,c
  9563  003F00  0EF3               	movlw	-13
  9564  003F02  50E3               	movf	plusw1,w,c
  9565  003F04  5ADE               	subwfb	postinc2,f,c
  9566  003F06  0EF4               	movlw	-12
  9567  003F08  50E3               	movf	plusw1,w,c
  9568  003F0A  5ADE               	subwfb	postinc2,f,c
  9569  003F0C  0EF5               	movlw	-11
  9570  003F0E  50E3               	movf	plusw1,w,c
  9571  003F10  5ADE               	subwfb	postinc2,f,c
  9572  003F12                     l5032:
  9573                           
  9574                           ;stkvar	_divisor @ sp[(-2)+-16]
  9575  003F12  90D8               	bcf	status,0,c
  9576  003F14  0EF5               	movlw	-11
  9577  003F16  32E3               	rrcf	plusw1,f,c
  9578  003F18  0EF4               	movlw	-12
  9579  003F1A  32E3               	rrcf	plusw1,f,c
  9580  003F1C  0EF3               	movlw	-13
  9581  003F1E  32E3               	rrcf	plusw1,f,c
  9582  003F20  0EF2               	movlw	-14
  9583  003F22  32E3               	rrcf	plusw1,f,c
  9584  003F24  0EF1               	movlw	-15
  9585  003F26  32E3               	rrcf	plusw1,f,c
  9586  003F28  0EF0               	movlw	-16
  9587  003F2A  32E3               	rrcf	plusw1,f,c
  9588  003F2C  0EEF               	movlw	-17
  9589  003F2E  32E3               	rrcf	plusw1,f,c
  9590  003F30  0EEE               	movlw	-18
  9591  003F32  32E3               	rrcf	plusw1,f,c
  9592                           
  9593                           ;stkvar	_counter @ sp[(-2)+1]
  9594  003F34  0EFF               	movlw	-1
  9595  003F36  50E3               	movf	plusw1,w,c
  9596  003F38  6E3D               	movwf	btemp,c
  9597  003F3A  0E01               	movlw	1
  9598  003F3C  5E3D               	subwf	btemp,f,c
  9599  003F3E  0EFF               	movlw	-1
  9600  003F40  0060  F0F7  FFE3   	movff	btemp,plusw1
  9601  003F46  A4D8               	btfss	status,2,c
  9602  003F48  D7A4               	goto	u2430
  9603  003F4A                     u2450:
  9604                           
  9605                           ;stkvar	_sign @ sp[(-2)+0]
  9606  003F4A  0EFE               	movlw	-2
  9607  003F4C  50E3               	movf	plusw1,w,c
  9608  003F4E  B4D8               	btfsc	status,2,c
  9609  003F50  D025               	goto	u2470
  9610                           
  9611                           ;stkvar	_dividend @ sp[(-2)+-8]
  9612                           ;stkvar	_dividend @ sp[(-2)+-8]
  9613  003F52  0EF6               	movlw	-10
  9614  003F54  6CE3               	negf	plusw1,c
  9615  003F56  0EF7               	movlw	-9
  9616  003F58  1EE3               	comf	plusw1,f,c
  9617  003F5A  0EF8               	movlw	-8
  9618  003F5C  1EE3               	comf	plusw1,f,c
  9619  003F5E  0EF9               	movlw	-7
  9620  003F60  1EE3               	comf	plusw1,f,c
  9621  003F62  0EFA               	movlw	-6
  9622  003F64  1EE3               	comf	plusw1,f,c
  9623  003F66  0EFB               	movlw	-5
  9624  003F68  1EE3               	comf	plusw1,f,c
  9625  003F6A  0EFC               	movlw	-4
  9626  003F6C  1EE3               	comf	plusw1,f,c
  9627  003F6E  0EFD               	movlw	-3
  9628  003F70  1EE3               	comf	plusw1,f,c
  9629  003F72  E314               	bnc	u2470
  9630  003F74  0EF7               	movlw	-9
  9631  003F76  2AE3               	incf	plusw1,f,c
  9632  003F78  E311               	bnc	u2470
  9633  003F7A  0EF8               	movlw	-8
  9634  003F7C  2AE3               	incf	plusw1,f,c
  9635  003F7E  E30E               	bnc	u2470
  9636  003F80  0EF9               	movlw	-7
  9637  003F82  2AE3               	incf	plusw1,f,c
  9638  003F84  E30B               	bnc	u2470
  9639  003F86  0EFA               	movlw	-6
  9640  003F88  2AE3               	incf	plusw1,f,c
  9641  003F8A  E308               	bnc	u2470
  9642  003F8C  0EFB               	movlw	-5
  9643  003F8E  2AE3               	incf	plusw1,f,c
  9644  003F90  E305               	bnc	u2470
  9645  003F92  0EFC               	movlw	-4
  9646  003F94  2AE3               	incf	plusw1,f,c
  9647  003F96  E302               	bnc	u2470
  9648  003F98  0EFD               	movlw	-3
  9649  003F9A  2AE3               	incf	plusw1,f,c
  9650  003F9C                     u2470:
  9651                           
  9652                           ;stkvar	_dividend @ sp[(-2)+-8]
  9653  003F9C  0EF6               	movlw	246
  9654  003F9E  24E1               	addwf	fsr1l,w,c
  9655  003FA0  6ED9               	movwf	fsr2l,c
  9656  003FA2  0EFF               	movlw	255
  9657  003FA4  20E2               	addwfc	fsr1h,w,c
  9658  003FA6  6EDA               	movwf	fsr2h,c
  9659                           
  9660                           ;stkvar	?___aomod @ sp[(-2)+-8]
  9661  003FA8  0E08               	movlw	8
  9662  003FAA  6E3D               	movwf	btemp,c
  9663  003FAC  0EF6               	movlw	-10
  9664  003FAE                     us248999:
  9665  003FAE  006F FF7B FFE3     	movff	postinc2,plusw1
  9666  003FB4  28E8               	incf	wreg,w,c
  9667  003FB6  2E3D               	decfsz	btemp,f,c
  9668  003FB8  D7FA               	bra	us248999
  9669                           
  9670                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
  9671  003FBA  52E5               	movf	postdec1,f,c
  9672  003FBC  52E5               	movf	postdec1,f,c
  9673  003FBE  0012               	return		;funcret
  9674  003FC0                     __end_of___aomod:
  9675                           	opt callstack 0
  9676                           
  9677 ;; *************** function ___aodiv *****************
  9678 ;; Defined at:
  9679 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  9680 ;; Parameters:    Size  Location     Type
  9681 ;;  dividend        8  [STACK] long long 
  9682 ;;  divisor         8  [STACK] long long 
  9683 ;; Auto vars:     Size  Location     Type
  9684 ;;  quotient        8  [STACK] long long 
  9685 ;;  sign            1  [STACK] unsigned char 
  9686 ;;  counter         1  [STACK] unsigned char 
  9687 ;; Return value:  Size  Location     Type
  9688 ;;                  8  [STACK] long long 
  9689 ;; Registers used:
  9690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9691 ;; Tracked objects:
  9692 ;;		On entry : 0/0
  9693 ;;		On exit  : 0/0
  9694 ;;		Unchanged: 0/0
  9695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9700 ;;Total ram usage:        0 bytes
  9701 ;; Hardware stack levels used:    1
  9702 ;; Hardware stack levels required when called:    3
  9703 ;; This function calls:
  9704 ;;		Nothing
  9705 ;; This function is called by:
  9706 ;;		_dtoa
  9707 ;; This function uses a reentrant model
  9708 ;;
  9709                           
  9710                           	psect	text43
  9711  003882                     __ptext43:
  9712                           	opt callstack 0
  9713  003882                     ___aodiv:
  9714                           	opt callstack 0
  9715                           
  9716                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
  9717  003882  0E0A               	movlw	10
  9718  003884  26E1               	addwf	fsr1l,f,c
  9719  003886  0E00               	movlw	0
  9720  003888  22E2               	addwfc	fsr1h,f,c
  9721                           
  9722                           ;stkvar	_sign @ sp[(-10)+8]
  9723                           
  9724                           ;incstack = 0
  9725  00388A  0EFE               	movlw	-2
  9726  00388C  6AE3               	clrf	plusw1,c
  9727                           
  9728                           ;stkvar	_divisor @ sp[(-10)+-16]
  9729  00388E  0EED               	movlw	-19
  9730  003890  AEE3               	btfss	plusw1,7,c
  9731  003892  D028               	goto	l4972
  9732                           
  9733                           ;stkvar	_divisor @ sp[(-10)+-16]
  9734                           ;stkvar	_divisor @ sp[(-10)+-16]
  9735  003894  0EE6               	movlw	-26
  9736  003896  6CE3               	negf	plusw1,c
  9737  003898  0EE7               	movlw	-25
  9738  00389A  1EE3               	comf	plusw1,f,c
  9739  00389C  0EE8               	movlw	-24
  9740  00389E  1EE3               	comf	plusw1,f,c
  9741  0038A0  0EE9               	movlw	-23
  9742  0038A2  1EE3               	comf	plusw1,f,c
  9743  0038A4  0EEA               	movlw	-22
  9744  0038A6  1EE3               	comf	plusw1,f,c
  9745  0038A8  0EEB               	movlw	-21
  9746  0038AA  1EE3               	comf	plusw1,f,c
  9747  0038AC  0EEC               	movlw	-20
  9748  0038AE  1EE3               	comf	plusw1,f,c
  9749  0038B0  0EED               	movlw	-19
  9750  0038B2  1EE3               	comf	plusw1,f,c
  9751  0038B4  E314               	bnc	u2270
  9752  0038B6  0EE7               	movlw	-25
  9753  0038B8  2AE3               	incf	plusw1,f,c
  9754  0038BA  E311               	bnc	u2270
  9755  0038BC  0EE8               	movlw	-24
  9756  0038BE  2AE3               	incf	plusw1,f,c
  9757  0038C0  E30E               	bnc	u2270
  9758  0038C2  0EE9               	movlw	-23
  9759  0038C4  2AE3               	incf	plusw1,f,c
  9760  0038C6  E30B               	bnc	u2270
  9761  0038C8  0EEA               	movlw	-22
  9762  0038CA  2AE3               	incf	plusw1,f,c
  9763  0038CC  E308               	bnc	u2270
  9764  0038CE  0EEB               	movlw	-21
  9765  0038D0  2AE3               	incf	plusw1,f,c
  9766  0038D2  E305               	bnc	u2270
  9767  0038D4  0EEC               	movlw	-20
  9768  0038D6  2AE3               	incf	plusw1,f,c
  9769  0038D8  E302               	bnc	u2270
  9770  0038DA  0EED               	movlw	-19
  9771  0038DC  2AE3               	incf	plusw1,f,c
  9772  0038DE                     u2270:
  9773                           
  9774                           ;stkvar	_sign @ sp[(-10)+8]
  9775  0038DE  0EFE               	movlw	-2
  9776  0038E0  6AE3               	clrf	plusw1,c
  9777  0038E2  2AE3               	incf	plusw1,f,c
  9778  0038E4                     l4972:
  9779                           
  9780                           ;stkvar	_dividend @ sp[(-10)+-8]
  9781  0038E4  0EF5               	movlw	-11
  9782  0038E6  AEE3               	btfss	plusw1,7,c
  9783  0038E8  D027               	goto	l4978
  9784                           
  9785                           ;stkvar	_dividend @ sp[(-10)+-8]
  9786                           ;stkvar	_dividend @ sp[(-10)+-8]
  9787  0038EA  0EEE               	movlw	-18
  9788  0038EC  6CE3               	negf	plusw1,c
  9789  0038EE  0EEF               	movlw	-17
  9790  0038F0  1EE3               	comf	plusw1,f,c
  9791  0038F2  0EF0               	movlw	-16
  9792  0038F4  1EE3               	comf	plusw1,f,c
  9793  0038F6  0EF1               	movlw	-15
  9794  0038F8  1EE3               	comf	plusw1,f,c
  9795  0038FA  0EF2               	movlw	-14
  9796  0038FC  1EE3               	comf	plusw1,f,c
  9797  0038FE  0EF3               	movlw	-13
  9798  003900  1EE3               	comf	plusw1,f,c
  9799  003902  0EF4               	movlw	-12
  9800  003904  1EE3               	comf	plusw1,f,c
  9801  003906  0EF5               	movlw	-11
  9802  003908  1EE3               	comf	plusw1,f,c
  9803  00390A  E314               	bnc	u2290
  9804  00390C  0EEF               	movlw	-17
  9805  00390E  2AE3               	incf	plusw1,f,c
  9806  003910  E311               	bnc	u2290
  9807  003912  0EF0               	movlw	-16
  9808  003914  2AE3               	incf	plusw1,f,c
  9809  003916  E30E               	bnc	u2290
  9810  003918  0EF1               	movlw	-15
  9811  00391A  2AE3               	incf	plusw1,f,c
  9812  00391C  E30B               	bnc	u2290
  9813  00391E  0EF2               	movlw	-14
  9814  003920  2AE3               	incf	plusw1,f,c
  9815  003922  E308               	bnc	u2290
  9816  003924  0EF3               	movlw	-13
  9817  003926  2AE3               	incf	plusw1,f,c
  9818  003928  E305               	bnc	u2290
  9819  00392A  0EF4               	movlw	-12
  9820  00392C  2AE3               	incf	plusw1,f,c
  9821  00392E  E302               	bnc	u2290
  9822  003930  0EF5               	movlw	-11
  9823  003932  2AE3               	incf	plusw1,f,c
  9824  003934                     u2290:
  9825                           
  9826                           ;stkvar	_sign @ sp[(-10)+8]
  9827  003934  0EFE               	movlw	-2
  9828  003936  70E3               	btg	plusw1,0,c
  9829  003938                     l4978:
  9830                           
  9831                           ;stkvar	_quotient @ sp[(-10)+0]
  9832  003938  0E07               	movlw	7
  9833  00393A  6E3D               	movwf	btemp,c
  9834  00393C  0EF6               	movlw	-10
  9835  00393E                     u2301:
  9836  00393E  6AE3               	clrf	plusw1,c
  9837  003940  2AE8               	incf	wreg,f,c
  9838  003942  063D               	decf	btemp,f,c
  9839  003944  E2FC               	bc	u2301
  9840                           
  9841                           ;stkvar	_divisor @ sp[(-10)+-16]
  9842  003946  0EE6               	movlw	-26
  9843  003948  50E3               	movf	plusw1,w,c
  9844  00394A  E116               	bnz	u2310
  9845  00394C  0EE7               	movlw	-25
  9846  00394E  50E3               	movf	plusw1,w,c
  9847  003950  E113               	bnz	u2310
  9848  003952  0EE8               	movlw	-24
  9849  003954  50E3               	movf	plusw1,w,c
  9850  003956  E110               	bnz	u2310
  9851  003958  0EE9               	movlw	-23
  9852  00395A  50E3               	movf	plusw1,w,c
  9853  00395C  E10D               	bnz	u2310
  9854  00395E  0EEA               	movlw	-22
  9855  003960  50E3               	movf	plusw1,w,c
  9856  003962  E10A               	bnz	u2310
  9857  003964  0EEB               	movlw	-21
  9858  003966  50E3               	movf	plusw1,w,c
  9859  003968  E107               	bnz	u2310
  9860  00396A  0EEC               	movlw	-20
  9861  00396C  50E3               	movf	plusw1,w,c
  9862  00396E  E104               	bnz	u2310
  9863  003970  0EED               	movlw	-19
  9864  003972  50E3               	movf	plusw1,w,c
  9865  003974  B4D8               	btfsc	status,2,c
  9866  003976  D088               	goto	u2340
  9867  003978                     u2310:
  9868                           
  9869                           ;stkvar	_counter @ sp[(-10)+9]
  9870  003978  0EFF               	movlw	-1
  9871  00397A  6AE3               	clrf	plusw1,c
  9872  00397C  D012               	goto	L23
  9873  00397E                     l4984:
  9874                           
  9875                           ;stkvar	_divisor @ sp[(-10)+-16]
  9876  00397E  90D8               	bcf	status,0,c
  9877  003980  0EE6               	movlw	-26
  9878  003982  36E3               	rlcf	plusw1,f,c
  9879  003984  0EE7               	movlw	-25
  9880  003986  36E3               	rlcf	plusw1,f,c
  9881  003988  0EE8               	movlw	-24
  9882  00398A  36E3               	rlcf	plusw1,f,c
  9883  00398C  0EE9               	movlw	-23
  9884  00398E  36E3               	rlcf	plusw1,f,c
  9885  003990  0EEA               	movlw	-22
  9886  003992  36E3               	rlcf	plusw1,f,c
  9887  003994  0EEB               	movlw	-21
  9888  003996  36E3               	rlcf	plusw1,f,c
  9889  003998  0EEC               	movlw	-20
  9890  00399A  36E3               	rlcf	plusw1,f,c
  9891  00399C  0EED               	movlw	-19
  9892  00399E  36E3               	rlcf	plusw1,f,c
  9893                           
  9894                           ;stkvar	_counter @ sp[(-10)+9]
  9895  0039A0  0EFF               	movlw	-1
  9896  0039A2                     L23:
  9897  0039A2  2AE3               	incf	plusw1,f,c
  9898                           
  9899                           ;stkvar	_divisor @ sp[(-10)+-16]
  9900  0039A4  0EED               	movlw	-19
  9901  0039A6  AEE3               	btfss	plusw1,7,c
  9902  0039A8  D7EA               	goto	l4984
  9903  0039AA                     u2320:
  9904                           
  9905                           ;stkvar	_quotient @ sp[(-10)+0]
  9906  0039AA  90D8               	bcf	status,0,c
  9907  0039AC  0EF6               	movlw	-10
  9908  0039AE  36E3               	rlcf	plusw1,f,c
  9909  0039B0  0EF7               	movlw	-9
  9910  0039B2  36E3               	rlcf	plusw1,f,c
  9911  0039B4  0EF8               	movlw	-8
  9912  0039B6  36E3               	rlcf	plusw1,f,c
  9913  0039B8  0EF9               	movlw	-7
  9914  0039BA  36E3               	rlcf	plusw1,f,c
  9915  0039BC  0EFA               	movlw	-6
  9916  0039BE  36E3               	rlcf	plusw1,f,c
  9917  0039C0  0EFB               	movlw	-5
  9918  0039C2  36E3               	rlcf	plusw1,f,c
  9919  0039C4  0EFC               	movlw	-4
  9920  0039C6  36E3               	rlcf	plusw1,f,c
  9921  0039C8  0EFD               	movlw	-3
  9922  0039CA  36E3               	rlcf	plusw1,f,c
  9923                           
  9924                           ;stkvar	_divisor @ sp[(-10)+-16]
  9925                           ;stkvar	_dividend @ sp[(-10)+-8]
  9926  0039CC  50E1               	movf	fsr1l,w,c
  9927  0039CE  0FEE               	addlw	-18
  9928  0039D0  6ED9               	movwf	fsr2l,c
  9929  0039D2  50E2               	movf	fsr1h,w,c
  9930  0039D4  6EDA               	movwf	fsr2h,c
  9931  0039D6  0EFF               	movlw	255
  9932  0039D8  22DA               	addwfc	fsr2h,f,c
  9933  0039DA  0EE6               	movlw	-26
  9934  0039DC  50E3               	movf	plusw1,w,c
  9935  0039DE  5CDE               	subwf	postinc2,w,c
  9936  0039E0  0EE7               	movlw	-25
  9937  0039E2  50E3               	movf	plusw1,w,c
  9938  0039E4  58DE               	subwfb	postinc2,w,c
  9939  0039E6  0EE8               	movlw	-24
  9940  0039E8  50E3               	movf	plusw1,w,c
  9941  0039EA  58DE               	subwfb	postinc2,w,c
  9942  0039EC  0EE9               	movlw	-23
  9943  0039EE  50E3               	movf	plusw1,w,c
  9944  0039F0  58DE               	subwfb	postinc2,w,c
  9945  0039F2  0EEA               	movlw	-22
  9946  0039F4  50E3               	movf	plusw1,w,c
  9947  0039F6  58DE               	subwfb	postinc2,w,c
  9948  0039F8  0EEB               	movlw	-21
  9949  0039FA  50E3               	movf	plusw1,w,c
  9950  0039FC  58DE               	subwfb	postinc2,w,c
  9951  0039FE  0EEC               	movlw	-20
  9952  003A00  50E3               	movf	plusw1,w,c
  9953  003A02  58DE               	subwfb	postinc2,w,c
  9954  003A04  0EED               	movlw	-19
  9955  003A06  50E3               	movf	plusw1,w,c
  9956  003A08  58DE               	subwfb	postinc2,w,c
  9957  003A0A  A0D8               	btfss	status,0,c
  9958  003A0C  D021               	goto	l4996
  9959                           
  9960                           ;stkvar	_divisor @ sp[(-10)+-16]
  9961                           ;stkvar	_dividend @ sp[(-10)+-8]
  9962  003A0E  50E1               	movf	fsr1l,w,c
  9963  003A10  0FEE               	addlw	-18
  9964  003A12  6ED9               	movwf	fsr2l,c
  9965  003A14  50E2               	movf	fsr1h,w,c
  9966  003A16  6EDA               	movwf	fsr2h,c
  9967  003A18  0EFF               	movlw	255
  9968  003A1A  22DA               	addwfc	fsr2h,f,c
  9969  003A1C  0EE6               	movlw	-26
  9970  003A1E  50E3               	movf	plusw1,w,c
  9971  003A20  5EDE               	subwf	postinc2,f,c
  9972  003A22  0EE7               	movlw	-25
  9973  003A24  50E3               	movf	plusw1,w,c
  9974  003A26  5ADE               	subwfb	postinc2,f,c
  9975  003A28  0EE8               	movlw	-24
  9976  003A2A  50E3               	movf	plusw1,w,c
  9977  003A2C  5ADE               	subwfb	postinc2,f,c
  9978  003A2E  0EE9               	movlw	-23
  9979  003A30  50E3               	movf	plusw1,w,c
  9980  003A32  5ADE               	subwfb	postinc2,f,c
  9981  003A34  0EEA               	movlw	-22
  9982  003A36  50E3               	movf	plusw1,w,c
  9983  003A38  5ADE               	subwfb	postinc2,f,c
  9984  003A3A  0EEB               	movlw	-21
  9985  003A3C  50E3               	movf	plusw1,w,c
  9986  003A3E  5ADE               	subwfb	postinc2,f,c
  9987  003A40  0EEC               	movlw	-20
  9988  003A42  50E3               	movf	plusw1,w,c
  9989  003A44  5ADE               	subwfb	postinc2,f,c
  9990  003A46  0EED               	movlw	-19
  9991  003A48  50E3               	movf	plusw1,w,c
  9992  003A4A  5ADE               	subwfb	postinc2,f,c
  9993                           
  9994                           ;stkvar	_quotient @ sp[(-10)+0]
  9995  003A4C  0EF6               	movlw	-10
  9996  003A4E  80E3               	bsf	plusw1,0,c
  9997  003A50                     l4996:
  9998                           
  9999                           ;stkvar	_divisor @ sp[(-10)+-16]
 10000  003A50  90D8               	bcf	status,0,c
 10001  003A52  0EED               	movlw	-19
 10002  003A54  32E3               	rrcf	plusw1,f,c
 10003  003A56  0EEC               	movlw	-20
 10004  003A58  32E3               	rrcf	plusw1,f,c
 10005  003A5A  0EEB               	movlw	-21
 10006  003A5C  32E3               	rrcf	plusw1,f,c
 10007  003A5E  0EEA               	movlw	-22
 10008  003A60  32E3               	rrcf	plusw1,f,c
 10009  003A62  0EE9               	movlw	-23
 10010  003A64  32E3               	rrcf	plusw1,f,c
 10011  003A66  0EE8               	movlw	-24
 10012  003A68  32E3               	rrcf	plusw1,f,c
 10013  003A6A  0EE7               	movlw	-25
 10014  003A6C  32E3               	rrcf	plusw1,f,c
 10015  003A6E  0EE6               	movlw	-26
 10016  003A70  32E3               	rrcf	plusw1,f,c
 10017                           
 10018                           ;stkvar	_counter @ sp[(-10)+9]
 10019  003A72  0EFF               	movlw	-1
 10020  003A74  50E3               	movf	plusw1,w,c
 10021  003A76  6E3D               	movwf	btemp,c
 10022  003A78  0E01               	movlw	1
 10023  003A7A  5E3D               	subwf	btemp,f,c
 10024  003A7C  0EFF               	movlw	-1
 10025  003A7E  0060  F0F7  FFE3   	movff	btemp,plusw1
 10026  003A84  A4D8               	btfss	status,2,c
 10027  003A86  D791               	goto	u2320
 10028  003A88                     u2340:
 10029                           
 10030                           ;stkvar	_sign @ sp[(-10)+8]
 10031  003A88  0EFE               	movlw	-2
 10032  003A8A  50E3               	movf	plusw1,w,c
 10033  003A8C  B4D8               	btfsc	status,2,c
 10034  003A8E  D025               	goto	u2360
 10035                           
 10036                           ;stkvar	_quotient @ sp[(-10)+0]
 10037                           ;stkvar	_quotient @ sp[(-10)+0]
 10038  003A90  0EF6               	movlw	-10
 10039  003A92  6CE3               	negf	plusw1,c
 10040  003A94  0EF7               	movlw	-9
 10041  003A96  1EE3               	comf	plusw1,f,c
 10042  003A98  0EF8               	movlw	-8
 10043  003A9A  1EE3               	comf	plusw1,f,c
 10044  003A9C  0EF9               	movlw	-7
 10045  003A9E  1EE3               	comf	plusw1,f,c
 10046  003AA0  0EFA               	movlw	-6
 10047  003AA2  1EE3               	comf	plusw1,f,c
 10048  003AA4  0EFB               	movlw	-5
 10049  003AA6  1EE3               	comf	plusw1,f,c
 10050  003AA8  0EFC               	movlw	-4
 10051  003AAA  1EE3               	comf	plusw1,f,c
 10052  003AAC  0EFD               	movlw	-3
 10053  003AAE  1EE3               	comf	plusw1,f,c
 10054  003AB0  E314               	bnc	u2360
 10055  003AB2  0EF7               	movlw	-9
 10056  003AB4  2AE3               	incf	plusw1,f,c
 10057  003AB6  E311               	bnc	u2360
 10058  003AB8  0EF8               	movlw	-8
 10059  003ABA  2AE3               	incf	plusw1,f,c
 10060  003ABC  E30E               	bnc	u2360
 10061  003ABE  0EF9               	movlw	-7
 10062  003AC0  2AE3               	incf	plusw1,f,c
 10063  003AC2  E30B               	bnc	u2360
 10064  003AC4  0EFA               	movlw	-6
 10065  003AC6  2AE3               	incf	plusw1,f,c
 10066  003AC8  E308               	bnc	u2360
 10067  003ACA  0EFB               	movlw	-5
 10068  003ACC  2AE3               	incf	plusw1,f,c
 10069  003ACE  E305               	bnc	u2360
 10070  003AD0  0EFC               	movlw	-4
 10071  003AD2  2AE3               	incf	plusw1,f,c
 10072  003AD4  E302               	bnc	u2360
 10073  003AD6  0EFD               	movlw	-3
 10074  003AD8  2AE3               	incf	plusw1,f,c
 10075  003ADA                     u2360:
 10076                           
 10077                           ;stkvar	_quotient @ sp[(-10)+0]
 10078  003ADA  0EF6               	movlw	246
 10079  003ADC  24E1               	addwf	fsr1l,w,c
 10080  003ADE  6ED9               	movwf	fsr2l,c
 10081  003AE0  0EFF               	movlw	255
 10082  003AE2  20E2               	addwfc	fsr1h,w,c
 10083  003AE4  6EDA               	movwf	fsr2h,c
 10084                           
 10085                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 10086  003AE6  0E08               	movlw	8
 10087  003AE8  6E3D               	movwf	btemp,c
 10088  003AEA  0EEE               	movlw	-18
 10089  003AEC                     us237999:
 10090  003AEC  006F FF7B FFE3     	movff	postinc2,plusw1
 10091  003AF2  28E8               	incf	wreg,w,c
 10092  003AF4  2E3D               	decfsz	btemp,f,c
 10093  003AF6  D7FA               	bra	us237999
 10094                           
 10095                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 10096  003AF8  0EF6               	movlw	246
 10097  003AFA  26E1               	addwf	fsr1l,f,c
 10098  003AFC  0EFF               	movlw	255
 10099  003AFE  22E2               	addwfc	fsr1h,f,c
 10100  003B00  0012               	return		;funcret
 10101  003B02                     __end_of___aodiv:
 10102                           	opt callstack 0
 10103                           
 10104 ;; *************** function _ctoa *****************
 10105 ;; Defined at:
 10106 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10107 ;; Parameters:    Size  Location     Type
 10108 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10109 ;;		 -> f(5), NULL(0), 
 10110 ;;  c               1  [STACK] unsigned char 
 10111 ;; Auto vars:     Size  Location     Type
 10112 ;;  w               2  [STACK] int 
 10113 ;;  l               2    0        int 
 10114 ;; Return value:  Size  Location     Type
 10115 ;;                  2  [STACK] int 
 10116 ;; Registers used:
 10117 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 10118 ;; Tracked objects:
 10119 ;;		On entry : 0/1
 10120 ;;		On exit  : 0/0
 10121 ;;		Unchanged: 0/0
 10122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10127 ;;Total ram usage:        0 bytes
 10128 ;; Hardware stack levels used:    1
 10129 ;; Hardware stack levels required when called:    8
 10130 ;; This function calls:
 10131 ;;		_pad
 10132 ;; This function is called by:
 10133 ;;		_vfpfcnvrt
 10134 ;; This function uses a reentrant model
 10135 ;;
 10136                           
 10137                           	psect	text44
 10138  005064                     __ptext44:
 10139                           	opt callstack 0
 10140  005064                     _ctoa:
 10141                           	opt callstack 0
 10142                           
 10143                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10144  005064  52E6               	movf	postinc1,f,c
 10145  005066  52E6               	movf	postinc1,f,c
 10146                           
 10147                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 10148                           
 10149                           ;incstack = 0
 10150  005068  5024               	movf	_width,w,c
 10151  00506A  1025               	iorwf	_width+1,w,c
 10152  00506C  A4D8               	btfss	status,2,c
 10153  00506E  D009               	goto	l7070
 10154                           
 10155                           ;stkvar	_w @ sp[(-2)+0]
 10156  005070  0EFE               	movlw	-2
 10157  005072  0060  F093  FFE3   	movff	_width,plusw1
 10158  005078  0EFF               	movlw	-1
 10159  00507A  0060  F097  FFE3   	movff	_width+1,plusw1
 10160  005080  D016               	goto	l7072
 10161  005082                     l7070:
 10162  005082  0EFF               	movlw	255
 10163  005084  6E47               	movwf	btemp+10,c
 10164  005086  0EFF               	movlw	255
 10165  005088  6E48               	movwf	btemp+11,c
 10166  00508A  0060  F090  F045   	movff	_width,btemp+8
 10167  005090  0060  F094  F046   	movff	_width+1,btemp+9
 10168  005096  5047               	movf	btemp+10,w,c
 10169  005098  2645               	addwf	btemp+8,f,c
 10170  00509A  5048               	movf	btemp+11,w,c
 10171  00509C  2246               	addwfc	btemp+9,f,c
 10172                           
 10173                           ;stkvar	_w @ sp[(-2)+0]
 10174  00509E  0EFE               	movlw	-2
 10175  0050A0  0060  F117  FFE3   	movff	btemp+8,plusw1
 10176  0050A6  0EFF               	movlw	-1
 10177  0050A8  0060  F11B  FFE3   	movff	btemp+9,plusw1
 10178  0050AE                     l7072:
 10179                           
 10180                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 10181                           ;stkvar	_c @ sp[(-2)+-3]
 10182  0050AE  0EFB               	movlw	-5
 10183  0050B0  006F FF8C  F0D9    	movff	plusw1,_dbuf
 10184                           
 10185                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 10186  0050B6  0100               	movlb	0	; () banked
 10187  0050B8  6BDA               	clrf	(_dbuf+1)& (0+255),b
 10188                           
 10189                           ; BSR set to: 0
 10190                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 10191                           ;stkvar	_w @ sp[(-2)+0]
 10192  0050BA  0EFE               	movlw	-2
 10193  0050BC  006F FF8F FFE6     	movff	plusw1,postinc1
 10194  0050C2  006F FF8F FFE6     	movff	plusw1,postinc1
 10195  0050C8  0ED9               	movlw	_dbuf& (0+255)
 10196  0050CA  6EE6               	movwf	postinc1,c
 10197                           
 10198                           ;stkvar	_fp @ sp[(-5)+-2]
 10199  0050CC  0EF9               	movlw	-7
 10200  0050CE  006F FF8F FFE6     	movff	plusw1,postinc1
 10201  0050D4  006F FF8F FFE6     	movff	plusw1,postinc1
 10202  0050DA  ECF1  F023         	call	_pad	;wreg free
 10203                           
 10204                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 10205  0050DE  0EFB               	movlw	251
 10206  0050E0  26E1               	addwf	fsr1l,f,c
 10207  0050E2  0EFF               	movlw	255
 10208  0050E4  22E2               	addwfc	fsr1h,f,c
 10209  0050E6  0012               	return		;funcret
 10210  0050E8                     __end_of_ctoa:
 10211                           	opt callstack 0
 10212                           
 10213 ;; *************** function _pad *****************
 10214 ;; Defined at:
 10215 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10216 ;; Parameters:    Size  Location     Type
 10217 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10218 ;;		 -> f(5), NULL(0), 
 10219 ;;  buf             1  [STACK] PTR unsigned char 
 10220 ;;		 -> dbuf(32), 
 10221 ;;  p               2  [STACK] int 
 10222 ;; Auto vars:     Size  Location     Type
 10223 ;;  w               2  [STACK] int 
 10224 ;;  i               2  [STACK] int 
 10225 ;; Return value:  Size  Location     Type
 10226 ;;                  2  [STACK] int 
 10227 ;; Registers used:
 10228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
 10229 ;; Tracked objects:
 10230 ;;		On entry : 0/0
 10231 ;;		On exit  : 0/0
 10232 ;;		Unchanged: 0/0
 10233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10238 ;;Total ram usage:        0 bytes
 10239 ;; Hardware stack levels used:    1
 10240 ;; Hardware stack levels required when called:    7
 10241 ;; This function calls:
 10242 ;;		_fputc
 10243 ;;		_fputs
 10244 ;;		_strlen
 10245 ;; This function is called by:
 10246 ;;		_ctoa
 10247 ;;		_dtoa
 10248 ;;		_xtoa
 10249 ;; This function uses a reentrant model
 10250 ;;
 10251                           
 10252                           	psect	text45
 10253  0047E2                     __ptext45:
 10254                           	opt callstack 0
 10255  0047E2                     _pad:
 10256                           	opt callstack 0
 10257                           
 10258                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10259  0047E2  52E6               	movf	postinc1,f,c
 10260  0047E4  52E6               	movf	postinc1,f,c
 10261  0047E6  52E6               	movf	postinc1,f,c
 10262  0047E8  52E6               	movf	postinc1,f,c
 10263                           
 10264                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 10265                           
 10266                           ;incstack = 0
 10267  0047EA  A028               	btfss	_flags,0,c
 10268  0047EC  D00C               	goto	l7048
 10269                           
 10270                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 10271                           ;stkvar	_fp @ sp[(-4)+-2]
 10272  0047EE  0EFA               	movlw	-6
 10273  0047F0  006F FF8F FFE6     	movff	plusw1,postinc1
 10274  0047F6  006F FF8F FFE6     	movff	plusw1,postinc1
 10275                           
 10276                           ;stkvar	_buf @ sp[(-6)+-3]
 10277  0047FC  0EF7               	movlw	-9
 10278  0047FE  50E3               	movf	plusw1,w,c
 10279  004800  6EE6               	movwf	postinc1,c
 10280  004802  ECB6  F028         	call	_fputs	;wreg free
 10281  004806                     l7048:
 10282                           
 10283                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 10284                           ;stkvar	_p @ sp[(-4)+-5]
 10285  004806  0EF8               	movlw	-8
 10286  004808  BEE3               	btfsc	plusw1,7,c
 10287  00480A  D011               	goto	l7052
 10288                           
 10289                           ;stkvar	_p @ sp[(-4)+-5]
 10290                           ;stkvar	_w @ sp[(-4)+0]
 10291  00480C  0EF7               	movlw	-9
 10292  00480E  006F FF8C  F03D    	movff	plusw1,btemp
 10293  004814  0EFC               	movlw	-4
 10294  004816  0060  F0F7  FFE3   	movff	btemp,plusw1
 10295  00481C  0EF8               	movlw	-8
 10296  00481E  006F FF8C  F03D    	movff	plusw1,btemp
 10297  004824  0EFD               	movlw	-3
 10298  004826  0060  F0F7  FFE3   	movff	btemp,plusw1
 10299  00482C  D004               	goto	l1649
 10300  00482E                     l7052:
 10301                           
 10302                           ;stkvar	_w @ sp[(-4)+0]
 10303  00482E  0EFC               	movlw	-4
 10304  004830  6AE3               	clrf	plusw1,c
 10305  004832  0EFD               	movlw	-3
 10306  004834  6AE3               	clrf	plusw1,c
 10307  004836                     l1649:
 10308                           
 10309                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 10310                           ;stkvar	_i @ sp[(-4)+2]
 10311  004836  0EFE               	movlw	-2
 10312  004838  6AE3               	clrf	plusw1,c
 10313  00483A  0EFF               	movlw	-1
 10314  00483C  6AE3               	clrf	plusw1,c
 10315                           
 10316                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 10317  00483E  D01E               	goto	l7058
 10318  004840                     l7054:
 10319                           
 10320                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 10321                           ;stkvar	_fp @ sp[(-4)+-2]
 10322  004840  0EFA               	movlw	-6
 10323  004842  006F FF8F FFE6     	movff	plusw1,postinc1
 10324  004848  006F FF8F FFE6     	movff	plusw1,postinc1
 10325  00484E  0E20               	movlw	32
 10326  004850  6EE6               	movwf	postinc1,c
 10327  004852  0E00               	movlw	0
 10328  004854  6EE6               	movwf	postinc1,c
 10329  004856  EC6B  F023         	call	_fputc	;wreg free
 10330                           
 10331                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 10332                           ;stkvar	_i @ sp[(-4)+2]
 10333  00485A  0EFE               	movlw	-2
 10334  00485C  50E3               	movf	plusw1,w,c
 10335  00485E  0F01               	addlw	1
 10336  004860  6E3D               	movwf	btemp,c
 10337  004862  0EFE               	movlw	-2
 10338  004864  0060  F0F7  FFE3   	movff	btemp,plusw1
 10339  00486A  6A3D               	clrf	btemp,c
 10340  00486C  0EFF               	movlw	-1
 10341  00486E  50E3               	movf	plusw1,w,c
 10342  004870  203D               	addwfc	btemp,w,c
 10343  004872  6E3D               	movwf	btemp,c
 10344  004874  0EFF               	movlw	-1
 10345  004876  0060  F0F7  FFE3   	movff	btemp,plusw1
 10346  00487C                     l7058:
 10347                           
 10348                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 10349                           ;stkvar	_w @ sp[(-4)+0]
 10350                           ;stkvar	_i @ sp[(-4)+2]
 10351  00487C  50E1               	movf	fsr1l,w,c
 10352  00487E  0FFE               	addlw	-2
 10353  004880  6ED9               	movwf	fsr2l,c
 10354  004882  50E2               	movf	fsr1h,w,c
 10355  004884  6EDA               	movwf	fsr2h,c
 10356  004886  0EFF               	movlw	255
 10357  004888  22DA               	addwfc	fsr2h,f,c
 10358  00488A  0EFC               	movlw	-4
 10359  00488C  50E3               	movf	plusw1,w,c
 10360  00488E  5CDE               	subwf	postinc2,w,c
 10361  004890  50DE               	movf	postinc2,w,c
 10362  004892  0A80               	xorlw	128
 10363  004894  6E3D               	movwf	btemp,c
 10364  004896  0EFD               	movlw	-3
 10365  004898  50E3               	movf	plusw1,w,c
 10366  00489A  0A80               	xorlw	128
 10367  00489C  583D               	subwfb	btemp,w,c
 10368  00489E  A0D8               	btfss	status,0,c
 10369  0048A0  D7CF               	goto	l7054
 10370                           
 10371                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 10372  0048A2  B028               	btfsc	_flags,0,c
 10373  0048A4  D00C               	goto	l7062
 10374                           
 10375                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 10376                           ;stkvar	_fp @ sp[(-4)+-2]
 10377  0048A6  0EFA               	movlw	-6
 10378  0048A8  006F FF8F FFE6     	movff	plusw1,postinc1
 10379  0048AE  006F FF8F FFE6     	movff	plusw1,postinc1
 10380                           
 10381                           ;stkvar	_buf @ sp[(-6)+-3]
 10382  0048B4  0EF7               	movlw	-9
 10383  0048B6  50E3               	movf	plusw1,w,c
 10384  0048B8  6EE6               	movwf	postinc1,c
 10385  0048BA  ECB6  F028         	call	_fputs	;wreg free
 10386  0048BE                     l7062:
 10387                           
 10388                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 10389                           ;stkvar	_w @ sp[(-4)+0]
 10390                           ;stkvar	_buf @ sp[(-4)+-3]
 10391  0048BE  0EF9               	movlw	-7
 10392  0048C0  006F FF8C  F048    	movff	plusw1,btemp+11
 10393  0048C6  0060  F123  FFE6   	movff	btemp+11,postinc1
 10394  0048CC  0E00               	movlw	0
 10395  0048CE  6EE6               	movwf	postinc1,c
 10396  0048D0  EC74  F028         	call	_strlen	;wreg free
 10397  0048D4  0EFC               	movlw	-4
 10398  0048D6  50E3               	movf	plusw1,w,c
 10399  0048D8  263D               	addwf	btemp,f,c
 10400  0048DA  0EFD               	movlw	-3
 10401  0048DC  50E3               	movf	plusw1,w,c
 10402  0048DE  223E               	addwfc	btemp+1,f,c
 10403                           
 10404                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize =
      +                           5, vargsize = 0
 10405  0048E0  0EF7               	movlw	247
 10406  0048E2  26E1               	addwf	fsr1l,f,c
 10407  0048E4  0EFF               	movlw	255
 10408  0048E6  22E2               	addwfc	fsr1h,f,c
 10409  0048E8  0012               	return		;funcret
 10410  0048EA                     __end_of_pad:
 10411                           	opt callstack 0
 10412                           
 10413 ;; *************** function _strlen *****************
 10414 ;; Defined at:
 10415 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 10416 ;; Parameters:    Size  Location     Type
 10417 ;;  s               2  [STACK] PTR const unsigned char 
 10418 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 10419 ;;		 -> V(80), 
 10420 ;; Auto vars:     Size  Location     Type
 10421 ;;  a               2  [STACK] PTR const unsigned char 
 10422 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 10423 ;;		 -> V(80), 
 10424 ;; Return value:  Size  Location     Type
 10425 ;;                  2  [STACK] unsigned int 
 10426 ;; Registers used:
 10427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10428 ;; Tracked objects:
 10429 ;;		On entry : 0/0
 10430 ;;		On exit  : 0/0
 10431 ;;		Unchanged: 0/0
 10432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10437 ;;Total ram usage:        0 bytes
 10438 ;; Hardware stack levels used:    1
 10439 ;; Hardware stack levels required when called:    3
 10440 ;; This function calls:
 10441 ;;		Nothing
 10442 ;; This function is called by:
 10443 ;;		_eaDogM_WriteString
 10444 ;;		_pad
 10445 ;;		_stoa
 10446 ;; This function uses a reentrant model
 10447 ;;
 10448                           
 10449                           	psect	text46
 10450  0050E8                     __ptext46:
 10451                           	opt callstack 0
 10452  0050E8                     _strlen:
 10453                           	opt callstack 0
 10454                           
 10455                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10456  0050E8  52E6               	movf	postinc1,f,c
 10457  0050EA  52E6               	movf	postinc1,f,c
 10458                           
 10459                           ;stkvar	_s @ sp[(-2)+-2]
 10460                           
 10461                           ;incstack = 0
 10462  0050EC  0EFC               	movlw	-4
 10463  0050EE  006F FF8C  F047    	movff	plusw1,btemp+10
 10464  0050F4  0EFD               	movlw	-3
 10465  0050F6  006F FF8C  F048    	movff	plusw1,btemp+11
 10466                           
 10467                           ;stkvar	_a @ sp[(-2)+0]
 10468  0050FC  0EFF               	movlw	-1
 10469  0050FE  0060  F123  FFE3   	movff	btemp+11,plusw1
 10470  005104  0EFE               	movlw	-2
 10471  005106  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10472  00510C  D011               	goto	l4890
 10473  00510E                     l4888:
 10474                           
 10475                           ;stkvar	_s @ sp[(-2)+-2]
 10476  00510E  0EFC               	movlw	-4
 10477  005110  50E3               	movf	plusw1,w,c
 10478  005112  0F01               	addlw	1
 10479  005114  6E3D               	movwf	btemp,c
 10480  005116  0EFC               	movlw	-4
 10481  005118  0060  F0F7  FFE3   	movff	btemp,plusw1
 10482  00511E  6A3D               	clrf	btemp,c
 10483  005120  0EFD               	movlw	-3
 10484  005122  50E3               	movf	plusw1,w,c
 10485  005124  203D               	addwfc	btemp,w,c
 10486  005126  6E3D               	movwf	btemp,c
 10487  005128  0EFD               	movlw	-3
 10488  00512A  0060  F0F7  FFE3   	movff	btemp,plusw1
 10489  005130                     l4890:
 10490                           
 10491                           ;stkvar	_s @ sp[(-2)+-2]
 10492  005130  0EFC               	movlw	-4
 10493  005132  006F FF8F FFD9     	movff	plusw1,fsr2l
 10494  005138  0EFD               	movlw	-3
 10495  00513A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10496  005140  50DF               	movf	indf2,w,c
 10497  005142  A4D8               	btfss	status,2,c
 10498  005144  D7E4               	goto	l4888
 10499                           
 10500                           ;stkvar	_a @ sp[(-2)+0]
 10501                           ;stkvar	_s @ sp[(-2)+-2]
 10502  005146  0EFC               	movlw	-4
 10503  005148  006F FF8C  F03D    	movff	plusw1,btemp
 10504  00514E  0EFD               	movlw	-3
 10505  005150  006F FF8C  F03E    	movff	plusw1,btemp+1
 10506  005156  0EFE               	movlw	-2
 10507  005158  50E3               	movf	plusw1,w,c
 10508  00515A  5E3D               	subwf	btemp,f,c
 10509  00515C  0EFF               	movlw	-1
 10510  00515E  50E3               	movf	plusw1,w,c
 10511  005160  5A3E               	subwfb	btemp+1,f,c
 10512                           
 10513                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 10514  005162  52E5               	movf	postdec1,f,c
 10515  005164  52E5               	movf	postdec1,f,c
 10516  005166  52E5               	movf	postdec1,f,c
 10517  005168  52E5               	movf	postdec1,f,c
 10518  00516A  0012               	return		;funcret
 10519  00516C                     __end_of_strlen:
 10520                           	opt callstack 0
 10521                           
 10522 ;; *************** function _fputs *****************
 10523 ;; Defined at:
 10524 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 10525 ;; Parameters:    Size  Location     Type
 10526 ;;  s               1  [STACK] PTR const unsigned char 
 10527 ;;		 -> dbuf(32), 
 10528 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10529 ;;		 -> f(5), NULL(0), 
 10530 ;; Auto vars:     Size  Location     Type
 10531 ;;  i               2  [STACK] int 
 10532 ;;  c               1  [STACK] unsigned char 
 10533 ;; Return value:  Size  Location     Type
 10534 ;;                  2  [STACK] int 
 10535 ;; Registers used:
 10536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 10537 ;; Tracked objects:
 10538 ;;		On entry : 0/0
 10539 ;;		On exit  : 0/0
 10540 ;;		Unchanged: 0/0
 10541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10546 ;;Total ram usage:        0 bytes
 10547 ;; Hardware stack levels used:    1
 10548 ;; Hardware stack levels required when called:    6
 10549 ;; This function calls:
 10550 ;;		_fputc
 10551 ;; This function is called by:
 10552 ;;		_pad
 10553 ;; This function uses a reentrant model
 10554 ;;
 10555                           
 10556                           	psect	text47
 10557  00516C                     __ptext47:
 10558                           	opt callstack 0
 10559  00516C                     _fputs:
 10560                           	opt callstack 0
 10561                           
 10562                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10563  00516C  52E6               	movf	postinc1,f,c
 10564  00516E  52E6               	movf	postinc1,f,c
 10565  005170  52E6               	movf	postinc1,f,c
 10566                           
 10567                           ;stkvar	_i @ sp[(-3)+0]
 10568                           
 10569                           ;incstack = 0
 10570  005172  0EFD               	movlw	-3
 10571  005174  6AE3               	clrf	plusw1,c
 10572  005176  0EFE               	movlw	-2
 10573  005178  6AE3               	clrf	plusw1,c
 10574  00517A  D01F               	goto	l7042
 10575  00517C                     l7038:
 10576                           
 10577                           ;stkvar	_fp @ sp[(-3)+-3]
 10578  00517C  0EFA               	movlw	-6
 10579  00517E  006F FF8F FFE6     	movff	plusw1,postinc1
 10580  005184  006F FF8F FFE6     	movff	plusw1,postinc1
 10581                           
 10582                           ;stkvar	_c @ sp[(-5)+2]
 10583  00518A  0EFD               	movlw	-3
 10584  00518C  50E3               	movf	plusw1,w,c
 10585  00518E  6EE6               	movwf	postinc1,c
 10586  005190  0E00               	movlw	0
 10587  005192  6EE6               	movwf	postinc1,c
 10588  005194  EC6B  F023         	call	_fputc	;wreg free
 10589                           
 10590                           ;stkvar	_i @ sp[(-3)+0]
 10591  005198  0EFD               	movlw	-3
 10592  00519A  50E3               	movf	plusw1,w,c
 10593  00519C  0F01               	addlw	1
 10594  00519E  6E3D               	movwf	btemp,c
 10595  0051A0  0EFD               	movlw	-3
 10596  0051A2  0060  F0F7  FFE3   	movff	btemp,plusw1
 10597  0051A8  6A3D               	clrf	btemp,c
 10598  0051AA  0EFE               	movlw	-2
 10599  0051AC  50E3               	movf	plusw1,w,c
 10600  0051AE  203D               	addwfc	btemp,w,c
 10601  0051B0  6E3D               	movwf	btemp,c
 10602  0051B2  0EFE               	movlw	-2
 10603  0051B4  0060  F0F7  FFE3   	movff	btemp,plusw1
 10604  0051BA                     l7042:
 10605                           
 10606                           ;stkvar	_i @ sp[(-3)+0]
 10607  0051BA  0EFD               	movlw	-3
 10608  0051BC  006F FF8C  F048    	movff	plusw1,btemp+11
 10609                           
 10610                           ;stkvar	_s @ sp[(-3)+-1]
 10611  0051C2  0EFC               	movlw	-4
 10612  0051C4  50E3               	movf	plusw1,w,c
 10613  0051C6  2448               	addwf	btemp+11,w,c
 10614  0051C8  6ED9               	movwf	fsr2l,c
 10615  0051CA  6ADA               	clrf	fsr2h,c
 10616  0051CC  50DF               	movf	indf2,w,c
 10617  0051CE  6E48               	movwf	btemp+11,c
 10618                           
 10619                           ;stkvar	_c @ sp[(-3)+2]
 10620  0051D0  0EFF               	movlw	-1
 10621  0051D2  0060  F123  FFE3   	movff	btemp+11,plusw1
 10622  0051D8  0EFF               	movlw	-1
 10623  0051DA  50E3               	movf	plusw1,w,c
 10624  0051DC  A4D8               	btfss	status,2,c
 10625  0051DE  D7CE               	goto	l7038
 10626                           
 10627                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize
      +                           = 3, vargsize = 0
 10628  0051E0  0EFA               	movlw	250
 10629  0051E2  26E1               	addwf	fsr1l,f,c
 10630  0051E4  0EFF               	movlw	255
 10631  0051E6  22E2               	addwfc	fsr1h,f,c
 10632  0051E8  0012               	return		;funcret
 10633  0051EA                     __end_of_fputs:
 10634                           	opt callstack 0
 10635                           
 10636 ;; *************** function _fputc *****************
 10637 ;; Defined at:
 10638 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 10639 ;; Parameters:    Size  Location     Type
 10640 ;;  c               2  [STACK] int 
 10641 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10642 ;;		 -> f(5), NULL(0), 
 10643 ;; Auto vars:     Size  Location     Type
 10644 ;;		None
 10645 ;; Return value:  Size  Location     Type
 10646 ;;                  2  [STACK] int 
 10647 ;; Registers used:
 10648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 10649 ;; Tracked objects:
 10650 ;;		On entry : 0/1
 10651 ;;		On exit  : 0/0
 10652 ;;		Unchanged: 0/0
 10653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10658 ;;Total ram usage:        0 bytes
 10659 ;; Hardware stack levels used:    1
 10660 ;; Hardware stack levels required when called:    5
 10661 ;; This function calls:
 10662 ;;		_putch
 10663 ;; This function is called by:
 10664 ;;		_pad
 10665 ;;		_stoa
 10666 ;;		_vfpfcnvrt
 10667 ;;		_fputs
 10668 ;; This function uses a reentrant model
 10669 ;;
 10670                           
 10671                           	psect	text48
 10672  0046D6                     __ptext48:
 10673                           	opt callstack 0
 10674  0046D6                     _fputc:
 10675                           	opt callstack 19
 10676                           
 10677                           ;stkvar	_fp @ sp[(0)+-4]
 10678                           
 10679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10680                           ;incstack = 0
 10681  0046D6  0EFC               	movlw	-4
 10682  0046D8  006F FF8C  F03D    	movff	plusw1,btemp
 10683  0046DE  0EFD               	movlw	-3
 10684  0046E0  50E3               	movf	plusw1,w,c
 10685  0046E2  103D               	iorwf	btemp,w,c
 10686  0046E4  B4D8               	btfsc	status,2,c
 10687  0046E6  D009               	goto	u3940
 10688                           
 10689                           ;stkvar	_fp @ sp[(0)+-4]
 10690  0046E8  0EFC               	movlw	-4
 10691  0046EA  006F FF8C  F03D    	movff	plusw1,btemp
 10692  0046F0  0EFD               	movlw	-3
 10693  0046F2  50E3               	movf	plusw1,w,c
 10694  0046F4  103D               	iorwf	btemp,w,c
 10695  0046F6  A4D8               	btfss	status,2,c
 10696  0046F8  D006               	goto	l7028
 10697  0046FA                     u3940:
 10698                           
 10699                           ;stkvar	_c @ sp[(0)+-2]
 10700  0046FA  0EFE               	movlw	-2
 10701  0046FC  50E3               	movf	plusw1,w,c
 10702  0046FE  6EE6               	movwf	postinc1,c
 10703  004700  EC4F  F02F         	call	_putch	;wreg free
 10704  004704  D069               	goto	l2541
 10705  004706                     l7028:
 10706                           
 10707                           ;stkvar	_fp @ sp[(0)+-4]
 10708  004706  0EFC               	movlw	-4
 10709  004708  006F FF8C  F047    	movff	plusw1,btemp+10
 10710  00470E  0EFD               	movlw	-3
 10711  004710  006F FF8C  F048    	movff	plusw1,btemp+11
 10712  004716  0E03               	movlw	3
 10713  004718  2447               	addwf	btemp+10,w,c
 10714  00471A  6ED9               	movwf	fsr2l,c
 10715  00471C  0E00               	movlw	0
 10716  00471E  2048               	addwfc	btemp+11,w,c
 10717  004720  6EDA               	movwf	fsr2h,c
 10718  004722  50DE               	movf	postinc2,w,c
 10719  004724  10DE               	iorwf	postinc2,w,c
 10720  004726  B4D8               	btfsc	status,2,c
 10721  004728  D026               	goto	u3960
 10722                           
 10723                           ;stkvar	_fp @ sp[(0)+-4]
 10724  00472A  0EFC               	movlw	-4
 10725  00472C  006F FF8C  F047    	movff	plusw1,btemp+10
 10726  004732  0EFD               	movlw	-3
 10727  004734  006F FF8C  F048    	movff	plusw1,btemp+11
 10728  00473A  0E03               	movlw	3
 10729  00473C  2447               	addwf	btemp+10,w,c
 10730  00473E  6ED9               	movwf	fsr2l,c
 10731  004740  0E00               	movlw	0
 10732  004742  2048               	addwfc	btemp+11,w,c
 10733  004744  6EDA               	movwf	fsr2h,c
 10734                           
 10735                           ;stkvar	_fp @ sp[(0)+-4]
 10736  004746  0EFC               	movlw	-4
 10737  004748  006F FF8C  F047    	movff	plusw1,btemp+10
 10738  00474E  0EFD               	movlw	-3
 10739  004750  006F FF8C  F048    	movff	plusw1,btemp+11
 10740  004756  0E01               	movlw	1
 10741  004758  2447               	addwf	btemp+10,w,c
 10742  00475A  6EE9               	movwf	fsr0l,c
 10743  00475C  0E00               	movlw	0
 10744  00475E  2048               	addwfc	btemp+11,w,c
 10745  004760  6EEA               	movwf	fsr0h,c
 10746  004762  50DE               	movf	postinc2,w,c
 10747  004764  5CEE               	subwf	postinc0,w,c
 10748  004766  50EE               	movf	postinc0,w,c
 10749  004768  0A80               	xorlw	128
 10750  00476A  6E3D               	movwf	btemp,c
 10751  00476C  50DE               	movf	postinc2,w,c
 10752  00476E  0A80               	xorlw	128
 10753  004770  583D               	subwfb	btemp,w,c
 10754  004772  B0D8               	btfsc	status,0,c
 10755  004774  D031               	goto	l2541
 10756  004776                     u3960:
 10757                           
 10758                           ;stkvar	_c @ sp[(0)+-2]
 10759                           ;stkvar	_fp @ sp[(0)+-4]
 10760  004776  0EFC               	movlw	-4
 10761  004778  006F FF8C  F047    	movff	plusw1,btemp+10
 10762  00477E  0EFD               	movlw	-3
 10763  004780  006F FF8C  F048    	movff	plusw1,btemp+11
 10764  004786  0E01               	movlw	1
 10765  004788  2447               	addwf	btemp+10,w,c
 10766  00478A  6ED9               	movwf	fsr2l,c
 10767  00478C  0E00               	movlw	0
 10768  00478E  2048               	addwfc	btemp+11,w,c
 10769  004790  6EDA               	movwf	fsr2h,c
 10770  004792  50DF               	movf	indf2,w,c
 10771  004794  6E48               	movwf	btemp+11,c
 10772                           
 10773                           ;stkvar	_fp @ sp[(0)+-4]
 10774  004796  0EFC               	movlw	-4
 10775  004798  006F FF8F FFD9     	movff	plusw1,fsr2l
 10776  00479E  0EFD               	movlw	-3
 10777  0047A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10778  0047A6  50DF               	movf	indf2,w,c
 10779  0047A8  2448               	addwf	btemp+11,w,c
 10780  0047AA  6ED9               	movwf	fsr2l,c
 10781  0047AC  6ADA               	clrf	fsr2h,c
 10782  0047AE  0EFE               	movlw	-2
 10783  0047B0  006F FF8F FFDF     	movff	plusw1,indf2
 10784                           
 10785                           ;stkvar	_fp @ sp[(0)+-4]
 10786  0047B6  0EFC               	movlw	-4
 10787  0047B8  006F FF8C  F047    	movff	plusw1,btemp+10
 10788  0047BE  0EFD               	movlw	-3
 10789  0047C0  006F FF8C  F048    	movff	plusw1,btemp+11
 10790  0047C6  0E01               	movlw	1
 10791  0047C8  2447               	addwf	btemp+10,w,c
 10792  0047CA  6ED9               	movwf	fsr2l,c
 10793  0047CC  0E00               	movlw	0
 10794  0047CE  2048               	addwfc	btemp+11,w,c
 10795  0047D0  6EDA               	movwf	fsr2h,c
 10796  0047D2  2ADE               	incf	postinc2,f,c
 10797  0047D4  0E00               	movlw	0
 10798  0047D6  22DD               	addwfc	postdec2,f,c
 10799  0047D8                     l2541:
 10800                           
 10801                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10802  0047D8  52E5               	movf	postdec1,f,c
 10803  0047DA  52E5               	movf	postdec1,f,c
 10804  0047DC  52E5               	movf	postdec1,f,c
 10805  0047DE  52E5               	movf	postdec1,f,c
 10806  0047E0  0012               	return		;funcret
 10807  0047E2                     __end_of_fputc:
 10808                           	opt callstack 0
 10809                           
 10810 ;; *************** function _putch *****************
 10811 ;; Defined at:
 10812 ;;		line 138 in file "eadog.c"
 10813 ;; Parameters:    Size  Location     Type
 10814 ;;  c               1  [STACK] unsigned char 
 10815 ;; Auto vars:     Size  Location     Type
 10816 ;;		None
 10817 ;; Return value:  Size  Location     Type
 10818 ;;                  1  [STACK] void 
 10819 ;; Registers used:
 10820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10821 ;; Tracked objects:
 10822 ;;		On entry : 0/1
 10823 ;;		On exit  : 0/0
 10824 ;;		Unchanged: 0/0
 10825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10830 ;;Total ram usage:        0 bytes
 10831 ;; Hardware stack levels used:    1
 10832 ;; Hardware stack levels required when called:    4
 10833 ;; This function calls:
 10834 ;;		_ringBufS_put_dma
 10835 ;; This function is called by:
 10836 ;;		_fputc
 10837 ;; This function uses a reentrant model
 10838 ;;
 10839                           
 10840                           	psect	text49
 10841  005E9E                     __ptext49:
 10842                           	opt callstack 0
 10843  005E9E                     _putch:
 10844                           	opt callstack 19
 10845                           
 10846                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 10847                           ;stkvar	_c @ sp[(0)+-1]
 10848                           
 10849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10850                           ;incstack = 0
 10851  005E9E  0EFF               	movlw	-1
 10852  005EA0  50E3               	movf	plusw1,w,c
 10853  005EA2  6EE6               	movwf	postinc1,c
 10854  005EA4  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
 10855  005EAA  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
 10856  005EB0  EC67  F026         	call	_ringBufS_put_dma	;wreg free
 10857                           
 10858                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 10859  005EB4  52E5               	movf	postdec1,f,c
 10860  005EB6  0012               	return		;funcret
 10861  005EB8                     __end_of_putch:
 10862                           	opt callstack 0
 10863                           
 10864 ;; *************** function _ringBufS_put_dma *****************
 10865 ;; Defined at:
 10866 ;;		line 67 in file "ringbufs.c"
 10867 ;; Parameters:    Size  Location     Type
 10868 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10869 ;;		 -> ring_buf1(67), 
 10870 ;;  c               1  [STACK] const unsigned char 
 10871 ;; Auto vars:     Size  Location     Type
 10872 ;;		None
 10873 ;; Return value:  Size  Location     Type
 10874 ;;                  1  [STACK] void 
 10875 ;; Registers used:
 10876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 10877 ;; Tracked objects:
 10878 ;;		On entry : 0/1
 10879 ;;		On exit  : 0/0
 10880 ;;		Unchanged: 0/0
 10881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10886 ;;Total ram usage:        0 bytes
 10887 ;; Hardware stack levels used:    1
 10888 ;; Hardware stack levels required when called:    3
 10889 ;; This function calls:
 10890 ;;		Nothing
 10891 ;; This function is called by:
 10892 ;;		_putch
 10893 ;; This function uses a reentrant model
 10894 ;;
 10895                           
 10896                           	psect	text50
 10897  004CCE                     __ptext50:
 10898                           	opt callstack 0
 10899  004CCE                     _ringBufS_put_dma:
 10900                           	opt callstack 19
 10901                           
 10902                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 10903                           ;stkvar	__this @ sp[(0)+-2]
 10904                           
 10905                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10906                           ;incstack = 0
 10907  004CCE  0EFE               	movlw	-2
 10908  004CD0  006F FF8C  F047    	movff	plusw1,btemp+10
 10909  004CD6  0EFF               	movlw	-1
 10910  004CD8  006F FF8C  F048    	movff	plusw1,btemp+11
 10911  004CDE  0E42               	movlw	66
 10912  004CE0  2447               	addwf	btemp+10,w,c
 10913  004CE2  6ED9               	movwf	fsr2l,c
 10914  004CE4  0E00               	movlw	0
 10915  004CE6  2048               	addwfc	btemp+11,w,c
 10916  004CE8  6EDA               	movwf	fsr2h,c
 10917  004CEA  0E40               	movlw	64
 10918  004CEC  60DF               	cpfslt	indf2,c
 10919  004CEE  D040               	goto	l1435
 10920                           
 10921                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 10922                           ;stkvar	_c @ sp[(0)+-3]
 10923                           ;stkvar	__this @ sp[(0)+-2]
 10924  004CF0  0EFE               	movlw	-2
 10925  004CF2  006F FF8C  F047    	movff	plusw1,btemp+10
 10926  004CF8  0EFF               	movlw	-1
 10927  004CFA  006F FF8C  F048    	movff	plusw1,btemp+11
 10928  004D00  0E40               	movlw	64
 10929  004D02  2447               	addwf	btemp+10,w,c
 10930  004D04  6ED9               	movwf	fsr2l,c
 10931  004D06  0E00               	movlw	0
 10932  004D08  2048               	addwfc	btemp+11,w,c
 10933  004D0A  6EDA               	movwf	fsr2h,c
 10934  004D0C  50DF               	movf	indf2,w,c
 10935  004D0E  6E48               	movwf	btemp+11,c
 10936                           
 10937                           ;stkvar	__this @ sp[(0)+-2]
 10938  004D10  0EFE               	movlw	-2
 10939  004D12  006F FF8C  F045    	movff	plusw1,btemp+8
 10940  004D18  0EFF               	movlw	-1
 10941  004D1A  006F FF8C  F046    	movff	plusw1,btemp+9
 10942  004D20  5048               	movf	btemp+11,w,c
 10943  004D22  2445               	addwf	btemp+8,w,c
 10944  004D24  6ED9               	movwf	fsr2l,c
 10945  004D26  0E00               	movlw	0
 10946  004D28  2046               	addwfc	btemp+9,w,c
 10947  004D2A  6EDA               	movwf	fsr2h,c
 10948  004D2C  0EFD               	movlw	-3
 10949  004D2E  006F FF8F FFDF     	movff	plusw1,indf2
 10950                           
 10951                           ;ringbufs.c: 71:   ++_this->head;
 10952                           ;stkvar	__this @ sp[(0)+-2]
 10953  004D34  0EFE               	movlw	-2
 10954  004D36  006F FF8C  F047    	movff	plusw1,btemp+10
 10955  004D3C  0EFF               	movlw	-1
 10956  004D3E  006F FF8C  F048    	movff	plusw1,btemp+11
 10957  004D44  0E40               	movlw	64
 10958  004D46  2447               	addwf	btemp+10,w,c
 10959  004D48  6ED9               	movwf	fsr2l,c
 10960  004D4A  0E00               	movlw	0
 10961  004D4C  2048               	addwfc	btemp+11,w,c
 10962  004D4E  6EDA               	movwf	fsr2h,c
 10963  004D50  2ADF               	incf	indf2,f,c
 10964                           
 10965                           ;ringbufs.c: 72:   ++_this->count;
 10966                           ;stkvar	__this @ sp[(0)+-2]
 10967  004D52  0EFE               	movlw	-2
 10968  004D54  006F FF8C  F047    	movff	plusw1,btemp+10
 10969  004D5A  0EFF               	movlw	-1
 10970  004D5C  006F FF8C  F048    	movff	plusw1,btemp+11
 10971  004D62  0E42               	movlw	66
 10972  004D64  2447               	addwf	btemp+10,w,c
 10973  004D66  6ED9               	movwf	fsr2l,c
 10974  004D68  0E00               	movlw	0
 10975  004D6A  2048               	addwfc	btemp+11,w,c
 10976  004D6C  6EDA               	movwf	fsr2h,c
 10977  004D6E  2ADF               	incf	indf2,f,c
 10978  004D70                     l1435:
 10979                           
 10980                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 10981  004D70  52E5               	movf	postdec1,f,c
 10982  004D72  52E5               	movf	postdec1,f,c
 10983  004D74  52E5               	movf	postdec1,f,c
 10984  004D76  0012               	return		;funcret
 10985  004D78                     __end_of_ringBufS_put_dma:
 10986                           	opt callstack 0
 10987                           
 10988 ;; *************** function _atoi *****************
 10989 ;; Defined at:
 10990 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
 10991 ;; Parameters:    Size  Location     Type
 10992 ;;  s               1  [STACK] PTR const unsigned char 
 10993 ;;		 -> STR_12(3), STR_11(3), STR_10(3), STR_9(21), 
 10994 ;;		 -> STR_8(17), STR_7(17), STR_6(17), STR_5(23), 
 10995 ;;		 -> STR_4(6), STR_3(14), STR_2(12), STR_1(61), 
 10996 ;; Auto vars:     Size  Location     Type
 10997 ;;  n               2  [STACK] int 
 10998 ;;  neg             2  [STACK] int 
 10999 ;; Return value:  Size  Location     Type
 11000 ;;                  2  [STACK] int 
 11001 ;; Registers used:
 11002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 11003 ;; Tracked objects:
 11004 ;;		On entry : 0/1
 11005 ;;		On exit  : 0/0
 11006 ;;		Unchanged: 0/0
 11007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11012 ;;Total ram usage:        0 bytes
 11013 ;; Hardware stack levels used:    1
 11014 ;; Hardware stack levels required when called:    4
 11015 ;; This function calls:
 11016 ;;		_isdigit
 11017 ;;		_isspace
 11018 ;; This function is called by:
 11019 ;;		_vfpfcnvrt
 11020 ;; This function uses a reentrant model
 11021 ;;
 11022                           
 11023                           	psect	text51
 11024  003FC0                     __ptext51:
 11025                           	opt callstack 0
 11026  003FC0                     _atoi:
 11027                           	opt callstack 0
 11028                           
 11029                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11030  003FC0  0E09               	movlw	9
 11031  003FC2  26E1               	addwf	fsr1l,f,c
 11032  003FC4  0E00               	movlw	0
 11033  003FC6  22E2               	addwfc	fsr1h,f,c
 11034                           
 11035                           ;stkvar	_n @ sp[(-9)+5]
 11036                           
 11037                           ;incstack = 0
 11038  003FC8  0EFC               	movlw	-4
 11039  003FCA  6AE3               	clrf	plusw1,c
 11040  003FCC  0EFD               	movlw	-3
 11041  003FCE  6AE3               	clrf	plusw1,c
 11042                           
 11043                           ;stkvar	_neg @ sp[(-9)+7]
 11044  003FD0  0EFE               	movlw	-2
 11045  003FD2  6AE3               	clrf	plusw1,c
 11046  003FD4  0EFF               	movlw	-1
 11047  003FD6  6AE3               	clrf	plusw1,c
 11048  003FD8  D002               	goto	l2469
 11049  003FDA                     l5262:
 11050                           
 11051                           ;stkvar	_s @ sp[(-9)+-1]
 11052  003FDA  0EF6               	movlw	-10
 11053  003FDC  2AE3               	incf	plusw1,f,c
 11054  003FDE                     l2469:
 11055                           
 11056                           ;stkvar	_atoi$4251 @ sp[(-9)+4]
 11057  003FDE  0EFB               	movlw	-5
 11058  003FE0  6AE3               	clrf	plusw1,c
 11059  003FE2  2AE3               	incf	plusw1,f,c
 11060                           
 11061                           ;stkvar	_s @ sp[(-9)+-1]
 11062  003FE4  50E1               	movf	fsr1l,w,c
 11063  003FE6  0FF6               	addlw	-10
 11064  003FE8  6ED9               	movwf	fsr2l,c
 11065  003FEA  50E2               	movf	fsr1h,w,c
 11066  003FEC  6EDA               	movwf	fsr2h,c
 11067  003FEE  0EFF               	movlw	255
 11068  003FF0  22DA               	addwfc	fsr2h,f,c
 11069  003FF2  006F FF7F FFF6     	movff	indf2,tblptrl
 11070  003FF8                     	if	1	;There is more than 1 active tblptr byte
 11071  003FF8  0E20               	movlw	high __smallconst
 11072  003FFA  6EF7               	movwf	tblptrh,c
 11073  003FFC                     	endif
 11074  003FFC                     	if	0	;tblptru may be non-zero
 11075  003FFC                     	endif
 11076  003FFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11077  003FFC  0E00               	movlw	low (__smallconst shr (0+16))
 11078  003FFE  6EF8               	movwf	tblptru,c
 11079  004000                     	endif
 11080  004000  0008               	tblrd		*
 11081  004002  50F5               	movf	tablat,w,c
 11082  004004  0A20               	xorlw	32
 11083  004006  B4D8               	btfsc	status,2,c
 11084  004008  D022               	goto	l5270
 11085  00400A  0EF7               	movlw	247
 11086  00400C  6E47               	movwf	btemp+10,c
 11087  00400E  0EFF               	movlw	255
 11088  004010  6E48               	movwf	btemp+11,c
 11089                           
 11090                           ;stkvar	_s @ sp[(-9)+-1]
 11091  004012  50E1               	movf	fsr1l,w,c
 11092  004014  0FF6               	addlw	-10
 11093  004016  6ED9               	movwf	fsr2l,c
 11094  004018  50E2               	movf	fsr1h,w,c
 11095  00401A  6EDA               	movwf	fsr2h,c
 11096  00401C  0EFF               	movlw	255
 11097  00401E  22DA               	addwfc	fsr2h,f,c
 11098  004020  006F FF7F FFF6     	movff	indf2,tblptrl
 11099  004026                     	if	1	;There is more than 1 active tblptr byte
 11100  004026  0E20               	movlw	high __smallconst
 11101  004028  6EF7               	movwf	tblptrh,c
 11102  00402A                     	endif
 11103  00402A                     	if	0	;tblptru may be non-zero
 11104  00402A                     	endif
 11105  00402A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11106  00402A  0E00               	movlw	low (__smallconst shr (0+16))
 11107  00402C  6EF8               	movwf	tblptru,c
 11108  00402E                     	endif
 11109  00402E  0008               	tblrd		*
 11110  004030  50F5               	movf	tablat,w,c
 11111  004032  6E45               	movwf	btemp+8,c
 11112  004034  6A46               	clrf	btemp+9,c
 11113  004036  5047               	movf	btemp+10,w,c
 11114  004038  2645               	addwf	btemp+8,f,c
 11115  00403A  5048               	movf	btemp+11,w,c
 11116  00403C  2246               	addwfc	btemp+9,f,c
 11117  00403E  5046               	movf	btemp+9,w,c
 11118  004040  E104               	bnz	u2970
 11119  004042  0E05               	movlw	5
 11120  004044  5C45               	subwf	btemp+8,w,c
 11121  004046  A0D8               	btfss	status,0,c
 11122  004048  D002               	goto	l5270
 11123  00404A                     u2970:
 11124                           
 11125                           ;stkvar	_atoi$4251 @ sp[(-9)+4]
 11126  00404A  0EFB               	movlw	-5
 11127  00404C  6AE3               	clrf	plusw1,c
 11128  00404E                     l5270:
 11129                           
 11130                           ;stkvar	_atoi$4251 @ sp[(-9)+4]
 11131  00404E  0EFB               	movlw	-5
 11132  004050  50E3               	movf	plusw1,w,c
 11133  004052  6E47               	movwf	btemp+10,c
 11134  004054  6A48               	clrf	btemp+11,c
 11135                           
 11136                           ;stkvar	_atoi$4250 @ sp[(-9)+2]
 11137  004056  0EF9               	movlw	-7
 11138  004058  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11139  00405E  0EFA               	movlw	-6
 11140  004060  0060  F123  FFE3   	movff	btemp+11,plusw1
 11141                           
 11142                           ;stkvar	_atoi$4250 @ sp[(-9)+2]
 11143  004066  0EF9               	movlw	-7
 11144  004068  006F FF8C  F03D    	movff	plusw1,btemp
 11145  00406E  0EFA               	movlw	-6
 11146  004070  50E3               	movf	plusw1,w,c
 11147  004072  103D               	iorwf	btemp,w,c
 11148  004074  B4D8               	btfsc	status,2,c
 11149  004076  D010               	goto	l5280
 11150  004078  D7B0               	goto	l5262
 11151  00407A                     l5276:
 11152  00407A  0E01               	movlw	1
 11153  00407C  6E47               	movwf	btemp+10,c
 11154  00407E  0E00               	movlw	0
 11155  004080  6E48               	movwf	btemp+11,c
 11156                           
 11157                           ;stkvar	_neg @ sp[(-9)+7]
 11158  004082  0EFE               	movlw	-2
 11159  004084  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11160  00408A  0EFF               	movlw	-1
 11161  00408C  0060  F123  FFE3   	movff	btemp+11,plusw1
 11162  004092                     l5278:
 11163                           
 11164                           ;stkvar	_s @ sp[(-9)+-1]
 11165  004092  0EF6               	movlw	-10
 11166  004094  2AE3               	incf	plusw1,f,c
 11167  004096  D051               	goto	l5286
 11168  004098                     l5280:
 11169                           
 11170                           ;stkvar	_s @ sp[(-9)+-1]
 11171  004098  50E1               	movf	fsr1l,w,c
 11172  00409A  0FF6               	addlw	-10
 11173  00409C  6ED9               	movwf	fsr2l,c
 11174  00409E  50E2               	movf	fsr1h,w,c
 11175  0040A0  6EDA               	movwf	fsr2h,c
 11176  0040A2  0EFF               	movlw	255
 11177  0040A4  22DA               	addwfc	fsr2h,f,c
 11178  0040A6  006F FF7F FFF6     	movff	indf2,tblptrl
 11179  0040AC                     	if	1	;There is more than 1 active tblptr byte
 11180  0040AC  0E20               	movlw	high __smallconst
 11181  0040AE  6EF7               	movwf	tblptrh,c
 11182  0040B0                     	endif
 11183  0040B0                     	if	0	;tblptru may be non-zero
 11184  0040B0                     	endif
 11185  0040B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11186  0040B0  0E00               	movlw	low (__smallconst shr (0+16))
 11187  0040B2  6EF8               	movwf	tblptru,c
 11188  0040B4                     	endif
 11189  0040B4  0008               	tblrd		*
 11190  0040B6  50F5               	movf	tablat,w,c
 11191  0040B8  6E47               	movwf	btemp+10,c
 11192  0040BA  6A48               	clrf	btemp+11,c
 11193                           
 11194                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11195                           ; Switch size 1, requested type "simple"
 11196                           ; Number of cases is 1, Range of values is 0 to 0
 11197                           ; switch strategies available:
 11198                           ; Name         Instructions Cycles
 11199                           ; simple_byte            4     3 (average)
 11200                           ;	Chosen strategy is simple_byte
 11201  0040BC  5048               	movf	btemp+11,w,c
 11202  0040BE  0A00               	xorlw	0	; case 0
 11203  0040C0  A4D8               	btfss	status,2,c
 11204  0040C2  D03B               	goto	l5286
 11205                           
 11206                           ; Switch size 1, requested type "simple"
 11207                           ; Number of cases is 2, Range of values is 43 to 45
 11208                           ; switch strategies available:
 11209                           ; Name         Instructions Cycles
 11210                           ; simple_byte            7     4 (average)
 11211                           ;	Chosen strategy is simple_byte
 11212  0040C4  5047               	movf	btemp+10,w,c
 11213  0040C6  0A2B               	xorlw	43	; case 43
 11214  0040C8  B4D8               	btfsc	status,2,c
 11215  0040CA  D7E3               	goto	l5278
 11216  0040CC  0A06               	xorlw	6	; case 45
 11217  0040CE  B4D8               	btfsc	status,2,c
 11218  0040D0  D7D4               	goto	l5276
 11219  0040D2  D033               	goto	l5286
 11220  0040D4                     l5282:
 11221                           
 11222                           ;stkvar	_n @ sp[(-9)+5]
 11223  0040D4  0EFC               	movlw	-4
 11224  0040D6  006F FF8C  F047    	movff	plusw1,btemp+10
 11225  0040DC  0EFD               	movlw	-3
 11226  0040DE  006F FF8C  F048    	movff	plusw1,btemp+11
 11227  0040E4  0E0A               	movlw	10
 11228  0040E6  0247               	mulwf	btemp+10,c
 11229  0040E8  006F FFCC  F045    	movff	prodl,btemp+8
 11230  0040EE  006F FFD0  F046    	movff	prodh,btemp+9
 11231  0040F4  0248               	mulwf	btemp+11,c
 11232  0040F6  50F3               	movf	prodl,w,c
 11233  0040F8  2646               	addwf	btemp+9,f,c
 11234                           
 11235                           ;stkvar	_s @ sp[(-9)+-1]
 11236  0040FA  50E1               	movf	fsr1l,w,c
 11237  0040FC  0FF6               	addlw	-10
 11238  0040FE  6ED9               	movwf	fsr2l,c
 11239  004100  50E2               	movf	fsr1h,w,c
 11240  004102  6EDA               	movwf	fsr2h,c
 11241  004104  0EFF               	movlw	255
 11242  004106  22DA               	addwfc	fsr2h,f,c
 11243  004108  006F FF7F FFF6     	movff	indf2,tblptrl
 11244  00410E                     	if	1	;There is more than 1 active tblptr byte
 11245  00410E  0E20               	movlw	high __smallconst
 11246  004110  6EF7               	movwf	tblptrh,c
 11247  004112                     	endif
 11248  004112                     	if	0	;tblptru may be non-zero
 11249  004112                     	endif
 11250  004112                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11251  004112  0E00               	movlw	low (__smallconst shr (0+16))
 11252  004114  6EF8               	movwf	tblptru,c
 11253  004116                     	endif
 11254  004116  0008               	tblrd		*
 11255  004118  50F5               	movf	tablat,w,c
 11256  00411A  5E45               	subwf	btemp+8,f,c
 11257  00411C  0E00               	movlw	0
 11258  00411E  5A46               	subwfb	btemp+9,f,c
 11259  004120  0E30               	movlw	48
 11260  004122  2645               	addwf	btemp+8,f,c
 11261  004124  0E00               	movlw	0
 11262  004126  2246               	addwfc	btemp+9,f,c
 11263                           
 11264                           ;stkvar	_n @ sp[(-9)+5]
 11265  004128  0EFC               	movlw	-4
 11266  00412A  0060  F117  FFE3   	movff	btemp+8,plusw1
 11267  004130  0EFD               	movlw	-3
 11268  004132  0060  F11B  FFE3   	movff	btemp+9,plusw1
 11269  004138  D7AC               	goto	l5278
 11270  00413A                     l5286:
 11271  00413A  0ED0               	movlw	208
 11272  00413C  6E47               	movwf	btemp+10,c
 11273  00413E  0EFF               	movlw	255
 11274  004140  6E48               	movwf	btemp+11,c
 11275                           
 11276                           ;stkvar	_s @ sp[(-9)+-1]
 11277  004142  50E1               	movf	fsr1l,w,c
 11278  004144  0FF6               	addlw	-10
 11279  004146  6ED9               	movwf	fsr2l,c
 11280  004148  50E2               	movf	fsr1h,w,c
 11281  00414A  6EDA               	movwf	fsr2h,c
 11282  00414C  0EFF               	movlw	255
 11283  00414E  22DA               	addwfc	fsr2h,f,c
 11284  004150  006F FF7F FFF6     	movff	indf2,tblptrl
 11285  004156                     	if	1	;There is more than 1 active tblptr byte
 11286  004156  0E20               	movlw	high __smallconst
 11287  004158  6EF7               	movwf	tblptrh,c
 11288  00415A                     	endif
 11289  00415A                     	if	0	;tblptru may be non-zero
 11290  00415A                     	endif
 11291  00415A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11292  00415A  0E00               	movlw	low (__smallconst shr (0+16))
 11293  00415C  6EF8               	movwf	tblptru,c
 11294  00415E                     	endif
 11295  00415E  0008               	tblrd		*
 11296  004160  50F5               	movf	tablat,w,c
 11297  004162  6E45               	movwf	btemp+8,c
 11298  004164  6A46               	clrf	btemp+9,c
 11299  004166  5047               	movf	btemp+10,w,c
 11300  004168  2645               	addwf	btemp+8,f,c
 11301  00416A  5048               	movf	btemp+11,w,c
 11302  00416C  2246               	addwfc	btemp+9,f,c
 11303  00416E  5046               	movf	btemp+9,w,c
 11304  004170  E106               	bnz	u2990
 11305  004172  0E0A               	movlw	10
 11306  004174  5C45               	subwf	btemp+8,w,c
 11307  004176  B0D8               	btfsc	status,0,c
 11308  004178  D002               	goto	u2990
 11309  00417A  0E01               	movlw	1
 11310  00417C  D001               	goto	u3000
 11311  00417E                     u2990:
 11312  00417E  0E00               	movlw	0
 11313  004180                     u3000:
 11314  004180  6E47               	movwf	btemp+10,c
 11315  004182  6A48               	clrf	btemp+11,c
 11316                           
 11317                           ;stkvar	_atoi$4252 @ sp[(-9)+0]
 11318  004184  0EF7               	movlw	-9
 11319  004186  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11320  00418C  0EF8               	movlw	-8
 11321  00418E  0060  F123  FFE3   	movff	btemp+11,plusw1
 11322                           
 11323                           ;stkvar	_atoi$4252 @ sp[(-9)+0]
 11324  004194  0EF7               	movlw	-9
 11325  004196  006F FF8C  F03D    	movff	plusw1,btemp
 11326  00419C  0EF8               	movlw	-8
 11327  00419E  50E3               	movf	plusw1,w,c
 11328  0041A0  103D               	iorwf	btemp,w,c
 11329  0041A2  A4D8               	btfss	status,2,c
 11330  0041A4  D797               	goto	l5282
 11331                           
 11332                           ;stkvar	_neg @ sp[(-9)+7]
 11333  0041A6  0EFE               	movlw	-2
 11334  0041A8  006F FF8C  F03D    	movff	plusw1,btemp
 11335  0041AE  0EFF               	movlw	-1
 11336  0041B0  50E3               	movf	plusw1,w,c
 11337  0041B2  103D               	iorwf	btemp,w,c
 11338  0041B4  A4D8               	btfss	status,2,c
 11339  0041B6  D00E               	goto	l5296
 11340                           
 11341                           ;stkvar	_n @ sp[(-9)+5]
 11342  0041B8  0EFC               	movlw	-4
 11343  0041BA  006F FF8C  F03D    	movff	plusw1,btemp
 11344  0041C0  1E3D               	comf	btemp,f,c
 11345  0041C2  0EFD               	movlw	-3
 11346  0041C4  006F FF8C  F03E    	movff	plusw1,btemp+1
 11347  0041CA  1E3E               	comf	btemp+1,f,c
 11348  0041CC  2A3D               	incf	btemp,f,c
 11349  0041CE  B4D8               	btfsc	status,2,c
 11350  0041D0  2A3E               	incf	btemp+1,f,c
 11351  0041D2  D008               	goto	l2493
 11352  0041D4                     l5296:
 11353                           
 11354                           ;stkvar	_n @ sp[(-9)+5]
 11355  0041D4  0EFC               	movlw	-4
 11356  0041D6  006F FF8C  F03D    	movff	plusw1,btemp
 11357  0041DC  0EFD               	movlw	-3
 11358  0041DE  006F FF8C  F03E    	movff	plusw1,btemp+1
 11359  0041E4                     l2493:
 11360                           
 11361                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
 11362  0041E4  0EF6               	movlw	246
 11363  0041E6  26E1               	addwf	fsr1l,f,c
 11364  0041E8  0EFF               	movlw	255
 11365  0041EA  22E2               	addwfc	fsr1h,f,c
 11366  0041EC  0012               	return		;funcret
 11367  0041EE                     __end_of_atoi:
 11368                           	opt callstack 0
 11369                           
 11370 ;; *************** function _isspace *****************
 11371 ;; Defined at:
 11372 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
 11373 ;; Parameters:    Size  Location     Type
 11374 ;;  c               2  [STACK] int 
 11375 ;; Auto vars:     Size  Location     Type
 11376 ;;		None
 11377 ;; Return value:  Size  Location     Type
 11378 ;;                  2  [STACK] int 
 11379 ;; Registers used:
 11380 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11381 ;; Tracked objects:
 11382 ;;		On entry : 0/0
 11383 ;;		On exit  : 0/0
 11384 ;;		Unchanged: 0/0
 11385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11390 ;;Total ram usage:        0 bytes
 11391 ;; Hardware stack levels used:    1
 11392 ;; Hardware stack levels required when called:    3
 11393 ;; This function calls:
 11394 ;;		Nothing
 11395 ;; This function is called by:
 11396 ;;		_atoi
 11397 ;; This function uses a reentrant model
 11398 ;;
 11399                           
 11400                           	psect	text52
 11401  0054AA                     __ptext52:
 11402                           	opt callstack 0
 11403  0054AA                     _isspace:
 11404                           	opt callstack 0
 11405                           
 11406                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11407  0054AA  52E6               	movf	postinc1,f,c
 11408                           
 11409                           ;stkvar	_isspace$4277 @ sp[(-1)+0]
 11410                           
 11411                           ;incstack = 0
 11412  0054AC  0EFF               	movlw	-1
 11413  0054AE  6AE3               	clrf	plusw1,c
 11414  0054B0  2AE3               	incf	plusw1,f,c
 11415                           
 11416                           ;stkvar	_c @ sp[(-1)+-2]
 11417  0054B2  0EFD               	movlw	-3
 11418  0054B4  006F FF8C  F03D    	movff	plusw1,btemp
 11419  0054BA  0E20               	movlw	32
 11420  0054BC  183D               	xorwf	btemp,w,c
 11421  0054BE  E104               	bnz	u2490
 11422  0054C0  0EFE               	movlw	-2
 11423  0054C2  50E3               	movf	plusw1,w,c
 11424  0054C4  B4D8               	btfsc	status,2,c
 11425  0054C6  D012               	goto	l5052
 11426  0054C8                     u2490:
 11427                           
 11428                           ;stkvar	_c @ sp[(-1)+-2]
 11429  0054C8  0EFD               	movlw	-3
 11430  0054CA  50E3               	movf	plusw1,w,c
 11431  0054CC  0FF7               	addlw	247
 11432  0054CE  6E47               	movwf	btemp+10,c
 11433  0054D0  0EFE               	movlw	-2
 11434  0054D2  006F FF8C  F048    	movff	plusw1,btemp+11
 11435  0054D8  0EFF               	movlw	255
 11436  0054DA  2248               	addwfc	btemp+11,f,c
 11437  0054DC  5048               	movf	btemp+11,w,c
 11438  0054DE  E104               	bnz	u2500
 11439  0054E0  0E05               	movlw	5
 11440  0054E2  5C47               	subwf	btemp+10,w,c
 11441  0054E4  A0D8               	btfss	status,0,c
 11442  0054E6  D002               	goto	l5052
 11443  0054E8                     u2500:
 11444                           
 11445                           ;stkvar	_isspace$4277 @ sp[(-1)+0]
 11446  0054E8  0EFF               	movlw	-1
 11447  0054EA  6AE3               	clrf	plusw1,c
 11448  0054EC                     l5052:
 11449                           
 11450                           ;stkvar	_isspace$4277 @ sp[(-1)+0]
 11451  0054EC  0EFF               	movlw	-1
 11452  0054EE  50E3               	movf	plusw1,w,c
 11453  0054F0  6E3D               	movwf	btemp,c
 11454  0054F2  6A3E               	clrf	btemp+1,c
 11455                           
 11456                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11457  0054F4  52E5               	movf	postdec1,f,c
 11458  0054F6  52E5               	movf	postdec1,f,c
 11459  0054F8  52E5               	movf	postdec1,f,c
 11460  0054FA  0012               	return		;funcret
 11461  0054FC                     __end_of_isspace:
 11462                           	opt callstack 0
 11463                           
 11464 ;; *************** function _isdigit *****************
 11465 ;; Defined at:
 11466 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
 11467 ;; Parameters:    Size  Location     Type
 11468 ;;  c               2  [STACK] int 
 11469 ;; Auto vars:     Size  Location     Type
 11470 ;;		None
 11471 ;; Return value:  Size  Location     Type
 11472 ;;                  2  [STACK] int 
 11473 ;; Registers used:
 11474 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 11475 ;; Tracked objects:
 11476 ;;		On entry : 0/0
 11477 ;;		On exit  : 0/0
 11478 ;;		Unchanged: 0/0
 11479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11484 ;;Total ram usage:        0 bytes
 11485 ;; Hardware stack levels used:    1
 11486 ;; Hardware stack levels required when called:    3
 11487 ;; This function calls:
 11488 ;;		Nothing
 11489 ;; This function is called by:
 11490 ;;		_vfpfcnvrt
 11491 ;;		_atoi
 11492 ;; This function uses a reentrant model
 11493 ;;
 11494                           
 11495                           	psect	text53
 11496  0058D2                     __ptext53:
 11497                           	opt callstack 0
 11498  0058D2                     _isdigit:
 11499                           	opt callstack 24
 11500                           
 11501                           ;stkvar	_c @ sp[(0)+-2]
 11502                           
 11503                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11504                           ;incstack = 0
 11505  0058D2  0EFE               	movlw	-2
 11506  0058D4  50E3               	movf	plusw1,w,c
 11507  0058D6  0FD0               	addlw	208
 11508  0058D8  6E47               	movwf	btemp+10,c
 11509  0058DA  0EFF               	movlw	-1
 11510  0058DC  006F FF8C  F048    	movff	plusw1,btemp+11
 11511  0058E2  0EFF               	movlw	255
 11512  0058E4  2248               	addwfc	btemp+11,f,c
 11513  0058E6  5048               	movf	btemp+11,w,c
 11514  0058E8  E106               	bnz	u2240
 11515  0058EA  0E0A               	movlw	10
 11516  0058EC  5C47               	subwf	btemp+10,w,c
 11517  0058EE  B0D8               	btfsc	status,0,c
 11518  0058F0  D002               	goto	u2240
 11519  0058F2  0E01               	movlw	1
 11520  0058F4  D001               	goto	u2250
 11521  0058F6                     u2240:
 11522  0058F6  0E00               	movlw	0
 11523  0058F8                     u2250:
 11524  0058F8  6E3D               	movwf	btemp,c
 11525  0058FA  6A3E               	clrf	btemp+1,c
 11526                           
 11527                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 11528  0058FC  52E5               	movf	postdec1,f,c
 11529  0058FE  52E5               	movf	postdec1,f,c
 11530  005900  0012               	return		;funcret
 11531  005902                     __end_of_isdigit:
 11532                           	opt callstack 0
 11533                           
 11534 ;; *************** function _SYSTEM_Initialize *****************
 11535 ;; Defined at:
 11536 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11537 ;; Parameters:    Size  Location     Type
 11538 ;;		None
 11539 ;; Auto vars:     Size  Location     Type
 11540 ;;		None
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  1  [STACK] void 
 11543 ;; Registers used:
 11544 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 11545 ;; Tracked objects:
 11546 ;;		On entry : 0/0
 11547 ;;		On exit  : 3F/3C
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11554 ;;Total ram usage:        0 bytes
 11555 ;; Hardware stack levels used:    1
 11556 ;; Hardware stack levels required when called:    5
 11557 ;; This function calls:
 11558 ;;		_ADCC_Initialize
 11559 ;;		_CLC1_Initialize
 11560 ;;		_CLKREF_Initialize
 11561 ;;		_DMA1_Initialize
 11562 ;;		_DSM_Initialize
 11563 ;;		_EXT_INT_Initialize
 11564 ;;		_INTERRUPT_Initialize
 11565 ;;		_NCO1_Initialize
 11566 ;;		_OSCILLATOR_Initialize
 11567 ;;		_PIN_MANAGER_Initialize
 11568 ;;		_PMD_Initialize
 11569 ;;		_SPI1_Initialize
 11570 ;;		_TMR5_Initialize
 11571 ;;		_TMR6_Initialize
 11572 ;;		_UART1_Initialize
 11573 ;;		_UART2_Initialize
 11574 ;; This function is called by:
 11575 ;;		_main
 11576 ;; This function uses a reentrant model
 11577 ;;
 11578                           
 11579                           	psect	text54
 11580  0056F8                     __ptext54:
 11581                           	opt callstack 0
 11582  0056F8                     _SYSTEM_Initialize:
 11583                           	opt callstack 25
 11584                           
 11585                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 11586                           
 11587                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11588                           ;incstack = 0
 11589  0056F8  EC62  F029         	call	_INTERRUPT_Initialize	;wreg free
 11590                           
 11591                           ; BSR set to: 57
 11592                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 11593  0056FC  EC8C  F02F         	call	_PMD_Initialize	;wreg free
 11594                           
 11595                           ; BSR set to: 57
 11596                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 11597  005700  EC0D  F027         	call	_PIN_MANAGER_Initialize	;wreg free
 11598                           
 11599                           ; BSR set to: 58
 11600                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 11601  005704  EC81  F02F         	call	_OSCILLATOR_Initialize	;wreg free
 11602                           
 11603                           ; BSR set to: 57
 11604                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 11605  005708  ECCC  F02A         	call	_ADCC_Initialize	;wreg free
 11606                           
 11607                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 11608  00570C  EC33  F02F         	call	_NCO1_Initialize	;wreg free
 11609                           
 11610                           ; BSR set to: 63
 11611                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 11612  005710  ECA6  F02A         	call	_EXT_INT_Initialize	;wreg free
 11613                           
 11614                           ; BSR set to: 57
 11615                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 11616  005714  ECA3  F02D         	call	_TMR6_Initialize	;wreg free
 11617                           
 11618                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 11619  005718  EC90  F02E         	call	_CLC1_Initialize	;wreg free
 11620                           
 11621                           ; BSR set to: 60
 11622                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 11623  00571C  EC14  F02B         	call	_TMR5_Initialize	;wreg free
 11624                           
 11625                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 11626  005720  EC41  F02F         	call	_DSM_Initialize	;wreg free
 11627                           
 11628                           ; BSR set to: 60
 11629                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 11630  005724  EC95  F029         	call	_UART1_Initialize	;wreg free
 11631                           
 11632                           ; BSR set to: 57
 11633                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 11634  005728  ECF8  F029         	call	_UART2_Initialize	;wreg free
 11635                           
 11636                           ; BSR set to: 57
 11637                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 11638  00572C  EC76  F02F         	call	_SPI1_Initialize	;wreg free
 11639                           
 11640                           ; BSR set to: 61
 11641                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 11642  005730  EC2D  F029         	call	_DMA1_Initialize	;wreg free
 11643                           
 11644                           ; BSR set to: 59
 11645                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 11646  005734  ECC4  F02F         	call	_CLKREF_Initialize	;wreg free
 11647                           
 11648                           ; BSR set to: 60
 11649                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 11650  005738  0012               	return		;funcret
 11651  00573A                     __end_of_SYSTEM_Initialize:
 11652                           	opt callstack 0
 11653                           
 11654 ;; *************** function _UART2_Initialize *****************
 11655 ;; Defined at:
 11656 ;;		line 78 in file "mcc_generated_files/uart2.c"
 11657 ;; Parameters:    Size  Location     Type
 11658 ;;		None
 11659 ;; Auto vars:     Size  Location     Type
 11660 ;;		None
 11661 ;; Return value:  Size  Location     Type
 11662 ;;                  1  [STACK] void 
 11663 ;; Registers used:
 11664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 11665 ;; Tracked objects:
 11666 ;;		On entry : 3F/39
 11667 ;;		On exit  : 3F/39
 11668 ;;		Unchanged: 0/0
 11669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11674 ;;Total ram usage:        0 bytes
 11675 ;; Hardware stack levels used:    1
 11676 ;; Hardware stack levels required when called:    4
 11677 ;; This function calls:
 11678 ;;		_UART2_SetRxInterruptHandler
 11679 ;;		_UART2_SetTxInterruptHandler
 11680 ;; This function is called by:
 11681 ;;		_SYSTEM_Initialize
 11682 ;; This function uses a reentrant model
 11683 ;;
 11684                           
 11685                           	psect	text55
 11686  0053F0                     __ptext55:
 11687                           	opt callstack 0
 11688  0053F0                     _UART2_Initialize:
 11689                           	opt callstack 25
 11690                           
 11691                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 11692                           
 11693                           ; BSR set to: 60
 11694                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11695                           ;incstack = 0
 11696  0053F0  0139               	movlb	57	; () banked
 11697  0053F2  9596               	bcf	150,2,b	;volatile
 11698                           
 11699                           ; BSR set to: 57
 11700                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 11701  0053F4  0E0C               	movlw	low _UART2_Receive_ISR
 11702  0053F6  6EE6               	movwf	postinc1,c
 11703  0053F8  0E5E               	movlw	high _UART2_Receive_ISR
 11704  0053FA  6EE6               	movwf	postinc1,c
 11705  0053FC  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 11706  0053FE  6EE6               	movwf	postinc1,c
 11707  005400  EC67  F02D         	call	_UART2_SetRxInterruptHandler	;wreg free
 11708                           
 11709                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 11710  005404  0139               	movlb	57	; () banked
 11711  005406  9796               	bcf	150,3,b	;volatile
 11712                           
 11713                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 11714  005408  0E5A               	movlw	low _UART2_Transmit_ISR
 11715  00540A  6EE6               	movwf	postinc1,c
 11716  00540C  0E59               	movlw	high _UART2_Transmit_ISR
 11717  00540E  6EE6               	movwf	postinc1,c
 11718  005410  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 11719  005412  6EE6               	movwf	postinc1,c
 11720  005414  EC53  F02D         	call	_UART2_SetTxInterruptHandler	;wreg free
 11721                           
 11722                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 11723  005418  013D               	movlb	61	; () banked
 11724  00541A  6BD4               	clrf	212,b	;volatile
 11725                           
 11726                           ; BSR set to: 61
 11727                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 11728  00541C  6BD6               	clrf	214,b	;volatile
 11729                           
 11730                           ; BSR set to: 61
 11731                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 11732  00541E  6BD8               	clrf	216,b	;volatile
 11733                           
 11734                           ; BSR set to: 61
 11735                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 11736  005420  0EB0               	movlw	176
 11737  005422  6FDA               	movwf	218,b	;volatile
 11738                           
 11739                           ; BSR set to: 61
 11740                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 11741  005424  0E80               	movlw	128
 11742  005426  6FDB               	movwf	219,b	;volatile
 11743                           
 11744                           ; BSR set to: 61
 11745                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 11746  005428  6BDC               	clrf	220,b	;volatile
 11747                           
 11748                           ; BSR set to: 61
 11749                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 11750  00542A  0E82               	movlw	130
 11751  00542C  6FDD               	movwf	221,b	;volatile
 11752                           
 11753                           ; BSR set to: 61
 11754                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 11755  00542E  0E06               	movlw	6
 11756  005430  6FDE               	movwf	222,b	;volatile
 11757                           
 11758                           ; BSR set to: 61
 11759                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 11760  005432  6BDF               	clrf	223,b	;volatile
 11761                           
 11762                           ; BSR set to: 61
 11763                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 11764  005434  6BE0               	clrf	224,b	;volatile
 11765                           
 11766                           ; BSR set to: 61
 11767                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 11768  005436  6BE1               	clrf	225,b	;volatile
 11769                           
 11770                           ; BSR set to: 61
 11771                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 11772  005438  6BE2               	clrf	226,b	;volatile
 11773                           
 11774                           ; BSR set to: 61
 11775                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 11776  00543A  6A36               	clrf	_uart2TxHead,c	;volatile
 11777                           
 11778                           ; BSR set to: 61
 11779                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 11780  00543C  6A35               	clrf	_uart2TxTail,c	;volatile
 11781                           
 11782                           ; BSR set to: 61
 11783                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 11784  00543E  0E40               	movlw	64
 11785  005440  6E34               	movwf	_uart2TxBufferRemaining,c	;volatile
 11786                           
 11787                           ; BSR set to: 61
 11788                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 11789  005442  6A33               	clrf	_uart2RxHead,c	;volatile
 11790                           
 11791                           ; BSR set to: 61
 11792                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 11793  005444  6A32               	clrf	_uart2RxTail,c	;volatile
 11794                           
 11795                           ; BSR set to: 61
 11796                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 11797  005446  6A31               	clrf	_uart2RxCount,c	;volatile
 11798                           
 11799                           ; BSR set to: 61
 11800                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 11801  005448  0139               	movlb	57	; () banked
 11802  00544A  8596               	bsf	150,2,b	;volatile
 11803                           
 11804                           ; BSR set to: 57
 11805                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 11806  00544C  0012               	return		;funcret
 11807  00544E                     __end_of_UART2_Initialize:
 11808                           	opt callstack 0
 11809                           
 11810 ;; *************** function _UART2_SetTxInterruptHandler *****************
 11811 ;; Defined at:
 11812 ;;		line 252 in file "mcc_generated_files/uart2.c"
 11813 ;; Parameters:    Size  Location     Type
 11814 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11815 ;;		 -> UART2_Transmit_ISR(1), 
 11816 ;; Auto vars:     Size  Location     Type
 11817 ;;		None
 11818 ;; Return value:  Size  Location     Type
 11819 ;;                  1  [STACK] void 
 11820 ;; Registers used:
 11821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11822 ;; Tracked objects:
 11823 ;;		On entry : 3F/39
 11824 ;;		On exit  : 0/0
 11825 ;;		Unchanged: 0/0
 11826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11831 ;;Total ram usage:        0 bytes
 11832 ;; Hardware stack levels used:    1
 11833 ;; Hardware stack levels required when called:    3
 11834 ;; This function calls:
 11835 ;;		Nothing
 11836 ;; This function is called by:
 11837 ;;		_UART2_Initialize
 11838 ;; This function uses a reentrant model
 11839 ;;
 11840                           
 11841                           	psect	text56
 11842  005AA6                     __ptext56:
 11843                           	opt callstack 0
 11844  005AA6                     _UART2_SetTxInterruptHandler:
 11845                           	opt callstack 25
 11846                           
 11847                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 11848                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11849                           
 11850                           ; BSR set to: 57
 11851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11852                           ;incstack = 0
 11853  005AA6  50E1               	movf	fsr1l,w,c
 11854  005AA8  0FFD               	addlw	-3
 11855  005AAA  6ED9               	movwf	fsr2l,c
 11856  005AAC  50E2               	movf	fsr1h,w,c
 11857  005AAE  6EDA               	movwf	fsr2h,c
 11858  005AB0  0EFF               	movlw	255
 11859  005AB2  22DA               	addwfc	fsr2h,f,c
 11860  005AB4  006F FF78  F013    	movff	postinc2,_UART2_TxInterruptHandler
 11861  005ABA  006F FF78  F014    	movff	postinc2,_UART2_TxInterruptHandler+1
 11862  005AC0  006F FF74  F015    	movff	postdec2,_UART2_TxInterruptHandler+2
 11863                           
 11864                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11865  005AC6  52E5               	movf	postdec1,f,c
 11866  005AC8  52E5               	movf	postdec1,f,c
 11867  005ACA  52E5               	movf	postdec1,f,c
 11868  005ACC  0012               	return		;funcret
 11869  005ACE                     __end_of_UART2_SetTxInterruptHandler:
 11870                           	opt callstack 0
 11871                           
 11872 ;; *************** function _UART2_SetRxInterruptHandler *****************
 11873 ;; Defined at:
 11874 ;;		line 248 in file "mcc_generated_files/uart2.c"
 11875 ;; Parameters:    Size  Location     Type
 11876 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11877 ;;		 -> UART2_Receive_ISR(1), 
 11878 ;; Auto vars:     Size  Location     Type
 11879 ;;		None
 11880 ;; Return value:  Size  Location     Type
 11881 ;;                  1  [STACK] void 
 11882 ;; Registers used:
 11883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11884 ;; Tracked objects:
 11885 ;;		On entry : 3F/39
 11886 ;;		On exit  : 0/0
 11887 ;;		Unchanged: 0/0
 11888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11893 ;;Total ram usage:        0 bytes
 11894 ;; Hardware stack levels used:    1
 11895 ;; Hardware stack levels required when called:    3
 11896 ;; This function calls:
 11897 ;;		Nothing
 11898 ;; This function is called by:
 11899 ;;		_UART2_Initialize
 11900 ;; This function uses a reentrant model
 11901 ;;
 11902                           
 11903                           	psect	text57
 11904  005ACE                     __ptext57:
 11905                           	opt callstack 0
 11906  005ACE                     _UART2_SetRxInterruptHandler:
 11907                           	opt callstack 25
 11908                           
 11909                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 11910                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11911                           
 11912                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11913                           ;incstack = 0
 11914  005ACE  50E1               	movf	fsr1l,w,c
 11915  005AD0  0FFD               	addlw	-3
 11916  005AD2  6ED9               	movwf	fsr2l,c
 11917  005AD4  50E2               	movf	fsr1h,w,c
 11918  005AD6  6EDA               	movwf	fsr2h,c
 11919  005AD8  0EFF               	movlw	255
 11920  005ADA  22DA               	addwfc	fsr2h,f,c
 11921  005ADC  006F FF78  F016    	movff	postinc2,_UART2_RxInterruptHandler
 11922  005AE2  006F FF78  F017    	movff	postinc2,_UART2_RxInterruptHandler+1
 11923  005AE8  006F FF74  F018    	movff	postdec2,_UART2_RxInterruptHandler+2
 11924                           
 11925                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 11926  005AEE  52E5               	movf	postdec1,f,c
 11927  005AF0  52E5               	movf	postdec1,f,c
 11928  005AF2  52E5               	movf	postdec1,f,c
 11929  005AF4  0012               	return		;funcret
 11930  005AF6                     __end_of_UART2_SetRxInterruptHandler:
 11931                           	opt callstack 0
 11932                           
 11933 ;; *************** function _UART1_Initialize *****************
 11934 ;; Defined at:
 11935 ;;		line 78 in file "mcc_generated_files/uart1.c"
 11936 ;; Parameters:    Size  Location     Type
 11937 ;;		None
 11938 ;; Auto vars:     Size  Location     Type
 11939 ;;		None
 11940 ;; Return value:  Size  Location     Type
 11941 ;;                  1  [STACK] void 
 11942 ;; Registers used:
 11943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 11944 ;; Tracked objects:
 11945 ;;		On entry : 3F/3C
 11946 ;;		On exit  : 3F/39
 11947 ;;		Unchanged: 0/0
 11948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11953 ;;Total ram usage:        0 bytes
 11954 ;; Hardware stack levels used:    1
 11955 ;; Hardware stack levels required when called:    4
 11956 ;; This function calls:
 11957 ;;		_UART1_SetRxInterruptHandler
 11958 ;;		_UART1_SetTxInterruptHandler
 11959 ;; This function is called by:
 11960 ;;		_SYSTEM_Initialize
 11961 ;; This function uses a reentrant model
 11962 ;;
 11963                           
 11964                           	psect	text58
 11965  00532A                     __ptext58:
 11966                           	opt callstack 0
 11967  00532A                     _UART1_Initialize:
 11968                           	opt callstack 25
 11969                           
 11970                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 11971                           
 11972                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11973                           ;incstack = 0
 11974  00532A  0139               	movlb	57	; () banked
 11975  00532C  9793               	bcf	147,3,b	;volatile
 11976                           
 11977                           ; BSR set to: 57
 11978                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 11979  00532E  0EEC               	movlw	low _UART1_Receive_ISR
 11980  005330  6EE6               	movwf	postinc1,c
 11981  005332  0E5D               	movlw	high _UART1_Receive_ISR
 11982  005334  6EE6               	movwf	postinc1,c
 11983  005336  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 11984  005338  6EE6               	movwf	postinc1,c
 11985  00533A  EC8F  F02D         	call	_UART1_SetRxInterruptHandler	;wreg free
 11986                           
 11987                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 11988  00533E  0139               	movlb	57	; () banked
 11989  005340  9993               	bcf	147,4,b	;volatile
 11990                           
 11991                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 11992  005342  0E2E               	movlw	low _UART1_Transmit_ISR
 11993  005344  6EE6               	movwf	postinc1,c
 11994  005346  0E59               	movlw	high _UART1_Transmit_ISR
 11995  005348  6EE6               	movwf	postinc1,c
 11996  00534A  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 11997  00534C  6EE6               	movwf	postinc1,c
 11998  00534E  EC7B  F02D         	call	_UART1_SetTxInterruptHandler	;wreg free
 11999                           
 12000                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 12001  005352  013D               	movlb	61	; () banked
 12002  005354  6BEC               	clrf	236,b	;volatile
 12003                           
 12004                           ; BSR set to: 61
 12005                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 12006  005356  6BED               	clrf	237,b	;volatile
 12007                           
 12008                           ; BSR set to: 61
 12009                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 12010  005358  6BEE               	clrf	238,b	;volatile
 12011                           
 12012                           ; BSR set to: 61
 12013                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 12014  00535A  6BEF               	clrf	239,b	;volatile
 12015                           
 12016                           ; BSR set to: 61
 12017                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 12018  00535C  6BF0               	clrf	240,b	;volatile
 12019                           
 12020                           ; BSR set to: 61
 12021                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 12022  00535E  6BF1               	clrf	241,b	;volatile
 12023                           
 12024                           ; BSR set to: 61
 12025                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 12026  005360  0EB0               	movlw	176
 12027  005362  6FF2               	movwf	242,b	;volatile
 12028                           
 12029                           ; BSR set to: 61
 12030                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 12031  005364  0E80               	movlw	128
 12032  005366  6FF3               	movwf	243,b	;volatile
 12033                           
 12034                           ; BSR set to: 61
 12035                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 12036  005368  6BF4               	clrf	244,b	;volatile
 12037                           
 12038                           ; BSR set to: 61
 12039                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 12040  00536A  0E82               	movlw	130
 12041  00536C  6FF5               	movwf	245,b	;volatile
 12042                           
 12043                           ; BSR set to: 61
 12044                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 12045  00536E  0E06               	movlw	6
 12046  005370  6FF6               	movwf	246,b	;volatile
 12047                           
 12048                           ; BSR set to: 61
 12049                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 12050  005372  6BF7               	clrf	247,b	;volatile
 12051                           
 12052                           ; BSR set to: 61
 12053                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 12054  005374  6BF8               	clrf	248,b	;volatile
 12055                           
 12056                           ; BSR set to: 61
 12057                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 12058  005376  6BF9               	clrf	249,b	;volatile
 12059                           
 12060                           ; BSR set to: 61
 12061                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 12062  005378  6BFA               	clrf	250,b	;volatile
 12063                           
 12064                           ; BSR set to: 61
 12065                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 12066  00537A  6A3C               	clrf	_uart1TxHead,c	;volatile
 12067                           
 12068                           ; BSR set to: 61
 12069                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 12070  00537C  6A3B               	clrf	_uart1TxTail,c	;volatile
 12071                           
 12072                           ; BSR set to: 61
 12073                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 12074  00537E  0E40               	movlw	64
 12075  005380  6E3A               	movwf	_uart1TxBufferRemaining,c	;volatile
 12076                           
 12077                           ; BSR set to: 61
 12078                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 12079  005382  6A39               	clrf	_uart1RxHead,c	;volatile
 12080                           
 12081                           ; BSR set to: 61
 12082                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 12083  005384  6A38               	clrf	_uart1RxTail,c	;volatile
 12084                           
 12085                           ; BSR set to: 61
 12086                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 12087  005386  6A37               	clrf	_uart1RxCount,c	;volatile
 12088                           
 12089                           ; BSR set to: 61
 12090                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 12091  005388  0139               	movlb	57	; () banked
 12092  00538A  8793               	bsf	147,3,b	;volatile
 12093                           
 12094                           ; BSR set to: 57
 12095                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 12096  00538C  0012               	return		;funcret
 12097  00538E                     __end_of_UART1_Initialize:
 12098                           	opt callstack 0
 12099                           
 12100 ;; *************** function _UART1_SetTxInterruptHandler *****************
 12101 ;; Defined at:
 12102 ;;		line 244 in file "mcc_generated_files/uart1.c"
 12103 ;; Parameters:    Size  Location     Type
 12104 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12105 ;;		 -> UART1_Transmit_ISR(1), 
 12106 ;; Auto vars:     Size  Location     Type
 12107 ;;		None
 12108 ;; Return value:  Size  Location     Type
 12109 ;;                  1  [STACK] void 
 12110 ;; Registers used:
 12111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12112 ;; Tracked objects:
 12113 ;;		On entry : 3F/39
 12114 ;;		On exit  : 0/0
 12115 ;;		Unchanged: 0/0
 12116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12121 ;;Total ram usage:        0 bytes
 12122 ;; Hardware stack levels used:    1
 12123 ;; Hardware stack levels required when called:    3
 12124 ;; This function calls:
 12125 ;;		Nothing
 12126 ;; This function is called by:
 12127 ;;		_UART1_Initialize
 12128 ;; This function uses a reentrant model
 12129 ;;
 12130                           
 12131                           	psect	text59
 12132  005AF6                     __ptext59:
 12133                           	opt callstack 0
 12134  005AF6                     _UART1_SetTxInterruptHandler:
 12135                           	opt callstack 25
 12136                           
 12137                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 12138                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12139                           
 12140                           ; BSR set to: 57
 12141                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12142                           ;incstack = 0
 12143  005AF6  50E1               	movf	fsr1l,w,c
 12144  005AF8  0FFD               	addlw	-3
 12145  005AFA  6ED9               	movwf	fsr2l,c
 12146  005AFC  50E2               	movf	fsr1h,w,c
 12147  005AFE  6EDA               	movwf	fsr2h,c
 12148  005B00  0EFF               	movlw	255
 12149  005B02  22DA               	addwfc	fsr2h,f,c
 12150  005B04  006F FF78  F00D    	movff	postinc2,_UART1_TxInterruptHandler
 12151  005B0A  006F FF78  F00E    	movff	postinc2,_UART1_TxInterruptHandler+1
 12152  005B10  006F FF74  F00F    	movff	postdec2,_UART1_TxInterruptHandler+2
 12153                           
 12154                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12155  005B16  52E5               	movf	postdec1,f,c
 12156  005B18  52E5               	movf	postdec1,f,c
 12157  005B1A  52E5               	movf	postdec1,f,c
 12158  005B1C  0012               	return		;funcret
 12159  005B1E                     __end_of_UART1_SetTxInterruptHandler:
 12160                           	opt callstack 0
 12161                           
 12162 ;; *************** function _UART1_SetRxInterruptHandler *****************
 12163 ;; Defined at:
 12164 ;;		line 239 in file "mcc_generated_files/uart1.c"
 12165 ;; Parameters:    Size  Location     Type
 12166 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12167 ;;		 -> UART1_Receive_ISR(1), 
 12168 ;; Auto vars:     Size  Location     Type
 12169 ;;		None
 12170 ;; Return value:  Size  Location     Type
 12171 ;;                  1  [STACK] void 
 12172 ;; Registers used:
 12173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12174 ;; Tracked objects:
 12175 ;;		On entry : 3F/39
 12176 ;;		On exit  : 0/0
 12177 ;;		Unchanged: 0/0
 12178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12183 ;;Total ram usage:        0 bytes
 12184 ;; Hardware stack levels used:    1
 12185 ;; Hardware stack levels required when called:    3
 12186 ;; This function calls:
 12187 ;;		Nothing
 12188 ;; This function is called by:
 12189 ;;		_UART1_Initialize
 12190 ;; This function uses a reentrant model
 12191 ;;
 12192                           
 12193                           	psect	text60
 12194  005B1E                     __ptext60:
 12195                           	opt callstack 0
 12196  005B1E                     _UART1_SetRxInterruptHandler:
 12197                           	opt callstack 25
 12198                           
 12199                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 12200                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12201                           
 12202                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12203                           ;incstack = 0
 12204  005B1E  50E1               	movf	fsr1l,w,c
 12205  005B20  0FFD               	addlw	-3
 12206  005B22  6ED9               	movwf	fsr2l,c
 12207  005B24  50E2               	movf	fsr1h,w,c
 12208  005B26  6EDA               	movwf	fsr2h,c
 12209  005B28  0EFF               	movlw	255
 12210  005B2A  22DA               	addwfc	fsr2h,f,c
 12211  005B2C  006F FF78  F010    	movff	postinc2,_UART1_RxInterruptHandler
 12212  005B32  006F FF78  F011    	movff	postinc2,_UART1_RxInterruptHandler+1
 12213  005B38  006F FF74  F012    	movff	postdec2,_UART1_RxInterruptHandler+2
 12214                           
 12215                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12216  005B3E  52E5               	movf	postdec1,f,c
 12217  005B40  52E5               	movf	postdec1,f,c
 12218  005B42  52E5               	movf	postdec1,f,c
 12219  005B44  0012               	return		;funcret
 12220  005B46                     __end_of_UART1_SetRxInterruptHandler:
 12221                           	opt callstack 0
 12222                           
 12223 ;; *************** function _TMR6_Initialize *****************
 12224 ;; Defined at:
 12225 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 12226 ;; Parameters:    Size  Location     Type
 12227 ;;		None
 12228 ;; Auto vars:     Size  Location     Type
 12229 ;;		None
 12230 ;; Return value:  Size  Location     Type
 12231 ;;                  1  [STACK] void 
 12232 ;; Registers used:
 12233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12234 ;; Tracked objects:
 12235 ;;		On entry : 3F/39
 12236 ;;		On exit  : 0/0
 12237 ;;		Unchanged: 0/0
 12238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12243 ;;Total ram usage:        0 bytes
 12244 ;; Hardware stack levels used:    1
 12245 ;; Hardware stack levels required when called:    4
 12246 ;; This function calls:
 12247 ;;		_TMR6_SetInterruptHandler
 12248 ;; This function is called by:
 12249 ;;		_SYSTEM_Initialize
 12250 ;; This function uses a reentrant model
 12251 ;;
 12252                           
 12253                           	psect	text61
 12254  005B46                     __ptext61:
 12255                           	opt callstack 0
 12256  005B46                     _TMR6_Initialize:
 12257                           	opt callstack 25
 12258                           
 12259                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 12260                           
 12261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12262                           ;incstack = 0
 12263  005B46  0E01               	movlw	1
 12264  005B48  6E96               	movwf	16278,c	;volatile
 12265                           
 12266                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 12267  005B4A  6A95               	clrf	16277,c	;volatile
 12268                           
 12269                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 12270  005B4C  6A97               	clrf	16279,c	;volatile
 12271                           
 12272                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 12273  005B4E  0E03               	movlw	3
 12274  005B50  6E93               	movwf	16275,c	;volatile
 12275                           
 12276                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 12277  005B52  6A92               	clrf	16274,c	;volatile
 12278                           
 12279                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 12280  005B54  0139               	movlb	57	; () banked
 12281  005B56  91A9               	bcf	169,0,b	;volatile
 12282                           
 12283                           ; BSR set to: 57
 12284                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 12285  005B58  8199               	bsf	153,0,b	;volatile
 12286                           
 12287                           ; BSR set to: 57
 12288                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 12289  005B5A  0E6E               	movlw	low _TMR6_DefaultInterruptHandler
 12290  005B5C  6EE6               	movwf	postinc1,c
 12291  005B5E  0E56               	movlw	high _TMR6_DefaultInterruptHandler
 12292  005B60  6EE6               	movwf	postinc1,c
 12293  005B62  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 12294  005B64  6EE6               	movwf	postinc1,c
 12295  005B66  ECB7  F02D         	call	_TMR6_SetInterruptHandler	;wreg free
 12296                           
 12297                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 12298  005B6A  6894               	setf	16276,c	;volatile
 12299                           
 12300                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12301  005B6C  0012               	return		;funcret
 12302  005B6E                     __end_of_TMR6_Initialize:
 12303                           	opt callstack 0
 12304                           
 12305 ;; *************** function _TMR6_SetInterruptHandler *****************
 12306 ;; Defined at:
 12307 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 12308 ;; Parameters:    Size  Location     Type
 12309 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12310 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 12311 ;; Auto vars:     Size  Location     Type
 12312 ;;		None
 12313 ;; Return value:  Size  Location     Type
 12314 ;;                  1  [STACK] void 
 12315 ;; Registers used:
 12316 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12317 ;; Tracked objects:
 12318 ;;		On entry : 3F/39
 12319 ;;		On exit  : 0/0
 12320 ;;		Unchanged: 0/0
 12321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12326 ;;Total ram usage:        0 bytes
 12327 ;; Hardware stack levels used:    1
 12328 ;; Hardware stack levels required when called:    3
 12329 ;; This function calls:
 12330 ;;		Nothing
 12331 ;; This function is called by:
 12332 ;;		_TMR6_Initialize
 12333 ;; This function uses a reentrant model
 12334 ;;
 12335                           
 12336                           	psect	text62
 12337  005B6E                     __ptext62:
 12338                           	opt callstack 0
 12339  005B6E                     _TMR6_SetInterruptHandler:
 12340                           	opt callstack 25
 12341                           
 12342                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 12343                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12344                           
 12345                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12346                           ;incstack = 0
 12347  005B6E  50E1               	movf	fsr1l,w,c
 12348  005B70  0FFD               	addlw	-3
 12349  005B72  6ED9               	movwf	fsr2l,c
 12350  005B74  50E2               	movf	fsr1h,w,c
 12351  005B76  6EDA               	movwf	fsr2h,c
 12352  005B78  0EFF               	movlw	255
 12353  005B7A  22DA               	addwfc	fsr2h,f,c
 12354  005B7C  006F FF78  F007    	movff	postinc2,_TMR6_InterruptHandler
 12355  005B82  006F FF78  F008    	movff	postinc2,_TMR6_InterruptHandler+1
 12356  005B88  006F FF74  F009    	movff	postdec2,_TMR6_InterruptHandler+2
 12357                           
 12358                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12359  005B8E  52E5               	movf	postdec1,f,c
 12360  005B90  52E5               	movf	postdec1,f,c
 12361  005B92  52E5               	movf	postdec1,f,c
 12362  005B94  0012               	return		;funcret
 12363  005B96                     __end_of_TMR6_SetInterruptHandler:
 12364                           	opt callstack 0
 12365                           
 12366 ;; *************** function _TMR5_Initialize *****************
 12367 ;; Defined at:
 12368 ;;		line 66 in file "mcc_generated_files/tmr5.c"
 12369 ;; Parameters:    Size  Location     Type
 12370 ;;		None
 12371 ;; Auto vars:     Size  Location     Type
 12372 ;;		None
 12373 ;; Return value:  Size  Location     Type
 12374 ;;                  1  [STACK] void 
 12375 ;; Registers used:
 12376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 12377 ;; Tracked objects:
 12378 ;;		On entry : 3F/3C
 12379 ;;		On exit  : 0/0
 12380 ;;		Unchanged: 0/0
 12381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12385 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12386 ;;Total ram usage:        0 bytes
 12387 ;; Hardware stack levels used:    1
 12388 ;; Hardware stack levels required when called:    4
 12389 ;; This function calls:
 12390 ;;		_TMR5_SetInterruptHandler
 12391 ;; This function is called by:
 12392 ;;		_SYSTEM_Initialize
 12393 ;; This function uses a reentrant model
 12394 ;;
 12395                           
 12396                           	psect	text63
 12397  005628                     __ptext63:
 12398                           	opt callstack 0
 12399  005628                     _TMR5_Initialize:
 12400                           	opt callstack 25
 12401                           
 12402                           ;mcc_generated_files/tmr5.c: 71:  T5GCON = 0x00;
 12403                           
 12404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12405                           ;incstack = 0
 12406  005628  6A9B               	clrf	16283,c	;volatile
 12407                           
 12408                           ;mcc_generated_files/tmr5.c: 74:  T5GATE = 0x00;
 12409  00562A  6A9C               	clrf	16284,c	;volatile
 12410                           
 12411                           ;mcc_generated_files/tmr5.c: 77:  T5CLK = 0x01;
 12412  00562C  0E01               	movlw	1
 12413  00562E  6E9D               	movwf	16285,c	;volatile
 12414                           
 12415                           ;mcc_generated_files/tmr5.c: 80:  TMR5H = 0x63;
 12416  005630  0E63               	movlw	99
 12417  005632  6E99               	movwf	16281,c	;volatile
 12418                           
 12419                           ;mcc_generated_files/tmr5.c: 83:  TMR5L = 0xC0;
 12420  005634  0EC0               	movlw	192
 12421  005636  6E98               	movwf	16280,c	;volatile
 12422                           
 12423                           ;mcc_generated_files/tmr5.c: 86:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 12424  005638  5098               	movf	16280,w,c	;volatile
 12425  00563A  006F FE64  F03D    	movff	16281,btemp	;volatile
 12426  005640  6A3E               	clrf	btemp+1,c
 12427  005642  0060  F0F4  F03E   	movff	btemp,btemp+1
 12428  005648  6A3D               	clrf	btemp,c
 12429  00564A  103D               	iorwf	btemp,w,c
 12430  00564C  6E2E               	movwf	_timer5ReloadVal,c	;volatile
 12431  00564E  503E               	movf	btemp+1,w,c
 12432  005650  6E2F               	movwf	_timer5ReloadVal+1,c	;volatile
 12433                           
 12434                           ;mcc_generated_files/tmr5.c: 89:  PIR8bits.TMR5IF = 0;
 12435  005652  0139               	movlb	57	; () banked
 12436  005654  9DA8               	bcf	168,6,b	;volatile
 12437                           
 12438                           ; BSR set to: 57
 12439                           ;mcc_generated_files/tmr5.c: 92:  PIE8bits.TMR5IE = 1;
 12440  005656  8D98               	bsf	152,6,b	;volatile
 12441                           
 12442                           ; BSR set to: 57
 12443                           ;mcc_generated_files/tmr5.c: 95:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 12444  005658  0ED2               	movlw	low _TMR5_DefaultInterruptHandler
 12445  00565A  6EE6               	movwf	postinc1,c
 12446  00565C  0E5E               	movlw	high _TMR5_DefaultInterruptHandler
 12447  00565E  6EE6               	movwf	postinc1,c
 12448  005660  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 12449  005662  6EE6               	movwf	postinc1,c
 12450  005664  ECCB  F02D         	call	_TMR5_SetInterruptHandler	;wreg free
 12451                           
 12452                           ;mcc_generated_files/tmr5.c: 98:  T5CON = 0x31;
 12453  005668  0E31               	movlw	49
 12454  00566A  6E9A               	movwf	16282,c	;volatile
 12455                           
 12456                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12457  00566C  0012               	return		;funcret
 12458  00566E                     __end_of_TMR5_Initialize:
 12459                           	opt callstack 0
 12460                           
 12461 ;; *************** function _TMR5_SetInterruptHandler *****************
 12462 ;; Defined at:
 12463 ;;		line 189 in file "mcc_generated_files/tmr5.c"
 12464 ;; Parameters:    Size  Location     Type
 12465 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12466 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 12467 ;; Auto vars:     Size  Location     Type
 12468 ;;		None
 12469 ;; Return value:  Size  Location     Type
 12470 ;;                  1  [STACK] void 
 12471 ;; Registers used:
 12472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12473 ;; Tracked objects:
 12474 ;;		On entry : 3F/39
 12475 ;;		On exit  : 0/0
 12476 ;;		Unchanged: 0/0
 12477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12482 ;;Total ram usage:        0 bytes
 12483 ;; Hardware stack levels used:    1
 12484 ;; Hardware stack levels required when called:    3
 12485 ;; This function calls:
 12486 ;;		Nothing
 12487 ;; This function is called by:
 12488 ;;		_TMR5_Initialize
 12489 ;; This function uses a reentrant model
 12490 ;;
 12491                           
 12492                           	psect	text64
 12493  005B96                     __ptext64:
 12494                           	opt callstack 0
 12495  005B96                     _TMR5_SetInterruptHandler:
 12496                           	opt callstack 25
 12497                           
 12498                           ;mcc_generated_files/tmr5.c: 189: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 190: {;mcc_generated_files/tmr5.c: 191:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 12499                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12500                           
 12501                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12502                           ;incstack = 0
 12503  005B96  50E1               	movf	fsr1l,w,c
 12504  005B98  0FFD               	addlw	-3
 12505  005B9A  6ED9               	movwf	fsr2l,c
 12506  005B9C  50E2               	movf	fsr1h,w,c
 12507  005B9E  6EDA               	movwf	fsr2h,c
 12508  005BA0  0EFF               	movlw	255
 12509  005BA2  22DA               	addwfc	fsr2h,f,c
 12510  005BA4  006F FF78  F004    	movff	postinc2,_TMR5_InterruptHandler
 12511  005BAA  006F FF78  F005    	movff	postinc2,_TMR5_InterruptHandler+1
 12512  005BB0  006F FF74  F006    	movff	postdec2,_TMR5_InterruptHandler+2
 12513                           
 12514                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 12515  005BB6  52E5               	movf	postdec1,f,c
 12516  005BB8  52E5               	movf	postdec1,f,c
 12517  005BBA  52E5               	movf	postdec1,f,c
 12518  005BBC  0012               	return		;funcret
 12519  005BBE                     __end_of_TMR5_SetInterruptHandler:
 12520                           	opt callstack 0
 12521                           
 12522 ;; *************** function _SPI1_Initialize *****************
 12523 ;; Defined at:
 12524 ;;		line 64 in file "mcc_generated_files/spi1.c"
 12525 ;; Parameters:    Size  Location     Type
 12526 ;;		None
 12527 ;; Auto vars:     Size  Location     Type
 12528 ;;		None
 12529 ;; Return value:  Size  Location     Type
 12530 ;;                  1  [STACK] void 
 12531 ;; Registers used:
 12532 ;;		wreg, status,2
 12533 ;; Tracked objects:
 12534 ;;		On entry : 3F/39
 12535 ;;		On exit  : 3F/3D
 12536 ;;		Unchanged: 0/0
 12537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12542 ;;Total ram usage:        0 bytes
 12543 ;; Hardware stack levels used:    1
 12544 ;; Hardware stack levels required when called:    3
 12545 ;; This function calls:
 12546 ;;		Nothing
 12547 ;; This function is called by:
 12548 ;;		_SYSTEM_Initialize
 12549 ;; This function uses a reentrant model
 12550 ;;
 12551                           
 12552                           	psect	text65
 12553  005EEC                     __ptext65:
 12554                           	opt callstack 0
 12555  005EEC                     _SPI1_Initialize:
 12556                           	opt callstack 26
 12557                           
 12558                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 12559                           
 12560                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12561                           ;incstack = 0
 12562  005EEC  0E40               	movlw	64
 12563  005EEE  013D               	movlb	61	; () banked
 12564  005EF0  6F15               	movwf	21,b	;volatile
 12565                           
 12566                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 12567  005EF2  0E03               	movlw	3
 12568  005EF4  6F16               	movwf	22,b	;volatile
 12569                           
 12570                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 12571  005EF6  0E4F               	movlw	79
 12572  005EF8  6F19               	movwf	25,b	;volatile
 12573                           
 12574                           ; BSR set to: 61
 12575                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 12576  005EFA  6B1C               	clrf	28,b	;volatile
 12577                           
 12578                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 12579  005EFC  0E83               	movlw	131
 12580  005EFE  6F14               	movwf	20,b	;volatile
 12581                           
 12582                           ; BSR set to: 61
 12583                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12584  005F00  0012               	return		;funcret
 12585  005F02                     __end_of_SPI1_Initialize:
 12586                           	opt callstack 0
 12587                           
 12588 ;; *************** function _PMD_Initialize *****************
 12589 ;; Defined at:
 12590 ;;		line 88 in file "mcc_generated_files/mcc.c"
 12591 ;; Parameters:    Size  Location     Type
 12592 ;;		None
 12593 ;; Auto vars:     Size  Location     Type
 12594 ;;		None
 12595 ;; Return value:  Size  Location     Type
 12596 ;;                  1  [STACK] void 
 12597 ;; Registers used:
 12598 ;;		None
 12599 ;; Tracked objects:
 12600 ;;		On entry : 3F/39
 12601 ;;		On exit  : 3F/39
 12602 ;;		Unchanged: 0/0
 12603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12608 ;;Total ram usage:        0 bytes
 12609 ;; Hardware stack levels used:    1
 12610 ;; Hardware stack levels required when called:    3
 12611 ;; This function calls:
 12612 ;;		Nothing
 12613 ;; This function is called by:
 12614 ;;		_SYSTEM_Initialize
 12615 ;; This function uses a reentrant model
 12616 ;;
 12617                           
 12618                           	psect	text66
 12619  005F18                     __ptext66:
 12620                           	opt callstack 0
 12621  005F18                     _PMD_Initialize:
 12622                           	opt callstack 26
 12623                           
 12624                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 12625                           
 12626                           ; BSR set to: 61
 12627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12628                           ;incstack = 0
 12629  005F18  0139               	movlb	57	; () banked
 12630  005F1A  6BC0               	clrf	192,b	;volatile
 12631                           
 12632                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 12633  005F1C  6BC1               	clrf	193,b	;volatile
 12634                           
 12635                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 12636  005F1E  6BC2               	clrf	194,b	;volatile
 12637                           
 12638                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 12639  005F20  6BC3               	clrf	195,b	;volatile
 12640                           
 12641                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 12642  005F22  6BC4               	clrf	196,b	;volatile
 12643                           
 12644                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 12645  005F24  6BC5               	clrf	197,b	;volatile
 12646                           
 12647                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 12648  005F26  6BC6               	clrf	198,b	;volatile
 12649                           
 12650                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 12651  005F28  6BC7               	clrf	199,b	;volatile
 12652                           
 12653                           ; BSR set to: 57
 12654                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 12655  005F2A  0012               	return		;funcret
 12656  005F2C                     __end_of_PMD_Initialize:
 12657                           	opt callstack 0
 12658                           
 12659 ;; *************** function _PIN_MANAGER_Initialize *****************
 12660 ;; Defined at:
 12661 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 12662 ;; Parameters:    Size  Location     Type
 12663 ;;		None
 12664 ;; Auto vars:     Size  Location     Type
 12665 ;;		None
 12666 ;; Return value:  Size  Location     Type
 12667 ;;                  1  [STACK] void 
 12668 ;; Registers used:
 12669 ;;		wreg, status,2
 12670 ;; Tracked objects:
 12671 ;;		On entry : 3F/39
 12672 ;;		On exit  : 3F/3A
 12673 ;;		Unchanged: 0/0
 12674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12679 ;;Total ram usage:        0 bytes
 12680 ;; Hardware stack levels used:    1
 12681 ;; Hardware stack levels required when called:    3
 12682 ;; This function calls:
 12683 ;;		Nothing
 12684 ;; This function is called by:
 12685 ;;		_SYSTEM_Initialize
 12686 ;; This function uses a reentrant model
 12687 ;;
 12688                           
 12689                           	psect	text67
 12690  004E1A                     __ptext67:
 12691                           	opt callstack 0
 12692  004E1A                     _PIN_MANAGER_Initialize:
 12693                           	opt callstack 26
 12694                           
 12695                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 12696                           
 12697                           ; BSR set to: 57
 12698                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12699                           ;incstack = 0
 12700  004E1A  0E07               	movlw	7
 12701  004E1C  6EBE               	movwf	16318,c	;volatile
 12702                           
 12703                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 12704  004E1E  6ABD               	clrf	16317,c	;volatile
 12705                           
 12706                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 12707  004E20  6ABA               	clrf	16314,c	;volatile
 12708                           
 12709                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 12710  004E22  6ABF               	clrf	16319,c	;volatile
 12711                           
 12712                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 12713  004E24  6ABB               	clrf	16315,c	;volatile
 12714                           
 12715                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 12716  004E26  0E06               	movlw	6
 12717  004E28  6EBC               	movwf	16316,c	;volatile
 12718                           
 12719                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 12720  004E2A  6AC6               	clrf	16326,c	;volatile
 12721                           
 12722                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 12723  004E2C  68C7               	setf	16327,c	;volatile
 12724                           
 12725                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 12726  004E2E  0E8F               	movlw	143
 12727  004E30  6EC2               	movwf	16322,c	;volatile
 12728                           
 12729                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 12730  004E32  0EBF               	movlw	191
 12731  004E34  6EC3               	movwf	16323,c	;volatile
 12732                           
 12733                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 12734  004E36  0E91               	movlw	145
 12735  004E38  6EC4               	movwf	16324,c	;volatile
 12736                           
 12737                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFC;
 12738  004E3A  0EFC               	movlw	252
 12739  004E3C  6EC5               	movwf	16325,c	;volatile
 12740                           
 12741                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0xF0;
 12742  004E3E  0EF0               	movlw	240
 12743  004E40  013A               	movlb	58	; () banked
 12744  004E42  6F70               	movwf	112,b	;volatile
 12745                           
 12746                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 12747  004E44  0E01               	movlw	1
 12748  004E46  6F60               	movwf	96,b	;volatile
 12749                           
 12750                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 12751  004E48  0E38               	movlw	56
 12752  004E4A  6F50               	movwf	80,b	;volatile
 12753                           
 12754                           ; BSR set to: 58
 12755                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 12756  004E4C  6B80               	clrf	128,b	;volatile
 12757                           
 12758                           ; BSR set to: 58
 12759                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 12760  004E4E  6990               	setf	144,b	;volatile
 12761                           
 12762                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 12763  004E50  0E8F               	movlw	143
 12764  004E52  6F40               	movwf	64,b	;volatile
 12765                           
 12766                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 12767  004E54  0E0C               	movlw	12
 12768  004E56  6F71               	movwf	113,b	;volatile
 12769                           
 12770                           ; BSR set to: 58
 12771                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 12772  004E58  6B91               	clrf	145,b	;volatile
 12773                           
 12774                           ; BSR set to: 58
 12775                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 12776  004E5A  6B81               	clrf	129,b	;volatile
 12777                           
 12778                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 12779  004E5C  0E87               	movlw	135
 12780  004E5E  6F51               	movwf	81,b	;volatile
 12781                           
 12782                           ; BSR set to: 58
 12783                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 12784  004E60  6B41               	clrf	65,b	;volatile
 12785                           
 12786                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 12787  004E62  0E90               	movlw	144
 12788  004E64  6F61               	movwf	97,b	;volatile
 12789                           
 12790                           ; BSR set to: 58
 12791                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 12792  004E66  6B82               	clrf	130,b	;volatile
 12793                           
 12794                           ; BSR set to: 58
 12795                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 12796  004E68  6B92               	clrf	146,b	;volatile
 12797                           
 12798                           ; BSR set to: 58
 12799                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 12800  004E6A  6B42               	clrf	66,b	;volatile
 12801                           
 12802                           ; BSR set to: 58
 12803                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 12804  004E6C  6B52               	clrf	82,b	;volatile
 12805                           
 12806                           ; BSR set to: 58
 12807                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 12808  004E6E  6B62               	clrf	98,b	;volatile
 12809                           
 12810                           ; BSR set to: 58
 12811                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 12812  004E70  6B72               	clrf	114,b	;volatile
 12813                           
 12814                           ; BSR set to: 58
 12815                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 12816  004E72  6943               	setf	67,b	;volatile
 12817                           
 12818                           ; BSR set to: 58
 12819                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 12820  004E74  6953               	setf	83,b	;volatile
 12821                           
 12822                           ; BSR set to: 58
 12823                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 12824  004E76  6963               	setf	99,b	;volatile
 12825                           
 12826                           ; BSR set to: 58
 12827                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 12828  004E78  6973               	setf	115,b	;volatile
 12829                           
 12830                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 12831  004E7A  0E07               	movlw	7
 12832  004E7C  6F83               	movwf	131,b	;volatile
 12833                           
 12834                           ; BSR set to: 58
 12835                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 12836  004E7E  6993               	setf	147,b	;volatile
 12837                           
 12838                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 12839  004E80  0E0F               	movlw	15
 12840  004E82  6FE8               	movwf	232,b	;volatile
 12841                           
 12842                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 12843  004E84  0E16               	movlw	22
 12844  004E86  6F0E               	movwf	14,b	;volatile
 12845                           
 12846                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 12847  004E88  0E1E               	movlw	30
 12848  004E8A  6F13               	movwf	19,b	;volatile
 12849                           
 12850                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 12851  004E8C  0E08               	movlw	8
 12852  004E8E  6FC0               	movwf	192,b	;volatile
 12853                           
 12854                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 12855  004E90  0E0A               	movlw	10
 12856  004E92  6FC2               	movwf	194,b	;volatile
 12857                           
 12858                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 12859  004E94  0E09               	movlw	9
 12860  004E96  6FC1               	movwf	193,b	;volatile
 12861                           
 12862                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 12863  004E98  0E17               	movlw	23
 12864  004E9A  6FE5               	movwf	229,b	;volatile
 12865                           
 12866                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 12867  004E9C  0E13               	movlw	19
 12868  004E9E  6FDE               	movwf	222,b	;volatile
 12869                           
 12870                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 12871  004EA0  0E01               	movlw	1
 12872  004EA2  6F04               	movwf	4,b	;volatile
 12873                           
 12874                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 12875  004EA4  0E26               	movlw	38
 12876  004EA6  6F05               	movwf	5,b	;volatile
 12877                           
 12878                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 12879  004EA8  0E28               	movlw	40
 12880  004EAA  6F06               	movwf	6,b	;volatile
 12881                           
 12882                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 12883  004EAC  0E1F               	movlw	31
 12884  004EAE  6F15               	movwf	21,b	;volatile
 12885                           
 12886                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 12887  004EB0  0E13               	movlw	19
 12888  004EB2  6F16               	movwf	22,b	;volatile
 12889                           
 12890                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 12891  004EB4  0E14               	movlw	20
 12892  004EB6  6FDF               	movwf	223,b	;volatile
 12893                           
 12894                           ; BSR set to: 58
 12895                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 12896  004EB8  0012               	return		;funcret
 12897  004EBA                     __end_of_PIN_MANAGER_Initialize:
 12898                           	opt callstack 0
 12899                           
 12900 ;; *************** function _OSCILLATOR_Initialize *****************
 12901 ;; Defined at:
 12902 ;;		line 70 in file "mcc_generated_files/mcc.c"
 12903 ;; Parameters:    Size  Location     Type
 12904 ;;		None
 12905 ;; Auto vars:     Size  Location     Type
 12906 ;;		None
 12907 ;; Return value:  Size  Location     Type
 12908 ;;                  1  [STACK] void 
 12909 ;; Registers used:
 12910 ;;		wreg, status,2
 12911 ;; Tracked objects:
 12912 ;;		On entry : 3F/3A
 12913 ;;		On exit  : 3F/39
 12914 ;;		Unchanged: 0/0
 12915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12920 ;;Total ram usage:        0 bytes
 12921 ;; Hardware stack levels used:    1
 12922 ;; Hardware stack levels required when called:    3
 12923 ;; This function calls:
 12924 ;;		Nothing
 12925 ;; This function is called by:
 12926 ;;		_SYSTEM_Initialize
 12927 ;; This function uses a reentrant model
 12928 ;;
 12929                           
 12930                           	psect	text68
 12931  005F02                     __ptext68:
 12932                           	opt callstack 0
 12933  005F02                     _OSCILLATOR_Initialize:
 12934                           	opt callstack 26
 12935                           
 12936                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 12937                           
 12938                           ; BSR set to: 58
 12939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12940                           ;incstack = 0
 12941  005F02  0E20               	movlw	32
 12942  005F04  0139               	movlb	57	; () banked
 12943  005F06  6FD9               	movwf	217,b	;volatile
 12944                           
 12945                           ; BSR set to: 57
 12946                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 12947  005F08  6BDB               	clrf	219,b	;volatile
 12948                           
 12949                           ; BSR set to: 57
 12950                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 12951  005F0A  6BDD               	clrf	221,b	;volatile
 12952                           
 12953                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 12954  005F0C  0E02               	movlw	2
 12955  005F0E  6FDF               	movwf	223,b	;volatile
 12956                           
 12957                           ; BSR set to: 57
 12958                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 12959  005F10  6BDE               	clrf	222,b	;volatile
 12960  005F12                     l194:
 12961                           
 12962                           ; BSR set to: 57
 12963                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 12964  005F12  B1DC               	btfsc	220,0,b	;volatile
 12965  005F14  0012               	return	
 12966  005F16  D7FD               	goto	l194
 12967  005F18                     __end_of_OSCILLATOR_Initialize:
 12968                           	opt callstack 0
 12969                           
 12970 ;; *************** function _NCO1_Initialize *****************
 12971 ;; Defined at:
 12972 ;;		line 58 in file "mcc_generated_files/nco1.c"
 12973 ;; Parameters:    Size  Location     Type
 12974 ;;		None
 12975 ;; Auto vars:     Size  Location     Type
 12976 ;;		None
 12977 ;; Return value:  Size  Location     Type
 12978 ;;                  1  [STACK] void 
 12979 ;; Registers used:
 12980 ;;		wreg, status,2
 12981 ;; Tracked objects:
 12982 ;;		On entry : 0/39
 12983 ;;		On exit  : 3F/3F
 12984 ;;		Unchanged: 0/0
 12985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12990 ;;Total ram usage:        0 bytes
 12991 ;; Hardware stack levels used:    1
 12992 ;; Hardware stack levels required when called:    3
 12993 ;; This function calls:
 12994 ;;		Nothing
 12995 ;; This function is called by:
 12996 ;;		_SYSTEM_Initialize
 12997 ;; This function uses a reentrant model
 12998 ;;
 12999                           
 13000                           	psect	text69
 13001  005E66                     __ptext69:
 13002                           	opt callstack 0
 13003  005E66                     _NCO1_Initialize:
 13004                           	opt callstack 26
 13005                           
 13006                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 13007                           
 13008                           ; BSR set to: 57
 13009                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13010                           ;incstack = 0
 13011  005E66  013F               	movlb	63	; () banked
 13012  005E68  6B3E               	clrf	62,b	;volatile
 13013                           
 13014                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 13015  005E6A  6B3F               	clrf	63,b	;volatile
 13016                           
 13017                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 13018  005E6C  6B3A               	clrf	58,b	;volatile
 13019                           
 13020                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 13021  005E6E  6B39               	clrf	57,b	;volatile
 13022                           
 13023                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 13024  005E70  6B38               	clrf	56,b	;volatile
 13025                           
 13026                           ; BSR set to: 63
 13027                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 13028  005E72  0E06               	movlw	6
 13029  005E74  6F3D               	movwf	61,b	;volatile
 13030                           
 13031                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 13032  005E76  0EC7               	movlw	199
 13033  005E78  6F3C               	movwf	60,b	;volatile
 13034                           
 13035                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 13036  005E7A  0EAE               	movlw	174
 13037  005E7C  6F3B               	movwf	59,b	;volatile
 13038                           
 13039                           ; BSR set to: 63
 13040                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 13041  005E7E  8F3E               	bsf	62,7,b	;volatile
 13042                           
 13043                           ; BSR set to: 63
 13044                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13045  005E80  0012               	return		;funcret
 13046  005E82                     __end_of_NCO1_Initialize:
 13047                           	opt callstack 0
 13048                           
 13049 ;; *************** function _INTERRUPT_Initialize *****************
 13050 ;; Defined at:
 13051 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13052 ;; Parameters:    Size  Location     Type
 13053 ;;		None
 13054 ;; Auto vars:     Size  Location     Type
 13055 ;;  state           1  [STACK] _Bool 
 13056 ;; Return value:  Size  Location     Type
 13057 ;;                  1  [STACK] void 
 13058 ;; Registers used:
 13059 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 13060 ;; Tracked objects:
 13061 ;;		On entry : 0/0
 13062 ;;		On exit  : 3F/39
 13063 ;;		Unchanged: 0/0
 13064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13069 ;;Total ram usage:        0 bytes
 13070 ;; Hardware stack levels used:    1
 13071 ;; Hardware stack levels required when called:    3
 13072 ;; This function calls:
 13073 ;;		Nothing
 13074 ;; This function is called by:
 13075 ;;		_SYSTEM_Initialize
 13076 ;; This function uses a reentrant model
 13077 ;;
 13078                           
 13079                           	psect	text70
 13080  0052C4                     __ptext70:
 13081                           	opt callstack 0
 13082  0052C4                     _INTERRUPT_Initialize:
 13083                           	opt callstack 0
 13084                           
 13085                           ; BSR set to: 63
 13086                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13087  0052C4  52E6               	movf	postinc1,f,c
 13088                           
 13089                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 13090                           
 13091                           ;incstack = 0
 13092  0052C6  8AD2               	bsf	16338,5,c	;volatile
 13093                           
 13094                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 13095  0052C8  AED2               	btfss	16338,7,c	;volatile
 13096  0052CA  D003               	goto	u3340
 13097  0052CC  6A48               	clrf	btemp+11,c
 13098  0052CE  2A48               	incf	btemp+11,f,c
 13099  0052D0  D001               	goto	u3358
 13100  0052D2                     u3340:
 13101  0052D2  6A48               	clrf	btemp+11,c
 13102  0052D4                     u3358:
 13103                           
 13104                           ;stkvar	_state @ sp[(-1)+0]
 13105  0052D4  0EFF               	movlw	-1
 13106  0052D6  0060  F123  FFE3   	movff	btemp+11,plusw1
 13107                           
 13108                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 13109  0052DC  9ED2               	bcf	16338,7,c	;volatile
 13110                           
 13111                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 13112  0052DE  0E55               	movlw	85
 13113  0052E0  6ED4               	movwf	16340,c	;volatile
 13114                           
 13115                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 13116  0052E2  0EAA               	movlw	170
 13117  0052E4  6ED4               	movwf	16340,c	;volatile
 13118                           
 13119                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 13120  0052E6  90D4               	bcf	16340,0,c	;volatile
 13121                           
 13122                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 13123  0052E8  0138               	movlb	56	; () banked
 13124  0052EA  6B9F               	clrf	159,b	;volatile
 13125                           
 13126                           ; BSR set to: 56
 13127                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 13128  0052EC  6B9E               	clrf	158,b	;volatile
 13129                           
 13130                           ; BSR set to: 56
 13131                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 13132  0052EE  0E08               	movlw	8
 13133  0052F0  6F9D               	movwf	157,b	;volatile
 13134                           
 13135                           ; BSR set to: 56
 13136                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 13137  0052F2  0E55               	movlw	85
 13138  0052F4  6ED4               	movwf	16340,c	;volatile
 13139                           
 13140                           ; BSR set to: 56
 13141                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 13142  0052F6  0EAA               	movlw	170
 13143  0052F8  6ED4               	movwf	16340,c	;volatile
 13144                           
 13145                           ; BSR set to: 56
 13146                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 13147  0052FA  80D4               	bsf	16340,0,c	;volatile
 13148                           
 13149                           ; BSR set to: 56
 13150                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 13151                           ;stkvar	_state @ sp[(-1)+0]
 13152  0052FC  0EFF               	movlw	-1
 13153  0052FE  B0E3               	btfsc	plusw1,0,c
 13154  005300  D002               	bra	u3365
 13155  005302  9ED2               	bcf	16338,7,c	;volatile
 13156  005304  D001               	bra	u3366
 13157  005306                     u3365:
 13158  005306  8ED2               	bsf	16338,7,c	;volatile
 13159  005308                     u3366:
 13160                           
 13161                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 13162  005308  0139               	movlb	57	; () banked
 13163  00530A  8782               	bsf	130,3,b	;volatile
 13164                           
 13165                           ; BSR set to: 57
 13166                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 13167  00530C  8382               	bsf	130,1,b	;volatile
 13168                           
 13169                           ; BSR set to: 57
 13170                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 13171  00530E  8182               	bsf	130,0,b	;volatile
 13172                           
 13173                           ; BSR set to: 57
 13174                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 13175  005310  8582               	bsf	130,2,b	;volatile
 13176                           
 13177                           ; BSR set to: 57
 13178                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 13179  005312  8786               	bsf	134,3,b	;volatile
 13180                           
 13181                           ; BSR set to: 57
 13182                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 13183  005314  8586               	bsf	134,2,b	;volatile
 13184                           
 13185                           ; BSR set to: 57
 13186                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 13187  005316  8983               	bsf	131,4,b	;volatile
 13188                           
 13189                           ; BSR set to: 57
 13190                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 13191  005318  8783               	bsf	131,3,b	;volatile
 13192                           
 13193                           ; BSR set to: 57
 13194                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 13195  00531A  8181               	bsf	129,0,b	;volatile
 13196                           
 13197                           ; BSR set to: 57
 13198                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 13199  00531C  8185               	bsf	133,0,b	;volatile
 13200                           
 13201                           ; BSR set to: 57
 13202                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 13203  00531E  8B87               	bsf	135,5,b	;volatile
 13204                           
 13205                           ; BSR set to: 57
 13206                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 13207  005320  8189               	bsf	137,0,b	;volatile
 13208                           
 13209                           ; BSR set to: 57
 13210                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 13211  005322  8D88               	bsf	136,6,b	;volatile
 13212                           
 13213                           ; BSR set to: 57
 13214                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 13215  005324  8581               	bsf	129,2,b	;volatile
 13216                           
 13217                           ; BSR set to: 57
 13218                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 13219  005326  52E5               	movf	postdec1,f,c
 13220  005328  0012               	return		;funcret
 13221  00532A                     __end_of_INTERRUPT_Initialize:
 13222                           	opt callstack 0
 13223                           
 13224 ;; *************** function _EXT_INT_Initialize *****************
 13225 ;; Defined at:
 13226 ;;		line 114 in file "mcc_generated_files/ext_int.c"
 13227 ;; Parameters:    Size  Location     Type
 13228 ;;		None
 13229 ;; Auto vars:     Size  Location     Type
 13230 ;;		None
 13231 ;; Return value:  Size  Location     Type
 13232 ;;                  1  [STACK] void 
 13233 ;; Registers used:
 13234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13235 ;; Tracked objects:
 13236 ;;		On entry : 3F/3F
 13237 ;;		On exit  : 3F/39
 13238 ;;		Unchanged: 0/0
 13239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13244 ;;Total ram usage:        0 bytes
 13245 ;; Hardware stack levels used:    1
 13246 ;; Hardware stack levels required when called:    4
 13247 ;; This function calls:
 13248 ;;		_INT0_SetInterruptHandler
 13249 ;;		_INT1_SetInterruptHandler
 13250 ;;		_INT2_SetInterruptHandler
 13251 ;; This function is called by:
 13252 ;;		_SYSTEM_Initialize
 13253 ;; This function uses a reentrant model
 13254 ;;
 13255                           
 13256                           	psect	text71
 13257  00554C                     __ptext71:
 13258                           	opt callstack 0
 13259  00554C                     _EXT_INT_Initialize:
 13260                           	opt callstack 25
 13261                           
 13262                           ;mcc_generated_files/ext_int.c: 119:     (PIR1bits.INT0IF = 0);
 13263                           
 13264                           ; BSR set to: 57
 13265                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13266                           ;incstack = 0
 13267  00554C  0139               	movlb	57	; () banked
 13268  00554E  91A1               	bcf	161,0,b	;volatile
 13269                           
 13270                           ;mcc_generated_files/ext_int.c: 120:     (INTCON0bits.INT0EDG = 0);
 13271  005550  90D2               	bcf	16338,0,c	;volatile
 13272                           
 13273                           ; BSR set to: 57
 13274                           ;mcc_generated_files/ext_int.c: 122:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
 13275  005552  0ED6               	movlw	low _INT0_DefaultInterruptHandler
 13276  005554  6EE6               	movwf	postinc1,c
 13277  005556  0E5F               	movlw	high _INT0_DefaultInterruptHandler
 13278  005558  6EE6               	movwf	postinc1,c
 13279  00555A  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 13280  00555C  6EE6               	movwf	postinc1,c
 13281  00555E  EC07  F02E         	call	_INT0_SetInterruptHandler	;wreg free
 13282                           
 13283                           ;mcc_generated_files/ext_int.c: 123:     (PIE1bits.INT0IE = 1);
 13284  005562  0139               	movlb	57	; () banked
 13285  005564  8191               	bsf	145,0,b	;volatile
 13286                           
 13287                           ; BSR set to: 57
 13288                           ;mcc_generated_files/ext_int.c: 128:     (PIR5bits.INT1IF = 0);
 13289  005566  91A5               	bcf	165,0,b	;volatile
 13290                           
 13291                           ; BSR set to: 57
 13292                           ;mcc_generated_files/ext_int.c: 129:     (INTCON0bits.INT1EDG = 0);
 13293  005568  92D2               	bcf	16338,1,c	;volatile
 13294                           
 13295                           ;mcc_generated_files/ext_int.c: 131:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
 13296  00556A  0ED8               	movlw	low _INT1_DefaultInterruptHandler
 13297  00556C  6EE6               	movwf	postinc1,c
 13298  00556E  0E5F               	movlw	high _INT1_DefaultInterruptHandler
 13299  005570  6EE6               	movwf	postinc1,c
 13300  005572  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 13301  005574  6EE6               	movwf	postinc1,c
 13302  005576  ECF3  F02D         	call	_INT1_SetInterruptHandler	;wreg free
 13303                           
 13304                           ;mcc_generated_files/ext_int.c: 132:     (PIE5bits.INT1IE = 1);
 13305  00557A  0139               	movlb	57	; () banked
 13306  00557C  8195               	bsf	149,0,b	;volatile
 13307                           
 13308                           ; BSR set to: 57
 13309                           ;mcc_generated_files/ext_int.c: 137:     (PIR7bits.INT2IF = 0);
 13310  00557E  9BA7               	bcf	167,5,b	;volatile
 13311                           
 13312                           ; BSR set to: 57
 13313                           ;mcc_generated_files/ext_int.c: 138:     (INTCON0bits.INT2EDG = 0);
 13314  005580  94D2               	bcf	16338,2,c	;volatile
 13315                           
 13316                           ;mcc_generated_files/ext_int.c: 140:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
 13317  005582  0EDA               	movlw	low _INT2_DefaultInterruptHandler
 13318  005584  6EE6               	movwf	postinc1,c
 13319  005586  0E5F               	movlw	high _INT2_DefaultInterruptHandler
 13320  005588  6EE6               	movwf	postinc1,c
 13321  00558A  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 13322  00558C  6EE6               	movwf	postinc1,c
 13323  00558E  ECDF  F02D         	call	_INT2_SetInterruptHandler	;wreg free
 13324                           
 13325                           ;mcc_generated_files/ext_int.c: 141:     (PIE7bits.INT2IE = 1);
 13326  005592  0139               	movlb	57	; () banked
 13327  005594  8B97               	bsf	151,5,b	;volatile
 13328                           
 13329                           ; BSR set to: 57
 13330                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13331  005596  0012               	return		;funcret
 13332  005598                     __end_of_EXT_INT_Initialize:
 13333                           	opt callstack 0
 13334                           
 13335 ;; *************** function _INT2_SetInterruptHandler *****************
 13336 ;; Defined at:
 13337 ;;		line 105 in file "mcc_generated_files/ext_int.c"
 13338 ;; Parameters:    Size  Location     Type
 13339 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13340 ;;		 -> INT2_DefaultInterruptHandler(1), 
 13341 ;; Auto vars:     Size  Location     Type
 13342 ;;		None
 13343 ;; Return value:  Size  Location     Type
 13344 ;;                  1  [STACK] void 
 13345 ;; Registers used:
 13346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13347 ;; Tracked objects:
 13348 ;;		On entry : 3F/39
 13349 ;;		On exit  : 0/0
 13350 ;;		Unchanged: 0/0
 13351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13356 ;;Total ram usage:        0 bytes
 13357 ;; Hardware stack levels used:    1
 13358 ;; Hardware stack levels required when called:    3
 13359 ;; This function calls:
 13360 ;;		Nothing
 13361 ;; This function is called by:
 13362 ;;		_EXT_INT_Initialize
 13363 ;; This function uses a reentrant model
 13364 ;;
 13365                           
 13366                           	psect	text72
 13367  005BBE                     __ptext72:
 13368                           	opt callstack 0
 13369  005BBE                     _INT2_SetInterruptHandler:
 13370                           	opt callstack 25
 13371                           
 13372                           ;mcc_generated_files/ext_int.c: 106:     INT2_InterruptHandler = InterruptHandler;
 13373                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13374                           
 13375                           ; BSR set to: 57
 13376                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13377                           ;incstack = 0
 13378  005BBE  50E1               	movf	fsr1l,w,c
 13379  005BC0  0FFD               	addlw	-3
 13380  005BC2  6ED9               	movwf	fsr2l,c
 13381  005BC4  50E2               	movf	fsr1h,w,c
 13382  005BC6  6EDA               	movwf	fsr2h,c
 13383  005BC8  0EFF               	movlw	255
 13384  005BCA  22DA               	addwfc	fsr2h,f,c
 13385  005BCC  006F FF78  F019    	movff	postinc2,_INT2_InterruptHandler
 13386  005BD2  006F FF78  F01A    	movff	postinc2,_INT2_InterruptHandler+1
 13387  005BD8  006F FF74  F01B    	movff	postdec2,_INT2_InterruptHandler+2
 13388                           
 13389                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13390  005BDE  52E5               	movf	postdec1,f,c
 13391  005BE0  52E5               	movf	postdec1,f,c
 13392  005BE2  52E5               	movf	postdec1,f,c
 13393  005BE4  0012               	return		;funcret
 13394  005BE6                     __end_of_INT2_SetInterruptHandler:
 13395                           	opt callstack 0
 13396                           
 13397 ;; *************** function _INT1_SetInterruptHandler *****************
 13398 ;; Defined at:
 13399 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 13400 ;; Parameters:    Size  Location     Type
 13401 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13402 ;;		 -> INT1_DefaultInterruptHandler(1), 
 13403 ;; Auto vars:     Size  Location     Type
 13404 ;;		None
 13405 ;; Return value:  Size  Location     Type
 13406 ;;                  1  [STACK] void 
 13407 ;; Registers used:
 13408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13409 ;; Tracked objects:
 13410 ;;		On entry : 3F/39
 13411 ;;		On exit  : 0/0
 13412 ;;		Unchanged: 0/0
 13413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13418 ;;Total ram usage:        0 bytes
 13419 ;; Hardware stack levels used:    1
 13420 ;; Hardware stack levels required when called:    3
 13421 ;; This function calls:
 13422 ;;		Nothing
 13423 ;; This function is called by:
 13424 ;;		_EXT_INT_Initialize
 13425 ;; This function uses a reentrant model
 13426 ;;
 13427                           
 13428                           	psect	text73
 13429  005BE6                     __ptext73:
 13430                           	opt callstack 0
 13431  005BE6                     _INT1_SetInterruptHandler:
 13432                           	opt callstack 25
 13433                           
 13434                           ;mcc_generated_files/ext_int.c: 80:     INT1_InterruptHandler = InterruptHandler;
 13435                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13436                           
 13437                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13438                           ;incstack = 0
 13439  005BE6  50E1               	movf	fsr1l,w,c
 13440  005BE8  0FFD               	addlw	-3
 13441  005BEA  6ED9               	movwf	fsr2l,c
 13442  005BEC  50E2               	movf	fsr1h,w,c
 13443  005BEE  6EDA               	movwf	fsr2h,c
 13444  005BF0  0EFF               	movlw	255
 13445  005BF2  22DA               	addwfc	fsr2h,f,c
 13446  005BF4  006F FF78  F01C    	movff	postinc2,_INT1_InterruptHandler
 13447  005BFA  006F FF78  F01D    	movff	postinc2,_INT1_InterruptHandler+1
 13448  005C00  006F FF74  F01E    	movff	postdec2,_INT1_InterruptHandler+2
 13449                           
 13450                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13451  005C06  52E5               	movf	postdec1,f,c
 13452  005C08  52E5               	movf	postdec1,f,c
 13453  005C0A  52E5               	movf	postdec1,f,c
 13454  005C0C  0012               	return		;funcret
 13455  005C0E                     __end_of_INT1_SetInterruptHandler:
 13456                           	opt callstack 0
 13457                           
 13458 ;; *************** function _INT0_SetInterruptHandler *****************
 13459 ;; Defined at:
 13460 ;;		line 53 in file "mcc_generated_files/ext_int.c"
 13461 ;; Parameters:    Size  Location     Type
 13462 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13463 ;;		 -> INT0_DefaultInterruptHandler(1), 
 13464 ;; Auto vars:     Size  Location     Type
 13465 ;;		None
 13466 ;; Return value:  Size  Location     Type
 13467 ;;                  1  [STACK] void 
 13468 ;; Registers used:
 13469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13470 ;; Tracked objects:
 13471 ;;		On entry : 3F/39
 13472 ;;		On exit  : 0/0
 13473 ;;		Unchanged: 0/0
 13474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13479 ;;Total ram usage:        0 bytes
 13480 ;; Hardware stack levels used:    1
 13481 ;; Hardware stack levels required when called:    3
 13482 ;; This function calls:
 13483 ;;		Nothing
 13484 ;; This function is called by:
 13485 ;;		_EXT_INT_Initialize
 13486 ;; This function uses a reentrant model
 13487 ;;
 13488                           
 13489                           	psect	text74
 13490  005C0E                     __ptext74:
 13491                           	opt callstack 0
 13492  005C0E                     _INT0_SetInterruptHandler:
 13493                           	opt callstack 25
 13494                           
 13495                           ;mcc_generated_files/ext_int.c: 54:     INT0_InterruptHandler = InterruptHandler;
 13496                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13497                           
 13498                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13499                           ;incstack = 0
 13500  005C0E  50E1               	movf	fsr1l,w,c
 13501  005C10  0FFD               	addlw	-3
 13502  005C12  6ED9               	movwf	fsr2l,c
 13503  005C14  50E2               	movf	fsr1h,w,c
 13504  005C16  6EDA               	movwf	fsr2h,c
 13505  005C18  0EFF               	movlw	255
 13506  005C1A  22DA               	addwfc	fsr2h,f,c
 13507  005C1C  006F FF78  F01F    	movff	postinc2,_INT0_InterruptHandler
 13508  005C22  006F FF78  F020    	movff	postinc2,_INT0_InterruptHandler+1
 13509  005C28  006F FF74  F021    	movff	postdec2,_INT0_InterruptHandler+2
 13510                           
 13511                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 13512  005C2E  52E5               	movf	postdec1,f,c
 13513  005C30  52E5               	movf	postdec1,f,c
 13514  005C32  52E5               	movf	postdec1,f,c
 13515  005C34  0012               	return		;funcret
 13516  005C36                     __end_of_INT0_SetInterruptHandler:
 13517                           	opt callstack 0
 13518                           
 13519 ;; *************** function _DSM_Initialize *****************
 13520 ;; Defined at:
 13521 ;;		line 58 in file "mcc_generated_files/dsm.c"
 13522 ;; Parameters:    Size  Location     Type
 13523 ;;		None
 13524 ;; Auto vars:     Size  Location     Type
 13525 ;;		None
 13526 ;; Return value:  Size  Location     Type
 13527 ;;                  1  [STACK] void 
 13528 ;; Registers used:
 13529 ;;		wreg, status,2
 13530 ;; Tracked objects:
 13531 ;;		On entry : 0/3C
 13532 ;;		On exit  : 3F/3C
 13533 ;;		Unchanged: 0/0
 13534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13539 ;;Total ram usage:        0 bytes
 13540 ;; Hardware stack levels used:    1
 13541 ;; Hardware stack levels required when called:    3
 13542 ;; This function calls:
 13543 ;;		Nothing
 13544 ;; This function is called by:
 13545 ;;		_SYSTEM_Initialize
 13546 ;; This function uses a reentrant model
 13547 ;;
 13548                           
 13549                           	psect	text75
 13550  005E82                     __ptext75:
 13551                           	opt callstack 0
 13552  005E82                     _DSM_Initialize:
 13553                           	opt callstack 26
 13554                           
 13555                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 13556                           
 13557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13558                           ;incstack = 0
 13559  005E82  013C               	movlb	60	; () banked
 13560  005E84  99FA               	bcf	250,4,b	;volatile
 13561                           
 13562                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 13563  005E86  81FB               	bsf	251,0,b	;volatile
 13564                           
 13565                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 13566  005E88  93FB               	bcf	251,1,b	;volatile
 13567                           
 13568                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 13569  005E8A  89FB               	bsf	251,4,b	;volatile
 13570                           
 13571                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 13572  005E8C  9BFB               	bcf	251,5,b	;volatile
 13573                           
 13574                           ; BSR set to: 60
 13575                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 13576  005E8E  0E13               	movlw	19
 13577  005E90  6FFC               	movwf	252,b	;volatile
 13578                           
 13579                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 13580  005E92  0E0E               	movlw	14
 13581  005E94  6FFE               	movwf	254,b	;volatile
 13582                           
 13583                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 13584  005E96  0E04               	movlw	4
 13585  005E98  6FFD               	movwf	253,b	;volatile
 13586                           
 13587                           ; BSR set to: 60
 13588                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 13589  005E9A  8FFA               	bsf	250,7,b	;volatile
 13590                           
 13591                           ; BSR set to: 60
 13592                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 13593  005E9C  0012               	return		;funcret
 13594  005E9E                     __end_of_DSM_Initialize:
 13595                           	opt callstack 0
 13596                           
 13597 ;; *************** function _DMA1_Initialize *****************
 13598 ;; Defined at:
 13599 ;;		line 86 in file "mcc_generated_files/dma1.c"
 13600 ;; Parameters:    Size  Location     Type
 13601 ;;		None
 13602 ;; Auto vars:     Size  Location     Type
 13603 ;;		None
 13604 ;; Return value:  Size  Location     Type
 13605 ;;                  1  [STACK] void 
 13606 ;; Registers used:
 13607 ;;		wreg, status,2
 13608 ;; Tracked objects:
 13609 ;;		On entry : 3F/3D
 13610 ;;		On exit  : 3F/3B
 13611 ;;		Unchanged: 0/0
 13612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13617 ;;Total ram usage:        0 bytes
 13618 ;; Hardware stack levels used:    1
 13619 ;; Hardware stack levels required when called:    3
 13620 ;; This function calls:
 13621 ;;		Nothing
 13622 ;; This function is called by:
 13623 ;;		_SYSTEM_Initialize
 13624 ;; This function uses a reentrant model
 13625 ;;
 13626                           
 13627                           	psect	text76
 13628  00525A                     __ptext76:
 13629                           	opt callstack 0
 13630  00525A                     _DMA1_Initialize:
 13631                           	opt callstack 26
 13632                           
 13633                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 13634                           
 13635                           ; BSR set to: 60
 13636                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13637                           ;incstack = 0
 13638  00525A  0E00               	movlw	0
 13639  00525C  013B               	movlb	59	; () banked
 13640  00525E  6FF9               	movwf	249,b	;volatile
 13641  005260  0E10               	movlw	16
 13642  005262  6FFA               	movwf	250,b	;volatile
 13643  005264  0E00               	movlw	0
 13644  005266  6FFB               	movwf	251,b	;volatile
 13645                           
 13646                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 13647  005268  0E3D               	movlw	61
 13648  00526A  6FF1               	movwf	241,b	;volatile
 13649  00526C  0E11               	movlw	17
 13650  00526E  6FF0               	movwf	240,b	;volatile
 13651                           
 13652                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 13653  005270  0E03               	movlw	3
 13654  005272  6FFD               	movwf	253,b	;volatile
 13655                           
 13656                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 13657  005274  0E00               	movlw	0
 13658  005276  6FF8               	movwf	248,b	;volatile
 13659  005278  0E01               	movlw	1
 13660  00527A  6FF7               	movwf	247,b	;volatile
 13661                           
 13662                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 13663  00527C  0E00               	movlw	0
 13664  00527E  6FEF               	movwf	239,b	;volatile
 13665  005280  0E01               	movlw	1
 13666  005282  6FEE               	movwf	238,b	;volatile
 13667                           
 13668                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 13669  005284  0E15               	movlw	21
 13670  005286  6FFF               	movwf	255,b	;volatile
 13671                           
 13672                           ; BSR set to: 59
 13673                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 13674  005288  6BFE               	clrf	254,b	;volatile
 13675                           
 13676                           ; BSR set to: 59
 13677                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 13678  00528A  0139               	movlb	57	; () banked
 13679  00528C  93A2               	bcf	162,1,b	;volatile
 13680                           
 13681                           ; BSR set to: 57
 13682                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 13683  00528E  91A2               	bcf	162,0,b	;volatile
 13684                           
 13685                           ; BSR set to: 57
 13686                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 13687  005290  97A2               	bcf	162,3,b	;volatile
 13688                           
 13689                           ; BSR set to: 57
 13690                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 13691  005292  95A2               	bcf	162,2,b	;volatile
 13692                           
 13693                           ; BSR set to: 57
 13694                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 13695  005294  8392               	bsf	146,1,b	;volatile
 13696                           
 13697                           ; BSR set to: 57
 13698                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 13699  005296  8192               	bsf	146,0,b	;volatile
 13700                           
 13701                           ; BSR set to: 57
 13702                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 13703  005298  8792               	bsf	146,3,b	;volatile
 13704                           
 13705                           ; BSR set to: 57
 13706                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 13707  00529A  8592               	bsf	146,2,b	;volatile
 13708                           
 13709                           ; BSR set to: 57
 13710                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 13711  00529C  6BF1               	clrf	241,b	;volatile
 13712                           
 13713                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 13714  00529E  0E01               	movlw	1
 13715  0052A0  6FF2               	movwf	242,b	;volatile
 13716                           
 13717                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 13718  0052A2  0E04               	movlw	4
 13719  0052A4  6FF3               	movwf	243,b	;volatile
 13720                           
 13721                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 13722  0052A6  0E02               	movlw	2
 13723  0052A8  6FF4               	movwf	244,b	;volatile
 13724                           
 13725                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 13726  0052AA  0E03               	movlw	3
 13727  0052AC  6FF7               	movwf	247,b	;volatile
 13728  0052AE  9ED2               	bcf	16338,7,c	;# 
 13729  0052B0  0139               	banksel	14831	;# 
 13730  0052B2  0E55               	movlw	85	;# 
 13731  0052B4  6FEF               	movwf	14831,b	;# 
 13732  0052B6  0EAA               	movlw	170	;# 
 13733  0052B8  6FEF               	movwf	14831,b	;# 
 13734  0052BA  81EF               	bsf	14831,0,b	;# 
 13735  0052BC  8ED2               	bsf	16338,7,c	;# 
 13736                           
 13737                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 13738  0052BE  013B               	movlb	59	; () banked
 13739  0052C0  6BFC               	clrf	252,b	;volatile
 13740                           
 13741                           ; BSR set to: 59
 13742                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13743  0052C2  0012               	return		;funcret
 13744  0052C4                     __end_of_DMA1_Initialize:
 13745                           	opt callstack 0
 13746                           
 13747 ;; *************** function _CLKREF_Initialize *****************
 13748 ;; Defined at:
 13749 ;;		line 58 in file "mcc_generated_files/clkref.c"
 13750 ;; Parameters:    Size  Location     Type
 13751 ;;		None
 13752 ;; Auto vars:     Size  Location     Type
 13753 ;;		None
 13754 ;; Return value:  Size  Location     Type
 13755 ;;                  1  [STACK] void 
 13756 ;; Registers used:
 13757 ;;		wreg, status,2
 13758 ;; Tracked objects:
 13759 ;;		On entry : 3F/3B
 13760 ;;		On exit  : 3F/3C
 13761 ;;		Unchanged: 0/0
 13762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13767 ;;Total ram usage:        0 bytes
 13768 ;; Hardware stack levels used:    1
 13769 ;; Hardware stack levels required when called:    3
 13770 ;; This function calls:
 13771 ;;		Nothing
 13772 ;; This function is called by:
 13773 ;;		_SYSTEM_Initialize
 13774 ;; This function uses a reentrant model
 13775 ;;
 13776                           
 13777                           	psect	text77
 13778  005F88                     __ptext77:
 13779                           	opt callstack 0
 13780  005F88                     _CLKREF_Initialize:
 13781                           	opt callstack 26
 13782                           
 13783                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 13784                           
 13785                           ; BSR set to: 59
 13786                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13787                           ;incstack = 0
 13788  005F88  013C               	movlb	60	; () banked
 13789  005F8A  6BE6               	clrf	230,b	;volatile
 13790                           
 13791                           ; BSR set to: 60
 13792                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 13793  005F8C  0E94               	movlw	148
 13794  005F8E  6FE5               	movwf	229,b	;volatile
 13795                           
 13796                           ; BSR set to: 60
 13797                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13798  005F90  0012               	return		;funcret
 13799  005F92                     __end_of_CLKREF_Initialize:
 13800                           	opt callstack 0
 13801                           
 13802 ;; *************** function _CLC1_Initialize *****************
 13803 ;; Defined at:
 13804 ;;		line 58 in file "mcc_generated_files/clc1.c"
 13805 ;; Parameters:    Size  Location     Type
 13806 ;;		None
 13807 ;; Auto vars:     Size  Location     Type
 13808 ;;		None
 13809 ;; Return value:  Size  Location     Type
 13810 ;;                  1  [STACK] void 
 13811 ;; Registers used:
 13812 ;;		wreg, status,2
 13813 ;; Tracked objects:
 13814 ;;		On entry : 0/39
 13815 ;;		On exit  : 3F/3C
 13816 ;;		Unchanged: 0/0
 13817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13822 ;;Total ram usage:        0 bytes
 13823 ;; Hardware stack levels used:    1
 13824 ;; Hardware stack levels required when called:    3
 13825 ;; This function calls:
 13826 ;;		Nothing
 13827 ;; This function is called by:
 13828 ;;		_SYSTEM_Initialize
 13829 ;; This function uses a reentrant model
 13830 ;;
 13831                           
 13832                           	psect	text78
 13833  005D20                     __ptext78:
 13834                           	opt callstack 0
 13835  005D20                     _CLC1_Initialize:
 13836                           	opt callstack 26
 13837                           
 13838                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 13839                           
 13840                           ; BSR set to: 60
 13841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13842                           ;incstack = 0
 13843  005D20  013C               	movlb	60	; () banked
 13844  005D22  6B75               	clrf	117,b	;volatile
 13845                           
 13846                           ; BSR set to: 60
 13847                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 13848  005D24  0E04               	movlw	4
 13849  005D26  6F76               	movwf	118,b	;volatile
 13850                           
 13851                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 13852  005D28  0E04               	movlw	4
 13853  005D2A  6F77               	movwf	119,b	;volatile
 13854                           
 13855                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 13856  005D2C  0E04               	movlw	4
 13857  005D2E  6F78               	movwf	120,b	;volatile
 13858                           
 13859                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 13860  005D30  0E04               	movlw	4
 13861  005D32  6F79               	movwf	121,b	;volatile
 13862                           
 13863                           ; BSR set to: 60
 13864                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 13865  005D34  6B7A               	clrf	122,b	;volatile
 13866                           
 13867                           ; BSR set to: 60
 13868                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 13869  005D36  6B7B               	clrf	123,b	;volatile
 13870                           
 13871                           ; BSR set to: 60
 13872                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 13873  005D38  6B7C               	clrf	124,b	;volatile
 13874                           
 13875                           ; BSR set to: 60
 13876                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 13877  005D3A  6B7D               	clrf	125,b	;volatile
 13878                           
 13879                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 13880  005D3C  0E81               	movlw	129
 13881  005D3E  6F74               	movwf	116,b	;volatile
 13882                           
 13883                           ; BSR set to: 60
 13884                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13885  005D40  0012               	return		;funcret
 13886  005D42                     __end_of_CLC1_Initialize:
 13887                           	opt callstack 0
 13888                           
 13889 ;; *************** function _ADCC_Initialize *****************
 13890 ;; Defined at:
 13891 ;;		line 64 in file "mcc_generated_files/adcc.c"
 13892 ;; Parameters:    Size  Location     Type
 13893 ;;		None
 13894 ;; Auto vars:     Size  Location     Type
 13895 ;;		None
 13896 ;; Return value:  Size  Location     Type
 13897 ;;                  1  [STACK] void 
 13898 ;; Registers used:
 13899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13900 ;; Tracked objects:
 13901 ;;		On entry : 3F/39
 13902 ;;		On exit  : 0/0
 13903 ;;		Unchanged: 0/0
 13904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13909 ;;Total ram usage:        0 bytes
 13910 ;; Hardware stack levels used:    1
 13911 ;; Hardware stack levels required when called:    4
 13912 ;; This function calls:
 13913 ;;		_ADCC_SetADIInterruptHandler
 13914 ;; This function is called by:
 13915 ;;		_SYSTEM_Initialize
 13916 ;; This function uses a reentrant model
 13917 ;;
 13918                           
 13919                           	psect	text79
 13920  005598                     __ptext79:
 13921                           	opt callstack 0
 13922  005598                     _ADCC_Initialize:
 13923                           	opt callstack 25
 13924                           
 13925                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 13926                           
 13927                           ; BSR set to: 60
 13928                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13929                           ;incstack = 0
 13930  005598  013E               	movlb	62	; () banked
 13931  00559A  6BDE               	clrf	222,b	;volatile
 13932                           
 13933                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 13934  00559C  6BDF               	clrf	223,b	;volatile
 13935                           
 13936                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 13937  00559E  6BE0               	clrf	224,b	;volatile
 13938                           
 13939                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 13940  0055A0  6BE1               	clrf	225,b	;volatile
 13941                           
 13942                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 13943  0055A2  6BE4               	clrf	228,b	;volatile
 13944                           
 13945                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 13946  0055A4  6BE5               	clrf	229,b	;volatile
 13947                           
 13948                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 13949  0055A6  6BEA               	clrf	234,b	;volatile
 13950                           
 13951                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 13952  0055A8  6BEC               	clrf	236,b	;volatile
 13953                           
 13954                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 13955  0055AA  6BF1               	clrf	241,b	;volatile
 13956                           
 13957                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 13958  0055AC  6BF3               	clrf	243,b	;volatile
 13959                           
 13960                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 13961  0055AE  6BF4               	clrf	244,b	;volatile
 13962                           
 13963                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 13964  0055B0  6BF5               	clrf	245,b	;volatile
 13965                           
 13966                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 13967  0055B2  6BF6               	clrf	246,b	;volatile
 13968                           
 13969                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 13970  0055B4  6BF7               	clrf	247,b	;volatile
 13971                           
 13972                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 13973  0055B6  6BF9               	clrf	249,b	;volatile
 13974                           
 13975                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 13976  0055B8  6BFA               	clrf	250,b	;volatile
 13977                           
 13978                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 13979  0055BA  6BFB               	clrf	251,b	;volatile
 13980                           
 13981                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 13982  0055BC  6BFC               	clrf	252,b	;volatile
 13983                           
 13984                           ; BSR set to: 62
 13985                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 13986  0055BE  0E02               	movlw	2
 13987  0055C0  6FFD               	movwf	253,b	;volatile
 13988                           
 13989                           ; BSR set to: 62
 13990                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 13991  0055C2  6BFE               	clrf	254,b	;volatile
 13992                           
 13993                           ; BSR set to: 62
 13994                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 13995  0055C4  6BFF               	clrf	255,b	;volatile
 13996                           
 13997                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 13998  0055C6  0E94               	movlw	148
 13999  0055C8  6FF8               	movwf	248,b	;volatile
 14000                           
 14001                           ; BSR set to: 62
 14002                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 14003  0055CA  0139               	movlb	57	; () banked
 14004  0055CC  95A1               	bcf	161,2,b	;volatile
 14005                           
 14006                           ; BSR set to: 57
 14007                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 14008  0055CE  8591               	bsf	145,2,b	;volatile
 14009                           
 14010                           ; BSR set to: 57
 14011                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 14012  0055D0  0EDC               	movlw	low _ADCC_DefaultInterruptHandler
 14013  0055D2  6EE6               	movwf	postinc1,c
 14014  0055D4  0E5F               	movlw	high _ADCC_DefaultInterruptHandler
 14015  0055D6  6EE6               	movwf	postinc1,c
 14016  0055D8  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 14017  0055DA  6EE6               	movwf	postinc1,c
 14018  0055DC  EC1B  F02E         	call	_ADCC_SetADIInterruptHandler	;wreg free
 14019                           
 14020                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14021  0055E0  0012               	return		;funcret
 14022  0055E2                     __end_of_ADCC_Initialize:
 14023                           	opt callstack 0
 14024                           
 14025 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 14026 ;; Defined at:
 14027 ;;		line 316 in file "mcc_generated_files/adcc.c"
 14028 ;; Parameters:    Size  Location     Type
 14029 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14030 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 14031 ;; Auto vars:     Size  Location     Type
 14032 ;;		None
 14033 ;; Return value:  Size  Location     Type
 14034 ;;                  1  [STACK] void 
 14035 ;; Registers used:
 14036 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14037 ;; Tracked objects:
 14038 ;;		On entry : 3F/39
 14039 ;;		On exit  : 0/0
 14040 ;;		Unchanged: 0/0
 14041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14046 ;;Total ram usage:        0 bytes
 14047 ;; Hardware stack levels used:    1
 14048 ;; Hardware stack levels required when called:    3
 14049 ;; This function calls:
 14050 ;;		Nothing
 14051 ;; This function is called by:
 14052 ;;		_ADCC_Initialize
 14053 ;; This function uses a reentrant model
 14054 ;;
 14055                           
 14056                           	psect	text80
 14057  005C36                     __ptext80:
 14058                           	opt callstack 0
 14059  005C36                     _ADCC_SetADIInterruptHandler:
 14060                           	opt callstack 25
 14061                           
 14062                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 14063                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14064                           
 14065                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14066                           ;incstack = 0
 14067  005C36  50E1               	movf	fsr1l,w,c
 14068  005C38  0FFD               	addlw	-3
 14069  005C3A  6ED9               	movwf	fsr2l,c
 14070  005C3C  50E2               	movf	fsr1h,w,c
 14071  005C3E  6EDA               	movwf	fsr2h,c
 14072  005C40  0EFF               	movlw	255
 14073  005C42  22DA               	addwfc	fsr2h,f,c
 14074  005C44  006F FF78  F00A    	movff	postinc2,_ADCC_ADI_InterruptHandler
 14075  005C4A  006F FF78  F00B    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 14076  005C50  006F FF74  F00C    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 14077                           
 14078                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 14079  005C56  52E5               	movf	postdec1,f,c
 14080  005C58  52E5               	movf	postdec1,f,c
 14081  005C5A  52E5               	movf	postdec1,f,c
 14082  005C5C  0012               	return		;funcret
 14083  005C5E                     __end_of_ADCC_SetADIInterruptHandler:
 14084                           	opt callstack 0
 14085                           
 14086 ;; *************** function _INT0_ISR *****************
 14087 ;; Defined at:
 14088 ;;		line 35 in file "mcc_generated_files/ext_int.c"
 14089 ;; Parameters:    Size  Location     Type
 14090 ;;		None
 14091 ;; Auto vars:     Size  Location     Type
 14092 ;;		None
 14093 ;; Return value:  Size  Location     Type
 14094 ;;                  1    wreg      void 
 14095 ;; Registers used:
 14096 ;;		wreg, status,2, status,0, pclath, tosl
 14097 ;; Tracked objects:
 14098 ;;		On entry : 0/0
 14099 ;;		On exit  : 0/0
 14100 ;;		Unchanged: 0/0
 14101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14106 ;;Total ram usage:        0 bytes
 14107 ;; Hardware stack levels used:    1
 14108 ;; Hardware stack levels required when called:    2
 14109 ;; This function calls:
 14110 ;;		_INT0_CallBack
 14111 ;; This function is called by:
 14112 ;;		Interrupt level 2
 14113 ;; This function uses a non-reentrant model
 14114 ;;
 14115                           
 14116                           	psect	text81
 14117  005F3C                     __ptext81:
 14118                           	opt callstack 0
 14119  005F3C                     _INT0_ISR:
 14120                           	opt callstack 17
 14121                           
 14122                           ;incstack = 0
 14123  005F3C  EE13  F150         	lfsr	1,___inthi_sp
 14124                           
 14125                           ;mcc_generated_files/ext_int.c: 37:     (PIR1bits.INT0IF = 0);
 14126  005F40  0139               	movlb	57	; () banked
 14127  005F42  91A1               	bcf	161,0,b	;volatile
 14128                           
 14129                           ; BSR set to: 57
 14130                           ;mcc_generated_files/ext_int.c: 40:     INT0_CallBack();
 14131  005F44  ECA1  F02E         	call	_INT0_CallBack	;wreg free
 14132  005F48  0011               	retfie		f
 14133  005F4A                     __end_of_INT0_ISR:
 14134                           	opt callstack 0
 14135                           
 14136 ;; *************** function _INT0_CallBack *****************
 14137 ;; Defined at:
 14138 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 14139 ;; Parameters:    Size  Location     Type
 14140 ;;		None
 14141 ;; Auto vars:     Size  Location     Type
 14142 ;;		None
 14143 ;; Return value:  Size  Location     Type
 14144 ;;                  1  [STACK] void 
 14145 ;; Registers used:
 14146 ;;		wreg, status,2, status,0, pclath, tosl
 14147 ;; Tracked objects:
 14148 ;;		On entry : 3F/39
 14149 ;;		On exit  : 0/0
 14150 ;;		Unchanged: 0/0
 14151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14155 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14156 ;;Total ram usage:        0 bytes
 14157 ;; Hardware stack levels used:    1
 14158 ;; Hardware stack levels required when called:    1
 14159 ;; This function calls:
 14160 ;;		Absolute function
 14161 ;;		_INT0_DefaultInterruptHandler
 14162 ;; This function is called by:
 14163 ;;		_INT0_ISR
 14164 ;; This function uses a reentrant model
 14165 ;;
 14166                           
 14167                           	psect	text82
 14168  005D42                     __ptext82:
 14169                           	opt callstack 0
 14170  005D42                     _INT0_CallBack:
 14171                           	opt callstack 17
 14172                           
 14173                           ;mcc_generated_files/ext_int.c: 47:     if(INT0_InterruptHandler)
 14174                           
 14175                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14176                           ;incstack = 0
 14177  005D42  501F               	movf	_INT0_InterruptHandler,w,c
 14178  005D44  1020               	iorwf	_INT0_InterruptHandler+1,w,c
 14179  005D46  1021               	iorwf	_INT0_InterruptHandler+2,w,c
 14180  005D48  B4D8               	btfsc	status,2,c
 14181  005D4A  0012               	return	
 14182                           
 14183                           ;mcc_generated_files/ext_int.c: 48:     {;mcc_generated_files/ext_int.c: 49:         INT
      +                          0_InterruptHandler();
 14184  005D4C  D801               	call	u149_48
 14185  005D4E  0012               	return	
 14186  005D50                     u149_48:
 14187  005D50  0005               	push	
 14188  005D52  6EFA               	movwf	pclath,c
 14189  005D54  501F               	movf	_INT0_InterruptHandler,w,c
 14190  005D56  6EFD               	movwf	tosl,c
 14191  005D58  5020               	movf	_INT0_InterruptHandler+1,w,c
 14192  005D5A  6EFE               	movwf	tosh,c
 14193  005D5C  5021               	movf	_INT0_InterruptHandler+2,w,c
 14194  005D5E  6EFF               	movwf	tosu,c
 14195  005D60  50FA               	movf	pclath,w,c
 14196  005D62  0012               	return		;indir
 14197  005D64                     __end_of_INT0_CallBack:
 14198                           	opt callstack 0
 14199                           
 14200 ;; *************** function _INT0_DefaultInterruptHandler *****************
 14201 ;; Defined at:
 14202 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 14203 ;; Parameters:    Size  Location     Type
 14204 ;;		None
 14205 ;; Auto vars:     Size  Location     Type
 14206 ;;		None
 14207 ;; Return value:  Size  Location     Type
 14208 ;;                  1  [STACK] void 
 14209 ;; Registers used:
 14210 ;;		None
 14211 ;; Tracked objects:
 14212 ;;		On entry : 0/39
 14213 ;;		On exit  : 0/0
 14214 ;;		Unchanged: 0/0
 14215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14220 ;;Total ram usage:        0 bytes
 14221 ;; Hardware stack levels used:    1
 14222 ;; This function calls:
 14223 ;;		Nothing
 14224 ;; This function is called by:
 14225 ;;		_EXT_INT_Initialize
 14226 ;;		_INT0_CallBack
 14227 ;; This function uses a reentrant model
 14228 ;;
 14229                           
 14230                           	psect	text83
 14231  005FD6                     __ptext83:
 14232                           	opt callstack 0
 14233  005FD6                     _INT0_DefaultInterruptHandler:
 14234                           	opt callstack 17
 14235                           
 14236                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14237                           
 14238                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14239                           ;incstack = 0
 14240  005FD6  0012               	return		;funcret
 14241  005FD8                     __end_of_INT0_DefaultInterruptHandler:
 14242                           	opt callstack 0
 14243                           
 14244 ;; *************** function _INT1_ISR *****************
 14245 ;; Defined at:
 14246 ;;		line 61 in file "mcc_generated_files/ext_int.c"
 14247 ;; Parameters:    Size  Location     Type
 14248 ;;		None
 14249 ;; Auto vars:     Size  Location     Type
 14250 ;;		None
 14251 ;; Return value:  Size  Location     Type
 14252 ;;                  1    wreg      void 
 14253 ;; Registers used:
 14254 ;;		wreg, status,2, status,0, pclath, tosl
 14255 ;; Tracked objects:
 14256 ;;		On entry : 0/0
 14257 ;;		On exit  : 0/0
 14258 ;;		Unchanged: 0/0
 14259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14264 ;;Total ram usage:        0 bytes
 14265 ;; Hardware stack levels used:    1
 14266 ;; Hardware stack levels required when called:    2
 14267 ;; This function calls:
 14268 ;;		_INT1_CallBack
 14269 ;; This function is called by:
 14270 ;;		Interrupt level 2
 14271 ;; This function uses a non-reentrant model
 14272 ;;
 14273                           
 14274                           	psect	text84
 14275  005F4C                     __ptext84:
 14276                           	opt callstack 0
 14277  005F4C                     _INT1_ISR:
 14278                           	opt callstack 17
 14279                           
 14280                           ;incstack = 0
 14281  005F4C  EE13  F150         	lfsr	1,___inthi_sp
 14282                           
 14283                           ;mcc_generated_files/ext_int.c: 63:     (PIR5bits.INT1IF = 0);
 14284  005F50  0139               	movlb	57	; () banked
 14285  005F52  91A5               	bcf	165,0,b	;volatile
 14286                           
 14287                           ; BSR set to: 57
 14288                           ;mcc_generated_files/ext_int.c: 66:     INT1_CallBack();
 14289  005F54  ECB2  F02E         	call	_INT1_CallBack	;wreg free
 14290  005F58  0011               	retfie		f
 14291  005F5A                     __end_of_INT1_ISR:
 14292                           	opt callstack 0
 14293                           
 14294 ;; *************** function _INT1_CallBack *****************
 14295 ;; Defined at:
 14296 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 14297 ;; Parameters:    Size  Location     Type
 14298 ;;		None
 14299 ;; Auto vars:     Size  Location     Type
 14300 ;;		None
 14301 ;; Return value:  Size  Location     Type
 14302 ;;                  1  [STACK] void 
 14303 ;; Registers used:
 14304 ;;		wreg, status,2, status,0, pclath, tosl
 14305 ;; Tracked objects:
 14306 ;;		On entry : 3F/39
 14307 ;;		On exit  : 0/0
 14308 ;;		Unchanged: 0/0
 14309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14314 ;;Total ram usage:        0 bytes
 14315 ;; Hardware stack levels used:    1
 14316 ;; Hardware stack levels required when called:    1
 14317 ;; This function calls:
 14318 ;;		Absolute function
 14319 ;;		_INT1_DefaultInterruptHandler
 14320 ;; This function is called by:
 14321 ;;		_INT1_ISR
 14322 ;; This function uses a reentrant model
 14323 ;;
 14324                           
 14325                           	psect	text85
 14326  005D64                     __ptext85:
 14327                           	opt callstack 0
 14328  005D64                     _INT1_CallBack:
 14329                           	opt callstack 17
 14330                           
 14331                           ;mcc_generated_files/ext_int.c: 73:     if(INT1_InterruptHandler)
 14332                           
 14333                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14334                           ;incstack = 0
 14335  005D64  501C               	movf	_INT1_InterruptHandler,w,c
 14336  005D66  101D               	iorwf	_INT1_InterruptHandler+1,w,c
 14337  005D68  101E               	iorwf	_INT1_InterruptHandler+2,w,c
 14338  005D6A  B4D8               	btfsc	status,2,c
 14339  005D6C  0012               	return	
 14340                           
 14341                           ;mcc_generated_files/ext_int.c: 74:     {;mcc_generated_files/ext_int.c: 75:         INT
      +                          1_InterruptHandler();
 14342  005D6E  D801               	call	u151_48
 14343  005D70  0012               	return	
 14344  005D72                     u151_48:
 14345  005D72  0005               	push	
 14346  005D74  6EFA               	movwf	pclath,c
 14347  005D76  501C               	movf	_INT1_InterruptHandler,w,c
 14348  005D78  6EFD               	movwf	tosl,c
 14349  005D7A  501D               	movf	_INT1_InterruptHandler+1,w,c
 14350  005D7C  6EFE               	movwf	tosh,c
 14351  005D7E  501E               	movf	_INT1_InterruptHandler+2,w,c
 14352  005D80  6EFF               	movwf	tosu,c
 14353  005D82  50FA               	movf	pclath,w,c
 14354  005D84  0012               	return		;indir
 14355  005D86                     __end_of_INT1_CallBack:
 14356                           	opt callstack 0
 14357                           
 14358 ;; *************** function _INT1_DefaultInterruptHandler *****************
 14359 ;; Defined at:
 14360 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 14361 ;; Parameters:    Size  Location     Type
 14362 ;;		None
 14363 ;; Auto vars:     Size  Location     Type
 14364 ;;		None
 14365 ;; Return value:  Size  Location     Type
 14366 ;;                  1  [STACK] void 
 14367 ;; Registers used:
 14368 ;;		None
 14369 ;; Tracked objects:
 14370 ;;		On entry : 0/39
 14371 ;;		On exit  : 0/0
 14372 ;;		Unchanged: 0/0
 14373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14378 ;;Total ram usage:        0 bytes
 14379 ;; Hardware stack levels used:    1
 14380 ;; This function calls:
 14381 ;;		Nothing
 14382 ;; This function is called by:
 14383 ;;		_EXT_INT_Initialize
 14384 ;;		_INT1_CallBack
 14385 ;; This function uses a reentrant model
 14386 ;;
 14387                           
 14388                           	psect	text86
 14389  005FD8                     __ptext86:
 14390                           	opt callstack 0
 14391  005FD8                     _INT1_DefaultInterruptHandler:
 14392                           	opt callstack 17
 14393                           
 14394                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14395                           
 14396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14397                           ;incstack = 0
 14398  005FD8  0012               	return		;funcret
 14399  005FDA                     __end_of_INT1_DefaultInterruptHandler:
 14400                           	opt callstack 0
 14401                           
 14402 ;; *************** function _INT2_ISR *****************
 14403 ;; Defined at:
 14404 ;;		line 87 in file "mcc_generated_files/ext_int.c"
 14405 ;; Parameters:    Size  Location     Type
 14406 ;;		None
 14407 ;; Auto vars:     Size  Location     Type
 14408 ;;		None
 14409 ;; Return value:  Size  Location     Type
 14410 ;;                  1    wreg      void 
 14411 ;; Registers used:
 14412 ;;		wreg, status,2, status,0, pclath, tosl
 14413 ;; Tracked objects:
 14414 ;;		On entry : 0/0
 14415 ;;		On exit  : 0/0
 14416 ;;		Unchanged: 0/0
 14417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14422 ;;Total ram usage:        0 bytes
 14423 ;; Hardware stack levels used:    1
 14424 ;; Hardware stack levels required when called:    2
 14425 ;; This function calls:
 14426 ;;		_INT2_CallBack
 14427 ;; This function is called by:
 14428 ;;		Interrupt level 2
 14429 ;; This function uses a non-reentrant model
 14430 ;;
 14431                           
 14432                           	psect	text87
 14433  005F5C                     __ptext87:
 14434                           	opt callstack 0
 14435  005F5C                     _INT2_ISR:
 14436                           	opt callstack 17
 14437                           
 14438                           ;incstack = 0
 14439  005F5C  EE13  F150         	lfsr	1,___inthi_sp
 14440                           
 14441                           ;mcc_generated_files/ext_int.c: 89:     (PIR7bits.INT2IF = 0);
 14442  005F60  0139               	movlb	57	; () banked
 14443  005F62  9BA7               	bcf	167,5,b	;volatile
 14444                           
 14445                           ; BSR set to: 57
 14446                           ;mcc_generated_files/ext_int.c: 92:     INT2_CallBack();
 14447  005F64  ECC3  F02E         	call	_INT2_CallBack	;wreg free
 14448  005F68  0011               	retfie		f
 14449  005F6A                     __end_of_INT2_ISR:
 14450                           	opt callstack 0
 14451                           
 14452 ;; *************** function _INT2_CallBack *****************
 14453 ;; Defined at:
 14454 ;;		line 96 in file "mcc_generated_files/ext_int.c"
 14455 ;; Parameters:    Size  Location     Type
 14456 ;;		None
 14457 ;; Auto vars:     Size  Location     Type
 14458 ;;		None
 14459 ;; Return value:  Size  Location     Type
 14460 ;;                  1  [STACK] void 
 14461 ;; Registers used:
 14462 ;;		wreg, status,2, status,0, pclath, tosl
 14463 ;; Tracked objects:
 14464 ;;		On entry : 3F/39
 14465 ;;		On exit  : 0/0
 14466 ;;		Unchanged: 0/0
 14467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14472 ;;Total ram usage:        0 bytes
 14473 ;; Hardware stack levels used:    1
 14474 ;; Hardware stack levels required when called:    1
 14475 ;; This function calls:
 14476 ;;		Absolute function
 14477 ;;		_INT2_DefaultInterruptHandler
 14478 ;; This function is called by:
 14479 ;;		_INT2_ISR
 14480 ;; This function uses a reentrant model
 14481 ;;
 14482                           
 14483                           	psect	text88
 14484  005D86                     __ptext88:
 14485                           	opt callstack 0
 14486  005D86                     _INT2_CallBack:
 14487                           	opt callstack 17
 14488                           
 14489                           ;mcc_generated_files/ext_int.c: 99:     if(INT2_InterruptHandler)
 14490                           
 14491                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14492                           ;incstack = 0
 14493  005D86  5019               	movf	_INT2_InterruptHandler,w,c
 14494  005D88  101A               	iorwf	_INT2_InterruptHandler+1,w,c
 14495  005D8A  101B               	iorwf	_INT2_InterruptHandler+2,w,c
 14496  005D8C  B4D8               	btfsc	status,2,c
 14497  005D8E  0012               	return	
 14498                           
 14499                           ;mcc_generated_files/ext_int.c: 100:     {;mcc_generated_files/ext_int.c: 101:         I
      +                          NT2_InterruptHandler();
 14500  005D90  D801               	call	u153_48
 14501  005D92  0012               	return	
 14502  005D94                     u153_48:
 14503  005D94  0005               	push	
 14504  005D96  6EFA               	movwf	pclath,c
 14505  005D98  5019               	movf	_INT2_InterruptHandler,w,c
 14506  005D9A  6EFD               	movwf	tosl,c
 14507  005D9C  501A               	movf	_INT2_InterruptHandler+1,w,c
 14508  005D9E  6EFE               	movwf	tosh,c
 14509  005DA0  501B               	movf	_INT2_InterruptHandler+2,w,c
 14510  005DA2  6EFF               	movwf	tosu,c
 14511  005DA4  50FA               	movf	pclath,w,c
 14512  005DA6  0012               	return		;indir
 14513  005DA8                     __end_of_INT2_CallBack:
 14514                           	opt callstack 0
 14515                           
 14516 ;; *************** function _INT2_DefaultInterruptHandler *****************
 14517 ;; Defined at:
 14518 ;;		line 109 in file "mcc_generated_files/ext_int.c"
 14519 ;; Parameters:    Size  Location     Type
 14520 ;;		None
 14521 ;; Auto vars:     Size  Location     Type
 14522 ;;		None
 14523 ;; Return value:  Size  Location     Type
 14524 ;;                  1  [STACK] void 
 14525 ;; Registers used:
 14526 ;;		None
 14527 ;; Tracked objects:
 14528 ;;		On entry : 0/39
 14529 ;;		On exit  : 0/0
 14530 ;;		Unchanged: 0/0
 14531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14536 ;;Total ram usage:        0 bytes
 14537 ;; Hardware stack levels used:    1
 14538 ;; This function calls:
 14539 ;;		Nothing
 14540 ;; This function is called by:
 14541 ;;		_EXT_INT_Initialize
 14542 ;;		_INT2_CallBack
 14543 ;; This function uses a reentrant model
 14544 ;;
 14545                           
 14546                           	psect	text89
 14547  005FDA                     __ptext89:
 14548                           	opt callstack 0
 14549  005FDA                     _INT2_DefaultInterruptHandler:
 14550                           	opt callstack 17
 14551                           
 14552                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14553                           
 14554                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14555                           ;incstack = 0
 14556  005FDA  0012               	return		;funcret
 14557  005FDC                     __end_of_INT2_DefaultInterruptHandler:
 14558                           	opt callstack 0
 14559                           
 14560 ;; *************** function _Default_ISR *****************
 14561 ;; Defined at:
 14562 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 14563 ;; Parameters:    Size  Location     Type
 14564 ;;		None
 14565 ;; Auto vars:     Size  Location     Type
 14566 ;;		None
 14567 ;; Return value:  Size  Location     Type
 14568 ;;                  1    wreg      void 
 14569 ;; Registers used:
 14570 ;;		None
 14571 ;; Tracked objects:
 14572 ;;		On entry : 0/0
 14573 ;;		On exit  : 0/0
 14574 ;;		Unchanged: 0/0
 14575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14580 ;;Total ram usage:        0 bytes
 14581 ;; Hardware stack levels used:    1
 14582 ;; This function calls:
 14583 ;;		Nothing
 14584 ;; This function is called by:
 14585 ;;		Interrupt level 2
 14586 ;; This function uses a non-reentrant model
 14587 ;;
 14588                           
 14589                           	psect	text90
 14590  005FD0                     __ptext90:
 14591                           	opt callstack 0
 14592  005FD0                     _Default_ISR:
 14593                           	opt callstack 19
 14594                           
 14595                           ;incstack = 0
 14596  005FD0  EE13  F150         	lfsr	1,___inthi_sp
 14597  005FD4  0011               	retfie		f
 14598  005FD6                     __end_of_Default_ISR:
 14599                           	opt callstack 0
 14600                           
 14601 ;; *************** function _ADCC_ISR *****************
 14602 ;; Defined at:
 14603 ;;		line 307 in file "mcc_generated_files/adcc.c"
 14604 ;; Parameters:    Size  Location     Type
 14605 ;;		None
 14606 ;; Auto vars:     Size  Location     Type
 14607 ;;		None
 14608 ;; Return value:  Size  Location     Type
 14609 ;;                  1    wreg      void 
 14610 ;; Registers used:
 14611 ;;		wreg, status,2, status,0, pclath, tosl
 14612 ;; Tracked objects:
 14613 ;;		On entry : 0/0
 14614 ;;		On exit  : 0/0
 14615 ;;		Unchanged: 0/0
 14616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14620 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14621 ;;Total ram usage:        0 bytes
 14622 ;; Hardware stack levels used:    1
 14623 ;; Hardware stack levels required when called:    1
 14624 ;; This function calls:
 14625 ;;		Absolute function
 14626 ;;		_ADCC_DefaultInterruptHandler
 14627 ;; This function is called by:
 14628 ;;		Interrupt level 2
 14629 ;; This function uses a non-reentrant model
 14630 ;;
 14631                           
 14632                           	psect	text91
 14633  0059DC                     __ptext91:
 14634                           	opt callstack 0
 14635  0059DC                     _ADCC_ISR:
 14636                           	opt callstack 18
 14637                           
 14638                           ;incstack = 0
 14639  0059DC  EE13  F150         	lfsr	1,___inthi_sp
 14640                           
 14641                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 14642  0059E0  0139               	movlb	57	; () banked
 14643  0059E2  95A1               	bcf	161,2,b	;volatile
 14644                           
 14645                           ; BSR set to: 57
 14646                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 14647  0059E4  500A               	movf	_ADCC_ADI_InterruptHandler,w,c
 14648  0059E6  100B               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 14649  0059E8  100C               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 14650  0059EA  B4D8               	btfsc	status,2,c
 14651  0059EC  0011               	retfie		f
 14652                           
 14653                           ; BSR set to: 57
 14654                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 14655  0059EE  D801               	call	i2u187_48
 14656  0059F0  0011               	retfie		f
 14657  0059F2                     i2u187_48:
 14658  0059F2  0005               	push	
 14659  0059F4  6EFA               	movwf	pclath,c
 14660  0059F6  500A               	movf	_ADCC_ADI_InterruptHandler,w,c
 14661  0059F8  6EFD               	movwf	tosl,c
 14662  0059FA  500B               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 14663  0059FC  6EFE               	movwf	tosh,c
 14664  0059FE  500C               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 14665  005A00  6EFF               	movwf	tosu,c
 14666  005A02  50FA               	movf	pclath,w,c
 14667  005A04  0012               	return		;indir
 14668  005A06                     __end_of_ADCC_ISR:
 14669                           	opt callstack 0
 14670                           
 14671 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 14672 ;; Defined at:
 14673 ;;		line 320 in file "mcc_generated_files/adcc.c"
 14674 ;; Parameters:    Size  Location     Type
 14675 ;;		None
 14676 ;; Auto vars:     Size  Location     Type
 14677 ;;		None
 14678 ;; Return value:  Size  Location     Type
 14679 ;;                  1  [STACK] void 
 14680 ;; Registers used:
 14681 ;;		None
 14682 ;; Tracked objects:
 14683 ;;		On entry : 3F/39
 14684 ;;		On exit  : 0/0
 14685 ;;		Unchanged: 0/0
 14686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14691 ;;Total ram usage:        0 bytes
 14692 ;; Hardware stack levels used:    1
 14693 ;; This function calls:
 14694 ;;		Nothing
 14695 ;; This function is called by:
 14696 ;;		_ADCC_Initialize
 14697 ;;		_ADCC_ISR
 14698 ;; This function uses a reentrant model
 14699 ;;
 14700                           
 14701                           	psect	text92
 14702  005FDC                     __ptext92:
 14703                           	opt callstack 0
 14704  005FDC                     _ADCC_DefaultInterruptHandler:
 14705                           	opt callstack 18
 14706                           
 14707                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 14708                           
 14709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14710                           ;incstack = 0
 14711  005FDC  0012               	return		;funcret
 14712  005FDE                     __end_of_ADCC_DefaultInterruptHandler:
 14713                           	opt callstack 0
 14714                           
 14715 ;; *************** function _UART1_tx_vect_isr *****************
 14716 ;; Defined at:
 14717 ;;		line 197 in file "mcc_generated_files/uart1.c"
 14718 ;; Parameters:    Size  Location     Type
 14719 ;;		None
 14720 ;; Auto vars:     Size  Location     Type
 14721 ;;		None
 14722 ;; Return value:  Size  Location     Type
 14723 ;;                  1    wreg      void 
 14724 ;; Registers used:
 14725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14726 ;; Tracked objects:
 14727 ;;		On entry : 0/0
 14728 ;;		On exit  : 0/0
 14729 ;;		Unchanged: 0/0
 14730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14735 ;;Total ram usage:        0 bytes
 14736 ;; Hardware stack levels used:    1
 14737 ;; Hardware stack levels required when called:    1
 14738 ;; This function calls:
 14739 ;;		Absolute function
 14740 ;;		_UART1_Transmit_ISR
 14741 ;; This function is called by:
 14742 ;;		Interrupt level 2
 14743 ;; This function uses a non-reentrant model
 14744 ;;
 14745                           
 14746                           	psect	text93
 14747  005C60                     __ptext93:
 14748                           	opt callstack 0
 14749  005C60                     _UART1_tx_vect_isr:
 14750                           	opt callstack 18
 14751                           
 14752                           ;incstack = 0
 14753  005C60  EE13  F150         	lfsr	1,___inthi_sp
 14754                           
 14755                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 14756  005C64  500D               	movf	_UART1_TxInterruptHandler,w,c
 14757  005C66  100E               	iorwf	_UART1_TxInterruptHandler+1,w,c
 14758  005C68  100F               	iorwf	_UART1_TxInterruptHandler+2,w,c
 14759  005C6A  B4D8               	btfsc	status,2,c
 14760  005C6C  0011               	retfie		f
 14761                           
 14762                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 14763  005C6E  D801               	call	i2u379_48
 14764  005C70  0011               	retfie		f
 14765  005C72                     i2u379_48:
 14766  005C72  0005               	push	
 14767  005C74  6EFA               	movwf	pclath,c
 14768  005C76  500D               	movf	_UART1_TxInterruptHandler,w,c
 14769  005C78  6EFD               	movwf	tosl,c
 14770  005C7A  500E               	movf	_UART1_TxInterruptHandler+1,w,c
 14771  005C7C  6EFE               	movwf	tosh,c
 14772  005C7E  500F               	movf	_UART1_TxInterruptHandler+2,w,c
 14773  005C80  6EFF               	movwf	tosu,c
 14774  005C82  50FA               	movf	pclath,w,c
 14775  005C84  0012               	return		;indir
 14776  005C86                     __end_of_UART1_tx_vect_isr:
 14777                           	opt callstack 0
 14778                           
 14779 ;; *************** function _UART1_Transmit_ISR *****************
 14780 ;; Defined at:
 14781 ;;		line 211 in file "mcc_generated_files/uart1.c"
 14782 ;; Parameters:    Size  Location     Type
 14783 ;;		None
 14784 ;; Auto vars:     Size  Location     Type
 14785 ;;		None
 14786 ;; Return value:  Size  Location     Type
 14787 ;;                  1  [STACK] void 
 14788 ;; Registers used:
 14789 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14790 ;; Tracked objects:
 14791 ;;		On entry : 0/0
 14792 ;;		On exit  : 3B/39
 14793 ;;		Unchanged: 0/0
 14794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14799 ;;Total ram usage:        0 bytes
 14800 ;; Hardware stack levels used:    1
 14801 ;; This function calls:
 14802 ;;		Nothing
 14803 ;; This function is called by:
 14804 ;;		_UART1_Initialize
 14805 ;;		_UART1_tx_vect_isr
 14806 ;; This function uses a reentrant model
 14807 ;;
 14808                           
 14809                           	psect	text94
 14810  00592E                     __ptext94:
 14811                           	opt callstack 0
 14812  00592E                     _UART1_Transmit_ISR:
 14813                           	opt callstack 18
 14814                           
 14815                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 14816                           
 14817                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14818                           ;incstack = 0
 14819  00592E  0E40               	movlw	64
 14820  005930  603A               	cpfslt	_uart1TxBufferRemaining,c
 14821  005932  D010               	goto	l597
 14822                           
 14823                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 14824  005934  0E80               	movlw	low _uart1TxBuffer
 14825  005936  243B               	addwf	_uart1TxTail,w,c	;volatile
 14826  005938  6ED9               	movwf	fsr2l,c
 14827  00593A  6ADA               	clrf	fsr2h,c
 14828  00593C  0E02               	movlw	high _uart1TxBuffer
 14829  00593E  22DA               	addwfc	fsr2h,f,c
 14830  005940  50DF               	movf	indf2,w,c
 14831  005942  013D               	movlb	61	; () banked
 14832  005944  6FEA               	movwf	234,b	;volatile
 14833                           
 14834                           ; BSR set to: 61
 14835  005946  2A3B               	incf	_uart1TxTail,f,c	;volatile
 14836                           
 14837                           ; BSR set to: 61
 14838                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 14839  005948  0E3F               	movlw	63
 14840  00594A  643B               	cpfsgt	_uart1TxTail,c
 14841  00594C  D001               	goto	l6226
 14842                           
 14843                           ; BSR set to: 61
 14844                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 14845  00594E  6A3B               	clrf	_uart1TxTail,c	;volatile
 14846  005950                     l6226:
 14847                           
 14848                           ; BSR set to: 61
 14849                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 14850  005950  2A3A               	incf	_uart1TxBufferRemaining,f,c	;volatile
 14851                           
 14852                           ;mcc_generated_files/uart1.c: 220:  } else {
 14853  005952  0012               	return	
 14854  005954                     l597:
 14855                           
 14856                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 14857  005954  0139               	movlb	57	; () banked
 14858  005956  9993               	bcf	147,4,b	;volatile
 14859                           
 14860                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14861  005958  0012               	return		;funcret
 14862  00595A                     __end_of_UART1_Transmit_ISR:
 14863                           	opt callstack 0
 14864                           
 14865 ;; *************** function _UART1_rx_vect_isr *****************
 14866 ;; Defined at:
 14867 ;;		line 204 in file "mcc_generated_files/uart1.c"
 14868 ;; Parameters:    Size  Location     Type
 14869 ;;		None
 14870 ;; Auto vars:     Size  Location     Type
 14871 ;;		None
 14872 ;; Return value:  Size  Location     Type
 14873 ;;                  1    wreg      void 
 14874 ;; Registers used:
 14875 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 14876 ;; Tracked objects:
 14877 ;;		On entry : 0/0
 14878 ;;		On exit  : 0/0
 14879 ;;		Unchanged: 0/0
 14880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14885 ;;Total ram usage:        0 bytes
 14886 ;; Hardware stack levels used:    1
 14887 ;; Hardware stack levels required when called:    1
 14888 ;; This function calls:
 14889 ;;		Absolute function
 14890 ;;		_UART1_Receive_ISR
 14891 ;; This function is called by:
 14892 ;;		Interrupt level 2
 14893 ;; This function uses a non-reentrant model
 14894 ;;
 14895                           
 14896                           	psect	text95
 14897  005C88                     __ptext95:
 14898                           	opt callstack 0
 14899  005C88                     _UART1_rx_vect_isr:
 14900                           	opt callstack 18
 14901                           
 14902                           ;incstack = 0
 14903  005C88  EE13  F150         	lfsr	1,___inthi_sp
 14904                           
 14905                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 14906  005C8C  5010               	movf	_UART1_RxInterruptHandler,w,c
 14907  005C8E  1011               	iorwf	_UART1_RxInterruptHandler+1,w,c
 14908  005C90  1012               	iorwf	_UART1_RxInterruptHandler+2,w,c
 14909  005C92  B4D8               	btfsc	status,2,c
 14910  005C94  0011               	retfie		f
 14911                           
 14912                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 14913  005C96  D801               	call	i2u381_48
 14914  005C98  0011               	retfie		f
 14915  005C9A                     i2u381_48:
 14916  005C9A  0005               	push	
 14917  005C9C  6EFA               	movwf	pclath,c
 14918  005C9E  5010               	movf	_UART1_RxInterruptHandler,w,c
 14919  005CA0  6EFD               	movwf	tosl,c
 14920  005CA2  5011               	movf	_UART1_RxInterruptHandler+1,w,c
 14921  005CA4  6EFE               	movwf	tosh,c
 14922  005CA6  5012               	movf	_UART1_RxInterruptHandler+2,w,c
 14923  005CA8  6EFF               	movwf	tosu,c
 14924  005CAA  50FA               	movf	pclath,w,c
 14925  005CAC  0012               	return		;indir
 14926  005CAE                     __end_of_UART1_rx_vect_isr:
 14927                           	opt callstack 0
 14928                           
 14929 ;; *************** function _UART1_Receive_ISR *****************
 14930 ;; Defined at:
 14931 ;;		line 227 in file "mcc_generated_files/uart1.c"
 14932 ;; Parameters:    Size  Location     Type
 14933 ;;		None
 14934 ;; Auto vars:     Size  Location     Type
 14935 ;;		None
 14936 ;; Return value:  Size  Location     Type
 14937 ;;                  1  [STACK] void 
 14938 ;; Registers used:
 14939 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14940 ;; Tracked objects:
 14941 ;;		On entry : 0/0
 14942 ;;		On exit  : 0/0
 14943 ;;		Unchanged: 0/0
 14944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14949 ;;Total ram usage:        0 bytes
 14950 ;; Hardware stack levels used:    1
 14951 ;; This function calls:
 14952 ;;		Nothing
 14953 ;; This function is called by:
 14954 ;;		_UART1_Initialize
 14955 ;;		_UART1_rx_vect_isr
 14956 ;; This function uses a reentrant model
 14957 ;;
 14958                           
 14959                           	psect	text96
 14960  005DEC                     __ptext96:
 14961                           	opt callstack 0
 14962  005DEC                     _UART1_Receive_ISR:
 14963                           	opt callstack 18
 14964                           
 14965                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 14966                           
 14967                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14968                           ;incstack = 0
 14969  005DEC  0EA1               	movlw	low _uart1RxBuffer
 14970  005DEE  2439               	addwf	_uart1RxHead,w,c	;volatile
 14971  005DF0  6ED9               	movwf	fsr2l,c
 14972  005DF2  6ADA               	clrf	fsr2h,c
 14973  005DF4  0E01               	movlw	high _uart1RxBuffer
 14974  005DF6  22DA               	addwfc	fsr2h,f,c
 14975  005DF8  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 14976  005DFE  2A39               	incf	_uart1RxHead,f,c	;volatile
 14977                           
 14978                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 14979  005E00  0E3F               	movlw	63
 14980  005E02  6439               	cpfsgt	_uart1RxHead,c
 14981  005E04  D001               	goto	l6236
 14982                           
 14983                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 14984  005E06  6A39               	clrf	_uart1RxHead,c	;volatile
 14985  005E08                     l6236:
 14986                           
 14987                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 14988  005E08  2A37               	incf	_uart1RxCount,f,c	;volatile
 14989                           
 14990                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 14991  005E0A  0012               	return		;funcret
 14992  005E0C                     __end_of_UART1_Receive_ISR:
 14993                           	opt callstack 0
 14994                           
 14995 ;; *************** function _UART2_tx_vect_isr *****************
 14996 ;; Defined at:
 14997 ;;		line 195 in file "mcc_generated_files/uart2.c"
 14998 ;; Parameters:    Size  Location     Type
 14999 ;;		None
 15000 ;; Auto vars:     Size  Location     Type
 15001 ;;		None
 15002 ;; Return value:  Size  Location     Type
 15003 ;;                  1    wreg      void 
 15004 ;; Registers used:
 15005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15006 ;; Tracked objects:
 15007 ;;		On entry : 0/0
 15008 ;;		On exit  : 0/0
 15009 ;;		Unchanged: 0/0
 15010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15015 ;;Total ram usage:        0 bytes
 15016 ;; Hardware stack levels used:    1
 15017 ;; Hardware stack levels required when called:    1
 15018 ;; This function calls:
 15019 ;;		Absolute function
 15020 ;;		_UART2_Transmit_ISR
 15021 ;; This function is called by:
 15022 ;;		Interrupt level 2
 15023 ;; This function uses a non-reentrant model
 15024 ;;
 15025                           
 15026                           	psect	text97
 15027  005CB0                     __ptext97:
 15028                           	opt callstack 0
 15029  005CB0                     _UART2_tx_vect_isr:
 15030                           	opt callstack 18
 15031                           
 15032                           ;incstack = 0
 15033  005CB0  EE13  F150         	lfsr	1,___inthi_sp
 15034                           
 15035                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 15036  005CB4  5013               	movf	_UART2_TxInterruptHandler,w,c
 15037  005CB6  1014               	iorwf	_UART2_TxInterruptHandler+1,w,c
 15038  005CB8  1015               	iorwf	_UART2_TxInterruptHandler+2,w,c
 15039  005CBA  B4D8               	btfsc	status,2,c
 15040  005CBC  0011               	retfie		f
 15041                           
 15042                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 15043  005CBE  D801               	call	i2u383_48
 15044  005CC0  0011               	retfie		f
 15045  005CC2                     i2u383_48:
 15046  005CC2  0005               	push	
 15047  005CC4  6EFA               	movwf	pclath,c
 15048  005CC6  5013               	movf	_UART2_TxInterruptHandler,w,c
 15049  005CC8  6EFD               	movwf	tosl,c
 15050  005CCA  5014               	movf	_UART2_TxInterruptHandler+1,w,c
 15051  005CCC  6EFE               	movwf	tosh,c
 15052  005CCE  5015               	movf	_UART2_TxInterruptHandler+2,w,c
 15053  005CD0  6EFF               	movwf	tosu,c
 15054  005CD2  50FA               	movf	pclath,w,c
 15055  005CD4  0012               	return		;indir
 15056  005CD6                     __end_of_UART2_tx_vect_isr:
 15057                           	opt callstack 0
 15058                           
 15059 ;; *************** function _UART2_Transmit_ISR *****************
 15060 ;; Defined at:
 15061 ;;		line 213 in file "mcc_generated_files/uart2.c"
 15062 ;; Parameters:    Size  Location     Type
 15063 ;;		None
 15064 ;; Auto vars:     Size  Location     Type
 15065 ;;		None
 15066 ;; Return value:  Size  Location     Type
 15067 ;;                  1  [STACK] void 
 15068 ;; Registers used:
 15069 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15070 ;; Tracked objects:
 15071 ;;		On entry : 0/0
 15072 ;;		On exit  : 3B/39
 15073 ;;		Unchanged: 0/0
 15074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15079 ;;Total ram usage:        0 bytes
 15080 ;; Hardware stack levels used:    1
 15081 ;; This function calls:
 15082 ;;		Nothing
 15083 ;; This function is called by:
 15084 ;;		_UART2_Initialize
 15085 ;;		_UART2_tx_vect_isr
 15086 ;; This function uses a reentrant model
 15087 ;;
 15088                           
 15089                           	psect	text98
 15090  00595A                     __ptext98:
 15091                           	opt callstack 0
 15092  00595A                     _UART2_Transmit_ISR:
 15093                           	opt callstack 18
 15094                           
 15095                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 15096                           
 15097                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15098                           ;incstack = 0
 15099  00595A  0E40               	movlw	64
 15100  00595C  6034               	cpfslt	_uart2TxBufferRemaining,c
 15101  00595E  D010               	goto	l717
 15102                           
 15103                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 15104  005960  0E40               	movlw	low _uart2TxBuffer
 15105  005962  2435               	addwf	_uart2TxTail,w,c	;volatile
 15106  005964  6ED9               	movwf	fsr2l,c
 15107  005966  6ADA               	clrf	fsr2h,c
 15108  005968  0E02               	movlw	high _uart2TxBuffer
 15109  00596A  22DA               	addwfc	fsr2h,f,c
 15110  00596C  50DF               	movf	indf2,w,c
 15111  00596E  013D               	movlb	61	; () banked
 15112  005970  6FD2               	movwf	210,b	;volatile
 15113                           
 15114                           ; BSR set to: 61
 15115  005972  2A35               	incf	_uart2TxTail,f,c	;volatile
 15116                           
 15117                           ; BSR set to: 61
 15118                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 15119  005974  0E3F               	movlw	63
 15120  005976  6435               	cpfsgt	_uart2TxTail,c
 15121  005978  D001               	goto	l6248
 15122                           
 15123                           ; BSR set to: 61
 15124                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 15125  00597A  6A35               	clrf	_uart2TxTail,c	;volatile
 15126  00597C                     l6248:
 15127                           
 15128                           ; BSR set to: 61
 15129                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 15130  00597C  2A34               	incf	_uart2TxBufferRemaining,f,c	;volatile
 15131                           
 15132                           ;mcc_generated_files/uart2.c: 224:     }
 15133  00597E  0012               	return	
 15134  005980                     l717:
 15135                           
 15136                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 15137  005980  0139               	movlb	57	; () banked
 15138  005982  9796               	bcf	150,3,b	;volatile
 15139                           
 15140                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 15141  005984  0012               	return		;funcret
 15142  005986                     __end_of_UART2_Transmit_ISR:
 15143                           	opt callstack 0
 15144                           
 15145 ;; *************** function _UART2_rx_vect_isr *****************
 15146 ;; Defined at:
 15147 ;;		line 203 in file "mcc_generated_files/uart2.c"
 15148 ;; Parameters:    Size  Location     Type
 15149 ;;		None
 15150 ;; Auto vars:     Size  Location     Type
 15151 ;;		None
 15152 ;; Return value:  Size  Location     Type
 15153 ;;                  1    wreg      void 
 15154 ;; Registers used:
 15155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 15156 ;; Tracked objects:
 15157 ;;		On entry : 0/0
 15158 ;;		On exit  : 0/0
 15159 ;;		Unchanged: 0/0
 15160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15165 ;;Total ram usage:        0 bytes
 15166 ;; Hardware stack levels used:    1
 15167 ;; Hardware stack levels required when called:    1
 15168 ;; This function calls:
 15169 ;;		Absolute function
 15170 ;;		_UART2_Receive_ISR
 15171 ;; This function is called by:
 15172 ;;		Interrupt level 2
 15173 ;; This function uses a non-reentrant model
 15174 ;;
 15175                           
 15176                           	psect	text99
 15177  005CD8                     __ptext99:
 15178                           	opt callstack 0
 15179  005CD8                     _UART2_rx_vect_isr:
 15180                           	opt callstack 18
 15181                           
 15182                           ;incstack = 0
 15183  005CD8  EE13  F150         	lfsr	1,___inthi_sp
 15184                           
 15185                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 15186  005CDC  5016               	movf	_UART2_RxInterruptHandler,w,c
 15187  005CDE  1017               	iorwf	_UART2_RxInterruptHandler+1,w,c
 15188  005CE0  1018               	iorwf	_UART2_RxInterruptHandler+2,w,c
 15189  005CE2  B4D8               	btfsc	status,2,c
 15190  005CE4  0011               	retfie		f
 15191                           
 15192                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 15193  005CE6  D801               	call	i2u385_48
 15194  005CE8  0011               	retfie		f
 15195  005CEA                     i2u385_48:
 15196  005CEA  0005               	push	
 15197  005CEC  6EFA               	movwf	pclath,c
 15198  005CEE  5016               	movf	_UART2_RxInterruptHandler,w,c
 15199  005CF0  6EFD               	movwf	tosl,c
 15200  005CF2  5017               	movf	_UART2_RxInterruptHandler+1,w,c
 15201  005CF4  6EFE               	movwf	tosh,c
 15202  005CF6  5018               	movf	_UART2_RxInterruptHandler+2,w,c
 15203  005CF8  6EFF               	movwf	tosu,c
 15204  005CFA  50FA               	movf	pclath,w,c
 15205  005CFC  0012               	return		;indir
 15206  005CFE                     __end_of_UART2_rx_vect_isr:
 15207                           	opt callstack 0
 15208                           
 15209 ;; *************** function _UART2_Receive_ISR *****************
 15210 ;; Defined at:
 15211 ;;		line 233 in file "mcc_generated_files/uart2.c"
 15212 ;; Parameters:    Size  Location     Type
 15213 ;;		None
 15214 ;; Auto vars:     Size  Location     Type
 15215 ;;		None
 15216 ;; Return value:  Size  Location     Type
 15217 ;;                  1  [STACK] void 
 15218 ;; Registers used:
 15219 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15220 ;; Tracked objects:
 15221 ;;		On entry : 0/0
 15222 ;;		On exit  : 0/0
 15223 ;;		Unchanged: 0/0
 15224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15229 ;;Total ram usage:        0 bytes
 15230 ;; Hardware stack levels used:    1
 15231 ;; This function calls:
 15232 ;;		Nothing
 15233 ;; This function is called by:
 15234 ;;		_UART2_Initialize
 15235 ;;		_UART2_rx_vect_isr
 15236 ;; This function uses a reentrant model
 15237 ;;
 15238                           
 15239                           	psect	text100
 15240  005E0C                     __ptext100:
 15241                           	opt callstack 0
 15242  005E0C                     _UART2_Receive_ISR:
 15243                           	opt callstack 18
 15244                           
 15245                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 15246                           
 15247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15248                           ;incstack = 0
 15249  005E0C  0E00               	movlw	low _uart2RxBuffer
 15250  005E0E  2433               	addwf	_uart2RxHead,w,c	;volatile
 15251  005E10  6ED9               	movwf	fsr2l,c
 15252  005E12  6ADA               	clrf	fsr2h,c
 15253  005E14  0E02               	movlw	high _uart2RxBuffer
 15254  005E16  22DA               	addwfc	fsr2h,f,c
 15255  005E18  006F F743 FFDF     	movff	15824,indf2	;volatile
 15256  005E1E  2A33               	incf	_uart2RxHead,f,c	;volatile
 15257                           
 15258                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 15259  005E20  0E3F               	movlw	63
 15260  005E22  6433               	cpfsgt	_uart2RxHead,c
 15261  005E24  D001               	goto	l6258
 15262                           
 15263                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 15264  005E26  6A33               	clrf	_uart2RxHead,c	;volatile
 15265  005E28                     l6258:
 15266                           
 15267                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 15268  005E28  2A31               	incf	_uart2RxCount,f,c	;volatile
 15269                           
 15270                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15271  005E2A  0012               	return		;funcret
 15272  005E2C                     __end_of_UART2_Receive_ISR:
 15273                           	opt callstack 0
 15274                           
 15275 ;; *************** function _TMR6_ISR *****************
 15276 ;; Defined at:
 15277 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 15278 ;; Parameters:    Size  Location     Type
 15279 ;;		None
 15280 ;; Auto vars:     Size  Location     Type
 15281 ;;		None
 15282 ;; Return value:  Size  Location     Type
 15283 ;;                  1    wreg      void 
 15284 ;; Registers used:
 15285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 15286 ;; Tracked objects:
 15287 ;;		On entry : 0/0
 15288 ;;		On exit  : 0/0
 15289 ;;		Unchanged: 0/0
 15290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15294 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15295 ;;Total ram usage:        1 bytes
 15296 ;; Hardware stack levels used:    1
 15297 ;; Hardware stack levels required when called:    2
 15298 ;; This function calls:
 15299 ;;		_TMR6_CallBack
 15300 ;; This function is called by:
 15301 ;;		Interrupt level 2
 15302 ;; This function uses a non-reentrant model
 15303 ;;
 15304                           
 15305                           	psect	text101
 15306  005EB8                     __ptext101:
 15307                           	opt callstack 0
 15308  005EB8                     _TMR6_ISR:
 15309                           	opt callstack 17
 15310                           
 15311                           ;incstack = 0
 15312  005EB8  0060  F0F4  F05D   	movff	btemp,??_TMR6_ISR
 15313  005EBE  EE13  F150         	lfsr	1,___inthi_sp
 15314                           
 15315                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 15316  005EC2  0139               	movlb	57	; () banked
 15317  005EC4  91A9               	bcf	169,0,b	;volatile
 15318                           
 15319                           ; BSR set to: 57
 15320                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 15321  005EC6  ECD4  F02E         	call	_TMR6_CallBack	;wreg free
 15322  005ECA  0060  F174  F03D   	movff	??_TMR6_ISR,btemp
 15323  005ED0  0011               	retfie		f
 15324  005ED2                     __end_of_TMR6_ISR:
 15325                           	opt callstack 0
 15326                           
 15327 ;; *************** function _TMR6_CallBack *****************
 15328 ;; Defined at:
 15329 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 15330 ;; Parameters:    Size  Location     Type
 15331 ;;		None
 15332 ;; Auto vars:     Size  Location     Type
 15333 ;;		None
 15334 ;; Return value:  Size  Location     Type
 15335 ;;                  1  [STACK] void 
 15336 ;; Registers used:
 15337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 15338 ;; Tracked objects:
 15339 ;;		On entry : 3F/39
 15340 ;;		On exit  : 0/0
 15341 ;;		Unchanged: 0/0
 15342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15347 ;;Total ram usage:        0 bytes
 15348 ;; Hardware stack levels used:    1
 15349 ;; Hardware stack levels required when called:    1
 15350 ;; This function calls:
 15351 ;;		Absolute function
 15352 ;;		_TMR6_DefaultInterruptHandler
 15353 ;; This function is called by:
 15354 ;;		_TMR6_ISR
 15355 ;; This function uses a reentrant model
 15356 ;;
 15357                           
 15358                           	psect	text102
 15359  005DA8                     __ptext102:
 15360                           	opt callstack 0
 15361  005DA8                     _TMR6_CallBack:
 15362                           	opt callstack 17
 15363                           
 15364                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 15365                           
 15366                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15367                           ;incstack = 0
 15368  005DA8  5007               	movf	_TMR6_InterruptHandler,w,c
 15369  005DAA  1008               	iorwf	_TMR6_InterruptHandler+1,w,c
 15370  005DAC  1009               	iorwf	_TMR6_InterruptHandler+2,w,c
 15371  005DAE  B4D8               	btfsc	status,2,c
 15372  005DB0  0012               	return	
 15373                           
 15374                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 15375  005DB2  D801               	call	u356_48
 15376  005DB4  0012               	return	
 15377  005DB6                     u356_48:
 15378  005DB6  0005               	push	
 15379  005DB8  6EFA               	movwf	pclath,c
 15380  005DBA  5007               	movf	_TMR6_InterruptHandler,w,c
 15381  005DBC  6EFD               	movwf	tosl,c
 15382  005DBE  5008               	movf	_TMR6_InterruptHandler+1,w,c
 15383  005DC0  6EFE               	movwf	tosh,c
 15384  005DC2  5009               	movf	_TMR6_InterruptHandler+2,w,c
 15385  005DC4  6EFF               	movwf	tosu,c
 15386  005DC6  50FA               	movf	pclath,w,c
 15387  005DC8  0012               	return		;indir
 15388  005DCA                     __end_of_TMR6_CallBack:
 15389                           	opt callstack 0
 15390                           
 15391 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 15392 ;; Defined at:
 15393 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 15394 ;; Parameters:    Size  Location     Type
 15395 ;;		None
 15396 ;; Auto vars:     Size  Location     Type
 15397 ;;  i               1  [STACK] unsigned char 
 15398 ;; Return value:  Size  Location     Type
 15399 ;;                  1  [STACK] void 
 15400 ;; Registers used:
 15401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 15402 ;; Tracked objects:
 15403 ;;		On entry : 0/39
 15404 ;;		On exit  : 0/0
 15405 ;;		Unchanged: 0/0
 15406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15411 ;;Total ram usage:        0 bytes
 15412 ;; Hardware stack levels used:    1
 15413 ;; This function calls:
 15414 ;;		Nothing
 15415 ;; This function is called by:
 15416 ;;		_TMR6_Initialize
 15417 ;;		_TMR6_CallBack
 15418 ;; This function uses a reentrant model
 15419 ;;
 15420                           
 15421                           	psect	text103
 15422  00566E                     __ptext103:
 15423                           	opt callstack 0
 15424  00566E                     _TMR6_DefaultInterruptHandler:
 15425                           	opt callstack 0
 15426                           
 15427                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15428  00566E  52E6               	movf	postinc1,f,c
 15429                           
 15430                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 15431                           ;stkvar	_i @ sp[(-1)+0]
 15432                           
 15433                           ;incstack = 0
 15434  005670  0EFF               	movlw	-1
 15435  005672  6AE3               	clrf	plusw1,c
 15436  005674                     l5958:
 15437                           
 15438                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 15439                           ;stkvar	_i @ sp[(-1)+0]
 15440  005674  0EFF               	movlw	-1
 15441  005676  50E3               	movf	plusw1,w,c
 15442  005678  0D02               	mullw	2
 15443  00567A  50F3               	movf	prodl,w,c
 15444  00567C  0F79               	addlw	low _tickCount
 15445  00567E  6ED9               	movwf	fsr2l,c
 15446  005680  6ADA               	clrf	fsr2h,c
 15447  005682  50DE               	movf	postinc2,w,c
 15448  005684  10DE               	iorwf	postinc2,w,c
 15449  005686  B4D8               	btfsc	status,2,c
 15450  005688  D00A               	goto	l5962
 15451                           
 15452                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 15453                           ;stkvar	_i @ sp[(-1)+0]
 15454  00568A  0EFF               	movlw	-1
 15455  00568C  50E3               	movf	plusw1,w,c
 15456  00568E  0D02               	mullw	2
 15457  005690  50F3               	movf	prodl,w,c
 15458  005692  0F79               	addlw	low _tickCount
 15459  005694  6ED9               	movwf	fsr2l,c
 15460  005696  6ADA               	clrf	fsr2h,c
 15461  005698  06DE               	decf	postinc2,f,c
 15462  00569A  0E00               	movlw	0
 15463  00569C  5ADD               	subwfb	postdec2,f,c
 15464  00569E                     l5962:
 15465                           
 15466                           ;mcc_generated_files/tmr6.c: 207:  }
 15467                           ;stkvar	_i @ sp[(-1)+0]
 15468  00569E  0EFF               	movlw	-1
 15469  0056A0  2AE3               	incf	plusw1,f,c
 15470                           
 15471                           ;stkvar	_i @ sp[(-1)+0]
 15472  0056A2  0EFF               	movlw	-1
 15473  0056A4  006F FF8C  F03D    	movff	plusw1,btemp
 15474  0056AA  0E05               	movlw	5
 15475  0056AC  643D               	cpfsgt	btemp,c
 15476  0056AE  D7E2               	goto	l5958
 15477                           
 15478                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15479  0056B0  52E5               	movf	postdec1,f,c
 15480  0056B2  0012               	return		;funcret
 15481  0056B4                     __end_of_TMR6_DefaultInterruptHandler:
 15482                           	opt callstack 0
 15483                           
 15484 ;; *************** function _DMA1_DMASCNT_ISR *****************
 15485 ;; Defined at:
 15486 ;;		line 126 in file "mcc_generated_files/dma1.c"
 15487 ;; Parameters:    Size  Location     Type
 15488 ;;		None
 15489 ;; Auto vars:     Size  Location     Type
 15490 ;;		None
 15491 ;; Return value:  Size  Location     Type
 15492 ;;                  1    wreg      void 
 15493 ;; Registers used:
 15494 ;;		None
 15495 ;; Tracked objects:
 15496 ;;		On entry : 0/0
 15497 ;;		On exit  : 3F/0
 15498 ;;		Unchanged: 0/0
 15499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15504 ;;Total ram usage:        0 bytes
 15505 ;; Hardware stack levels used:    1
 15506 ;; This function calls:
 15507 ;;		Nothing
 15508 ;; This function is called by:
 15509 ;;		Interrupt level 2
 15510 ;; This function uses a non-reentrant model
 15511 ;;
 15512                           
 15513                           	psect	text104
 15514  005F6C                     __ptext104:
 15515                           	opt callstack 0
 15516  005F6C                     _DMA1_DMASCNT_ISR:
 15517                           	opt callstack 19
 15518                           
 15519                           ;incstack = 0
 15520  005F6C  EE13  F150         	lfsr	1,___inthi_sp
 15521                           
 15522                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 15523  005F70  0139               	movlb	57	; () banked
 15524  005F72  91A2               	bcf	162,0,b	;volatile
 15525                           
 15526                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 15527  005F74  0100               	movlb	0	; () banked
 15528  005F76  976D               	bcf	_spi_link& (0+255),3,b	;volatile
 15529                           
 15530                           ; BSR set to: 0
 15531  005F78  0011               	retfie		f
 15532  005F7A                     __end_of_DMA1_DMASCNT_ISR:
 15533                           	opt callstack 0
 15534                           
 15535 ;; *************** function _DMA1_DMADCNT_ISR *****************
 15536 ;; Defined at:
 15537 ;;		line 133 in file "mcc_generated_files/dma1.c"
 15538 ;; Parameters:    Size  Location     Type
 15539 ;;		None
 15540 ;; Auto vars:     Size  Location     Type
 15541 ;;		None
 15542 ;; Return value:  Size  Location     Type
 15543 ;;                  1    wreg      void 
 15544 ;; Registers used:
 15545 ;;		None
 15546 ;; Tracked objects:
 15547 ;;		On entry : 0/0
 15548 ;;		On exit  : 3F/39
 15549 ;;		Unchanged: 0/0
 15550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15555 ;;Total ram usage:        0 bytes
 15556 ;; Hardware stack levels used:    1
 15557 ;; This function calls:
 15558 ;;		Nothing
 15559 ;; This function is called by:
 15560 ;;		Interrupt level 2
 15561 ;; This function uses a non-reentrant model
 15562 ;;
 15563                           
 15564                           	psect	text105
 15565  005F94                     __ptext105:
 15566                           	opt callstack 0
 15567  005F94                     _DMA1_DMADCNT_ISR:
 15568                           	opt callstack 19
 15569                           
 15570                           ; BSR set to: 0
 15571                           ;incstack = 0
 15572  005F94  EE13  F150         	lfsr	1,___inthi_sp
 15573                           
 15574                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 15575  005F98  0139               	movlb	57	; () banked
 15576  005F9A  93A2               	bcf	162,1,b	;volatile
 15577                           
 15578                           ; BSR set to: 57
 15579  005F9C  0011               	retfie		f
 15580  005F9E                     __end_of_DMA1_DMADCNT_ISR:
 15581                           	opt callstack 0
 15582                           
 15583 ;; *************** function _DMA1_DMAA_ISR *****************
 15584 ;; Defined at:
 15585 ;;		line 143 in file "mcc_generated_files/dma1.c"
 15586 ;; Parameters:    Size  Location     Type
 15587 ;;		None
 15588 ;; Auto vars:     Size  Location     Type
 15589 ;;		None
 15590 ;; Return value:  Size  Location     Type
 15591 ;;                  1    wreg      void 
 15592 ;; Registers used:
 15593 ;;		None
 15594 ;; Tracked objects:
 15595 ;;		On entry : 0/0
 15596 ;;		On exit  : 3F/39
 15597 ;;		Unchanged: 0/0
 15598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15603 ;;Total ram usage:        0 bytes
 15604 ;; Hardware stack levels used:    1
 15605 ;; This function calls:
 15606 ;;		Nothing
 15607 ;; This function is called by:
 15608 ;;		Interrupt level 2
 15609 ;; This function uses a non-reentrant model
 15610 ;;
 15611                           
 15612                           	psect	text106
 15613  005FA0                     __ptext106:
 15614                           	opt callstack 0
 15615  005FA0                     _DMA1_DMAA_ISR:
 15616                           	opt callstack 19
 15617                           
 15618                           ; BSR set to: 57
 15619                           ;incstack = 0
 15620  005FA0  EE13  F150         	lfsr	1,___inthi_sp
 15621                           
 15622                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 15623  005FA4  0139               	movlb	57	; () banked
 15624  005FA6  97A2               	bcf	162,3,b	;volatile
 15625                           
 15626                           ; BSR set to: 57
 15627  005FA8  0011               	retfie		f
 15628  005FAA                     __end_of_DMA1_DMAA_ISR:
 15629                           	opt callstack 0
 15630                           
 15631 ;; *************** function _DMA1_DMAOR_ISR *****************
 15632 ;; Defined at:
 15633 ;;		line 154 in file "mcc_generated_files/dma1.c"
 15634 ;; Parameters:    Size  Location     Type
 15635 ;;		None
 15636 ;; Auto vars:     Size  Location     Type
 15637 ;;		None
 15638 ;; Return value:  Size  Location     Type
 15639 ;;                  1    wreg      void 
 15640 ;; Registers used:
 15641 ;;		None
 15642 ;; Tracked objects:
 15643 ;;		On entry : 0/0
 15644 ;;		On exit  : 3F/39
 15645 ;;		Unchanged: 0/0
 15646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15651 ;;Total ram usage:        0 bytes
 15652 ;; Hardware stack levels used:    1
 15653 ;; This function calls:
 15654 ;;		Nothing
 15655 ;; This function is called by:
 15656 ;;		Interrupt level 2
 15657 ;; This function uses a non-reentrant model
 15658 ;;
 15659                           
 15660                           	psect	text107
 15661  005F7C                     __ptext107:
 15662                           	opt callstack 0
 15663  005F7C                     _DMA1_DMAOR_ISR:
 15664                           	opt callstack 19
 15665                           
 15666                           ; BSR set to: 57
 15667                           ;incstack = 0
 15668  005F7C  EE13  F150         	lfsr	1,___inthi_sp
 15669                           
 15670                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 15671  005F80  0139               	movlb	57	; () banked
 15672  005F82  95A2               	bcf	162,2,b	;volatile
 15673                           
 15674                           ;mcc_generated_files/dma1.c: 159:  LATEbits.LATE1 = 0;
 15675  005F84  92BE               	bcf	16318,1,c	;volatile
 15676                           
 15677                           ; BSR set to: 57
 15678  005F86  0011               	retfie		f
 15679  005F88                     __end_of_DMA1_DMAOR_ISR:
 15680                           	opt callstack 0
 15681                           
 15682 ;; *************** function _TMR5_ISR *****************
 15683 ;; Defined at:
 15684 ;;		line 163 in file "mcc_generated_files/tmr5.c"
 15685 ;; Parameters:    Size  Location     Type
 15686 ;;		None
 15687 ;; Auto vars:     Size  Location     Type
 15688 ;;		None
 15689 ;; Return value:  Size  Location     Type
 15690 ;;                  1    wreg      void 
 15691 ;; Registers used:
 15692 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 15693 ;; Tracked objects:
 15694 ;;		On entry : 0/0
 15695 ;;		On exit  : 0/0
 15696 ;;		Unchanged: 0/0
 15697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15700 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15701 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15702 ;;Total ram usage:        1 bytes
 15703 ;; Hardware stack levels used:    1
 15704 ;; Hardware stack levels required when called:    2
 15705 ;; This function calls:
 15706 ;;		_TMR5_CallBack
 15707 ;;		_TMR5_WriteTimer
 15708 ;; This function is called by:
 15709 ;;		Interrupt level 2
 15710 ;; This function uses a non-reentrant model
 15711 ;;
 15712                           
 15713                           	psect	text108
 15714  0057F8                     __ptext108:
 15715                           	opt callstack 0
 15716  0057F8                     _TMR5_ISR:
 15717                           	opt callstack 17
 15718                           
 15719                           ; BSR set to: 57
 15720                           ;incstack = 0
 15721  0057F8  0060  F120  F05E   	movff	btemp+11,??_TMR5_ISR
 15722  0057FE  EE13  F150         	lfsr	1,___inthi_sp
 15723                           
 15724                           ;mcc_generated_files/tmr5.c: 165:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 168:  PIR8bits.TMR5IF = 0;
 15725  005802  0139               	movlb	57	; () banked
 15726  005804  9DA8               	bcf	168,6,b	;volatile
 15727                           
 15728                           ; BSR set to: 57
 15729                           ;mcc_generated_files/tmr5.c: 169:  TMR5_WriteTimer(timer5ReloadVal);
 15730  005806  0060  F0BB  FFE6   	movff	_timer5ReloadVal,postinc1
 15731  00580C  0060  F0BF  FFE6   	movff	_timer5ReloadVal+1,postinc1
 15732  005812  EC9D  F02B         	call	_TMR5_WriteTimer	;wreg free
 15733                           
 15734                           ;mcc_generated_files/tmr5.c: 172:  if (++CountCallBack >= 50) {
 15735  005816  4A2C               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 15736  005818  2A2D               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 15737  00581A  502D               	movf	TMR5_ISR@CountCallBack+1,w,c	;volatile
 15738  00581C  E104               	bnz	i2u196_40
 15739  00581E  0E32               	movlw	50
 15740  005820  5C2C               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 15741  005822  A0D8               	btfss	status,0,c
 15742  005824  D004               	goto	i2l1137
 15743  005826                     i2u196_40:
 15744                           
 15745                           ;mcc_generated_files/tmr5.c: 174:   TMR5_CallBack();
 15746  005826  ECE5  F02E         	call	_TMR5_CallBack	;wreg free
 15747                           
 15748                           ;mcc_generated_files/tmr5.c: 177:   CountCallBack = 0;
 15749  00582A  6A2C               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 15750  00582C  6A2D               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 15751  00582E                     i2l1137:
 15752  00582E  0060  F178  F048   	movff	??_TMR5_ISR,btemp+11
 15753  005834  0011               	retfie		f
 15754  005836                     __end_of_TMR5_ISR:
 15755                           	opt callstack 0
 15756                           
 15757 ;; *************** function _TMR5_WriteTimer *****************
 15758 ;; Defined at:
 15759 ;;		line 129 in file "mcc_generated_files/tmr5.c"
 15760 ;; Parameters:    Size  Location     Type
 15761 ;;  timerVal        2  [STACK] unsigned short 
 15762 ;; Auto vars:     Size  Location     Type
 15763 ;;		None
 15764 ;; Return value:  Size  Location     Type
 15765 ;;                  1  [STACK] void 
 15766 ;; Registers used:
 15767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 15768 ;; Tracked objects:
 15769 ;;		On entry : 3F/39
 15770 ;;		On exit  : 0/0
 15771 ;;		Unchanged: 0/0
 15772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15777 ;;Total ram usage:        0 bytes
 15778 ;; Hardware stack levels used:    1
 15779 ;; This function calls:
 15780 ;;		Nothing
 15781 ;; This function is called by:
 15782 ;;		_TMR5_ISR
 15783 ;; This function uses a reentrant model
 15784 ;;
 15785                           
 15786                           	psect	text109
 15787  00573A                     __ptext109:
 15788                           	opt callstack 0
 15789  00573A                     _TMR5_WriteTimer:
 15790                           	opt callstack 18
 15791                           
 15792                           ;mcc_generated_files/tmr5.c: 129: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 130: {;mcc_generated_files/tmr5.c: 131:  if (T5CONbits.NOT_SYNC == 1) {
 15793                           
 15794                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15795                           ;incstack = 0
 15796  00573A  A49A               	btfss	16282,2,c	;volatile
 15797  00573C  D00F               	goto	l4032
 15798                           
 15799                           ;mcc_generated_files/tmr5.c: 133:   T5CONbits.TMR5ON = 0;
 15800  00573E  909A               	bcf	16282,0,c	;volatile
 15801                           
 15802                           ;mcc_generated_files/tmr5.c: 136:   TMR5H = (timerVal >> 8);
 15803                           ;stkvar	_timerVal @ sp[(0)+-2]
 15804  005740  0EFF               	movlw	255
 15805  005742  24E1               	addwf	fsr1l,w,c
 15806  005744  6ED9               	movwf	fsr2l,c
 15807  005746  0EFF               	movlw	255
 15808  005748  20E2               	addwfc	fsr1h,w,c
 15809  00574A  6EDA               	movwf	fsr2h,c
 15810  00574C  50DF               	movf	indf2,w,c
 15811  00574E  6E99               	movwf	16281,c	;volatile
 15812                           
 15813                           ;mcc_generated_files/tmr5.c: 137:   TMR5L = timerVal;
 15814                           ;stkvar	_timerVal @ sp[(0)+-2]
 15815  005750  0EFE               	movlw	-2
 15816  005752  006F FF8F FF98     	movff	plusw1,16280	;volatile
 15817                           
 15818                           ;mcc_generated_files/tmr5.c: 140:   T5CONbits.TMR5ON = 1;
 15819  005758  809A               	bsf	16282,0,c	;volatile
 15820                           
 15821                           ;mcc_generated_files/tmr5.c: 141:  } else {
 15822  00575A  D00C               	goto	l1120
 15823  00575C                     l4032:
 15824                           
 15825                           ;mcc_generated_files/tmr5.c: 143:   TMR5H = (timerVal >> 8);
 15826                           ;stkvar	_timerVal @ sp[(0)+-2]
 15827  00575C  0EFF               	movlw	255
 15828  00575E  24E1               	addwf	fsr1l,w,c
 15829  005760  6ED9               	movwf	fsr2l,c
 15830  005762  0EFF               	movlw	255
 15831  005764  20E2               	addwfc	fsr1h,w,c
 15832  005766  6EDA               	movwf	fsr2h,c
 15833  005768  50DF               	movf	indf2,w,c
 15834  00576A  6E99               	movwf	16281,c	;volatile
 15835                           
 15836                           ;mcc_generated_files/tmr5.c: 144:   TMR5L = timerVal;
 15837                           ;stkvar	_timerVal @ sp[(0)+-2]
 15838  00576C  0EFE               	movlw	-2
 15839  00576E  006F FF8F FF98     	movff	plusw1,16280	;volatile
 15840  005774                     l1120:
 15841                           
 15842                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 15843  005774  52E5               	movf	postdec1,f,c
 15844  005776  52E5               	movf	postdec1,f,c
 15845  005778  0012               	return		;funcret
 15846  00577A                     __end_of_TMR5_WriteTimer:
 15847                           	opt callstack 0
 15848                           
 15849 ;; *************** function _TMR5_CallBack *****************
 15850 ;; Defined at:
 15851 ;;		line 181 in file "mcc_generated_files/tmr5.c"
 15852 ;; Parameters:    Size  Location     Type
 15853 ;;		None
 15854 ;; Auto vars:     Size  Location     Type
 15855 ;;		None
 15856 ;; Return value:  Size  Location     Type
 15857 ;;                  1  [STACK] void 
 15858 ;; Registers used:
 15859 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 15860 ;; Tracked objects:
 15861 ;;		On entry : 0/39
 15862 ;;		On exit  : 0/0
 15863 ;;		Unchanged: 0/0
 15864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15869 ;;Total ram usage:        0 bytes
 15870 ;; Hardware stack levels used:    1
 15871 ;; Hardware stack levels required when called:    1
 15872 ;; This function calls:
 15873 ;;		Absolute function
 15874 ;;		_TMR5_DefaultInterruptHandler
 15875 ;; This function is called by:
 15876 ;;		_TMR5_ISR
 15877 ;; This function uses a reentrant model
 15878 ;;
 15879                           
 15880                           	psect	text110
 15881  005DCA                     __ptext110:
 15882                           	opt callstack 0
 15883  005DCA                     _TMR5_CallBack:
 15884                           	opt callstack 17
 15885                           
 15886                           ;mcc_generated_files/tmr5.c: 184:  if (TMR5_InterruptHandler) {
 15887                           
 15888                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15889                           ;incstack = 0
 15890  005DCA  5004               	movf	_TMR5_InterruptHandler,w,c
 15891  005DCC  1005               	iorwf	_TMR5_InterruptHandler+1,w,c
 15892  005DCE  1006               	iorwf	_TMR5_InterruptHandler+2,w,c
 15893  005DD0  B4D8               	btfsc	status,2,c
 15894  005DD2  0012               	return	
 15895                           
 15896                           ;mcc_generated_files/tmr5.c: 185:   TMR5_InterruptHandler();
 15897  005DD4  D801               	call	u164_48
 15898  005DD6  0012               	return	
 15899  005DD8                     u164_48:
 15900  005DD8  0005               	push	
 15901  005DDA  6EFA               	movwf	pclath,c
 15902  005DDC  5004               	movf	_TMR5_InterruptHandler,w,c
 15903  005DDE  6EFD               	movwf	tosl,c
 15904  005DE0  5005               	movf	_TMR5_InterruptHandler+1,w,c
 15905  005DE2  6EFE               	movwf	tosh,c
 15906  005DE4  5006               	movf	_TMR5_InterruptHandler+2,w,c
 15907  005DE6  6EFF               	movwf	tosu,c
 15908  005DE8  50FA               	movf	pclath,w,c
 15909  005DEA  0012               	return		;indir
 15910  005DEC                     __end_of_TMR5_CallBack:
 15911                           	opt callstack 0
 15912                           
 15913 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 15914 ;; Defined at:
 15915 ;;		line 194 in file "mcc_generated_files/tmr5.c"
 15916 ;; Parameters:    Size  Location     Type
 15917 ;;		None
 15918 ;; Auto vars:     Size  Location     Type
 15919 ;;		None
 15920 ;; Return value:  Size  Location     Type
 15921 ;;                  1  [STACK] void 
 15922 ;; Registers used:
 15923 ;;		wreg, status,2, status,0, btemp+11
 15924 ;; Tracked objects:
 15925 ;;		On entry : 0/39
 15926 ;;		On exit  : 0/0
 15927 ;;		Unchanged: 0/0
 15928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15933 ;;Total ram usage:        0 bytes
 15934 ;; Hardware stack levels used:    1
 15935 ;; This function calls:
 15936 ;;		Nothing
 15937 ;; This function is called by:
 15938 ;;		_TMR5_Initialize
 15939 ;;		_TMR5_CallBack
 15940 ;; This function uses a reentrant model
 15941 ;;
 15942                           
 15943                           	psect	text111
 15944  005ED2                     __ptext111:
 15945                           	opt callstack 0
 15946  005ED2                     _TMR5_DefaultInterruptHandler:
 15947                           	opt callstack 17
 15948                           
 15949                           ;mcc_generated_files/tmr5.c: 198:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 15950                           
 15951                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15952                           ;incstack = 0
 15953  005ED2  A0BE               	btfss	16318,0,c	;volatile
 15954  005ED4  D002               	goto	u140_40
 15955  005ED6  0E01               	movlw	1
 15956  005ED8  D001               	goto	u140_46
 15957  005EDA                     u140_40:
 15958  005EDA  0E00               	movlw	0
 15959  005EDC                     u140_46:
 15960  005EDC  0AFF               	xorlw	255
 15961  005EDE  6E48               	movwf	btemp+11,c
 15962  005EE0  50BE               	movf	16318,w,c	;volatile
 15963  005EE2  1848               	xorwf	btemp+11,w,c
 15964  005EE4  0BFE               	andlw	-2
 15965  005EE6  1848               	xorwf	btemp+11,w,c
 15966  005EE8  6EBE               	movwf	16318,c	;volatile
 15967                           
 15968                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15969  005EEA  0012               	return		;funcret
 15970  005EEC                     __end_of_TMR5_DefaultInterruptHandler:
 15971                           	opt callstack 0
 15972                           
 15973                           ;
 15974                           ; Interrupt Vector Table @ 0x8
 15975                           ;
 15976                           
 15977                           	psect	ivt0x8
 15978  000008                     __pivt0x8:
 15979                           	opt callstack 0
 15980  000008                     ivt0x8_base:
 15981                           	opt callstack 0
 15982                           
 15983                           ; Vector 0 : SWINT
 15984  000008  17F4               	dw	_Default_ISR shr (0+2)
 15985                           
 15986                           ; Vector 1 : HLVD
 15987  00000A  17F4               	dw	_Default_ISR shr (0+2)
 15988                           
 15989                           ; Vector 2 : OSF
 15990  00000C  17F4               	dw	_Default_ISR shr (0+2)
 15991                           
 15992                           ; Vector 3 : CSW
 15993  00000E  17F4               	dw	_Default_ISR shr (0+2)
 15994                           
 15995                           ; Vector 4 : NVM
 15996  000010  17F4               	dw	_Default_ISR shr (0+2)
 15997                           
 15998                           ; Vector 5 : SCAN
 15999  000012  17F4               	dw	_Default_ISR shr (0+2)
 16000                           
 16001                           ; Vector 6 : CRC
 16002  000014  17F4               	dw	_Default_ISR shr (0+2)
 16003                           
 16004                           ; Vector 7 : IOC
 16005  000016  17F4               	dw	_Default_ISR shr (0+2)
 16006                           
 16007                           ; Vector 8 : INT0
 16008  000018  17CF               	dw	_INT0_ISR shr (0+2)
 16009                           
 16010                           ; Vector 9 : ZCD
 16011  00001A  17F4               	dw	_Default_ISR shr (0+2)
 16012                           
 16013                           ; Vector 10 : AD
 16014  00001C  1677               	dw	_ADCC_ISR shr (0+2)
 16015                           
 16016                           ; Vector 11 : ADT
 16017  00001E  17F4               	dw	_Default_ISR shr (0+2)
 16018                           
 16019                           ; Vector 12 : CMP1
 16020  000020  17F4               	dw	_Default_ISR shr (0+2)
 16021                           
 16022                           ; Vector 13 : SMT1
 16023  000022  17F4               	dw	_Default_ISR shr (0+2)
 16024                           
 16025                           ; Vector 14 : SMT1PRA
 16026  000024  17F4               	dw	_Default_ISR shr (0+2)
 16027                           
 16028                           ; Vector 15 : SMT1PRW
 16029  000026  17F4               	dw	_Default_ISR shr (0+2)
 16030                           
 16031                           ; Vector 16 : DMA1SCNT
 16032  000028  17DB               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 16033                           
 16034                           ; Vector 17 : DMA1DCNT
 16035  00002A  17E5               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 16036                           
 16037                           ; Vector 18 : DMA1OR
 16038  00002C  17DF               	dw	_DMA1_DMAOR_ISR shr (0+2)
 16039                           
 16040                           ; Vector 19 : DMA1A
 16041  00002E  17E8               	dw	_DMA1_DMAA_ISR shr (0+2)
 16042                           
 16043                           ; Vector 20 : SPI1RX
 16044  000030  17F4               	dw	_Default_ISR shr (0+2)
 16045                           
 16046                           ; Vector 21 : SPI1TX
 16047  000032  17F4               	dw	_Default_ISR shr (0+2)
 16048                           
 16049                           ; Vector 22 : SPI1
 16050  000034  17F4               	dw	_Default_ISR shr (0+2)
 16051                           
 16052                           ; Vector 23 : I2C1RX
 16053  000036  17F4               	dw	_Default_ISR shr (0+2)
 16054                           
 16055                           ; Vector 24 : I2C1TX
 16056  000038  17F4               	dw	_Default_ISR shr (0+2)
 16057                           
 16058                           ; Vector 25 : I2C1
 16059  00003A  17F4               	dw	_Default_ISR shr (0+2)
 16060                           
 16061                           ; Vector 26 : I2C1E
 16062  00003C  17F4               	dw	_Default_ISR shr (0+2)
 16063                           
 16064                           ; Vector 27 : U1RX
 16065  00003E  1722               	dw	_UART1_rx_vect_isr shr (0+2)
 16066                           
 16067                           ; Vector 28 : U1TX
 16068  000040  1718               	dw	_UART1_tx_vect_isr shr (0+2)
 16069                           
 16070                           ; Vector 29 : U1E
 16071  000042  17F4               	dw	_Default_ISR shr (0+2)
 16072                           
 16073                           ; Vector 30 : U1
 16074  000044  17F4               	dw	_Default_ISR shr (0+2)
 16075                           
 16076                           ; Vector 31 : TMR0
 16077  000046  17F4               	dw	_Default_ISR shr (0+2)
 16078                           
 16079                           ; Vector 32 : TMR1
 16080  000048  17F4               	dw	_Default_ISR shr (0+2)
 16081                           
 16082                           ; Vector 33 : TMR1G
 16083  00004A  17F4               	dw	_Default_ISR shr (0+2)
 16084                           
 16085                           ; Vector 34 : TMR2
 16086  00004C  17F4               	dw	_Default_ISR shr (0+2)
 16087                           
 16088                           ; Vector 35 : CCP1
 16089  00004E  17F4               	dw	_Default_ISR shr (0+2)
 16090                           
 16091                           ; Vector 36 : Undefined
 16092  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 16093                           
 16094                           ; Vector 37 : NCO1
 16095  000052  17F4               	dw	_Default_ISR shr (0+2)
 16096                           
 16097                           ; Vector 38 : CWG1
 16098  000054  17F4               	dw	_Default_ISR shr (0+2)
 16099                           
 16100                           ; Vector 39 : CLC1
 16101  000056  17F4               	dw	_Default_ISR shr (0+2)
 16102                           
 16103                           ; Vector 40 : INT1
 16104  000058  17D3               	dw	_INT1_ISR shr (0+2)
 16105                           
 16106                           ; Vector 41 : CMP2
 16107  00005A  17F4               	dw	_Default_ISR shr (0+2)
 16108                           
 16109                           ; Vector 42 : DMA2SCNT
 16110  00005C  17F4               	dw	_Default_ISR shr (0+2)
 16111                           
 16112                           ; Vector 43 : DMA2DCNT
 16113  00005E  17F4               	dw	_Default_ISR shr (0+2)
 16114                           
 16115                           ; Vector 44 : DMA2OR
 16116  000060  17F4               	dw	_Default_ISR shr (0+2)
 16117                           
 16118                           ; Vector 45 : DMA2A
 16119  000062  17F4               	dw	_Default_ISR shr (0+2)
 16120                           
 16121                           ; Vector 46 : I2C2RX
 16122  000064  17F4               	dw	_Default_ISR shr (0+2)
 16123                           
 16124                           ; Vector 47 : I2C2TX
 16125  000066  17F4               	dw	_Default_ISR shr (0+2)
 16126                           
 16127                           ; Vector 48 : I2C2
 16128  000068  17F4               	dw	_Default_ISR shr (0+2)
 16129                           
 16130                           ; Vector 49 : I2C2E
 16131  00006A  17F4               	dw	_Default_ISR shr (0+2)
 16132                           
 16133                           ; Vector 50 : U2RX
 16134  00006C  1736               	dw	_UART2_rx_vect_isr shr (0+2)
 16135                           
 16136                           ; Vector 51 : U2TX
 16137  00006E  172C               	dw	_UART2_tx_vect_isr shr (0+2)
 16138                           
 16139                           ; Vector 52 : U2E
 16140  000070  17F4               	dw	_Default_ISR shr (0+2)
 16141                           
 16142                           ; Vector 53 : U2
 16143  000072  17F4               	dw	_Default_ISR shr (0+2)
 16144                           
 16145                           ; Vector 54 : TMR3
 16146  000074  17F4               	dw	_Default_ISR shr (0+2)
 16147                           
 16148                           ; Vector 55 : TMR3G
 16149  000076  17F4               	dw	_Default_ISR shr (0+2)
 16150                           
 16151                           ; Vector 56 : TMR4
 16152  000078  17F4               	dw	_Default_ISR shr (0+2)
 16153                           
 16154                           ; Vector 57 : CCP2
 16155  00007A  17F4               	dw	_Default_ISR shr (0+2)
 16156                           
 16157                           ; Vector 58 : Undefined
 16158  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 16159                           
 16160                           ; Vector 59 : CWG2
 16161  00007E  17F4               	dw	_Default_ISR shr (0+2)
 16162                           
 16163                           ; Vector 60 : CLC2
 16164  000080  17F4               	dw	_Default_ISR shr (0+2)
 16165                           
 16166                           ; Vector 61 : INT2
 16167  000082  17D7               	dw	_INT2_ISR shr (0+2)
 16168                           
 16169                           ; Vector 62 : Undefined
 16170  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 16171                           
 16172                           ; Vector 63 : Undefined
 16173  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 16174                           
 16175                           ; Vector 64 : Undefined
 16176  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 16177                           
 16178                           ; Vector 65 : Undefined
 16179  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 16180                           
 16181                           ; Vector 66 : Undefined
 16182  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 16183                           
 16184                           ; Vector 67 : Undefined
 16185  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 16186                           
 16187                           ; Vector 68 : Undefined
 16188  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 16189                           
 16190                           ; Vector 69 : Undefined
 16191  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 16192                           
 16193                           ; Vector 70 : TMR5
 16194  000094  15FE               	dw	_TMR5_ISR shr (0+2)
 16195                           
 16196                           ; Vector 71 : TMR5G
 16197  000096  17F4               	dw	_Default_ISR shr (0+2)
 16198                           
 16199                           ; Vector 72 : TMR6
 16200  000098  17AE               	dw	_TMR6_ISR shr (0+2)
 16201                           
 16202                           ; Vector 73 : CCP3
 16203  00009A  17F4               	dw	_Default_ISR shr (0+2)
 16204                           
 16205                           ; Vector 74 : CWG3
 16206  00009C  17F4               	dw	_Default_ISR shr (0+2)
 16207                           
 16208                           ; Vector 75 : CLC3
 16209  00009E  17F4               	dw	_Default_ISR shr (0+2)
 16210                           
 16211                           ; Vector 76 : Undefined
 16212  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 16213                           
 16214                           ; Vector 77 : Undefined
 16215  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 16216                           
 16217                           ; Vector 78 : Undefined
 16218  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 16219                           
 16220                           ; Vector 79 : Undefined
 16221  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 16222                           
 16223                           ; Vector 80 : CCP4
 16224  0000A8  17F4               	dw	_Default_ISR shr (0+2)
 16225                           
 16226                           ; Vector 81 : CLC4
 16227  0000AA  17F4               	dw	_Default_ISR shr (0+2)
 16228  0000AC                     ivt0x8_undefint:
 16229                           	opt callstack 0
 16230  0000AC  00FF               	reset	
 16231                           
 16232                           	psect	text112
 16233  000000                     __ptext112:
 16234                           	opt callstack 0
 16235                           
 16236                           	psect	rparam
 16237  0000                     
 16238                           	psect	temp
 16239  00003D                     btemp:
 16240                           	opt callstack 0
 16241  00003D                     	ds	32
 16242  0000                     wtemp0	set	btemp
 16243  0000                     wtemp1	set	btemp+2
 16244  0000                     wtemp2	set	btemp+4
 16245  0000                     wtemp3	set	btemp+6
 16246  0000                     wtemp4	set	btemp+8
 16247  0000                     wtemp5	set	btemp+10
 16248  0000                     wtemp8	set	btemp+1
 16249  0000                     ttemp0	set	btemp
 16250  0000                     ttemp1	set	btemp+3
 16251  0000                     ttemp2	set	btemp+6
 16252  0000                     ttemp3	set	btemp+9
 16253  0000                     ttemp5	set	btemp+1
 16254  0000                     ttemp6	set	btemp+4
 16255  0000                     ttemp7	set	btemp+8
 16256  0000                     ltemp0	set	btemp
 16257  0000                     ltemp1	set	btemp+4
 16258  0000                     ltemp2	set	btemp+8
 16259  0000                     lltemp0	set	btemp
 16260  0000                     lltemp1	set	btemp+8
 16261  0000                     lltemp2	set	btemp+16
 16262  0000                     lltemp3	set	btemp+24
 16263                           tosu	equ	0x3FFF
 16264                           tosh	equ	0x3FFE
 16265                           tosl	equ	0x3FFD
 16266                           stkptr	equ	0x3FFC
 16267                           pclatu	equ	0x3FFB
 16268                           pclath	equ	0x3FFA
 16269                           pcl	equ	0x3FF9
 16270                           tblptru	equ	0x3FF8
 16271                           tblptrh	equ	0x3FF7
 16272                           tblptrl	equ	0x3FF6
 16273                           tablat	equ	0x3FF5
 16274                           prodh	equ	0x3FF4
 16275                           prodl	equ	0x3FF3
 16276                           indf0	equ	0x3FEF
 16277                           postinc0	equ	0x3FEE
 16278                           postdec0	equ	0x3FED
 16279                           preinc0	equ	0x3FEC
 16280                           plusw0	equ	0x3FEB
 16281                           fsr0h	equ	0x3FEA
 16282                           fsr0l	equ	0x3FE9
 16283                           wreg	equ	0x3FE8
 16284                           indf1	equ	0x3FE7
 16285                           postinc1	equ	0x3FE6
 16286                           postdec1	equ	0x3FE5
 16287                           preinc1	equ	0x3FE4
 16288                           plusw1	equ	0x3FE3
 16289                           fsr1h	equ	0x3FE2
 16290                           fsr1l	equ	0x3FE1
 16291                           bsr	equ	0x3FE0
 16292                           indf2	equ	0x3FDF
 16293                           postinc2	equ	0x3FDE
 16294                           postdec2	equ	0x3FDD
 16295                           preinc2	equ	0x3FDC
 16296                           plusw2	equ	0x3FDB
 16297                           fsr2h	equ	0x3FDA
 16298                           fsr2l	equ	0x3FD9
 16299                           status	equ	0x3FD8


Data Sizes:
    Strings     182
    Constant    0
    Data        280
    BSS         603
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      2      62
    BANK0           160      0     160
    BANK1           256      0     225
    BANK2           256      0     192
    BANK3           256      0     246
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK0[32]), 
		 -> V(BANK0[80]), 

    a	PTR const unsigned char  size(2) Largest target is 80
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK0[32]), 
		 -> V(BANK0[80]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_9(CODE[21]), STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[23]), STR_4(CODE[6]), STR_3(CODE[14]), STR_2(CODE[12]), 
		 -> STR_1(CODE[61]), 

    s	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4297_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[21]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[23]), 
		 -> STR_4(CODE[6]), STR_3(CODE[14]), STR_2(CODE[12]), STR_1(CODE[61]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[21]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[23]), 
		 -> STR_4(CODE[6]), STR_3(CODE[14]), STR_2(CODE[12]), STR_1(CODE[61]), 

    cfmt	PTR unsigned char  size(1) Largest target is 61
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[21]), 
		 -> STR_8(CODE[17]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[23]), 
		 -> STR_4(CODE[6]), STR_3(CODE[14]), STR_2(CODE[12]), STR_1(CODE[61]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), V(BANK0[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), V(BANK0[80]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), V(BANK0[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    F16582.header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    k	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    t_link	PTR enum E16164 size(1) Largest target is 80
		 -> V(BANK0[80]), 

    S3576response_type$header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    block.header	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10(BANK1[65]), 

    r_link	PTR enum E16164 size(1) Largest target is 80
		 -> V(BANK0[80]), 

    byte_block	PTR unsigned char  size(2) Largest target is 112
		 -> H53(BANK3[112]), H24(BANK1[27]), H18(BANK1[21]), H14(BANK1[17]), 
		 -> H13(BANK1[16]), H12(BANK1[15]), H10.block(BANK1[10]), H10(BANK1[65]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    strPtr	PTR unsigned char  size(1) Largest target is 80
		 -> V(BANK0[80]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1984spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1984spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   69908
                  _SYSTEM_Initialize
                        _UART1_Write
                   _UART1_put_buffer
                             _WaitMs
                     _block_checksum
                _eaDogM_WriteCommand
                 _eaDogM_WriteString
            _eaDogM_WriteStringAtPos
                       _init_display
                         _r_protocol
                          _secs_send
                            _sprintf
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           5     4      1    1748
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                             _WaitMs
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      2     0      2      88
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35     9     26   11789
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1    1605
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                            9     5      4     837
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (3) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   25832
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1   12950
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   12820
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1   12789
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3   11564
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5   11459
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           41    35      6   11163
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (5) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     4      5    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                6     3      3     674
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (9) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     9      1     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      22
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            1     1      0      60
                                              1 COMRAM     1     1      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _UART1_Write
   _UART1_put_buffer
   _WaitMs
     _StartTimer
     _TimerDone
   _block_checksum
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteString
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _ringBufS_flush
       _memset
     _start_lcd
     _strlen
     _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _secs_send
     _UART1_Write
     _UART1_is_tx_ready
     _UART1_put_buffer
     _block_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _WaitMs
       _StartTimer
       _TimerDone
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      F6      11       96.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C0       9       75.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E1       7       87.9%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      A0       5      100.0%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      2      3E       1       98.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     375      58        0.0%
DATA                 0      0     375       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Mar  9 00:52:37 2019

                    _SPI1_Exchange8bit 5E2C                                      _V 0089  
     __end_of_TMR5_SetInterruptHandler 5BBE                            __CFG_CP$OFF 000000  
              __size_of_ringBufS_flush 0092                            __CFG_LVP$ON 000000  
                                  _H10 0100                                    _H12 0192  
                                  _H13 0182                                    _H14 0171  
                                  _H24 0141                                    _H18 015C  
                                  _H53 0386                                    l194 5F12  
                                  l572 57E2                                    l717 5980  
                                  l579 5790                                    l597 5954  
                                  l847 5E3A                                    _GIE 01FE97  
                                  _abs 55E2                                    _pad 47E2  
              __size_of_PMD_Initialize 0014                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 5D42  
                         _run_checksum 5A06                     _UART1_Transmit_ISR 592E  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 5D64  
                         __CFG_ZCD$OFF 000000                                   l1120 5774  
                                 l1221 2D32                                   l1230 2DE2  
                                 l1240 2EF2                                   l1435 4D70  
                                 l1509 3B3C                                   l1439 4FD8  
                                 l1535 41F8                                   l4032 575C  
                                 l1299 545A                                   l1563 45BA  
                                 l2541 47D8                                   l1717 2FB4  
                                 l2462 5622                                   l5032 3F12  
                                 l5024 3E66                                   l5016 3DDE  
                                 l1649 4836                                   l5052 54EC  
                                 l2493 41E4                                   l2469 3FDE  
                                 l1669 286C                                   l1767 2784  
                                 l1696 36CA                                   l6120 465E  
                                 l6104 460C                                   l6106 4638  
                                 l2579 505A                                   l6028 59C6  
                                 l6124 466A                                   l5270 404E  
                                 l5262 3FDA                                   l6118 4644  
                                 l5280 4098                                   l7104 28A6  
                                 l6072 5A12                                   l6136 4678  
                                 l6080 45CA                                   l6226 5950  
                                 l5282 40D4                                   l7042 51BA  
                                 l5442 546C                                   l5602 5D18  
                                 l5530 57B2                                   l6146 4698  
                                 l6236 5E08                                   l5276 407A  
                                 l7028 4706                                   l7052 482E  
                                 l7108 28C4                                   l7212 2FDE  
                                 l7300 2136                                   l6092 45EE  
                                 l6084 45D6                                   l6148 46BE  
                                 l5286 413A                                   l5278 4092  
                                 l7038 517C                                   l7062 48BE  
                                 l7054 4840                                   l7070 5082  
                                 l7142 2BAC                                   l7118 2ACA  
                                 l7206 2FA4                                   l5542 59A8  
                                 l6248 597C                                   l5296 41D4  
                                 l7048 4806                                   l7072 50AE  
                                 l7320 223C                                   l7304 2150  
                                 l5528 57B0                                   l6096 45FA  
                                 l6088 45E2                                   l6258 5E28  
                                 l7058 487C                                   l7138 2B7C  
                                 l7170 3700                                   l7154 364C  
                                 l7242 3170                                   l7226 307A  
                                 l7218 301A                                   l7250 31EA  
                                 l7322 2262                                   l7306 21A0  
                                 l7340 2372                                   l7324 2274  
                                 l4934 5612                                   l7174 373C  
                                 l7430 34B4                                   l7096 285C  
                                 l7192 3842                                   l7184 37DA  
                                 l7352 24A8                                   l7280 2110  
                                 l7424 344A                                   l4890 5130  
                                 l7178 376C                                   l7266 32BC  
                                 l7362 2550                                   l7282 2112  
                                 l7450 4ED2                                   l7418 338C  
                                 l4972 38E4                                   l7188 3806  
                                 l4956 504A                                   l7292 212E  
                                 l7284 2126                                   l7452 4F12  
                                 l5932 57BA                                   l7460 49EE  
                                 l7524 4538                                   l7516 448A  
                                 l7700 3C90                                   l7382 2716  
                                 l7438 3562                                   l4888 510E  
                                 l4984 397E                                   l7376 26C2  
                                 l7296 2132                                   l7288 212A  
                                 l7392 2736                                   l7464 4A60  
                                 l7536 458C                                   l7528 4552  
                                 l7720 3D04                                   l7712 3CE2  
                                 l5962 569E                                   l4978 3938  
                                 l7386 271A                                   l7538 45B4  
                                 l7722 3D12                                   l7730 3D2C  
                                 l7810 439E                                   l4996 3A50  
                                 l7492 4C6E                                   l7724 3D16  
                                 l7708 3CDE                                   l7732 3D6E  
                                 l7812 43A6                                   l5958 5674  
                                 l7726 3D1E                                   l7646 3B06  
                                 l7806 438C                                   l7672 3BA4  
                                 l7808 439A                                   l7816 43B4  
                                 l7920 2E66                                   l7912 2E14  
                                 l7666 3B84                                   l7762 4256  
                                 l7818 43F6                                   l7692 3C32  
                                 l7684 3BD8                                   l7780 42F8  
                                 l7772 4298                                   l7756 4236  
                                 l7924 2E6A                                   l7836 2BF8  
                                 l7942 2EDE                                   l7934 2ECA  
                                 l7926 2E9C                                   l7846 2C26  
                                 l7696 3C60                                   l7688 3C0E  
                                 l7792 4348                                   l7928 2EAE  
                                 l7952 2EF6                                   l7778 42EC  
                                 l7890 2DB2                                   l7954 2F22  
                                 l7876 2D50                                   l7798 435A  
                                 l7894 2DBA                                   l7898 2DD2  
                                 STR_1 2001                                   STR_2 2032  
                                 STR_3 209D                                   STR_4 20AB  
                                 STR_5 203E                                   STR_6 207B  
                                 STR_7 208C                                   STR_8 206A  
                                 STR_9 2055                                   u2100 5896  
                                 u2110 5898                                   u3000 4180  
                                 u2200 56EE                                   u2210 5008  
                                 u2220 500A                                   u2301 393E  
                                 _LATA 003FBA                                   u2310 3978  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 u2240 58F6                                   u2320 39AA  
                                 u2160 55F6                                   _LATD 003FBD  
                                 _LATE 003FBE                                   u2250 58F8  
                                 u2410 3E2E                                   u2170 58C6  
                                 _LATF 003FBF                                   u2500 54E8  
                                 u2340 3A88                                   u2420 3E60  
                                 u2180 58C8                                   u2270 38DE  
                                 u2430 3E92                                   u4110 2892  
                                 u2190 56EC                                   u2360 3ADA  
                                 u4120 2ADE                                   u4040 27BE  
                                 u2290 3934                                   u2450 3F4A  
                                 u4050 27C0                                   u4131 2B0E  
                                 u3340 52D2                                   u4140 2B24  
                                 u4300 2F8A                                   u4141 2B22  
                                 u2470 3F9C                                   u2390 3DD8  
                                 u4150 2B38                                   u4070 2830  
                                 u4160 2B3C                                   u4400 31E6  
                                 u2490 54C8                                   u4090 2842  
                                 u4250 3762                                   u4410 3206  
                                 u4330 3072                                   u4180 2B52  
                                 u4340 30C6                                   u3365 5306  
                                 u4421 3236                                   u4405 31C8  
                                 u3366 5308                                   u3358 52D4  
                                 u4430 324C                                   u4350 30C8  
                                 u4431 324A                                   u4280 3868  
                                 u4440 3260                                   u4600 25A0  
                                 u4520 22BA                                   u4450 3264  
                                 u4370 3126                                   u4530 22BC  
                                 _T6PR 003F93                                   u4380 3128  
                                 u4540 22E2                                   u4700 4C5E  
                                 _PMD0 0039C0                                   _PMD1 0039C1  
                                 u4710 4484                                   _PMD2 0039C2  
                                 _PMD3 0039C3                                   _PMD4 0039C4  
                                 _PMD5 0039C5                                   u2970 404A  
                                 u4570 23C2                                   _PMD6 0039C6  
                                 _PMD7 0039C7                                   u3940 46FA  
                                 u4660 35D6                                   u2990 417E  
                                 u3960 4776                                   u4960 2C0E  
                                 u4968 2C10                                   _PLLR 01CEE0  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                        _INT2_CallBack 5D86                       __end_of_ADCC_ISR 5A06  
                        __CFG_FCMEN$ON 000000                                   _dbuf 00D9  
                                 _atoi 3FC0                                   _ctoa 5064  
                                 _main 2BE4                                   _dtoa 278E  
                                 _prec 0026                                   _nout 0022  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 35E0                                   btemp 003D  
                                 _xtoa 2F70      __size_of_INT2_SetInterruptHandler 0028  
                                 prodh 003FF4                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 002E  
            __end_of_SPI1_Exchange8bit 5E4A                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 5C88                           ___param_bank 000000  
           __size_of_UART1_is_rx_ready 0008                     ?_UART1_rx_vect_isr 005D  
           __size_of_UART1_is_tx_ready 0008                       __end_of_INT0_ISR 5F4A  
                     __end_of_INT1_ISR 5F5A                       __end_of_INT2_ISR 5F6A  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 4D78  
        __end_of_OSCILLATOR_Initialize 5F18                                  PRLOCK 0039EF  
                      __end_of___aodiv 3B02                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 3FC0                                  _ADPCH 003EF1  
                                _ADREF 003EFD                                  STR_10 20B4  
                                STR_11 20B1                          __CFG_WDTE$OFF 000000  
                                _ADRPT 003EEC                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T5CLK 003F9D                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95                                  _U1UIR 003DF8  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 005D  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
                                _TMR5H 003F99                                  _TMR5L 003F98  
                                _TRISA 003FC2                                  _TRISB 003FC3  
                                _TRISC 003FC4                                  _TRISD 003FC5  
                                _TRISE 003FC6                                  _TRISF 003FC7  
                          _Default_ISR 5FD0      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 5C60                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 5836                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 5ED2                           _DMA1CON1bits 003BFD  
                   r_protocol@rxData_l 0030                                  _flags 0028  
                                _fputc 46D6             __size_of_send_lcd_cmd_long 0028  
                      __end_of_isalpha 56F8                                  _fputs 516C  
                      __end_of_isdigit 5902                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 005D                                  _width 0024  
                                _putch 5E9E                        __end_of_islower 58A2  
                      __end_of_isspace 54FC               _INT1_SetInterruptHandler 5BE6  
                      __end_of_isupper 58D2                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 003D                                  ltemp1 0041  
                                ltemp2 0045               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  ttemp0 003D  
                                ttemp1 0040                                  ttemp2 0043  
                                ttemp3 0046                                  ttemp5 003E  
                                ttemp6 0041                                  ttemp7 0045  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 5B46  
          _UART1_SetRxInterruptHandler 5B1E                                  wtemp0 003D  
                                wtemp1 003F                                  wtemp2 0041  
                                wtemp3 0043                                  wtemp4 0045  
                                wtemp5 0047                                  wtemp8 003E  
                      __end_of_sprintf 4B6E                        __end_of_toupper 5064  
                  ??_UART1_tx_vect_isr 005D              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 5CAE               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 5628                  __end_of_ringBufS_init 5AA6  
                      __initialization 4B6E                      _UART2_rx_vect_isr 5CD8  
                         __end_of_atoi 41EE                           __end_of_ctoa 50E8  
                         __end_of_main 2F70                           __end_of_dtoa 2BE4  
                         __end_of_stoa 3882                           __end_of_xtoa 32F4  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005D  
             _TMR5_SetInterruptHandler 5B96                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 000E   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 005D              __end_of_UART1_tx_vect_isr 5C86  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 5B46  
                     _UART1_Initialize 532A                      _UART2_tx_vect_isr 5CB0  
                   _UART2_Transmit_ISR 595A                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 005D  
                               _MD1SRC 003CFC                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RA4PPS 003A04  
                               _RA5PPS 003A05                                 _RA6PPS 003A06  
                               _RC3PPS 003A13                                 _RB6PPS 003A0E  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                               i2l1137 582E                         __CFG_WDTCCS$SC 000000  
                               u140_40 5EDA                                 u140_46 5EDC  
                               u151_48 5D72                                 u153_48 5D94  
                               u164_48 5DD8                                 _SCANPR 0039F7  
                               u149_48 5D50                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 u356_48 5DB6  
                               _IVTADU 00389F           __size_of_eaDogM_WriteCommand 000E  
                               _OSCFRQ 0039DF               __end_of_send_lcd_cmd_dma 554C  
                  ??_UART2_tx_vect_isr 005D              __end_of_UART2_rx_vect_isr 5CFE  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 5F88  
                     _UART2_Initialize 53F0                                 _WaitMs 59B0  
 __size_of_ADCC_SetADIInterruptHandler 0028                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 4F4E                                 _memset 32F4  
                               clear_0 4BDA                                 clear_1 4BE6  
                               clear_2 4BF2                                 clear_3 4BFE  
                               clear_4 4C0A                                 _printf 538E  
                   _eaDogM_WriteString 4C22                              ?_ADCC_ISR 005D  
                               _strlen 50E8                     __size_of_TimerDone 0022  
                      _ADCC_Initialize 5598                         _PMD_Initialize 5F18  
 __end_of_INT2_DefaultInterruptHandler 5FDC  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 5FDA              __end_of_UART2_tx_vect_isr 5CD6  
                               lltemp0 003D                                 lltemp1 0045  
                               lltemp2 004D                                 lltemp3 0055  
                         __mediumconst 0000                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 54AA                       __end_of_vfprintf 4F4E  
                           _StartTimer 5836                        _CLC1_Initialize 5D20  
        __size_of_INTERRUPT_Initialize 0066                __end_of_TMR5_Initialize 566E  
                    _SYSTEM_Initialize 56F8                             __accesstop 0060  
              __end_of__initialization 4C1C                              ?_INT0_ISR 005D  
                            ?_INT1_ISR 005D                              ?_INT2_ISR 005D  
            __end_of_CLKREF_Initialize 5F92                          ___rparam_used 000001  
           __size_of_UART1_rx_vect_isr 0026                        _TMR5_WriteTimer 573A  
               __end_of_ringBufS_flush 4FE0                         __pcstackCOMRAM 005D  
                           ___inthi_sp 0D50                           __pidataBANK0 5FBA  
                         __pidataBANK1 4D78                           __pidataBANK3 51EA  
                            ?_TMR5_ISR 005D                              ?_TMR6_ISR 005D  
                       ivt0x8_undefint 00AC                          __end_of_fputc 47E2  
                        __end_of_fputs 51EA                  __end_of_TMR5_CallBack 5DEC  
                        __end_of_putch 5EB8                __end_of_TMR6_Initialize 5B6E  
               __end_of_PMD_Initialize 5F2C                __size_of_block_checksum 00D2  
                           ??_ADCC_ISR 005D                  __end_of_TMR6_CallBack 5DCA  
          __size_of_EXT_INT_Initialize 004C             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 5FA0       __end_of_INT2_SetInterruptHandler 5BE6  
             _UART2_RxInterruptHandler 0016              __end_of_SYSTEM_Initialize 573A  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                       _DSM_Initialize 5E82                             __pbssBANK0 0060  
                           __pbssBANK1 01A1                             __pbssBANK2 0200  
                           __pbssBANK3 0300                  _INT0_InterruptHandler 001F  
                           ??_INT0_ISR 005D                             ??_INT1_ISR 005D  
                           ??_INT2_ISR 005D                      __end_of_TimerDone 5D20  
                     _DMA1_DMADCNT_ISR 5F94              __size_of_UART1_put_buffer 002A  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                __end_of_wait_lcd_done 5E66                        __CFG_PPS1WAY$ON 000000  
     __end_of_TMR6_SetInterruptHandler 5B96                __end_of_ADCC_Initialize 55E2  
                           ??_TMR5_ISR 005E                             ??_TMR6_ISR 005D  
                   __size_of_secs_send 01B8                                _CLC1CON 003C74  
                              _CLC1POL 003C75                                _DMA1DSA 003BF0  
                              _DMA1DSZ 003BEE                                _DMA1SSA 003BF9  
                              _DMA1SSZ 003BF7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                                _MD1CARH 003CFE  
                              _MD1CARL 003CFD                      _UART1_Receive_ISR 5DEC  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
                              _NCO1CLK 003F3F                         ?_DMA1_DMAA_ISR 005D  
                     _DMA1_DMASCNT_ISR 5F6C                                _NCO1CON 003F3E  
                              _U1ERRIE 003DFA                                _U1ERRIR 003DF9  
              __end_of_CLC1_Initialize 5D42                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                              _INT2PPS 003AC2                           ?_Default_ISR 005D  
                 __size_of_UART1_Write 003E             __size_of_UART2_tx_vect_isr 0026  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 06D6  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
               __end_of_DSM_Initialize 5E9E                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
              __end_of_TMR5_WriteTimer 577A                     __end_of_UART1_Read 57F6  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000C                                __Hparam 0000  
                              __Lparam 0000               __end_of_UART1_Initialize 538E  
                      __size_of_WaitMs 002A                                ___aodiv 3882  
                              ___aomod 3D80              __end_of_UART1_Receive_ISR 5E0C  
                         __psmallconst 2000                   __end_of_init_display 49D4  
                              __pcinit 4B6E                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 5F2C                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 2BE4                                __ptext1 41EE  
                              __ptext2 45C4                                __ptext3 4AA6  
                              __ptext4 3B02                                __ptext5 440C  
                              __ptext6 49D4                                __ptext7 5986  
                              __ptext8 5FAA                                __ptext9 577A  
                    _UART2_Receive_ISR 5E0C                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 0084  
                              us403999 27A8                                us420999 35F2  
                              us237999 3AEC                                us248999 3FAE  
                              us432999 2FF0                  _OSCILLATOR_Initialize 5F02  
                         __size_of_abs 0046                                _r_block 0060  
                         __size_of_pad 0108                                _isalpha 56B4  
                              _isdigit 58D2                                _islower 5872  
                              _isspace 54AA                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 544E  
                              _isupper 58A2             __size_of_SYSTEM_Initialize 0042  
                              _sprintf 4AA6                                _toupper 4FE0  
                 end_of_initialization 4C1C                      __end_of_secs_send 45C4  
             _INT2_SetInterruptHandler 5BBE               __size_of_secs_II_message 0112  
                           _r_protocol 3B02    __end_of_UART1_SetTxInterruptHandler 5B1E  
          _UART1_SetTxInterruptHandler 5AF6    __end_of_UART2_SetRxInterruptHandler 5AF6  
          _UART2_SetRxInterruptHandler 5ACE                             _t_protocol 41EE  
                    __end_of_vfpfcnvrt 278E                              _SPI1TCNTL 003D12  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE                    __size_of_StartTimer 003C  
                    __end_of_start_lcd 5FCE              __end_of_UART2_Receive_ISR 5E2C  
                       wdtdelay@dcount 0085                  __CFG_WDTCPS$WDTCPS_31 000000  
                      ??_DMA1_DMAA_ISR 005E                         _block_checksum 49D4  
                _INT1_InterruptHandler 001C                              _PORTDbits 003FCD  
             _TMR6_SetInterruptHandler 5B6E                  _TMR5_InterruptHandler 0004  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 002A  
  __end_of_ADCC_SetADIInterruptHandler 5C5E            _ADCC_SetADIInterruptHandler 5C36  
               __size_of_ringBufS_init 0028                       __CFG_FEXTOSC$ECH 000000  
                      _DMA1_Initialize 525A                        _SPI1_Initialize 5EEC  
                     _UART1_put_buffer 5986                      __size_of_INT0_ISR 000E  
                    __size_of_INT1_ISR 000E                      __size_of_INT2_ISR 000E  
                       __end_of_WaitMs 59DA           __end_of_INTERRUPT_Initialize 532A  
               __end_of_block_checksum 4AA6   __end_of_INT0_DefaultInterruptHandler 5FD8  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 5FD6  
           __size_of_UART1_Receive_ISR 0020                      __size_of_TMR5_ISR 003E  
                    __size_of_TMR6_ISR 001A            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 35E0                         __end_of_printf 53F0  
             __end_of_DMA1_DMADCNT_ISR 5F9E                  __end_of_INT0_CallBack 5D64  
                       __end_of_strlen 516C                    start_initialization 4B6E  
 __end_of_TMR5_DefaultInterruptHandler 5EEC  __size_of_TMR5_DefaultInterruptHandler 001A  
         _TMR5_DefaultInterruptHandler 5ED2        __size_of_PIN_MANAGER_Initialize 00A0  
                          __end_of_abs 5628                  __end_of_INT1_CallBack 5D86  
                          __end_of_pad 48EA                   __size_of_Default_ISR 0006  
                 __end_of_send_lcd_cmd 5A7E                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 5DA8                   secs_II_message@block 0001  
                        _uart1RxBuffer 01A1                          _uart1TxBuffer 0280  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 5F7A  
                        _uart2TxBuffer 0240                         _DMA1_DMAOR_ISR 5F7C  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 00AC                              _TimerDone 5CFE  
                        _ringBufS_init 5A7E                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 00F9  
                          __pdataBANK1 0100                            __pdataBANK3 0386  
           __size_of_UART2_Receive_ISR 0020             __end_of_EXT_INT_Initialize 5598  
                      run_checksum@sum 002A        __end_of_eaDogM_WriteStringAtPos 592E  
              __end_of_DMA1_Initialize 52C4                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 5C36                __end_of_SPI1_Initialize 5F02  
             _UART1_RxInterruptHandler 0010               _UART2_TxInterruptHandler 0013  
            __size_of_ringBufS_put_dma 00AA                           _init_display 48EA  
               __end_of_DMA1_DMAOR_ISR 5F88                 __size_of_TMR5_CallBack 0022  
                _INT2_InterruptHandler 0019                  _TMR6_InterruptHandler 0007  
               __size_of_TMR6_CallBack 0022                 _PIN_MANAGER_Initialize 4E1A  
                 __end_of_wait_lcd_set 5FC8                              __ptext100 5E0C  
                            __ptext101 5EB8                              __ptext110 5DCA  
                            __ptext102 5DA8                              __ptext111 5ED2  
                            __ptext103 566E                              __ptext112 0000  
                            __ptext104 5F6C                              __ptext105 5F94  
                            __ptext106 5FA0                              __ptext107 5F7C  
                            __ptext108 57F8                              __ptext109 573A  
                   __end_of_StartTimer 5872                      __size_of_wdtdelay 005C  
                    __size_of_vfprintf 0094                               _ADCC_ISR 59DC  
                  __size_of_r_protocol 027E                 __CFG_BBSIZE$BBSIZE_512 000000  
                          __smallconst 2000                               _CLC1GLS0 003C7A  
                             _CLC1GLS1 003C7B                               _CLC1GLS2 003C7C  
                             _CLC1GLS3 003C7D                               _CLC1SEL0 003C76  
                             _CLC1SEL1 003C77                               _CLC1SEL2 003C78  
                             _CLC1SEL3 003C79                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA1SIRQ 003BFF                            _NCO1CONbits 003F3E  
                  __size_of_t_protocol 021E                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 010C                         __size_of_fputs 007E  
                             _NCO1ACCH 003F39                         __size_of_putch 001A  
                             _NCO1ACCL 003F38                               _NCO1ACCU 003F3A  
                 _INTERRUPT_Initialize 52C4                               _T6CLKCON 003F96  
                             _NCO1INCH 003F3C                               _NCO1INCL 003F3B  
                             _NCO1INCU 003F3D                        ?_DMA1_DMAOR_ISR 005D  
                             _INT0_ISR 5F3C                               _INT1_ISR 5F4C  
                             _INT2_ISR 5F5C                               _LATCbits 003FBC  
                             _LATEbits 003FBE      __size_of_INT1_SetInterruptHandler 0028  
                            _secs_send 440C                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 0079                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR7bits 003987  
                             _IPR8bits 003988                               _PIE6bits 003996  
                             _PIE7bits 003997                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                              _ring_buf1 0343  
                            _ring_buf2 0300                               _PIR1bits 0039A1  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             i2u196_40 5826                               i2u187_48 59F2  
                             i2u381_48 5C9A                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             i2u383_48 5CC2                               _PIR5bits 0039A5  
                             i2u385_48 5CEA                               i2u379_48 5C72  
                             _PIR7bits 0039A7                               _PIR8bits 0039A8  
                             _PIR9bits 0039A9               __size_of_TMR5_Initialize 0046  
           __end_of_UART1_Transmit_ISR 595A                               _TMR5_ISR 57F8  
                             _TMR6_ISR 5EB8                              _vfpfcnvrt 20B8  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 5DCA  
                            _start_lcd 5FC8              __size_of_send_lcd_cmd_dma 0050  
                        _TMR6_CallBack 5DA8               __end_of_UART1_put_buffer 59B0  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                  __end_of_UART1_Write 57B8               __size_of_TMR6_Initialize 0028  
                          _INTCON0bits 003FD2                              copy_data0 4B82  
                            copy_data1 4BA4                              copy_data2 4BC6  
             _INT0_SetInterruptHandler 5C0E                 _uart1TxBufferRemaining 003A  
  __end_of_UART2_SetTxInterruptHandler 5ACE            _UART2_SetTxInterruptHandler 5AA6  
                         _uart1RxCount 0037                           _uart2RxCount 0031  
                             __Hrparam 0000       __size_of_eaDogM_WriteStringAtPos 002C  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                   __end_of_run_checksum 5A2E  
                             __Lrparam 0000                     __CFG_BOREN$SBORDIS 000000  
                        _wait_lcd_done 5E4A                           _send_lcd_cmd 5A56  
                     __size_of___aodiv 0280                       __size_of___aomod 0240  
                      _NCO1_Initialize 5E66                  __end_of_DMA1_DMAA_ISR 5FAA  
 __size_of_UART1_SetRxInterruptHandler 0028                      ?_DMA1_DMADCNT_ISR 005D  
             __size_of_ADCC_Initialize 004A            __end_of_eaDogM_WriteCommand 5F3A  
                     __size_of_isalpha 0044                       __size_of_isdigit 0030  
                             __pivt0x8 0008                       __size_of_islower 0030  
                     __size_of_isspace 0052                     ??_DMA1_DMADCNT_ISR 005E  
                             __ptext10 5A06                               __ptext11 59B0  
                             __ptext20 5A7E                               __ptext12 5CFE  
                             __ptext21 5902                               __ptext13 5836  
                             __ptext30 32F4                               __ptext22 4C22  
                             __ptext14 5FB2                               __ptext31 538E  
                             __ptext23 5F2C                               __ptext15 57B8  
                             __ptext40 278E                               __ptext32 4EBA  
                             __ptext24 54FC                               __ptext16 48EA  
                             __ptext41 55E2                               __ptext33 20B8  
                             __ptext25 5FC2                               __ptext17 5A2E  
                             __ptext50 4CCE                               __ptext42 3D80  
                             __ptext34 2F70                               __ptext26 5E4A  
                             __ptext18 5A56                               __ptext51 3FC0  
                             __ptext43 3882                               __ptext35 4FE0  
                             __ptext27 544E                               __ptext19 5E2C  
                             __ptext60 5B1E                               __ptext52 54AA  
                             __ptext44 5064                               __ptext36 5872  
                             __ptext28 5FC8                               __ptext61 5B46  
                             __ptext53 58D2                               __ptext45 47E2  
                             __ptext37 58A2                               __ptext29 4F4E  
                             __ptext70 52C4                               __ptext62 5B6E  
                             __ptext54 56F8                               __ptext46 50E8  
                             __ptext38 56B4                               __ptext71 554C  
                             __ptext63 5628                               __ptext55 53F0  
                             __ptext47 516C                               __ptext39 35E0  
                             __ptext80 5C36                               __ptext72 5BBE  
                             __ptext64 5B96                               __ptext56 5AA6  
                             __ptext48 46D6                               __ptext81 5F3C  
                             __ptext73 5BE6                               __ptext65 5EEC  
                             __ptext57 5ACE                               __ptext49 5E9E  
                             __ptext90 5FD0                               __ptext82 5D42  
                             __ptext74 5C0E                               __ptext66 5F18  
                             __ptext58 532A                               __ptext91 59DC  
                             __ptext83 5FD6                               __ptext75 5E82  
                             __ptext67 4E1A                               __ptext59 5AF6  
                             __ptext92 5FDC                               __ptext84 5F4C  
                             __ptext76 525A                               __ptext68 5F02  
                             __ptext93 5C60                               __ptext85 5D64  
                             __ptext77 5F88                               __ptext69 5E66  
                             __ptext94 592E                               __ptext86 5FD8  
                             __ptext78 5D20                               __ptext95 5C88  
                             __ptext87 5F5C                               __ptext79 5598  
                             __ptext96 5DEC                               __ptext88 5D86  
                             __ptext97 5CB0                               __ptext89 5FDA  
                             __ptext98 595A                               __ptext99 5CD8  
                     __size_of_isupper 0030                        _secs_II_message 45C4  
             __size_of_CLC1_Initialize 0022                       __size_of_sprintf 00C8  
                     __size_of_toupper 0084                       _ringBufS_put_dma 4CCE  
                        __size_of_atoi 022E                          __size_of_ctoa 0084  
                        __size_of_main 038C                          __size_of_dtoa 0456  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02A2  
                        __size_of_xtoa 0384                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 005D                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 000A  
                            stoa@F1144 00F9                     ??_DMA1_DMASCNT_ISR 005E  
                             _spi_link 006D                               _wdtdelay 544E  
           __end_of_UART2_Transmit_ISR 5986                               _vfprintf 4EBA  
                    _UART1_is_rx_ready 5FB2                            _UART1_Write 577A  
 __end_of_INT1_DefaultInterruptHandler 5FDA  __size_of_INT1_DefaultInterruptHandler 0002  
         _INT1_DefaultInterruptHandler 5FD8                      _UART1_is_tx_ready 5FAA  
                        ??_Default_ISR 005D                     __end_of_r_protocol 3D80  
                          _uart1RxHead 0039                            _uart1TxHead 003C  
                          _uart2RxHead 0033                            _uart1RxTail 0038  
                          _uart2TxHead 0036                            _uart1TxTail 003B  
                          _uart2RxTail 0032                            _uart2TxTail 0035  
                         _wait_lcd_set 5FC2                     _EXT_INT_Initialize 554C  
 __end_of_TMR6_DefaultInterruptHandler 56B4  __size_of_TMR6_DefaultInterruptHandler 0046  
         _TMR6_DefaultInterruptHandler 566E                     __end_of_t_protocol 440C  
 __end_of_ADCC_DefaultInterruptHandler 5FDE  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 5FDC                               intlevel2 0000  
                    _send_lcd_cmd_long 5A2E                      __CFG_CLKOUTEN$OFF 000000  
           __end_of_eaDogM_WriteString 4CCE                __end_of_NCO1_Initialize 5E82  
               __size_of_INT0_CallBack 0022                             _SPI1SCKPPS 003ADE  
                           _SPI1SDIPPS 003ADF              __end_of_UART1_is_rx_ready 5FBA  
                           _UART1_Read 57B8                 __size_of_INT1_CallBack 0022  
            __end_of_UART1_is_tx_ready 5FB2                 __size_of_INT2_CallBack 0022  
               _uart2TxBufferRemaining 0034                       _send_lcd_cmd_dma 54FC  
                TMR5_ISR@CountCallBack 002C                __end_of_secs_II_message 46D6  
     __end_of_INT1_SetInterruptHandler 5C0E              __size_of_UART1_Initialize 0064  
                     ??_DMA1_DMAOR_ISR 005E               _UART1_TxInterruptHandler 000D  
            __end_of_send_lcd_cmd_long 5A56                    __end_of_Default_ISR 5FD6  
       __end_of_PIN_MANAGER_Initialize 4EBA                  __size_of_run_checksum 0028  
              _eaDogM_WriteStringAtPos 5902              __size_of_UART2_Initialize 005E  
