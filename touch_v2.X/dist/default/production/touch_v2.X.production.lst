

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec  5 03:26:59 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=4,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=4,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=4,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=4,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=4,class=CODE,delta=1
   166                           	psect	text142,global,reloc=4,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=4,class=CODE,delta=1
   171                           	psect	text147,global,reloc=4,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=4,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=4,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=4,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=4,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=4,class=CODE,delta=1
   183                           	psect	text159,global,reloc=4,class=CODE,delta=1
   184                           	psect	text160,global,reloc=4,class=CODE,delta=1
   185                           	psect	text161,global,reloc=4,class=CODE,delta=1
   186                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   187                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   188                           	psect	text162,global,reloc=4,class=CODE,delta=1
   189                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   190                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   191  0000                     
   192                           ; Version 2.10
   193                           ; Generated 31/07/2019 GMT
   194                           ; 
   195                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   196                           ; All rights reserved.
   197                           ; 
   198                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   199                           ; 
   200                           ; Redistribution and use in source and binary forms, with or without modification, are
   201                           ; permitted provided that the following conditions are met:
   202                           ; 
   203                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   204                           ;        conditions and the following disclaimer.
   205                           ; 
   206                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   207                           ;        of conditions and the following disclaimer in the documentation and/or other
   208                           ;        materials provided with the distribution.
   209                           ; 
   210                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   211                           ;        software without specific prior written permission.
   212                           ; 
   213                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   214                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   215                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   216                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   217                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   218                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   219                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   220                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   221                           ; 
   222                           ; 
   223                           ; Code-generator required, PIC18F57K42 Definitions
   224                           ; 
   225                           ; SFR Addresses
   226  0000                     
   227 ;;_k	offset	0
   228 ;;_j	offset	1
   229 ;;_i	offset	2
   230 ;;_inp_index	offset	3
   231 ;;_mode	offset	4
   232 ;;_channel	offset=-1 (param)
   233 ;;_s	offset=-2 (param)
   234 ;;_cmd	offset=-1 (param)
   235 ;;_cmd	offset=-1 (param)
   236 ;;_data	offset=-1 (param)
   237 ;;__this	offset=-2 (param)
   238 ;;_h	offset=-1 (param)
   239 ;;_h	offset=-1 (param)
   240 ;;_i	offset=-1 (param)
   241 ;;_cmd	offset=-1 (param)
   242 ;;_i	offset	0
   243 ;;_chan	offset=-1 (param)
   244 ;;_to_what	offset=-2 (param)
   245 ;;_u	offset	0
   246 ;;_s	offset=-2 (param)
   247 ;;_index	offset=-1 (param)
   248 ;;_arg	offset	0
   249 ;;_exp	offset	4
   250 ;;_sign	offset=-1 (param)
   251 ;;_val	offset=-5 (param)
   252 ;;_h	offset=-1 (param)
   253 ;;_flipper	offset=-1 (param)
   254 ;;_f	offset	0
   255 ;;_ap	offset	6
   256 ;;_s	offset=-3 (param)
   257 ;;_fmt	offset=-5 (param)
   258 ;;_line	offset=-1 (param)
   259 ;;_vterm	offset=-2 (param)
   260 ;;_numMilliseconds	offset=-2 (param)
   261 ;;_vterm	offset=-1 (param)
   262 ;;_r	offset=-1 (param)
   263 ;;_c	offset=-2 (param)
   264 ;;_strPtr	offset=-4 (param)
   265 ;;_strPtr	offset=-1 (param)
   266 ;;_delay	offset=-4 (param)
   267 ;;_strPtr	offset=-2 (param)
   268 ;;__this	offset=-2 (param)
   269 ;;_clearBuffer	offset=-3 (param)
   270 ;;_s	offset	0
   271 ;;_k	offset	2
   272 ;;_dest	offset=-2 (param)
   273 ;;_c	offset=-4 (param)
   274 ;;_n	offset=-6 (param)
   275 ;;_ap	offset	0
   276 ;;_fmt	offset=-3 (param)
   277 ;;_cfmt	offset	0
   278 ;;_fp	offset=-2 (param)
   279 ;;_fmt	offset=-4 (param)
   280 ;;_ap	offset=-6 (param)
   281 ;;_vfpfcnvrt$5025	offset	0
   282 ;;_vfpfcnvrt$5031	offset	2
   283 ;;_vfpfcnvrt$5024	offset	4
   284 ;;_llu	offset	6
   285 ;;_ll	offset	14
   286 ;;_f	offset	22
   287 ;;_ct	offset	26
   288 ;;_cp	offset	29
   289 ;;_c	offset	31
   290 ;;_fp	offset=-2 (param)
   291 ;;_fmt	offset=-4 (param)
   292 ;;_ap	offset=-6 (param)
   293 ;;_xtoa$5010	offset	0
   294 ;;_xtoa$5009	offset	2
   295 ;;_n	offset	4
   296 ;;_c	offset	12
   297 ;;_i	offset	14
   298 ;;_w	offset	16
   299 ;;_p	offset	18
   300 ;;_fp	offset=-2 (param)
   301 ;;_d	offset=-10 (param)
   302 ;;_x	offset=-11 (param)
   303 ;;_toupper$5670	offset	0
   304 ;;_c	offset=-2 (param)
   305 ;;_c	offset=-2 (param)
   306 ;;_c	offset=-2 (param)
   307 ;;_r	offset	0
   308 ;;_l	offset	2
   309 ;;__l	offset=-2 (param)
   310 ;;__r	offset=-4 (param)
   311 ;;_n	offset=-6 (param)
   312 ;;_nuls	offset	0
   313 ;;_l	offset	7
   314 ;;_p	offset	9
   315 ;;_cp	offset	11
   316 ;;_w	offset	13
   317 ;;_i	offset	15
   318 ;;_fp	offset=-2 (param)
   319 ;;_s	offset=-4 (param)
   320 ;;_efgtoa$4989	offset	0
   321 ;;_efgtoa$4988	offset	2
   322 ;;_efgtoa$4987	offset	4
   323 ;;_efgtoa$4983	offset	6
   324 ;;_efgtoa$4979	offset	8
   325 ;;_efgtoa$4978	offset	10
   326 ;;_u	offset	12
   327 ;;_g	offset	16
   328 ;;_l	offset	20
   329 ;;_h	offset	24
   330 ;;_ou	offset	28
   331 ;;_n	offset	32
   332 ;;_e	offset	34
   333 ;;_i	offset	36
   334 ;;_w	offset	38
   335 ;;_p	offset	40
   336 ;;_sign	offset	42
   337 ;;_d	offset	44
   338 ;;_ne	offset	46
   339 ;;_m	offset	48
   340 ;;_pp	offset	50
   341 ;;_t	offset	52
   342 ;;_mode	offset	54
   343 ;;_nmode	offset	55
   344 ;;_fp	offset=-2 (param)
   345 ;;_f	offset=-6 (param)
   346 ;;_c	offset=-7 (param)
   347 ;;_tolower$5655	offset	0
   348 ;;_c	offset=-2 (param)
   349 ;;_c	offset=-2 (param)
   350 ;;_d	offset	0
   351 ;;_s	offset	2
   352 ;;_dest	offset=-2 (param)
   353 ;;_src	offset=-4 (param)
   354 ;;_u	offset	0
   355 ;;_m	offset	4
   356 ;;_e	offset	8
   357 ;;_x	offset=-4 (param)
   358 ;;_u	offset	0
   359 ;;_e	offset	4
   360 ;;_x	offset=-4 (param)
   361 ;;_exp1	offset	0
   362 ;;_sign1	offset	1
   363 ;;_f1	offset=-4 (param)
   364 ;;_f1	offset=-4 (param)
   365 ;;_ff1	offset=-4 (param)
   366 ;;_ff2	offset=-8 (param)
   367 ;;_ff1	offset=-4 (param)
   368 ;;_ff2	offset=-8 (param)
   369 ;;_grs	offset	0
   370 ;;_rem	offset	4
   371 ;;_new_exp	offset	8
   372 ;;_aexp	offset	10
   373 ;;_bexp	offset	11
   374 ;;_sign	offset	12
   375 ;;_b	offset=-4 (param)
   376 ;;_a	offset=-8 (param)
   377 ;;_sign	offset	0
   378 ;;_counter	offset	1
   379 ;;_dividend	offset=-2 (param)
   380 ;;_divisor	offset=-4 (param)
   381 ;;_quotient	offset	0
   382 ;;_sign	offset	2
   383 ;;_counter	offset	3
   384 ;;_dividend	offset=-2 (param)
   385 ;;_divisor	offset=-4 (param)
   386 ;;_dtoa$4955	offset	0
   387 ;;_n	offset	2
   388 ;;_i	offset	10
   389 ;;_s	offset	12
   390 ;;_w	offset	14
   391 ;;_p	offset	16
   392 ;;_fp	offset=-2 (param)
   393 ;;_d	offset=-10 (param)
   394 ;;_a	offset=-2 (param)
   395 ;;_sign	offset	0
   396 ;;_counter	offset	1
   397 ;;_dividend	offset=-8 (param)
   398 ;;_divisor	offset=-16 (param)
   399 ;;_quotient	offset	0
   400 ;;_sign	offset	8
   401 ;;_counter	offset	9
   402 ;;_dividend	offset=-8 (param)
   403 ;;_divisor	offset=-16 (param)
   404 ;;_w	offset	0
   405 ;;_fp	offset=-2 (param)
   406 ;;_c	offset=-3 (param)
   407 ;;_w	offset	0
   408 ;;_i	offset	2
   409 ;;_fp	offset=-2 (param)
   410 ;;_buf	offset=-4 (param)
   411 ;;_p	offset=-6 (param)
   412 ;;_a	offset	0
   413 ;;_s	offset=-2 (param)
   414 ;;_i	offset	0
   415 ;;_c	offset	2
   416 ;;_s	offset=-2 (param)
   417 ;;_fp	offset=-4 (param)
   418 ;;_c	offset=-2 (param)
   419 ;;_fp	offset=-4 (param)
   420 ;;_c	offset=-1 (param)
   421 ;;__this	offset=-2 (param)
   422 ;;_c	offset=-3 (param)
   423 ;;_atoi$5508	offset	0
   424 ;;_atoi$5506	offset	2
   425 ;;_atoi$5507	offset	4
   426 ;;_n	offset	5
   427 ;;_neg	offset	7
   428 ;;_s	offset=-2 (param)
   429 ;;_isspace$5546	offset	0
   430 ;;_c	offset=-2 (param)
   431 ;;_c	offset=-2 (param)
   432 ;;_vterm	offset=-1 (param)
   433 ;;_new_response_info	offset=-1 (param)
   434 ;;_new_response_info	offset=-1 (param)
   435 ;;_level	offset=-2 (param)
   436 ;;_dutyValue	offset=-2 (param)
   437 ;;_timer	offset=-1 (param)
   438 ;;_timer	offset=-1 (param)
   439 ;;_count	offset=-3 (param)
   440 ;;_h	offset=-1 (param)
   441 ;;_lp_speed	offset	0
   442 ;;_new	offset=-4 (param)
   443 ;;_bn	offset=-5 (param)
   444 ;;_slow	offset=-6 (param)
   445 ;;_b	offset=-4 (param)
   446 ;;_a	offset=-8 (param)
   447 ;;_grs	offset	0
   448 ;;_bexp	offset	1
   449 ;;_aexp	offset	2
   450 ;;_signs	offset	3
   451 ;;_b	offset=-4 (param)
   452 ;;_a	offset=-8 (param)
   453 ;;_prod	offset	0
   454 ;;_grs	offset	4
   455 ;;_temp	offset	8
   456 ;;_bexp	offset	10
   457 ;;_aexp	offset	11
   458 ;;_sign	offset	12
   459 ;;_b	offset=-4 (param)
   460 ;;_a	offset=-8 (param)
   461 ;;_InterruptHandler	offset=-3 (param)
   462 ;;_InterruptHandler	offset=-3 (param)
   463 ;;_InterruptHandler	offset=-3 (param)
   464 ;;_InterruptHandler	offset=-3 (param)
   465 ;;_InterruptHandler	offset=-3 (param)
   466 ;;_InterruptHandler	offset=-3 (param)
   467 ;;_InterruptHandler	offset=-3 (param)
   468 ;;_state	offset	0
   469 ;;_InterruptHandler	offset=-3 (param)
   470 ;;_InterruptHandler	offset=-3 (param)
   471 ;;_InterruptHandler	offset=-3 (param)
   472 ;;_InterruptHandler	offset=-3 (param)
   473 ;;_i	offset	0
   474 ;;_sw_value	offset	1
   475 ;;_timerVal	offset=-2 (param)
   476 ;;_timerVal	offset=-2 (param)
   477 ;;_ff1	offset=-4 (param)
   478 ;;_ff2	offset=-8 (param)
   479 ;;_grs	offset	0
   480 ;;_rem	offset	4
   481 ;;_new_exp	offset	8
   482 ;;_aexp	offset	10
   483 ;;_bexp	offset	11
   484 ;;_sign	offset	12
   485 ;;_b	offset=-4 (param)
   486 ;;_a	offset=-8 (param)
   487 ;;_grs	offset	0
   488 ;;_bexp	offset	1
   489 ;;_aexp	offset	2
   490 ;;_signs	offset	3
   491 ;;_b	offset=-4 (param)
   492 ;;_a	offset=-8 (param)
   493 ;;_channel	offset=-1 (param)
   494 ;;_i	offset	0
   495                           
   496                           	psect	idataBANK0
   497  018926                     __pidataBANK0:
   498                           	opt callstack 0
   499                           
   500                           ;initializer for _R
   501  018926  0000               	dw	0
   502  018928  0000               	dw	0
   503  01892A  0000               	dw	0
   504  01892C  0000               	dw	0
   505  01892E  0000               	dw	0
   506  018930  0000               	dw	0
   507  018932  0000               	dw	0
   508  018934  0000               	dw	0
   509  018936  0000               	dw	0
   510  018938  0000               	dw	0
   511  01893A  0000               	dw	0
   512  01893C  0000               	dw	0
   513  01893E  0000               	dw	0
   514  018940  0000               	dw	0
   515  018942  0000               	dw	0
   516  018944  0000               	dw	0
   517  018946  0F67               	dw	3943
   518  018948  0F8F               	dw	3983
   519  01894A  00                 	db	0
   520  01894B  0000               	dw	0
   521  01894D  00                 	db	0
   522                           
   523                           ;initializer for stoa@F1166
   524  01894E  28                 	db	40
   525  01894F  6E                 	db	110
   526  018950  75                 	db	117
   527  018951  6C                 	db	108
   528  018952  6C                 	db	108
   529  018953  29                 	db	41
   530  018954  00                 	db	0
   531                           
   532                           ;initializer for _H
   533  018955  00                 	db	0
   534  018956  00                 	db	0
   535  018957  01                 	db	1
   536  018958  00                 	db	0
   537  018959  01                 	db	1
   538  01895A  00                 	db	0
   539  01895B  00                 	db	0
   540                           
   541                           	psect	idataBANK1
   542  017846                     __pidataBANK1:
   543                           	opt callstack 0
   544                           
   545                           ;initializer for _C
   546  017846  0000               	dw	0
   547  017848  0000               	dw	0
   548  01784A  0000               	dw	0
   549  01784C  0000               	dw	0
   550  01784E  0000               	dw	0
   551  017850  0000               	dw	0
   552  017852  0000               	dw	0
   553  017854  0000               	dw	0
   554  017856  0000               	dw	0
   555  017858  0000               	dw	0
   556  01785A  0000               	dw	0
   557  01785C  0000               	dw	0
   558  01785E  0000               	dw	0
   559  017860  0000               	dw	0
   560  017862  0000               	dw	0
   561  017864  0000               	dw	0
   562  017866  0000               	dw	0
   563  017868  0000               	dw	0
   564  01786A  0000               	dw	0
   565  01786C  0000               	dw	0
   566  01786E  0000               	dw	0
   567  017870  0000               	dw	0
   568  017872  0000               	dw	0
   569  017874  0000               	dw	0
   570  017876  0000               	dw	0
   571  017878  0000               	dw	0
   572  01787A  0000               	dw	0
   573  01787C  0000               	dw	0
   574  01787E  0000               	dw	0
   575  017880  0000               	dw	0
   576  017882  0000               	dw	0
   577  017884  0000               	dw	0
   578  017886  0000               	dw	0
   579  017888  0000               	dw	0
   580  01788A  0000               	dw	0
   581  01788C  0000               	dw	0
   582  01788E  0000               	dw	0
   583  017890  0000               	dw	0
   584  017892  0000               	dw	0
   585  017894  0000               	dw	0
   586  017896  0000               	dw	0
   587  017898  0000               	dw	0
   588  01789A  0000               	dw	0
   589  01789C  0000               	dw	0
   590  01789E  0000               	dw	0
   591  0178A0  0000               	dw	0
   592  0178A2  0000               	dw	0
   593  0178A4  0000               	dw	0
   594  0178A6  0000               	dw	0
   595  0178A8  0000               	dw	0
   596  0178AA  0000               	dw	0
   597  0178AC  0000               	dw	0
   598  0178AE  0000               	dw	0
   599  0178B0  0000               	dw	0
   600  0178B2  0000               	dw	0
   601  0178B4  0000               	dw	0
   602  0178B6  0000               	dw	0
   603  0178B8  0000               	dw	0
   604  0178BA  0000               	dw	0
   605  0178BC  0000               	dw	0
   606  0178BE  0000               	dw	0
   607  0178C0  0000               	dw	0
   608  0178C2  0000               	dw	0
   609  0178C4  4361               	dw	17249
   610  0178C6  00                 	db	0
   611  0178C7  00                 	db	0
   612  0178C8  00                 	db	0
   613  0178C9  00                 	db	0
   614  0178CA  00                 	db	0
   615  0178CB  00                 	db	0
   616  0178CC  00                 	db	0
   617  0178CD  00                 	db	0
   618  0178CE  00                 	db	0
   619  0178CF  00                 	db	0
   620  0178D0  00                 	db	0
   621  0178D1  00                 	db	0
   622  0178D2  00                 	db	0
   623  0178D3  00                 	db	0
   624  0178D4  00                 	db	0
   625  0178D5  00                 	db	0
   626  0178D6  00                 	db	0
   627  0178D7  00                 	db	0
   628  0178D8  00                 	db	0
   629  0178D9  00                 	db	0
   630  0178DA  00                 	db	0
   631  0178DB  00                 	db	0
   632  0178DC  00                 	db	0
   633  0178DD  00                 	db	0
   634  0178DE  00                 	db	0
   635  0178DF  00                 	db	0
   636  0178E0  00                 	db	0
   637  0178E1  00                 	db	0
   638  0178E2  00                 	db	0
   639  0178E3  00                 	db	0
   640  0178E4  00                 	db	0
   641  0178E5  00                 	db	0
   642  0178E6  00                 	db	0
   643                           
   644                           ;initializer for _port_data
   645  0178E7  FF                 	db	255
   646  0178E8  00                 	db	0
   647  0178E9  FF                 	db	255
   648  0178EA  00                 	db	0
   649  0178EB  FF                 	db	255
   650  0178EC  00                 	db	0
   651  0178ED  FF                 	db	255
   652  0178EE  00                 	db	0
   653  0178EF  FF                 	db	255
   654  0178F0  00                 	db	0
   655  0178F1  FF                 	db	255
   656  0178F2  00                 	db	0
   657  0178F3  FF                 	db	255
   658  0178F4  00                 	db	0
   659  0178F5  FF                 	db	255
   660  0178F6  00                 	db	0
   661                           
   662                           	psect	idataBANK2
   663  0176D2                     __pidataBANK2:
   664                           	opt callstack 0
   665                           
   666                           ;initializer for _V
   667  0176D2  00                 	db	0
   668  0176D3  00                 	db	0
   669  0176D4  00                 	db	0
   670  0176D5  00                 	db	0
   671  0176D6  00                 	db	0
   672  0176D7  00                 	db	0
   673  0176D8  00                 	db	0
   674  0176D9  00                 	db	0
   675  0176DA  00                 	db	0
   676  0176DB  00                 	db	0
   677  0176DC  00                 	db	0
   678  0176DD  00                 	db	0
   679  0176DE  00                 	db	0
   680  0176DF  00                 	db	0
   681  0176E0  00                 	db	0
   682  0176E1  00                 	db	0
   683  0176E2  00                 	db	0
   684  0176E3  00                 	db	0
   685  0176E4  00                 	db	0
   686  0176E5  00                 	db	0
   687  0176E6  00                 	db	0
   688  0176E7  00                 	db	0
   689  0176E8  00                 	db	0
   690  0176E9  00                 	db	0
   691  0176EA  00                 	db	0
   692  0176EB  00                 	db	0
   693  0176EC  00                 	db	0
   694  0176ED  00                 	db	0
   695  0176EE  00                 	db	0
   696  0176EF  00                 	db	0
   697  0176F0  00                 	db	0
   698  0176F1  00                 	db	0
   699  0176F2  00                 	db	0
   700  0176F3  00                 	db	0
   701  0176F4  00                 	db	0
   702  0176F5  00                 	db	0
   703  0176F6  00                 	db	0
   704  0176F7  00                 	db	0
   705  0176F8  00                 	db	0
   706  0176F9  00                 	db	0
   707  0176FA  00                 	db	0
   708  0176FB  00                 	db	0
   709  0176FC  00                 	db	0
   710  0176FD  00                 	db	0
   711  0176FE  00                 	db	0
   712  0176FF  00                 	db	0
   713  017700  00                 	db	0
   714  017701  00                 	db	0
   715  017702  00                 	db	0
   716  017703  00                 	db	0
   717  017704  00                 	db	0
   718  017705  00                 	db	0
   719  017706  00                 	db	0
   720  017707  00                 	db	0
   721  017708  00                 	db	0
   722  017709  00                 	db	0
   723  01770A  00                 	db	0
   724  01770B  00                 	db	0
   725  01770C  00                 	db	0
   726  01770D  00                 	db	0
   727  01770E  00                 	db	0
   728  01770F  00                 	db	0
   729  017710  00                 	db	0
   730  017711  00                 	db	0
   731  017712  00                 	db	0
   732  017713  00                 	db	0
   733  017714  00                 	db	0
   734  017715  00                 	db	0
   735  017716  00                 	db	0
   736  017717  00                 	db	0
   737  017718  00                 	db	0
   738  017719  00                 	db	0
   739  01771A  00                 	db	0
   740  01771B  00                 	db	0
   741  01771C  00                 	db	0
   742  01771D  00                 	db	0
   743  01771E  00                 	db	0
   744  01771F  00                 	db	0
   745  017720  00                 	db	0
   746  017721  00                 	db	0
   747  017722  00                 	db	0
   748  017723  00                 	db	0
   749  017724  00                 	db	0
   750  017725  00                 	db	0
   751  017726  00                 	db	0
   752  017727  00                 	db	0
   753  017728  00                 	db	0
   754  017729  00                 	db	0
   755  01772A  00                 	db	0
   756  01772B  00                 	db	0
   757  01772C  00                 	db	0
   758  01772D  00                 	db	0
   759  01772E  00                 	db	0
   760  01772F  00                 	db	0
   761  017730  00                 	db	0
   762  017731  00                 	db	0
   763  017732  00                 	db	0
   764  017733  00                 	db	0
   765  017734  00                 	db	0
   766  017735  00                 	db	0
   767  017736  00                 	db	0
   768  017737  00                 	db	0
   769  017738  00                 	db	0
   770  017739  00                 	db	0
   771  01773A  00                 	db	0
   772  01773B  00                 	db	0
   773  01773C  00                 	db	0
   774  01773D  00                 	db	0
   775  01773E  00                 	db	0
   776  01773F  00                 	db	0
   777  017740  00                 	db	0
   778  017741  00                 	db	0
   779  017742  00                 	db	0
   780  017743  00                 	db	0
   781  017744  00                 	db	0
   782  017745  00                 	db	0
   783  017746  00                 	db	0
   784  017747  00                 	db	0
   785  017748  00                 	db	0
   786  017749  00                 	db	0
   787  01774A  00                 	db	0
   788  01774B  00                 	db	0
   789  01774C  00                 	db	0
   790  01774D  00                 	db	0
   791  01774E  00                 	db	0
   792  01774F  00                 	db	0
   793  017750  00                 	db	0
   794  017751  00                 	db	0
   795  017752  00                 	db	0
   796  017753  0000               	dw	0
   797  017755  0000               	dw	0
   798  017757  0000               	dw	0
   799  017759  0000               	dw	0
   800  01775B  00                 	db	0
   801  01775C  00                 	db	0
   802  01775D  00                 	db	0
   803  01775E  00                 	db	0
   804  01775F  00                 	db	0
   805  017760  00                 	db	0
   806  017761  0000               	dw	0
   807  017763  0000               	dw	0
   808  017765  0000               	dw	0
   809  017767  0000               	dw	0
   810  017769  0000               	dw	0
   811  01776B  0000               	dw	0
   812  01776D  00                 	db	0
   813  01776E  00                 	db	0
   814  01776F  00                 	db	0
   815  017770  00                 	db	0
   816  017771  00                 	db	0
   817  017772  00                 	db	0
   818  017773  00                 	db	0
   819  017774  00                 	db	0
   820  017775  00                 	db	0
   821  017776  00                 	db	0
   822  017777  0000               	dw	0
   823  017779  0000               	dw	0
   824  01777B  2D                 	db	45
   825  01777C  00                 	db	0
   826  01777D  00                 	db	0
   827  01777E  0000               	dw	0
   828  017780  0000               	dw	0
   829  017782  0000               	dw	0
   830  017784  0000               	dw	0
   831  017786  0000               	dw	0
   832  017788  0000               	dw	0
   833  01778A  0000               	dw	0
   834  01778C  0000               	dw	0
   835                           
   836                           	psect	mediumconst
   837  00FDB0                     __pmediumconst:
   838                           	opt callstack 0
   839  00FDB0  00                 	db	0
   840  00FDB1                     _T:
   841                           	opt callstack 0
   842  00FDB1  63                 	db	99
   843  00FDB2  6F                 	db	111
   844  00FDB3  6D                 	db	109
   845  00FDB4  6D                 	db	109
   846  00FDB5  61                 	db	97
   847  00FDB6  6E                 	db	110
   848  00FDB7  64                 	db	100
   849  00FDB8  73                 	db	115
   850  00FDB9  20                 	db	32
   851  00FDBA  31                 	db	49
   852  00FDBB  00                 	db	0
   853  00FDBC  00                 	db	0
   854  00FDBD  00                 	db	0
   855  00FDBE  00                 	db	0
   856  00FDBF  00                 	db	0
   857  00FDC0  00                 	db	0
   858  00FDC1  00                 	db	0
   859  00FDC2  00                 	db	0
   860  00FDC3  64                 	db	100
   861  00FDC4  69                 	db	105
   862  00FDC5  73                 	db	115
   863  00FDC6  70                 	db	112
   864  00FDC7  6C                 	db	108
   865  00FDC8  61                 	db	97
   866  00FDC9  79                 	db	121
   867  00FDCA  73                 	db	115
   868  00FDCB  20                 	db	32
   869  00FDCC  31                 	db	49
   870  00FDCD  00                 	db	0
   871  00FDCE  00                 	db	0
   872  00FDCF  00                 	db	0
   873  00FDD0  00                 	db	0
   874  00FDD1  00                 	db	0
   875  00FDD2  00                 	db	0
   876  00FDD3  00                 	db	0
   877  00FDD4  00                 	db	0
   878  00FDD5  63                 	db	99
   879  00FDD6  6F                 	db	111
   880  00FDD7  6D                 	db	109
   881  00FDD8  6D                 	db	109
   882  00FDD9  61                 	db	97
   883  00FDDA  6E                 	db	110
   884  00FDDB  64                 	db	100
   885  00FDDC  73                 	db	115
   886  00FDDD  20                 	db	32
   887  00FDDE  32                 	db	50
   888  00FDDF  00                 	db	0
   889  00FDE0  00                 	db	0
   890  00FDE1  00                 	db	0
   891  00FDE2  00                 	db	0
   892  00FDE3  00                 	db	0
   893  00FDE4  00                 	db	0
   894  00FDE5  00                 	db	0
   895  00FDE6  00                 	db	0
   896  00FDE7  64                 	db	100
   897  00FDE8  69                 	db	105
   898  00FDE9  73                 	db	115
   899  00FDEA  70                 	db	112
   900  00FDEB  6C                 	db	108
   901  00FDEC  61                 	db	97
   902  00FDED  79                 	db	121
   903  00FDEE  73                 	db	115
   904  00FDEF  20                 	db	32
   905  00FDF0  32                 	db	50
   906  00FDF1  00                 	db	0
   907  00FDF2  00                 	db	0
   908  00FDF3  00                 	db	0
   909  00FDF4  00                 	db	0
   910  00FDF5  00                 	db	0
   911  00FDF6  00                 	db	0
   912  00FDF7  00                 	db	0
   913  00FDF8  00                 	db	0
   914  00FDF9  63                 	db	99
   915  00FDFA  6F                 	db	111
   916  00FDFB  6D                 	db	109
   917  00FDFC  6D                 	db	109
   918  00FDFD  61                 	db	97
   919  00FDFE  6E                 	db	110
   920  00FDFF  64                 	db	100
   921  00FE00  73                 	db	115
   922  00FE01  20                 	db	32
   923  00FE02  33                 	db	51
   924  00FE03  00                 	db	0
   925  00FE04  00                 	db	0
   926  00FE05  00                 	db	0
   927  00FE06  00                 	db	0
   928  00FE07  00                 	db	0
   929  00FE08  00                 	db	0
   930  00FE09  00                 	db	0
   931  00FE0A  00                 	db	0
   932  00FE0B  64                 	db	100
   933  00FE0C  69                 	db	105
   934  00FE0D  73                 	db	115
   935  00FE0E  70                 	db	112
   936  00FE0F  6C                 	db	108
   937  00FE10  61                 	db	97
   938  00FE11  79                 	db	121
   939  00FE12  73                 	db	115
   940  00FE13  20                 	db	32
   941  00FE14  33                 	db	51
   942  00FE15  00                 	db	0
   943  00FE16  00                 	db	0
   944  00FE17  00                 	db	0
   945  00FE18  00                 	db	0
   946  00FE19  00                 	db	0
   947  00FE1A  00                 	db	0
   948  00FE1B  00                 	db	0
   949  00FE1C  00                 	db	0
   950  00FE1D  63                 	db	99
   951  00FE1E  6F                 	db	111
   952  00FE1F  6D                 	db	109
   953  00FE20  6D                 	db	109
   954  00FE21  61                 	db	97
   955  00FE22  6E                 	db	110
   956  00FE23  64                 	db	100
   957  00FE24  73                 	db	115
   958  00FE25  20                 	db	32
   959  00FE26  34                 	db	52
   960  00FE27  00                 	db	0
   961  00FE28  00                 	db	0
   962  00FE29  00                 	db	0
   963  00FE2A  00                 	db	0
   964  00FE2B  00                 	db	0
   965  00FE2C  00                 	db	0
   966  00FE2D  00                 	db	0
   967  00FE2E  00                 	db	0
   968  00FE2F  64                 	db	100
   969  00FE30  69                 	db	105
   970  00FE31  73                 	db	115
   971  00FE32  70                 	db	112
   972  00FE33  6C                 	db	108
   973  00FE34  61                 	db	97
   974  00FE35  79                 	db	121
   975  00FE36  73                 	db	115
   976  00FE37  20                 	db	32
   977  00FE38  34                 	db	52
   978  00FE39  00                 	db	0
   979  00FE3A  00                 	db	0
   980  00FE3B  00                 	db	0
   981  00FE3C  00                 	db	0
   982  00FE3D  00                 	db	0
   983  00FE3E  00                 	db	0
   984  00FE3F  00                 	db	0
   985  00FE40  00                 	db	0
   986  00FE41                     __end_of_T:
   987                           	opt callstack 0
   988  0000                     _IVTADL	set	14493
   989  0000                     _IVTADH	set	14494
   990  0000                     _IVTADU	set	14495
   991  0000                     _PIR6bits	set	14758
   992  0000                     _PIR4bits	set	14756
   993  0000                     _PIE8bits	set	14744
   994  0000                     _PIR8bits	set	14760
   995  0000                     _SCANPR	set	14839
   996  0000                     _DMA2PR	set	14836
   997  0000                     _DMA1PR	set	14835
   998  0000                     _MAINPR	set	14834
   999  0000                     _ISRPR	set	14833
  1000  0000                     _PIE2bits	set	14738
  1001  0000                     _PIR2bits	set	14754
  1002  0000                     _PIE9bits	set	14745
  1003  0000                     _PIR9bits	set	14761
  1004  0000                     _PIE6bits	set	14742
  1005  0000                     _PIE3bits	set	14739
  1006  0000                     _PMD7	set	14791
  1007  0000                     _PMD6	set	14790
  1008  0000                     _PMD5	set	14789
  1009  0000                     _PMD4	set	14788
  1010  0000                     _PMD3	set	14787
  1011  0000                     _PMD2	set	14786
  1012  0000                     _PMD1	set	14785
  1013  0000                     _PMD0	set	14784
  1014  0000                     _OSCTUNE	set	14814
  1015  0000                     _OSCFRQ	set	14815
  1016  0000                     _OSCEN	set	14813
  1017  0000                     _OSCCON3	set	14811
  1018  0000                     _OSCCON1	set	14809
  1019  0000                     _IPR8bits	set	14728
  1020  0000                     _IPR9bits	set	14729
  1021  0000                     _IPR5bits	set	14725
  1022  0000                     _IPR1bits	set	14721
  1023  0000                     _IPR3bits	set	14723
  1024  0000                     _IPR6bits	set	14726
  1025  0000                     _IPR2bits	set	14722
  1026  0000                     _PIE5bits	set	14741
  1027  0000                     _PIE1bits	set	14737
  1028  0000                     _PIR5bits	set	14757
  1029  0000                     _PIR1bits	set	14753
  1030  0000                     _PLLR	set	118496
  1031  0000                     _SPI1SDIPPS	set	15071
  1032  0000                     _U1RXPPS	set	15077
  1033  0000                     _RC6PPS	set	14870
  1034  0000                     _RC5PPS	set	14869
  1035  0000                     _INT1PPS	set	15041
  1036  0000                     _RD1PPS	set	14873
  1037  0000                     _INT0PPS	set	15040
  1038  0000                     _RC3PPS	set	14867
  1039  0000                     _RB6PPS	set	14862
  1040  0000                     _SPI1SCKPPS	set	15070
  1041  0000                     _U2RXPPS	set	15080
  1042  0000                     _SLRCONF	set	14995
  1043  0000                     _SLRCONE	set	14979
  1044  0000                     _SLRCOND	set	14963
  1045  0000                     _SLRCONC	set	14947
  1046  0000                     _SLRCONB	set	14931
  1047  0000                     _SLRCONA	set	14915
  1048  0000                     _ODCOND	set	14962
  1049  0000                     _ODCONC	set	14946
  1050  0000                     _ODCONB	set	14930
  1051  0000                     _ODCONA	set	14914
  1052  0000                     _ODCONF	set	14994
  1053  0000                     _ODCONE	set	14978
  1054  0000                     _WPUC	set	14945
  1055  0000                     _WPUA	set	14913
  1056  0000                     _WPUB	set	14929
  1057  0000                     _WPUE	set	14977
  1058  0000                     _WPUF	set	14993
  1059  0000                     _WPUD	set	14961
  1060  0000                     _ANSELA	set	14912
  1061  0000                     _ANSELF	set	14992
  1062  0000                     _ANSELE	set	14976
  1063  0000                     _ANSELB	set	14928
  1064  0000                     _ANSELC	set	14944
  1065  0000                     _ANSELD	set	14960
  1066  0000                     _DMA2SSA	set	15321
  1067  0000                     _DMA1SSA	set	15353
  1068  0000                     _DMA2DSZ	set	15310
  1069  0000                     _DMA2SSZ	set	15319
  1070  0000                     _DMA2DSA	set	15312
  1071  0000                     _DMA1DSZ	set	15342
  1072  0000                     _DMA1SSZ	set	15351
  1073  0000                     _DMA1DSA	set	15344
  1074  0000                     _DMA1CON0bits	set	15356
  1075  0000                     _DMA1CON1bits	set	15357
  1076  0000                     _DMA2CON0	set	15324
  1077  0000                     _DMA2AIRQ	set	15326
  1078  0000                     _DMA2SIRQ	set	15327
  1079  0000                     _DMA2CON1	set	15325
  1080  0000                     _DMA1CON0	set	15356
  1081  0000                     _DMA1AIRQ	set	15358
  1082  0000                     _DMA1SIRQ	set	15359
  1083  0000                     _DMA1CON1	set	15357
  1084  0000                     _CLKRCON	set	15589
  1085  0000                     _CLKRCLK	set	15590
  1086  0000                     _SPI1INTFbits	set	15642
  1087  0000                     _SPI1RXB	set	15632
  1088  0000                     _SPI1TXB	set	15633
  1089  0000                     _SPI1TCNTL	set	15634
  1090  0000                     _SPI1CON0	set	15636
  1091  0000                     _SPI1CLK	set	15644
  1092  0000                     _SPI1BAUD	set	15641
  1093  0000                     _SPI1CON2	set	15638
  1094  0000                     _SPI1CON1	set	15637
  1095  0000                     _U2RXB	set	15824
  1096  0000                     _U2TXB	set	15826
  1097  0000                     _U2ERRIE	set	15842
  1098  0000                     _U2ERRIR	set	15841
  1099  0000                     _U2UIR	set	15840
  1100  0000                     _U2FIFO	set	15839
  1101  0000                     _U2BRGH	set	15838
  1102  0000                     _U2BRGL	set	15837
  1103  0000                     _U2CON2	set	15836
  1104  0000                     _U2CON1	set	15835
  1105  0000                     _U2CON0	set	15834
  1106  0000                     _U2P3L	set	15832
  1107  0000                     _U2P2L	set	15830
  1108  0000                     _U2P1L	set	15828
  1109  0000                     _U1RXB	set	15848
  1110  0000                     _U1TXB	set	15850
  1111  0000                     _U1ERRIE	set	15866
  1112  0000                     _U1ERRIR	set	15865
  1113  0000                     _U1UIR	set	15864
  1114  0000                     _U1FIFO	set	15863
  1115  0000                     _U1BRGH	set	15862
  1116  0000                     _U1BRGL	set	15861
  1117  0000                     _U1CON2	set	15860
  1118  0000                     _U1CON1	set	15859
  1119  0000                     _U1CON0	set	15858
  1120  0000                     _U1P3H	set	15857
  1121  0000                     _U1P3L	set	15856
  1122  0000                     _U1P2H	set	15855
  1123  0000                     _U1P2L	set	15854
  1124  0000                     _U1P1H	set	15853
  1125  0000                     _U1P1L	set	15852
  1126  0000                     _FVRCON	set	16065
  1127  0000                     _ADFLTRL	set	16102
  1128  0000                     _ADFLTRH	set	16103
  1129  0000                     _ADCON0bits	set	16120
  1130  0000                     _ADCON0	set	16120
  1131  0000                     _ADCLK	set	16127
  1132  0000                     _ADACT	set	16126
  1133  0000                     _ADREF	set	16125
  1134  0000                     _ADSTAT	set	16124
  1135  0000                     _ADCON3	set	16123
  1136  0000                     _ADCON2	set	16122
  1137  0000                     _ADCON1	set	16121
  1138  0000                     _ADPREH	set	16119
  1139  0000                     _ADPREL	set	16118
  1140  0000                     _ADCAP	set	16117
  1141  0000                     _ADACQH	set	16116
  1142  0000                     _ADACQL	set	16115
  1143  0000                     _ADPCH	set	16113
  1144  0000                     _ADRPT	set	16108
  1145  0000                     _ADACCU	set	16106
  1146  0000                     _ADSTPTH	set	16101
  1147  0000                     _ADSTPTL	set	16100
  1148  0000                     _ADUTHH	set	16097
  1149  0000                     _ADUTHL	set	16096
  1150  0000                     _ADLTHH	set	16095
  1151  0000                     _ADLTHL	set	16094
  1152  0000                     _CCPTMRS1bits	set	16223
  1153  0000                     _PORTFbits	set	16335
  1154  0000                     _LATCbits	set	16316
  1155  0000                     _LATDbits	set	16317
  1156  0000                     _PORTBbits	set	16331
  1157  0000                     _T3CONbits	set	16294
  1158  0000                     _T3CON	set	16294
  1159  0000                     _TMR3L	set	16292
  1160  0000                     _TMR3H	set	16293
  1161  0000                     _T3CLK	set	16297
  1162  0000                     _T3GATE	set	16296
  1163  0000                     _T3GCON	set	16295
  1164  0000                     _T2CON	set	16300
  1165  0000                     _T2TMR	set	16298
  1166  0000                     _T2PR	set	16299
  1167  0000                     _T2RST	set	16303
  1168  0000                     _T2HLT	set	16301
  1169  0000                     _T2CLKCON	set	16302
  1170  0000                     _PWM8DCL	set	16224
  1171  0000                     _PWM8DCH	set	16225
  1172  0000                     _PWM8CON	set	16226
  1173  0000                     _LATEbits	set	16318
  1174  0000                     _T5CONbits	set	16282
  1175  0000                     _T5CON	set	16282
  1176  0000                     _TMR5L	set	16280
  1177  0000                     _TMR5H	set	16281
  1178  0000                     _T5CLK	set	16285
  1179  0000                     _T5GATE	set	16284
  1180  0000                     _T5GCON	set	16283
  1181  0000                     _T6CON	set	16276
  1182  0000                     _T6TMR	set	16274
  1183  0000                     _T6PR	set	16275
  1184  0000                     _T6RST	set	16279
  1185  0000                     _T6HLT	set	16277
  1186  0000                     _T6CLKCON	set	16278
  1187  0000                     _TRISD	set	16325
  1188  0000                     _TRISC	set	16324
  1189  0000                     _TRISB	set	16323
  1190  0000                     _TRISA	set	16322
  1191  0000                     _TRISF	set	16327
  1192  0000                     _TRISE	set	16326
  1193  0000                     _LATC	set	16316
  1194  0000                     _LATB	set	16315
  1195  0000                     _LATF	set	16319
  1196  0000                     _LATA	set	16314
  1197  0000                     _LATD	set	16317
  1198  0000                     _LATE	set	16318
  1199  0000                     _IVTLOCKbits	set	16340
  1200  0000                     _IVTLOCK	set	16340
  1201  0000                     _INTCON0bits	set	16338
  1202  0000                     _GIE	set	130711
  1203  00FE41                     
  1204                           ; BSR set to: 57
  1205  00FE41  20                 	db	32
  1206  00FE42  4D                 	db	77	;'M'
  1207  00FE43  65                 	db	101	;'e'
  1208  00FE44  73                 	db	115	;'s'
  1209  00FE45  67                 	db	103	;'g'
  1210  00FE46  20                 	db	32
  1211  00FE47  25                 	db	37
  1212  00FE48  64                 	db	100	;'d'
  1213  00FE49  20                 	db	32
  1214  00FE4A  53                 	db	83	;'S'
  1215  00FE4B  74                 	db	116	;'t'
  1216  00FE4C  61                 	db	97	;'a'
  1217  00FE4D  63                 	db	99	;'c'
  1218  00FE4E  6B                 	db	107	;'k'
  1219  00FE4F  20                 	db	32
  1220  00FE50  25                 	db	37
  1221  00FE51  64                 	db	100	;'d'
  1222  00FE52  20                 	db	32
  1223  00FE53  20                 	db	32
  1224  00FE54  20                 	db	32
  1225  00FE55  20                 	db	32
  1226  00FE56  20                 	db	32
  1227  00FE57  20                 	db	32
  1228  00FE58  00                 	db	0
  1229  00FE59                     STR_39:
  1230                           
  1231                           ; BSR set to: 57
  1232  00FE59  20                 	db	32
  1233  00FE5A  20                 	db	32
  1234  00FE5B  20                 	db	32
  1235  00FE5C  20                 	db	32
  1236  00FE5D  20                 	db	32
  1237  00FE5E  20                 	db	32
  1238  00FE5F  20                 	db	32
  1239  00FE60  20                 	db	32
  1240  00FE61  20                 	db	32
  1241  00FE62  20                 	db	32
  1242  00FE63  20                 	db	32
  1243  00FE64  20                 	db	32
  1244  00FE65  20                 	db	32
  1245  00FE66  20                 	db	32
  1246  00FE67  20                 	db	32
  1247  00FE68  20                 	db	32
  1248  00FE69  20                 	db	32
  1249  00FE6A  20                 	db	32
  1250  00FE6B  00                 	db	0
  1251  00FE6C                     STR_29:
  1252                           
  1253                           ; BSR set to: 57
  1254  00FE6C  48                 	db	72	;'H'
  1255  00FE6D  45                 	db	69	;'E'
  1256  00FE6E  4C                 	db	76	;'L'
  1257  00FE6F  50                 	db	80	;'P'
  1258  00FE70  20                 	db	32
  1259  00FE71  25                 	db	37
  1260  00FE72  73                 	db	115	;'s'
  1261  00FE73  20                 	db	32
  1262  00FE74  20                 	db	32
  1263  00FE75  20                 	db	32
  1264  00FE76  20                 	db	32
  1265  00FE77  20                 	db	32
  1266  00FE78  20                 	db	32
  1267  00FE79  20                 	db	32
  1268  00FE7A  20                 	db	32
  1269  00FE7B  20                 	db	32
  1270  00FE7C  20                 	db	32
  1271  00FE7D  20                 	db	32
  1272  00FE7E  00                 	db	0
  1273  00FE7F                     
  1274                           ; BSR set to: 57
  1275  00FE7F  44                 	db	68	;'D'
  1276  00FE80  49                 	db	73	;'I'
  1277  00FE81  53                 	db	83	;'S'
  1278  00FE82  50                 	db	80	;'P'
  1279  00FE83  4C                 	db	76	;'L'
  1280  00FE84  41                 	db	65	;'A'
  1281  00FE85  59                 	db	89	;'Y'
  1282  00FE86  20                 	db	32
  1283  00FE87  25                 	db	37
  1284  00FE88  73                 	db	115	;'s'
  1285  00FE89  20                 	db	32
  1286  00FE8A  20                 	db	32
  1287  00FE8B  20                 	db	32
  1288  00FE8C  20                 	db	32
  1289  00FE8D  20                 	db	32
  1290  00FE8E  20                 	db	32
  1291  00FE8F  20                 	db	32
  1292  00FE90  20                 	db	32
  1293  00FE91  00                 	db	0
  1294  00FE92                     STR_20:
  1295                           
  1296                           ; BSR set to: 57
  1297  00FE92  53                 	db	83	;'S'
  1298  00FE93  4F                 	db	79	;'O'
  1299  00FE94  43                 	db	67	;'C'
  1300  00FE95  20                 	db	32
  1301  00FE96  25                 	db	37
  1302  00FE97  64                 	db	100	;'d'
  1303  00FE98  20                 	db	32
  1304  00FE99  52                 	db	82	;'R'
  1305  00FE9A  55                 	db	85	;'U'
  1306  00FE9B  4E                 	db	78	;'N'
  1307  00FE9C  20                 	db	32
  1308  00FE9D  25                 	db	37
  1309  00FE9E  64                 	db	100	;'d'
  1310  00FE9F  20                 	db	32
  1311  00FEA0  20                 	db	32
  1312  00FEA1  20                 	db	32
  1313  00FEA2  20                 	db	32
  1314  00FEA3  20                 	db	32
  1315  00FEA4  00                 	db	0
  1316  00FEA5                     STR_19:
  1317                           
  1318                           ; BSR set to: 57
  1319  00FEA5  42                 	db	66	;'B'
  1320  00FEA6  41                 	db	65	;'A'
  1321  00FEA7  54                 	db	84	;'T'
  1322  00FEA8  20                 	db	32
  1323  00FEA9  41                 	db	65	;'A'
  1324  00FEAA  48                 	db	72	;'H'
  1325  00FEAB  20                 	db	32
  1326  00FEAC  20                 	db	32
  1327  00FEAD  20                 	db	32
  1328  00FEAE  25                 	db	37
  1329  00FEAF  33                 	db	51	;'3'
  1330  00FEB0  2E                 	db	46
  1331  00FEB1  32                 	db	50	;'2'
  1332  00FEB2  66                 	db	102	;'f'
  1333  00FEB3  20                 	db	32
  1334  00FEB4  20                 	db	32
  1335  00FEB5  20                 	db	32
  1336  00FEB6  20                 	db	32
  1337  00FEB7  00                 	db	0
  1338  00FEB8                     STR_12:
  1339                           
  1340                           ; BSR set to: 57
  1341  00FEB8  50                 	db	80	;'P'
  1342  00FEB9  56                 	db	86	;'V'
  1343  00FEBA  20                 	db	32
  1344  00FEBB  20                 	db	32
  1345  00FEBC  20                 	db	32
  1346  00FEBD  50                 	db	80	;'P'
  1347  00FEBE  57                 	db	87	;'W'
  1348  00FEBF  52                 	db	82	;'R'
  1349  00FEC0  20                 	db	32
  1350  00FEC1  25                 	db	37
  1351  00FEC2  33                 	db	51	;'3'
  1352  00FEC3  2E                 	db	46
  1353  00FEC4  32                 	db	50	;'2'
  1354  00FEC5  66                 	db	102	;'f'
  1355  00FEC6  20                 	db	32
  1356  00FEC7  20                 	db	32
  1357  00FEC8  20                 	db	32
  1358  00FEC9  20                 	db	32
  1359  00FECA  00                 	db	0
  1360  00FECB                     STR_18:
  1361                           
  1362                           ; BSR set to: 57
  1363  00FECB  42                 	db	66	;'B'
  1364  00FECC  41                 	db	65	;'A'
  1365  00FECD  54                 	db	84	;'T'
  1366  00FECE  20                 	db	32
  1367  00FECF  20                 	db	32
  1368  00FED0  50                 	db	80	;'P'
  1369  00FED1  57                 	db	87	;'W'
  1370  00FED2  52                 	db	82	;'R'
  1371  00FED3  20                 	db	32
  1372  00FED4  25                 	db	37
  1373  00FED5  33                 	db	51	;'3'
  1374  00FED6  2E                 	db	46
  1375  00FED7  32                 	db	50	;'2'
  1376  00FED8  66                 	db	102	;'f'
  1377  00FED9  20                 	db	32
  1378  00FEDA  20                 	db	32
  1379  00FEDB  20                 	db	32
  1380  00FEDC  20                 	db	32
  1381  00FEDD  00                 	db	0
  1382  00FEDE                     STR_14:
  1383                           
  1384                           ; BSR set to: 57
  1385  00FEDE  49                 	db	73	;'I'
  1386  00FEDF  4E                 	db	78	;'N'
  1387  00FEE0  56                 	db	86	;'V'
  1388  00FEE1  20                 	db	32
  1389  00FEE2  20                 	db	32
  1390  00FEE3  50                 	db	80	;'P'
  1391  00FEE4  57                 	db	87	;'W'
  1392  00FEE5  52                 	db	82	;'R'
  1393  00FEE6  20                 	db	32
  1394  00FEE7  25                 	db	37
  1395  00FEE8  33                 	db	51	;'3'
  1396  00FEE9  2E                 	db	46
  1397  00FEEA  32                 	db	50	;'2'
  1398  00FEEB  66                 	db	102	;'f'
  1399  00FEEC  20                 	db	32
  1400  00FEED  20                 	db	32
  1401  00FEEE  20                 	db	32
  1402  00FEEF  20                 	db	32
  1403  00FEF0  00                 	db	0
  1404  00FEF1                     STR_13:
  1405                           
  1406                           ; BSR set to: 57
  1407  00FEF1  4C                 	db	76	;'L'
  1408  00FEF2  4F                 	db	79	;'O'
  1409  00FEF3  41                 	db	65	;'A'
  1410  00FEF4  44                 	db	68	;'D'
  1411  00FEF5  20                 	db	32
  1412  00FEF6  50                 	db	80	;'P'
  1413  00FEF7  57                 	db	87	;'W'
  1414  00FEF8  52                 	db	82	;'R'
  1415  00FEF9  20                 	db	32
  1416  00FEFA  25                 	db	37
  1417  00FEFB  33                 	db	51	;'3'
  1418  00FEFC  2E                 	db	46
  1419  00FEFD  32                 	db	50	;'2'
  1420  00FEFE  66                 	db	102	;'f'
  1421  00FEFF  20                 	db	32
  1422  00FF00  20                 	db	32
  1423  00FF01  20                 	db	32
  1424  00FF02  20                 	db	32
  1425  00FF03  00                 	db	0
  1426  00FF04                     STR_16:
  1427                           
  1428                           ; BSR set to: 57
  1429  00FF04  42                 	db	66	;'B'
  1430  00FF05  56                 	db	86	;'V'
  1431  00FF06  20                 	db	32
  1432  00FF07  25                 	db	37
  1433  00FF08  32                 	db	50	;'2'
  1434  00FF09  2E                 	db	46
  1435  00FF0A  32                 	db	50	;'2'
  1436  00FF0B  66                 	db	102	;'f'
  1437  00FF0C  20                 	db	32
  1438  00FF0D  42                 	db	66	;'B'
  1439  00FF0E  41                 	db	65	;'A'
  1440  00FF0F  20                 	db	32
  1441  00FF10  25                 	db	37
  1442  00FF11  32                 	db	50	;'2'
  1443  00FF12  2E                 	db	46
  1444  00FF13  32                 	db	50	;'2'
  1445  00FF14  66                 	db	102	;'f'
  1446  00FF15  20                 	db	32
  1447  00FF16  00                 	db	0
  1448  00FF17                     STR_17:
  1449                           
  1450                           ; BSR set to: 57
  1451  00FF17  43                 	db	67	;'C'
  1452  00FF18  56                 	db	86	;'V'
  1453  00FF19  20                 	db	32
  1454  00FF1A  25                 	db	37
  1455  00FF1B  32                 	db	50	;'2'
  1456  00FF1C  2E                 	db	46
  1457  00FF1D  32                 	db	50	;'2'
  1458  00FF1E  66                 	db	102	;'f'
  1459  00FF1F  20                 	db	32
  1460  00FF20  4C                 	db	76	;'L'
  1461  00FF21  41                 	db	65	;'A'
  1462  00FF22  20                 	db	32
  1463  00FF23  25                 	db	37
  1464  00FF24  32                 	db	50	;'2'
  1465  00FF25  2E                 	db	46
  1466  00FF26  32                 	db	50	;'2'
  1467  00FF27  66                 	db	102	;'f'
  1468  00FF28  20                 	db	32
  1469  00FF29  00                 	db	0
  1470  00FF2A                     STR_15:
  1471                           
  1472                           ; BSR set to: 57
  1473  00FF2A  50                 	db	80	;'P'
  1474  00FF2B  56                 	db	86	;'V'
  1475  00FF2C  20                 	db	32
  1476  00FF2D  25                 	db	37
  1477  00FF2E  32                 	db	50	;'2'
  1478  00FF2F  2E                 	db	46
  1479  00FF30  32                 	db	50	;'2'
  1480  00FF31  66                 	db	102	;'f'
  1481  00FF32  20                 	db	32
  1482  00FF33  50                 	db	80	;'P'
  1483  00FF34  41                 	db	65	;'A'
  1484  00FF35  20                 	db	32
  1485  00FF36  25                 	db	37
  1486  00FF37  32                 	db	50	;'2'
  1487  00FF38  2E                 	db	46
  1488  00FF39  32                 	db	50	;'2'
  1489  00FF3A  66                 	db	102	;'f'
  1490  00FF3B  20                 	db	32
  1491  00FF3C  00                 	db	0
  1492  00FF3D                     STR_8:
  1493                           
  1494                           ; BSR set to: 57
  1495  00FF3D  20                 	db	32
  1496  00FF3E  56                 	db	86	;'V'
  1497  00FF3F  54                 	db	84	;'T'
  1498  00FF40  45                 	db	69	;'E'
  1499  00FF41  52                 	db	82	;'R'
  1500  00FF42  4D                 	db	77	;'M'
  1501  00FF43  20                 	db	32
  1502  00FF44  23                 	db	35
  1503  00FF45  32                 	db	50	;'2'
  1504  00FF46  20                 	db	32
  1505  00FF47  20                 	db	32
  1506  00FF48  20                 	db	32
  1507  00FF49  20                 	db	32
  1508  00FF4A  20                 	db	32
  1509  00FF4B  20                 	db	32
  1510  00FF4C  20                 	db	32
  1511  00FF4D  00                 	db	0
  1512  00FF4E                     STR_4:
  1513                           
  1514                           ; BSR set to: 57
  1515  00FF4E  20                 	db	32
  1516  00FF4F  4E                 	db	78	;'N'
  1517  00FF50  53                 	db	83	;'S'
  1518  00FF51  41                 	db	65	;'A'
  1519  00FF52  53                 	db	83	;'S'
  1520  00FF53  50                 	db	80	;'P'
  1521  00FF54  4F                 	db	79	;'O'
  1522  00FF55  4F                 	db	79	;'O'
  1523  00FF56  4B                 	db	75	;'K'
  1524  00FF57  20                 	db	32
  1525  00FF58  20                 	db	32
  1526  00FF59  20                 	db	32
  1527  00FF5A  20                 	db	32
  1528  00FF5B  20                 	db	32
  1529  00FF5C  20                 	db	32
  1530  00FF5D  20                 	db	32
  1531  00FF5E  00                 	db	0
  1532  00FF5F                     STR_1:
  1533                           
  1534                           ; BSR set to: 57
  1535  00FF5F  20                 	db	32
  1536  00FF60  4D                 	db	77	;'M'
  1537  00FF61  42                 	db	66	;'B'
  1538  00FF62  4D                 	db	77	;'M'
  1539  00FF63  43                 	db	67	;'C'
  1540  00FF64  20                 	db	32
  1541  00FF65  53                 	db	83	;'S'
  1542  00FF66  4F                 	db	79	;'O'
  1543  00FF67  4C                 	db	76	;'L'
  1544  00FF68  41                 	db	65	;'A'
  1545  00FF69  52                 	db	82	;'R'
  1546  00FF6A  4D                 	db	77	;'M'
  1547  00FF6B  4F                 	db	79	;'O'
  1548  00FF6C  4E                 	db	78	;'N'
  1549  00FF6D  20                 	db	32
  1550  00FF6E  20                 	db	32
  1551  00FF6F  00                 	db	0
  1552  00FF70                     STR_5:
  1553                           
  1554                           ; BSR set to: 57
  1555  00FF70  20                 	db	32
  1556  00FF71  53                 	db	83	;'S'
  1557  00FF72  45                 	db	69	;'E'
  1558  00FF73  51                 	db	81	;'Q'
  1559  00FF74  55                 	db	85	;'U'
  1560  00FF75  45                 	db	69	;'E'
  1561  00FF76  4E                 	db	78	;'N'
  1562  00FF77  43                 	db	67	;'C'
  1563  00FF78  45                 	db	69	;'E'
  1564  00FF79  20                 	db	32
  1565  00FF7A  54                 	db	84	;'T'
  1566  00FF7B  45                 	db	69	;'E'
  1567  00FF7C  53                 	db	83	;'S'
  1568  00FF7D  54                 	db	84	;'T'
  1569  00FF7E  20                 	db	32
  1570  00FF7F  20                 	db	32
  1571  00FF80  00                 	db	0
  1572  00FF81                     STR_11:
  1573                           
  1574                           ; BSR set to: 57
  1575  00FF81  25                 	db	37
  1576  00FF82  64                 	db	100	;'d'
  1577  00FF83  20                 	db	32
  1578  00FF84  25                 	db	37
  1579  00FF85  32                 	db	50	;'2'
  1580  00FF86  2E                 	db	46
  1581  00FF87  34                 	db	52	;'4'
  1582  00FF88  66                 	db	102	;'f'
  1583  00FF89  2C                 	db	44
  1584  00FF8A  20                 	db	32
  1585  00FF8B  25                 	db	37
  1586  00FF8C  64                 	db	100	;'d'
  1587  00FF8D  20                 	db	32
  1588  00FF8E  20                 	db	32
  1589  00FF8F  20                 	db	32
  1590  00FF90  23                 	db	35
  1591  00FF91  00                 	db	0
  1592  00FF92                     STR_9:
  1593                           
  1594                           ; BSR set to: 57
  1595  00FF92  25                 	db	37
  1596  00FF93  64                 	db	100	;'d'
  1597  00FF94  20                 	db	32
  1598  00FF95  25                 	db	37
  1599  00FF96  32                 	db	50	;'2'
  1600  00FF97  2E                 	db	46
  1601  00FF98  34                 	db	52	;'4'
  1602  00FF99  66                 	db	102	;'f'
  1603  00FF9A  20                 	db	32
  1604  00FF9B  20                 	db	32
  1605  00FF9C  20                 	db	32
  1606  00FF9D  25                 	db	37
  1607  00FF9E  64                 	db	100	;'d'
  1608  00FF9F  20                 	db	32
  1609  00FFA0  20                 	db	32
  1610  00FFA1  00                 	db	0
  1611  00FFA2                     STR_33:
  1612                           
  1613                           ; BSR set to: 57
  1614  00FFA2  76                 	db	118	;'v'
  1615  00FFA3  74                 	db	116	;'t'
  1616  00FFA4  65                 	db	101	;'e'
  1617  00FFA5  72                 	db	114	;'r'
  1618  00FFA6  6D                 	db	109	;'m'
  1619  00FFA7  20                 	db	32
  1620  00FFA8  25                 	db	37
  1621  00FFA9  78                 	db	120	;'x'
  1622  00FFAA  3A                 	db	58	;':'
  1623  00FFAB  25                 	db	37
  1624  00FFAC  78                 	db	120	;'x'
  1625  00FFAD  20                 	db	32
  1626  00FFAE  20                 	db	32
  1627  00FFAF  20                 	db	32
  1628  00FFB0  00                 	db	0
  1629  00FFB1                     STR_2:
  1630                           
  1631                           ; BSR set to: 57
  1632  00FFB1  20                 	db	32
  1633  00FFB2  56                 	db	86	;'V'
  1634  00FFB3  65                 	db	101	;'e'
  1635  00FFB4  72                 	db	114	;'r'
  1636  00FFB5  73                 	db	115	;'s'
  1637  00FFB6  69                 	db	105	;'i'
  1638  00FFB7  6F                 	db	111	;'o'
  1639  00FFB8  6E                 	db	110	;'n'
  1640  00FFB9  20                 	db	32
  1641  00FFBA  25                 	db	37
  1642  00FFBB  73                 	db	115	;'s'
  1643  00FFBC  20                 	db	32
  1644  00FFBD  20                 	db	32
  1645  00FFBE  20                 	db	32
  1646  00FFBF  00                 	db	0
  1647  00FFC0                     STR_27:
  1648                           
  1649                           ; BSR set to: 57
  1650  00FFC0  44                 	db	68	;'D'
  1651  00FFC1  65                 	db	101	;'e'
  1652  00FFC2  63                 	db	99	;'c'
  1653  00FFC3  20                 	db	32
  1654  00FFC4  20                 	db	32
  1655  00FFC5  34                 	db	52	;'4'
  1656  00FFC6  20                 	db	32
  1657  00FFC7  32                 	db	50	;'2'
  1658  00FFC8  30                 	db	48	;'0'
  1659  00FFC9  31                 	db	49	;'1'
  1660  00FFCA  39                 	db	57	;'9'
  1661  00FFCB  00                 	db	0
  1662  00FFCC                     STR_31:
  1663                           
  1664                           ; BSR set to: 57
  1665  00FFCC  25                 	db	37
  1666  00FFCD  73                 	db	115	;'s'
  1667  00FFCE  20                 	db	32
  1668  00FFCF  20                 	db	32
  1669  00FFD0  20                 	db	32
  1670  00FFD1  20                 	db	32
  1671  00FFD2  20                 	db	32
  1672  00FFD3  20                 	db	32
  1673  00FFD4  20                 	db	32
  1674  00FFD5  00                 	db	0
  1675  00FFD6                     STR_28:
  1676                           
  1677                           ; BSR set to: 57
  1678  00FFD6  31                 	db	49	;'1'
  1679  00FFD7  39                 	db	57	;'9'
  1680  00FFD8  3A                 	db	58	;':'
  1681  00FFD9  32                 	db	50	;'2'
  1682  00FFDA  32                 	db	50	;'2'
  1683  00FFDB  3A                 	db	58	;':'
  1684  00FFDC  31                 	db	49	;'1'
  1685  00FFDD  33                 	db	51	;'3'
  1686  00FFDE  00                 	db	0
  1687  00FFDF                     STR_3:
  1688                           
  1689                           ; BSR set to: 57
  1690  00FFDF  30                 	db	48	;'0'
  1691  00FFE0  2E                 	db	46
  1692  00FFE1  39                 	db	57	;'9'
  1693  00FFE2  39                 	db	57	;'9'
  1694  00FFE3  37                 	db	55	;'7'
  1695  00FFE4  00                 	db	0
  1696  00FFE5                     STR_46:
  1697                           
  1698                           ; BSR set to: 57
  1699  00FFE5  49                 	db	73	;'I'
  1700  00FFE6  4E                 	db	78	;'N'
  1701  00FFE7  46                 	db	70	;'F'
  1702  00FFE8  00                 	db	0
  1703  00FFE9                     STR_50:
  1704                           
  1705                           ; BSR set to: 57
  1706  00FFE9  4E                 	db	78	;'N'
  1707  00FFEA  41                 	db	65	;'A'
  1708  00FFEB  4E                 	db	78	;'N'
  1709  00FFEC  00                 	db	0
  1710  00FFED                     STR_47:
  1711                           
  1712                           ; BSR set to: 57
  1713  00FFED  69                 	db	105	;'i'
  1714  00FFEE  6E                 	db	110	;'n'
  1715  00FFEF  66                 	db	102	;'f'
  1716  00FFF0  00                 	db	0
  1717  00FFF1                     STR_51:
  1718                           
  1719                           ; BSR set to: 57
  1720  00FFF1  6E                 	db	110	;'n'
  1721  00FFF2  61                 	db	97	;'a'
  1722  00FFF3  6E                 	db	110	;'n'
  1723  00FFF4  00                 	db	0
  1724  00FFF5                     STR_54:
  1725                           
  1726                           ; BSR set to: 57
  1727  00FFF5  6C                 	db	108	;'l'
  1728  00FFF6  66                 	db	102	;'f'
  1729  00FFF7  00                 	db	0
  1730  00FFF8                     STR_25:
  1731                           
  1732                           ; BSR set to: 57
  1733  00FFF8  25                 	db	37
  1734  00FFF9  63                 	db	99	;'c'
  1735  00FFFA  00                 	db	0
  1736  00FFFB                     STR_24:
  1737                           
  1738                           ; BSR set to: 57
  1739  00FFFB  25                 	db	37
  1740  00FFFC  73                 	db	115	;'s'
  1741  00FFFD  00                 	db	0
  1742  0000                     
  1743                           ; #config settings
  1744  00FFFE  00                 	db	0	; dummy byte at the end
  1745  0000                     
  1746                           	psect	cinit
  1747  0171B2                     __pcinit:
  1748                           	opt callstack 0
  1749  0171B2                     start_initialization:
  1750                           	opt callstack 0
  1751  0171B2                     __initialization:
  1752                           	opt callstack 0
  1753                           
  1754                           ; Initialize objects allocated to BANK2 (188 bytes)
  1755                           ; load TBLPTR registers with __pidataBANK2
  1756  0171B2  0ED2               	movlw	low __pidataBANK2
  1757  0171B4  6EF6               	movwf	tblptrl,c
  1758  0171B6  0E76               	movlw	high __pidataBANK2
  1759  0171B8  6EF7               	movwf	tblptrh,c
  1760  0171BA  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  1761  0171BC  6EF8               	movwf	tblptru,c
  1762  0171BE  EE00  F200         	lfsr	0,__pdataBANK2
  1763  0171C2  EE20 F0BC          	lfsr	2,188
  1764  0171C6                     copy_data0:
  1765  0171C6  0009               	tblrd		*+
  1766  0171C8  006F FFD7 FFEE     	movff	tablat,postinc0
  1767  0171CE  50DD               	movf	postdec2,w,c
  1768  0171D0  50D9               	movf	fsr2l,w,c
  1769  0171D2  E1F9               	bnz	copy_data0
  1770                           
  1771                           ; Initialize objects allocated to BANK1 (177 bytes)
  1772                           ; load TBLPTR registers with __pidataBANK1
  1773  0171D4  0E46               	movlw	low __pidataBANK1
  1774  0171D6  6EF6               	movwf	tblptrl,c
  1775  0171D8  0E78               	movlw	high __pidataBANK1
  1776  0171DA  6EF7               	movwf	tblptrh,c
  1777  0171DC  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1778  0171DE  6EF8               	movwf	tblptru,c
  1779  0171E0  EE00  F100         	lfsr	0,__pdataBANK1
  1780  0171E4  EE20 F0B1          	lfsr	2,177
  1781  0171E8                     copy_data1:
  1782  0171E8  0009               	tblrd		*+
  1783  0171EA  006F FFD7 FFEE     	movff	tablat,postinc0
  1784  0171F0  50DD               	movf	postdec2,w,c
  1785  0171F2  50D9               	movf	fsr2l,w,c
  1786  0171F4  E1F9               	bnz	copy_data1
  1787                           
  1788                           ; Initialize objects allocated to BANK0 (54 bytes)
  1789                           ; load TBLPTR registers with __pidataBANK0
  1790  0171F6  0E26               	movlw	low __pidataBANK0
  1791  0171F8  6EF6               	movwf	tblptrl,c
  1792  0171FA  0E89               	movlw	high __pidataBANK0
  1793  0171FC  6EF7               	movwf	tblptrh,c
  1794  0171FE  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1795  017200  6EF8               	movwf	tblptru,c
  1796  017202  EE00  F0C3         	lfsr	0,__pdataBANK0
  1797  017206  EE20 F036          	lfsr	2,54
  1798  01720A                     copy_data2:
  1799  01720A  0009               	tblrd		*+
  1800  01720C  006F FFD7 FFEE     	movff	tablat,postinc0
  1801  017212  50DD               	movf	postdec2,w,c
  1802  017214  50D9               	movf	fsr2l,w,c
  1803  017216  E1F9               	bnz	copy_data2
  1804                           
  1805                           ; Clear objects allocated to BIGRAM (290 bytes)
  1806  017218  EE01  F2FF         	lfsr	0,__pbssBIGRAM
  1807  01721C  EE20 F122          	lfsr	2,290
  1808  017220                     clear_0:
  1809  017220  6AEE               	clrf	postinc0,c
  1810  017222  50DD               	movf	postdec2,w,c
  1811  017224  50D9               	movf	fsr2l,w,c
  1812  017226  E1FC               	bnz	clear_0
  1813  017228  50DA               	movf	fsr2h,w,c
  1814  01722A  E1FA               	bnz	clear_0
  1815                           
  1816                           ; Clear objects allocated to BANK6 (255 bytes)
  1817  01722C  EE01  F200         	lfsr	0,__pbssBANK6
  1818  017230  EE20 F0FF          	lfsr	2,255
  1819  017234                     clear_1:
  1820  017234  6AEE               	clrf	postinc0,c
  1821  017236  50DD               	movf	postdec2,w,c
  1822  017238  50D9               	movf	fsr2l,w,c
  1823  01723A  E1FC               	bnz	clear_1
  1824  01723C  50DA               	movf	fsr2h,w,c
  1825  01723E  E1FA               	bnz	clear_1
  1826                           
  1827                           ; Clear objects allocated to BANK5 (255 bytes)
  1828  017240  EE01  F100         	lfsr	0,__pbssBANK5
  1829  017244  EE20 F0FF          	lfsr	2,255
  1830  017248                     clear_2:
  1831  017248  6AEE               	clrf	postinc0,c
  1832  01724A  50DD               	movf	postdec2,w,c
  1833  01724C  50D9               	movf	fsr2l,w,c
  1834  01724E  E1FC               	bnz	clear_2
  1835  017250  50DA               	movf	fsr2h,w,c
  1836  017252  E1FA               	bnz	clear_2
  1837                           
  1838                           ; Clear objects allocated to BANK4 (134 bytes)
  1839  017254  EE01  F000         	lfsr	0,__pbssBANK4
  1840  017258  0E86               	movlw	134
  1841  01725A                     clear_3:
  1842  01725A  6AEE               	clrf	postinc0,c
  1843  01725C  06E8               	decf	wreg,f,c
  1844  01725E  E1FD               	bnz	clear_3
  1845                           
  1846                           ; Clear objects allocated to BANK3 (228 bytes)
  1847  017260  EE00  F300         	lfsr	0,__pbssBANK3
  1848  017264  0EE4               	movlw	228
  1849  017266                     clear_4:
  1850  017266  6AEE               	clrf	postinc0,c
  1851  017268  06E8               	decf	wreg,f,c
  1852  01726A  E1FD               	bnz	clear_4
  1853                           
  1854                           ; Clear objects allocated to BANK2 (64 bytes)
  1855  01726C  EE00  F2BC         	lfsr	0,__pbssBANK2
  1856  017270  0E40               	movlw	64
  1857  017272                     clear_5:
  1858  017272  6AEE               	clrf	postinc0,c
  1859  017274  06E8               	decf	wreg,f,c
  1860  017276  E1FD               	bnz	clear_5
  1861                           
  1862                           ; Clear objects allocated to BANK1 (32 bytes)
  1863  017278  EE00  F1B1         	lfsr	0,__pbssBANK1
  1864  01727C  0E20               	movlw	32
  1865  01727E                     clear_6:
  1866  01727E  6AEE               	clrf	postinc0,c
  1867  017280  06E8               	decf	wreg,f,c
  1868  017282  E1FD               	bnz	clear_6
  1869                           
  1870                           ; Clear objects allocated to BANK0 (99 bytes)
  1871  017284  EE00  F060         	lfsr	0,__pbssBANK0
  1872  017288  0E63               	movlw	99
  1873  01728A                     clear_7:
  1874  01728A  6AEE               	clrf	postinc0,c
  1875  01728C  06E8               	decf	wreg,f,c
  1876  01728E  E1FD               	bnz	clear_7
  1877                           
  1878                           ; Clear objects allocated to COMRAM (36 bytes)
  1879  017290  EE00  F001         	lfsr	0,__pbssCOMRAM
  1880  017294  0E24               	movlw	36
  1881  017296                     clear_8:
  1882  017296  6AEE               	clrf	postinc0,c
  1883  017298  06E8               	decf	wreg,f,c
  1884  01729A  E1FD               	bnz	clear_8
  1885                           
  1886                           ;
  1887                           ; Setup IVTBASE
  1888                           ;
  1889  01729C  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1890  01729E  6ED5               	movwf	213,c
  1891  0172A0  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1892  0172A2  6ED6               	movwf	214,c
  1893  0172A4  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1894  0172A6  6ED7               	movwf	215,c
  1895  0172A8                     end_of_initialization:
  1896                           	opt callstack 0
  1897  0172A8                     __end_of__initialization:
  1898                           	opt callstack 0
  1899  0172A8  0100               	movlb	0
  1900  0172AA  EFC1  F08E         	goto	_main	;jump to C main() function
  1901                           
  1902                           	psect	bssCOMRAM
  1903  000001                     __pbssCOMRAM:
  1904                           	opt callstack 0
  1905  000001                     _UART2_RxInterruptHandler:
  1906                           	opt callstack 0
  1907  000001                     	ds	3
  1908  000004                     _INT1_InterruptHandler:
  1909                           	opt callstack 0
  1910  000004                     	ds	3
  1911  000007                     _INT0_InterruptHandler:
  1912                           	opt callstack 0
  1913  000007                     	ds	3
  1914  00000A                     _width:
  1915                           	opt callstack 0
  1916  00000A                     	ds	2
  1917  00000C                     _prec:
  1918                           	opt callstack 0
  1919  00000C                     	ds	2
  1920  00000E                     _flags:
  1921                           	opt callstack 0
  1922  00000E                     	ds	2
  1923  000010                     TMR3_ISR@CountCallBack:
  1924                           	opt callstack 0
  1925  000010                     	ds	2
  1926  000012                     _timer3ReloadVal:
  1927                           	opt callstack 0
  1928  000012                     	ds	2
  1929  000014                     TMR5_ISR@CountCallBack:
  1930                           	opt callstack 0
  1931  000014                     	ds	2
  1932  000016                     _timer5ReloadVal:
  1933                           	opt callstack 0
  1934  000016                     	ds	2
  1935  000018                     _mode_sw:
  1936                           	opt callstack 0
  1937  000018                     	ds	1
  1938  000019                     _uart2RxCount:
  1939                           	opt callstack 0
  1940  000019                     	ds	1
  1941  00001A                     _uart2RxTail:
  1942                           	opt callstack 0
  1943  00001A                     	ds	1
  1944  00001B                     _uart2RxHead:
  1945                           	opt callstack 0
  1946  00001B                     	ds	1
  1947  00001C                     _uart2TxBufferRemaining:
  1948                           	opt callstack 0
  1949  00001C                     	ds	1
  1950  00001D                     _uart2TxTail:
  1951                           	opt callstack 0
  1952  00001D                     	ds	1
  1953  00001E                     _uart2TxHead:
  1954                           	opt callstack 0
  1955  00001E                     	ds	1
  1956  00001F                     _uart1RxCount:
  1957                           	opt callstack 0
  1958  00001F                     	ds	1
  1959  000020                     _uart1RxTail:
  1960                           	opt callstack 0
  1961  000020                     	ds	1
  1962  000021                     _uart1RxHead:
  1963                           	opt callstack 0
  1964  000021                     	ds	1
  1965  000022                     _uart1TxBufferRemaining:
  1966                           	opt callstack 0
  1967  000022                     	ds	1
  1968  000023                     _uart1TxTail:
  1969                           	opt callstack 0
  1970  000023                     	ds	1
  1971  000024                     _uart1TxHead:
  1972                           	opt callstack 0
  1973  000024                     	ds	1
  1974                           
  1975                           	psect	bssBANK0
  1976  000060                     __pbssBANK0:
  1977                           	opt callstack 0
  1978  000060                     _S:
  1979                           	opt callstack 0
  1980  000060                     	ds	41
  1981  000089                     _spi_link:
  1982                           	opt callstack 0
  1983  000089                     	ds	12
  1984  000095                     floorf@F524:
  1985                           	opt callstack 0
  1986  000095                     	ds	4
  1987  000099                     ___fpclassifyf@F463:
  1988                           	opt callstack 0
  1989  000099                     	ds	4
  1990  00009D                     _utctime:
  1991                           	opt callstack 0
  1992  00009D                     	ds	4
  1993  0000A1                     wdtdelay@dcount:
  1994                           	opt callstack 0
  1995  0000A1                     	ds	4
  1996  0000A5                     _P:
  1997                           	opt callstack 0
  1998  0000A5                     	ds	4
  1999  0000A9                     _TMR3_InterruptHandler:
  2000                           	opt callstack 0
  2001  0000A9                     	ds	3
  2002  0000AC                     _TMR5_InterruptHandler:
  2003                           	opt callstack 0
  2004  0000AC                     	ds	3
  2005  0000AF                     _TMR6_InterruptHandler:
  2006                           	opt callstack 0
  2007  0000AF                     	ds	3
  2008  0000B2                     _ADCC_ADTI_InterruptHandler:
  2009                           	opt callstack 0
  2010  0000B2                     	ds	3
  2011  0000B5                     _ADCC_ADI_InterruptHandler:
  2012                           	opt callstack 0
  2013  0000B5                     	ds	3
  2014  0000B8                     _UART1_TxInterruptHandler:
  2015                           	opt callstack 0
  2016  0000B8                     	ds	3
  2017  0000BB                     _UART1_RxInterruptHandler:
  2018                           	opt callstack 0
  2019  0000BB                     	ds	3
  2020  0000BE                     _UART2_TxInterruptHandler:
  2021                           	opt callstack 0
  2022  0000BE                     	ds	3
  2023  0000C1                     _nout:
  2024                           	opt callstack 0
  2025  0000C1                     	ds	2
  2026                           
  2027                           	psect	dataBANK0
  2028  0000C3                     __pdataBANK0:
  2029                           	opt callstack 0
  2030  0000C3                     _R:
  2031                           	opt callstack 0
  2032  0000C3                     	ds	40
  2033  0000EB                     stoa@F1166:
  2034                           	opt callstack 0
  2035  0000EB                     	ds	7
  2036  0000F2                     _H:
  2037                           	opt callstack 0
  2038  0000F2                     	ds	7
  2039                           
  2040                           	psect	bssBANK1
  2041  0001B1                     __pbssBANK1:
  2042                           	opt callstack 0
  2043  0001B1                     _tickCount:
  2044                           	opt callstack 0
  2045  0001B1                     	ds	24
  2046  0001C9                     _seed:
  2047                           	opt callstack 0
  2048  0001C9                     	ds	8
  2049                           
  2050                           	psect	dataBANK1
  2051  000100                     __pdataBANK1:
  2052                           	opt callstack 0
  2053  000100                     _C:
  2054                           	opt callstack 0
  2055  000100                     	ds	161
  2056  0001A1                     _port_data:
  2057                           	opt callstack 0
  2058  0001A1                     	ds	16
  2059                           
  2060                           	psect	bssBANK2
  2061  0002BC                     __pbssBANK2:
  2062                           	opt callstack 0
  2063  0002BC                     _uart1TxBuffer:
  2064                           	opt callstack 0
  2065  0002BC                     	ds	64
  2066                           
  2067                           	psect	dataBANK2
  2068  000200                     __pdataBANK2:
  2069                           	opt callstack 0
  2070  000200                     _V:
  2071                           	opt callstack 0
  2072  000200                     	ds	188
  2073                           
  2074                           	psect	bssBANK3
  2075  000300                     __pbssBANK3:
  2076                           	opt callstack 0
  2077  000300                     lp_filter@smooth:
  2078                           	opt callstack 0
  2079  000300                     	ds	84
  2080  000354                     _uart2TxBuffer:
  2081                           	opt callstack 0
  2082  000354                     	ds	64
  2083  000394                     _dbuf:
  2084                           	opt callstack 0
  2085  000394                     	ds	80
  2086                           
  2087                           	psect	bssBANK4
  2088  000400                     __pbssBANK4:
  2089                           	opt callstack 0
  2090  000400                     _ring_buf2:
  2091                           	opt callstack 0
  2092  000400                     	ds	67
  2093  000443                     _ring_buf1:
  2094                           	opt callstack 0
  2095  000443                     	ds	67
  2096                           
  2097                           	psect	bssBANK5
  2098  000500                     __pbssBANK5:
  2099                           	opt callstack 0
  2100  000500                     _uart1RxBuffer:
  2101                           	opt callstack 0
  2102  000500                     	ds	255
  2103                           
  2104                           	psect	bssBANK6
  2105  000600                     __pbssBANK6:
  2106                           	opt callstack 0
  2107  000600                     _uart2RxBuffer:
  2108                           	opt callstack 0
  2109  000600                     	ds	255
  2110                           
  2111                           	psect	bssBIGRAM
  2112  0006FF                     __pbssBIGRAM:
  2113                           	opt callstack 0
  2114  0006FF                     _D:
  2115                           	opt callstack 0
  2116  0006FF                     	ds	290
  2117                           
  2118                           	psect	cstackBANK1
  2119  0001D1                     __pcstackBANK1:
  2120                           	opt callstack 0
  2121  0001D1                     ??_TMR3_ISR:
  2122                           
  2123                           ; 1 bytes @ 0x0
  2124  0001D1                     	ds	13
  2125                           
  2126                           	psect	cstackCOMRAM
  2127  000045                     __pcstackCOMRAM:
  2128                           	opt callstack 0
  2129  000045                     ??_ADCC_ThresholdISR:
  2130  000045                     
  2131                           ; 1 bytes @ 0x0
  2132  000045                     	ds	5
  2133  00004A                     ??_TMR6_ISR:
  2134                           
  2135                           ; 1 bytes @ 0x5
  2136  00004A                     	ds	1
  2137  00004B                     ??_INT1_ISR:
  2138  00004B                     
  2139                           ; 1 bytes @ 0x6
  2140  00004B                     	ds	4
  2141  00004F                     ??_TMR5_ISR:
  2142                           
  2143                           ; 1 bytes @ 0xA
  2144  00004F                     	ds	4
  2145                           
  2146 ;;
  2147 ;;Main: autosize = 5, tempsize = 0, incstack = 0, save=0
  2148 ;;
  2149 ;; *************** function _main *****************
  2150 ;; Defined at:
  2151 ;;		line 171 in file "main.c"
  2152 ;; Parameters:    Size  Location     Type
  2153 ;;		None
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  k               1  [STACK] unsigned char 
  2156 ;;  j               1  [STACK] unsigned char 
  2157 ;;  i               1  [STACK] unsigned char 
  2158 ;;  inp_index       1  [STACK] unsigned char 
  2159 ;;  mode            1  [STACK] enum E17022
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1  [STACK] void 
  2162 ;; Registers used:
  2163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2173 ;;Total ram usage:        0 bytes
  2174 ;; Hardware stack levels required when called:   20
  2175 ;; This function calls:
  2176 ;;		_SYSTEM_Initialize
  2177 ;;		_StartTimer
  2178 ;;		_TimerDone
  2179 ;;		_WaitMs
  2180 ;;		_calc_model_data
  2181 ;;		_check_adc_scan
  2182 ;;		_check_enter_button
  2183 ;;		_check_help
  2184 ;;		_clear_adc_scan
  2185 ;;		_clear_hid_pflags
  2186 ;;		_convert_adc_data
  2187 ;;		_eaDogM_WriteCommand
  2188 ;;		_get_raw_result
  2189 ;;		_get_switch
  2190 ;;		_get_vterm_ptr
  2191 ;;		_hid_display
  2192 ;;		_init_bsoc
  2193 ;;		_init_display
  2194 ;;		_lp_filter
  2195 ;;		_mode_lamp_dim
  2196 ;;		_set_display_info
  2197 ;;		_set_vterm
  2198 ;;		_sprintf
  2199 ;;		_srand
  2200 ;;		_start_adc_scan
  2201 ;;		_start_switch_handler
  2202 ;;		_static_soc
  2203 ;;		_update_lcd
  2204 ;; This function is called by:
  2205 ;;		Startup code after reset
  2206 ;; This function uses a reentrant model
  2207 ;;
  2208                           
  2209                           	psect	text0
  2210  011D82                     __ptext0:
  2211                           	opt callstack 0
  2212  011D82                     _main:
  2213                           	opt callstack 0
  2214                           
  2215                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2216  011D82  0E05               	movlw	5
  2217  011D84  26E1               	addwf	fsr1l,f,c
  2218  011D86  0E00               	movlw	0
  2219  011D88  22E2               	addwfc	fsr1h,f,c
  2220                           
  2221                           ;main.c: 173:  UI_STATES mode;;main.c: 174:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC;
  2222                           ;stkvar	_inp_index @ sp[(-5)+3]
  2223                           
  2224                           ;incstack = 0
  2225  011D8A  0EFE               	movlw	-2
  2226  011D8C  6AE3               	clrf	plusw1,c
  2227                           
  2228                           ;stkvar	_i @ sp[(-5)+2]
  2229  011D8E  0EFD               	movlw	-3
  2230  011D90  6AE3               	clrf	plusw1,c
  2231                           
  2232                           ;stkvar	_j @ sp[(-5)+1]
  2233  011D92  0EFC               	movlw	-4
  2234  011D94  6AE3               	clrf	plusw1,c
  2235  011D96  2AE3               	incf	plusw1,f,c
  2236                           
  2237                           ;stkvar	_k @ sp[(-5)+0]
  2238  011D98  0EFB               	movlw	-5
  2239  011D9A  6AE3               	clrf	plusw1,c
  2240  011D9C  82E3               	bsf	plusw1,1,c
  2241                           
  2242                           ;main.c: 177:  SYSTEM_Initialize();
  2243  011D9E  ECC0  F0C2         	call	_SYSTEM_Initialize	;wreg free
  2244                           
  2245                           ; BSR set to: 60
  2246                           ;main.c: 180:  (INTCON0bits.GIEH = 1);
  2247  011DA2  8ED2               	bsf	210,7,c	;volatile
  2248                           
  2249                           ; BSR set to: 60
  2250                           ;main.c: 183:  (INTCON0bits.GIEL = 1);
  2251  011DA4  8CD2               	bsf	210,6,c	;volatile
  2252                           
  2253                           ; BSR set to: 60
  2254                           ;main.c: 185:  V.ui_state = UI_STATE_INIT;
  2255  011DA6  0102               	movlb	2	; () banked
  2256  011DA8  6B00               	clrf	_V& (0+255),b	;volatile
  2257                           
  2258                           ; BSR set to: 2
  2259                           ;main.c: 190:  WaitMs(300);
  2260  011DAA  0E2C               	movlw	44
  2261  011DAC  6EE6               	movwf	postinc1,c
  2262  011DAE  0E01               	movlw	1
  2263  011DB0  6EE6               	movwf	postinc1,c
  2264  011DB2  ECAE  F0C4         	call	_WaitMs	;wreg free
  2265                           
  2266                           ;main.c: 191:  if (PORTBbits.RB0) {
  2267  011DB6  A0CB               	btfss	203,0,c	;volatile
  2268  011DB8  D004               	goto	l11031
  2269                           
  2270                           ;main.c: 192:   mode = UI_STATE_HOST;
  2271                           ;stkvar	_mode @ sp[(-5)+4]
  2272  011DBA  0EFF               	movlw	-1
  2273  011DBC  6AE3               	clrf	plusw1,c
  2274  011DBE  2AE3               	incf	plusw1,f,c
  2275                           
  2276                           ;main.c: 193:  } else {
  2277  011DC0  D004               	goto	l11033
  2278  011DC2                     l11031:
  2279                           
  2280                           ;main.c: 194:   mode = UI_STATE_LOG;
  2281                           ;stkvar	_mode @ sp[(-5)+4]
  2282  011DC2  0EFF               	movlw	-1
  2283  011DC4  6AE3               	clrf	plusw1,c
  2284  011DC6  80E3               	bsf	plusw1,0,c
  2285  011DC8  82E3               	bsf	plusw1,1,c	;indir
  2286  011DCA                     l11033:
  2287                           
  2288                           ;main.c: 197:  if (mode == UI_STATE_HOST) {
  2289                           ;stkvar	_mode @ sp[(-5)+4]
  2290  011DCA  0EFF               	movlw	-1
  2291  011DCC  04E3               	decf	plusw1,w,c
  2292  011DCE  A4D8               	btfss	status,2,c
  2293  011DD0  D007               	goto	l1338
  2294                           
  2295                           ;main.c: 198:   do { LATDbits.LATD0 = 1; } while(0);
  2296  011DD2  80BD               	bsf	189,0,c	;volatile
  2297                           
  2298                           ;main.c: 199:   V.mode_pwm = 70;
  2299  011DD4  0E00               	movlw	0
  2300  011DD6  0102               	movlb	2	; () banked
  2301  011DD8  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  2302  011DDA  0E46               	movlw	70
  2303  011DDC  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  2304                           
  2305                           ;main.c: 200:  } else {
  2306  011DDE  D004               	goto	l11037
  2307  011DE0                     l1338:
  2308  011DE0  90BD               	bcf	189,0,c	;volatile
  2309                           
  2310                           ;main.c: 202:   V.mode_pwm = 0;
  2311  011DE2  0102               	movlb	2	; () banked
  2312  011DE4  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  2313  011DE6  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  2314  011DE8                     l11037:
  2315                           
  2316                           ; BSR set to: 2
  2317                           ;main.c: 204:  mode_lamp_dim(V.mode_pwm);
  2318  011DE8  0060  FA57  FFE6   	movff	_V+149,postinc1
  2319  011DEE  0060  FA5B  FFE6   	movff	_V+150,postinc1
  2320  011DF4  EC89  F0C8         	call	_mode_lamp_dim	;wreg free
  2321  011DF8  D0D4               	goto	l11085
  2322  011DFA                     l11039:
  2323                           
  2324                           ; BSR set to: 2
  2325                           ;main.c: 215:    init_display();
  2326  011DFA  EC57  F0B9         	call	_init_display	;wreg free
  2327                           
  2328                           ; BSR set to: 61
  2329                           ;main.c: 216:    eaDogM_WriteCommand(0b00001100);
  2330  011DFE  0E0C               	movlw	12
  2331  011E00  6EE6               	movwf	postinc1,c
  2332  011E02  ECE6  F0C8         	call	_eaDogM_WriteCommand	;wreg free
  2333                           
  2334                           ; BSR set to: 0
  2335                           ;main.c: 218:    V.ui_state = mode;
  2336                           ;stkvar	_mode @ sp[(-5)+4]
  2337  011E06  0EFF               	movlw	-1
  2338  011E08  006F FF8C  F200    	movff	plusw1,_V	;volatile
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;main.c: 219:    srand(1957);
  2342  011E0E  0EA5               	movlw	165
  2343  011E10  6EE6               	movwf	postinc1,c
  2344  011E12  0E07               	movlw	7
  2345  011E14  6EE6               	movwf	postinc1,c
  2346  011E16  ECFE  F0C4         	call	_srand	;wreg free
  2347                           
  2348                           ; BSR set to: 1
  2349                           ;main.c: 220:    set_vterm(0);
  2350  011E1A  0E00               	movlw	0
  2351  011E1C  6EE6               	movwf	postinc1,c
  2352  011E1E  EC25  F0C8         	call	_set_vterm	;wreg free
  2353                           
  2354                           ;main.c: 221:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  2355  011E22  0E5F               	movlw	low STR_1
  2356  011E24  6EE6               	movwf	postinc1,c
  2357  011E26  0EFF               	movlw	high STR_1
  2358  011E28  6EE6               	movwf	postinc1,c
  2359  011E2A  0E00               	movlw	0
  2360  011E2C  6EE6               	movwf	postinc1,c
  2361  011E2E  0E00               	movlw	0
  2362  011E30  6EE6               	movwf	postinc1,c
  2363  011E32  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  2364  011E36  0060  F097  FFE6   	movff	btemp,postinc1
  2365  011E3C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2366  011E42  0E04               	movlw	4
  2367  011E44  6EE6               	movwf	postinc1,c
  2368  011E46  ECD3  F0B7         	call	_sprintf	;wreg free
  2369                           
  2370                           ; BSR set to: 0
  2371                           ;main.c: 222:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.997");
  2372  011E4A  0EDF               	movlw	low STR_3
  2373  011E4C  6EE6               	movwf	postinc1,c
  2374  011E4E  0EFF               	movlw	high STR_3
  2375  011E50  6EE6               	movwf	postinc1,c
  2376  011E52  0EB1               	movlw	low STR_2
  2377  011E54  6EE6               	movwf	postinc1,c
  2378  011E56  0EFF               	movlw	high STR_2
  2379  011E58  6EE6               	movwf	postinc1,c
  2380  011E5A  0E00               	movlw	0
  2381  011E5C  6EE6               	movwf	postinc1,c
  2382  011E5E  0E01               	movlw	1
  2383  011E60  6EE6               	movwf	postinc1,c
  2384  011E62  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  2385  011E66  0060  F097  FFE6   	movff	btemp,postinc1
  2386  011E6C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2387  011E72  0E06               	movlw	6
  2388  011E74  6EE6               	movwf	postinc1,c
  2389  011E76  ECD3  F0B7         	call	_sprintf	;wreg free
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;main.c: 223:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  2393  011E7A  0E4E               	movlw	low STR_4
  2394  011E7C  6EE6               	movwf	postinc1,c
  2395  011E7E  0EFF               	movlw	high STR_4
  2396  011E80  6EE6               	movwf	postinc1,c
  2397  011E82  0E00               	movlw	0
  2398  011E84  6EE6               	movwf	postinc1,c
  2399  011E86  0E02               	movlw	2
  2400  011E88  6EE6               	movwf	postinc1,c
  2401  011E8A  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  2402  011E8E  0060  F097  FFE6   	movff	btemp,postinc1
  2403  011E94  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2404  011E9A  0E04               	movlw	4
  2405  011E9C  6EE6               	movwf	postinc1,c
  2406  011E9E  ECD3  F0B7         	call	_sprintf	;wreg free
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;main.c: 224:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  2410  011EA2  0E70               	movlw	low STR_5
  2411  011EA4  6EE6               	movwf	postinc1,c
  2412  011EA6  0EFF               	movlw	high STR_5
  2413  011EA8  6EE6               	movwf	postinc1,c
  2414  011EAA  0E02               	movlw	2
  2415  011EAC  6EE6               	movwf	postinc1,c
  2416  011EAE  0E00               	movlw	0
  2417  011EB0  6EE6               	movwf	postinc1,c
  2418  011EB2  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  2419  011EB6  0060  F097  FFE6   	movff	btemp,postinc1
  2420  011EBC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2421  011EC2  0E04               	movlw	4
  2422  011EC4  6EE6               	movwf	postinc1,c
  2423  011EC6  ECD3  F0B7         	call	_sprintf	;wreg free
  2424                           
  2425                           ; BSR set to: 0
  2426                           ;main.c: 225:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.997");
  2427  011ECA  0EDF               	movlw	low STR_3
  2428  011ECC  6EE6               	movwf	postinc1,c
  2429  011ECE  0EFF               	movlw	high STR_3
  2430  011ED0  6EE6               	movwf	postinc1,c
  2431  011ED2  0EB1               	movlw	low STR_2
  2432  011ED4  6EE6               	movwf	postinc1,c
  2433  011ED6  0EFF               	movlw	high STR_2
  2434  011ED8  6EE6               	movwf	postinc1,c
  2435  011EDA  0E02               	movlw	2
  2436  011EDC  6EE6               	movwf	postinc1,c
  2437  011EDE  0E01               	movlw	1
  2438  011EE0  6EE6               	movwf	postinc1,c
  2439  011EE2  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  2440  011EE6  0060  F097  FFE6   	movff	btemp,postinc1
  2441  011EEC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2442  011EF2  0E06               	movlw	6
  2443  011EF4  6EE6               	movwf	postinc1,c
  2444  011EF6  ECD3  F0B7         	call	_sprintf	;wreg free
  2445                           
  2446                           ; BSR set to: 0
  2447                           ;main.c: 226:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2448  011EFA  0E3D               	movlw	low STR_8
  2449  011EFC  6EE6               	movwf	postinc1,c
  2450  011EFE  0EFF               	movlw	high STR_8
  2451  011F00  6EE6               	movwf	postinc1,c
  2452  011F02  0E02               	movlw	2
  2453  011F04  6EE6               	movwf	postinc1,c
  2454  011F06  0E02               	movlw	2
  2455  011F08  6EE6               	movwf	postinc1,c
  2456  011F0A  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  2457  011F0E  0060  F097  FFE6   	movff	btemp,postinc1
  2458  011F14  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2459  011F1A  0E04               	movlw	4
  2460  011F1C  6EE6               	movwf	postinc1,c
  2461  011F1E  ECD3  F0B7         	call	_sprintf	;wreg free
  2462                           
  2463                           ; BSR set to: 0
  2464                           ;main.c: 227:    update_lcd(0);
  2465  011F22  0E00               	movlw	0
  2466  011F24  6EE6               	movwf	postinc1,c
  2467  011F26  EC4B  F0B7         	call	_update_lcd	;wreg free
  2468                           
  2469                           ;main.c: 228:    WaitMs(3000);
  2470  011F2A  0EB8               	movlw	184
  2471  011F2C  6EE6               	movwf	postinc1,c
  2472  011F2E  0E0B               	movlw	11
  2473  011F30  6EE6               	movwf	postinc1,c
  2474  011F32  ECAE  F0C4         	call	_WaitMs	;wreg free
  2475                           
  2476                           ;main.c: 229:    StartTimer(TMR_DISPLAY, 250);
  2477  011F36  0EFA               	movlw	250
  2478  011F38  6EE6               	movwf	postinc1,c
  2479  011F3A  0E00               	movlw	0
  2480  011F3C  6EE6               	movwf	postinc1,c
  2481  011F3E  0E0A               	movlw	10
  2482  011F40  6EE6               	movwf	postinc1,c
  2483  011F42  ECD8  F0C3         	call	_StartTimer	;wreg free
  2484                           
  2485                           ;main.c: 230:    StartTimer(TMR_ADC, 200);
  2486  011F46  0EC8               	movlw	200
  2487  011F48  6EE6               	movwf	postinc1,c
  2488  011F4A  0E00               	movlw	0
  2489  011F4C  6EE6               	movwf	postinc1,c
  2490  011F4E  0E01               	movlw	1
  2491  011F50  6EE6               	movwf	postinc1,c
  2492  011F52  ECD8  F0C3         	call	_StartTimer	;wreg free
  2493                           
  2494                           ;main.c: 231:    StartTimer(TMR_INFO, 3000);
  2495  011F56  0EB8               	movlw	184
  2496  011F58  6EE6               	movwf	postinc1,c
  2497  011F5A  0E0B               	movlw	11
  2498  011F5C  6EE6               	movwf	postinc1,c
  2499  011F5E  0E07               	movlw	7
  2500  011F60  6EE6               	movwf	postinc1,c
  2501  011F62  ECD8  F0C3         	call	_StartTimer	;wreg free
  2502                           
  2503                           ;main.c: 232:    StartTimer(TMR_FLIPPER, 1500);
  2504  011F66  0EDC               	movlw	220
  2505  011F68  6EE6               	movwf	postinc1,c
  2506  011F6A  0E05               	movlw	5
  2507  011F6C  6EE6               	movwf	postinc1,c
  2508  011F6E  0E0B               	movlw	11
  2509  011F70  6EE6               	movwf	postinc1,c
  2510  011F72  ECD8  F0C3         	call	_StartTimer	;wreg free
  2511                           
  2512                           ;main.c: 233:    StartTimer(TMR_HELPDIS, 3000);
  2513  011F76  0EB8               	movlw	184
  2514  011F78  6EE6               	movwf	postinc1,c
  2515  011F7A  0E0B               	movlw	11
  2516  011F7C  6EE6               	movwf	postinc1,c
  2517  011F7E  0E09               	movlw	9
  2518  011F80  6EE6               	movwf	postinc1,c
  2519  011F82  ECD8  F0C3         	call	_StartTimer	;wreg free
  2520                           
  2521                           ;main.c: 235:    start_adc_scan();
  2522  011F86  ECCB  F0C0         	call	_start_adc_scan	;wreg free
  2523                           
  2524                           ;main.c: 236:    start_switch_handler();
  2525  011F8A  ECF7  F0C7         	call	_start_switch_handler	;wreg free
  2526                           
  2527                           ; BSR set to: 57
  2528                           ;main.c: 237:    static_soc();
  2529  011F8E  ECE4  F0C4         	call	_static_soc	;wreg free
  2530                           
  2531                           ; BSR set to: 1
  2532                           ;main.c: 238:    init_bsoc();
  2533  011F92  ECD5  F0C8         	call	_init_bsoc	;wreg free
  2534                           
  2535                           ;main.c: 240:    break;
  2536  011F96  D01C               	goto	l11087
  2537  011F98                     l1346:
  2538                           
  2539                           ; BSR set to: 2
  2540                           ;main.c: 246:    P.SYSTEM_STABLE = 1;
  2541  011F98  0100               	movlb	0	; () banked
  2542  011F9A  81A6               	bsf	(_P+1)& (0+255),0,b	;volatile
  2543                           
  2544                           ;main.c: 247:    break;
  2545  011F9C  D019               	goto	l11087
  2546  011F9E                     l1348:
  2547                           
  2548                           ; BSR set to: 2
  2549                           ;main.c: 250:    V.ui_state = UI_STATE_INIT;
  2550  011F9E  6B00               	clrf	_V& (0+255),b	;volatile
  2551                           
  2552                           ;main.c: 251:    break;
  2553  011FA0  D017               	goto	l11087
  2554  011FA2                     l11085:
  2555  011FA2  0102               	movlb	2	; () banked
  2556  011FA4  5100               	movf	_V& (0+255),w,b	;volatile
  2557  011FA6  6E2F               	movwf	(btemp+10)^0,c
  2558  011FA8  6A30               	clrf	(btemp+11)^0,c
  2559                           
  2560                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2561                           ; Switch size 1, requested type "simple"
  2562                           ; Number of cases is 1, Range of values is 0 to 0
  2563                           ; switch strategies available:
  2564                           ; Name         Instructions Cycles
  2565                           ; simple_byte            4     3 (average)
  2566                           ;	Chosen strategy is simple_byte
  2567  011FAA  5030               	movf	(btemp+11)^0,w,c
  2568  011FAC  0A00               	xorlw	0	; case 0
  2569  011FAE  A4D8               	btfss	status,2,c
  2570  011FB0  D7F6               	goto	l1348
  2571                           
  2572                           ; BSR set to: 2
  2573                           ; Switch size 1, requested type "simple"
  2574                           ; Number of cases is 5, Range of values is 0 to 5
  2575                           ; switch strategies available:
  2576                           ; Name         Instructions Cycles
  2577                           ; simple_byte           16     9 (average)
  2578                           ;	Chosen strategy is simple_byte
  2579  011FB2  502F               	movf	(btemp+10)^0,w,c
  2580  011FB4  0A00               	xorlw	0	; case 0
  2581  011FB6  B4D8               	btfsc	status,2,c
  2582  011FB8  D720               	goto	l11039
  2583  011FBA  0A01               	xorlw	1	; case 1
  2584  011FBC  B4D8               	btfsc	status,2,c
  2585  011FBE  D008               	goto	l11087
  2586  011FC0  0A02               	xorlw	2	; case 3
  2587  011FC2  B4D8               	btfsc	status,2,c
  2588  011FC4  D005               	goto	l11087
  2589  011FC6  0A07               	xorlw	7	; case 4
  2590  011FC8  B4D8               	btfsc	status,2,c
  2591  011FCA  D7E6               	goto	l1346
  2592  011FCC  0A01               	xorlw	1	; case 5
  2593  011FCE  D7E7               	goto	l1348
  2594  011FD0                     l11087:
  2595                           
  2596                           ;main.c: 254:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2597  011FD0  0E01               	movlw	1
  2598  011FD2  6EE6               	movwf	postinc1,c
  2599  011FD4  EC39  F0C6         	call	_TimerDone	;wreg free
  2600  011FD8  5025               	movf	btemp^0,w,c
  2601  011FDA  B4D8               	btfsc	status,2,c
  2602  011FDC  D013               	goto	l11099
  2603  011FDE  EC25  F0C9         	call	_check_adc_scan	;wreg free
  2604  011FE2  5025               	movf	btemp^0,w,c
  2605  011FE4  B4D8               	btfsc	status,2,c
  2606  011FE6  D00E               	goto	l11099
  2607                           
  2608                           ;main.c: 258:    convert_adc_data();
  2609  011FE8  ECC7  F0BB         	call	_convert_adc_data	;wreg free
  2610                           
  2611                           ;main.c: 262:    clear_adc_scan();
  2612  011FEC  EC2D  F0C9         	call	_clear_adc_scan	;wreg free
  2613                           
  2614                           ; BSR set to: 0
  2615                           ;main.c: 263:    start_adc_scan();
  2616  011FF0  ECCB  F0C0         	call	_start_adc_scan	;wreg free
  2617                           
  2618                           ;main.c: 264:    StartTimer(TMR_ADC, 200);
  2619  011FF4  0EC8               	movlw	200
  2620  011FF6  6EE6               	movwf	postinc1,c
  2621  011FF8  0E00               	movlw	0
  2622  011FFA  6EE6               	movwf	postinc1,c
  2623  011FFC  0E01               	movlw	1
  2624  011FFE  6EE6               	movwf	postinc1,c
  2625  012000  ECD8  F0C3         	call	_StartTimer	;wreg free
  2626  012004                     l11099:
  2627                           
  2628                           ;main.c: 271:   if (TimerDone(TMR_DISPLAY)) {
  2629                           
  2630                           ;main.c: 267:   if (V.ticks) {
  2631  012004  0E0A               	movlw	10
  2632  012006  6EE6               	movwf	postinc1,c
  2633  012008  EC39  F0C6         	call	_TimerDone	;wreg free
  2634  01200C  5025               	movf	btemp^0,w,c
  2635  01200E  B4D8               	btfsc	status,2,c
  2636  012010  D273               	goto	l11141
  2637                           
  2638                           ;main.c: 272:    if (TimerDone(TMR_HELPDIS)) {
  2639  012012  0E09               	movlw	9
  2640  012014  6EE6               	movwf	postinc1,c
  2641  012016  EC39  F0C6         	call	_TimerDone	;wreg free
  2642  01201A  5025               	movf	btemp^0,w,c
  2643  01201C  B4D8               	btfsc	status,2,c
  2644  01201E  D004               	goto	l11107
  2645                           
  2646                           ;main.c: 273:     set_display_info(DIS_STR);
  2647  012020  0E00               	movlw	0
  2648  012022  6EE6               	movwf	postinc1,c
  2649  012024  EC34  F0C8         	call	_set_display_info	;wreg free
  2650  012028                     l11107:
  2651                           
  2652                           ;main.c: 275:    calc_model_data();
  2653  012028  EC57  F0A7         	call	_calc_model_data	;wreg free
  2654                           
  2655                           ; BSR set to: 1
  2656                           ;main.c: 282:     hid_display(&H);
  2657                           
  2658                           ;main.c: 277:    if (0) {
  2659  01202C  0EF2               	movlw	_H& (0+255)
  2660  01202E  6EE6               	movwf	postinc1,c
  2661  012030  EC58  F0B8         	call	_hid_display	;wreg free
  2662                           
  2663                           ;main.c: 283:     switch (H.hid_display) {
  2664  012034  D23C               	goto	l11133
  2665  012036                     l1356:
  2666                           
  2667                           ; BSR set to: 0
  2668                           ;main.c: 285:      V.calib = 0;
  2669  012036  0102               	movlb	2	; () banked
  2670  012038  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2671                           
  2672                           ; BSR set to: 2
  2673                           ;main.c: 286:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  2674  01203A  0060  F5C3  FFE6   	movff	_C+112,postinc1
  2675  012040  0060  F5C7  FFE6   	movff	_C+113,postinc1
  2676  012046  0060  F5CB  FFE6   	movff	_C+114,postinc1
  2677  01204C  0060  F5CF  FFE6   	movff	_C+115,postinc1
  2678  012052  0EB8               	movlw	low STR_12
  2679  012054  6EE6               	movwf	postinc1,c
  2680  012056  0EFE               	movlw	high STR_12
  2681  012058  6EE6               	movwf	postinc1,c
  2682  01205A  0E00               	movlw	0
  2683  01205C  6EE6               	movwf	postinc1,c
  2684  01205E  0E00               	movlw	0
  2685  012060  6EE6               	movwf	postinc1,c
  2686  012062  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  2687  012066  0060  F097  FFE6   	movff	btemp,postinc1
  2688  01206C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2689  012072  0E08               	movlw	8
  2690  012074  6EE6               	movwf	postinc1,c
  2691  012076  ECD3  F0B7         	call	_sprintf	;wreg free
  2692                           
  2693                           ;main.c: 287:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  2694  01207A  0060  F5A3  FFE6   	movff	_C+104,postinc1
  2695  012080  0060  F5A7  FFE6   	movff	_C+105,postinc1
  2696  012086  0060  F5AB  FFE6   	movff	_C+106,postinc1
  2697  01208C  0060  F5AF  FFE6   	movff	_C+107,postinc1
  2698  012092  0EF1               	movlw	low STR_13
  2699  012094  6EE6               	movwf	postinc1,c
  2700  012096  0EFE               	movlw	high STR_13
  2701  012098  6EE6               	movwf	postinc1,c
  2702  01209A  0E00               	movlw	0
  2703  01209C  6EE6               	movwf	postinc1,c
  2704  01209E  0E01               	movlw	1
  2705  0120A0  6EE6               	movwf	postinc1,c
  2706  0120A2  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  2707  0120A6  0060  F097  FFE6   	movff	btemp,postinc1
  2708  0120AC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2709  0120B2  0E08               	movlw	8
  2710  0120B4  6EE6               	movwf	postinc1,c
  2711  0120B6  ECD3  F0B7         	call	_sprintf	;wreg free
  2712                           
  2713                           ;main.c: 288:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  2714  0120BA  0060  F5B3  FFE6   	movff	_C+108,postinc1
  2715  0120C0  0060  F5B7  FFE6   	movff	_C+109,postinc1
  2716  0120C6  0060  F5BB  FFE6   	movff	_C+110,postinc1
  2717  0120CC  0060  F5BF  FFE6   	movff	_C+111,postinc1
  2718  0120D2  0EDE               	movlw	low STR_14
  2719  0120D4  6EE6               	movwf	postinc1,c
  2720  0120D6  0EFE               	movlw	high STR_14
  2721  0120D8  6EE6               	movwf	postinc1,c
  2722  0120DA  0E00               	movlw	0
  2723  0120DC  6EE6               	movwf	postinc1,c
  2724  0120DE  0E02               	movlw	2
  2725  0120E0  6EE6               	movwf	postinc1,c
  2726  0120E2  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  2727  0120E6  0060  F097  FFE6   	movff	btemp,postinc1
  2728  0120EC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2729  0120F2  0E08               	movlw	8
  2730  0120F4  6EE6               	movwf	postinc1,c
  2731  0120F6  ECD3  F0B7         	call	_sprintf	;wreg free
  2732                           
  2733                           ;main.c: 289:      break;
  2734  0120FA  D1EE               	goto	l11135
  2735  0120FC                     l1358:
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;main.c: 291:      V.calib = 0;
  2739  0120FC  0102               	movlb	2	; () banked
  2740  0120FE  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2741                           
  2742                           ; BSR set to: 2
  2743                           ;main.c: 292:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  2744  012100  0060  F413  FFE6   	movff	_C+4,postinc1
  2745  012106  0060  F417  FFE6   	movff	_C+5,postinc1
  2746  01210C  0060  F41B  FFE6   	movff	_C+6,postinc1
  2747  012112  0060  F41F  FFE6   	movff	_C+7,postinc1
  2748  012118  0060  F453  FFE6   	movff	_C+20,postinc1
  2749  01211E  0060  F457  FFE6   	movff	_C+21,postinc1
  2750  012124  0060  F45B  FFE6   	movff	_C+22,postinc1
  2751  01212A  0060  F45F  FFE6   	movff	_C+23,postinc1
  2752  012130  0E2A               	movlw	low STR_15
  2753  012132  6EE6               	movwf	postinc1,c
  2754  012134  0EFF               	movlw	high STR_15
  2755  012136  6EE6               	movwf	postinc1,c
  2756  012138  0E00               	movlw	0
  2757  01213A  6EE6               	movwf	postinc1,c
  2758  01213C  0E00               	movlw	0
  2759  01213E  6EE6               	movwf	postinc1,c
  2760  012140  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  2761  012144  0060  F097  FFE6   	movff	btemp,postinc1
  2762  01214A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2763  012150  0E0C               	movlw	12
  2764  012152  6EE6               	movwf	postinc1,c
  2765  012154  ECD3  F0B7         	call	_sprintf	;wreg free
  2766                           
  2767                           ;main.c: 293:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  2768  012158  0060  F403  FFE6   	movff	_C,postinc1
  2769  01215E  0060  F407  FFE6   	movff	_C+1,postinc1
  2770  012164  0060  F40B  FFE6   	movff	_C+2,postinc1
  2771  01216A  0060  F40F  FFE6   	movff	_C+3,postinc1
  2772  012170  0060  F443  FFE6   	movff	_C+16,postinc1
  2773  012176  0060  F447  FFE6   	movff	_C+17,postinc1
  2774  01217C  0060  F44B  FFE6   	movff	_C+18,postinc1
  2775  012182  0060  F44F  FFE6   	movff	_C+19,postinc1
  2776  012188  0E04               	movlw	low STR_16
  2777  01218A  6EE6               	movwf	postinc1,c
  2778  01218C  0EFF               	movlw	high STR_16
  2779  01218E  6EE6               	movwf	postinc1,c
  2780  012190  0E00               	movlw	0
  2781  012192  6EE6               	movwf	postinc1,c
  2782  012194  0E01               	movlw	1
  2783  012196  6EE6               	movwf	postinc1,c
  2784  012198  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  2785  01219C  0060  F097  FFE6   	movff	btemp,postinc1
  2786  0121A2  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2787  0121A8  0E0C               	movlw	12
  2788  0121AA  6EE6               	movwf	postinc1,c
  2789  0121AC  ECD3  F0B7         	call	_sprintf	;wreg free
  2790                           
  2791                           ;main.c: 294:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  2792  0121B0  0060  F503  FFE6   	movff	_C+64,postinc1
  2793  0121B6  0060  F507  FFE6   	movff	_C+65,postinc1
  2794  0121BC  0060  F50B  FFE6   	movff	_C+66,postinc1
  2795  0121C2  0060  F50F  FFE6   	movff	_C+67,postinc1
  2796  0121C8  0060  F423  FFE6   	movff	_C+8,postinc1
  2797  0121CE  0060  F427  FFE6   	movff	_C+9,postinc1
  2798  0121D4  0060  F42B  FFE6   	movff	_C+10,postinc1
  2799  0121DA  0060  F42F  FFE6   	movff	_C+11,postinc1
  2800  0121E0  0E17               	movlw	low STR_17
  2801  0121E2  6EE6               	movwf	postinc1,c
  2802  0121E4  0EFF               	movlw	high STR_17
  2803  0121E6  6EE6               	movwf	postinc1,c
  2804  0121E8  0E00               	movlw	0
  2805  0121EA  6EE6               	movwf	postinc1,c
  2806  0121EC  0E02               	movlw	2
  2807  0121EE  6EE6               	movwf	postinc1,c
  2808  0121F0  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  2809  0121F4  0060  F097  FFE6   	movff	btemp,postinc1
  2810  0121FA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2811  012200  0E0C               	movlw	12
  2812  012202  6EE6               	movwf	postinc1,c
  2813  012204  ECD3  F0B7         	call	_sprintf	;wreg free
  2814                           
  2815                           ;main.c: 295:      break;
  2816  012208  D167               	goto	l11135
  2817  01220A                     l1359:
  2818                           
  2819                           ; BSR set to: 0
  2820                           ;main.c: 297:      V.calib = 0;
  2821  01220A  0102               	movlb	2	; () banked
  2822  01220C  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  2823                           
  2824                           ; BSR set to: 2
  2825                           ;main.c: 298:      sprintf(get_vterm_ptr(0, 0), "BAT  PWR %3.2f    ", C.p_bat);
  2826  01220E  0060  F5D3  FFE6   	movff	_C+116,postinc1
  2827  012214  0060  F5D7  FFE6   	movff	_C+117,postinc1
  2828  01221A  0060  F5DB  FFE6   	movff	_C+118,postinc1
  2829  012220  0060  F5DF  FFE6   	movff	_C+119,postinc1
  2830  012226  0ECB               	movlw	low STR_18
  2831  012228  6EE6               	movwf	postinc1,c
  2832  01222A  0EFE               	movlw	high STR_18
  2833  01222C  6EE6               	movwf	postinc1,c
  2834  01222E  0E00               	movlw	0
  2835  012230  6EE6               	movwf	postinc1,c
  2836  012232  0E00               	movlw	0
  2837  012234  6EE6               	movwf	postinc1,c
  2838  012236  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  2839  01223A  0060  F097  FFE6   	movff	btemp,postinc1
  2840  012240  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2841  012246  0E08               	movlw	8
  2842  012248  6EE6               	movwf	postinc1,c
  2843  01224A  ECD3  F0B7         	call	_sprintf	;wreg free
  2844                           
  2845                           ;main.c: 299:      sprintf(get_vterm_ptr(1, 0), "BAT AH   %3.2f    ", C.dynamic_ah);
  2846  01224E  0060  F613  FFE6   	movff	_C+132,postinc1
  2847  012254  0060  F617  FFE6   	movff	_C+133,postinc1
  2848  01225A  0060  F61B  FFE6   	movff	_C+134,postinc1
  2849  012260  0060  F61F  FFE6   	movff	_C+135,postinc1
  2850  012266  0EA5               	movlw	low STR_19
  2851  012268  6EE6               	movwf	postinc1,c
  2852  01226A  0EFE               	movlw	high STR_19
  2853  01226C  6EE6               	movwf	postinc1,c
  2854  01226E  0E00               	movlw	0
  2855  012270  6EE6               	movwf	postinc1,c
  2856  012272  0E01               	movlw	1
  2857  012274  6EE6               	movwf	postinc1,c
  2858  012276  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  2859  01227A  0060  F097  FFE6   	movff	btemp,postinc1
  2860  012280  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2861  012286  0E08               	movlw	8
  2862  012288  6EE6               	movwf	postinc1,c
  2863  01228A  ECD3  F0B7         	call	_sprintf	;wreg free
  2864                           
  2865                           ;main.c: 300:      sprintf(get_vterm_ptr(2, 0), "SOC %d RUN %d     ", C.soc, C.runtime);
  2866  01228E  0060  F673  FFE6   	movff	_C+156,postinc1
  2867  012294  0060  F677  FFE6   	movff	_C+157,postinc1
  2868  01229A  0060  F67B  FFE6   	movff	_C+158,postinc1
  2869  0122A0  0060  F67F  FFE6   	movff	_C+159,postinc1
  2870  0122A6  0E92               	movlw	low STR_20
  2871  0122A8  6EE6               	movwf	postinc1,c
  2872  0122AA  0EFE               	movlw	high STR_20
  2873  0122AC  6EE6               	movwf	postinc1,c
  2874  0122AE  0E00               	movlw	0
  2875  0122B0  6EE6               	movwf	postinc1,c
  2876  0122B2  0E02               	movlw	2
  2877  0122B4  6EE6               	movwf	postinc1,c
  2878  0122B6  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  2879  0122BA  0060  F097  FFE6   	movff	btemp,postinc1
  2880  0122C0  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2881  0122C6  0E08               	movlw	8
  2882  0122C8  6EE6               	movwf	postinc1,c
  2883  0122CA  ECD3  F0B7         	call	_sprintf	;wreg free
  2884                           
  2885                           ;main.c: 301:      break;
  2886  0122CE  D104               	goto	l11135
  2887  0122D0                     l11119:
  2888                           
  2889                           ; BSR set to: 0
  2890                           ;main.c: 303:      if (!V.calib) {
  2891  0122D0  0102               	movlb	2	; () banked
  2892  0122D2  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  2893  0122D4  A4D8               	btfss	status,2,c
  2894  0122D6  D02D               	goto	l11123
  2895                           
  2896                           ; BSR set to: 2
  2897                           ;main.c: 304:       lp_filter(0.0, i, -1);
  2898  0122D8  0EFF               	movlw	255
  2899  0122DA  6EE6               	movwf	postinc1,c
  2900                           
  2901                           ;stkvar	_i @ sp[(-6)+2]
  2902  0122DC  0EFC               	movlw	-4
  2903  0122DE  50E3               	movf	plusw1,w,c
  2904  0122E0  6EE6               	movwf	postinc1,c
  2905  0122E2  0E00               	movlw	0
  2906  0122E4  6EE6               	movwf	postinc1,c
  2907  0122E6  0E00               	movlw	0
  2908  0122E8  6EE6               	movwf	postinc1,c
  2909  0122EA  0E00               	movlw	0
  2910  0122EC  6EE6               	movwf	postinc1,c
  2911  0122EE  0E00               	movlw	0
  2912  0122F0  6EE6               	movwf	postinc1,c
  2913  0122F2  ECAC  F0B0         	call	_lp_filter	;wreg free
  2914                           
  2915                           ;main.c: 305:       lp_filter(0.0, j, -1);
  2916  0122F6  0EFF               	movlw	255
  2917  0122F8  6EE6               	movwf	postinc1,c
  2918                           
  2919                           ;stkvar	_j @ sp[(-6)+1]
  2920  0122FA  0EFB               	movlw	-5
  2921  0122FC  50E3               	movf	plusw1,w,c
  2922  0122FE  6EE6               	movwf	postinc1,c
  2923  012300  0E00               	movlw	0
  2924  012302  6EE6               	movwf	postinc1,c
  2925  012304  0E00               	movlw	0
  2926  012306  6EE6               	movwf	postinc1,c
  2927  012308  0E00               	movlw	0
  2928  01230A  6EE6               	movwf	postinc1,c
  2929  01230C  0E00               	movlw	0
  2930  01230E  6EE6               	movwf	postinc1,c
  2931  012310  ECAC  F0B0         	call	_lp_filter	;wreg free
  2932                           
  2933                           ;main.c: 306:       lp_filter(0.0, k, -1);
  2934  012314  0EFF               	movlw	255
  2935  012316  6EE6               	movwf	postinc1,c
  2936                           
  2937                           ;stkvar	_k @ sp[(-6)+0]
  2938  012318  0EFA               	movlw	-6
  2939  01231A  50E3               	movf	plusw1,w,c
  2940  01231C  6EE6               	movwf	postinc1,c
  2941  01231E  0E00               	movlw	0
  2942  012320  6EE6               	movwf	postinc1,c
  2943  012322  0E00               	movlw	0
  2944  012324  6EE6               	movwf	postinc1,c
  2945  012326  0E00               	movlw	0
  2946  012328  6EE6               	movwf	postinc1,c
  2947  01232A  0E00               	movlw	0
  2948  01232C  6EE6               	movwf	postinc1,c
  2949  01232E  ECAC  F0B0         	call	_lp_filter	;wreg free
  2950  012332                     l11123:
  2951                           
  2952                           ;main.c: 308:      V.calib = 1;
  2953  012332  0E01               	movlw	1
  2954  012334  0102               	movlb	2	; () banked
  2955  012336  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  2956                           
  2957                           ; BSR set to: 2
  2958                           ;main.c: 309:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  2959  012338  0E02               	movlw	2
  2960  01233A  6EE6               	movwf	postinc1,c
  2961  01233C  EC25  F0C6         	call	_get_switch	;wreg free
  2962  012340  5025               	movf	btemp^0,w,c
  2963  012342  6EE6               	movwf	postinc1,c
  2964  012344  0E00               	movlw	0
  2965  012346  6EE6               	movwf	postinc1,c
  2966                           
  2967                           ;stkvar	_i @ sp[(-7)+2]
  2968  012348  0EFB               	movlw	-5
  2969  01234A  50E3               	movf	plusw1,w,c
  2970  01234C  0D04               	mullw	4
  2971  01234E  0E00               	movlw	low _C
  2972  012350  24F3               	addwf	243,w,c
  2973  012352  6ED9               	movwf	fsr2l,c
  2974  012354  0E01               	movlw	high _C
  2975  012356  20F4               	addwfc	prodh,w,c
  2976  012358  6EDA               	movwf	fsr2h,c
  2977  01235A  006F FF7B FFE6     	movff	postinc2,postinc1
  2978  012360  006F FF7B FFE6     	movff	postinc2,postinc1
  2979  012366  006F FF7B FFE6     	movff	postinc2,postinc1
  2980  01236C  006F FF7B FFE6     	movff	postinc2,postinc1
  2981                           
  2982                           ;stkvar	_i @ sp[(-11)+2]
  2983  012372  0EF7               	movlw	-9
  2984  012374  50E3               	movf	plusw1,w,c
  2985  012376  6EE6               	movwf	postinc1,c
  2986  012378  EC16  F0C8         	call	_get_raw_result	;wreg free
  2987  01237C  0060  F097  FFE6   	movff	btemp,postinc1
  2988  012382  0060  F09B  FFE6   	movff	btemp+1,postinc1
  2989  012388  0E92               	movlw	low STR_9
  2990  01238A  6EE6               	movwf	postinc1,c
  2991  01238C  0EFF               	movlw	high STR_9
  2992  01238E  6EE6               	movwf	postinc1,c
  2993  012390  0E00               	movlw	0
  2994  012392  6EE6               	movwf	postinc1,c
  2995  012394  0E00               	movlw	0
  2996  012396  6EE6               	movwf	postinc1,c
  2997  012398  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  2998  01239C  0060  F097  FFE6   	movff	btemp,postinc1
  2999  0123A2  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3000  0123A8  0E0C               	movlw	12
  3001  0123AA  6EE6               	movwf	postinc1,c
  3002  0123AC  ECD3  F0B7         	call	_sprintf	;wreg free
  3003                           
  3004                           ; BSR set to: 0
  3005                           ;main.c: 310:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  3006  0123B0  0E03               	movlw	3
  3007  0123B2  6EE6               	movwf	postinc1,c
  3008  0123B4  EC25  F0C6         	call	_get_switch	;wreg free
  3009  0123B8  5025               	movf	btemp^0,w,c
  3010  0123BA  6EE6               	movwf	postinc1,c
  3011  0123BC  0E00               	movlw	0
  3012  0123BE  6EE6               	movwf	postinc1,c
  3013                           
  3014                           ;stkvar	_j @ sp[(-7)+1]
  3015  0123C0  0EFA               	movlw	-6
  3016  0123C2  50E3               	movf	plusw1,w,c
  3017  0123C4  0D04               	mullw	4
  3018  0123C6  0E00               	movlw	low _C
  3019  0123C8  24F3               	addwf	243,w,c
  3020  0123CA  6ED9               	movwf	fsr2l,c
  3021  0123CC  0E01               	movlw	high _C
  3022  0123CE  20F4               	addwfc	prodh,w,c
  3023  0123D0  6EDA               	movwf	fsr2h,c
  3024  0123D2  006F FF7B FFE6     	movff	postinc2,postinc1
  3025  0123D8  006F FF7B FFE6     	movff	postinc2,postinc1
  3026  0123DE  006F FF7B FFE6     	movff	postinc2,postinc1
  3027  0123E4  006F FF7B FFE6     	movff	postinc2,postinc1
  3028                           
  3029                           ;stkvar	_j @ sp[(-11)+1]
  3030  0123EA  0EF6               	movlw	-10
  3031  0123EC  50E3               	movf	plusw1,w,c
  3032  0123EE  6EE6               	movwf	postinc1,c
  3033  0123F0  EC16  F0C8         	call	_get_raw_result	;wreg free
  3034  0123F4  0060  F097  FFE6   	movff	btemp,postinc1
  3035  0123FA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3036  012400  0E92               	movlw	low STR_9
  3037  012402  6EE6               	movwf	postinc1,c
  3038  012404  0EFF               	movlw	high STR_9
  3039  012406  6EE6               	movwf	postinc1,c
  3040  012408  0E00               	movlw	0
  3041  01240A  6EE6               	movwf	postinc1,c
  3042  01240C  0E01               	movlw	1
  3043  01240E  6EE6               	movwf	postinc1,c
  3044  012410  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  3045  012414  0060  F097  FFE6   	movff	btemp,postinc1
  3046  01241A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3047  012420  0E0C               	movlw	12
  3048  012422  6EE6               	movwf	postinc1,c
  3049  012424  ECD3  F0B7         	call	_sprintf	;wreg free
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;main.c: 311:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  3053                           ;stkvar	_inp_index @ sp[(-5)+3]
  3054  012428  0EFE               	movlw	-2
  3055  01242A  50E3               	movf	plusw1,w,c
  3056  01242C  6E2F               	movwf	(btemp+10)^0,c
  3057  01242E  6A30               	clrf	(btemp+11)^0,c
  3058  012430  0E01               	movlw	1
  3059  012432  262F               	addwf	(btemp+10)^0,f,c
  3060  012434  0E00               	movlw	0
  3061  012436  2230               	addwfc	(btemp+11)^0,f,c
  3062  012438  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  3063  01243E  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  3064                           
  3065                           ;stkvar	_k @ sp[(-7)+0]
  3066  012444  0EF9               	movlw	-7
  3067  012446  50E3               	movf	plusw1,w,c
  3068  012448  0D04               	mullw	4
  3069  01244A  0E00               	movlw	low _C
  3070  01244C  24F3               	addwf	243,w,c
  3071  01244E  6ED9               	movwf	fsr2l,c
  3072  012450  0E01               	movlw	high _C
  3073  012452  20F4               	addwfc	prodh,w,c
  3074  012454  6EDA               	movwf	fsr2h,c
  3075  012456  006F FF7B FFE6     	movff	postinc2,postinc1
  3076  01245C  006F FF7B FFE6     	movff	postinc2,postinc1
  3077  012462  006F FF7B FFE6     	movff	postinc2,postinc1
  3078  012468  006F FF7B FFE6     	movff	postinc2,postinc1
  3079                           
  3080                           ;stkvar	_k @ sp[(-11)+0]
  3081  01246E  0EF5               	movlw	-11
  3082  012470  50E3               	movf	plusw1,w,c
  3083  012472  6EE6               	movwf	postinc1,c
  3084  012474  EC16  F0C8         	call	_get_raw_result	;wreg free
  3085  012478  0060  F097  FFE6   	movff	btemp,postinc1
  3086  01247E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3087  012484  0E81               	movlw	low STR_11
  3088  012486  6EE6               	movwf	postinc1,c
  3089  012488  0EFF               	movlw	high STR_11
  3090  01248A  6EE6               	movwf	postinc1,c
  3091  01248C  0E00               	movlw	0
  3092  01248E  6EE6               	movwf	postinc1,c
  3093  012490  0E02               	movlw	2
  3094  012492  6EE6               	movwf	postinc1,c
  3095  012494  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  3096  012498  0060  F097  FFE6   	movff	btemp,postinc1
  3097  01249E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  3098  0124A4  0E0C               	movlw	12
  3099  0124A6  6EE6               	movwf	postinc1,c
  3100  0124A8  ECD3  F0B7         	call	_sprintf	;wreg free
  3101                           
  3102                           ;main.c: 312:      break;
  3103  0124AC  D015               	goto	l11135
  3104  0124AE                     l11133:
  3105  0124AE  0100               	movlb	0	; () banked
  3106  0124B0  51F2               	movf	_H& (0+255),w,b
  3107  0124B2  6E2F               	movwf	(btemp+10)^0,c
  3108  0124B4  6A30               	clrf	(btemp+11)^0,c
  3109                           
  3110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3111                           ; Switch size 1, requested type "simple"
  3112                           ; Number of cases is 1, Range of values is 0 to 0
  3113                           ; switch strategies available:
  3114                           ; Name         Instructions Cycles
  3115                           ; simple_byte            4     3 (average)
  3116                           ;	Chosen strategy is simple_byte
  3117  0124B6  5030               	movf	(btemp+11)^0,w,c
  3118  0124B8  0A00               	xorlw	0	; case 0
  3119  0124BA  A4D8               	btfss	status,2,c
  3120  0124BC  D00D               	goto	l11135
  3121                           
  3122                           ; BSR set to: 0
  3123                           ; Switch size 1, requested type "simple"
  3124                           ; Number of cases is 4, Range of values is 0 to 3
  3125                           ; switch strategies available:
  3126                           ; Name         Instructions Cycles
  3127                           ; simple_byte           13     7 (average)
  3128                           ;	Chosen strategy is simple_byte
  3129  0124BE  502F               	movf	(btemp+10)^0,w,c
  3130  0124C0  0A00               	xorlw	0	; case 0
  3131  0124C2  B4D8               	btfsc	status,2,c
  3132  0124C4  D61B               	goto	l1358
  3133  0124C6  0A01               	xorlw	1	; case 1
  3134  0124C8  B4D8               	btfsc	status,2,c
  3135  0124CA  D5B5               	goto	l1356
  3136  0124CC  0A03               	xorlw	3	; case 2
  3137  0124CE  B4D8               	btfsc	status,2,c
  3138  0124D0  D69C               	goto	l1359
  3139  0124D2  0A01               	xorlw	1	; case 3
  3140  0124D4  B4D8               	btfsc	status,2,c
  3141  0124D6  D6FC               	goto	l11119
  3142  0124D8                     l11135:
  3143                           
  3144                           ; BSR set to: 0
  3145                           ;main.c: 316:     clear_hid_pflags(&H);
  3146  0124D8  0EF2               	movlw	_H& (0+255)
  3147  0124DA  6EE6               	movwf	postinc1,c
  3148  0124DC  EC8D  F0C7         	call	_clear_hid_pflags	;wreg free
  3149                           
  3150                           ;main.c: 318:    StartTimer(TMR_DISPLAY, 250);
  3151  0124E0  0EFA               	movlw	250
  3152  0124E2  6EE6               	movwf	postinc1,c
  3153  0124E4  0E00               	movlw	0
  3154  0124E6  6EE6               	movwf	postinc1,c
  3155  0124E8  0E0A               	movlw	10
  3156  0124EA  6EE6               	movwf	postinc1,c
  3157  0124EC  ECD8  F0C3         	call	_StartTimer	;wreg free
  3158                           
  3159                           ;main.c: 319:    update_lcd(0);
  3160  0124F0  0E00               	movlw	0
  3161  0124F2  6EE6               	movwf	postinc1,c
  3162  0124F4  EC4B  F0B7         	call	_update_lcd	;wreg free
  3163  0124F8                     l11141:
  3164                           
  3165                           ;main.c: 325:   check_help(V.flipper);
  3166  0124F8  0102               	movlb	2	; () banked
  3167  0124FA  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  3168  0124FC  6EE6               	movwf	postinc1,c
  3169  0124FE  ECBD  F0AD         	call	_check_help	;wreg free
  3170                           
  3171                           ;main.c: 327:   if (check_enter_button(&H)) {
  3172  012502  0EF2               	movlw	_H& (0+255)
  3173  012504  6EE6               	movwf	postinc1,c
  3174  012506  ECF8  F0C3         	call	_check_enter_button	;wreg free
  3175  01250A  5025               	movf	btemp^0,w,c
  3176  01250C  B4D8               	btfsc	status,2,c
  3177  01250E  D062               	goto	l1363
  3178                           
  3179                           ;main.c: 328:    V.calib = 0;
  3180  012510  0102               	movlb	2	; () banked
  3181  012512  6BAB               	clrf	(_V+171)& (0+255),b	;volatile
  3182                           
  3183                           ; BSR set to: 2
  3184                           ;main.c: 329:    inp_index += 3;
  3185                           ;stkvar	_inp_index @ sp[(-5)+3]
  3186  012514  0EFE               	movlw	-2
  3187  012516  006F FF8C  F025    	movff	plusw1,btemp
  3188  01251C  0E03               	movlw	3
  3189  01251E  2625               	addwf	btemp^0,f,c
  3190  012520  0EFE               	movlw	-2
  3191  012522  0060  F097  FFE3   	movff	btemp,plusw1
  3192                           
  3193                           ;main.c: 330:    if (inp_index > 9)
  3194                           ;stkvar	_inp_index @ sp[(-5)+3]
  3195  012528  0EFE               	movlw	-2
  3196  01252A  006F FF8C  F025    	movff	plusw1,btemp
  3197  012530  0E09               	movlw	9
  3198  012532  6425               	cpfsgt	btemp^0,c
  3199  012534  D03A               	goto	l11169
  3200                           
  3201                           ; BSR set to: 2
  3202                           ;main.c: 331:     inp_index = 0;
  3203                           ;stkvar	_inp_index @ sp[(-5)+3]
  3204  012536  0EFE               	movlw	-2
  3205  012538  6AE3               	clrf	plusw1,c
  3206  01253A  D037               	goto	l11169
  3207  01253C                     l11151:
  3208                           
  3209                           ; BSR set to: 2
  3210                           ;main.c: 334:     i = C_BATT;
  3211                           ;stkvar	_i @ sp[(-5)+2]
  3212  01253C  0EFD               	movlw	-3
  3213  01253E  6AE3               	clrf	plusw1,c
  3214                           
  3215                           ; BSR set to: 2
  3216                           ;main.c: 335:     j = C_PV;
  3217                           ;stkvar	_j @ sp[(-5)+1]
  3218  012540  0EFC               	movlw	-4
  3219  012542  6AE3               	clrf	plusw1,c
  3220  012544  2AE3               	incf	plusw1,f,c
  3221                           
  3222                           ; BSR set to: 2
  3223                           ;main.c: 336:     k = V_CC;
  3224                           ;stkvar	_k @ sp[(-5)+0]
  3225  012546  0EFB               	movlw	-5
  3226  012548  6AE3               	clrf	plusw1,c
  3227  01254A  82E3               	bsf	plusw1,1,c
  3228                           
  3229                           ;main.c: 337:     break;
  3230  01254C  D043               	goto	l1363
  3231  01254E                     l11157:
  3232                           
  3233                           ; BSR set to: 2
  3234                           ;main.c: 339:     i = V_BAT;
  3235                           ;stkvar	_i @ sp[(-5)+2]
  3236  01254E  0EFD               	movlw	-3
  3237  012550  6AE3               	clrf	plusw1,c
  3238  012552  84E3               	bsf	plusw1,2,c
  3239                           
  3240                           ;main.c: 340:     j = V_PV;
  3241                           ;stkvar	_j @ sp[(-5)+1]
  3242  012554  0EFC               	movlw	-4
  3243  012556  6AE3               	clrf	plusw1,c
  3244  012558  80E3               	bsf	plusw1,0,c
  3245  01255A  84E3               	bsf	plusw1,2,c	;indir
  3246                           
  3247                           ;main.c: 341:     k = V_CBUS;
  3248                           ;stkvar	_k @ sp[(-5)+0]
  3249  01255C  0EFB               	movlw	-5
  3250  01255E  6AE3               	clrf	plusw1,c
  3251  012560  82E3               	bsf	plusw1,1,c
  3252  012562  84E3               	bsf	plusw1,2,c	;indir
  3253                           
  3254                           ;main.c: 342:     break;
  3255  012564  D037               	goto	l1363
  3256  012566                     l11159:
  3257                           
  3258                           ; BSR set to: 2
  3259                           ;main.c: 344:     i = V_BBAT;
  3260                           ;stkvar	_i @ sp[(-5)+2]
  3261  012566  0EFD               	movlw	-3
  3262  012568  6AE3               	clrf	plusw1,c
  3263  01256A  82E3               	bsf	plusw1,1,c
  3264  01256C  86E3               	bsf	plusw1,3,c	;indir
  3265                           
  3266                           ; BSR set to: 2
  3267                           ;main.c: 345:     j = V_TEMP;
  3268  01256E  0E0B               	movlw	11
  3269  012570  6E30               	movwf	(btemp+11)^0,c
  3270                           
  3271                           ;stkvar	_j @ sp[(-5)+1]
  3272  012572  0EFC               	movlw	-4
  3273  012574  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3274                           
  3275                           ; BSR set to: 2
  3276                           ;main.c: 346:     k = V_INVERTER;
  3277                           ;stkvar	_k @ sp[(-5)+0]
  3278  01257A  0EFB               	movlw	-5
  3279  01257C  6AE3               	clrf	plusw1,c
  3280  01257E  84E3               	bsf	plusw1,2,c
  3281  012580  86E3               	bsf	plusw1,3,c	;indir
  3282                           
  3283                           ;main.c: 347:     break;
  3284  012582  D028               	goto	l1363
  3285  012584                     l11165:
  3286                           
  3287                           ; BSR set to: 2
  3288                           ;main.c: 349:     i = channel_ANB5;
  3289  012584  0E0D               	movlw	13
  3290  012586  6E30               	movwf	(btemp+11)^0,c
  3291                           
  3292                           ;stkvar	_i @ sp[(-5)+2]
  3293  012588  0EFD               	movlw	-3
  3294  01258A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3295                           
  3296                           ;main.c: 350:     j = channel_ANB5;
  3297  012590  0E0D               	movlw	13
  3298  012592  6E30               	movwf	(btemp+11)^0,c
  3299                           
  3300                           ;stkvar	_j @ sp[(-5)+1]
  3301  012594  0EFC               	movlw	-4
  3302  012596  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3303                           
  3304                           ;main.c: 351:     k = channel_ANB5;
  3305  01259C  0E0D               	movlw	13
  3306  01259E  6E30               	movwf	(btemp+11)^0,c
  3307                           
  3308                           ;stkvar	_k @ sp[(-5)+0]
  3309  0125A0  0EFB               	movlw	-5
  3310  0125A2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  3311                           
  3312                           ;main.c: 352:     break;
  3313  0125A8  D015               	goto	l1363
  3314  0125AA                     l11169:
  3315                           
  3316                           ; BSR set to: 2
  3317                           ;stkvar	_inp_index @ sp[(-5)+3]
  3318  0125AA  0EFE               	movlw	-2
  3319  0125AC  50E3               	movf	plusw1,w,c
  3320  0125AE  6E2F               	movwf	(btemp+10)^0,c
  3321  0125B0  6A30               	clrf	(btemp+11)^0,c
  3322                           
  3323                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3324                           ; Switch size 1, requested type "simple"
  3325                           ; Number of cases is 1, Range of values is 0 to 0
  3326                           ; switch strategies available:
  3327                           ; Name         Instructions Cycles
  3328                           ; simple_byte            4     3 (average)
  3329                           ;	Chosen strategy is simple_byte
  3330  0125B2  5030               	movf	(btemp+11)^0,w,c
  3331  0125B4  0A00               	xorlw	0	; case 0
  3332  0125B6  A4D8               	btfss	status,2,c
  3333  0125B8  D00D               	goto	l1363
  3334                           
  3335                           ; BSR set to: 2
  3336                           ; Switch size 1, requested type "simple"
  3337                           ; Number of cases is 4, Range of values is 0 to 9
  3338                           ; switch strategies available:
  3339                           ; Name         Instructions Cycles
  3340                           ; simple_byte           13     7 (average)
  3341                           ;	Chosen strategy is simple_byte
  3342  0125BA  502F               	movf	(btemp+10)^0,w,c
  3343  0125BC  0A00               	xorlw	0	; case 0
  3344  0125BE  B4D8               	btfsc	status,2,c
  3345  0125C0  D7BD               	goto	l11151
  3346  0125C2  0A03               	xorlw	3	; case 3
  3347  0125C4  B4D8               	btfsc	status,2,c
  3348  0125C6  D7C3               	goto	l11157
  3349  0125C8  0A05               	xorlw	5	; case 6
  3350  0125CA  B4D8               	btfsc	status,2,c
  3351  0125CC  D7CC               	goto	l11159
  3352  0125CE  0A0F               	xorlw	15	; case 9
  3353  0125D0  B4D8               	btfsc	status,2,c
  3354  0125D2  D7D8               	goto	l11165
  3355  0125D4                     l1363:
  3356                           
  3357                           ;main.c: 361:   if (V.set_sequ) {
  3358  0125D4  0102               	movlb	2	; () banked
  3359  0125D6  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  3360  0125D8  D4E4               	goto	l11085
  3361                           
  3362                           ; BSR set to: 2
  3363                           ;main.c: 362:    if (TimerDone(TMR_INFO)) {
  3364  0125DA  0E07               	movlw	7
  3365  0125DC  6EE6               	movwf	postinc1,c
  3366  0125DE  EC39  F0C6         	call	_TimerDone	;wreg free
  3367  0125E2  5025               	movf	btemp^0,w,c
  3368  0125E4  B4D8               	btfsc	status,2,c
  3369  0125E6  D00B               	goto	l11179
  3370                           
  3371                           ;main.c: 363:     V.set_sequ = 0;
  3372  0125E8  0102               	movlb	2	; () banked
  3373  0125EA  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  3374                           
  3375                           ; BSR set to: 2
  3376                           ;main.c: 364:     set_vterm(0);
  3377  0125EC  0E00               	movlw	0
  3378  0125EE  6EE6               	movwf	postinc1,c
  3379  0125F0  EC25  F0C8         	call	_set_vterm	;wreg free
  3380                           
  3381                           ;main.c: 365:     update_lcd(0);
  3382  0125F4  0E00               	movlw	0
  3383  0125F6  6EE6               	movwf	postinc1,c
  3384  0125F8  EC4B  F0B7         	call	_update_lcd	;wreg free
  3385                           
  3386                           ;main.c: 366:    } else {
  3387  0125FC  D4D2               	goto	l11085
  3388  0125FE                     l11179:
  3389                           
  3390                           ;main.c: 367:     set_vterm(2);
  3391  0125FE  0E02               	movlw	2
  3392  012600  6EE6               	movwf	postinc1,c
  3393  012602  EC25  F0C8         	call	_set_vterm	;wreg free
  3394                           
  3395                           ;main.c: 368:     update_lcd(2);
  3396  012606  0E02               	movlw	2
  3397  012608  6EE6               	movwf	postinc1,c
  3398  01260A  EC4B  F0B7         	call	_update_lcd	;wreg free
  3399  01260E  D4C9               	goto	l11085
  3400  012610                     __end_of_main:
  3401                           	opt callstack 0
  3402                           
  3403 ;; *************** function _static_soc *****************
  3404 ;; Defined at:
  3405 ;;		line 84 in file "mbmc.c"
  3406 ;; Parameters:    Size  Location     Type
  3407 ;;		None
  3408 ;; Auto vars:     Size  Location     Type
  3409 ;;		None
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1  [STACK] void 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2
  3414 ;; Tracked objects:
  3415 ;;		On entry : 3F/39
  3416 ;;		On exit  : 3F/1
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3422 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3423 ;;Total ram usage:        0 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    7
  3426 ;; This function calls:
  3427 ;;		Nothing
  3428 ;; This function is called by:
  3429 ;;		_main
  3430 ;; This function uses a reentrant model
  3431 ;;
  3432                           
  3433                           	psect	text1
  3434  0189C8                     __ptext1:
  3435                           	opt callstack 0
  3436  0189C8                     _static_soc:
  3437                           	opt callstack 23
  3438                           
  3439                           ;mbmc.c: 86:  C.static_ah = C.bank_ah;
  3440                           
  3441                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3442                           ;incstack = 0
  3443  0189C8  C17C  F180         	movff	_C+124,_C+128	;volatile
  3444  0189CC  C17D  F181         	movff	_C+125,_C+129	;volatile
  3445  0189D0  C17E  F182         	movff	_C+126,_C+130	;volatile
  3446  0189D4  C17F  F183         	movff	_C+127,_C+131	;volatile
  3447                           
  3448                           ;mbmc.c: 87:  C.runtime = 120;
  3449  0189D8  0E00               	movlw	0
  3450  0189DA  0101               	movlb	1	; () banked
  3451  0189DC  6F9D               	movwf	(_C+157)& (0+255),b	;volatile
  3452  0189DE  0E78               	movlw	120
  3453  0189E0  6F9C               	movwf	(_C+156)& (0+255),b	;volatile
  3454                           
  3455                           ;mbmc.c: 88:  C.soc = 100;
  3456  0189E2  0E00               	movlw	0
  3457  0189E4  6F9F               	movwf	(_C+159)& (0+255),b	;volatile
  3458  0189E6  0E64               	movlw	100
  3459  0189E8  6F9E               	movwf	(_C+158)& (0+255),b	;volatile
  3460                           
  3461                           ; BSR set to: 1
  3462                           ;mbmc.c: 89:  C.dynamic_ah = C.static_ah;
  3463  0189EA  C180  F184         	movff	_C+128,_C+132	;volatile
  3464  0189EE  C181  F185         	movff	_C+129,_C+133	;volatile
  3465  0189F2  C182  F186         	movff	_C+130,_C+134	;volatile
  3466  0189F6  C183  F187         	movff	_C+131,_C+135	;volatile
  3467                           
  3468                           ; BSR set to: 1
  3469                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3470  0189FA  0012               	return		;funcret
  3471  0189FC                     __end_of_static_soc:
  3472                           	opt callstack 0
  3473                           
  3474 ;; *************** function _start_switch_handler *****************
  3475 ;; Defined at:
  3476 ;;		line 119 in file "dio.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;		None
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;		None
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1  [STACK] void 
  3483 ;; Registers used:
  3484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  3485 ;; Tracked objects:
  3486 ;;		On entry : 1/0
  3487 ;;		On exit  : 3F/39
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3494 ;;Total ram usage:        0 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    8
  3497 ;; This function calls:
  3498 ;;		_INT1_SetInterruptHandler
  3499 ;; This function is called by:
  3500 ;;		_main
  3501 ;; This function uses a reentrant model
  3502 ;;
  3503                           
  3504                           	psect	text2
  3505  018FEE                     __ptext2:
  3506                           	opt callstack 0
  3507  018FEE                     _start_switch_handler:
  3508                           	opt callstack 22
  3509                           
  3510                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  3511                           
  3512                           ; BSR set to: 1
  3513                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3514                           ;incstack = 0
  3515  018FEE  0139               	movlb	57	; () banked
  3516  018FF0  9195               	bcf	149,0,b	;volatile
  3517                           
  3518                           ; BSR set to: 57
  3519                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  3520  018FF2  0ED0               	movlw	low _switch_handler
  3521  018FF4  6EE6               	movwf	postinc1,c
  3522  018FF6  0E68               	movlw	high _switch_handler
  3523  018FF8  6EE6               	movwf	postinc1,c
  3524  018FFA  0E01               	movlw	low (_switch_handler shr (0+16))
  3525  018FFC  6EE6               	movwf	postinc1,c
  3526  018FFE  ECD9  F0C6         	call	_INT1_SetInterruptHandler	;wreg free
  3527                           
  3528                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  3529  019002  0E02               	movlw	2
  3530  019004  0100               	movlb	0	; () banked
  3531  019006  6F83               	movwf	(_S+35)& (0+255),b	;volatile
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  3535  019008  0139               	movlb	57	; () banked
  3536  01900A  8195               	bsf	149,0,b	;volatile
  3537                           
  3538                           ; BSR set to: 57
  3539                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  3540  01900C  0012               	return		;funcret
  3541  01900E                     __end_of_start_switch_handler:
  3542                           	opt callstack 0
  3543                           
  3544 ;; *************** function _start_adc_scan *****************
  3545 ;; Defined at:
  3546 ;;		line 33 in file "daq.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1  [STACK] _Bool 
  3553 ;; Registers used:
  3554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 1/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3564 ;;Total ram usage:        0 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:    8
  3567 ;; This function calls:
  3568 ;;		_ADCC_DischargeSampleCapacitor
  3569 ;;		_ADCC_SetADIInterruptHandler
  3570 ;;		_ADCC_SetADTIInterruptHandler
  3571 ;;		_ADCC_StartConversion
  3572 ;; This function is called by:
  3573 ;;		_main
  3574 ;; This function uses a reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text3
  3578  018196                     __ptext3:
  3579                           	opt callstack 0
  3580  018196                     _start_adc_scan:
  3581                           	opt callstack 22
  3582                           
  3583                           ;daq.c: 35:  if (R.done)
  3584                           
  3585                           ; BSR set to: 57
  3586                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3587                           ;incstack = 0
  3588  018196  0100               	movlb	0	; () banked
  3589  018198  51EA               	movf	(_R+39)& (0+255),w,b	;volatile
  3590  01819A  A4D8               	btfss	status,2,c
  3591  01819C  0012               	return	
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;daq.c: 38:  R.scan_index = 0;
  3595  01819E  6BE7               	clrf	(_R+36)& (0+255),b	;volatile
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  3599  0181A0  013A               	movlb	58	; () banked
  3600  0181A2  5140               	movf	64,w,b	;volatile
  3601  0181A4  006E F940  F025    	movff	14928,btemp	;volatile
  3602  0181AA  6A26               	clrf	(btemp+1)^0,c
  3603  0181AC  0060  F094  F026   	movff	btemp,btemp+1
  3604  0181B2  6A25               	clrf	btemp^0,c
  3605  0181B4  2625               	addwf	btemp^0,f,c
  3606  0181B6  0E00               	movlw	0
  3607  0181B8  2226               	addwfc	(btemp+1)^0,f,c
  3608  0181BA  0E77               	movlw	119
  3609  0181BC  1425               	andwf	btemp^0,w,c
  3610  0181BE  0100               	movlb	0	; () banked
  3611  0181C0  6FE8               	movwf	(_R+37)& (0+255),b	;volatile
  3612  0181C2  0E3C               	movlw	60
  3613  0181C4  1426               	andwf	(btemp+1)^0,w,c
  3614  0181C6  6FE9               	movwf	(_R+38)& (0+255),b	;volatile
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  3618  0181C8  0E86               	movlw	low _adc_int_handler
  3619  0181CA  6EE6               	movwf	postinc1,c
  3620  0181CC  0E92               	movlw	high _adc_int_handler
  3621  0181CE  6EE6               	movwf	postinc1,c
  3622  0181D0  0E01               	movlw	low (_adc_int_handler shr (0+16))
  3623  0181D2  6EE6               	movwf	postinc1,c
  3624  0181D4  EC15  F0C7         	call	_ADCC_SetADIInterruptHandler	;wreg free
  3625                           
  3626                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  3627  0181D8  0E72               	movlw	low _adc_int_t_handler
  3628  0181DA  6EE6               	movwf	postinc1,c
  3629  0181DC  0E7F               	movlw	high _adc_int_t_handler
  3630  0181DE  6EE6               	movwf	postinc1,c
  3631  0181E0  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  3632  0181E2  6EE6               	movwf	postinc1,c
  3633  0181E4  EC01  F0C7         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  3634                           
  3635                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  3636  0181E8  EC19  F0C9         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  3637                           
  3638                           ; BSR set to: 62
  3639                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  3640  0181EC  0100               	movlb	0	; () banked
  3641  0181EE  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
  3642  0181F0  0B0F               	andlw	15
  3643  0181F2  6EE6               	movwf	postinc1,c
  3644  0181F4  ECCC  F0C8         	call	_ADCC_StartConversion	;wreg free
  3645                           
  3646                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  3647  0181F8  0012               	return		;funcret
  3648  0181FA                     __end_of_start_adc_scan:
  3649                           	opt callstack 0
  3650                           
  3651 ;; *************** function _ADCC_StartConversion *****************
  3652 ;; Defined at:
  3653 ;;		line 128 in file "mcc_generated_files/adcc.c"
  3654 ;; Parameters:    Size  Location     Type
  3655 ;;  channel         1  [STACK] enum E16136
  3656 ;; Auto vars:     Size  Location     Type
  3657 ;;		None
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1  [STACK] void 
  3660 ;; Registers used:
  3661 ;;		fsr1l, fsr1h
  3662 ;; Tracked objects:
  3663 ;;		On entry : 3F/0
  3664 ;;		On exit  : 3F/3E
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3671 ;;Total ram usage:        0 bytes
  3672 ;; Hardware stack levels used:    1
  3673 ;; Hardware stack levels required when called:    7
  3674 ;; This function calls:
  3675 ;;		Nothing
  3676 ;; This function is called by:
  3677 ;;		_start_adc_scan
  3678 ;;		_adc_int_t_handler
  3679 ;; This function uses a reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text4
  3683  019198                     __ptext4:
  3684                           	opt callstack 0
  3685  019198                     _ADCC_StartConversion:
  3686                           	opt callstack 4
  3687                           
  3688                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  3689                           ;stkvar	_channel @ sp[(0)+-1]
  3690                           
  3691                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3692                           ;incstack = 0
  3693  019198  0EFF               	movlw	-1
  3694  01919A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  3695                           
  3696                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  3697  0191A0  013E               	movlb	62	; () banked
  3698  0191A2  8FF8               	bsf	248,7,b	;volatile
  3699                           
  3700                           ; BSR set to: 62
  3701                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  3702  0191A4  81F8               	bsf	248,0,b	;volatile
  3703                           
  3704                           ; BSR set to: 62
  3705                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  3706  0191A6  52E5               	movf	postdec1,f,c
  3707  0191A8  0012               	return		;funcret
  3708  0191AA                     __end_of_ADCC_StartConversion:
  3709                           	opt callstack 0
  3710                           
  3711 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  3712 ;; Defined at:
  3713 ;;		line 189 in file "mcc_generated_files/adcc.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;		None
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;		None
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1  [STACK] void 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 3F/3E
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3731 ;;Total ram usage:        0 bytes
  3732 ;; Hardware stack levels used:    1
  3733 ;; Hardware stack levels required when called:    7
  3734 ;; This function calls:
  3735 ;;		Nothing
  3736 ;; This function is called by:
  3737 ;;		_start_adc_scan
  3738 ;;		_adc_int_t_handler
  3739 ;; This function uses a reentrant model
  3740 ;;
  3741                           
  3742                           	psect	text5
  3743  019232                     __ptext5:
  3744                           	opt callstack 0
  3745  019232                     _ADCC_DischargeSampleCapacitor:
  3746                           	opt callstack 4
  3747                           
  3748                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  3749                           
  3750                           ; BSR set to: 62
  3751                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3752                           ;incstack = 0
  3753  019232  0E3B               	movlw	59
  3754  019234  013E               	movlb	62	; () banked
  3755  019236  6FF1               	movwf	241,b	;volatile
  3756                           
  3757                           ; BSR set to: 62
  3758                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  3759  019238  0012               	return		;funcret
  3760  01923A                     __end_of_ADCC_DischargeSampleCapacitor:
  3761                           	opt callstack 0
  3762                           
  3763 ;; *************** function _srand *****************
  3764 ;; Defined at:
  3765 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  s               2  [STACK] unsigned int 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1  [STACK] void 
  3772 ;; Registers used:
  3773 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  3774 ;; Tracked objects:
  3775 ;;		On entry : 3F/0
  3776 ;;		On exit  : 3F/1
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3782 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3783 ;;Total ram usage:        0 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    7
  3786 ;; This function calls:
  3787 ;;		Nothing
  3788 ;; This function is called by:
  3789 ;;		_main
  3790 ;; This function uses a reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text6
  3794  0189FC                     __ptext6:
  3795                           	opt callstack 0
  3796  0189FC                     _srand:
  3797                           	opt callstack 23
  3798                           
  3799                           ;stkvar	_s @ sp[(0)+-2]
  3800                           
  3801                           ; BSR set to: 62
  3802                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3803                           ;incstack = 0
  3804  0189FC  0EFE               	movlw	-2
  3805  0189FE  50E3               	movf	plusw1,w,c
  3806  018A00  0FFF               	addlw	255
  3807  018A02  6E2F               	movwf	(btemp+10)^0,c
  3808  018A04  0EFF               	movlw	-1
  3809  018A06  006F FF8C  F030    	movff	plusw1,btemp+11
  3810  018A0C  0EFF               	movlw	255
  3811  018A0E  2230               	addwfc	(btemp+11)^0,f,c
  3812  018A10  0060  F0BC  F1C9   	movff	btemp+10,_seed
  3813  018A16  0060  F0C0  F1CA   	movff	btemp+11,_seed+1
  3814  018A1C  0101               	movlb	1	; () banked
  3815  018A1E  6BCB               	clrf	(_seed+2)& (0+255),b
  3816  018A20  6BCC               	clrf	(_seed+3)& (0+255),b
  3817  018A22  6BCD               	clrf	(_seed+4)& (0+255),b
  3818  018A24  6BCE               	clrf	(_seed+5)& (0+255),b
  3819  018A26  6BCF               	clrf	(_seed+6)& (0+255),b
  3820  018A28  6BD0               	clrf	(_seed+7)& (0+255),b
  3821                           
  3822                           ; BSR set to: 1
  3823                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  3824  018A2A  52E5               	movf	postdec1,f,c
  3825  018A2C  52E5               	movf	postdec1,f,c
  3826  018A2E  0012               	return		;funcret
  3827  018A30                     __end_of_srand:
  3828                           	opt callstack 0
  3829                           
  3830 ;; *************** function _init_display *****************
  3831 ;; Defined at:
  3832 ;;		line 37 in file "eadog.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;		None
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1  [STACK] void 
  3839 ;; Registers used:
  3840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/2
  3843 ;;		On exit  : 3F/3D
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3850 ;;Total ram usage:        0 bytes
  3851 ;; Hardware stack levels used:    1
  3852 ;; Hardware stack levels required when called:    9
  3853 ;; This function calls:
  3854 ;;		_ringBufS_init
  3855 ;;		_send_lcd_cmd
  3856 ;;		_send_lcd_cmd_long
  3857 ;;		_wdtdelay
  3858 ;; This function is called by:
  3859 ;;		_main
  3860 ;; This function uses a reentrant model
  3861 ;;
  3862                           
  3863                           	psect	text7
  3864  0172AE                     __ptext7:
  3865                           	opt callstack 0
  3866  0172AE                     _init_display:
  3867                           	opt callstack 21
  3868                           
  3869                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  3870                           
  3871                           ; BSR set to: 1
  3872                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3873                           ;incstack = 0
  3874  0172AE  0E43               	movlw	low _ring_buf1
  3875  0172B0  0100               	movlb	0	; () banked
  3876  0172B2  6F8F               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3877  0172B4  0E04               	movlw	high _ring_buf1
  3878  0172B6  6F90               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3879                           
  3880                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  3881  0172B8  0E00               	movlw	low _ring_buf2
  3882  0172BA  6F8D               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3883  0172BC  0E04               	movlw	high _ring_buf2
  3884  0172BE  6F8E               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3885                           
  3886                           ; BSR set to: 0
  3887                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  3888  0172C0  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  3889  0172C6  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  3890  0172CC  EC11  F0C6         	call	_ringBufS_init	;wreg free
  3891                           
  3892                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  3893  0172D0  0060  F237  FFE6   	movff	_spi_link+4,postinc1
  3894  0172D6  0060  F23B  FFE6   	movff	_spi_link+5,postinc1
  3895  0172DC  EC11  F0C6         	call	_ringBufS_init	;wreg free
  3896                           
  3897                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  3898  0172E0  84BE               	bsf	190,2,c	;volatile
  3899  0172E2  84BC               	bsf	188,2,c	;volatile
  3900                           
  3901                           ;eadog.c: 58:  wdtdelay(350000);
  3902  0172E4  0E30               	movlw	48
  3903  0172E6  6EE6               	movwf	postinc1,c
  3904  0172E8  0E57               	movlw	87
  3905  0172EA  6EE6               	movwf	postinc1,c
  3906  0172EC  0E05               	movlw	5
  3907  0172EE  6EE6               	movwf	postinc1,c
  3908  0172F0  0E00               	movlw	0
  3909  0172F2  6EE6               	movwf	postinc1,c
  3910  0172F4  ECC0  F0C1         	call	_wdtdelay	;wreg free
  3911                           
  3912                           ; BSR set to: 0
  3913                           ;eadog.c: 59:  send_lcd_cmd(0x39);
  3914  0172F8  0E39               	movlw	57
  3915  0172FA  6EE6               	movwf	postinc1,c
  3916  0172FC  ECFD  F0C5         	call	_send_lcd_cmd	;wreg free
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;eadog.c: 60:  send_lcd_cmd(0x1d);
  3920  017300  0E1D               	movlw	29
  3921  017302  6EE6               	movwf	postinc1,c
  3922  017304  ECFD  F0C5         	call	_send_lcd_cmd	;wreg free
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;eadog.c: 61:  send_lcd_cmd(0x50);
  3926  017308  0E50               	movlw	80
  3927  01730A  6EE6               	movwf	postinc1,c
  3928  01730C  ECFD  F0C5         	call	_send_lcd_cmd	;wreg free
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;eadog.c: 62:  send_lcd_cmd(0x6c);
  3932  017310  0E6C               	movlw	108
  3933  017312  6EE6               	movwf	postinc1,c
  3934  017314  ECFD  F0C5         	call	_send_lcd_cmd	;wreg free
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;eadog.c: 63:  send_lcd_cmd(0x76);
  3938  017318  0E76               	movlw	118
  3939  01731A  6EE6               	movwf	postinc1,c
  3940  01731C  ECFD  F0C5         	call	_send_lcd_cmd	;wreg free
  3941                           
  3942                           ; BSR set to: 0
  3943                           ;eadog.c: 64:  send_lcd_cmd_long(0x38);
  3944  017320  0E38               	movlw	56
  3945  017322  6EE6               	movwf	postinc1,c
  3946  017324  ECE9  F0C5         	call	_send_lcd_cmd_long	;wreg free
  3947                           
  3948                           ; BSR set to: 0
  3949                           ;eadog.c: 65:  send_lcd_cmd(0x0f);
  3950  017328  0E0F               	movlw	15
  3951  01732A  6EE6               	movwf	postinc1,c
  3952  01732C  ECFD  F0C5         	call	_send_lcd_cmd	;wreg free
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;eadog.c: 66:  send_lcd_cmd_long(0x01);
  3956  017330  0E01               	movlw	1
  3957  017332  6EE6               	movwf	postinc1,c
  3958  017334  ECE9  F0C5         	call	_send_lcd_cmd_long	;wreg free
  3959                           
  3960                           ; BSR set to: 0
  3961                           ;eadog.c: 67:  send_lcd_cmd(0x02);
  3962  017338  0E02               	movlw	2
  3963  01733A  6EE6               	movwf	postinc1,c
  3964  01733C  ECFD  F0C5         	call	_send_lcd_cmd	;wreg free
  3965                           
  3966                           ; BSR set to: 0
  3967                           ;eadog.c: 68:  send_lcd_cmd(0x06);
  3968  017340  0E06               	movlw	6
  3969  017342  6EE6               	movwf	postinc1,c
  3970  017344  ECFD  F0C5         	call	_send_lcd_cmd	;wreg free
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;eadog.c: 69:  wdtdelay(30);
  3974  017348  0E1E               	movlw	30
  3975  01734A  6EE6               	movwf	postinc1,c
  3976  01734C  0E00               	movlw	0
  3977  01734E  6EE6               	movwf	postinc1,c
  3978  017350  0E00               	movlw	0
  3979  017352  6EE6               	movwf	postinc1,c
  3980  017354  0E00               	movlw	0
  3981  017356  6EE6               	movwf	postinc1,c
  3982  017358  ECC0  F0C1         	call	_wdtdelay	;wreg free
  3983                           
  3984                           ; BSR set to: 0
  3985                           ;eadog.c: 70:  SPI1CON2 = 0x02;
  3986  01735C  0E02               	movlw	2
  3987  01735E  013D               	movlb	61	; () banked
  3988  017360  6F16               	movwf	22,b	;volatile
  3989                           
  3990                           ; BSR set to: 61
  3991                           ;eadog.c: 71:  SPI1CON1 = 0x40;
  3992  017362  0E40               	movlw	64
  3993  017364  6F15               	movwf	21,b	;volatile
  3994                           
  3995                           ; BSR set to: 61
  3996                           ;eadog.c: 72:  SPI1CON0 = 0x83;
  3997  017366  0E83               	movlw	131
  3998  017368  6F14               	movwf	20,b	;volatile
  3999                           
  4000                           ; BSR set to: 61
  4001                           ;eadog.c: 74:  SPI1INTFbits.SPI1TXUIF = 0;
  4002  01736A  931A               	bcf	26,1,b	;volatile
  4003                           
  4004                           ; BSR set to: 61
  4005                           ;eadog.c: 75:  DMA1CON1bits.DMODE = 0;
  4006  01736C  0E3F               	movlw	-193
  4007  01736E  013B               	movlb	59	; () banked
  4008  017370  17FD               	andwf	253,f,b	;volatile
  4009                           
  4010                           ; BSR set to: 59
  4011                           ;eadog.c: 76:  DMA1CON1bits.DSTP = 0;
  4012  017372  9BFD               	bcf	253,5,b	;volatile
  4013                           
  4014                           ; BSR set to: 59
  4015                           ;eadog.c: 77:  DMA1CON1bits.SMODE = 1;
  4016  017374  51FD               	movf	253,w,b	;volatile
  4017  017376  0BF9               	andlw	-7
  4018  017378  0902               	iorlw	2
  4019  01737A  6FFD               	movwf	253,b	;volatile
  4020                           
  4021                           ; BSR set to: 59
  4022                           ;eadog.c: 78:  DMA1CON1bits.SMR = 0;
  4023  01737C  0EE7               	movlw	-25
  4024  01737E  17FD               	andwf	253,f,b	;volatile
  4025                           
  4026                           ; BSR set to: 59
  4027                           ;eadog.c: 79:  DMA1CON1bits.SSTP = 1;
  4028  017380  81FD               	bsf	253,0,b	;volatile
  4029                           
  4030                           ; BSR set to: 59
  4031                           ;eadog.c: 80:  DMA1SSA = (uint32_t) & ring_buf1;
  4032  017382  0E43               	movlw	low _ring_buf1
  4033  017384  6FF9               	movwf	249,b	;volatile
  4034  017386  0E04               	movlw	high _ring_buf1
  4035  017388  6FFA               	movwf	250,b	;volatile
  4036  01738A  0E00               	movlw	low (_ring_buf1 shr (0+16))
  4037  01738C  6FFB               	movwf	251,b	;volatile
  4038                           
  4039                           ; BSR set to: 59
  4040                           ;eadog.c: 81:  DMA1CON0bits.DGO = 0;
  4041  01738E  9BFC               	bcf	252,5,b	;volatile
  4042                           
  4043                           ; BSR set to: 59
  4044                           ;eadog.c: 82:  SPI1INTFbits.SPI1TXUIF = 1;
  4045  017390  013D               	movlb	61	; () banked
  4046  017392  831A               	bsf	26,1,b	;volatile
  4047                           
  4048                           ; BSR set to: 61
  4049                           ;eadog.c: 83:  LATEbits.LATE2 = 0;
  4050  017394  94BE               	bcf	190,2,c	;volatile
  4051                           
  4052                           ; BSR set to: 61
  4053                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4054  017396  0012               	return		;funcret
  4055  017398                     __end_of_init_display:
  4056                           	opt callstack 0
  4057                           
  4058 ;; *************** function _send_lcd_cmd_long *****************
  4059 ;; Defined at:
  4060 ;;		line 127 in file "eadog.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;  cmd             1  [STACK] const unsigned char 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;		None
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  1  [STACK] void 
  4067 ;; Registers used:
  4068 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4069 ;; Tracked objects:
  4070 ;;		On entry : 3F/0
  4071 ;;		On exit  : 3F/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4078 ;;Total ram usage:        0 bytes
  4079 ;; Hardware stack levels used:    1
  4080 ;; Hardware stack levels required when called:    8
  4081 ;; This function calls:
  4082 ;;		_SPI1_Exchange8bit
  4083 ;;		_wdtdelay
  4084 ;; This function is called by:
  4085 ;;		_init_display
  4086 ;; This function uses a reentrant model
  4087 ;;
  4088                           
  4089                           	psect	text8
  4090  018BD2                     __ptext8:
  4091                           	opt callstack 0
  4092  018BD2                     _send_lcd_cmd_long:
  4093                           	opt callstack 21
  4094                           
  4095                           ; BSR set to: 61
  4096                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4097                           ;incstack = 0
  4098                           ;eadog.c: 127: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 128: {;eadog.c:
      +                           129:  do { LATCbits.LATC1 = 0; } while(0);
  4099  018BD2  92BC               	bcf	188,1,c	;volatile
  4100                           
  4101                           ;eadog.c: 130:  do { LATCbits.LATC2 = 0; } while(0);
  4102  018BD4  94BC               	bcf	188,2,c	;volatile
  4103                           
  4104                           ;eadog.c: 131:  SPI1_Exchange8bit(cmd);
  4105                           ;stkvar	_cmd @ sp[(0)+-1]
  4106  018BD6  0EFF               	movlw	-1
  4107  018BD8  50E3               	movf	plusw1,w,c
  4108  018BDA  6EE6               	movwf	postinc1,c
  4109  018BDC  EC07  F0C8         	call	_SPI1_Exchange8bit	;wreg free
  4110                           
  4111                           ; BSR set to: 57
  4112                           ;eadog.c: 132:  wdtdelay(800);
  4113  018BE0  0E20               	movlw	32
  4114  018BE2  6EE6               	movwf	postinc1,c
  4115  018BE4  0E03               	movlw	3
  4116  018BE6  6EE6               	movwf	postinc1,c
  4117  018BE8  0E00               	movlw	0
  4118  018BEA  6EE6               	movwf	postinc1,c
  4119  018BEC  0E00               	movlw	0
  4120  018BEE  6EE6               	movwf	postinc1,c
  4121  018BF0  ECC0  F0C1         	call	_wdtdelay	;wreg free
  4122                           
  4123                           ; BSR set to: 0
  4124  018BF4  82BC               	bsf	188,1,c	;volatile
  4125                           
  4126                           ; BSR set to: 0
  4127                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4128  018BF6  52E5               	movf	postdec1,f,c
  4129  018BF8  0012               	return		;funcret
  4130  018BFA                     __end_of_send_lcd_cmd_long:
  4131                           	opt callstack 0
  4132                           
  4133 ;; *************** function _send_lcd_cmd *****************
  4134 ;; Defined at:
  4135 ;;		line 115 in file "eadog.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  cmd             1  [STACK] const unsigned char 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1  [STACK] void 
  4142 ;; Registers used:
  4143 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  4144 ;; Tracked objects:
  4145 ;;		On entry : 3F/0
  4146 ;;		On exit  : 3F/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4153 ;;Total ram usage:        0 bytes
  4154 ;; Hardware stack levels used:    1
  4155 ;; Hardware stack levels required when called:    8
  4156 ;; This function calls:
  4157 ;;		_SPI1_Exchange8bit
  4158 ;;		_wdtdelay
  4159 ;; This function is called by:
  4160 ;;		_init_display
  4161 ;; This function uses a reentrant model
  4162 ;;
  4163                           
  4164                           	psect	text9
  4165  018BFA                     __ptext9:
  4166                           	opt callstack 0
  4167  018BFA                     _send_lcd_cmd:
  4168                           	opt callstack 21
  4169                           
  4170                           ; BSR set to: 0
  4171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4172                           ;incstack = 0
  4173                           ;eadog.c: 115: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 116: {;eadog.c: 117:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  4174  018BFA  92BC               	bcf	188,1,c	;volatile
  4175                           
  4176                           ;eadog.c: 118:  do { LATCbits.LATC2 = 0; } while(0);
  4177  018BFC  94BC               	bcf	188,2,c	;volatile
  4178                           
  4179                           ;eadog.c: 119:  SPI1_Exchange8bit(cmd);
  4180                           ;stkvar	_cmd @ sp[(0)+-1]
  4181  018BFE  0EFF               	movlw	-1
  4182  018C00  50E3               	movf	plusw1,w,c
  4183  018C02  6EE6               	movwf	postinc1,c
  4184  018C04  EC07  F0C8         	call	_SPI1_Exchange8bit	;wreg free
  4185                           
  4186                           ; BSR set to: 57
  4187                           ;eadog.c: 120:  wdtdelay(30);
  4188  018C08  0E1E               	movlw	30
  4189  018C0A  6EE6               	movwf	postinc1,c
  4190  018C0C  0E00               	movlw	0
  4191  018C0E  6EE6               	movwf	postinc1,c
  4192  018C10  0E00               	movlw	0
  4193  018C12  6EE6               	movwf	postinc1,c
  4194  018C14  0E00               	movlw	0
  4195  018C16  6EE6               	movwf	postinc1,c
  4196  018C18  ECC0  F0C1         	call	_wdtdelay	;wreg free
  4197                           
  4198                           ; BSR set to: 0
  4199  018C1C  82BC               	bsf	188,1,c	;volatile
  4200                           
  4201                           ; BSR set to: 0
  4202                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  4203  018C1E  52E5               	movf	postdec1,f,c
  4204  018C20  0012               	return		;funcret
  4205  018C22                     __end_of_send_lcd_cmd:
  4206                           	opt callstack 0
  4207                           
  4208 ;; *************** function _SPI1_Exchange8bit *****************
  4209 ;; Defined at:
  4210 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4211 ;; Parameters:    Size  Location     Type
  4212 ;;  data            1  [STACK] unsigned char 
  4213 ;; Auto vars:     Size  Location     Type
  4214 ;;		None
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  1  [STACK] unsigned char 
  4217 ;; Registers used:
  4218 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 3F/39
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4228 ;;Total ram usage:        0 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; Hardware stack levels required when called:    7
  4231 ;; This function calls:
  4232 ;;		Nothing
  4233 ;; This function is called by:
  4234 ;;		_send_lcd_cmd
  4235 ;;		_send_lcd_cmd_long
  4236 ;; This function uses a reentrant model
  4237 ;;
  4238                           
  4239                           	psect	text10
  4240  01900E                     __ptext10:
  4241                           	opt callstack 0
  4242  01900E                     _SPI1_Exchange8bit:
  4243                           	opt callstack 21
  4244                           
  4245                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4246                           
  4247                           ; BSR set to: 0
  4248                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4249                           ;incstack = 0
  4250  01900E  0E01               	movlw	1
  4251  019010  013D               	movlb	61	; () banked
  4252  019012  6F12               	movwf	18,b	;volatile
  4253                           
  4254                           ; BSR set to: 61
  4255                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4256                           ;stkvar	_data @ sp[(0)+-1]
  4257  019014  0EFF               	movlw	-1
  4258  019016  006F FF8F FD11     	movff	plusw1,15633	;volatile
  4259  01901C                     l837:
  4260                           
  4261                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4262  01901C  0139               	movlb	57	; () banked
  4263  01901E  A9A2               	btfss	162,4,b	;volatile
  4264  019020  D7FD               	goto	l837
  4265                           
  4266                           ; BSR set to: 57
  4267                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4268  019022  006F F440  F025    	movff	15632,btemp	;volatile
  4269                           
  4270                           ; BSR set to: 57
  4271                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4272  019028  52E5               	movf	postdec1,f,c
  4273  01902A  0012               	return		;funcret
  4274  01902C                     __end_of_SPI1_Exchange8bit:
  4275                           	opt callstack 0
  4276                           
  4277 ;; *************** function _ringBufS_init *****************
  4278 ;; Defined at:
  4279 ;;		line 22 in file "ringbufs.c"
  4280 ;; Parameters:    Size  Location     Type
  4281 ;;  _this           2  [STACK] PTR volatile struct ring
  4282 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4283 ;; Auto vars:     Size  Location     Type
  4284 ;;		None
  4285 ;; Return value:  Size  Location     Type
  4286 ;;                  1  [STACK] void 
  4287 ;; Registers used:
  4288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4289 ;; Tracked objects:
  4290 ;;		On entry : 0/0
  4291 ;;		On exit  : 0/0
  4292 ;;		Unchanged: 0/0
  4293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4298 ;;Total ram usage:        0 bytes
  4299 ;; Hardware stack levels used:    1
  4300 ;; Hardware stack levels required when called:    8
  4301 ;; This function calls:
  4302 ;;		_memset
  4303 ;; This function is called by:
  4304 ;;		_init_display
  4305 ;; This function uses a reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text11
  4309  018C22                     __ptext11:
  4310                           	opt callstack 0
  4311  018C22                     _ringBufS_init:
  4312                           	opt callstack 21
  4313                           
  4314                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  4315                           
  4316                           ; BSR set to: 57
  4317                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4318                           ;incstack = 0
  4319  018C22  0E43               	movlw	67
  4320  018C24  6EE6               	movwf	postinc1,c
  4321  018C26  0E00               	movlw	0
  4322  018C28  6EE6               	movwf	postinc1,c
  4323  018C2A  0E00               	movlw	0
  4324  018C2C  6EE6               	movwf	postinc1,c
  4325  018C2E  0E00               	movlw	0
  4326  018C30  6EE6               	movwf	postinc1,c
  4327                           
  4328                           ;stkvar	__this @ sp[(-4)+-2]
  4329  018C32  0EFA               	movlw	-6
  4330  018C34  006F FF8F FFE6     	movff	plusw1,postinc1
  4331  018C3A  006F FF8F FFE6     	movff	plusw1,postinc1
  4332  018C40  ECE1  F0A5         	call	_memset	;wreg free
  4333                           
  4334                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4335  018C44  52E5               	movf	postdec1,f,c
  4336  018C46  52E5               	movf	postdec1,f,c
  4337  018C48  0012               	return		;funcret
  4338  018C4A                     __end_of_ringBufS_init:
  4339                           	opt callstack 0
  4340                           
  4341 ;; *************** function _init_bsoc *****************
  4342 ;; Defined at:
  4343 ;;		line 17 in file "bsoc.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;		None
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;		None
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1  [STACK] void 
  4350 ;; Registers used:
  4351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
  4352 ;; Tracked objects:
  4353 ;;		On entry : 3F/1
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4361 ;;Total ram usage:        0 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    8
  4364 ;; This function calls:
  4365 ;;		_TMR3_SetInterruptHandler
  4366 ;; This function is called by:
  4367 ;;		_main
  4368 ;; This function uses a reentrant model
  4369 ;;
  4370                           
  4371                           	psect	text12
  4372  0191AA                     __ptext12:
  4373                           	opt callstack 0
  4374  0191AA                     _init_bsoc:
  4375                           	opt callstack 22
  4376                           
  4377                           ;bsoc.c: 19:  TMR3_SetInterruptHandler(calc_bsoc);
  4378                           
  4379                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4380                           ;incstack = 0
  4381  0191AA  0E6C               	movlw	low _calc_bsoc
  4382  0191AC  6EE6               	movwf	postinc1,c
  4383  0191AE  0E74               	movlw	high _calc_bsoc
  4384  0191B0  6EE6               	movwf	postinc1,c
  4385  0191B2  0E01               	movlw	low (_calc_bsoc shr (0+16))
  4386  0191B4  6EE6               	movwf	postinc1,c
  4387  0191B6  ECC5  F0C6         	call	_TMR3_SetInterruptHandler	;wreg free
  4388                           
  4389                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4390  0191BA  0012               	return		;funcret
  4391  0191BC                     __end_of_init_bsoc:
  4392                           	opt callstack 0
  4393                           
  4394 ;; *************** function _hid_display *****************
  4395 ;; Defined at:
  4396 ;;		line 17 in file "hid.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;  h               1  [STACK] PTR struct H_data
  4399 ;;		 -> H(7), 
  4400 ;; Auto vars:     Size  Location     Type
  4401 ;;		None
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  1  [STACK] PTR struct H_data
  4404 ;; Registers used:
  4405 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  4406 ;; Tracked objects:
  4407 ;;		On entry : 3F/1
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4415 ;;Total ram usage:        0 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; Hardware stack levels required when called:    9
  4418 ;; This function calls:
  4419 ;;		_hid_input
  4420 ;; This function is called by:
  4421 ;;		_main
  4422 ;; This function uses a reentrant model
  4423 ;;
  4424                           
  4425                           	psect	text13
  4426  0170B0                     __ptext13:
  4427                           	opt callstack 0
  4428  0170B0                     _hid_display:
  4429                           	opt callstack 21
  4430                           
  4431                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  4432                           ;stkvar	_h @ sp[(0)+-1]
  4433                           
  4434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4435                           ;incstack = 0
  4436  0170B0  0EFF               	movlw	-1
  4437  0170B2  50E3               	movf	plusw1,w,c
  4438  0170B4  6EE6               	movwf	postinc1,c
  4439  0170B6  ECA9  F0BE         	call	_hid_input	;wreg free
  4440                           
  4441                           ;hid.c: 21:  switch (h->h_state) {
  4442  0170BA  D066               	goto	l9459
  4443  0170BC                     l9437:
  4444                           
  4445                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  4446                           ;stkvar	_h @ sp[(0)+-1]
  4447  0170BC  0EFF               	movlw	-1
  4448  0170BE  50E3               	movf	plusw1,w,c
  4449  0170C0  6ED9               	movwf	fsr2l,c
  4450  0170C2  6ADA               	clrf	fsr2h,c
  4451  0170C4  0E01               	movlw	1
  4452  0170C6  26D9               	addwf	fsr2l,f,c
  4453  0170C8  0E01               	movlw	1
  4454  0170CA  6EDF               	movwf	indf2,c
  4455                           
  4456                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  4457                           ;stkvar	_h @ sp[(0)+-1]
  4458  0170CC  0EFF               	movlw	-1
  4459  0170CE  50E3               	movf	plusw1,w,c
  4460  0170D0  6ED9               	movwf	fsr2l,c
  4461  0170D2  6ADA               	clrf	fsr2h,c
  4462  0170D4  0E00               	movlw	0
  4463  0170D6  6EDF               	movwf	indf2,c
  4464                           
  4465                           ;hid.c: 25:   h->wait_enter = 1;
  4466                           ;stkvar	_h @ sp[(0)+-1]
  4467  0170D8  0EFF               	movlw	-1
  4468  0170DA  50E3               	movf	plusw1,w,c
  4469  0170DC  6ED9               	movwf	fsr2l,c
  4470  0170DE  6ADA               	clrf	fsr2h,c
  4471  0170E0  0E04               	movlw	4
  4472  0170E2  26D9               	addwf	fsr2l,f,c
  4473  0170E4  0E01               	movlw	1
  4474  0170E6  6EDF               	movwf	indf2,c
  4475                           
  4476                           ;hid.c: 26:   h->wait_select = 1;
  4477                           ;stkvar	_h @ sp[(0)+-1]
  4478  0170E8  0EFF               	movlw	-1
  4479  0170EA  50E3               	movf	plusw1,w,c
  4480  0170EC  6ED9               	movwf	fsr2l,c
  4481  0170EE  6ADA               	clrf	fsr2h,c
  4482  0170F0  0E02               	movlw	2
  4483  0170F2  26D9               	addwf	fsr2l,f,c
  4484  0170F4  0E01               	movlw	1
  4485  0170F6  6EDF               	movwf	indf2,c
  4486                           
  4487                           ;hid.c: 27:   h->select_p = SW_OFF;
  4488                           ;stkvar	_h @ sp[(0)+-1]
  4489  0170F8  0EFF               	movlw	-1
  4490  0170FA  50E3               	movf	plusw1,w,c
  4491  0170FC  6ED9               	movwf	fsr2l,c
  4492  0170FE  6ADA               	clrf	fsr2h,c
  4493  017100  0E03               	movlw	3
  4494  017102  26D9               	addwf	fsr2l,f,c
  4495  017104  0E00               	movlw	0
  4496  017106  6EDF               	movwf	indf2,c
  4497                           
  4498                           ;hid.c: 28:   h->enter_p = SW_OFF;
  4499                           ;stkvar	_h @ sp[(0)+-1]
  4500  017108  0EFF               	movlw	-1
  4501  01710A  50E3               	movf	plusw1,w,c
  4502  01710C  6ED9               	movwf	fsr2l,c
  4503  01710E  6ADA               	clrf	fsr2h,c
  4504  017110  0E05               	movlw	5
  4505  017112  26D9               	addwf	fsr2l,f,c
  4506  017114  0E00               	movlw	0
  4507  017116  D036               	goto	L1
  4508  017118                     l9449:
  4509                           
  4510                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  4511                           ;stkvar	_h @ sp[(0)+-1]
  4512  017118  0EFF               	movlw	-1
  4513  01711A  50E3               	movf	plusw1,w,c
  4514  01711C  6ED9               	movwf	fsr2l,c
  4515  01711E  6ADA               	clrf	fsr2h,c
  4516  017120  0E02               	movlw	2
  4517  017122  26D9               	addwf	fsr2l,f,c
  4518  017124  50DF               	movf	indf2,w,c
  4519  017126  A4D8               	btfss	status,2,c
  4520  017128  D042               	goto	l1902
  4521                           
  4522                           ;stkvar	_h @ sp[(0)+-1]
  4523  01712A  0EFF               	movlw	-1
  4524  01712C  50E3               	movf	plusw1,w,c
  4525  01712E  6ED9               	movwf	fsr2l,c
  4526  017130  6ADA               	clrf	fsr2h,c
  4527  017132  0E03               	movlw	3
  4528  017134  26D9               	addwf	fsr2l,f,c
  4529  017136  50DF               	movf	indf2,w,c
  4530  017138  A4D8               	btfss	status,2,c
  4531  01713A  D039               	goto	l1902
  4532                           
  4533                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  4534                           ;stkvar	_h @ sp[(0)+-1]
  4535  01713C  0EFF               	movlw	-1
  4536  01713E  50E3               	movf	plusw1,w,c
  4537  017140  6ED9               	movwf	fsr2l,c
  4538  017142  6ADA               	clrf	fsr2h,c
  4539  017144  0E06               	movlw	6
  4540  017146  26D9               	addwf	fsr2l,f,c
  4541                           
  4542                           ;stkvar	_h @ sp[(0)+-1]
  4543  017148  0EFF               	movlw	-1
  4544  01714A  50E3               	movf	plusw1,w,c
  4545  01714C  6EE9               	movwf	fsr0l,c
  4546  01714E  6AEA               	clrf	fsr0h,c
  4547  017150  0E06               	movlw	6
  4548  017152  26E9               	addwf	fsr0l,f,c
  4549  017154  2AEF               	incf	indf0,f,c
  4550  017156  50EF               	movf	indf0,w,c
  4551  017158  0B03               	andlw	3
  4552  01715A  6EDF               	movwf	indf2,c
  4553                           
  4554                           ;hid.c: 34:    h->hid_display = h->sequence;
  4555                           ;stkvar	_h @ sp[(0)+-1]
  4556  01715C  0EFF               	movlw	-1
  4557  01715E  50E3               	movf	plusw1,w,c
  4558  017160  6ED9               	movwf	fsr2l,c
  4559  017162  6ADA               	clrf	fsr2h,c
  4560  017164  0E06               	movlw	6
  4561  017166  26D9               	addwf	fsr2l,f,c
  4562                           
  4563                           ;stkvar	_h @ sp[(0)+-1]
  4564  017168  0EFF               	movlw	-1
  4565  01716A  50E3               	movf	plusw1,w,c
  4566  01716C  6EE9               	movwf	fsr0l,c
  4567  01716E  6AEA               	clrf	fsr0h,c
  4568  017170  006F FF7F FFEF     	movff	indf2,indf0
  4569                           
  4570                           ;hid.c: 35:    h->wait_select = 1;
  4571                           ;stkvar	_h @ sp[(0)+-1]
  4572  017176  0EFF               	movlw	-1
  4573  017178  50E3               	movf	plusw1,w,c
  4574  01717A  6ED9               	movwf	fsr2l,c
  4575  01717C  6ADA               	clrf	fsr2h,c
  4576  01717E  0E02               	movlw	2
  4577  017180  26D9               	addwf	fsr2l,f,c
  4578  017182  0E01               	movlw	1
  4579  017184                     L1:
  4580  017184  6EDF               	movwf	indf2,c
  4581  017186  D013               	goto	l1902
  4582  017188                     l9459:
  4583                           
  4584                           ;stkvar	_h @ sp[(0)+-1]
  4585  017188  0EFF               	movlw	-1
  4586  01718A  50E3               	movf	plusw1,w,c
  4587  01718C  6ED9               	movwf	fsr2l,c
  4588  01718E  6ADA               	clrf	fsr2h,c
  4589  017190  0E01               	movlw	1
  4590  017192  26D9               	addwf	fsr2l,f,c
  4591  017194  50DF               	movf	indf2,w,c
  4592  017196  6E2F               	movwf	(btemp+10)^0,c
  4593  017198  6A30               	clrf	(btemp+11)^0,c
  4594                           
  4595                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4596                           ; Switch size 1, requested type "simple"
  4597                           ; Number of cases is 1, Range of values is 0 to 0
  4598                           ; switch strategies available:
  4599                           ; Name         Instructions Cycles
  4600                           ; simple_byte            4     3 (average)
  4601                           ;	Chosen strategy is simple_byte
  4602  01719A  5030               	movf	(btemp+11)^0,w,c
  4603  01719C  0A00               	xorlw	0	; case 0
  4604  01719E  A4D8               	btfss	status,2,c
  4605  0171A0  D7BB               	goto	l9449
  4606                           
  4607                           ; Switch size 1, requested type "simple"
  4608                           ; Number of cases is 2, Range of values is 0 to 1
  4609                           ; switch strategies available:
  4610                           ; Name         Instructions Cycles
  4611                           ; simple_byte            7     4 (average)
  4612                           ;	Chosen strategy is simple_byte
  4613  0171A2  502F               	movf	(btemp+10)^0,w,c
  4614  0171A4  0A00               	xorlw	0	; case 0
  4615  0171A6  B4D8               	btfsc	status,2,c
  4616  0171A8  D789               	goto	l9437
  4617  0171AA  0A01               	xorlw	1	; case 1
  4618  0171AC  D7B5               	goto	l9449
  4619  0171AE                     l1902:
  4620                           
  4621                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4622  0171AE  52E5               	movf	postdec1,f,c
  4623  0171B0  0012               	return		;funcret
  4624  0171B2                     __end_of_hid_display:
  4625                           	opt callstack 0
  4626                           
  4627 ;; *************** function _hid_input *****************
  4628 ;; Defined at:
  4629 ;;		line 3 in file "hid.c"
  4630 ;; Parameters:    Size  Location     Type
  4631 ;;  h               1  [STACK] PTR struct H_data
  4632 ;;		 -> H(7), 
  4633 ;; Auto vars:     Size  Location     Type
  4634 ;;		None
  4635 ;; Return value:  Size  Location     Type
  4636 ;;                  1  [STACK] PTR struct H_data
  4637 ;; Registers used:
  4638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  4639 ;; Tracked objects:
  4640 ;;		On entry : 0/1
  4641 ;;		On exit  : 0/0
  4642 ;;		Unchanged: 0/0
  4643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4648 ;;Total ram usage:        0 bytes
  4649 ;; Hardware stack levels used:    1
  4650 ;; Hardware stack levels required when called:    8
  4651 ;; This function calls:
  4652 ;;		_get_switch
  4653 ;; This function is called by:
  4654 ;;		_hid_display
  4655 ;; This function uses a reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text14
  4659  017D52                     __ptext14:
  4660                           	opt callstack 0
  4661  017D52                     _hid_input:
  4662                           	opt callstack 21
  4663                           
  4664                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  4665                           
  4666                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4667                           ;incstack = 0
  4668  017D52  0E02               	movlw	2
  4669  017D54  6EE6               	movwf	postinc1,c
  4670  017D56  EC25  F0C6         	call	_get_switch	;wreg free
  4671  017D5A  5025               	movf	btemp^0,w,c
  4672  017D5C  B4D8               	btfsc	status,2,c
  4673  017D5E  D01C               	goto	l9181
  4674                           
  4675                           ;hid.c: 6:   h->wait_select = 0;
  4676                           ;stkvar	_h @ sp[(0)+-1]
  4677  017D60  0EFF               	movlw	-1
  4678  017D62  50E3               	movf	plusw1,w,c
  4679  017D64  6ED9               	movwf	fsr2l,c
  4680  017D66  6ADA               	clrf	fsr2h,c
  4681  017D68  0E02               	movlw	2
  4682  017D6A  26D9               	addwf	fsr2l,f,c
  4683  017D6C  0E00               	movlw	0
  4684  017D6E  6EDF               	movwf	indf2,c
  4685                           
  4686                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  4687  017D70  0E02               	movlw	2
  4688  017D72  6EE6               	movwf	postinc1,c
  4689  017D74  EC25  F0C6         	call	_get_switch	;wreg free
  4690  017D78  5025               	movf	btemp^0,w,c
  4691  017D7A  B4D8               	btfsc	status,2,c
  4692  017D7C  D003               	goto	u8520
  4693  017D7E  6A30               	clrf	(btemp+11)^0,c
  4694  017D80  2A30               	incf	(btemp+11)^0,f,c
  4695  017D82  D001               	goto	u8538
  4696  017D84                     u8520:
  4697  017D84  6A30               	clrf	(btemp+11)^0,c
  4698  017D86                     u8538:
  4699                           
  4700                           ;stkvar	_h @ sp[(0)+-1]
  4701  017D86  0EFF               	movlw	-1
  4702  017D88  50E3               	movf	plusw1,w,c
  4703  017D8A  6ED9               	movwf	fsr2l,c
  4704  017D8C  6ADA               	clrf	fsr2h,c
  4705  017D8E  0E03               	movlw	3
  4706  017D90  26D9               	addwf	fsr2l,f,c
  4707  017D92  0060  F0C3  FFDF   	movff	btemp+11,indf2
  4708  017D98                     l9181:
  4709                           
  4710                           ;hid.c: 10:  if (get_switch(SENTER)) {
  4711  017D98  0E03               	movlw	3
  4712  017D9A  6EE6               	movwf	postinc1,c
  4713  017D9C  EC25  F0C6         	call	_get_switch	;wreg free
  4714  017DA0  5025               	movf	btemp^0,w,c
  4715  017DA2  B4D8               	btfsc	status,2,c
  4716  017DA4  D01C               	goto	l1893
  4717                           
  4718                           ;hid.c: 11:   h->wait_enter = 0;
  4719                           ;stkvar	_h @ sp[(0)+-1]
  4720  017DA6  0EFF               	movlw	-1
  4721  017DA8  50E3               	movf	plusw1,w,c
  4722  017DAA  6ED9               	movwf	fsr2l,c
  4723  017DAC  6ADA               	clrf	fsr2h,c
  4724  017DAE  0E04               	movlw	4
  4725  017DB0  26D9               	addwf	fsr2l,f,c
  4726  017DB2  0E00               	movlw	0
  4727  017DB4  6EDF               	movwf	indf2,c
  4728                           
  4729                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  4730  017DB6  0E03               	movlw	3
  4731  017DB8  6EE6               	movwf	postinc1,c
  4732  017DBA  EC25  F0C6         	call	_get_switch	;wreg free
  4733  017DBE  5025               	movf	btemp^0,w,c
  4734  017DC0  B4D8               	btfsc	status,2,c
  4735  017DC2  D003               	goto	u8550
  4736  017DC4  6A30               	clrf	(btemp+11)^0,c
  4737  017DC6  2A30               	incf	(btemp+11)^0,f,c
  4738  017DC8  D001               	goto	u8568
  4739  017DCA                     u8550:
  4740  017DCA  6A30               	clrf	(btemp+11)^0,c
  4741  017DCC                     u8568:
  4742                           
  4743                           ;stkvar	_h @ sp[(0)+-1]
  4744  017DCC  0EFF               	movlw	-1
  4745  017DCE  50E3               	movf	plusw1,w,c
  4746  017DD0  6ED9               	movwf	fsr2l,c
  4747  017DD2  6ADA               	clrf	fsr2h,c
  4748  017DD4  0E05               	movlw	5
  4749  017DD6  26D9               	addwf	fsr2l,f,c
  4750  017DD8  0060  F0C3  FFDF   	movff	btemp+11,indf2
  4751  017DDE                     l1893:
  4752                           
  4753                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  4754  017DDE  52E5               	movf	postdec1,f,c
  4755  017DE0  0012               	return		;funcret
  4756  017DE2                     __end_of_hid_input:
  4757                           	opt callstack 0
  4758                           
  4759 ;; *************** function _get_switch *****************
  4760 ;; Defined at:
  4761 ;;		line 18 in file "dio.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  i               1  [STACK] unsigned char 
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;		None
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1  [STACK] enum E17030
  4768 ;; Registers used:
  4769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/2
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4779 ;;Total ram usage:        0 bytes
  4780 ;; Hardware stack levels used:    1
  4781 ;; Hardware stack levels required when called:    7
  4782 ;; This function calls:
  4783 ;;		Nothing
  4784 ;; This function is called by:
  4785 ;;		_main
  4786 ;;		_hid_input
  4787 ;; This function uses a reentrant model
  4788 ;;
  4789                           
  4790                           	psect	text15
  4791  018C4A                     __ptext15:
  4792                           	opt callstack 0
  4793  018C4A                     _get_switch:
  4794                           	opt callstack 21
  4795                           
  4796                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  4797                           ;stkvar	_i @ sp[(0)+-1]
  4798                           
  4799                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4800                           ;incstack = 0
  4801  018C4A  0EFF               	movlw	-1
  4802  018C4C  006F FF8C  F025    	movff	plusw1,btemp
  4803  018C52  0E03               	movlw	3
  4804  018C54  6425               	cpfsgt	btemp^0,c
  4805  018C56  D002               	goto	l8075
  4806                           
  4807                           ;dio.c: 21:   return SW_OFF;
  4808  018C58  0E00               	movlw	0
  4809  018C5A  D008               	goto	L2
  4810  018C5C                     l8075:
  4811                           
  4812                           ;dio.c: 23:  return S.button[i].sw;
  4813                           ;stkvar	_i @ sp[(0)+-1]
  4814  018C5C  0EFF               	movlw	-1
  4815  018C5E  50E3               	movf	plusw1,w,c
  4816  018C60  0D05               	mullw	5
  4817  018C62  50F3               	movf	243,w,c
  4818  018C64  0F60               	addlw	low _S
  4819  018C66  6ED9               	movwf	fsr2l,c
  4820  018C68  6ADA               	clrf	fsr2h,c
  4821  018C6A  50DF               	movf	indf2,w,c
  4822  018C6C                     L2:
  4823  018C6C  6E25               	movwf	btemp^0,c
  4824                           
  4825                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4826  018C6E  52E5               	movf	postdec1,f,c
  4827  018C70  0012               	return		;funcret
  4828  018C72                     __end_of_get_switch:
  4829                           	opt callstack 0
  4830                           
  4831 ;; *************** function _eaDogM_WriteCommand *****************
  4832 ;; Defined at:
  4833 ;;		line 173 in file "eadog.c"
  4834 ;; Parameters:    Size  Location     Type
  4835 ;;  cmd             1  [STACK] const unsigned char 
  4836 ;; Auto vars:     Size  Location     Type
  4837 ;;		None
  4838 ;; Return value:  Size  Location     Type
  4839 ;;                  1  [STACK] void 
  4840 ;; Registers used:
  4841 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4842 ;; Tracked objects:
  4843 ;;		On entry : 3F/3D
  4844 ;;		On exit  : 3F/0
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4851 ;;Total ram usage:        0 bytes
  4852 ;; Hardware stack levels used:    1
  4853 ;; Hardware stack levels required when called:   17
  4854 ;; This function calls:
  4855 ;;		_send_lcd_cmd_dma
  4856 ;; This function is called by:
  4857 ;;		_main
  4858 ;; This function uses a reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text16
  4862  0191CC                     __ptext16:
  4863                           	opt callstack 0
  4864  0191CC                     _eaDogM_WriteCommand:
  4865                           	opt callstack 13
  4866                           
  4867                           ;eadog.c: 173: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 174: {;eadog.c: 175:
      +                            send_lcd_cmd_dma(cmd);
  4868                           ;stkvar	_cmd @ sp[(0)+-1]
  4869                           
  4870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4871                           ;incstack = 0
  4872  0191CC  0EFF               	movlw	-1
  4873  0191CE  50E3               	movf	plusw1,w,c
  4874  0191D0  6EE6               	movwf	postinc1,c
  4875  0191D2  EC47  F0C2         	call	_send_lcd_cmd_dma	;wreg free
  4876                           
  4877                           ; BSR set to: 0
  4878                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  4879  0191D6  52E5               	movf	postdec1,f,c
  4880  0191D8  0012               	return		;funcret
  4881  0191DA                     __end_of_eaDogM_WriteCommand:
  4882                           	opt callstack 0
  4883                           
  4884 ;; *************** function _convert_adc_data *****************
  4885 ;; Defined at:
  4886 ;;		line 40 in file "mbmc.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;		None
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;  i               1  [STACK] unsigned char 
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  1  [STACK] void 
  4893 ;; Registers used:
  4894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/1
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4904 ;;Total ram usage:        0 bytes
  4905 ;; Hardware stack levels used:    1
  4906 ;; Hardware stack levels required when called:   10
  4907 ;; This function calls:
  4908 ;;		_conv_raw_result
  4909 ;;		_lp_filter
  4910 ;; This function is called by:
  4911 ;;		_main
  4912 ;; This function uses a reentrant model
  4913 ;;
  4914                           
  4915                           	psect	text17
  4916  01778E                     __ptext17:
  4917                           	opt callstack 0
  4918  01778E                     _convert_adc_data:
  4919                           	opt callstack 0
  4920                           
  4921                           ; BSR set to: 0
  4922                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4923  01778E  52E6               	movf	postinc1,f,c
  4924                           
  4925                           ;mbmc.c: 42:  uint8_t i = 0;
  4926                           ;stkvar	_i @ sp[(-1)+0]
  4927                           
  4928                           ;incstack = 0
  4929  017790  0EFF               	movlw	-1
  4930  017792  6AE3               	clrf	plusw1,c
  4931  017794                     l9411:
  4932                           
  4933                           ;mbmc.c: 45:   if (V.calib) {
  4934  017794  0102               	movlb	2	; () banked
  4935  017796  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  4936  017798  B4D8               	btfsc	status,2,c
  4937  01779A  D01B               	goto	l9415
  4938                           
  4939                           ; BSR set to: 2
  4940                           ;mbmc.c: 46:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  4941  01779C  0E01               	movlw	1
  4942  01779E  6EE6               	movwf	postinc1,c
  4943                           
  4944                           ;stkvar	_i @ sp[(-2)+0]
  4945  0177A0  0EFE               	movlw	-2
  4946  0177A2  50E3               	movf	plusw1,w,c
  4947  0177A4  6EE6               	movwf	postinc1,c
  4948  0177A6  0E01               	movlw	1
  4949  0177A8  6EE6               	movwf	postinc1,c
  4950                           
  4951                           ;stkvar	_i @ sp[(-4)+0]
  4952  0177AA  0EFC               	movlw	-4
  4953  0177AC  50E3               	movf	plusw1,w,c
  4954  0177AE  6EE6               	movwf	postinc1,c
  4955  0177B0  ECB8  F09D         	call	_conv_raw_result	;wreg free
  4956  0177B4  0060  F097  FFE6   	movff	btemp,postinc1
  4957  0177BA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  4958  0177C0  0060  F09F  FFE6   	movff	btemp+2,postinc1
  4959  0177C6  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  4960  0177CC  ECAC  F0B0         	call	_lp_filter	;wreg free
  4961  0177D0  D01A               	goto	L3
  4962  0177D2                     l9415:
  4963                           
  4964                           ; BSR set to: 2
  4965                           ;mbmc.c: 48:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  4966  0177D2  0E00               	movlw	0
  4967  0177D4  6EE6               	movwf	postinc1,c
  4968                           
  4969                           ;stkvar	_i @ sp[(-2)+0]
  4970  0177D6  0EFE               	movlw	-2
  4971  0177D8  50E3               	movf	plusw1,w,c
  4972  0177DA  6EE6               	movwf	postinc1,c
  4973  0177DC  0E00               	movlw	0
  4974  0177DE  6EE6               	movwf	postinc1,c
  4975                           
  4976                           ;stkvar	_i @ sp[(-4)+0]
  4977  0177E0  0EFC               	movlw	-4
  4978  0177E2  50E3               	movf	plusw1,w,c
  4979  0177E4  6EE6               	movwf	postinc1,c
  4980  0177E6  ECB8  F09D         	call	_conv_raw_result	;wreg free
  4981  0177EA  0060  F097  FFE6   	movff	btemp,postinc1
  4982  0177F0  0060  F09B  FFE6   	movff	btemp+1,postinc1
  4983  0177F6  0060  F09F  FFE6   	movff	btemp+2,postinc1
  4984  0177FC  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  4985  017802  ECAC  F0B0         	call	_lp_filter	;wreg free
  4986  017806                     L3:
  4987                           
  4988                           ;stkvar	_i @ sp[(-1)+0]
  4989  017806  0EFF               	movlw	-1
  4990  017808  50E3               	movf	plusw1,w,c
  4991  01780A  0D04               	mullw	4
  4992  01780C  0E00               	movlw	low _C
  4993  01780E  24F3               	addwf	243,w,c
  4994  017810  6ED9               	movwf	fsr2l,c
  4995  017812  0E01               	movlw	high _C
  4996  017814  20F4               	addwfc	prodh,w,c
  4997  017816  6EDA               	movwf	fsr2h,c
  4998  017818  0060  F097  FFDE   	movff	btemp,postinc2
  4999  01781E  0060  F09B  FFDE   	movff	btemp+1,postinc2
  5000  017824  0060  F09F  FFDE   	movff	btemp+2,postinc2
  5001  01782A  0060  F0A3  FFDE   	movff	btemp+3,postinc2
  5002                           
  5003                           ;mbmc.c: 50:  } while (++i < 16);
  5004                           ;stkvar	_i @ sp[(-1)+0]
  5005  017830  0EFF               	movlw	-1
  5006  017832  2AE3               	incf	plusw1,f,c
  5007  017834  0EFF               	movlw	-1
  5008  017836  006F FF8C  F025    	movff	plusw1,btemp
  5009  01783C  0E0F               	movlw	15
  5010  01783E  6425               	cpfsgt	btemp^0,c
  5011  017840  D7A9               	goto	l9411
  5012                           
  5013                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  5014  017842  52E5               	movf	postdec1,f,c
  5015  017844  0012               	return		;funcret
  5016  017846                     __end_of_convert_adc_data:
  5017                           	opt callstack 0
  5018                           
  5019 ;; *************** function _conv_raw_result *****************
  5020 ;; Defined at:
  5021 ;;		line 80 in file "daq.c"
  5022 ;; Parameters:    Size  Location     Type
  5023 ;;  chan            1  [STACK] const enum E16136
  5024 ;;  to_what         1  [STACK] const enum E16198
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;		None
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  4  [STACK] float 
  5029 ;; Registers used:
  5030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5031 ;; Tracked objects:
  5032 ;;		On entry : 3F/2
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5040 ;;Total ram usage:        0 bytes
  5041 ;; Hardware stack levels used:    1
  5042 ;; Hardware stack levels required when called:    9
  5043 ;; This function calls:
  5044 ;;		___fldiv
  5045 ;;		___flmul
  5046 ;;		___flsub
  5047 ;;		___xxtofl
  5048 ;;		_get_raw_result
  5049 ;;		_nanf
  5050 ;; This function is called by:
  5051 ;;		_convert_adc_data
  5052 ;; This function uses a reentrant model
  5053 ;;
  5054                           
  5055                           	psect	text18
  5056  013B70                     __ptext18:
  5057                           	opt callstack 0
  5058  013B70                     _conv_raw_result:
  5059                           	opt callstack 20
  5060                           
  5061                           ;daq.c: 80: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 81: {;daq.c: 83:  switch (to_what) {
  5062                           
  5063                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5064                           ;incstack = 0
  5065  013B70  D242               	goto	l9111
  5066  013B72                     l9057:
  5067                           
  5068                           ;daq.c: 85:   if (!(0b0011110001110111 >> chan & 0x1))
  5069                           ;stkvar	_chan @ sp[(0)+-1]
  5070  013B72  0EFF               	movlw	-1
  5071  013B74  006F FF8C  F030    	movff	plusw1,btemp+11
  5072  013B7A  0E77               	movlw	119
  5073  013B7C  6E2D               	movwf	(btemp+8)^0,c
  5074  013B7E  0E3C               	movlw	60
  5075  013B80  6E2E               	movwf	(btemp+9)^0,c
  5076  013B82  2A30               	incf	(btemp+11)^0,f,c
  5077  013B84  D003               	goto	u8294
  5078  013B86                     u8295:
  5079  013B86  342E               	rlcf	(btemp+9)^0,w,c
  5080  013B88  322E               	rrcf	(btemp+9)^0,f,c
  5081  013B8A  322D               	rrcf	(btemp+8)^0,f,c
  5082  013B8C                     u8294:
  5083  013B8C  2E30               	decfsz	(btemp+11)^0,f,c
  5084  013B8E  D7FB               	goto	u8295
  5085  013B90  B02D               	btfsc	(btemp+8)^0,0,c
  5086  013B92  D007               	goto	l9063
  5087                           
  5088                           ;daq.c: 86:    return nanf("");
  5089  013B94  0E6B               	movlw	low (STR_39+18)
  5090  013B96  6EE6               	movwf	postinc1,c
  5091  013B98  0EFE               	movlw	high (STR_39+18)
  5092  013B9A  6EE6               	movwf	postinc1,c
  5093  013B9C  EC2F  F0C1         	call	_nanf	;wreg free
  5094  013BA0  D23A               	goto	l1765
  5095  013BA2                     l9063:
  5096                           
  5097                           ;daq.c: 88:   if (0b0000000000000011 >> chan & 0x1) {
  5098                           ;stkvar	_chan @ sp[(0)+-1]
  5099  013BA2  0EFF               	movlw	-1
  5100  013BA4  006F FF8C  F030    	movff	plusw1,btemp+11
  5101  013BAA  0E03               	movlw	3
  5102  013BAC  6E2D               	movwf	(btemp+8)^0,c
  5103  013BAE  0E00               	movlw	0
  5104  013BB0  6E2E               	movwf	(btemp+9)^0,c
  5105  013BB2  2A30               	incf	(btemp+11)^0,f,c
  5106  013BB4  D003               	goto	u8314
  5107  013BB6                     u8315:
  5108  013BB6  342E               	rlcf	(btemp+9)^0,w,c
  5109  013BB8  322E               	rrcf	(btemp+9)^0,f,c
  5110  013BBA  322D               	rrcf	(btemp+8)^0,f,c
  5111  013BBC                     u8314:
  5112  013BBC  2E30               	decfsz	(btemp+11)^0,f,c
  5113  013BBE  D7FB               	goto	u8315
  5114  013BC0  A02D               	btfss	(btemp+8)^0,0,c
  5115  013BC2  D0EB               	goto	l9077
  5116                           
  5117                           ;daq.c: 89:    if (0b0000000000000001 >> chan & 0x1) {
  5118                           ;stkvar	_chan @ sp[(0)+-1]
  5119  013BC4  0EFF               	movlw	-1
  5120  013BC6  006F FF8C  F030    	movff	plusw1,btemp+11
  5121  013BCC  0E01               	movlw	1
  5122  013BCE  6E2D               	movwf	(btemp+8)^0,c
  5123  013BD0  0E00               	movlw	0
  5124  013BD2  6E2E               	movwf	(btemp+9)^0,c
  5125  013BD4  2A30               	incf	(btemp+11)^0,f,c
  5126  013BD6  D003               	goto	u8334
  5127  013BD8                     u8335:
  5128  013BD8  342E               	rlcf	(btemp+9)^0,w,c
  5129  013BDA  322E               	rrcf	(btemp+9)^0,f,c
  5130  013BDC  322D               	rrcf	(btemp+8)^0,f,c
  5131  013BDE                     u8334:
  5132  013BDE  2E30               	decfsz	(btemp+11)^0,f,c
  5133  013BE0  D7FB               	goto	u8335
  5134  013BE2  A02D               	btfss	(btemp+8)^0,0,c
  5135  013BE4  D06D               	goto	l9073
  5136                           
  5137                           ;daq.c: 90:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.08500
      +                          00;
  5138  013BE6  0E7B               	movlw	123
  5139  013BE8  6EE6               	movwf	postinc1,c
  5140  013BEA  0E14               	movlw	20
  5141  013BEC  6EE6               	movwf	postinc1,c
  5142  013BEE  0EAE               	movlw	174
  5143  013BF0  6EE6               	movwf	postinc1,c
  5144  013BF2  0E3D               	movlw	61
  5145  013BF4  6EE6               	movwf	postinc1,c
  5146  013BF6  0060  F38C  F02D   	movff	_R+32,btemp+8	;volatile
  5147  013BFC  0060  F390  F02E   	movff	_R+33,btemp+9	;volatile
  5148  013C02  0E00               	movlw	0
  5149  013C04  BE2E               	btfsc	(btemp+9)^0,7,c
  5150  013C06  0EFF               	movlw	255
  5151  013C08  6E2F               	movwf	(btemp+10)^0,c
  5152  013C0A  6E30               	movwf	(btemp+11)^0,c
  5153  013C0C  0060  F0B7  FFE6   	movff	btemp+8,postinc1
  5154  013C12  0060  F0BB  FFE6   	movff	btemp+9,postinc1
  5155  013C18  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  5156  013C1E  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  5157  013C24  0E01               	movlw	1
  5158  013C26  6EE6               	movwf	postinc1,c
  5159  013C28  ECC6  F0AE         	call	___xxtofl	;wreg free
  5160  013C2C  0060  F097  FFE6   	movff	btemp,postinc1
  5161  013C32  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5162  013C38  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5163  013C3E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5164                           
  5165                           ;stkvar	_chan @ sp[(-8)+-1]
  5166  013C44  0EF7               	movlw	-9
  5167  013C46  50E3               	movf	plusw1,w,c
  5168  013C48  6EE6               	movwf	postinc1,c
  5169  013C4A  EC16  F0C8         	call	_get_raw_result	;wreg free
  5170  013C4E  0060  F094  F02F   	movff	btemp,btemp+10
  5171  013C54  0060  F098  F030   	movff	btemp+1,btemp+11
  5172  013C5A  502F               	movf	(btemp+10)^0,w,c
  5173  013C5C  6E29               	movwf	(btemp+4)^0,c
  5174  013C5E  5030               	movf	(btemp+11)^0,w,c
  5175  013C60  6E2A               	movwf	(btemp+5)^0,c
  5176  013C62  6A2B               	clrf	(btemp+6)^0,c
  5177  013C64  6A2C               	clrf	(btemp+7)^0,c
  5178  013C66  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5179  013C6C  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5180  013C72  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5181  013C78  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5182  013C7E  0E00               	movlw	0
  5183  013C80  6EE6               	movwf	postinc1,c
  5184  013C82  ECC6  F0AE         	call	___xxtofl	;wreg free
  5185  013C86  0060  F097  FFE6   	movff	btemp,postinc1
  5186  013C8C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5187  013C92  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5188  013C98  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5189  013C9E  EC2C  F0C3         	call	___flsub	;wreg free
  5190  013CA2  0060  F097  FFE6   	movff	btemp,postinc1
  5191  013CA8  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5192  013CAE  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5193  013CB4  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5194  013CBA  EC08  F093         	call	___flmul	;wreg free
  5195  013CBE  D1AB               	goto	l1765
  5196  013CC0                     l9073:
  5197                           
  5198                           ;daq.c: 92:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.03500
      +                          00;
  5199  013CC0  0E29               	movlw	41
  5200  013CC2  6EE6               	movwf	postinc1,c
  5201  013CC4  0E5C               	movlw	92
  5202  013CC6  6EE6               	movwf	postinc1,c
  5203  013CC8  0E0F               	movlw	15
  5204  013CCA  6EE6               	movwf	postinc1,c
  5205  013CCC  0E3D               	movlw	61
  5206  013CCE  6EE6               	movwf	postinc1,c
  5207  013CD0  0060  F394  F02D   	movff	_R+34,btemp+8	;volatile
  5208  013CD6  0060  F398  F02E   	movff	_R+35,btemp+9	;volatile
  5209  013CDC  0E00               	movlw	0
  5210  013CDE  BE2E               	btfsc	(btemp+9)^0,7,c
  5211  013CE0  0EFF               	movlw	255
  5212  013CE2  6E2F               	movwf	(btemp+10)^0,c
  5213  013CE4  6E30               	movwf	(btemp+11)^0,c
  5214  013CE6  0060  F0B7  FFE6   	movff	btemp+8,postinc1
  5215  013CEC  0060  F0BB  FFE6   	movff	btemp+9,postinc1
  5216  013CF2  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  5217  013CF8  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  5218  013CFE  0E01               	movlw	1
  5219  013D00  6EE6               	movwf	postinc1,c
  5220  013D02  ECC6  F0AE         	call	___xxtofl	;wreg free
  5221  013D06  0060  F097  FFE6   	movff	btemp,postinc1
  5222  013D0C  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5223  013D12  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5224  013D18  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5225                           
  5226                           ;stkvar	_chan @ sp[(-8)+-1]
  5227  013D1E  0EF7               	movlw	-9
  5228  013D20  50E3               	movf	plusw1,w,c
  5229  013D22  6EE6               	movwf	postinc1,c
  5230  013D24  EC16  F0C8         	call	_get_raw_result	;wreg free
  5231  013D28  0060  F094  F02F   	movff	btemp,btemp+10
  5232  013D2E  0060  F098  F030   	movff	btemp+1,btemp+11
  5233  013D34  502F               	movf	(btemp+10)^0,w,c
  5234  013D36  6E29               	movwf	(btemp+4)^0,c
  5235  013D38  5030               	movf	(btemp+11)^0,w,c
  5236  013D3A  6E2A               	movwf	(btemp+5)^0,c
  5237  013D3C  6A2B               	clrf	(btemp+6)^0,c
  5238  013D3E  6A2C               	clrf	(btemp+7)^0,c
  5239  013D40  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5240  013D46  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5241  013D4C  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5242  013D52  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5243  013D58  0E00               	movlw	0
  5244  013D5A  6EE6               	movwf	postinc1,c
  5245  013D5C  ECC6  F0AE         	call	___xxtofl	;wreg free
  5246  013D60  0060  F097  FFE6   	movff	btemp,postinc1
  5247  013D66  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5248  013D6C  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5249  013D72  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5250  013D78  EC2C  F0C3         	call	___flsub	;wreg free
  5251  013D7C  0060  F097  FFE6   	movff	btemp,postinc1
  5252  013D82  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5253  013D88  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5254  013D8E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5255  013D94  EC08  F093         	call	___flmul	;wreg free
  5256  013D98  D13E               	goto	l1765
  5257  013D9A                     l9077:
  5258                           
  5259                           ;daq.c: 95:    if (0b0000100000000000 >> chan & 0x1) {
  5260                           ;stkvar	_chan @ sp[(0)+-1]
  5261  013D9A  0EFF               	movlw	-1
  5262  013D9C  006F FF8C  F030    	movff	plusw1,btemp+11
  5263  013DA2  0E00               	movlw	0
  5264  013DA4  6E2D               	movwf	(btemp+8)^0,c
  5265  013DA6  0E08               	movlw	8
  5266  013DA8  6E2E               	movwf	(btemp+9)^0,c
  5267  013DAA  2A30               	incf	(btemp+11)^0,f,c
  5268  013DAC  D003               	goto	u8354
  5269  013DAE                     u8355:
  5270  013DAE  342E               	rlcf	(btemp+9)^0,w,c
  5271  013DB0  322E               	rrcf	(btemp+9)^0,f,c
  5272  013DB2  322D               	rrcf	(btemp+8)^0,f,c
  5273  013DB4                     u8354:
  5274  013DB4  2E30               	decfsz	(btemp+11)^0,f,c
  5275  013DB6  D7FB               	goto	u8355
  5276  013DB8  A02D               	btfss	(btemp+8)^0,0,c
  5277  013DBA  D008               	goto	l9085
  5278                           
  5279                           ;daq.c: 96:     return 25.0;
  5280  013DBC  0E00               	movlw	0
  5281  013DBE  6E25               	movwf	btemp^0,c
  5282  013DC0  0E00               	movlw	0
  5283  013DC2  6E26               	movwf	(btemp+1)^0,c
  5284  013DC4  0EC8               	movlw	200
  5285  013DC6  6E27               	movwf	(btemp+2)^0,c
  5286  013DC8  0E41               	movlw	65
  5287  013DCA  D113               	goto	L4
  5288  013DCC                     l9085:
  5289                           
  5290                           ;daq.c: 98:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5291  013DCC  0E00               	movlw	0
  5292  013DCE  6EE6               	movwf	postinc1,c
  5293  013DD0  0E00               	movlw	0
  5294  013DD2  6EE6               	movwf	postinc1,c
  5295  013DD4  0E7A               	movlw	122
  5296  013DD6  6EE6               	movwf	postinc1,c
  5297  013DD8  0E44               	movlw	68
  5298  013DDA  6EE6               	movwf	postinc1,c
  5299  013DDC  0E61               	movlw	97
  5300  013DDE  6EE6               	movwf	postinc1,c
  5301  013DE0  0E03               	movlw	3
  5302  013DE2  6EE6               	movwf	postinc1,c
  5303  013DE4  0E84               	movlw	132
  5304  013DE6  6EE6               	movwf	postinc1,c
  5305  013DE8  0E40               	movlw	64
  5306  013DEA  6EE6               	movwf	postinc1,c
  5307                           
  5308                           ;stkvar	_chan @ sp[(-8)+-1]
  5309  013DEC  0EF7               	movlw	-9
  5310  013DEE  50E3               	movf	plusw1,w,c
  5311  013DF0  6EE6               	movwf	postinc1,c
  5312  013DF2  EC16  F0C8         	call	_get_raw_result	;wreg free
  5313  013DF6  0060  F094  F02F   	movff	btemp,btemp+10
  5314  013DFC  0060  F098  F030   	movff	btemp+1,btemp+11
  5315  013E02  502F               	movf	(btemp+10)^0,w,c
  5316  013E04  6E29               	movwf	(btemp+4)^0,c
  5317  013E06  5030               	movf	(btemp+11)^0,w,c
  5318  013E08  6E2A               	movwf	(btemp+5)^0,c
  5319  013E0A  6A2B               	clrf	(btemp+6)^0,c
  5320  013E0C  6A2C               	clrf	(btemp+7)^0,c
  5321  013E0E  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5322  013E14  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5323  013E1A  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5324  013E20  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5325  013E26  0E00               	movlw	0
  5326  013E28  6EE6               	movwf	postinc1,c
  5327  013E2A  ECC6  F0AE         	call	___xxtofl	;wreg free
  5328  013E2E  0060  F097  FFE6   	movff	btemp,postinc1
  5329  013E34  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5330  013E3A  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5331  013E40  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5332  013E46  EC08  F093         	call	___flmul	;wreg free
  5333  013E4A  0060  F097  FFE6   	movff	btemp,postinc1
  5334  013E50  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5335  013E56  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5336  013E5C  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5337  013E62  ECFB  F09A         	call	___fldiv	;wreg free
  5338  013E66  D0D7               	goto	l1765
  5339  013E68                     l9089:
  5340                           
  5341                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
  5342                           ;stkvar	_chan @ sp[(0)+-1]
  5343  013E68  0EFF               	movlw	-1
  5344  013E6A  006F FF8C  F030    	movff	plusw1,btemp+11
  5345  013E70  0E03               	movlw	3
  5346  013E72  6E2D               	movwf	(btemp+8)^0,c
  5347  013E74  0E00               	movlw	0
  5348  013E76  6E2E               	movwf	(btemp+9)^0,c
  5349  013E78  2A30               	incf	(btemp+11)^0,f,c
  5350  013E7A  D003               	goto	u8374
  5351  013E7C                     u8375:
  5352  013E7C  342E               	rlcf	(btemp+9)^0,w,c
  5353  013E7E  322E               	rrcf	(btemp+9)^0,f,c
  5354  013E80  322D               	rrcf	(btemp+8)^0,f,c
  5355  013E82                     u8374:
  5356  013E82  2E30               	decfsz	(btemp+11)^0,f,c
  5357  013E84  D7FB               	goto	u8375
  5358  013E86  B02D               	btfsc	(btemp+8)^0,0,c
  5359  013E88  D011               	goto	u8400
  5360                           
  5361                           ;stkvar	_chan @ sp[(0)+-1]
  5362  013E8A  0EFF               	movlw	-1
  5363  013E8C  006F FF8C  F030    	movff	plusw1,btemp+11
  5364  013E92  0E00               	movlw	0
  5365  013E94  6E2D               	movwf	(btemp+8)^0,c
  5366  013E96  0E08               	movlw	8
  5367  013E98  6E2E               	movwf	(btemp+9)^0,c
  5368  013E9A  2A30               	incf	(btemp+11)^0,f,c
  5369  013E9C  D003               	goto	u8394
  5370  013E9E                     u8395:
  5371  013E9E  342E               	rlcf	(btemp+9)^0,w,c
  5372  013EA0  322E               	rrcf	(btemp+9)^0,f,c
  5373  013EA2  322D               	rrcf	(btemp+8)^0,f,c
  5374  013EA4                     u8394:
  5375  013EA4  2E30               	decfsz	(btemp+11)^0,f,c
  5376  013EA6  D7FB               	goto	u8395
  5377  013EA8  A02D               	btfss	(btemp+8)^0,0,c
  5378  013EAA  D04E               	goto	l9097
  5379  013EAC                     u8400:
  5380                           
  5381                           ;daq.c: 104:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
  5382  013EAC  0E00               	movlw	0
  5383  013EAE  6EE6               	movwf	postinc1,c
  5384  013EB0  0E00               	movlw	0
  5385  013EB2  6EE6               	movwf	postinc1,c
  5386  013EB4  0E7A               	movlw	122
  5387  013EB6  6EE6               	movwf	postinc1,c
  5388  013EB8  0E44               	movlw	68
  5389  013EBA  6EE6               	movwf	postinc1,c
  5390  013EBC  0E00               	movlw	0
  5391  013EBE  6EE6               	movwf	postinc1,c
  5392  013EC0  0E00               	movlw	0
  5393  013EC2  6EE6               	movwf	postinc1,c
  5394  013EC4  0E20               	movlw	32
  5395  013EC6  6EE6               	movwf	postinc1,c
  5396  013EC8  0E3F               	movlw	63
  5397  013ECA  6EE6               	movwf	postinc1,c
  5398                           
  5399                           ;stkvar	_chan @ sp[(-8)+-1]
  5400  013ECC  0EF7               	movlw	-9
  5401  013ECE  50E3               	movf	plusw1,w,c
  5402  013ED0  6EE6               	movwf	postinc1,c
  5403  013ED2  EC16  F0C8         	call	_get_raw_result	;wreg free
  5404  013ED6  0060  F094  F02F   	movff	btemp,btemp+10
  5405  013EDC  0060  F098  F030   	movff	btemp+1,btemp+11
  5406  013EE2  502F               	movf	(btemp+10)^0,w,c
  5407  013EE4  6E29               	movwf	(btemp+4)^0,c
  5408  013EE6  5030               	movf	(btemp+11)^0,w,c
  5409  013EE8  6E2A               	movwf	(btemp+5)^0,c
  5410  013EEA  6A2B               	clrf	(btemp+6)^0,c
  5411  013EEC  6A2C               	clrf	(btemp+7)^0,c
  5412  013EEE  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5413  013EF4  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5414  013EFA  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5415  013F00  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5416  013F06  0E00               	movlw	0
  5417  013F08  6EE6               	movwf	postinc1,c
  5418  013F0A  ECC6  F0AE         	call	___xxtofl	;wreg free
  5419  013F0E  0060  F097  FFE6   	movff	btemp,postinc1
  5420  013F14  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5421  013F1A  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5422  013F20  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5423  013F26  EC08  F093         	call	___flmul	;wreg free
  5424  013F2A  0060  F097  FFE6   	movff	btemp,postinc1
  5425  013F30  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5426  013F36  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5427  013F3C  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5428  013F42  ECFB  F09A         	call	___fldiv	;wreg free
  5429  013F46  D067               	goto	l1765
  5430  013F48                     l9097:
  5431                           
  5432                           ;daq.c: 106:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
  5433  013F48  0E00               	movlw	0
  5434  013F4A  6EE6               	movwf	postinc1,c
  5435  013F4C  0E00               	movlw	0
  5436  013F4E  6EE6               	movwf	postinc1,c
  5437  013F50  0E7A               	movlw	122
  5438  013F52  6EE6               	movwf	postinc1,c
  5439  013F54  0E44               	movlw	68
  5440  013F56  6EE6               	movwf	postinc1,c
  5441  013F58  0E61               	movlw	97
  5442  013F5A  6EE6               	movwf	postinc1,c
  5443  013F5C  0E03               	movlw	3
  5444  013F5E  6EE6               	movwf	postinc1,c
  5445  013F60  0E84               	movlw	132
  5446  013F62  6EE6               	movwf	postinc1,c
  5447  013F64  0E40               	movlw	64
  5448  013F66  6EE6               	movwf	postinc1,c
  5449                           
  5450                           ;stkvar	_chan @ sp[(-8)+-1]
  5451  013F68  0EF7               	movlw	-9
  5452  013F6A  50E3               	movf	plusw1,w,c
  5453  013F6C  6EE6               	movwf	postinc1,c
  5454  013F6E  EC16  F0C8         	call	_get_raw_result	;wreg free
  5455  013F72  0060  F094  F02F   	movff	btemp,btemp+10
  5456  013F78  0060  F098  F030   	movff	btemp+1,btemp+11
  5457  013F7E  502F               	movf	(btemp+10)^0,w,c
  5458  013F80  6E29               	movwf	(btemp+4)^0,c
  5459  013F82  5030               	movf	(btemp+11)^0,w,c
  5460  013F84  6E2A               	movwf	(btemp+5)^0,c
  5461  013F86  6A2B               	clrf	(btemp+6)^0,c
  5462  013F88  6A2C               	clrf	(btemp+7)^0,c
  5463  013F8A  0060  F0A7  FFE6   	movff	btemp+4,postinc1
  5464  013F90  0060  F0AB  FFE6   	movff	btemp+5,postinc1
  5465  013F96  0060  F0AF  FFE6   	movff	btemp+6,postinc1
  5466  013F9C  0060  F0B3  FFE6   	movff	btemp+7,postinc1
  5467  013FA2  0E00               	movlw	0
  5468  013FA4  6EE6               	movwf	postinc1,c
  5469  013FA6  ECC6  F0AE         	call	___xxtofl	;wreg free
  5470  013FAA  0060  F097  FFE6   	movff	btemp,postinc1
  5471  013FB0  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5472  013FB6  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5473  013FBC  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5474  013FC2  EC08  F093         	call	___flmul	;wreg free
  5475  013FC6  0060  F097  FFE6   	movff	btemp,postinc1
  5476  013FCC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  5477  013FD2  0060  F09F  FFE6   	movff	btemp+2,postinc1
  5478  013FD8  0060  F0A3  FFE6   	movff	btemp+3,postinc1
  5479  013FDE  ECFB  F09A         	call	___fldiv	;wreg free
  5480  013FE2  D019               	goto	l1765
  5481  013FE4                     l9103:
  5482                           
  5483                           ;daq.c: 109:   return 0.0;
  5484  013FE4  0E00               	movlw	0
  5485  013FE6  6E25               	movwf	btemp^0,c
  5486  013FE8  0E00               	movlw	0
  5487  013FEA  6E26               	movwf	(btemp+1)^0,c
  5488  013FEC  0E00               	movlw	0
  5489  013FEE  6E27               	movwf	(btemp+2)^0,c
  5490  013FF0  0E00               	movlw	0
  5491  013FF2                     L4:
  5492  013FF2  6E28               	movwf	(btemp+3)^0,c
  5493  013FF4  D010               	goto	l1765
  5494  013FF6                     l9111:
  5495                           
  5496                           ;stkvar	_to_what @ sp[(0)+-2]
  5497  013FF6  0EFE               	movlw	-2
  5498  013FF8  50E3               	movf	plusw1,w,c
  5499  013FFA  6E2F               	movwf	(btemp+10)^0,c
  5500  013FFC  6A30               	clrf	(btemp+11)^0,c
  5501                           
  5502                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5503                           ; Switch size 1, requested type "simple"
  5504                           ; Number of cases is 1, Range of values is 0 to 0
  5505                           ; switch strategies available:
  5506                           ; Name         Instructions Cycles
  5507                           ; simple_byte            4     3 (average)
  5508                           ;	Chosen strategy is simple_byte
  5509  013FFE  5030               	movf	(btemp+11)^0,w,c
  5510  014000  0A00               	xorlw	0	; case 0
  5511  014002  A4D8               	btfss	status,2,c
  5512  014004  D7EF               	goto	l9103
  5513                           
  5514                           ; Switch size 1, requested type "simple"
  5515                           ; Number of cases is 2, Range of values is 0 to 1
  5516                           ; switch strategies available:
  5517                           ; Name         Instructions Cycles
  5518                           ; simple_byte            7     4 (average)
  5519                           ;	Chosen strategy is simple_byte
  5520  014006  502F               	movf	(btemp+10)^0,w,c
  5521  014008  0A00               	xorlw	0	; case 0
  5522  01400A  B4D8               	btfsc	status,2,c
  5523  01400C  D5B2               	goto	l9057
  5524  01400E  0A01               	xorlw	1	; case 1
  5525  014010  B4D8               	btfsc	status,2,c
  5526  014012  D72A               	goto	l9089
  5527  014014  D7E7               	goto	l9103
  5528  014016                     l1765:
  5529                           
  5530                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  5531  014016  52E5               	movf	postdec1,f,c
  5532  014018  52E5               	movf	postdec1,f,c
  5533  01401A  0012               	return		;funcret
  5534  01401C                     __end_of_conv_raw_result:
  5535                           	opt callstack 0
  5536                           
  5537 ;; *************** function _nanf *****************
  5538 ;; Defined at:
  5539 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;  s               2  [STACK] PTR const unsigned char 
  5542 ;;		 -> STR_45(1), 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  u               4  [STACK] struct .
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  4  [STACK] float 
  5547 ;; Registers used:
  5548 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/2
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5558 ;;Total ram usage:        0 bytes
  5559 ;; Hardware stack levels used:    1
  5560 ;; Hardware stack levels required when called:    7
  5561 ;; This function calls:
  5562 ;;		Nothing
  5563 ;; This function is called by:
  5564 ;;		_conv_raw_result
  5565 ;; This function uses a reentrant model
  5566 ;;
  5567                           
  5568                           	psect	text19
  5569  01825E                     __ptext19:
  5570                           	opt callstack 0
  5571  01825E                     _nanf:
  5572                           	opt callstack 0
  5573                           
  5574                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5575  01825E  52E6               	movf	postinc1,f,c
  5576  018260  52E6               	movf	postinc1,f,c
  5577  018262  52E6               	movf	postinc1,f,c
  5578  018264  52E6               	movf	postinc1,f,c
  5579                           
  5580                           ;incstack = 0
  5581  018266  0EFF               	movlw	255
  5582  018268  6E2D               	movwf	(btemp+8)^0,c
  5583  01826A  0EFF               	movlw	255
  5584  01826C  6E2E               	movwf	(btemp+9)^0,c
  5585  01826E  0EFF               	movlw	255
  5586  018270  6E2F               	movwf	(btemp+10)^0,c
  5587  018272  0E7F               	movlw	127
  5588  018274  6E30               	movwf	(btemp+11)^0,c
  5589                           
  5590                           ;stkvar	_u @ sp[(-4)+0]
  5591  018276  0EFC               	movlw	-4
  5592  018278  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  5593  01827E  0EFD               	movlw	-3
  5594  018280  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  5595  018286  0EFE               	movlw	-2
  5596  018288  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  5597  01828E  0EFF               	movlw	-1
  5598  018290  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5599                           
  5600                           ;stkvar	_u @ sp[(-4)+0]
  5601  018296  0EFC               	movlw	-4
  5602  018298  006F FF8C  F025    	movff	plusw1,btemp
  5603  01829E  0EFD               	movlw	-3
  5604  0182A0  006F FF8C  F026    	movff	plusw1,btemp+1
  5605  0182A6  0EFE               	movlw	-2
  5606  0182A8  006F FF8C  F027    	movff	plusw1,btemp+2
  5607  0182AE  0EFF               	movlw	-1
  5608  0182B0  006F FF8C  F028    	movff	plusw1,btemp+3
  5609                           
  5610                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  5611  0182B6  0EFA               	movlw	250
  5612  0182B8  26E1               	addwf	fsr1l,f,c
  5613  0182BA  0EFF               	movlw	255
  5614  0182BC  22E2               	addwfc	fsr1h,f,c
  5615  0182BE  0012               	return		;funcret
  5616  0182C0                     __end_of_nanf:
  5617                           	opt callstack 0
  5618                           
  5619 ;; *************** function _get_raw_result *****************
  5620 ;; Defined at:
  5621 ;;		line 72 in file "daq.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;  index           1  [STACK] const enum E16136
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;		None
  5626 ;; Return value:  Size  Location     Type
  5627 ;;                  2  [STACK] unsigned short 
  5628 ;; Registers used:
  5629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5630 ;; Tracked objects:
  5631 ;;		On entry : 0/2
  5632 ;;		On exit  : 0/0
  5633 ;;		Unchanged: 0/0
  5634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5639 ;;Total ram usage:        0 bytes
  5640 ;; Hardware stack levels used:    1
  5641 ;; Hardware stack levels required when called:    7
  5642 ;; This function calls:
  5643 ;;		Nothing
  5644 ;; This function is called by:
  5645 ;;		_main
  5646 ;;		_conv_raw_result
  5647 ;; This function uses a reentrant model
  5648 ;;
  5649                           
  5650                           	psect	text20
  5651  01902C                     __ptext20:
  5652                           	opt callstack 0
  5653  01902C                     _get_raw_result:
  5654                           	opt callstack 23
  5655                           
  5656                           ;daq.c: 72: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 73: {;daq.c: 
      +                          74:  return R.raw_adc[index];
  5657                           ;stkvar	_index @ sp[(0)+-1]
  5658                           
  5659                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5660                           ;incstack = 0
  5661  01902C  0EFF               	movlw	-1
  5662  01902E  50E3               	movf	plusw1,w,c
  5663  019030  0D02               	mullw	2
  5664  019032  50F3               	movf	243,w,c
  5665  019034  0FC3               	addlw	low _R
  5666  019036  6ED9               	movwf	fsr2l,c
  5667  019038  6ADA               	clrf	fsr2h,c
  5668  01903A  006F FF78  F025    	movff	postinc2,btemp
  5669  019040  006F FF74  F026    	movff	postdec2,btemp+1
  5670                           
  5671                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  5672  019046  52E5               	movf	postdec1,f,c
  5673  019048  0012               	return		;funcret
  5674  01904A                     __end_of_get_raw_result:
  5675                           	opt callstack 0
  5676                           
  5677 ;; *************** function ___xxtofl *****************
  5678 ;; Defined at:
  5679 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;  sign            1  [STACK] unsigned char 
  5682 ;;  val             4  [STACK] long 
  5683 ;; Auto vars:     Size  Location     Type
  5684 ;;  arg             4  [STACK] unsigned long 
  5685 ;;  exp             1  [STACK] unsigned char 
  5686 ;; Return value:  Size  Location     Type
  5687 ;;                  4  [STACK] unsigned char 
  5688 ;; Registers used:
  5689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  5690 ;; Tracked objects:
  5691 ;;		On entry : 0/2
  5692 ;;		On exit  : 0/0
  5693 ;;		Unchanged: 0/0
  5694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5699 ;;Total ram usage:        0 bytes
  5700 ;; Hardware stack levels used:    1
  5701 ;; Hardware stack levels required when called:    7
  5702 ;; This function calls:
  5703 ;;		Nothing
  5704 ;; This function is called by:
  5705 ;;		_conv_raw_result
  5706 ;; This function uses a reentrant model
  5707 ;;
  5708                           
  5709                           	psect	text21
  5710  015D8C                     __ptext21:
  5711                           	opt callstack 0
  5712  015D8C                     ___xxtofl:
  5713                           	opt callstack 0
  5714                           
  5715                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5716  015D8C  0E05               	movlw	5
  5717  015D8E  26E1               	addwf	fsr1l,f,c
  5718  015D90  0E00               	movlw	0
  5719  015D92  22E2               	addwfc	fsr1h,f,c
  5720                           
  5721                           ;stkvar	_sign @ sp[(-5)+-1]
  5722                           
  5723                           ;incstack = 0
  5724  015D94  0EFA               	movlw	-6
  5725  015D96  50E3               	movf	plusw1,w,c
  5726  015D98  B4D8               	btfsc	status,2,c
  5727  015D9A  D01D               	goto	l8495
  5728                           
  5729                           ;stkvar	_val @ sp[(-5)+-5]
  5730  015D9C  0EF9               	movlw	-7
  5731  015D9E  AEE3               	btfss	plusw1,7,c
  5732  015DA0  D01A               	goto	l8495
  5733                           
  5734                           ;stkvar	_val @ sp[(-5)+-5]
  5735  015DA2  0EF6               	movlw	-10
  5736  015DA4  006F FF8C  F02D    	movff	plusw1,btemp+8
  5737  015DAA  0EF7               	movlw	-9
  5738  015DAC  006F FF8C  F02E    	movff	plusw1,btemp+9
  5739  015DB2  0EF8               	movlw	-8
  5740  015DB4  006F FF8C  F02F    	movff	plusw1,btemp+10
  5741  015DBA  0EF9               	movlw	-7
  5742  015DBC  006F FF8C  F030    	movff	plusw1,btemp+11
  5743  015DC2  1E2D               	comf	(btemp+8)^0,f,c
  5744  015DC4  1E2E               	comf	(btemp+9)^0,f,c
  5745  015DC6  1E2F               	comf	(btemp+10)^0,f,c
  5746  015DC8  1E30               	comf	(btemp+11)^0,f,c
  5747  015DCA  2A2D               	incf	(btemp+8)^0,f,c
  5748  015DCC  0E00               	movlw	0
  5749  015DCE  222E               	addwfc	(btemp+9)^0,f,c
  5750  015DD0  222F               	addwfc	(btemp+10)^0,f,c
  5751  015DD2  2230               	addwfc	(btemp+11)^0,f,c
  5752  015DD4  D010               	goto	L5
  5753  015DD6                     l8495:
  5754                           
  5755                           ;stkvar	_val @ sp[(-5)+-5]
  5756  015DD6  0EF6               	movlw	-10
  5757  015DD8  006F FF8C  F02D    	movff	plusw1,btemp+8
  5758  015DDE  0EF7               	movlw	-9
  5759  015DE0  006F FF8C  F02E    	movff	plusw1,btemp+9
  5760  015DE6  0EF8               	movlw	-8
  5761  015DE8  006F FF8C  F02F    	movff	plusw1,btemp+10
  5762  015DEE  0EF9               	movlw	-7
  5763  015DF0  006F FF8C  F030    	movff	plusw1,btemp+11
  5764  015DF6                     L5:
  5765                           
  5766                           ;stkvar	_arg @ sp[(-5)+0]
  5767  015DF6  0EFB               	movlw	-5
  5768  015DF8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  5769  015DFE  0EFC               	movlw	-4
  5770  015E00  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  5771  015E06  0EFD               	movlw	-3
  5772  015E08  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  5773  015E0E  0EFE               	movlw	-2
  5774  015E10  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5775                           
  5776                           ;stkvar	_val @ sp[(-5)+-5]
  5777  015E16  0EF6               	movlw	-10
  5778  015E18  50E3               	movf	plusw1,w,c
  5779  015E1A  E113               	bnz	l8503
  5780  015E1C  0EF7               	movlw	-9
  5781  015E1E  50E3               	movf	plusw1,w,c
  5782  015E20  E110               	bnz	l8503
  5783  015E22  0EF8               	movlw	-8
  5784  015E24  50E3               	movf	plusw1,w,c
  5785  015E26  E10D               	bnz	l8503
  5786  015E28  0EF9               	movlw	-7
  5787  015E2A  50E3               	movf	plusw1,w,c
  5788  015E2C  A4D8               	btfss	status,2,c
  5789  015E2E  D009               	goto	l8503
  5790  015E30  0E00               	movlw	0
  5791  015E32  6E25               	movwf	btemp^0,c
  5792  015E34  0E00               	movlw	0
  5793  015E36  6E26               	movwf	(btemp+1)^0,c
  5794  015E38  0E00               	movlw	0
  5795  015E3A  6E27               	movwf	(btemp+2)^0,c
  5796  015E3C  0E00               	movlw	0
  5797  015E3E  6E28               	movwf	(btemp+3)^0,c
  5798  015E40  D0A2               	goto	l2872
  5799  015E42                     l8503:
  5800  015E42  0E96               	movlw	150
  5801  015E44  6E30               	movwf	(btemp+11)^0,c
  5802                           
  5803                           ;stkvar	_exp @ sp[(-5)+4]
  5804  015E46  0EFF               	movlw	-1
  5805  015E48  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  5806  015E4E  D00B               	goto	l8507
  5807  015E50                     l8505:
  5808                           
  5809                           ;stkvar	_exp @ sp[(-5)+4]
  5810  015E50  0EFF               	movlw	-1
  5811  015E52  2AE3               	incf	plusw1,f,c
  5812                           
  5813                           ;stkvar	_arg @ sp[(-5)+0]
  5814  015E54  90D8               	bcf	status,0,c
  5815  015E56  0EFE               	movlw	-2
  5816  015E58  32E3               	rrcf	plusw1,f,c
  5817  015E5A  0EFD               	movlw	-3
  5818  015E5C  32E3               	rrcf	plusw1,f,c
  5819  015E5E  0EFC               	movlw	-4
  5820  015E60  32E3               	rrcf	plusw1,f,c
  5821  015E62  0EFB               	movlw	-5
  5822  015E64  32E3               	rrcf	plusw1,f,c
  5823  015E66                     l8507:
  5824                           
  5825                           ;stkvar	_arg @ sp[(-5)+0]
  5826  015E66  50E1               	movf	fsr1l,w,c
  5827  015E68  0FFB               	addlw	-5
  5828  015E6A  6ED9               	movwf	fsr2l,c
  5829  015E6C  50E2               	movf	fsr1h,w,c
  5830  015E6E  6EDA               	movwf	fsr2h,c
  5831  015E70  0EFF               	movlw	255
  5832  015E72  22DA               	addwfc	fsr2h,f,c
  5833  015E74  52DE               	movf	postinc2,f,c
  5834  015E76  52DE               	movf	postinc2,f,c
  5835  015E78  52DE               	movf	postinc2,f,c
  5836  015E7A  0EFE               	movlw	254
  5837  015E7C  14DD               	andwf	postdec2,w,c
  5838  015E7E  B4D8               	btfsc	status,2,c
  5839  015E80  D018               	goto	l8515
  5840  015E82  D7E6               	goto	l8505
  5841  015E84                     l8509:
  5842                           
  5843                           ;stkvar	_exp @ sp[(-5)+4]
  5844  015E84  0EFF               	movlw	-1
  5845  015E86  2AE3               	incf	plusw1,f,c
  5846                           
  5847                           ;stkvar	_arg @ sp[(-5)+0]
  5848  015E88  50E1               	movf	fsr1l,w,c
  5849  015E8A  0FFB               	addlw	-5
  5850  015E8C  6ED9               	movwf	fsr2l,c
  5851  015E8E  50E2               	movf	fsr1h,w,c
  5852  015E90  6EDA               	movwf	fsr2h,c
  5853  015E92  0EFF               	movlw	255
  5854  015E94  22DA               	addwfc	fsr2h,f,c
  5855  015E96  2ADE               	incf	postinc2,f,c
  5856  015E98  0E00               	movlw	0
  5857  015E9A  22DE               	addwfc	postinc2,f,c
  5858  015E9C  22DE               	addwfc	postinc2,f,c
  5859  015E9E  22DE               	addwfc	postinc2,f,c
  5860                           
  5861                           ;stkvar	_arg @ sp[(-5)+0]
  5862  015EA0  90D8               	bcf	status,0,c
  5863  015EA2  0EFE               	movlw	-2
  5864  015EA4  32E3               	rrcf	plusw1,f,c
  5865  015EA6  0EFD               	movlw	-3
  5866  015EA8  32E3               	rrcf	plusw1,f,c
  5867  015EAA  0EFC               	movlw	-4
  5868  015EAC  32E3               	rrcf	plusw1,f,c
  5869  015EAE  0EFB               	movlw	-5
  5870  015EB0  32E3               	rrcf	plusw1,f,c
  5871  015EB2                     l8515:
  5872                           
  5873                           ;stkvar	_arg @ sp[(-5)+0]
  5874  015EB2  50E1               	movf	fsr1l,w,c
  5875  015EB4  0FFB               	addlw	-5
  5876  015EB6  6ED9               	movwf	fsr2l,c
  5877  015EB8  50E2               	movf	fsr1h,w,c
  5878  015EBA  6EDA               	movwf	fsr2h,c
  5879  015EBC  0EFF               	movlw	255
  5880  015EBE  22DA               	addwfc	fsr2h,f,c
  5881  015EC0  52DE               	movf	postinc2,f,c
  5882  015EC2  52DE               	movf	postinc2,f,c
  5883  015EC4  52DE               	movf	postinc2,f,c
  5884  015EC6  0EFF               	movlw	255
  5885  015EC8  14DD               	andwf	postdec2,w,c
  5886  015ECA  B4D8               	btfsc	status,2,c
  5887  015ECC  D00C               	goto	l8519
  5888  015ECE  D7DA               	goto	l8509
  5889  015ED0                     l8517:
  5890                           
  5891                           ;stkvar	_exp @ sp[(-5)+4]
  5892  015ED0  0EFF               	movlw	-1
  5893  015ED2  06E3               	decf	plusw1,f,c
  5894                           
  5895                           ;stkvar	_arg @ sp[(-5)+0]
  5896  015ED4  90D8               	bcf	status,0,c
  5897  015ED6  0EFB               	movlw	-5
  5898  015ED8  36E3               	rlcf	plusw1,f,c
  5899  015EDA  0EFC               	movlw	-4
  5900  015EDC  36E3               	rlcf	plusw1,f,c
  5901  015EDE  0EFD               	movlw	-3
  5902  015EE0  36E3               	rlcf	plusw1,f,c
  5903  015EE2  0EFE               	movlw	-2
  5904  015EE4  36E3               	rlcf	plusw1,f,c
  5905  015EE6                     l8519:
  5906                           
  5907                           ;stkvar	_arg @ sp[(-5)+0]
  5908  015EE6  0EFD               	movlw	-3
  5909  015EE8  BEE3               	btfsc	plusw1,7,c
  5910  015EEA  D007               	goto	u8090
  5911                           
  5912                           ;stkvar	_exp @ sp[(-5)+4]
  5913  015EEC  0EFF               	movlw	-1
  5914  015EEE  006F FF8C  F025    	movff	plusw1,btemp
  5915  015EF4  0E02               	movlw	2
  5916  015EF6  6025               	cpfslt	btemp^0,c
  5917  015EF8  D7EB               	goto	l8517
  5918  015EFA                     u8090:
  5919                           
  5920                           ;stkvar	_exp @ sp[(-5)+4]
  5921  015EFA  0EFF               	movlw	-1
  5922  015EFC  B0E3               	btfsc	plusw1,0,c
  5923  015EFE  D002               	goto	l8527
  5924                           
  5925                           ;stkvar	_arg @ sp[(-5)+0]
  5926  015F00  0EFD               	movlw	-3
  5927  015F02  9EE3               	bcf	plusw1,7,c
  5928  015F04                     l8527:
  5929                           
  5930                           ;stkvar	_exp @ sp[(-5)+4]
  5931  015F04  50E1               	movf	fsr1l,w,c
  5932  015F06  0FFF               	addlw	-1
  5933  015F08  6ED9               	movwf	fsr2l,c
  5934  015F0A  50E2               	movf	fsr1h,w,c
  5935  015F0C  6EDA               	movwf	fsr2h,c
  5936  015F0E  0EFF               	movlw	255
  5937  015F10  22DA               	addwfc	fsr2h,f,c
  5938  015F12  90D8               	bcf	status,0,c
  5939  015F14  32DF               	rrcf	indf2,f,c
  5940                           
  5941                           ;stkvar	_exp @ sp[(-5)+4]
  5942  015F16  0EFF               	movlw	-1
  5943  015F18  006F FF8C  F030    	movff	plusw1,btemp+11
  5944  015F1E  0060  F0C0  F029   	movff	btemp+11,btemp+4
  5945  015F24  6A2A               	clrf	(btemp+5)^0,c
  5946  015F26  6A2B               	clrf	(btemp+6)^0,c
  5947  015F28  6A2C               	clrf	(btemp+7)^0,c
  5948  015F2A  0060  F0A4  F02C   	movff	btemp+4,btemp+7
  5949  015F30  6A2B               	clrf	(btemp+6)^0,c
  5950  015F32  6A2A               	clrf	(btemp+5)^0,c
  5951  015F34  6A29               	clrf	(btemp+4)^0,c
  5952                           
  5953                           ;stkvar	_arg @ sp[(-5)+0]
  5954  015F36  50E1               	movf	fsr1l,w,c
  5955  015F38  0FFB               	addlw	-5
  5956  015F3A  6ED9               	movwf	fsr2l,c
  5957  015F3C  50E2               	movf	fsr1h,w,c
  5958  015F3E  6EDA               	movwf	fsr2h,c
  5959  015F40  0EFF               	movlw	255
  5960  015F42  22DA               	addwfc	fsr2h,f,c
  5961  015F44  5029               	movf	(btemp+4)^0,w,c
  5962  015F46  12DE               	iorwf	postinc2,f,c
  5963  015F48  502A               	movf	(btemp+5)^0,w,c
  5964  015F4A  12DE               	iorwf	postinc2,f,c
  5965  015F4C  502B               	movf	(btemp+6)^0,w,c
  5966  015F4E  12DE               	iorwf	postinc2,f,c
  5967  015F50  502C               	movf	(btemp+7)^0,w,c
  5968  015F52  12DE               	iorwf	postinc2,f,c
  5969                           
  5970                           ;stkvar	_sign @ sp[(-5)+-1]
  5971  015F54  0EFA               	movlw	-6
  5972  015F56  50E3               	movf	plusw1,w,c
  5973  015F58  B4D8               	btfsc	status,2,c
  5974  015F5A  D005               	goto	l8537
  5975                           
  5976                           ;stkvar	_val @ sp[(-5)+-5]
  5977  015F5C  0EF9               	movlw	-7
  5978  015F5E  AEE3               	btfss	plusw1,7,c
  5979  015F60  D002               	goto	l8537
  5980                           
  5981                           ;stkvar	_arg @ sp[(-5)+0]
  5982  015F62  0EFE               	movlw	-2
  5983  015F64  8EE3               	bsf	plusw1,7,c
  5984  015F66                     l8537:
  5985                           
  5986                           ;stkvar	_arg @ sp[(-5)+0]
  5987  015F66  0EFB               	movlw	-5
  5988  015F68  006F FF8C  F025    	movff	plusw1,btemp
  5989  015F6E  0EFC               	movlw	-4
  5990  015F70  006F FF8C  F026    	movff	plusw1,btemp+1
  5991  015F76  0EFD               	movlw	-3
  5992  015F78  006F FF8C  F027    	movff	plusw1,btemp+2
  5993  015F7E  0EFE               	movlw	-2
  5994  015F80  006F FF8C  F028    	movff	plusw1,btemp+3
  5995  015F86                     l2872:
  5996                           
  5997                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  5998  015F86  0EF6               	movlw	246
  5999  015F88  26E1               	addwf	fsr1l,f,c
  6000  015F8A  0EFF               	movlw	255
  6001  015F8C  22E2               	addwfc	fsr1h,f,c
  6002  015F8E  0012               	return		;funcret
  6003  015F90                     __end_of___xxtofl:
  6004                           	opt callstack 0
  6005                           
  6006 ;; *************** function _clear_hid_pflags *****************
  6007 ;; Defined at:
  6008 ;;		line 51 in file "hid.c"
  6009 ;; Parameters:    Size  Location     Type
  6010 ;;  h               1  [STACK] PTR struct H_data
  6011 ;;		 -> H(7), 
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1  [STACK] void 
  6016 ;; Registers used:
  6017 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6018 ;; Tracked objects:
  6019 ;;		On entry : 3F/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6027 ;;Total ram usage:        0 bytes
  6028 ;; Hardware stack levels used:    1
  6029 ;; Hardware stack levels required when called:    7
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		_main
  6034 ;; This function uses a reentrant model
  6035 ;;
  6036                           
  6037                           	psect	text22
  6038  018F1A                     __ptext22:
  6039                           	opt callstack 0
  6040  018F1A                     _clear_hid_pflags:
  6041                           	opt callstack 23
  6042                           
  6043                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  6044                           ;stkvar	_h @ sp[(0)+-1]
  6045                           
  6046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6047                           ;incstack = 0
  6048  018F1A  0EFF               	movlw	-1
  6049  018F1C  50E3               	movf	plusw1,w,c
  6050  018F1E  6ED9               	movwf	fsr2l,c
  6051  018F20  6ADA               	clrf	fsr2h,c
  6052  018F22  0E03               	movlw	3
  6053  018F24  26D9               	addwf	fsr2l,f,c
  6054  018F26  0E00               	movlw	0
  6055  018F28  6EDF               	movwf	indf2,c
  6056                           
  6057                           ;hid.c: 54:  h->enter_p = SW_OFF;
  6058                           ;stkvar	_h @ sp[(0)+-1]
  6059  018F2A  0EFF               	movlw	-1
  6060  018F2C  50E3               	movf	plusw1,w,c
  6061  018F2E  6ED9               	movwf	fsr2l,c
  6062  018F30  6ADA               	clrf	fsr2h,c
  6063  018F32  0E05               	movlw	5
  6064  018F34  26D9               	addwf	fsr2l,f,c
  6065  018F36  0E00               	movlw	0
  6066  018F38  6EDF               	movwf	indf2,c
  6067                           
  6068                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  6069  018F3A  52E5               	movf	postdec1,f,c
  6070  018F3C  0012               	return		;funcret
  6071  018F3E                     __end_of_clear_hid_pflags:
  6072                           	opt callstack 0
  6073                           
  6074 ;; *************** function _clear_adc_scan *****************
  6075 ;; Defined at:
  6076 ;;		line 64 in file "daq.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;		None
  6079 ;; Auto vars:     Size  Location     Type
  6080 ;;		None
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  1  [STACK] void 
  6083 ;; Registers used:
  6084 ;;		None
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/1
  6087 ;;		On exit  : 3F/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6094 ;;Total ram usage:        0 bytes
  6095 ;; Hardware stack levels used:    1
  6096 ;; Hardware stack levels required when called:    7
  6097 ;; This function calls:
  6098 ;;		Nothing
  6099 ;; This function is called by:
  6100 ;;		_main
  6101 ;; This function uses a reentrant model
  6102 ;;
  6103                           
  6104                           	psect	text23
  6105  01925A                     __ptext23:
  6106                           	opt callstack 0
  6107  01925A                     _clear_adc_scan:
  6108                           	opt callstack 23
  6109                           
  6110                           ;daq.c: 66:  R.done = 0;
  6111                           
  6112                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6113                           ;incstack = 0
  6114  01925A  0100               	movlb	0	; () banked
  6115  01925C  6BEA               	clrf	(_R+39)& (0+255),b	;volatile
  6116                           
  6117                           ; BSR set to: 0
  6118                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  6119  01925E  0012               	return		;funcret
  6120  019260                     __end_of_clear_adc_scan:
  6121                           	opt callstack 0
  6122                           
  6123 ;; *************** function _check_help *****************
  6124 ;; Defined at:
  6125 ;;		line 40 in file "mconfig.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;  flipper         1  [STACK] const _Bool 
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;  estatus         1    0        _Bool 
  6130 ;; Return value:  Size  Location     Type
  6131 ;;                  1  [STACK] _Bool 
  6132 ;; Registers used:
  6133 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6134 ;; Tracked objects:
  6135 ;;		On entry : 3F/2
  6136 ;;		On exit  : 0/0
  6137 ;;		Unchanged: 0/0
  6138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6143 ;;Total ram usage:        0 bytes
  6144 ;; Hardware stack levels used:    1
  6145 ;; Hardware stack levels required when called:   19
  6146 ;; This function calls:
  6147 ;;		_StartTimer
  6148 ;;		_TimerDone
  6149 ;;		_display_help
  6150 ;;		_display_info
  6151 ;;		_get_vterm_ptr
  6152 ;;		_help_button
  6153 ;;		_mode_lamp_bright
  6154 ;;		_mode_lamp_dim
  6155 ;;		_set_display_info
  6156 ;;		_set_temp_display_help
  6157 ;;		_set_vterm
  6158 ;;		_sprintf
  6159 ;;		_update_lcd
  6160 ;;		_vterm_dump
  6161 ;; This function is called by:
  6162 ;;		_main
  6163 ;; This function uses a reentrant model
  6164 ;;
  6165                           
  6166                           	psect	text24
  6167  015B7A                     __ptext24:
  6168                           	opt callstack 0
  6169  015B7A                     _check_help:
  6170                           	opt callstack 11
  6171                           
  6172                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  6173                           
  6174                           ; BSR set to: 0
  6175                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6176                           ;incstack = 0
  6177  015B7A  EC77  F0C4         	call	_help_button	;wreg free
  6178  015B7E  5025               	movf	btemp^0,w,c
  6179  015B80  B4D8               	btfsc	status,2,c
  6180  015B82  D0D0               	goto	l10983
  6181  015B84  EC1D  F0C9         	call	_display_info	;wreg free
  6182  015B88  0425               	decf	btemp^0,w,c
  6183  015B8A  B4D8               	btfsc	status,2,c
  6184  015B8C  D0CB               	goto	l10983
  6185                           
  6186                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  6187  015B8E  0EDC               	movlw	220
  6188  015B90  6EE6               	movwf	postinc1,c
  6189  015B92  0E05               	movlw	5
  6190  015B94  6EE6               	movwf	postinc1,c
  6191  015B96  0E0B               	movlw	11
  6192  015B98  6EE6               	movwf	postinc1,c
  6193  015B9A  ECD8  F0C3         	call	_StartTimer	;wreg free
  6194                           
  6195                           ;mconfig.c: 48:   if (V.debug)
  6196  015B9E  0102               	movlb	2	; () banked
  6197  015BA0  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  6198                           
  6199                           ; BSR set to: 2
  6200                           ;mconfig.c: 49:    vterm_dump();
  6201  015BA2  EC0C  F0B5         	call	_vterm_dump	;wreg free
  6202                           
  6203                           ;mconfig.c: 51:   set_vterm(1);
  6204  015BA6  0E01               	movlw	1
  6205  015BA8  6EE6               	movwf	postinc1,c
  6206  015BAA  EC25  F0C8         	call	_set_vterm	;wreg free
  6207                           
  6208                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  6209  015BAE  EC1D  F0C9         	call	_display_info	;wreg free
  6210  015BB2  5025               	movf	btemp^0,w,c
  6211  015BB4  6EE6               	movwf	postinc1,c
  6212  015BB6  ECDE  F0C8         	call	_set_temp_display_help	;wreg free
  6213                           
  6214                           ; BSR set to: 2
  6215                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  6216  015BBA  0E01               	movlw	1
  6217  015BBC  6EE6               	movwf	postinc1,c
  6218  015BBE  EC34  F0C8         	call	_set_display_info	;wreg free
  6219                           
  6220                           ;mconfig.c: 54:   if (flipper) {
  6221                           ;stkvar	_flipper @ sp[(0)+-1]
  6222  015BC2  0EFF               	movlw	-1
  6223  015BC4  50E3               	movf	plusw1,w,c
  6224  015BC6  B4D8               	btfsc	status,2,c
  6225  015BC8  D019               	goto	l10969
  6226                           
  6227                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  6228  015BCA  0EC0               	movlw	low STR_27
  6229  015BCC  6EE6               	movwf	postinc1,c
  6230  015BCE  0EFF               	movlw	high STR_27
  6231  015BD0  6EE6               	movwf	postinc1,c
  6232  015BD2  0E6C               	movlw	low STR_29
  6233  015BD4  6EE6               	movwf	postinc1,c
  6234  015BD6  0EFE               	movlw	high STR_29
  6235  015BD8  6EE6               	movwf	postinc1,c
  6236  015BDA  0E01               	movlw	1
  6237  015BDC  6EE6               	movwf	postinc1,c
  6238  015BDE  0E00               	movlw	0
  6239  015BE0  6EE6               	movwf	postinc1,c
  6240  015BE2  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  6241  015BE6  0060  F097  FFE6   	movff	btemp,postinc1
  6242  015BEC  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6243  015BF2  0E06               	movlw	6
  6244  015BF4  6EE6               	movwf	postinc1,c
  6245  015BF6  ECD3  F0B7         	call	_sprintf	;wreg free
  6246                           
  6247                           ;mconfig.c: 56:   } else {
  6248  015BFA  D018               	goto	l1669
  6249  015BFC                     l10969:
  6250                           
  6251                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  6252  015BFC  0ED6               	movlw	low STR_28
  6253  015BFE  6EE6               	movwf	postinc1,c
  6254  015C00  0EFF               	movlw	high STR_28
  6255  015C02  6EE6               	movwf	postinc1,c
  6256  015C04  0E6C               	movlw	low STR_29
  6257  015C06  6EE6               	movwf	postinc1,c
  6258  015C08  0EFE               	movlw	high STR_29
  6259  015C0A  6EE6               	movwf	postinc1,c
  6260  015C0C  0E01               	movlw	1
  6261  015C0E  6EE6               	movwf	postinc1,c
  6262  015C10  0E00               	movlw	0
  6263  015C12  6EE6               	movwf	postinc1,c
  6264  015C14  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  6265  015C18  0060  F097  FFE6   	movff	btemp,postinc1
  6266  015C1E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6267  015C24  0E06               	movlw	6
  6268  015C26  6EE6               	movwf	postinc1,c
  6269  015C28  ECD3  F0B7         	call	_sprintf	;wreg free
  6270  015C2C                     l1669:
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  6274  015C2C  0102               	movlb	2	; () banked
  6275  015C2E  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6276  015C30  32E8               	rrcf	wreg,f,c
  6277  015C32  32E8               	rrcf	wreg,f,c
  6278  015C34  0B03               	andlw	3
  6279  015C36  0D24               	mullw	36
  6280  015C38  0E12               	movlw	18
  6281  015C3A  26F3               	addwf	243,f,c
  6282  015C3C  0E00               	movlw	0
  6283  015C3E  22F4               	addwfc	244,f,c
  6284  015C40  0EB1               	movlw	low _T
  6285  015C42  6E2F               	movwf	(btemp+10)^0,c
  6286  015C44  0EFD               	movlw	high _T
  6287  015C46  6E30               	movwf	(btemp+11)^0,c
  6288  015C48  50F3               	movf	243,w,c
  6289  015C4A  262F               	addwf	(btemp+10)^0,f,c
  6290  015C4C  50F4               	movf	244,w,c
  6291  015C4E  2230               	addwfc	(btemp+11)^0,f,c
  6292  015C50  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  6293  015C56  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  6294  015C5C  0ECC               	movlw	low STR_31
  6295  015C5E  6EE6               	movwf	postinc1,c
  6296  015C60  0EFF               	movlw	high STR_31
  6297  015C62  6EE6               	movwf	postinc1,c
  6298  015C64  0E01               	movlw	1
  6299  015C66  6EE6               	movwf	postinc1,c
  6300  015C68  0E01               	movlw	1
  6301  015C6A  6EE6               	movwf	postinc1,c
  6302  015C6C  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  6303  015C70  0060  F097  FFE6   	movff	btemp,postinc1
  6304  015C76  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6305  015C7C  0E06               	movlw	6
  6306  015C7E  6EE6               	movwf	postinc1,c
  6307  015C80  ECD3  F0B7         	call	_sprintf	;wreg free
  6308                           
  6309                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  6310  015C84  0102               	movlb	2	; () banked
  6311  015C86  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  6312  015C88  32E8               	rrcf	wreg,f,c
  6313  015C8A  32E8               	rrcf	wreg,f,c
  6314  015C8C  0B03               	andlw	3
  6315  015C8E  0D24               	mullw	36
  6316  015C90  0EB1               	movlw	low _T
  6317  015C92  6E2F               	movwf	(btemp+10)^0,c
  6318  015C94  0EFD               	movlw	high _T
  6319  015C96  6E30               	movwf	(btemp+11)^0,c
  6320  015C98  50F3               	movf	243,w,c
  6321  015C9A  262F               	addwf	(btemp+10)^0,f,c
  6322  015C9C  50F4               	movf	244,w,c
  6323  015C9E  2230               	addwfc	(btemp+11)^0,f,c
  6324  015CA0  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  6325  015CA6  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  6326  015CAC  0ECC               	movlw	low STR_31
  6327  015CAE  6EE6               	movwf	postinc1,c
  6328  015CB0  0EFF               	movlw	high STR_31
  6329  015CB2  6EE6               	movwf	postinc1,c
  6330  015CB4  0E01               	movlw	1
  6331  015CB6  6EE6               	movwf	postinc1,c
  6332  015CB8  0E02               	movlw	2
  6333  015CBA  6EE6               	movwf	postinc1,c
  6334  015CBC  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  6335  015CC0  0060  F097  FFE6   	movff	btemp,postinc1
  6336  015CC6  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6337  015CCC  0E06               	movlw	6
  6338  015CCE  6EE6               	movwf	postinc1,c
  6339  015CD0  ECD3  F0B7         	call	_sprintf	;wreg free
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;mconfig.c: 61:   V.help_id++;
  6343  015CD4  EE20  F29B         	lfsr	2,_V+155	;volatile
  6344  015CD8  38DF               	swapf	223,w,c
  6345  015CDA  6E30               	movwf	(btemp+11)^0,c
  6346  015CDC  3230               	rrcf	(btemp+11)^0,f,c
  6347  015CDE  3030               	rrcf	(btemp+11)^0,w,c
  6348  015CE0  0B03               	andlw	3
  6349  015CE2  6E30               	movwf	(btemp+11)^0,c
  6350  015CE4  2A30               	incf	(btemp+11)^0,f,c
  6351  015CE6  3A30               	swapf	(btemp+11)^0,f,c
  6352  015CE8  3630               	rlcf	(btemp+11)^0,f,c
  6353  015CEA  3630               	rlcf	(btemp+11)^0,f,c
  6354  015CEC  50DF               	movf	223,w,c
  6355  015CEE  1830               	xorwf	(btemp+11)^0,w,c
  6356  015CF0  0B3F               	andlw	-193
  6357  015CF2  1830               	xorwf	(btemp+11)^0,w,c
  6358  015CF4  6EDF               	movwf	223,c
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  6362  015CF6  0EB8               	movlw	184
  6363  015CF8  6EE6               	movwf	postinc1,c
  6364  015CFA  0E0B               	movlw	11
  6365  015CFC  6EE6               	movwf	postinc1,c
  6366  015CFE  0E09               	movlw	9
  6367  015D00  6EE6               	movwf	postinc1,c
  6368  015D02  ECD8  F0C3         	call	_StartTimer	;wreg free
  6369                           
  6370                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  6371  015D06  0EB8               	movlw	184
  6372  015D08  6EE6               	movwf	postinc1,c
  6373  015D0A  0E0B               	movlw	11
  6374  015D0C  6EE6               	movwf	postinc1,c
  6375  015D0E  0E07               	movlw	7
  6376  015D10  6EE6               	movwf	postinc1,c
  6377  015D12  ECD8  F0C3         	call	_StartTimer	;wreg free
  6378                           
  6379                           ;mconfig.c: 64:   mode_lamp_bright();
  6380  015D16  ECED  F0C8         	call	_mode_lamp_bright	;wreg free
  6381                           
  6382                           ;mconfig.c: 65:   update_lcd(1);
  6383  015D1A  0E01               	movlw	1
  6384  015D1C  6EE6               	movwf	postinc1,c
  6385  015D1E  EC4B  F0B7         	call	_update_lcd	;wreg free
  6386                           
  6387                           ;mconfig.c: 67:  } else {
  6388  015D22  D032               	goto	l1670
  6389  015D24                     l10983:
  6390                           
  6391                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  6392  015D24  0E09               	movlw	9
  6393  015D26  6EE6               	movwf	postinc1,c
  6394  015D28  EC39  F0C6         	call	_TimerDone	;wreg free
  6395  015D2C  5025               	movf	btemp^0,w,c
  6396  015D2E  B4D8               	btfsc	status,2,c
  6397  015D30  D02B               	goto	l1670
  6398                           
  6399                           ;mconfig.c: 69:    set_vterm(0);
  6400  015D32  0E00               	movlw	0
  6401  015D34  6EE6               	movwf	postinc1,c
  6402  015D36  EC25  F0C8         	call	_set_vterm	;wreg free
  6403                           
  6404                           ;mconfig.c: 70:    V.help = 0;
  6405  015D3A  0102               	movlb	2	; () banked
  6406  015D3C  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  6407                           
  6408                           ; BSR set to: 2
  6409                           ;mconfig.c: 71:    set_display_info(display_help());
  6410  015D3E  EC21  F0C9         	call	_display_help	;wreg free
  6411  015D42  5025               	movf	btemp^0,w,c
  6412  015D44  6EE6               	movwf	postinc1,c
  6413  015D46  EC34  F0C8         	call	_set_display_info	;wreg free
  6414                           
  6415                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  6416  015D4A  0060  FA57  FFE6   	movff	_V+149,postinc1
  6417  015D50  0060  FA5B  FFE6   	movff	_V+150,postinc1
  6418  015D56  EC89  F0C8         	call	_mode_lamp_dim	;wreg free
  6419                           
  6420                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  6421  015D5A  0E0B               	movlw	11
  6422  015D5C  6EE6               	movwf	postinc1,c
  6423  015D5E  EC39  F0C6         	call	_TimerDone	;wreg free
  6424  015D62  5025               	movf	btemp^0,w,c
  6425  015D64  B4D8               	btfsc	status,2,c
  6426  015D66  D010               	goto	l1670
  6427                           
  6428                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  6429  015D68  0102               	movlb	2	; () banked
  6430  015D6A  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  6431  015D6C  A4D8               	btfss	status,2,c
  6432  015D6E  D002               	goto	u10690
  6433  015D70  0E01               	movlw	1
  6434  015D72  D001               	goto	u10700
  6435  015D74                     u10690:
  6436  015D74  0E00               	movlw	0
  6437  015D76                     u10700:
  6438  015D76  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  6439                           
  6440                           ; BSR set to: 2
  6441                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  6442  015D78  0EDC               	movlw	220
  6443  015D7A  6EE6               	movwf	postinc1,c
  6444  015D7C  0E05               	movlw	5
  6445  015D7E  6EE6               	movwf	postinc1,c
  6446  015D80  0E0B               	movlw	11
  6447  015D82  6EE6               	movwf	postinc1,c
  6448  015D84  ECD8  F0C3         	call	_StartTimer	;wreg free
  6449  015D88                     l1670:
  6450                           
  6451                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6452  015D88  52E5               	movf	postdec1,f,c
  6453  015D8A  0012               	return		;funcret
  6454  015D8C                     __end_of_check_help:
  6455                           	opt callstack 0
  6456                           
  6457 ;; *************** function _vterm_dump *****************
  6458 ;; Defined at:
  6459 ;;		line 121 in file "mconfig.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;		None
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;		None
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1  [STACK] void 
  6466 ;; Registers used:
  6467 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6468 ;; Tracked objects:
  6469 ;;		On entry : 3F/2
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6477 ;;Total ram usage:        0 bytes
  6478 ;; Hardware stack levels used:    1
  6479 ;; Hardware stack levels required when called:   18
  6480 ;; This function calls:
  6481 ;;		_WaitMs
  6482 ;;		_eaDogM_WriteStringAtPos
  6483 ;;		_get_vterm_ptr
  6484 ;;		_sprintf
  6485 ;;		_wait_lcd_done
  6486 ;; This function is called by:
  6487 ;;		_check_help
  6488 ;; This function uses a reentrant model
  6489 ;;
  6490                           
  6491                           	psect	text25
  6492  016A18                     __ptext25:
  6493                           	opt callstack 0
  6494  016A18                     _vterm_dump:
  6495                           	opt callstack 11
  6496                           
  6497                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  6498                           
  6499                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6500                           ;incstack = 0
  6501  016A18  0E01               	movlw	1
  6502  016A1A  6EE6               	movwf	postinc1,c
  6503  016A1C  0E00               	movlw	0
  6504  016A1E  6EE6               	movwf	postinc1,c
  6505  016A20  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  6506  016A24  0060  F097  FFE6   	movff	btemp,postinc1
  6507  016A2A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6508  016A30  0E00               	movlw	0
  6509  016A32  6EE6               	movwf	postinc1,c
  6510  016A34  0E00               	movlw	0
  6511  016A36  6EE6               	movwf	postinc1,c
  6512  016A38  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  6513  016A3C  0060  F097  FFE6   	movff	btemp,postinc1
  6514  016A42  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6515  016A48  0EA2               	movlw	low STR_33
  6516  016A4A  6EE6               	movwf	postinc1,c
  6517  016A4C  0EFF               	movlw	high STR_33
  6518  016A4E  6EE6               	movwf	postinc1,c
  6519  016A50  0E01               	movlw	low (_V+1)
  6520  016A52  6EE6               	movwf	postinc1,c
  6521  016A54  0E02               	movlw	high (_V+1)
  6522  016A56  6EE6               	movwf	postinc1,c
  6523  016A58  0E08               	movlw	8
  6524  016A5A  6EE6               	movwf	postinc1,c
  6525  016A5C  ECD3  F0B7         	call	_sprintf	;wreg free
  6526                           
  6527                           ; BSR set to: 0
  6528                           ;mconfig.c: 124:  wait_lcd_done();
  6529  016A60  EC61  F0C8         	call	_wait_lcd_done	;wreg free
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  6533  016A64  0E01               	movlw	low (_V+1)
  6534  016A66  6EE6               	movwf	postinc1,c
  6535  016A68  0E02               	movlw	high (_V+1)
  6536  016A6A  6EE6               	movwf	postinc1,c
  6537  016A6C  0E00               	movlw	0
  6538  016A6E  6EE6               	movwf	postinc1,c
  6539  016A70  0E00               	movlw	0
  6540  016A72  6EE6               	movwf	postinc1,c
  6541  016A74  ECC9  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  6542                           
  6543                           ; BSR set to: 59
  6544                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  6545  016A78  0E01               	movlw	1
  6546  016A7A  6EE6               	movwf	postinc1,c
  6547  016A7C  0E01               	movlw	1
  6548  016A7E  6EE6               	movwf	postinc1,c
  6549  016A80  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  6550  016A84  0060  F097  FFE6   	movff	btemp,postinc1
  6551  016A8A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6552  016A90  0E00               	movlw	0
  6553  016A92  6EE6               	movwf	postinc1,c
  6554  016A94  0E01               	movlw	1
  6555  016A96  6EE6               	movwf	postinc1,c
  6556  016A98  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  6557  016A9C  0060  F097  FFE6   	movff	btemp,postinc1
  6558  016AA2  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6559  016AA8  0EA2               	movlw	low STR_33
  6560  016AAA  6EE6               	movwf	postinc1,c
  6561  016AAC  0EFF               	movlw	high STR_33
  6562  016AAE  6EE6               	movwf	postinc1,c
  6563  016AB0  0E01               	movlw	low (_V+1)
  6564  016AB2  6EE6               	movwf	postinc1,c
  6565  016AB4  0E02               	movlw	high (_V+1)
  6566  016AB6  6EE6               	movwf	postinc1,c
  6567  016AB8  0E08               	movlw	8
  6568  016ABA  6EE6               	movwf	postinc1,c
  6569  016ABC  ECD3  F0B7         	call	_sprintf	;wreg free
  6570                           
  6571                           ; BSR set to: 0
  6572                           ;mconfig.c: 127:  wait_lcd_done();
  6573  016AC0  EC61  F0C8         	call	_wait_lcd_done	;wreg free
  6574                           
  6575                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  6576  016AC4  0E01               	movlw	low (_V+1)
  6577  016AC6  6EE6               	movwf	postinc1,c
  6578  016AC8  0E02               	movlw	high (_V+1)
  6579  016ACA  6EE6               	movwf	postinc1,c
  6580  016ACC  0E00               	movlw	0
  6581  016ACE  6EE6               	movwf	postinc1,c
  6582  016AD0  0E01               	movlw	1
  6583  016AD2  6EE6               	movwf	postinc1,c
  6584  016AD4  ECC9  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  6585                           
  6586                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  6587  016AD8  0E01               	movlw	1
  6588  016ADA  6EE6               	movwf	postinc1,c
  6589  016ADC  0E02               	movlw	2
  6590  016ADE  6EE6               	movwf	postinc1,c
  6591  016AE0  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  6592  016AE4  0060  F097  FFE6   	movff	btemp,postinc1
  6593  016AEA  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6594  016AF0  0E00               	movlw	0
  6595  016AF2  6EE6               	movwf	postinc1,c
  6596  016AF4  0E02               	movlw	2
  6597  016AF6  6EE6               	movwf	postinc1,c
  6598  016AF8  EC7A  F0C5         	call	_get_vterm_ptr	;wreg free
  6599  016AFC  0060  F097  FFE6   	movff	btemp,postinc1
  6600  016B02  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6601  016B08  0EA2               	movlw	low STR_33
  6602  016B0A  6EE6               	movwf	postinc1,c
  6603  016B0C  0EFF               	movlw	high STR_33
  6604  016B0E  6EE6               	movwf	postinc1,c
  6605  016B10  0E01               	movlw	low (_V+1)
  6606  016B12  6EE6               	movwf	postinc1,c
  6607  016B14  0E02               	movlw	high (_V+1)
  6608  016B16  6EE6               	movwf	postinc1,c
  6609  016B18  0E08               	movlw	8
  6610  016B1A  6EE6               	movwf	postinc1,c
  6611  016B1C  ECD3  F0B7         	call	_sprintf	;wreg free
  6612                           
  6613                           ; BSR set to: 0
  6614                           ;mconfig.c: 130:  wait_lcd_done();
  6615  016B20  EC61  F0C8         	call	_wait_lcd_done	;wreg free
  6616                           
  6617                           ; BSR set to: 0
  6618                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  6619  016B24  0E01               	movlw	low (_V+1)
  6620  016B26  6EE6               	movwf	postinc1,c
  6621  016B28  0E02               	movlw	high (_V+1)
  6622  016B2A  6EE6               	movwf	postinc1,c
  6623  016B2C  0E00               	movlw	0
  6624  016B2E  6EE6               	movwf	postinc1,c
  6625  016B30  0E02               	movlw	2
  6626  016B32  6EE6               	movwf	postinc1,c
  6627  016B34  ECC9  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  6628                           
  6629                           ; BSR set to: 59
  6630                           ;mconfig.c: 132:  WaitMs(3000);
  6631  016B38  0EB8               	movlw	184
  6632  016B3A  6EE6               	movwf	postinc1,c
  6633  016B3C  0E0B               	movlw	11
  6634  016B3E  6EE6               	movwf	postinc1,c
  6635  016B40  ECAE  F0C4         	call	_WaitMs	;wreg free
  6636                           
  6637                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  6638  016B44  0012               	return		;funcret
  6639  016B46                     __end_of_vterm_dump:
  6640                           	opt callstack 0
  6641                           
  6642 ;; *************** function _sprintf *****************
  6643 ;; Defined at:
  6644 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;  s               2  [STACK] PTR unsigned char 
  6647 ;;		 -> D.lcd(288), D(290), V(188), 
  6648 ;;  fmt             2  [STACK] PTR const unsigned char 
  6649 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  6650 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  6651 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  6652 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  6653 ;;		 -> STR_23(17), STR_22(16), STR_21(16), STR_20(19), 
  6654 ;;		 -> STR_19(19), STR_18(19), STR_17(19), STR_16(19), 
  6655 ;;		 -> STR_15(19), STR_14(19), STR_13(19), STR_12(19), 
  6656 ;;		 -> STR_11(17), STR_10(16), STR_9(16), STR_8(17), 
  6657 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  6658 ;;		 -> STR_1(17), 
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;  f               6  [STACK] struct _IO_FILE
  6661 ;;  ap              2  [STACK] PTR void [1]
  6662 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6663 ;;  ret             2    0        int 
  6664 ;; Return value:  Size  Location     Type
  6665 ;;                  2  [STACK] int 
  6666 ;; Registers used:
  6667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/1
  6670 ;;		On exit  : 3F/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6677 ;;Total ram usage:        0 bytes
  6678 ;; Hardware stack levels used:    1
  6679 ;; Hardware stack levels required when called:   15
  6680 ;; This function calls:
  6681 ;;		_vfprintf
  6682 ;; This function is called by:
  6683 ;;		_main
  6684 ;;		_check_help
  6685 ;;		_vterm_dump
  6686 ;; This function uses a reentrant model
  6687 ;;
  6688                           
  6689                           	psect	text26
  6690  016FA6                     __ptext26:
  6691                           	opt callstack 0
  6692  016FA6                     _sprintf:
  6693                           	opt callstack 0
  6694                           
  6695                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6696  016FA6  0E08               	movlw	8
  6697  016FA8  26E1               	addwf	fsr1l,f,c
  6698  016FAA  0E00               	movlw	0
  6699  016FAC  22E2               	addwfc	fsr1h,f,c
  6700                           
  6701                           ;incstack = 0
  6702  016FAE  0EFE               	movlw	254
  6703  016FB0  6E2F               	movwf	(btemp+10)^0,c
  6704  016FB2  0EFF               	movlw	255
  6705  016FB4  6E30               	movwf	(btemp+11)^0,c
  6706                           
  6707                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  6708  016FB6  0EF5               	movlw	245
  6709  016FB8  24E1               	addwf	fsr1l,w,c
  6710  016FBA  6E2D               	movwf	(btemp+8)^0,c
  6711  016FBC  0EFF               	movlw	255
  6712  016FBE  20E2               	addwfc	fsr1h,w,c
  6713  016FC0  6E2E               	movwf	(btemp+9)^0,c
  6714  016FC2  502F               	movf	(btemp+10)^0,w,c
  6715  016FC4  262D               	addwf	(btemp+8)^0,f,c
  6716  016FC6  5030               	movf	(btemp+11)^0,w,c
  6717  016FC8  222E               	addwfc	(btemp+9)^0,f,c
  6718                           
  6719                           ;stkvar	_ap @ sp[(-8)+6]
  6720  016FCA  0EFF               	movlw	-1
  6721  016FCC  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  6722  016FD2  0EFE               	movlw	-2
  6723  016FD4  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  6724                           
  6725                           ;stkvar	_s @ sp[(-8)+-3]
  6726  016FDA  0EF5               	movlw	-11
  6727  016FDC  006F FF8C  F02F    	movff	plusw1,btemp+10
  6728  016FE2  0EF6               	movlw	-10
  6729  016FE4  006F FF8C  F030    	movff	plusw1,btemp+11
  6730                           
  6731                           ;stkvar	_f @ sp[(-8)+0]
  6732  016FEA  0EF9               	movlw	-7
  6733  016FEC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  6734  016FF2  0EF8               	movlw	-8
  6735  016FF4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  6736                           
  6737                           ;stkvar	_f @ sp[(-8)+0]
  6738  016FFA  0EFA               	movlw	250
  6739  016FFC  24E1               	addwf	fsr1l,w,c
  6740  016FFE  6ED9               	movwf	fsr2l,c
  6741  017000  0EFF               	movlw	255
  6742  017002  20E2               	addwfc	fsr1h,w,c
  6743  017004  6EDA               	movwf	fsr2h,c
  6744  017006  0E00               	movlw	0
  6745  017008  6EDE               	movwf	postinc2,c
  6746  01700A  0E00               	movlw	0
  6747  01700C  6EDD               	movwf	postdec2,c
  6748                           
  6749                           ;stkvar	_f @ sp[(-8)+0]
  6750  01700E  0EFC               	movlw	252
  6751  017010  24E1               	addwf	fsr1l,w,c
  6752  017012  6ED9               	movwf	fsr2l,c
  6753  017014  0EFF               	movlw	255
  6754  017016  20E2               	addwfc	fsr1h,w,c
  6755  017018  6EDA               	movwf	fsr2h,c
  6756  01701A  0E00               	movlw	0
  6757  01701C  6EDE               	movwf	postinc2,c
  6758  01701E  0E00               	movlw	0
  6759  017020  6EDD               	movwf	postdec2,c
  6760                           
  6761                           ;stkvar	_ap @ sp[(-8)+6]
  6762  017022  0EFE               	movlw	254
  6763  017024  24E1               	addwf	fsr1l,w,c
  6764  017026  6E25               	movwf	btemp^0,c
  6765  017028  0EFF               	movlw	255
  6766  01702A  20E2               	addwfc	fsr1h,w,c
  6767  01702C  6E26               	movwf	(btemp+1)^0,c
  6768  01702E  0060  F097  FFE6   	movff	btemp,postinc1
  6769  017034  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6770                           
  6771                           ;stkvar	_fmt @ sp[(-10)+-5]
  6772  01703A  0EF1               	movlw	-15
  6773  01703C  006F FF8F FFE6     	movff	plusw1,postinc1
  6774  017042  006F FF8F FFE6     	movff	plusw1,postinc1
  6775                           
  6776                           ;stkvar	_f @ sp[(-12)+0]
  6777  017048  0EF4               	movlw	244
  6778  01704A  24E1               	addwf	fsr1l,w,c
  6779  01704C  6E25               	movwf	btemp^0,c
  6780  01704E  0EFF               	movlw	255
  6781  017050  20E2               	addwfc	fsr1h,w,c
  6782  017052  6E26               	movwf	(btemp+1)^0,c
  6783  017054  0060  F097  FFE6   	movff	btemp,postinc1
  6784  01705A  0060  F09B  FFE6   	movff	btemp+1,postinc1
  6785  017060  EC7C  F0BC         	call	_vfprintf	;wreg free
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;stkvar	_f @ sp[(-8)+0]
  6789  017064  0EFA               	movlw	250
  6790  017066  24E1               	addwf	fsr1l,w,c
  6791  017068  6ED9               	movwf	fsr2l,c
  6792  01706A  0EFF               	movlw	255
  6793  01706C  20E2               	addwfc	fsr1h,w,c
  6794  01706E  6EDA               	movwf	fsr2h,c
  6795  017070  006F FF78  F02F    	movff	postinc2,btemp+10
  6796  017076  006F FF74  F030    	movff	postdec2,btemp+11
  6797                           
  6798                           ;stkvar	_s @ sp[(-8)+-3]
  6799  01707C  0EF5               	movlw	-11
  6800  01707E  006F FF8C  F02D    	movff	plusw1,btemp+8
  6801  017084  0EF6               	movlw	-10
  6802  017086  006F FF8C  F02E    	movff	plusw1,btemp+9
  6803  01708C  502F               	movf	(btemp+10)^0,w,c
  6804  01708E  242D               	addwf	(btemp+8)^0,w,c
  6805  017090  6ED9               	movwf	fsr2l,c
  6806  017092  5030               	movf	(btemp+11)^0,w,c
  6807  017094  202E               	addwfc	(btemp+9)^0,w,c
  6808  017096  6EDA               	movwf	fsr2h,c
  6809  017098  0E00               	movlw	0
  6810  01709A  6EDF               	movwf	indf2,c
  6811                           
  6812                           ; BSR set to: 0
  6813                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 4, vargsize = 0
  6814  01709C  0EF8               	movlw	248
  6815  01709E  26E1               	addwf	fsr1l,f,c
  6816  0170A0  0EFF               	movlw	255
  6817  0170A2  22E2               	addwfc	fsr1h,f,c
  6818  0170A4  52E5               	movf	postdec1,f,c
  6819  0170A6  50E7               	movf	indf1,w,c
  6820  0170A8  5EE1               	subwf	fsr1l,f,c
  6821  0170AA  0E00               	movlw	0
  6822  0170AC  5AE2               	subwfb	fsr1h,f,c
  6823  0170AE  0012               	return		;funcret
  6824  0170B0                     __end_of_sprintf:
  6825                           	opt callstack 0
  6826                           
  6827 ;; *************** function _get_vterm_ptr *****************
  6828 ;; Defined at:
  6829 ;;		line 116 in file "mconfig.c"
  6830 ;; Parameters:    Size  Location     Type
  6831 ;;  line            1  [STACK] const unsigned char 
  6832 ;;  vterm           1  [STACK] const unsigned char 
  6833 ;; Auto vars:     Size  Location     Type
  6834 ;;		None
  6835 ;; Return value:  Size  Location     Type
  6836 ;;                  2  [STACK] PTR unsigned char 
  6837 ;; Registers used:
  6838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  6839 ;; Tracked objects:
  6840 ;;		On entry : 0/1
  6841 ;;		On exit  : 0/0
  6842 ;;		Unchanged: 0/0
  6843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6848 ;;Total ram usage:        0 bytes
  6849 ;; Hardware stack levels used:    1
  6850 ;; Hardware stack levels required when called:    7
  6851 ;; This function calls:
  6852 ;;		Nothing
  6853 ;; This function is called by:
  6854 ;;		_main
  6855 ;;		_check_help
  6856 ;;		_vterm_dump
  6857 ;; This function uses a reentrant model
  6858 ;;
  6859                           
  6860                           	psect	text27
  6861  018AF4                     __ptext27:
  6862                           	opt callstack 0
  6863  018AF4                     _get_vterm_ptr:
  6864                           	opt callstack 23
  6865                           
  6866                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  6867                           ;stkvar	_vterm @ sp[(0)+-2]
  6868                           
  6869                           ; BSR set to: 0
  6870                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6871                           ;incstack = 0
  6872  018AF4  0EFE               	movlw	-2
  6873  018AF6  50E3               	movf	plusw1,w,c
  6874  018AF8  0B03               	andlw	3
  6875  018AFA  0D48               	mullw	72
  6876  018AFC  0EFF               	movlw	low _D
  6877  018AFE  6E25               	movwf	btemp^0,c
  6878  018B00  0E06               	movlw	high _D
  6879  018B02  6E26               	movwf	(btemp+1)^0,c
  6880  018B04  50F3               	movf	243,w,c
  6881  018B06  2625               	addwf	btemp^0,f,c
  6882  018B08  50F4               	movf	244,w,c
  6883  018B0A  2226               	addwfc	(btemp+1)^0,f,c
  6884                           
  6885                           ;stkvar	_line @ sp[(0)+-1]
  6886  018B0C  0EFF               	movlw	-1
  6887  018B0E  50E3               	movf	plusw1,w,c
  6888  018B10  0B03               	andlw	3
  6889  018B12  0D18               	mullw	24
  6890  018B14  50F3               	movf	243,w,c
  6891  018B16  2625               	addwf	btemp^0,f,c
  6892  018B18  50F4               	movf	244,w,c
  6893  018B1A  2226               	addwfc	(btemp+1)^0,f,c
  6894                           
  6895                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6896  018B1C  52E5               	movf	postdec1,f,c
  6897  018B1E  52E5               	movf	postdec1,f,c
  6898  018B20  0012               	return		;funcret
  6899  018B22                     __end_of_get_vterm_ptr:
  6900                           	opt callstack 0
  6901                           
  6902 ;; *************** function _WaitMs *****************
  6903 ;; Defined at:
  6904 ;;		line 32 in file "timers.c"
  6905 ;; Parameters:    Size  Location     Type
  6906 ;;  numMilliseco    2  [STACK] const unsigned short 
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;		None
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  1  [STACK] void 
  6911 ;; Registers used:
  6912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  6913 ;; Tracked objects:
  6914 ;;		On entry : 0/2
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6922 ;;Total ram usage:        0 bytes
  6923 ;; Hardware stack levels used:    1
  6924 ;; Hardware stack levels required when called:    8
  6925 ;; This function calls:
  6926 ;;		_StartTimer
  6927 ;;		_TimerDone
  6928 ;; This function is called by:
  6929 ;;		_main
  6930 ;;		_vterm_dump
  6931 ;; This function uses a reentrant model
  6932 ;;
  6933                           
  6934                           	psect	text28
  6935  01895C                     __ptext28:
  6936                           	opt callstack 0
  6937  01895C                     _WaitMs:
  6938                           	opt callstack 20
  6939                           
  6940                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  6941                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  6942                           
  6943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6944                           ;incstack = 0
  6945  01895C  0EFE               	movlw	-2
  6946  01895E  006F FF8F FFE6     	movff	plusw1,postinc1
  6947  018964  006F FF8F FFE6     	movff	plusw1,postinc1
  6948  01896A  0E00               	movlw	0
  6949  01896C  6EE6               	movwf	postinc1,c
  6950  01896E  ECD8  F0C3         	call	_StartTimer	;wreg free
  6951                           
  6952                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6953  018972  D005               	goto	l8045
  6954  018974                     l1599:
  6955                           
  6956                           ;timers.c: 36:   __nop();
  6957  018974  F000               	nop	
  6958                           
  6959                           ;timers.c: 37:   __nop();
  6960  018976  F000               	nop	
  6961                           
  6962                           ;timers.c: 38:   __nop();
  6963  018978  F000               	nop	
  6964                           
  6965                           ;timers.c: 39:   __nop();
  6966  01897A  F000               	nop	
  6967  01897C  0004               	clrwdt		;# 
  6968  01897E                     l8045:
  6969                           
  6970                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  6971  01897E  0E00               	movlw	0
  6972  018980  6EE6               	movwf	postinc1,c
  6973  018982  EC39  F0C6         	call	_TimerDone	;wreg free
  6974  018986  5025               	movf	btemp^0,w,c
  6975  018988  B4D8               	btfsc	status,2,c
  6976  01898A  D7F4               	goto	l1599
  6977                           
  6978                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  6979  01898C  52E5               	movf	postdec1,f,c
  6980  01898E  52E5               	movf	postdec1,f,c
  6981  018990  0012               	return		;funcret
  6982  018992                     __end_of_WaitMs:
  6983                           	opt callstack 0
  6984                           
  6985 ;; *************** function _update_lcd *****************
  6986 ;; Defined at:
  6987 ;;		line 85 in file "mconfig.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;  vterm           1  [STACK] unsigned char 
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;		None
  6992 ;; Return value:  Size  Location     Type
  6993 ;;                  1  [STACK] unsigned char 
  6994 ;; Registers used:
  6995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6996 ;; Tracked objects:
  6997 ;;		On entry : 0/0
  6998 ;;		On exit  : 0/0
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7005 ;;Total ram usage:        0 bytes
  7006 ;; Hardware stack levels used:    1
  7007 ;; Hardware stack levels required when called:   18
  7008 ;; This function calls:
  7009 ;;		_eaDogM_WriteStringAtPos
  7010 ;;		_wait_lcd_done
  7011 ;; This function is called by:
  7012 ;;		_main
  7013 ;;		_check_help
  7014 ;; This function uses a reentrant model
  7015 ;;
  7016                           
  7017                           	psect	text29
  7018  016E96                     __ptext29:
  7019                           	opt callstack 0
  7020  016E96                     _update_lcd:
  7021                           	opt callstack 12
  7022                           
  7023                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  7024                           ;stkvar	_vterm @ sp[(0)+-1]
  7025                           
  7026                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7027                           ;incstack = 0
  7028  016E96  0EFF               	movlw	-1
  7029  016E98  006F FF8C  F025    	movff	plusw1,btemp
  7030  016E9E  0E03               	movlw	3
  7031  016EA0  1625               	andwf	btemp^0,f,c
  7032  016EA2  0EFF               	movlw	-1
  7033  016EA4  0060  F097  FFE3   	movff	btemp,plusw1
  7034                           
  7035                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  7036  016EAA  EE22  F01F         	lfsr	2,_D+288
  7037  016EAE  A0DF               	btfss	indf2,0,c
  7038  016EB0  D004               	goto	l10849
  7039                           
  7040                           ;stkvar	_vterm @ sp[(0)+-1]
  7041  016EB2  0EFF               	movlw	-1
  7042  016EB4  50E3               	movf	plusw1,w,c
  7043  016EB6  B4D8               	btfsc	status,2,c
  7044  016EB8  D074               	goto	l1677
  7045  016EBA                     l10849:
  7046                           
  7047                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  7048                           ;stkvar	_vterm @ sp[(0)+-1]
  7049  016EBA  0EFF               	movlw	-1
  7050  016EBC  50E3               	movf	plusw1,w,c
  7051  016EBE  0D48               	mullw	72
  7052  016EC0  0E0F               	movlw	low (_D+16)
  7053  016EC2  24F3               	addwf	243,w,c
  7054  016EC4  6ED9               	movwf	fsr2l,c
  7055  016EC6  0E07               	movlw	high (_D+16)
  7056  016EC8  20F4               	addwfc	prodh,w,c
  7057  016ECA  6EDA               	movwf	fsr2h,c
  7058  016ECC  0E00               	movlw	0
  7059  016ECE  6EDF               	movwf	indf2,c
  7060                           
  7061                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  7062                           ;stkvar	_vterm @ sp[(0)+-1]
  7063  016ED0  0EFF               	movlw	-1
  7064  016ED2  50E3               	movf	plusw1,w,c
  7065  016ED4  0D48               	mullw	72
  7066  016ED6  0E27               	movlw	low (_D+40)
  7067  016ED8  24F3               	addwf	243,w,c
  7068  016EDA  6ED9               	movwf	fsr2l,c
  7069  016EDC  0E07               	movlw	high (_D+40)
  7070  016EDE  20F4               	addwfc	prodh,w,c
  7071  016EE0  6EDA               	movwf	fsr2h,c
  7072  016EE2  0E00               	movlw	0
  7073  016EE4  6EDF               	movwf	indf2,c
  7074                           
  7075                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  7076                           ;stkvar	_vterm @ sp[(0)+-1]
  7077  016EE6  0EFF               	movlw	-1
  7078  016EE8  50E3               	movf	plusw1,w,c
  7079  016EEA  0D48               	mullw	72
  7080  016EEC  0E3F               	movlw	low (_D+64)
  7081  016EEE  24F3               	addwf	243,w,c
  7082  016EF0  6ED9               	movwf	fsr2l,c
  7083  016EF2  0E07               	movlw	high (_D+64)
  7084  016EF4  20F4               	addwfc	prodh,w,c
  7085  016EF6  6EDA               	movwf	fsr2h,c
  7086  016EF8  0E00               	movlw	0
  7087  016EFA  6EDF               	movwf	indf2,c
  7088                           
  7089                           ;mconfig.c: 95:  wait_lcd_done();
  7090  016EFC  EC61  F0C8         	call	_wait_lcd_done	;wreg free
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  7094                           ;stkvar	_vterm @ sp[(0)+-1]
  7095  016F00  0EFF               	movlw	-1
  7096  016F02  50E3               	movf	plusw1,w,c
  7097  016F04  0D48               	mullw	72
  7098  016F06  0EFF               	movlw	low _D
  7099  016F08  6E2F               	movwf	(btemp+10)^0,c
  7100  016F0A  0E06               	movlw	high _D
  7101  016F0C  6E30               	movwf	(btemp+11)^0,c
  7102  016F0E  50F3               	movf	243,w,c
  7103  016F10  262F               	addwf	(btemp+10)^0,f,c
  7104  016F12  50F4               	movf	244,w,c
  7105  016F14  2230               	addwfc	(btemp+11)^0,f,c
  7106  016F16  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7107  016F1C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7108  016F22  0E00               	movlw	0
  7109  016F24  6EE6               	movwf	postinc1,c
  7110  016F26  0E00               	movlw	0
  7111  016F28  6EE6               	movwf	postinc1,c
  7112  016F2A  ECC9  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  7113                           
  7114                           ; BSR set to: 59
  7115                           ;mconfig.c: 97:  wait_lcd_done();
  7116  016F2E  EC61  F0C8         	call	_wait_lcd_done	;wreg free
  7117                           
  7118                           ; BSR set to: 0
  7119                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  7120                           ;stkvar	_vterm @ sp[(0)+-1]
  7121  016F32  0EFF               	movlw	-1
  7122  016F34  50E3               	movf	plusw1,w,c
  7123  016F36  0D48               	mullw	72
  7124  016F38  0EFF               	movlw	low _D
  7125  016F3A  6E2F               	movwf	(btemp+10)^0,c
  7126  016F3C  0E06               	movlw	high _D
  7127  016F3E  6E30               	movwf	(btemp+11)^0,c
  7128  016F40  0E18               	movlw	24
  7129  016F42  262F               	addwf	(btemp+10)^0,f,c
  7130  016F44  0E00               	movlw	0
  7131  016F46  2230               	addwfc	(btemp+11)^0,f,c
  7132  016F48  50F3               	movf	243,w,c
  7133  016F4A  262F               	addwf	(btemp+10)^0,f,c
  7134  016F4C  50F4               	movf	244,w,c
  7135  016F4E  2230               	addwfc	(btemp+11)^0,f,c
  7136  016F50  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7137  016F56  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7138  016F5C  0E00               	movlw	0
  7139  016F5E  6EE6               	movwf	postinc1,c
  7140  016F60  0E01               	movlw	1
  7141  016F62  6EE6               	movwf	postinc1,c
  7142  016F64  ECC9  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  7143                           
  7144                           ; BSR set to: 59
  7145                           ;mconfig.c: 99:  wait_lcd_done();
  7146  016F68  EC61  F0C8         	call	_wait_lcd_done	;wreg free
  7147                           
  7148                           ; BSR set to: 0
  7149                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  7150                           ;stkvar	_vterm @ sp[(0)+-1]
  7151  016F6C  0EFF               	movlw	-1
  7152  016F6E  50E3               	movf	plusw1,w,c
  7153  016F70  0D48               	mullw	72
  7154  016F72  0EFF               	movlw	low _D
  7155  016F74  6E2F               	movwf	(btemp+10)^0,c
  7156  016F76  0E06               	movlw	high _D
  7157  016F78  6E30               	movwf	(btemp+11)^0,c
  7158  016F7A  0E30               	movlw	48
  7159  016F7C  262F               	addwf	(btemp+10)^0,f,c
  7160  016F7E  0E00               	movlw	0
  7161  016F80  2230               	addwfc	(btemp+11)^0,f,c
  7162  016F82  50F3               	movf	243,w,c
  7163  016F84  262F               	addwf	(btemp+10)^0,f,c
  7164  016F86  50F4               	movf	244,w,c
  7165  016F88  2230               	addwfc	(btemp+11)^0,f,c
  7166  016F8A  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  7167  016F90  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  7168  016F96  0E00               	movlw	0
  7169  016F98  6EE6               	movwf	postinc1,c
  7170  016F9A  0E02               	movlw	2
  7171  016F9C  6EE6               	movwf	postinc1,c
  7172  016F9E  ECC9  F0C4         	call	_eaDogM_WriteStringAtPos	;wreg free
  7173  016FA2                     l1677:
  7174                           
  7175                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7176  016FA2  52E5               	movf	postdec1,f,c
  7177  016FA4  0012               	return		;funcret
  7178  016FA6                     __end_of_update_lcd:
  7179                           	opt callstack 0
  7180                           
  7181 ;; *************** function _eaDogM_WriteStringAtPos *****************
  7182 ;; Defined at:
  7183 ;;		line 265 in file "eadog.c"
  7184 ;; Parameters:    Size  Location     Type
  7185 ;;  r               1  [STACK] const unsigned char 
  7186 ;;  c               1  [STACK] const unsigned char 
  7187 ;;  strPtr          2  [STACK] PTR unsigned char 
  7188 ;;		 -> D.lcd(288), D(290), V(188), 
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;		None
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  1  [STACK] void 
  7193 ;; Registers used:
  7194 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7195 ;; Tracked objects:
  7196 ;;		On entry : 3F/0
  7197 ;;		On exit  : 3F/3B
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7204 ;;Total ram usage:        0 bytes
  7205 ;; Hardware stack levels used:    1
  7206 ;; Hardware stack levels required when called:   17
  7207 ;; This function calls:
  7208 ;;		_eaDogM_WriteString
  7209 ;;		_send_lcd_cmd_dma
  7210 ;; This function is called by:
  7211 ;;		_update_lcd
  7212 ;;		_vterm_dump
  7213 ;; This function uses a reentrant model
  7214 ;;
  7215                           
  7216                           	psect	text30
  7217  018992                     __ptext30:
  7218                           	opt callstack 0
  7219  018992                     _eaDogM_WriteStringAtPos:
  7220                           	opt callstack 12
  7221                           
  7222                           ;eadog.c: 265: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 266: {;eadog.c: 267:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  7223                           ;stkvar	_c @ sp[(0)+-2]
  7224                           
  7225                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7226                           ;incstack = 0
  7227  018992  0EFE               	movlw	-2
  7228  018994  006F FF8C  F030    	movff	plusw1,btemp+11
  7229                           
  7230                           ;stkvar	_r @ sp[(0)+-1]
  7231  01899A  0EFF               	movlw	-1
  7232  01899C  50E3               	movf	plusw1,w,c
  7233  01899E  0D10               	mullw	16
  7234  0189A0  50F3               	movf	243,w,c
  7235  0189A2  2430               	addwf	(btemp+11)^0,w,c
  7236  0189A4  0F80               	addlw	128
  7237  0189A6  6EE6               	movwf	postinc1,c
  7238  0189A8  EC47  F0C2         	call	_send_lcd_cmd_dma	;wreg free
  7239                           
  7240                           ;eadog.c: 268:  eaDogM_WriteString(strPtr);
  7241                           ;stkvar	_strPtr @ sp[(0)+-4]
  7242  0189AC  0EFC               	movlw	-4
  7243  0189AE  006F FF8F FFE6     	movff	plusw1,postinc1
  7244  0189B4  006F FF8F FFE6     	movff	plusw1,postinc1
  7245  0189BA  EC27  F0BD         	call	_eaDogM_WriteString	;wreg free
  7246                           
  7247                           ; BSR set to: 59
  7248                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  7249  0189BE  52E5               	movf	postdec1,f,c
  7250  0189C0  52E5               	movf	postdec1,f,c
  7251  0189C2  52E5               	movf	postdec1,f,c
  7252  0189C4  52E5               	movf	postdec1,f,c
  7253  0189C6  0012               	return		;funcret
  7254  0189C8                     __end_of_eaDogM_WriteStringAtPos:
  7255                           	opt callstack 0
  7256                           
  7257 ;; *************** function _send_lcd_cmd_dma *****************
  7258 ;; Defined at:
  7259 ;;		line 218 in file "eadog.c"
  7260 ;; Parameters:    Size  Location     Type
  7261 ;;  strPtr          1  [STACK] unsigned char 
  7262 ;; Auto vars:     Size  Location     Type
  7263 ;;		None
  7264 ;; Return value:  Size  Location     Type
  7265 ;;                  1  [STACK] void 
  7266 ;; Registers used:
  7267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7268 ;; Tracked objects:
  7269 ;;		On entry : 0/3D
  7270 ;;		On exit  : 3F/0
  7271 ;;		Unchanged: 0/0
  7272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7277 ;;Total ram usage:        0 bytes
  7278 ;; Hardware stack levels used:    1
  7279 ;; Hardware stack levels required when called:   16
  7280 ;; This function calls:
  7281 ;;		_printf
  7282 ;;		_ringBufS_flush
  7283 ;;		_start_lcd
  7284 ;;		_wait_lcd_done
  7285 ;;		_wait_lcd_set
  7286 ;; This function is called by:
  7287 ;;		_eaDogM_WriteCommand
  7288 ;;		_eaDogM_WriteStringAtPos
  7289 ;; This function uses a reentrant model
  7290 ;;
  7291                           
  7292                           	psect	text31
  7293  01848E                     __ptext31:
  7294                           	opt callstack 0
  7295  01848E                     _send_lcd_cmd_dma:
  7296                           	opt callstack 12
  7297                           
  7298                           ;eadog.c: 218: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 219: {;eadog.c: 221:  wait
      +                          _lcd_set();
  7299                           
  7300                           ; BSR set to: 59
  7301                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7302                           ;incstack = 0
  7303  01848E  EC30  F0C9         	call	_wait_lcd_set	;wreg free
  7304                           
  7305                           ; BSR set to: 0
  7306                           ;eadog.c: 223:  ringBufS_flush(spi_link.tx1a, 0);
  7307  018492  0E00               	movlw	0
  7308  018494  6EE6               	movwf	postinc1,c
  7309  018496  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  7310  01849C  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  7311  0184A2  EC17  F0BE         	call	_ringBufS_flush	;wreg free
  7312  0184A6  92BC               	bcf	188,1,c	;volatile
  7313  0184A8  94BC               	bcf	188,2,c	;volatile
  7314                           
  7315                           ;eadog.c: 226:  DMA1CON0bits.EN = 0;
  7316  0184AA  013B               	movlb	59	; () banked
  7317  0184AC  9FFC               	bcf	252,7,b	;volatile
  7318                           
  7319                           ; BSR set to: 59
  7320                           ;eadog.c: 227:  DMA1SSZ = 1;
  7321  0184AE  0E00               	movlw	0
  7322  0184B0  6FF8               	movwf	248,b	;volatile
  7323  0184B2  0E01               	movlw	1
  7324  0184B4  6FF7               	movwf	247,b	;volatile
  7325                           
  7326                           ; BSR set to: 59
  7327                           ;eadog.c: 228:  DMA1CON0bits.EN = 1;
  7328  0184B6  8FFC               	bsf	252,7,b	;volatile
  7329                           
  7330                           ; BSR set to: 59
  7331                           ;eadog.c: 229:  printf("%c", strPtr);
  7332                           ;stkvar	_strPtr @ sp[(0)+-1]
  7333  0184B8  0EFF               	movlw	-1
  7334  0184BA  50E3               	movf	plusw1,w,c
  7335  0184BC  6EE6               	movwf	postinc1,c
  7336  0184BE  0E00               	movlw	0
  7337  0184C0  6EE6               	movwf	postinc1,c
  7338  0184C2  0EF8               	movlw	low STR_25
  7339  0184C4  6EE6               	movwf	postinc1,c
  7340  0184C6  0EFF               	movlw	high STR_25
  7341  0184C8  6EE6               	movwf	postinc1,c
  7342  0184CA  0E04               	movlw	4
  7343  0184CC  6EE6               	movwf	postinc1,c
  7344  0184CE  EC60  F0C1         	call	_printf	;wreg free
  7345                           
  7346                           ; BSR set to: 0
  7347                           ;eadog.c: 230:  start_lcd();
  7348  0184D2  EC33  F0C9         	call	_start_lcd	;wreg free
  7349                           
  7350                           ; BSR set to: 59
  7351                           ;eadog.c: 231:  wait_lcd_done();
  7352  0184D6  EC61  F0C8         	call	_wait_lcd_done	;wreg free
  7353                           
  7354                           ; BSR set to: 0
  7355  0184DA  82BC               	bsf	188,1,c	;volatile
  7356                           
  7357                           ; BSR set to: 0
  7358                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7359  0184DC  52E5               	movf	postdec1,f,c
  7360  0184DE  0012               	return		;funcret
  7361  0184E0                     __end_of_send_lcd_cmd_dma:
  7362                           	opt callstack 0
  7363                           
  7364 ;; *************** function _wait_lcd_done *****************
  7365 ;; Defined at:
  7366 ;;		line 154 in file "eadog.c"
  7367 ;; Parameters:    Size  Location     Type
  7368 ;;		None
  7369 ;; Auto vars:     Size  Location     Type
  7370 ;;		None
  7371 ;; Return value:  Size  Location     Type
  7372 ;;                  1  [STACK] void 
  7373 ;; Registers used:
  7374 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7375 ;; Tracked objects:
  7376 ;;		On entry : 0/0
  7377 ;;		On exit  : 3F/0
  7378 ;;		Unchanged: 0/0
  7379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7384 ;;Total ram usage:        0 bytes
  7385 ;; Hardware stack levels used:    1
  7386 ;; Hardware stack levels required when called:    8
  7387 ;; This function calls:
  7388 ;;		_wdtdelay
  7389 ;; This function is called by:
  7390 ;;		_send_lcd_cmd_dma
  7391 ;;		_update_lcd
  7392 ;;		_vterm_dump
  7393 ;; This function uses a reentrant model
  7394 ;;
  7395                           
  7396                           	psect	text32
  7397  0190C2                     __ptext32:
  7398                           	opt callstack 0
  7399  0190C2                     _wait_lcd_done:
  7400                           	opt callstack 21
  7401                           
  7402                           ;eadog.c: 156:  while (spi_link.LCD_DATA);
  7403                           
  7404                           ; BSR set to: 0
  7405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7406                           ;incstack = 0
  7407  0190C2  0100               	movlb	0	; () banked
  7408  0190C4  B789               	btfsc	_spi_link& (0+255),3,b	;volatile
  7409  0190C6  D7FD               	goto	_wait_lcd_done
  7410                           
  7411                           ; BSR set to: 0
  7412                           ;eadog.c: 157:  wdtdelay(50);
  7413  0190C8  0E32               	movlw	50
  7414  0190CA  6EE6               	movwf	postinc1,c
  7415  0190CC  0E00               	movlw	0
  7416  0190CE  6EE6               	movwf	postinc1,c
  7417  0190D0  0E00               	movlw	0
  7418  0190D2  6EE6               	movwf	postinc1,c
  7419  0190D4  0E00               	movlw	0
  7420  0190D6  6EE6               	movwf	postinc1,c
  7421  0190D8  ECC0  F0C1         	call	_wdtdelay	;wreg free
  7422                           
  7423                           ; BSR set to: 0
  7424                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  7425  0190DC  0012               	return		;funcret
  7426  0190DE                     __end_of_wait_lcd_done:
  7427                           	opt callstack 0
  7428                           
  7429 ;; *************** function _wdtdelay *****************
  7430 ;; Defined at:
  7431 ;;		line 22 in file "eadog.c"
  7432 ;; Parameters:    Size  Location     Type
  7433 ;;  delay           4  [STACK] const unsigned long 
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;		None
  7436 ;; Return value:  Size  Location     Type
  7437 ;;                  1  [STACK] void 
  7438 ;; Registers used:
  7439 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7440 ;; Tracked objects:
  7441 ;;		On entry : 0/0
  7442 ;;		On exit  : 3F/0
  7443 ;;		Unchanged: 0/0
  7444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7449 ;;Total ram usage:        0 bytes
  7450 ;; Hardware stack levels used:    1
  7451 ;; Hardware stack levels required when called:    7
  7452 ;; This function calls:
  7453 ;;		Nothing
  7454 ;; This function is called by:
  7455 ;;		_init_display
  7456 ;;		_send_lcd_cmd
  7457 ;;		_send_lcd_cmd_long
  7458 ;;		_wait_lcd_done
  7459 ;; This function uses a reentrant model
  7460 ;;
  7461                           
  7462                           	psect	text33
  7463  018380                     __ptext33:
  7464                           	opt callstack 0
  7465  018380                     _wdtdelay:
  7466                           	opt callstack 21
  7467                           
  7468                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  7469                           
  7470                           ; BSR set to: 0
  7471                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7472                           ;incstack = 0
  7473  018380  0100               	movlb	0	; () banked
  7474  018382  6BA1               	clrf	wdtdelay@dcount& (0+255),b
  7475  018384  6BA2               	clrf	(wdtdelay@dcount+1)& (0+255),b
  7476  018386  6BA3               	clrf	(wdtdelay@dcount+2)& (0+255),b
  7477  018388  6BA4               	clrf	(wdtdelay@dcount+3)& (0+255),b
  7478  01838A                     l1444:
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;eadog.c: 27:   __nop();
  7482  01838A  F000               	nop	
  7483  01838C  0004               	clrwdt		;# 
  7484                           
  7485                           ;eadog.c: 29:  };
  7486  01838E  0E01               	movlw	1
  7487  018390  0100               	movlb	0	; () banked
  7488  018392  27A1               	addwf	wdtdelay@dcount& (0+255),f,b
  7489  018394  0E00               	movlw	0
  7490  018396  23A2               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  7491  018398  23A3               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  7492  01839A  23A4               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  7493                           
  7494                           ; BSR set to: 0
  7495                           ;stkvar	_delay @ sp[(0)+-4]
  7496  01839C  0EFC               	movlw	-4
  7497  01839E  006F FF8C  F025    	movff	plusw1,btemp
  7498  0183A4  51A1               	movf	wdtdelay@dcount& (0+255),w,b
  7499  0183A6  5C25               	subwf	btemp^0,w,c
  7500  0183A8  0EFD               	movlw	-3
  7501  0183AA  006F FF8C  F025    	movff	plusw1,btemp
  7502  0183B0  51A2               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  7503  0183B2  5825               	subwfb	btemp^0,w,c
  7504  0183B4  0EFE               	movlw	-2
  7505  0183B6  006F FF8C  F025    	movff	plusw1,btemp
  7506  0183BC  51A3               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  7507  0183BE  5825               	subwfb	btemp^0,w,c
  7508  0183C0  0EFF               	movlw	-1
  7509  0183C2  006F FF8C  F025    	movff	plusw1,btemp
  7510  0183C8  51A4               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  7511  0183CA  5825               	subwfb	btemp^0,w,c
  7512  0183CC  B0D8               	btfsc	status,0,c
  7513  0183CE  D7DD               	goto	l1444
  7514                           
  7515                           ; BSR set to: 0
  7516                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  7517  0183D0  52E5               	movf	postdec1,f,c
  7518  0183D2  52E5               	movf	postdec1,f,c
  7519  0183D4  52E5               	movf	postdec1,f,c
  7520  0183D6  52E5               	movf	postdec1,f,c
  7521  0183D8  0012               	return		;funcret
  7522  0183DA                     __end_of_wdtdelay:
  7523                           	opt callstack 0
  7524                           
  7525 ;; *************** function _eaDogM_WriteString *****************
  7526 ;; Defined at:
  7527 ;;		line 197 in file "eadog.c"
  7528 ;; Parameters:    Size  Location     Type
  7529 ;;  strPtr          2  [STACK] PTR unsigned char 
  7530 ;;		 -> D.lcd(288), D(290), V(188), 
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;		None
  7533 ;; Return value:  Size  Location     Type
  7534 ;;                  1  [STACK] void 
  7535 ;; Registers used:
  7536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  7537 ;; Tracked objects:
  7538 ;;		On entry : 3F/0
  7539 ;;		On exit  : 3F/3B
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7546 ;;Total ram usage:        0 bytes
  7547 ;; Hardware stack levels used:    1
  7548 ;; Hardware stack levels required when called:   16
  7549 ;; This function calls:
  7550 ;;		_printf
  7551 ;;		_ringBufS_flush
  7552 ;;		_start_lcd
  7553 ;;		_strlen
  7554 ;;		_wait_lcd_set
  7555 ;; This function is called by:
  7556 ;;		_eaDogM_WriteStringAtPos
  7557 ;; This function uses a reentrant model
  7558 ;;
  7559                           
  7560                           	psect	text34
  7561  017A4E                     __ptext34:
  7562                           	opt callstack 0
  7563  017A4E                     _eaDogM_WriteString:
  7564                           	opt callstack 12
  7565                           
  7566                           ;eadog.c: 197: void eaDogM_WriteString(char *strPtr);eadog.c: 198: {;eadog.c: 200:  wait
      +                          _lcd_set();
  7567                           
  7568                           ; BSR set to: 0
  7569                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7570                           ;incstack = 0
  7571  017A4E  EC30  F0C9         	call	_wait_lcd_set	;wreg free
  7572                           
  7573                           ; BSR set to: 0
  7574                           ;eadog.c: 202:  ringBufS_flush(spi_link.tx1a, 0);
  7575  017A52  0E00               	movlw	0
  7576  017A54  6EE6               	movwf	postinc1,c
  7577  017A56  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
  7578  017A5C  0060  F243  FFE6   	movff	_spi_link+7,postinc1
  7579  017A62  EC17  F0BE         	call	_ringBufS_flush	;wreg free
  7580  017A66  94BC               	bcf	188,2,c	;volatile
  7581                           
  7582                           ;eadog.c: 204:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  7583                           ;stkvar	_strPtr @ sp[(0)+-2]
  7584  017A68  0EFE               	movlw	-2
  7585  017A6A  006F FF8F FFE6     	movff	plusw1,postinc1
  7586  017A70  006F FF8F FFE6     	movff	plusw1,postinc1
  7587  017A76  EC7A  F0BD         	call	_strlen	;wreg free
  7588  017A7A  5026               	movf	(btemp+1)^0,w,c
  7589  017A7C  E104               	bnz	u10600
  7590  017A7E  0E41               	movlw	65
  7591  017A80  5C25               	subwf	btemp^0,w,c
  7592  017A82  A0D8               	btfss	status,0,c
  7593  017A84  D010               	goto	l10815
  7594  017A86                     u10600:
  7595                           
  7596                           ;stkvar	_strPtr @ sp[(0)+-2]
  7597  017A86  0EFE               	movlw	-2
  7598  017A88  006F FF8C  F02F    	movff	plusw1,btemp+10
  7599  017A8E  0EFF               	movlw	-1
  7600  017A90  006F FF8C  F030    	movff	plusw1,btemp+11
  7601  017A96  0E40               	movlw	64
  7602  017A98  242F               	addwf	(btemp+10)^0,w,c
  7603  017A9A  6ED9               	movwf	fsr2l,c
  7604  017A9C  0E00               	movlw	0
  7605  017A9E  2030               	addwfc	(btemp+11)^0,w,c
  7606  017AA0  6EDA               	movwf	fsr2h,c
  7607  017AA2  0E00               	movlw	0
  7608  017AA4  6EDF               	movwf	indf2,c
  7609  017AA6                     l10815:
  7610                           
  7611                           ;eadog.c: 205:  DMA1CON0bits.EN = 0;
  7612  017AA6  013B               	movlb	59	; () banked
  7613  017AA8  9FFC               	bcf	252,7,b	;volatile
  7614                           
  7615                           ; BSR set to: 59
  7616                           ;eadog.c: 206:  DMA1SSZ = strlen(strPtr);
  7617                           ;stkvar	_strPtr @ sp[(0)+-2]
  7618  017AAA  0EFE               	movlw	-2
  7619  017AAC  006F FF8F FFE6     	movff	plusw1,postinc1
  7620  017AB2  006F FF8F FFE6     	movff	plusw1,postinc1
  7621  017AB8  EC7A  F0BD         	call	_strlen	;wreg free
  7622  017ABC  0060  F097  FBF7   	movff	btemp,15351	;volatile
  7623  017AC2  0060  F09B  FBF8   	movff	btemp+1,15352	;volatile
  7624                           
  7625                           ;eadog.c: 207:  DMA1CON0bits.EN = 1;
  7626  017AC8  013B               	movlb	59	; () banked
  7627  017ACA  8FFC               	bsf	252,7,b	;volatile
  7628                           
  7629                           ; BSR set to: 59
  7630                           ;eadog.c: 208:  printf("%s", strPtr);
  7631                           ;stkvar	_strPtr @ sp[(0)+-2]
  7632  017ACC  0EFE               	movlw	-2
  7633  017ACE  006F FF8F FFE6     	movff	plusw1,postinc1
  7634  017AD4  006F FF8F FFE6     	movff	plusw1,postinc1
  7635  017ADA  0EFB               	movlw	low STR_24
  7636  017ADC  6EE6               	movwf	postinc1,c
  7637  017ADE  0EFF               	movlw	high STR_24
  7638  017AE0  6EE6               	movwf	postinc1,c
  7639  017AE2  0E04               	movlw	4
  7640  017AE4  6EE6               	movwf	postinc1,c
  7641  017AE6  EC60  F0C1         	call	_printf	;wreg free
  7642                           
  7643                           ; BSR set to: 0
  7644                           ;eadog.c: 209:  start_lcd();
  7645  017AEA  EC33  F0C9         	call	_start_lcd	;wreg free
  7646                           
  7647                           ; BSR set to: 59
  7648                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  7649  017AEE  52E5               	movf	postdec1,f,c
  7650  017AF0  52E5               	movf	postdec1,f,c
  7651  017AF2  0012               	return		;funcret
  7652  017AF4                     __end_of_eaDogM_WriteString:
  7653                           	opt callstack 0
  7654                           
  7655 ;; *************** function _wait_lcd_set *****************
  7656 ;; Defined at:
  7657 ;;		line 144 in file "eadog.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;		None
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;		None
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  1  [STACK] void 
  7664 ;; Registers used:
  7665 ;;		None
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/3D
  7668 ;;		On exit  : 3F/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7675 ;;Total ram usage:        0 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; Hardware stack levels required when called:    7
  7678 ;; This function calls:
  7679 ;;		Nothing
  7680 ;; This function is called by:
  7681 ;;		_eaDogM_WriteString
  7682 ;;		_send_lcd_cmd_dma
  7683 ;; This function uses a reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text35
  7687  019260                     __ptext35:
  7688                           	opt callstack 0
  7689  019260                     _wait_lcd_set:
  7690                           	opt callstack 20
  7691                           
  7692                           ;eadog.c: 146:  spi_link.LCD_DATA = 1;
  7693                           
  7694                           ; BSR set to: 59
  7695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7696                           ;incstack = 0
  7697  019260  0100               	movlb	0	; () banked
  7698  019262  8789               	bsf	_spi_link& (0+255),3,b	;volatile
  7699                           
  7700                           ; BSR set to: 0
  7701                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7702  019264  0012               	return		;funcret
  7703  019266                     __end_of_wait_lcd_set:
  7704                           	opt callstack 0
  7705                           
  7706 ;; *************** function _start_lcd *****************
  7707 ;; Defined at:
  7708 ;;		line 139 in file "eadog.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;		None
  7711 ;; Auto vars:     Size  Location     Type
  7712 ;;		None
  7713 ;; Return value:  Size  Location     Type
  7714 ;;                  1  [STACK] void 
  7715 ;; Registers used:
  7716 ;;		None
  7717 ;; Tracked objects:
  7718 ;;		On entry : 3F/0
  7719 ;;		On exit  : 3F/3B
  7720 ;;		Unchanged: 0/0
  7721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7726 ;;Total ram usage:        0 bytes
  7727 ;; Hardware stack levels used:    1
  7728 ;; Hardware stack levels required when called:    7
  7729 ;; This function calls:
  7730 ;;		Nothing
  7731 ;; This function is called by:
  7732 ;;		_eaDogM_WriteString
  7733 ;;		_send_lcd_cmd_dma
  7734 ;; This function uses a reentrant model
  7735 ;;
  7736                           
  7737                           	psect	text36
  7738  019266                     __ptext36:
  7739                           	opt callstack 0
  7740  019266                     _start_lcd:
  7741                           	opt callstack 20
  7742                           
  7743                           ;eadog.c: 141:  DMA1CON0bits.DMA1SIRQEN = 1;
  7744                           
  7745                           ; BSR set to: 0
  7746                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7747                           ;incstack = 0
  7748  019266  013B               	movlb	59	; () banked
  7749  019268  8DFC               	bsf	252,6,b	;volatile
  7750                           
  7751                           ; BSR set to: 59
  7752                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  7753  01926A  0012               	return		;funcret
  7754  01926C                     __end_of_start_lcd:
  7755                           	opt callstack 0
  7756                           
  7757 ;; *************** function _ringBufS_flush *****************
  7758 ;; Defined at:
  7759 ;;		line 76 in file "ringbufs.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;  _this           2  [STACK] PTR struct ringBufS_t
  7762 ;;		 -> ring_buf1(67), 
  7763 ;;  clearBuffer     1  [STACK] const char 
  7764 ;; Auto vars:     Size  Location     Type
  7765 ;;		None
  7766 ;; Return value:  Size  Location     Type
  7767 ;;                  1  [STACK] void 
  7768 ;; Registers used:
  7769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7770 ;; Tracked objects:
  7771 ;;		On entry : 3F/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7779 ;;Total ram usage:        0 bytes
  7780 ;; Hardware stack levels used:    1
  7781 ;; Hardware stack levels required when called:    8
  7782 ;; This function calls:
  7783 ;;		_memset
  7784 ;; This function is called by:
  7785 ;;		_eaDogM_WriteString
  7786 ;;		_send_lcd_cmd_dma
  7787 ;; This function uses a reentrant model
  7788 ;;
  7789                           
  7790                           	psect	text37
  7791  017C2E                     __ptext37:
  7792                           	opt callstack 0
  7793  017C2E                     _ringBufS_flush:
  7794                           	opt callstack 19
  7795                           
  7796                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  7797                           ;stkvar	__this @ sp[(0)+-2]
  7798                           
  7799                           ; BSR set to: 59
  7800                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7801                           ;incstack = 0
  7802  017C2E  0EFE               	movlw	-2
  7803  017C30  006F FF8C  F02F    	movff	plusw1,btemp+10
  7804  017C36  0EFF               	movlw	-1
  7805  017C38  006F FF8C  F030    	movff	plusw1,btemp+11
  7806  017C3E  0E42               	movlw	66
  7807  017C40  242F               	addwf	(btemp+10)^0,w,c
  7808  017C42  6ED9               	movwf	fsr2l,c
  7809  017C44  0E00               	movlw	0
  7810  017C46  2030               	addwfc	(btemp+11)^0,w,c
  7811  017C48  6EDA               	movwf	fsr2h,c
  7812  017C4A  0E00               	movlw	0
  7813  017C4C  6EDF               	movwf	indf2,c
  7814                           
  7815                           ;ringbufs.c: 79:  _this->head = 0;
  7816                           ;stkvar	__this @ sp[(0)+-2]
  7817  017C4E  0EFE               	movlw	-2
  7818  017C50  006F FF8C  F02F    	movff	plusw1,btemp+10
  7819  017C56  0EFF               	movlw	-1
  7820  017C58  006F FF8C  F030    	movff	plusw1,btemp+11
  7821  017C5E  0E40               	movlw	64
  7822  017C60  242F               	addwf	(btemp+10)^0,w,c
  7823  017C62  6ED9               	movwf	fsr2l,c
  7824  017C64  0E00               	movlw	0
  7825  017C66  2030               	addwfc	(btemp+11)^0,w,c
  7826  017C68  6EDA               	movwf	fsr2h,c
  7827  017C6A  0E00               	movlw	0
  7828  017C6C  6EDF               	movwf	indf2,c
  7829                           
  7830                           ;ringbufs.c: 80:  _this->tail = 0;
  7831                           ;stkvar	__this @ sp[(0)+-2]
  7832  017C6E  0EFE               	movlw	-2
  7833  017C70  006F FF8C  F02F    	movff	plusw1,btemp+10
  7834  017C76  0EFF               	movlw	-1
  7835  017C78  006F FF8C  F030    	movff	plusw1,btemp+11
  7836  017C7E  0E41               	movlw	65
  7837  017C80  242F               	addwf	(btemp+10)^0,w,c
  7838  017C82  6ED9               	movwf	fsr2l,c
  7839  017C84  0E00               	movlw	0
  7840  017C86  2030               	addwfc	(btemp+11)^0,w,c
  7841  017C88  6EDA               	movwf	fsr2h,c
  7842  017C8A  0E00               	movlw	0
  7843  017C8C  6EDF               	movwf	indf2,c
  7844                           
  7845                           ;ringbufs.c: 81:  if (clearBuffer) {
  7846                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  7847  017C8E  0EFD               	movlw	-3
  7848  017C90  50E3               	movf	plusw1,w,c
  7849  017C92  B4D8               	btfsc	status,2,c
  7850  017C94  D011               	goto	l1584
  7851                           
  7852                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  7853  017C96  0E40               	movlw	64
  7854  017C98  6EE6               	movwf	postinc1,c
  7855  017C9A  0E00               	movlw	0
  7856  017C9C  6EE6               	movwf	postinc1,c
  7857  017C9E  0E00               	movlw	0
  7858  017CA0  6EE6               	movwf	postinc1,c
  7859  017CA2  0E00               	movlw	0
  7860  017CA4  6EE6               	movwf	postinc1,c
  7861                           
  7862                           ;stkvar	__this @ sp[(-4)+-2]
  7863  017CA6  0EFA               	movlw	-6
  7864  017CA8  006F FF8F FFE6     	movff	plusw1,postinc1
  7865  017CAE  006F FF8F FFE6     	movff	plusw1,postinc1
  7866  017CB4  ECE1  F0A5         	call	_memset	;wreg free
  7867  017CB8                     l1584:
  7868                           
  7869                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  7870  017CB8  52E5               	movf	postdec1,f,c
  7871  017CBA  52E5               	movf	postdec1,f,c
  7872  017CBC  52E5               	movf	postdec1,f,c
  7873  017CBE  0012               	return		;funcret
  7874  017CC0                     __end_of_ringBufS_flush:
  7875                           	opt callstack 0
  7876                           
  7877 ;; *************** function _memset *****************
  7878 ;; Defined at:
  7879 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  7880 ;; Parameters:    Size  Location     Type
  7881 ;;  dest            2  [STACK] PTR void 
  7882 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7883 ;;  c               2  [STACK] int 
  7884 ;;  n               2  [STACK] unsigned int 
  7885 ;; Auto vars:     Size  Location     Type
  7886 ;;  s               2  [STACK] PTR unsigned char 
  7887 ;;		 -> ring_buf2(67), ring_buf1(67), 
  7888 ;;  k               2  [STACK] unsigned int 
  7889 ;; Return value:  Size  Location     Type
  7890 ;;                  2  [STACK] PTR void 
  7891 ;; Registers used:
  7892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7893 ;; Tracked objects:
  7894 ;;		On entry : 0/0
  7895 ;;		On exit  : 0/0
  7896 ;;		Unchanged: 0/0
  7897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7902 ;;Total ram usage:        0 bytes
  7903 ;; Hardware stack levels used:    1
  7904 ;; Hardware stack levels required when called:    7
  7905 ;; This function calls:
  7906 ;;		Nothing
  7907 ;; This function is called by:
  7908 ;;		_ringBufS_init
  7909 ;;		_ringBufS_flush
  7910 ;; This function uses a reentrant model
  7911 ;;
  7912                           
  7913                           	psect	text38
  7914  014BC2                     __ptext38:
  7915                           	opt callstack 0
  7916  014BC2                     _memset:
  7917                           	opt callstack 0
  7918                           
  7919                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7920  014BC2  52E6               	movf	postinc1,f,c
  7921  014BC4  52E6               	movf	postinc1,f,c
  7922  014BC6  52E6               	movf	postinc1,f,c
  7923  014BC8  52E6               	movf	postinc1,f,c
  7924                           
  7925                           ;stkvar	_dest @ sp[(-4)+-2]
  7926                           
  7927                           ;incstack = 0
  7928  014BCA  0EFA               	movlw	-6
  7929  014BCC  006F FF8C  F02F    	movff	plusw1,btemp+10
  7930  014BD2  0EFB               	movlw	-5
  7931  014BD4  006F FF8C  F030    	movff	plusw1,btemp+11
  7932                           
  7933                           ;stkvar	_s @ sp[(-4)+0]
  7934  014BDA  0EFD               	movlw	-3
  7935  014BDC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  7936  014BE2  0EFC               	movlw	-4
  7937  014BE4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  7938                           
  7939                           ;stkvar	_n @ sp[(-4)+-6]
  7940  014BEA  0EF6               	movlw	-10
  7941  014BEC  006F FF8C  F025    	movff	plusw1,btemp
  7942  014BF2  0EF7               	movlw	-9
  7943  014BF4  50E3               	movf	plusw1,w,c
  7944  014BF6  1025               	iorwf	btemp^0,w,c
  7945  014BF8  B4D8               	btfsc	status,2,c
  7946  014BFA  D154               	goto	u10570
  7947                           
  7948                           ;stkvar	_c @ sp[(-4)+-4]
  7949                           ;stkvar	_s @ sp[(-4)+0]
  7950  014BFC  0EFC               	movlw	-4
  7951  014BFE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7952  014C04  0EFD               	movlw	-3
  7953  014C06  006F FF8F FFDA     	movff	plusw1,fsr2h
  7954  014C0C  0EF8               	movlw	-8
  7955  014C0E  006F FF8F FFDF     	movff	plusw1,indf2
  7956                           
  7957                           ;stkvar	_c @ sp[(-4)+-4]
  7958                           ;stkvar	_n @ sp[(-4)+-6]
  7959                           ;stkvar	_s @ sp[(-4)+0]
  7960  014C14  0EFC               	movlw	-4
  7961  014C16  006F FF8C  F02F    	movff	plusw1,btemp+10
  7962  014C1C  0EFD               	movlw	-3
  7963  014C1E  006F FF8C  F030    	movff	plusw1,btemp+11
  7964  014C24  0EF6               	movlw	-10
  7965  014C26  50E3               	movf	plusw1,w,c
  7966  014C28  262F               	addwf	(btemp+10)^0,f,c
  7967  014C2A  0EF7               	movlw	-9
  7968  014C2C  50E3               	movf	plusw1,w,c
  7969  014C2E  2230               	addwfc	(btemp+11)^0,f,c
  7970  014C30  0EFF               	movlw	255
  7971  014C32  242F               	addwf	(btemp+10)^0,w,c
  7972  014C34  6ED9               	movwf	fsr2l,c
  7973  014C36  0EFF               	movlw	255
  7974  014C38  2030               	addwfc	(btemp+11)^0,w,c
  7975  014C3A  6EDA               	movwf	fsr2h,c
  7976  014C3C  0EF8               	movlw	-8
  7977  014C3E  006F FF8F FFDF     	movff	plusw1,indf2
  7978                           
  7979                           ;stkvar	_n @ sp[(-4)+-6]
  7980  014C44  0EF7               	movlw	-9
  7981  014C46  50E3               	movf	plusw1,w,c
  7982  014C48  E108               	bnz	l10731
  7983  014C4A  0EF6               	movlw	-10
  7984  014C4C  006F FF8C  F025    	movff	plusw1,btemp
  7985  014C52  0E03               	movlw	3
  7986  014C54  5E25               	subwf	btemp^0,f,c
  7987  014C56  A0D8               	btfss	status,0,c
  7988  014C58  D125               	goto	u10570
  7989  014C5A                     l10731:
  7990                           
  7991                           ;stkvar	_c @ sp[(-4)+-4]
  7992                           ;stkvar	_s @ sp[(-4)+0]
  7993  014C5A  0EFC               	movlw	-4
  7994  014C5C  006F FF8C  F02F    	movff	plusw1,btemp+10
  7995  014C62  0EFD               	movlw	-3
  7996  014C64  006F FF8C  F030    	movff	plusw1,btemp+11
  7997  014C6A  0E01               	movlw	1
  7998  014C6C  242F               	addwf	(btemp+10)^0,w,c
  7999  014C6E  6ED9               	movwf	fsr2l,c
  8000  014C70  0E00               	movlw	0
  8001  014C72  2030               	addwfc	(btemp+11)^0,w,c
  8002  014C74  6EDA               	movwf	fsr2h,c
  8003  014C76  0EF8               	movlw	-8
  8004  014C78  006F FF8F FFDF     	movff	plusw1,indf2
  8005                           
  8006                           ;stkvar	_c @ sp[(-4)+-4]
  8007                           ;stkvar	_s @ sp[(-4)+0]
  8008  014C7E  0EFC               	movlw	-4
  8009  014C80  006F FF8C  F02F    	movff	plusw1,btemp+10
  8010  014C86  0EFD               	movlw	-3
  8011  014C88  006F FF8C  F030    	movff	plusw1,btemp+11
  8012  014C8E  0E02               	movlw	2
  8013  014C90  242F               	addwf	(btemp+10)^0,w,c
  8014  014C92  6ED9               	movwf	fsr2l,c
  8015  014C94  0E00               	movlw	0
  8016  014C96  2030               	addwfc	(btemp+11)^0,w,c
  8017  014C98  6EDA               	movwf	fsr2h,c
  8018  014C9A  0EF8               	movlw	-8
  8019  014C9C  006F FF8F FFDF     	movff	plusw1,indf2
  8020                           
  8021                           ;stkvar	_c @ sp[(-4)+-4]
  8022                           ;stkvar	_n @ sp[(-4)+-6]
  8023                           ;stkvar	_s @ sp[(-4)+0]
  8024  014CA2  0EFC               	movlw	-4
  8025  014CA4  006F FF8C  F02F    	movff	plusw1,btemp+10
  8026  014CAA  0EFD               	movlw	-3
  8027  014CAC  006F FF8C  F030    	movff	plusw1,btemp+11
  8028  014CB2  0EF6               	movlw	-10
  8029  014CB4  50E3               	movf	plusw1,w,c
  8030  014CB6  262F               	addwf	(btemp+10)^0,f,c
  8031  014CB8  0EF7               	movlw	-9
  8032  014CBA  50E3               	movf	plusw1,w,c
  8033  014CBC  2230               	addwfc	(btemp+11)^0,f,c
  8034  014CBE  0EFE               	movlw	254
  8035  014CC0  242F               	addwf	(btemp+10)^0,w,c
  8036  014CC2  6ED9               	movwf	fsr2l,c
  8037  014CC4  0EFF               	movlw	255
  8038  014CC6  2030               	addwfc	(btemp+11)^0,w,c
  8039  014CC8  6EDA               	movwf	fsr2h,c
  8040  014CCA  0EF8               	movlw	-8
  8041  014CCC  006F FF8F FFDF     	movff	plusw1,indf2
  8042                           
  8043                           ;stkvar	_c @ sp[(-4)+-4]
  8044                           ;stkvar	_n @ sp[(-4)+-6]
  8045                           ;stkvar	_s @ sp[(-4)+0]
  8046  014CD2  0EFC               	movlw	-4
  8047  014CD4  006F FF8C  F02F    	movff	plusw1,btemp+10
  8048  014CDA  0EFD               	movlw	-3
  8049  014CDC  006F FF8C  F030    	movff	plusw1,btemp+11
  8050  014CE2  0EF6               	movlw	-10
  8051  014CE4  50E3               	movf	plusw1,w,c
  8052  014CE6  262F               	addwf	(btemp+10)^0,f,c
  8053  014CE8  0EF7               	movlw	-9
  8054  014CEA  50E3               	movf	plusw1,w,c
  8055  014CEC  2230               	addwfc	(btemp+11)^0,f,c
  8056  014CEE  0EFD               	movlw	253
  8057  014CF0  242F               	addwf	(btemp+10)^0,w,c
  8058  014CF2  6ED9               	movwf	fsr2l,c
  8059  014CF4  0EFF               	movlw	255
  8060  014CF6  2030               	addwfc	(btemp+11)^0,w,c
  8061  014CF8  6EDA               	movwf	fsr2h,c
  8062  014CFA  0EF8               	movlw	-8
  8063  014CFC  006F FF8F FFDF     	movff	plusw1,indf2
  8064                           
  8065                           ;stkvar	_n @ sp[(-4)+-6]
  8066  014D02  0EF7               	movlw	-9
  8067  014D04  50E3               	movf	plusw1,w,c
  8068  014D06  E108               	bnz	l10737
  8069  014D08  0EF6               	movlw	-10
  8070  014D0A  006F FF8C  F025    	movff	plusw1,btemp
  8071  014D10  0E07               	movlw	7
  8072  014D12  5E25               	subwf	btemp^0,f,c
  8073  014D14  A0D8               	btfss	status,0,c
  8074  014D16  D0C6               	goto	u10570
  8075  014D18                     l10737:
  8076                           
  8077                           ;stkvar	_c @ sp[(-4)+-4]
  8078                           ;stkvar	_s @ sp[(-4)+0]
  8079  014D18  0EFC               	movlw	-4
  8080  014D1A  006F FF8C  F02F    	movff	plusw1,btemp+10
  8081  014D20  0EFD               	movlw	-3
  8082  014D22  006F FF8C  F030    	movff	plusw1,btemp+11
  8083  014D28  0E03               	movlw	3
  8084  014D2A  242F               	addwf	(btemp+10)^0,w,c
  8085  014D2C  6ED9               	movwf	fsr2l,c
  8086  014D2E  0E00               	movlw	0
  8087  014D30  2030               	addwfc	(btemp+11)^0,w,c
  8088  014D32  6EDA               	movwf	fsr2h,c
  8089  014D34  0EF8               	movlw	-8
  8090  014D36  006F FF8F FFDF     	movff	plusw1,indf2
  8091                           
  8092                           ;stkvar	_c @ sp[(-4)+-4]
  8093                           ;stkvar	_n @ sp[(-4)+-6]
  8094                           ;stkvar	_s @ sp[(-4)+0]
  8095  014D3C  0EFC               	movlw	-4
  8096  014D3E  006F FF8C  F02F    	movff	plusw1,btemp+10
  8097  014D44  0EFD               	movlw	-3
  8098  014D46  006F FF8C  F030    	movff	plusw1,btemp+11
  8099  014D4C  0EF6               	movlw	-10
  8100  014D4E  50E3               	movf	plusw1,w,c
  8101  014D50  262F               	addwf	(btemp+10)^0,f,c
  8102  014D52  0EF7               	movlw	-9
  8103  014D54  50E3               	movf	plusw1,w,c
  8104  014D56  2230               	addwfc	(btemp+11)^0,f,c
  8105  014D58  0EFC               	movlw	252
  8106  014D5A  242F               	addwf	(btemp+10)^0,w,c
  8107  014D5C  6ED9               	movwf	fsr2l,c
  8108  014D5E  0EFF               	movlw	255
  8109  014D60  2030               	addwfc	(btemp+11)^0,w,c
  8110  014D62  6EDA               	movwf	fsr2h,c
  8111  014D64  0EF8               	movlw	-8
  8112  014D66  006F FF8F FFDF     	movff	plusw1,indf2
  8113                           
  8114                           ;stkvar	_n @ sp[(-4)+-6]
  8115  014D6C  0EF7               	movlw	-9
  8116  014D6E  50E3               	movf	plusw1,w,c
  8117  014D70  E108               	bnz	l10743
  8118  014D72  0EF6               	movlw	-10
  8119  014D74  006F FF8C  F025    	movff	plusw1,btemp
  8120  014D7A  0E09               	movlw	9
  8121  014D7C  5E25               	subwf	btemp^0,f,c
  8122  014D7E  A0D8               	btfss	status,0,c
  8123  014D80  D091               	goto	u10570
  8124  014D82                     l10743:
  8125                           
  8126                           ;stkvar	_s @ sp[(-4)+0]
  8127  014D82  0EFC               	movlw	-4
  8128  014D84  006F FF8C  F02F    	movff	plusw1,btemp+10
  8129  014D8A  1E2F               	comf	(btemp+10)^0,f,c
  8130  014D8C  0EFD               	movlw	-3
  8131  014D8E  006F FF8C  F030    	movff	plusw1,btemp+11
  8132  014D94  1E30               	comf	(btemp+11)^0,f,c
  8133  014D96  2A2F               	incf	(btemp+10)^0,f,c
  8134  014D98  B4D8               	btfsc	status,2,c
  8135  014D9A  2A30               	incf	(btemp+11)^0,f,c
  8136  014D9C  0E03               	movlw	3
  8137  014D9E  162F               	andwf	(btemp+10)^0,f,c
  8138  014DA0  0E00               	movlw	0
  8139  014DA2  1630               	andwf	(btemp+11)^0,f,c
  8140                           
  8141                           ;stkvar	_k @ sp[(-4)+2]
  8142  014DA4  0EFE               	movlw	-2
  8143  014DA6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8144  014DAC  0EFF               	movlw	-1
  8145  014DAE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8146                           
  8147                           ;stkvar	_k @ sp[(-4)+2]
  8148                           ;stkvar	_s @ sp[(-4)+0]
  8149  014DB4  0EFC               	movlw	-4
  8150  014DB6  50E3               	movf	plusw1,w,c
  8151  014DB8  6E25               	movwf	btemp^0,c
  8152  014DBA  0EFE               	movlw	-2
  8153  014DBC  50E3               	movf	plusw1,w,c
  8154  014DBE  2625               	addwf	btemp^0,f,c
  8155  014DC0  0EFC               	movlw	-4
  8156  014DC2  0060  F097  FFE3   	movff	btemp,plusw1
  8157  014DC8  0EFD               	movlw	-3
  8158  014DCA  50E3               	movf	plusw1,w,c
  8159  014DCC  6E25               	movwf	btemp^0,c
  8160  014DCE  0EFF               	movlw	-1
  8161  014DD0  50E3               	movf	plusw1,w,c
  8162  014DD2  2225               	addwfc	btemp^0,f,c
  8163  014DD4  0EFD               	movlw	-3
  8164  014DD6  0060  F097  FFE3   	movff	btemp,plusw1
  8165                           
  8166                           ;stkvar	_k @ sp[(-4)+2]
  8167                           ;stkvar	_n @ sp[(-4)+-6]
  8168  014DDC  0EF6               	movlw	-10
  8169  014DDE  50E3               	movf	plusw1,w,c
  8170  014DE0  6E25               	movwf	btemp^0,c
  8171  014DE2  0EFE               	movlw	-2
  8172  014DE4  50E3               	movf	plusw1,w,c
  8173  014DE6  5E25               	subwf	btemp^0,f,c
  8174  014DE8  0EF6               	movlw	-10
  8175  014DEA  0060  F097  FFE3   	movff	btemp,plusw1
  8176  014DF0  0EF7               	movlw	-9
  8177  014DF2  50E3               	movf	plusw1,w,c
  8178  014DF4  6E25               	movwf	btemp^0,c
  8179  014DF6  0EFF               	movlw	-1
  8180  014DF8  50E3               	movf	plusw1,w,c
  8181  014DFA  5A25               	subwfb	btemp^0,f,c
  8182  014DFC  0EF7               	movlw	-9
  8183  014DFE  0060  F097  FFE3   	movff	btemp,plusw1
  8184  014E04  0EFC               	movlw	252
  8185  014E06  6E2F               	movwf	(btemp+10)^0,c
  8186  014E08  0EFF               	movlw	255
  8187  014E0A  6E30               	movwf	(btemp+11)^0,c
  8188                           
  8189                           ;stkvar	_n @ sp[(-4)+-6]
  8190  014E0C  0EF6               	movlw	-10
  8191  014E0E  006F FF8C  F025    	movff	plusw1,btemp
  8192  014E14  502F               	movf	(btemp+10)^0,w,c
  8193  014E16  1625               	andwf	btemp^0,f,c
  8194  014E18  0EF6               	movlw	-10
  8195  014E1A  0060  F097  FFE3   	movff	btemp,plusw1
  8196  014E20  0EF7               	movlw	-9
  8197  014E22  006F FF8C  F025    	movff	plusw1,btemp
  8198  014E28  5030               	movf	(btemp+11)^0,w,c
  8199  014E2A  1625               	andwf	btemp^0,f,c
  8200  014E2C  0EF7               	movlw	-9
  8201  014E2E  D02E               	goto	L6
  8202  014E30                     l10751:
  8203                           
  8204                           ;stkvar	_c @ sp[(-4)+-4]
  8205                           ;stkvar	_s @ sp[(-4)+0]
  8206  014E30  0EFC               	movlw	-4
  8207  014E32  006F FF8F FFD9     	movff	plusw1,fsr2l
  8208  014E38  0EFD               	movlw	-3
  8209  014E3A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8210  014E40  0EF8               	movlw	-8
  8211  014E42  006F FF8F FFDF     	movff	plusw1,indf2
  8212                           
  8213                           ;stkvar	_n @ sp[(-4)+-6]
  8214  014E48  0EF6               	movlw	-10
  8215  014E4A  006F FF8C  F025    	movff	plusw1,btemp
  8216  014E50  0E01               	movlw	1
  8217  014E52  5E25               	subwf	btemp^0,f,c
  8218  014E54  0EF6               	movlw	-10
  8219  014E56  0060  F097  FFE3   	movff	btemp,plusw1
  8220  014E5C  0EF7               	movlw	-9
  8221  014E5E  006F FF8C  F025    	movff	plusw1,btemp
  8222  014E64  0E00               	movlw	0
  8223  014E66  5A25               	subwfb	btemp^0,f,c
  8224  014E68  0EF7               	movlw	-9
  8225  014E6A  0060  F097  FFE3   	movff	btemp,plusw1
  8226                           
  8227                           ;stkvar	_s @ sp[(-4)+0]
  8228  014E70  0EFC               	movlw	-4
  8229  014E72  50E3               	movf	plusw1,w,c
  8230  014E74  0F01               	addlw	1
  8231  014E76  6E25               	movwf	btemp^0,c
  8232  014E78  0EFC               	movlw	-4
  8233  014E7A  0060  F097  FFE3   	movff	btemp,plusw1
  8234  014E80  6A25               	clrf	btemp^0,c
  8235  014E82  0EFD               	movlw	-3
  8236  014E84  50E3               	movf	plusw1,w,c
  8237  014E86  2025               	addwfc	btemp^0,w,c
  8238  014E88  6E25               	movwf	btemp^0,c
  8239  014E8A  0EFD               	movlw	-3
  8240  014E8C                     L6:
  8241  014E8C  0060  F097  FFE3   	movff	btemp,plusw1
  8242                           
  8243                           ;stkvar	_n @ sp[(-4)+-6]
  8244  014E92  0EF6               	movlw	-10
  8245  014E94  006F FF8C  F025    	movff	plusw1,btemp
  8246  014E9A  0EF7               	movlw	-9
  8247  014E9C  50E3               	movf	plusw1,w,c
  8248  014E9E  1025               	iorwf	btemp^0,w,c
  8249  014EA0  A4D8               	btfss	status,2,c
  8250  014EA2  D7C6               	goto	l10751
  8251  014EA4                     u10570:
  8252                           
  8253                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  8254  014EA4  0EF6               	movlw	246
  8255  014EA6  26E1               	addwf	fsr1l,f,c
  8256  014EA8  0EFF               	movlw	255
  8257  014EAA  22E2               	addwfc	fsr1h,f,c
  8258  014EAC  0012               	return		;funcret
  8259  014EAE                     __end_of_memset:
  8260                           	opt callstack 0
  8261                           
  8262 ;; *************** function _printf *****************
  8263 ;; Defined at:
  8264 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;  fmt             2  [STACK] PTR const unsigned char 
  8267 ;;		 -> STR_26(3), STR_25(3), STR_24(3), 
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;  ap              2  [STACK] PTR void [1]
  8270 ;;		 -> ?_printf(2), ?_sprintf(2), 
  8271 ;;  ret             2    0        int 
  8272 ;; Return value:  Size  Location     Type
  8273 ;;                  2  [STACK] int 
  8274 ;; Registers used:
  8275 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8276 ;; Tracked objects:
  8277 ;;		On entry : 3F/3B
  8278 ;;		On exit  : 3F/0
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8285 ;;Total ram usage:        0 bytes
  8286 ;; Hardware stack levels used:    1
  8287 ;; Hardware stack levels required when called:   15
  8288 ;; This function calls:
  8289 ;;		_vfprintf
  8290 ;; This function is called by:
  8291 ;;		_eaDogM_WriteString
  8292 ;;		_send_lcd_cmd_dma
  8293 ;; This function uses a reentrant model
  8294 ;;
  8295                           
  8296                           	psect	text39
  8297  0182C0                     __ptext39:
  8298                           	opt callstack 0
  8299  0182C0                     _printf:
  8300                           	opt callstack 0
  8301                           
  8302                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8303  0182C0  52E6               	movf	postinc1,f,c
  8304  0182C2  52E6               	movf	postinc1,f,c
  8305                           
  8306                           ;stkvar	?_printf @ sp[(-2)+-3]
  8307                           
  8308                           ;incstack = 0
  8309  0182C4  0EFB               	movlw	251
  8310  0182C6  24E1               	addwf	fsr1l,w,c
  8311  0182C8  6E2F               	movwf	(btemp+10)^0,c
  8312  0182CA  0EFF               	movlw	255
  8313  0182CC  20E2               	addwfc	fsr1h,w,c
  8314  0182CE  6E30               	movwf	(btemp+11)^0,c
  8315                           
  8316                           ;stkvar	_ap @ sp[(-2)+0]
  8317  0182D0  0EFF               	movlw	-1
  8318  0182D2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8319  0182D8  0EFE               	movlw	-2
  8320  0182DA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8321                           
  8322                           ;stkvar	_ap @ sp[(-2)+0]
  8323  0182E0  0EFE               	movlw	254
  8324  0182E2  24E1               	addwf	fsr1l,w,c
  8325  0182E4  6E25               	movwf	btemp^0,c
  8326  0182E6  0EFF               	movlw	255
  8327  0182E8  20E2               	addwfc	fsr1h,w,c
  8328  0182EA  6E26               	movwf	(btemp+1)^0,c
  8329  0182EC  0060  F097  FFE6   	movff	btemp,postinc1
  8330  0182F2  0060  F09B  FFE6   	movff	btemp+1,postinc1
  8331                           
  8332                           ;stkvar	_fmt @ sp[(-4)+-3]
  8333  0182F8  0EF9               	movlw	-7
  8334  0182FA  006F FF8F FFE6     	movff	plusw1,postinc1
  8335  018300  006F FF8F FFE6     	movff	plusw1,postinc1
  8336  018306  0E00               	movlw	0
  8337  018308  6EE6               	movwf	postinc1,c
  8338  01830A  0E00               	movlw	0
  8339  01830C  6EE6               	movwf	postinc1,c
  8340  01830E  EC7C  F0BC         	call	_vfprintf	;wreg free
  8341                           
  8342                           ; BSR set to: 0
  8343                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  8344  018312  52E5               	movf	postdec1,f,c
  8345  018314  52E5               	movf	postdec1,f,c
  8346  018316  52E5               	movf	postdec1,f,c
  8347  018318  50E7               	movf	indf1,w,c
  8348  01831A  5EE1               	subwf	fsr1l,f,c
  8349  01831C  0E00               	movlw	0
  8350  01831E  5AE2               	subwfb	fsr1h,f,c
  8351  018320  0012               	return		;funcret
  8352  018322                     __end_of_printf:
  8353                           	opt callstack 0
  8354                           
  8355 ;; *************** function _vfprintf *****************
  8356 ;; Defined at:
  8357 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8358 ;; Parameters:    Size  Location     Type
  8359 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8360 ;;		 -> f(6), NULL(0), 
  8361 ;;  fmt             2  [STACK] PTR const unsigned char 
  8362 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8363 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8364 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8365 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8366 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8367 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
  8368 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8369 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8370 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8371 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8372 ;;  ap              2  [STACK] PTR PTR void 
  8373 ;;		 -> ap(2), ap(2), 
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;  cfmt            2  [STACK] PTR unsigned char 
  8376 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
  8377 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
  8378 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
  8379 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
  8380 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
  8381 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
  8382 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
  8383 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
  8384 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
  8385 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  8386 ;; Return value:  Size  Location     Type
  8387 ;;                  2  [STACK] int 
  8388 ;; Registers used:
  8389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/1
  8392 ;;		On exit  : 3F/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8399 ;;Total ram usage:        0 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; Hardware stack levels required when called:   14
  8402 ;; This function calls:
  8403 ;;		_vfpfcnvrt
  8404 ;; This function is called by:
  8405 ;;		_sprintf
  8406 ;;		_printf
  8407 ;; This function uses a reentrant model
  8408 ;;
  8409                           
  8410                           	psect	text40
  8411  0178F8                     __ptext40:
  8412                           	opt callstack 0
  8413  0178F8                     _vfprintf:
  8414                           	opt callstack 0
  8415                           
  8416                           ; BSR set to: 0
  8417                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8418  0178F8  52E6               	movf	postinc1,f,c
  8419  0178FA  52E6               	movf	postinc1,f,c
  8420                           
  8421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  8422                           ;stkvar	_fmt @ sp[(-2)+-4]
  8423                           
  8424                           ;incstack = 0
  8425  0178FC  0EFA               	movlw	-6
  8426  0178FE  006F FF8C  F02F    	movff	plusw1,btemp+10
  8427  017904  0EFB               	movlw	-5
  8428  017906  006F FF8C  F030    	movff	plusw1,btemp+11
  8429                           
  8430                           ;stkvar	_cfmt @ sp[(-2)+0]
  8431  01790C  0EFF               	movlw	-1
  8432  01790E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8433  017914  0EFE               	movlw	-2
  8434  017916  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8435                           
  8436                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  8437  01791C  0100               	movlb	0	; () banked
  8438  01791E  6BC1               	clrf	_nout& (0+255),b
  8439  017920  6BC2               	clrf	(_nout+1)& (0+255),b
  8440                           
  8441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8442  017922  D021               	goto	l10765
  8443  017924                     l10763:
  8444                           
  8445                           ; BSR set to: 0
  8446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  8447                           ;stkvar	_ap @ sp[(-2)+-6]
  8448  017924  0EF8               	movlw	-8
  8449  017926  006F FF8F FFE6     	movff	plusw1,postinc1
  8450  01792C  006F FF8F FFE6     	movff	plusw1,postinc1
  8451                           
  8452                           ;stkvar	_cfmt @ sp[(-4)+0]
  8453  017932  0EFC               	movlw	252
  8454  017934  24E1               	addwf	fsr1l,w,c
  8455  017936  6E25               	movwf	btemp^0,c
  8456  017938  0EFF               	movlw	255
  8457  01793A  20E2               	addwfc	fsr1h,w,c
  8458  01793C  6E26               	movwf	(btemp+1)^0,c
  8459  01793E  0060  F097  FFE6   	movff	btemp,postinc1
  8460  017944  0060  F09B  FFE6   	movff	btemp+1,postinc1
  8461                           
  8462                           ;stkvar	_fp @ sp[(-6)+-2]
  8463  01794A  0EF8               	movlw	-8
  8464  01794C  006F FF8F FFE6     	movff	plusw1,postinc1
  8465  017952  006F FF8F FFE6     	movff	plusw1,postinc1
  8466  017958  EC22  F089         	call	_vfpfcnvrt	;wreg free
  8467  01795C  5025               	movf	btemp^0,w,c
  8468  01795E  0100               	movlb	0	; () banked
  8469  017960  27C1               	addwf	_nout& (0+255),f,b
  8470  017962  5026               	movf	(btemp+1)^0,w,c
  8471  017964  23C2               	addwfc	(_nout+1)& (0+255),f,b
  8472  017966                     l10765:
  8473                           
  8474                           ; BSR set to: 0
  8475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  8476                           ;stkvar	_cfmt @ sp[(-2)+0]
  8477  017966  50E1               	movf	fsr1l,w,c
  8478  017968  0FFE               	addlw	-2
  8479  01796A  6ED9               	movwf	fsr2l,c
  8480  01796C  50E2               	movf	fsr1h,w,c
  8481  01796E  6EDA               	movwf	fsr2h,c
  8482  017970  0EFF               	movlw	255
  8483  017972  22DA               	addwfc	fsr2h,f,c
  8484  017974  006F FF7B FFF6     	movff	postinc2,tblptrl
  8485  01797A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8486  017980                     	if	0	;tblptru may be non-zero
  8487  017980                     	endif
  8488  017980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8489  017980  0E00               	movlw	low (__mediumconst shr (0+16))
  8490  017982  6EF8               	movwf	tblptru,c
  8491  017984                     	endif
  8492  017984  0008               	tblrd		*
  8493  017986  50F5               	movf	tablat,w,c
  8494  017988  0900               	iorlw	0
  8495  01798A  A4D8               	btfss	status,2,c
  8496  01798C  D7CB               	goto	l10763
  8497                           
  8498                           ; BSR set to: 0
  8499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  8500  01798E  0060  F304  F025   	movff	_nout,btemp
  8501  017994  0060  F308  F026   	movff	_nout+1,btemp+1
  8502                           
  8503                           ; BSR set to: 0
  8504                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  8505  01799A  0EF8               	movlw	248
  8506  01799C  26E1               	addwf	fsr1l,f,c
  8507  01799E  0EFF               	movlw	255
  8508  0179A0  22E2               	addwfc	fsr1h,f,c
  8509  0179A2  0012               	return		;funcret
  8510  0179A4                     __end_of_vfprintf:
  8511                           	opt callstack 0
  8512                           
  8513 ;; *************** function _vfpfcnvrt *****************
  8514 ;; Defined at:
  8515 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8518 ;;		 -> f(6), NULL(0), 
  8519 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  8520 ;;		 -> cfmt(2), 
  8521 ;;  ap              2  [STACK] PTR PTR void 
  8522 ;;		 -> ap(2), ap(2), 
  8523 ;; Auto vars:     Size  Location     Type
  8524 ;;  llu             8  [STACK] unsigned long long 
  8525 ;;  ll              8  [STACK] long long 
  8526 ;;  f               4  [STACK] long long 
  8527 ;;  ct              3  [STACK] unsigned char [3]
  8528 ;;  vp              3    0        PTR void 
  8529 ;;  cp              2  [STACK] PTR unsigned char 
  8530 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
  8531 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
  8532 ;;		 -> STR_3(6), V(188), 
  8533 ;;  i               2    0        int 
  8534 ;;  done            2    0        int 
  8535 ;;  c               1  [STACK] unsigned char 
  8536 ;; Return value:  Size  Location     Type
  8537 ;;                  2  [STACK] int 
  8538 ;; Registers used:
  8539 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8540 ;; Tracked objects:
  8541 ;;		On entry : 0/0
  8542 ;;		On exit  : 0/0
  8543 ;;		Unchanged: 0/0
  8544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8549 ;;Total ram usage:        0 bytes
  8550 ;; Hardware stack levels used:    1
  8551 ;; Hardware stack levels required when called:   13
  8552 ;; This function calls:
  8553 ;;		_atoi
  8554 ;;		_ctoa
  8555 ;;		_dtoa
  8556 ;;		_efgtoa
  8557 ;;		_fputc
  8558 ;;		_isdigit
  8559 ;;		_isupper
  8560 ;;		_stoa
  8561 ;;		_strncmp
  8562 ;;		_tolower
  8563 ;;		_xtoa
  8564 ;; This function is called by:
  8565 ;;		_vfprintf
  8566 ;; This function uses a reentrant model
  8567 ;;
  8568                           
  8569                           	psect	text41
  8570  011244                     __ptext41:
  8571                           	opt callstack 0
  8572  011244                     _vfpfcnvrt:
  8573                           	opt callstack 0
  8574                           
  8575                           ; BSR set to: 0
  8576                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  8577  011244  0E20               	movlw	32
  8578  011246  26E1               	addwf	fsr1l,f,c
  8579  011248  0E00               	movlw	0
  8580  01124A  22E2               	addwfc	fsr1h,f,c
  8581                           
  8582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  8583                           ;stkvar	_fmt @ sp[(-32)+-4]
  8584                           
  8585                           ;incstack = 0
  8586  01124C  0EDC               	movlw	-36
  8587  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  8588  011254  0EDD               	movlw	-35
  8589  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  8590  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  8591  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  8592  011268                     	if	0	;tblptru may be non-zero
  8593  011268                     	endif
  8594  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8595  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  8596  01126A  6EF8               	movwf	tblptru,c
  8597  01126C                     	endif
  8598  01126C  0008               	tblrd		*
  8599  01126E  50F5               	movf	tablat,w,c
  8600  011270  0A25               	xorlw	37
  8601  011272  A4D8               	btfss	status,2,c
  8602  011274  EF92  F08E         	goto	l10709
  8603                           
  8604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  8605                           ;stkvar	_fmt @ sp[(-32)+-4]
  8606  011278  0EDC               	movlw	-36
  8607  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8608  011280  0EDD               	movlw	-35
  8609  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  8610  011288  2ADE               	incf	postinc2,f,c
  8611  01128A  0E00               	movlw	0
  8612  01128C  22DD               	addwfc	postdec2,f,c
  8613                           
  8614                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  8615  01128E  6A0A               	clrf	_width^0,c
  8616  011290  6A0B               	clrf	(_width+1)^0,c
  8617  011292  6A0E               	clrf	_flags^0,c
  8618  011294  6A0F               	clrf	(_flags+1)^0,c
  8619                           
  8620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  8621  011296  680C               	setf	_prec^0,c
  8622  011298  680D               	setf	(_prec+1)^0,c
  8623                           
  8624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  8625                           ;stkvar	_fmt @ sp[(-32)+-4]
  8626  01129A  0EDC               	movlw	-36
  8627  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8628  0112A2  0EDD               	movlw	-35
  8629  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8630  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8631  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8632  0112B6                     	if	0	;tblptru may be non-zero
  8633  0112B6                     	endif
  8634  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8635  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  8636  0112B8  6EF8               	movwf	tblptru,c
  8637  0112BA                     	endif
  8638  0112BA  0008               	tblrd		*
  8639  0112BC  50F5               	movf	tablat,w,c
  8640  0112BE  0A2A               	xorlw	42
  8641  0112C0  A4D8               	btfss	status,2,c
  8642  0112C2  D031               	goto	l10573
  8643                           
  8644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  8645                           ;stkvar	_fmt @ sp[(-32)+-4]
  8646  0112C4  0EDC               	movlw	-36
  8647  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8648  0112CC  0EDD               	movlw	-35
  8649  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8650  0112D4  2ADE               	incf	postinc2,f,c
  8651  0112D6  0E00               	movlw	0
  8652  0112D8  22DD               	addwfc	postdec2,f,c
  8653                           
  8654                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  8655                           ;stkvar	_ap @ sp[(-32)+-6]
  8656  0112DA  0EDA               	movlw	-38
  8657  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8658  0112E2  0EDB               	movlw	-37
  8659  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8660  0112EA  0E02               	movlw	2
  8661  0112EC  5EDE               	subwf	postinc2,f,c
  8662  0112EE  0E00               	movlw	0
  8663  0112F0  5ADD               	subwfb	postdec2,f,c
  8664  0112F2  006F FF78  F02F    	movff	postinc2,btemp+10
  8665  0112F8  006F FF74  F030    	movff	postdec2,btemp+11
  8666  0112FE  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  8667  011304  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  8668  01130A  006F FF78  F00A    	movff	postinc2,_width
  8669  011310  006F FF74  F00B    	movff	postdec2,_width+1
  8670                           
  8671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  8672  011316  AE0B               	btfss	(_width+1)^0,7,c
  8673  011318  D066               	goto	u10330
  8674                           
  8675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  8676  01131A  800E               	bsf	_flags^0,0,c
  8677                           
  8678                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  8679  01131C  6C0A               	negf	_width^0,c
  8680  01131E  1E0B               	comf	(_width+1)^0,f,c
  8681  011320  B0D8               	btfsc	status,0,c
  8682  011322  2A0B               	incf	(_width+1)^0,f,c
  8683  011324  D060               	goto	u10330
  8684  011326                     l10573:
  8685                           
  8686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  8687                           ;stkvar	_fmt @ sp[(-32)+-4]
  8688  011326  0EDC               	movlw	-36
  8689  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  8690  01132E  0EDD               	movlw	-35
  8691  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  8692  011336  006F FF78  F02F    	movff	postinc2,btemp+10
  8693  01133C  006F FF74  F030    	movff	postdec2,btemp+11
  8694  011342  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  8695  011348  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  8696  01134E  EC63  F0AB         	call	_atoi	;wreg free
  8697  011352  0060  F094  F00A   	movff	btemp,_width
  8698  011358  0060  F098  F00B   	movff	btemp+1,_width+1
  8699                           
  8700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8701  01135E  D00B               	goto	l10577
  8702  011360                     l10575:
  8703                           
  8704                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  8705                           ;stkvar	_fmt @ sp[(-32)+-4]
  8706  011360  0EDC               	movlw	-36
  8707  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  8708  011368  0EDD               	movlw	-35
  8709  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8710  011370  2ADE               	incf	postinc2,f,c
  8711  011372  0E00               	movlw	0
  8712  011374  22DD               	addwfc	postdec2,f,c
  8713  011376                     l10577:
  8714  011376  0ED0               	movlw	208
  8715  011378  6E2F               	movwf	(btemp+10)^0,c
  8716  01137A  0EFF               	movlw	255
  8717  01137C  6E30               	movwf	(btemp+11)^0,c
  8718                           
  8719                           ;stkvar	_fmt @ sp[(-32)+-4]
  8720  01137E  0EDC               	movlw	-36
  8721  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  8722  011386  0EDD               	movlw	-35
  8723  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  8724  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  8725  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  8726  01139A                     	if	0	;tblptru may be non-zero
  8727  01139A                     	endif
  8728  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8729  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  8730  01139C  6EF8               	movwf	tblptru,c
  8731  01139E                     	endif
  8732  01139E  0008               	tblrd		*
  8733  0113A0  50F5               	movf	tablat,w,c
  8734  0113A2  6E2D               	movwf	(btemp+8)^0,c
  8735  0113A4  6A2E               	clrf	(btemp+9)^0,c
  8736  0113A6  502F               	movf	(btemp+10)^0,w,c
  8737  0113A8  262D               	addwf	(btemp+8)^0,f,c
  8738  0113AA  5030               	movf	(btemp+11)^0,w,c
  8739  0113AC  222E               	addwfc	(btemp+9)^0,f,c
  8740  0113AE  502E               	movf	(btemp+9)^0,w,c
  8741  0113B0  E106               	bnz	u10310
  8742  0113B2  0E0A               	movlw	10
  8743  0113B4  5C2D               	subwf	(btemp+8)^0,w,c
  8744  0113B6  B0D8               	btfsc	status,0,c
  8745  0113B8  D002               	goto	u10310
  8746  0113BA  0E01               	movlw	1
  8747  0113BC  D001               	goto	u10320
  8748  0113BE                     u10310:
  8749  0113BE  0E00               	movlw	0
  8750  0113C0                     u10320:
  8751  0113C0  6E2F               	movwf	(btemp+10)^0,c
  8752  0113C2  6A30               	clrf	(btemp+11)^0,c
  8753                           
  8754                           ;stkvar	_vfpfcnvrt$5024 @ sp[(-32)+4]
  8755  0113C4  0EE4               	movlw	-28
  8756  0113C6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8757  0113CC  0EE5               	movlw	-27
  8758  0113CE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8759                           
  8760                           ;stkvar	_vfpfcnvrt$5024 @ sp[(-32)+4]
  8761  0113D4  0EE4               	movlw	-28
  8762  0113D6  006F FF8C  F025    	movff	plusw1,btemp
  8763  0113DC  0EE5               	movlw	-27
  8764  0113DE  50E3               	movf	plusw1,w,c
  8765  0113E0  1025               	iorwf	btemp^0,w,c
  8766  0113E2  A4D8               	btfss	status,2,c
  8767  0113E4  D7BD               	goto	l10575
  8768  0113E6                     u10330:
  8769                           
  8770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  8771                           ;stkvar	_fmt @ sp[(-32)+-4]
  8772  0113E6  0EDC               	movlw	-36
  8773  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  8774  0113EE  0EDD               	movlw	-35
  8775  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  8776  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  8777  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  8778  011402                     	if	0	;tblptru may be non-zero
  8779  011402                     	endif
  8780  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8781  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  8782  011404  6EF8               	movwf	tblptru,c
  8783  011406                     	endif
  8784  011406  0008               	tblrd		*
  8785  011408  50F5               	movf	tablat,w,c
  8786  01140A  0A2E               	xorlw	46
  8787  01140C  A4D8               	btfss	status,2,c
  8788  01140E  D0AC               	goto	u10380
  8789                           
  8790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  8791  011410  6A0C               	clrf	_prec^0,c
  8792  011412  6A0D               	clrf	(_prec+1)^0,c
  8793                           
  8794                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  8795                           ;stkvar	_fmt @ sp[(-32)+-4]
  8796  011414  0EDC               	movlw	-36
  8797  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  8798  01141C  0EDD               	movlw	-35
  8799  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8800  011424  2ADE               	incf	postinc2,f,c
  8801  011426  0E00               	movlw	0
  8802  011428  22DD               	addwfc	postdec2,f,c
  8803                           
  8804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  8805                           ;stkvar	_fmt @ sp[(-32)+-4]
  8806  01142A  0EDC               	movlw	-36
  8807  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8808  011432  0EDD               	movlw	-35
  8809  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  8810  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8811  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  8812  011446                     	if	0	;tblptru may be non-zero
  8813  011446                     	endif
  8814  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8815  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  8816  011448  6EF8               	movwf	tblptru,c
  8817  01144A                     	endif
  8818  01144A  0008               	tblrd		*
  8819  01144C  50F5               	movf	tablat,w,c
  8820  01144E  0A2A               	xorlw	42
  8821  011450  A4D8               	btfss	status,2,c
  8822  011452  D02A               	goto	l10595
  8823                           
  8824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  8825                           ;stkvar	_fmt @ sp[(-32)+-4]
  8826  011454  0EDC               	movlw	-36
  8827  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  8828  01145C  0EDD               	movlw	-35
  8829  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8830  011464  2ADE               	incf	postinc2,f,c
  8831  011466  0E00               	movlw	0
  8832  011468  22DD               	addwfc	postdec2,f,c
  8833                           
  8834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  8835                           ;stkvar	_ap @ sp[(-32)+-6]
  8836  01146A  0EDA               	movlw	-38
  8837  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8838  011472  0EDB               	movlw	-37
  8839  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  8840  01147A  0E02               	movlw	2
  8841  01147C  5EDE               	subwf	postinc2,f,c
  8842  01147E  0E00               	movlw	0
  8843  011480  5ADD               	subwfb	postdec2,f,c
  8844  011482  006F FF78  F02F    	movff	postinc2,btemp+10
  8845  011488  006F FF74  F030    	movff	postdec2,btemp+11
  8846  01148E  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  8847  011494  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  8848  01149A  006F FF78  F00C    	movff	postinc2,_prec
  8849  0114A0  006F FF74  F00D    	movff	postdec2,_prec+1
  8850                           
  8851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  8852  0114A6  D060               	goto	u10380
  8853  0114A8                     l10595:
  8854                           
  8855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  8856                           ;stkvar	_fmt @ sp[(-32)+-4]
  8857  0114A8  0EDC               	movlw	-36
  8858  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8859  0114B0  0EDD               	movlw	-35
  8860  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8861  0114B8  006F FF78  F02F    	movff	postinc2,btemp+10
  8862  0114BE  006F FF74  F030    	movff	postdec2,btemp+11
  8863  0114C4  0060  F0BF  FFE6   	movff	btemp+10,postinc1
  8864  0114CA  0060  F0C3  FFE6   	movff	btemp+11,postinc1
  8865  0114D0  EC63  F0AB         	call	_atoi	;wreg free
  8866  0114D4  0060  F094  F00C   	movff	btemp,_prec
  8867  0114DA  0060  F098  F00D   	movff	btemp+1,_prec+1
  8868                           
  8869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8870  0114E0  D00B               	goto	l10599
  8871  0114E2                     l10597:
  8872                           
  8873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  8874                           ;stkvar	_fmt @ sp[(-32)+-4]
  8875  0114E2  0EDC               	movlw	-36
  8876  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8877  0114EA  0EDD               	movlw	-35
  8878  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8879  0114F2  2ADE               	incf	postinc2,f,c
  8880  0114F4  0E00               	movlw	0
  8881  0114F6  22DD               	addwfc	postdec2,f,c
  8882  0114F8                     l10599:
  8883  0114F8  0ED0               	movlw	208
  8884  0114FA  6E2F               	movwf	(btemp+10)^0,c
  8885  0114FC  0EFF               	movlw	255
  8886  0114FE  6E30               	movwf	(btemp+11)^0,c
  8887                           
  8888                           ;stkvar	_fmt @ sp[(-32)+-4]
  8889  011500  0EDC               	movlw	-36
  8890  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  8891  011508  0EDD               	movlw	-35
  8892  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8893  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  8894  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  8895  01151C                     	if	0	;tblptru may be non-zero
  8896  01151C                     	endif
  8897  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8898  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  8899  01151E  6EF8               	movwf	tblptru,c
  8900  011520                     	endif
  8901  011520  0008               	tblrd		*
  8902  011522  50F5               	movf	tablat,w,c
  8903  011524  6E2D               	movwf	(btemp+8)^0,c
  8904  011526  6A2E               	clrf	(btemp+9)^0,c
  8905  011528  502F               	movf	(btemp+10)^0,w,c
  8906  01152A  262D               	addwf	(btemp+8)^0,f,c
  8907  01152C  5030               	movf	(btemp+11)^0,w,c
  8908  01152E  222E               	addwfc	(btemp+9)^0,f,c
  8909  011530  502E               	movf	(btemp+9)^0,w,c
  8910  011532  E106               	bnz	u10360
  8911  011534  0E0A               	movlw	10
  8912  011536  5C2D               	subwf	(btemp+8)^0,w,c
  8913  011538  B0D8               	btfsc	status,0,c
  8914  01153A  D002               	goto	u10360
  8915  01153C  0E01               	movlw	1
  8916  01153E  D001               	goto	u10370
  8917  011540                     u10360:
  8918  011540  0E00               	movlw	0
  8919  011542                     u10370:
  8920  011542  6E2F               	movwf	(btemp+10)^0,c
  8921  011544  6A30               	clrf	(btemp+11)^0,c
  8922                           
  8923                           ;stkvar	_vfpfcnvrt$5025 @ sp[(-32)+0]
  8924  011546  0EE0               	movlw	-32
  8925  011548  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  8926  01154E  0EE1               	movlw	-31
  8927  011550  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  8928                           
  8929                           ;stkvar	_vfpfcnvrt$5025 @ sp[(-32)+0]
  8930  011556  0EE0               	movlw	-32
  8931  011558  006F FF8C  F025    	movff	plusw1,btemp
  8932  01155E  0EE1               	movlw	-31
  8933  011560  50E3               	movf	plusw1,w,c
  8934  011562  1025               	iorwf	btemp^0,w,c
  8935  011564  A4D8               	btfss	status,2,c
  8936  011566  D7BD               	goto	l10597
  8937  011568                     u10380:
  8938                           
  8939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  8940                           ;stkvar	_fmt @ sp[(-32)+-4]
  8941  011568  0EDC               	movlw	-36
  8942  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8943  011570  0EDD               	movlw	-35
  8944  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  8945  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  8946  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8947  011584                     	if	0	;tblptru may be non-zero
  8948  011584                     	endif
  8949  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8950  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  8951  011586  6EF8               	movwf	tblptru,c
  8952  011588                     	endif
  8953  011588  0008               	tblrd		*
  8954  01158A  50F5               	movf	tablat,w,c
  8955  01158C  6EE6               	movwf	postinc1,c
  8956  01158E  0E00               	movlw	0
  8957  011590  6EE6               	movwf	postinc1,c
  8958  011592  EC77  F0BF         	call	_tolower	;wreg free
  8959                           
  8960                           ;stkvar	_ct @ sp[(-32)+26]
  8961  011596  0EFA               	movlw	-6
  8962  011598  0060  F097  FFE3   	movff	btemp,plusw1
  8963                           
  8964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  8965                           ;stkvar	_ct @ sp[(-32)+26]
  8966  01159E  0EFA               	movlw	-6
  8967  0115A0  50E3               	movf	plusw1,w,c
  8968  0115A2  B4D8               	btfsc	status,2,c
  8969  0115A4  D05B               	goto	l10615
  8970                           
  8971                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  8972                           ;stkvar	_ct @ sp[(-32)+26]
  8973  0115A6  0EFB               	movlw	251
  8974  0115A8  24E1               	addwf	fsr1l,w,c
  8975  0115AA  6ED9               	movwf	fsr2l,c
  8976  0115AC  0EFF               	movlw	255
  8977  0115AE  20E2               	addwfc	fsr1h,w,c
  8978  0115B0  6EDA               	movwf	fsr2h,c
  8979                           
  8980                           ;stkvar	_fmt @ sp[(-32)+-4]
  8981  0115B2  0EDC               	movlw	-36
  8982  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  8983  0115BA  0EDD               	movlw	-35
  8984  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  8985  0115C2  006F FFB8  F02F    	movff	postinc0,btemp+10
  8986  0115C8  006F FFB4  F030    	movff	postdec0,btemp+11
  8987  0115CE  0E01               	movlw	1
  8988  0115D0  262F               	addwf	(btemp+10)^0,f,c
  8989  0115D2  0E00               	movlw	0
  8990  0115D4  2230               	addwfc	(btemp+11)^0,f,c
  8991  0115D6  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  8992  0115DC  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  8993  0115E2                     	if	0	;tblptru may be non-zero
  8994  0115E2                     	endif
  8995  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8996  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  8997  0115E4  6EF8               	movwf	tblptru,c
  8998  0115E6                     	endif
  8999  0115E6  0008               	tblrd		*
  9000  0115E8  50F5               	movf	tablat,w,c
  9001  0115EA  6EE6               	movwf	postinc1,c
  9002  0115EC  0E00               	movlw	0
  9003  0115EE  6EE6               	movwf	postinc1,c
  9004  0115F0  EC77  F0BF         	call	_tolower	;wreg free
  9005  0115F4  5025               	movf	btemp^0,w,c
  9006  0115F6  6EDF               	movwf	indf2,c
  9007                           
  9008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  9009                           ;stkvar	_ct @ sp[(-32)+26]
  9010  0115F8  0EFB               	movlw	251
  9011  0115FA  24E1               	addwf	fsr1l,w,c
  9012  0115FC  6ED9               	movwf	fsr2l,c
  9013  0115FE  0EFF               	movlw	255
  9014  011600  20E2               	addwfc	fsr1h,w,c
  9015  011602  6EDA               	movwf	fsr2h,c
  9016  011604  50DF               	movf	indf2,w,c
  9017  011606  B4D8               	btfsc	status,2,c
  9018  011608  D029               	goto	l10615
  9019                           
  9020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  9021                           ;stkvar	_ct @ sp[(-32)+26]
  9022  01160A  0EFC               	movlw	252
  9023  01160C  24E1               	addwf	fsr1l,w,c
  9024  01160E  6ED9               	movwf	fsr2l,c
  9025  011610  0EFF               	movlw	255
  9026  011612  20E2               	addwfc	fsr1h,w,c
  9027  011614  6EDA               	movwf	fsr2h,c
  9028                           
  9029                           ;stkvar	_fmt @ sp[(-32)+-4]
  9030  011616  0EDC               	movlw	-36
  9031  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  9032  01161E  0EDD               	movlw	-35
  9033  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  9034  011626  006F FFB8  F02F    	movff	postinc0,btemp+10
  9035  01162C  006F FFB4  F030    	movff	postdec0,btemp+11
  9036  011632  0E02               	movlw	2
  9037  011634  262F               	addwf	(btemp+10)^0,f,c
  9038  011636  0E00               	movlw	0
  9039  011638  2230               	addwfc	(btemp+11)^0,f,c
  9040  01163A  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  9041  011640  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  9042  011646                     	if	0	;tblptru may be non-zero
  9043  011646                     	endif
  9044  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9045  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  9046  011648  6EF8               	movwf	tblptru,c
  9047  01164A                     	endif
  9048  01164A  0008               	tblrd		*
  9049  01164C  50F5               	movf	tablat,w,c
  9050  01164E  6EE6               	movwf	postinc1,c
  9051  011650  0E00               	movlw	0
  9052  011652  6EE6               	movwf	postinc1,c
  9053  011654  EC77  F0BF         	call	_tolower	;wreg free
  9054  011658  5025               	movf	btemp^0,w,c
  9055  01165A  6EDF               	movwf	indf2,c
  9056  01165C                     l10615:
  9057                           
  9058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  9059                           ;stkvar	_fmt @ sp[(-32)+-4]
  9060  01165C  0EDC               	movlw	-36
  9061  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9062  011664  0EDD               	movlw	-35
  9063  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  9064  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9065  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  9066  011678                     	if	0	;tblptru may be non-zero
  9067  011678                     	endif
  9068  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9069  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  9070  01167A  6EF8               	movwf	tblptru,c
  9071  01167C                     	endif
  9072  01167C  0008               	tblrd		*
  9073  01167E  50F5               	movf	tablat,w,c
  9074  011680  0A63               	xorlw	99
  9075  011682  A4D8               	btfss	status,2,c
  9076  011684  D036               	goto	l10625
  9077                           
  9078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  9079                           ;stkvar	_fmt @ sp[(-32)+-4]
  9080  011686  0EDC               	movlw	-36
  9081  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  9082  01168E  0EDD               	movlw	-35
  9083  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  9084  011696  2ADE               	incf	postinc2,f,c
  9085  011698  0E00               	movlw	0
  9086  01169A  22DD               	addwfc	postdec2,f,c
  9087                           
  9088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9089                           ;stkvar	_ap @ sp[(-32)+-6]
  9090  01169C  0EDA               	movlw	-38
  9091  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9092  0116A4  0EDB               	movlw	-37
  9093  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9094  0116AC  0E02               	movlw	2
  9095  0116AE  5EDE               	subwf	postinc2,f,c
  9096  0116B0  0E00               	movlw	0
  9097  0116B2  5ADD               	subwfb	postdec2,f,c
  9098  0116B4  006F FF78  F02F    	movff	postinc2,btemp+10
  9099  0116BA  006F FF74  F030    	movff	postdec2,btemp+11
  9100  0116C0  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9101  0116C6  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9102  0116CC  50DF               	movf	indf2,w,c
  9103  0116CE  6E30               	movwf	(btemp+11)^0,c
  9104                           
  9105                           ;stkvar	_c @ sp[(-32)+31]
  9106  0116D0  0EFF               	movlw	-1
  9107  0116D2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9108                           
  9109                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  9110                           ;stkvar	_c @ sp[(-32)+31]
  9111  0116D8  0EFF               	movlw	-1
  9112  0116DA  50E3               	movf	plusw1,w,c
  9113  0116DC  6EE6               	movwf	postinc1,c
  9114                           
  9115                           ;stkvar	_fp @ sp[(-33)+-2]
  9116  0116DE  0EDD               	movlw	-35
  9117  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  9118  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  9119  0116EC  ECF1  F0BE         	call	_ctoa	;wreg free
  9120  0116F0  D343               	goto	l2189
  9121  0116F2                     l10625:
  9122                           
  9123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  9124                           ;stkvar	_fmt @ sp[(-32)+-4]
  9125  0116F2  0EDC               	movlw	-36
  9126  0116F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9127  0116FA  0EDD               	movlw	-35
  9128  0116FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9129  011702  006F FF7B FFF6     	movff	postinc2,tblptrl
  9130  011708  006F FF77 FFF7     	movff	postdec2,tblptrh
  9131  01170E                     	if	0	;tblptru may be non-zero
  9132  01170E                     	endif
  9133  01170E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9134  01170E  0E00               	movlw	low (__mediumconst shr (0+16))
  9135  011710  6EF8               	movwf	tblptru,c
  9136  011712                     	endif
  9137  011712  0008               	tblrd		*
  9138  011714  50F5               	movf	tablat,w,c
  9139  011716  0A64               	xorlw	100
  9140  011718  B4D8               	btfsc	status,2,c
  9141  01171A  D015               	goto	u10430
  9142                           
  9143                           ;stkvar	_fmt @ sp[(-32)+-4]
  9144  01171C  0EDC               	movlw	-36
  9145  01171E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9146  011724  0EDD               	movlw	-35
  9147  011726  006F FF8F FFDA     	movff	plusw1,fsr2h
  9148  01172C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9149  011732  006F FF77 FFF7     	movff	postdec2,tblptrh
  9150  011738                     	if	0	;tblptru may be non-zero
  9151  011738                     	endif
  9152  011738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9153  011738  0E00               	movlw	low (__mediumconst shr (0+16))
  9154  01173A  6EF8               	movwf	tblptru,c
  9155  01173C                     	endif
  9156  01173C  0008               	tblrd		*
  9157  01173E  50F5               	movf	tablat,w,c
  9158  011740  0A69               	xorlw	105
  9159  011742  A4D8               	btfss	status,2,c
  9160  011744  D075               	goto	l10637
  9161  011746                     u10430:
  9162                           
  9163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9164                           ;stkvar	_fmt @ sp[(-32)+-4]
  9165  011746  0EDC               	movlw	-36
  9166  011748  006F FF8F FFD9     	movff	plusw1,fsr2l
  9167  01174E  0EDD               	movlw	-35
  9168  011750  006F FF8F FFDA     	movff	plusw1,fsr2h
  9169  011756  2ADE               	incf	postinc2,f,c
  9170  011758  0E00               	movlw	0
  9171  01175A  22DD               	addwfc	postdec2,f,c
  9172                           
  9173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9174                           ;stkvar	_ap @ sp[(-32)+-6]
  9175  01175C  0EDA               	movlw	-38
  9176  01175E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9177  011764  0EDB               	movlw	-37
  9178  011766  006F FF8F FFDA     	movff	plusw1,fsr2h
  9179  01176C  0E02               	movlw	2
  9180  01176E  5EDE               	subwf	postinc2,f,c
  9181  011770  0E00               	movlw	0
  9182  011772  5ADD               	subwfb	postdec2,f,c
  9183  011774  006F FF78  F02F    	movff	postinc2,btemp+10
  9184  01177A  006F FF74  F030    	movff	postdec2,btemp+11
  9185  011780  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9186  011786  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9187  01178C  006F FF78  F02F    	movff	postinc2,btemp+10
  9188  011792  006F FF74  F030    	movff	postdec2,btemp+11
  9189                           
  9190                           ;stkvar	_ll @ sp[(-32)+14]
  9191  011798  0EEE               	movlw	-18
  9192  01179A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9193  0117A0  0EEF               	movlw	-17
  9194  0117A2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9195  0117A8  6A25               	clrf	btemp^0,c
  9196  0117AA  BEE3               	btfsc	plusw1,7,c
  9197  0117AC  6825               	setf	btemp^0,c
  9198  0117AE  0EF0               	movlw	-16
  9199  0117B0  0060  F097  FFE3   	movff	btemp,plusw1
  9200  0117B6  0EF1               	movlw	-15
  9201  0117B8  0060  F097  FFE3   	movff	btemp,plusw1
  9202  0117BE  0EF2               	movlw	-14
  9203  0117C0  0060  F097  FFE3   	movff	btemp,plusw1
  9204  0117C6  0EF3               	movlw	-13
  9205  0117C8  0060  F097  FFE3   	movff	btemp,plusw1
  9206  0117CE  0EF4               	movlw	-12
  9207  0117D0  0060  F097  FFE3   	movff	btemp,plusw1
  9208  0117D6  0EF5               	movlw	-11
  9209  0117D8  0060  F097  FFE3   	movff	btemp,plusw1
  9210                           
  9211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9212                           ;stkvar	_ll @ sp[(-32)+14]
  9213  0117DE  50E1               	movf	fsr1l,w,c
  9214  0117E0  0FEE               	addlw	-18
  9215  0117E2  6ED9               	movwf	fsr2l,c
  9216  0117E4  50E2               	movf	fsr1h,w,c
  9217  0117E6  6EDA               	movwf	fsr2h,c
  9218  0117E8  0EFF               	movlw	255
  9219  0117EA  22DA               	addwfc	fsr2h,f,c
  9220  0117EC  006F FF7B FFE6     	movff	postinc2,postinc1
  9221  0117F2  006F FF7B FFE6     	movff	postinc2,postinc1
  9222  0117F8  006F FF7B FFE6     	movff	postinc2,postinc1
  9223  0117FE  006F FF7B FFE6     	movff	postinc2,postinc1
  9224  011804  006F FF7B FFE6     	movff	postinc2,postinc1
  9225  01180A  006F FF7B FFE6     	movff	postinc2,postinc1
  9226  011810  006F FF7B FFE6     	movff	postinc2,postinc1
  9227  011816  006F FF7B FFE6     	movff	postinc2,postinc1
  9228                           
  9229                           ;stkvar	_fp @ sp[(-40)+-2]
  9230  01181C  0ED6               	movlw	-42
  9231  01181E  006F FF8F FFE6     	movff	plusw1,postinc1
  9232  011824  006F FF8F FFE6     	movff	plusw1,postinc1
  9233  01182A  EC0E  F0A0         	call	_dtoa	;wreg free
  9234  01182E  D2A4               	goto	l2189
  9235  011830                     l10637:
  9236                           
  9237                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  9238                           ;stkvar	_ct @ sp[(-32)+26]
  9239  011830  0EFA               	movlw	-6
  9240  011832  006F FF8C  F025    	movff	plusw1,btemp
  9241  011838  0E66               	movlw	102
  9242  01183A  1825               	xorwf	btemp^0,w,c
  9243  01183C  A4D8               	btfss	status,2,c
  9244  01183E  D06E               	goto	l10649
  9245                           
  9246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  9247                           ;stkvar	_fmt @ sp[(-32)+-4]
  9248  011840  0EDC               	movlw	-36
  9249  011842  006F FF8F FFD9     	movff	plusw1,fsr2l
  9250  011848  0EDD               	movlw	-35
  9251  01184A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9252  011850  006F FF7B FFF6     	movff	postinc2,tblptrl
  9253  011856  006F FF77 FFF7     	movff	postdec2,tblptrh
  9254  01185C                     	if	0	;tblptru may be non-zero
  9255  01185C                     	endif
  9256  01185C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9257  01185C  0E00               	movlw	low (__mediumconst shr (0+16))
  9258  01185E  6EF8               	movwf	tblptru,c
  9259  011860                     	endif
  9260                           
  9261                           ;stkvar	_c @ sp[(-32)+31]
  9262  011860  0008               	tblrd		*
  9263  011862  0EFF               	movlw	-1
  9264  011864  006F FFD7 FFE3     	movff	tablat,plusw1
  9265                           
  9266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  9267                           ;stkvar	_fmt @ sp[(-32)+-4]
  9268  01186A  0EDC               	movlw	-36
  9269  01186C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9270  011872  0EDD               	movlw	-35
  9271  011874  006F FF8F FFDA     	movff	plusw1,fsr2h
  9272  01187A  2ADE               	incf	postinc2,f,c
  9273  01187C  0E00               	movlw	0
  9274  01187E  22DD               	addwfc	postdec2,f,c
  9275                           
  9276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  9277                           ;stkvar	_ap @ sp[(-32)+-6]
  9278  011880  0EDA               	movlw	-38
  9279  011882  006F FF8F FFD9     	movff	plusw1,fsr2l
  9280  011888  0EDB               	movlw	-37
  9281  01188A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9282  011890  0E04               	movlw	4
  9283  011892  5EDE               	subwf	postinc2,f,c
  9284  011894  0E00               	movlw	0
  9285  011896  5ADD               	subwfb	postdec2,f,c
  9286  011898  006F FF78  F02F    	movff	postinc2,btemp+10
  9287  01189E  006F FF74  F030    	movff	postdec2,btemp+11
  9288  0118A4  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9289  0118AA  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9290  0118B0  006F FF78  F02D    	movff	postinc2,btemp+8
  9291  0118B6  006F FF78  F02E    	movff	postinc2,btemp+9
  9292  0118BC  006F FF78  F02F    	movff	postinc2,btemp+10
  9293  0118C2  006F FF78  F030    	movff	postinc2,btemp+11
  9294                           
  9295                           ;stkvar	_f @ sp[(-32)+22]
  9296  0118C8  0EF6               	movlw	-10
  9297  0118CA  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  9298  0118D0  0EF7               	movlw	-9
  9299  0118D2  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  9300  0118D8  0EF8               	movlw	-8
  9301  0118DA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9302  0118E0  0EF9               	movlw	-7
  9303  0118E2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9304  0118E8                     l10645:
  9305                           
  9306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  9307                           ;stkvar	_c @ sp[(-32)+31]
  9308  0118E8  0EFF               	movlw	-1
  9309  0118EA  50E3               	movf	plusw1,w,c
  9310  0118EC  6EE6               	movwf	postinc1,c
  9311                           
  9312                           ;stkvar	_f @ sp[(-33)+22]
  9313  0118EE  0EF5               	movlw	-11
  9314  0118F0  006F FF8F FFE6     	movff	plusw1,postinc1
  9315  0118F6  006F FF8F FFE6     	movff	plusw1,postinc1
  9316  0118FC  006F FF8F FFE6     	movff	plusw1,postinc1
  9317  011902  006F FF8F FFE6     	movff	plusw1,postinc1
  9318                           
  9319                           ;stkvar	_fp @ sp[(-37)+-2]
  9320  011908  0ED9               	movlw	-39
  9321  01190A  006F FF8F FFE6     	movff	plusw1,postinc1
  9322  011910  006F FF8F FFE6     	movff	plusw1,postinc1
  9323  011916  EC00  F080         	call	_efgtoa	;wreg free
  9324  01191A  D22E               	goto	l2189
  9325  01191C                     l10649:
  9326                           
  9327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  9328  01191C  0E02               	movlw	2
  9329  01191E  6EE6               	movwf	postinc1,c
  9330  011920  0E00               	movlw	0
  9331  011922  6EE6               	movwf	postinc1,c
  9332  011924  0EF5               	movlw	low STR_54
  9333  011926  6EE6               	movwf	postinc1,c
  9334  011928  0EFF               	movlw	high STR_54
  9335  01192A  6EE6               	movwf	postinc1,c
  9336                           
  9337                           ;stkvar	_ct @ sp[(-36)+26]
  9338  01192C  0EF6               	movlw	246
  9339  01192E  24E1               	addwf	fsr1l,w,c
  9340  011930  6E25               	movwf	btemp^0,c
  9341  011932  0EFF               	movlw	255
  9342  011934  20E2               	addwfc	fsr1h,w,c
  9343  011936  6E26               	movwf	(btemp+1)^0,c
  9344  011938  0060  F097  FFE6   	movff	btemp,postinc1
  9345  01193E  0060  F09B  FFE6   	movff	btemp+1,postinc1
  9346  011944  ECC8  F0AF         	call	_strncmp	;wreg free
  9347  011948  5025               	movf	btemp^0,w,c
  9348  01194A  1026               	iorwf	(btemp+1)^0,w,c
  9349  01194C  A4D8               	btfss	status,2,c
  9350  01194E  D096               	goto	l10669
  9351                           
  9352                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  9353                           ;stkvar	_fmt @ sp[(-32)+-4]
  9354  011950  0EDC               	movlw	-36
  9355  011952  006F FF8F FFD9     	movff	plusw1,fsr2l
  9356  011958  0EDD               	movlw	-35
  9357  01195A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9358  011960  006F FF78  F02F    	movff	postinc2,btemp+10
  9359  011966  006F FF74  F030    	movff	postdec2,btemp+11
  9360  01196C  0E01               	movlw	1
  9361  01196E  262F               	addwf	(btemp+10)^0,f,c
  9362  011970  0E00               	movlw	0
  9363  011972  2230               	addwfc	(btemp+11)^0,f,c
  9364  011974  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
  9365  01197A  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
  9366  011980                     	if	0	;tblptru may be non-zero
  9367  011980                     	endif
  9368  011980                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9369  011980  0E00               	movlw	low (__mediumconst shr (0+16))
  9370  011982  6EF8               	movwf	tblptru,c
  9371  011984                     	endif
  9372                           
  9373                           ;stkvar	_c @ sp[(-32)+31]
  9374  011984  0008               	tblrd		*
  9375  011986  0EFF               	movlw	-1
  9376  011988  006F FFD7 FFE3     	movff	tablat,plusw1
  9377  01198E  0EBF               	movlw	191
  9378  011990  6E2F               	movwf	(btemp+10)^0,c
  9379  011992  0EFF               	movlw	255
  9380  011994  6E30               	movwf	(btemp+11)^0,c
  9381                           
  9382                           ;stkvar	_fmt @ sp[(-32)+-4]
  9383  011996  0EDC               	movlw	-36
  9384  011998  006F FF8F FFD9     	movff	plusw1,fsr2l
  9385  01199E  0EDD               	movlw	-35
  9386  0119A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9387  0119A6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9388  0119AC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9389  0119B2                     	if	0	;tblptru may be non-zero
  9390  0119B2                     	endif
  9391  0119B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9392  0119B2  0E00               	movlw	low (__mediumconst shr (0+16))
  9393  0119B4  6EF8               	movwf	tblptru,c
  9394  0119B6                     	endif
  9395  0119B6  0008               	tblrd		*
  9396  0119B8  50F5               	movf	tablat,w,c
  9397  0119BA  6E2D               	movwf	(btemp+8)^0,c
  9398  0119BC  6A2E               	clrf	(btemp+9)^0,c
  9399  0119BE  502F               	movf	(btemp+10)^0,w,c
  9400  0119C0  262D               	addwf	(btemp+8)^0,f,c
  9401  0119C2  5030               	movf	(btemp+11)^0,w,c
  9402  0119C4  222E               	addwfc	(btemp+9)^0,f,c
  9403  0119C6  502E               	movf	(btemp+9)^0,w,c
  9404  0119C8  E106               	bnz	u10460
  9405  0119CA  0E1A               	movlw	26
  9406  0119CC  5C2D               	subwf	(btemp+8)^0,w,c
  9407  0119CE  B0D8               	btfsc	status,0,c
  9408  0119D0  D002               	goto	u10460
  9409  0119D2  0E01               	movlw	1
  9410  0119D4  D001               	goto	u10470
  9411  0119D6                     u10460:
  9412  0119D6  0E00               	movlw	0
  9413  0119D8                     u10470:
  9414  0119D8  6E2F               	movwf	(btemp+10)^0,c
  9415  0119DA  6A30               	clrf	(btemp+11)^0,c
  9416                           
  9417                           ;stkvar	_vfpfcnvrt$5031 @ sp[(-32)+2]
  9418  0119DC  0EE2               	movlw	-30
  9419  0119DE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9420  0119E4  0EE3               	movlw	-29
  9421  0119E6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9422                           
  9423                           ;stkvar	_vfpfcnvrt$5031 @ sp[(-32)+2]
  9424  0119EC  0EE2               	movlw	-30
  9425  0119EE  006F FF8C  F025    	movff	plusw1,btemp
  9426  0119F4  0EE3               	movlw	-29
  9427  0119F6  50E3               	movf	plusw1,w,c
  9428  0119F8  1025               	iorwf	btemp^0,w,c
  9429                           
  9430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  9431                           ;stkvar	_ap @ sp[(-32)+-6]
  9432                           
  9433                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  9434                           
  9435                           ;stkvar	_f @ sp[(-32)+22]
  9436                           
  9437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  9438                           ;stkvar	_ap @ sp[(-32)+-6]
  9439  0119FA  0EDA               	movlw	-38
  9440  0119FC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9441  011A02  0EDB               	movlw	-37
  9442  011A04  006F FF8F FFDA     	movff	plusw1,fsr2h
  9443  011A0A  0E04               	movlw	4
  9444  011A0C  5EDE               	subwf	postinc2,f,c
  9445  011A0E  0E00               	movlw	0
  9446  011A10  5ADD               	subwfb	postdec2,f,c
  9447  011A12  006F FF78  F02F    	movff	postinc2,btemp+10
  9448  011A18  006F FF74  F030    	movff	postdec2,btemp+11
  9449  011A1E  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9450  011A24  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9451  011A2A  006F FF78  F02D    	movff	postinc2,btemp+8
  9452  011A30  006F FF78  F02E    	movff	postinc2,btemp+9
  9453  011A36  006F FF78  F02F    	movff	postinc2,btemp+10
  9454  011A3C  006F FF78  F030    	movff	postinc2,btemp+11
  9455                           
  9456                           ;stkvar	_f @ sp[(-32)+22]
  9457  011A42  0EF6               	movlw	-10
  9458  011A44  0060  F0B7  FFE3   	movff	btemp+8,plusw1
  9459  011A4A  0EF7               	movlw	-9
  9460  011A4C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
  9461  011A52  0EF8               	movlw	-8
  9462  011A54  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9463  011A5A  0EF9               	movlw	-7
  9464  011A5C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9465                           
  9466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  9467                           ;stkvar	_fmt @ sp[(-32)+-4]
  9468  011A62  0EDC               	movlw	-36
  9469  011A64  006F FF8F FFD9     	movff	plusw1,fsr2l
  9470  011A6A  0EDD               	movlw	-35
  9471  011A6C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9472  011A72  0E02               	movlw	2
  9473  011A74  26DE               	addwf	postinc2,f,c
  9474  011A76  0E00               	movlw	0
  9475  011A78  22DD               	addwfc	postdec2,f,c
  9476  011A7A  D736               	goto	l10645
  9477  011A7C                     l10669:
  9478                           
  9479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9480                           ;stkvar	_fmt @ sp[(-32)+-4]
  9481  011A7C  0EDC               	movlw	-36
  9482  011A7E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9483  011A84  0EDD               	movlw	-35
  9484  011A86  006F FF8F FFDA     	movff	plusw1,fsr2h
  9485  011A8C  006F FF7B FFF6     	movff	postinc2,tblptrl
  9486  011A92  006F FF77 FFF7     	movff	postdec2,tblptrh
  9487  011A98                     	if	0	;tblptru may be non-zero
  9488  011A98                     	endif
  9489  011A98                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9490  011A98  0E00               	movlw	low (__mediumconst shr (0+16))
  9491  011A9A  6EF8               	movwf	tblptru,c
  9492  011A9C                     	endif
  9493  011A9C  0008               	tblrd		*
  9494  011A9E  50F5               	movf	tablat,w,c
  9495  011AA0  0A73               	xorlw	115
  9496  011AA2  A4D8               	btfss	status,2,c
  9497  011AA4  D042               	goto	l10679
  9498                           
  9499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9500                           ;stkvar	_fmt @ sp[(-32)+-4]
  9501  011AA6  0EDC               	movlw	-36
  9502  011AA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9503  011AAE  0EDD               	movlw	-35
  9504  011AB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9505  011AB6  2ADE               	incf	postinc2,f,c
  9506  011AB8  0E00               	movlw	0
  9507  011ABA  22DD               	addwfc	postdec2,f,c
  9508                           
  9509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9510                           ;stkvar	_ap @ sp[(-32)+-6]
  9511  011ABC  0EDA               	movlw	-38
  9512  011ABE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9513  011AC4  0EDB               	movlw	-37
  9514  011AC6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9515  011ACC  0E02               	movlw	2
  9516  011ACE  5EDE               	subwf	postinc2,f,c
  9517  011AD0  0E00               	movlw	0
  9518  011AD2  5ADD               	subwfb	postdec2,f,c
  9519  011AD4  006F FF78  F02F    	movff	postinc2,btemp+10
  9520  011ADA  006F FF74  F030    	movff	postdec2,btemp+11
  9521  011AE0  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9522  011AE6  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9523  011AEC  006F FF78  F02F    	movff	postinc2,btemp+10
  9524  011AF2  006F FF74  F030    	movff	postdec2,btemp+11
  9525                           
  9526                           ;stkvar	_cp @ sp[(-32)+29]
  9527  011AF8  0EFE               	movlw	-2
  9528  011AFA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9529  011B00  0EFD               	movlw	-3
  9530  011B02  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9531                           
  9532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9533                           ;stkvar	_cp @ sp[(-32)+29]
  9534  011B08  0EFD               	movlw	-3
  9535  011B0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9536  011B10  006F FF8F FFE6     	movff	plusw1,postinc1
  9537                           
  9538                           ;stkvar	_fp @ sp[(-34)+-2]
  9539  011B16  0EDC               	movlw	-36
  9540  011B18  006F FF8F FFE6     	movff	plusw1,postinc1
  9541  011B1E  006F FF8F FFE6     	movff	plusw1,postinc1
  9542  011B24  ECC4  F0A8         	call	_stoa	;wreg free
  9543  011B28  D127               	goto	l2189
  9544  011B2A                     l10679:
  9545                           
  9546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  9547                           ;stkvar	_fmt @ sp[(-32)+-4]
  9548  011B2A  0EDC               	movlw	-36
  9549  011B2C  006F FF8F FFD9     	movff	plusw1,fsr2l
  9550  011B32  0EDD               	movlw	-35
  9551  011B34  006F FF8F FFDA     	movff	plusw1,fsr2h
  9552  011B3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  9553  011B40  006F FF77 FFF7     	movff	postdec2,tblptrh
  9554  011B46                     	if	0	;tblptru may be non-zero
  9555  011B46                     	endif
  9556  011B46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9557  011B46  0E00               	movlw	low (__mediumconst shr (0+16))
  9558  011B48  6EF8               	movwf	tblptru,c
  9559  011B4A                     	endif
  9560  011B4A  0008               	tblrd		*
  9561  011B4C  50F5               	movf	tablat,w,c
  9562  011B4E  0A78               	xorlw	120
  9563  011B50  B4D8               	btfsc	status,2,c
  9564  011B52  D015               	goto	u10510
  9565                           
  9566                           ;stkvar	_fmt @ sp[(-32)+-4]
  9567  011B54  0EDC               	movlw	-36
  9568  011B56  006F FF8F FFD9     	movff	plusw1,fsr2l
  9569  011B5C  0EDD               	movlw	-35
  9570  011B5E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9571  011B64  006F FF7B FFF6     	movff	postinc2,tblptrl
  9572  011B6A  006F FF77 FFF7     	movff	postdec2,tblptrh
  9573  011B70                     	if	0	;tblptru may be non-zero
  9574  011B70                     	endif
  9575  011B70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9576  011B70  0E00               	movlw	low (__mediumconst shr (0+16))
  9577  011B72  6EF8               	movwf	tblptru,c
  9578  011B74                     	endif
  9579  011B74  0008               	tblrd		*
  9580  011B76  50F5               	movf	tablat,w,c
  9581  011B78  0A58               	xorlw	88
  9582  011B7A  A4D8               	btfss	status,2,c
  9583  011B7C  D094               	goto	l10693
  9584  011B7E                     u10510:
  9585                           
  9586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  9587                           ;stkvar	_fmt @ sp[(-32)+-4]
  9588  011B7E  0EDC               	movlw	-36
  9589  011B80  006F FF8F FFD9     	movff	plusw1,fsr2l
  9590  011B86  0EDD               	movlw	-35
  9591  011B88  006F FF8F FFDA     	movff	plusw1,fsr2h
  9592  011B8E  006F FF7B FFF6     	movff	postinc2,tblptrl
  9593  011B94  006F FF77 FFF7     	movff	postdec2,tblptrh
  9594  011B9A                     	if	0	;tblptru may be non-zero
  9595  011B9A                     	endif
  9596  011B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9597  011B9A  0E00               	movlw	low (__mediumconst shr (0+16))
  9598  011B9C  6EF8               	movwf	tblptru,c
  9599  011B9E                     	endif
  9600                           
  9601                           ;stkvar	_c @ sp[(-32)+31]
  9602  011B9E  0008               	tblrd		*
  9603  011BA0  0EFF               	movlw	-1
  9604  011BA2  006F FFD7 FFE3     	movff	tablat,plusw1
  9605                           
  9606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  9607                           ;stkvar	_fmt @ sp[(-32)+-4]
  9608  011BA8  0EDC               	movlw	-36
  9609  011BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9610  011BB0  0EDD               	movlw	-35
  9611  011BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9612  011BB8  2ADE               	incf	postinc2,f,c
  9613  011BBA  0E00               	movlw	0
  9614  011BBC  22DD               	addwfc	postdec2,f,c
  9615                           
  9616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  9617                           ;stkvar	_ap @ sp[(-32)+-6]
  9618  011BBE  0EDA               	movlw	-38
  9619  011BC0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9620  011BC6  0EDB               	movlw	-37
  9621  011BC8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9622  011BCE  0E02               	movlw	2
  9623  011BD0  5EDE               	subwf	postinc2,f,c
  9624  011BD2  0E00               	movlw	0
  9625  011BD4  5ADD               	subwfb	postdec2,f,c
  9626  011BD6  006F FF78  F02F    	movff	postinc2,btemp+10
  9627  011BDC  006F FF74  F030    	movff	postdec2,btemp+11
  9628  011BE2  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
  9629  011BE8  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
  9630  011BEE  006F FF78  F02F    	movff	postinc2,btemp+10
  9631  011BF4  006F FF74  F030    	movff	postdec2,btemp+11
  9632  011BFA  502F               	movf	(btemp+10)^0,w,c
  9633  011BFC  6E35               	movwf	(btemp+16)^0,c
  9634  011BFE  5030               	movf	(btemp+11)^0,w,c
  9635  011C00  6E36               	movwf	(btemp+17)^0,c
  9636  011C02  6A37               	clrf	(btemp+18)^0,c
  9637  011C04  6A38               	clrf	(btemp+19)^0,c
  9638  011C06  6A39               	clrf	(btemp+20)^0,c
  9639  011C08  6A3A               	clrf	(btemp+21)^0,c
  9640  011C0A  6A3B               	clrf	(btemp+22)^0,c
  9641  011C0C  6A3C               	clrf	(btemp+23)^0,c
  9642                           
  9643                           ;stkvar	_llu @ sp[(-32)+6]
  9644  011C0E  0EE6               	movlw	-26
  9645  011C10  0060  F0D7  FFE3   	movff	btemp+16,plusw1
  9646  011C16  0EE7               	movlw	-25
  9647  011C18  0060  F0DB  FFE3   	movff	btemp+17,plusw1
  9648  011C1E  0EE8               	movlw	-24
  9649  011C20  0060  F0DF  FFE3   	movff	btemp+18,plusw1
  9650  011C26  0EE9               	movlw	-23
  9651  011C28  0060  F0E3  FFE3   	movff	btemp+19,plusw1
  9652  011C2E  0EEA               	movlw	-22
  9653  011C30  0060  F0E7  FFE3   	movff	btemp+20,plusw1
  9654  011C36  0EEB               	movlw	-21
  9655  011C38  0060  F0EB  FFE3   	movff	btemp+21,plusw1
  9656  011C3E  0EEC               	movlw	-20
  9657  011C40  0060  F0EF  FFE3   	movff	btemp+22,plusw1
  9658  011C46  0EED               	movlw	-19
  9659  011C48  0060  F0F3  FFE3   	movff	btemp+23,plusw1
  9660                           
  9661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  9662                           ;stkvar	_c @ sp[(-32)+31]
  9663  011C4E  0EFF               	movlw	-1
  9664  011C50  50E3               	movf	plusw1,w,c
  9665  011C52  6EE6               	movwf	postinc1,c
  9666                           
  9667                           ;stkvar	_llu @ sp[(-33)+6]
  9668  011C54  50E1               	movf	fsr1l,w,c
  9669  011C56  0FE5               	addlw	-27
  9670  011C58  6ED9               	movwf	fsr2l,c
  9671  011C5A  50E2               	movf	fsr1h,w,c
  9672  011C5C  6EDA               	movwf	fsr2h,c
  9673  011C5E  0EFF               	movlw	255
  9674  011C60  22DA               	addwfc	fsr2h,f,c
  9675  011C62  006F FF7B FFE6     	movff	postinc2,postinc1
  9676  011C68  006F FF7B FFE6     	movff	postinc2,postinc1
  9677  011C6E  006F FF7B FFE6     	movff	postinc2,postinc1
  9678  011C74  006F FF7B FFE6     	movff	postinc2,postinc1
  9679  011C7A  006F FF7B FFE6     	movff	postinc2,postinc1
  9680  011C80  006F FF7B FFE6     	movff	postinc2,postinc1
  9681  011C86  006F FF7B FFE6     	movff	postinc2,postinc1
  9682  011C8C  006F FF7B FFE6     	movff	postinc2,postinc1
  9683                           
  9684                           ;stkvar	_fp @ sp[(-41)+-2]
  9685  011C92  0ED5               	movlw	-43
  9686  011C94  006F FF8F FFE6     	movff	plusw1,postinc1
  9687  011C9A  006F FF8F FFE6     	movff	plusw1,postinc1
  9688  011CA0  EC4E  F0A2         	call	_xtoa	;wreg free
  9689  011CA4  D069               	goto	l2189
  9690  011CA6                     l10693:
  9691                           
  9692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9693                           ;stkvar	_fmt @ sp[(-32)+-4]
  9694  011CA6  0EDC               	movlw	-36
  9695  011CA8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9696  011CAE  0EDD               	movlw	-35
  9697  011CB0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9698  011CB6  006F FF7B FFF6     	movff	postinc2,tblptrl
  9699  011CBC  006F FF77 FFF7     	movff	postdec2,tblptrh
  9700  011CC2                     	if	0	;tblptru may be non-zero
  9701  011CC2                     	endif
  9702  011CC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9703  011CC2  0E00               	movlw	low (__mediumconst shr (0+16))
  9704  011CC4  6EF8               	movwf	tblptru,c
  9705  011CC6                     	endif
  9706  011CC6  0008               	tblrd		*
  9707  011CC8  50F5               	movf	tablat,w,c
  9708  011CCA  0A25               	xorlw	37
  9709  011CCC  A4D8               	btfss	status,2,c
  9710  011CCE  D01A               	goto	l10703
  9711                           
  9712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  9713                           ;stkvar	_fmt @ sp[(-32)+-4]
  9714  011CD0  0EDC               	movlw	-36
  9715  011CD2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9716  011CD8  0EDD               	movlw	-35
  9717  011CDA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9718  011CE0  2ADE               	incf	postinc2,f,c
  9719  011CE2  0E00               	movlw	0
  9720  011CE4  22DD               	addwfc	postdec2,f,c
  9721                           
  9722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  9723                           ;stkvar	_fp @ sp[(-32)+-2]
  9724  011CE6  0EDE               	movlw	-34
  9725  011CE8  006F FF8F FFE6     	movff	plusw1,postinc1
  9726  011CEE  006F FF8F FFE6     	movff	plusw1,postinc1
  9727  011CF4  0E25               	movlw	37
  9728  011CF6  6EE6               	movwf	postinc1,c
  9729  011CF8  0E00               	movlw	0
  9730  011CFA  6EE6               	movwf	postinc1,c
  9731  011CFC  ECA3  F0B5         	call	_fputc	;wreg free
  9732  011D00                     l10699:
  9733                           
  9734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  9735  011D00  0E01               	movlw	1
  9736  011D02  D00C               	goto	L7
  9737  011D04                     l10703:
  9738                           
  9739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  9740                           ;stkvar	_fmt @ sp[(-32)+-4]
  9741  011D04  0EDC               	movlw	-36
  9742  011D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  9743  011D0C  0EDD               	movlw	-35
  9744  011D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9745  011D14  2ADE               	incf	postinc2,f,c
  9746  011D16  0E00               	movlw	0
  9747  011D18  22DD               	addwfc	postdec2,f,c
  9748                           
  9749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  9750  011D1A  0E00               	movlw	0
  9751  011D1C                     L7:
  9752  011D1C  6E25               	movwf	btemp^0,c
  9753  011D1E  0E00               	movlw	0
  9754  011D20  6E26               	movwf	(btemp+1)^0,c
  9755  011D22  D02A               	goto	l2189
  9756  011D24                     l10709:
  9757                           
  9758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  9759                           ;stkvar	_fp @ sp[(-32)+-2]
  9760  011D24  0EDE               	movlw	-34
  9761  011D26  006F FF8F FFE6     	movff	plusw1,postinc1
  9762  011D2C  006F FF8F FFE6     	movff	plusw1,postinc1
  9763                           
  9764                           ;stkvar	_fmt @ sp[(-34)+-4]
  9765  011D32  0EDA               	movlw	-38
  9766  011D34  006F FF8F FFD9     	movff	plusw1,fsr2l
  9767  011D3A  0EDB               	movlw	-37
  9768  011D3C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9769  011D42  006F FF7B FFF6     	movff	postinc2,tblptrl
  9770  011D48  006F FF77 FFF7     	movff	postdec2,tblptrh
  9771  011D4E                     	if	0	;tblptru may be non-zero
  9772  011D4E                     	endif
  9773  011D4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9774  011D4E  0E00               	movlw	low (__mediumconst shr (0+16))
  9775  011D50  6EF8               	movwf	tblptru,c
  9776  011D52                     	endif
  9777  011D52  0008               	tblrd		*
  9778  011D54  50F5               	movf	tablat,w,c
  9779  011D56  6EE6               	movwf	postinc1,c
  9780  011D58  0E00               	movlw	0
  9781  011D5A  6EE6               	movwf	postinc1,c
  9782  011D5C  ECA3  F0B5         	call	_fputc	;wreg free
  9783                           
  9784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  9785                           ;stkvar	_fmt @ sp[(-32)+-4]
  9786  011D60  0EDC               	movlw	-36
  9787  011D62  006F FF8F FFD9     	movff	plusw1,fsr2l
  9788  011D68  0EDD               	movlw	-35
  9789  011D6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9790  011D70  2ADE               	incf	postinc2,f,c
  9791  011D72  0E00               	movlw	0
  9792  011D74  22DD               	addwfc	postdec2,f,c
  9793  011D76  D7C4               	goto	l10699
  9794  011D78                     l2189:
  9795                           
  9796                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  9797  011D78  0EDA               	movlw	218
  9798  011D7A  26E1               	addwf	fsr1l,f,c
  9799  011D7C  0EFF               	movlw	255
  9800  011D7E  22E2               	addwfc	fsr1h,f,c
  9801  011D80  0012               	return		;funcret
  9802  011D82                     __end_of_vfpfcnvrt:
  9803                           	opt callstack 0
  9804                           
  9805 ;; *************** function _xtoa *****************
  9806 ;; Defined at:
  9807 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9808 ;; Parameters:    Size  Location     Type
  9809 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9810 ;;		 -> f(6), NULL(0), 
  9811 ;;  d               8  [STACK] unsigned long long 
  9812 ;;  x               1  [STACK] unsigned char 
  9813 ;; Auto vars:     Size  Location     Type
  9814 ;;  n               8  [STACK] unsigned long long 
  9815 ;;  c               2  [STACK] int 
  9816 ;;  i               2  [STACK] int 
  9817 ;;  w               2  [STACK] int 
  9818 ;;  p               2  [STACK] int 
  9819 ;; Return value:  Size  Location     Type
  9820 ;;                  2  [STACK] int 
  9821 ;; Registers used:
  9822 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  9823 ;; Tracked objects:
  9824 ;;		On entry : 0/0
  9825 ;;		On exit  : 0/0
  9826 ;;		Unchanged: 0/0
  9827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9832 ;;Total ram usage:        0 bytes
  9833 ;; Hardware stack levels used:    1
  9834 ;; Hardware stack levels required when called:   12
  9835 ;; This function calls:
  9836 ;;		_isalpha
  9837 ;;		_isupper
  9838 ;;		_pad
  9839 ;;		_toupper
  9840 ;; This function is called by:
  9841 ;;		_vfpfcnvrt
  9842 ;; This function uses a reentrant model
  9843 ;;
  9844                           
  9845                           	psect	text42
  9846  01449C                     __ptext42:
  9847                           	opt callstack 0
  9848  01449C                     _xtoa:
  9849                           	opt callstack 0
  9850                           
  9851                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9852  01449C  0E14               	movlw	20
  9853  01449E  26E1               	addwf	fsr1l,f,c
  9854  0144A0  0E00               	movlw	0
  9855  0144A2  22E2               	addwfc	fsr1h,f,c
  9856                           
  9857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  9858                           
  9859                           ;incstack = 0
  9860  0144A4  AE0D               	btfss	(_prec+1)^0,7,c
  9861                           
  9862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  9863  0144A6  920E               	bcf	_flags^0,1,c
  9864                           
  9865                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  9866  0144A8  BE0D               	btfsc	(_prec+1)^0,7,c
  9867  0144AA  D005               	goto	u10110
  9868  0144AC  500D               	movf	(_prec+1)^0,w,c
  9869  0144AE  E110               	bnz	l10491
  9870  0144B0  040C               	decf	_prec^0,w,c
  9871  0144B2  B0D8               	btfsc	status,0,c
  9872  0144B4  D00D               	goto	l10491
  9873  0144B6                     u10110:
  9874  0144B6  0E01               	movlw	1
  9875  0144B8  6E2F               	movwf	(btemp+10)^0,c
  9876  0144BA  0E00               	movlw	0
  9877  0144BC  6E30               	movwf	(btemp+11)^0,c
  9878                           
  9879                           ;stkvar	_p @ sp[(-20)+18]
  9880  0144BE  0EFE               	movlw	-2
  9881  0144C0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9882  0144C6  0EFF               	movlw	-1
  9883  0144C8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9884  0144CE  D008               	goto	l2139
  9885  0144D0                     l10491:
  9886                           
  9887                           ;stkvar	_p @ sp[(-20)+18]
  9888  0144D0  0EFE               	movlw	-2
  9889  0144D2  0060  F033  FFE3   	movff	_prec,plusw1
  9890  0144D8  0EFF               	movlw	-1
  9891  0144DA  0060  F037  FFE3   	movff	_prec+1,plusw1
  9892  0144E0                     l2139:
  9893                           
  9894                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  9895                           ;stkvar	_w @ sp[(-20)+16]
  9896  0144E0  0EFC               	movlw	-4
  9897  0144E2  0060  F02B  FFE3   	movff	_width,plusw1
  9898  0144E8  0EFD               	movlw	-3
  9899  0144EA  0060  F02F  FFE3   	movff	_width+1,plusw1
  9900                           
  9901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  9902  0144F0  A80E               	btfss	_flags^0,4,c
  9903  0144F2  D00B               	goto	l10497
  9904                           
  9905                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  9906                           ;stkvar	_w @ sp[(-20)+16]
  9907  0144F4  50E1               	movf	fsr1l,w,c
  9908  0144F6  0FFC               	addlw	-4
  9909  0144F8  6ED9               	movwf	fsr2l,c
  9910  0144FA  50E2               	movf	fsr1h,w,c
  9911  0144FC  6EDA               	movwf	fsr2h,c
  9912  0144FE  0EFF               	movlw	255
  9913  014500  22DA               	addwfc	fsr2h,f,c
  9914  014502  0EFE               	movlw	254
  9915  014504  26DE               	addwf	postinc2,f,c
  9916  014506  0EFF               	movlw	255
  9917  014508  22DD               	addwfc	postdec2,f,c
  9918  01450A                     l10497:
  9919                           
  9920                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  9921                           ;stkvar	_d @ sp[(-20)+-10]
  9922  01450A  0EE2               	movlw	226
  9923  01450C  24E1               	addwf	fsr1l,w,c
  9924  01450E  6ED9               	movwf	fsr2l,c
  9925  014510  0EFF               	movlw	255
  9926  014512  20E2               	addwfc	fsr1h,w,c
  9927  014514  6EDA               	movwf	fsr2h,c
  9928                           
  9929                           ;stkvar	_n @ sp[(-20)+4]
  9930  014516  0E08               	movlw	8
  9931  014518  6E25               	movwf	btemp^0,c
  9932  01451A  0EF0               	movlw	-16
  9933  01451C                     us1013999:
  9934  01451C  006F FF7B FFE3     	movff	postinc2,plusw1
  9935  014522  28E8               	incf	wreg,w,c
  9936  014524  2E25               	decfsz	btemp^0,f,c
  9937  014526  D7FA               	bra	us1013999
  9938                           
  9939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  9940  014528  0E4F               	movlw	79
  9941  01452A  6E2F               	movwf	(btemp+10)^0,c
  9942  01452C  0E00               	movlw	0
  9943  01452E  6E30               	movwf	(btemp+11)^0,c
  9944                           
  9945                           ;stkvar	_i @ sp[(-20)+14]
  9946  014530  0EFA               	movlw	-6
  9947  014532  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9948  014538  0EFB               	movlw	-5
  9949  01453A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9950                           
  9951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  9952  014540  0103               	movlb	3	; () banked
  9953  014542  6BE3               	clrf	(_dbuf+79)& (0+255),b
  9954                           
  9955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9956  014544  D0EE               	goto	l10535
  9957  014546                     l10503:
  9958                           
  9959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  9960                           ;stkvar	_i @ sp[(-20)+14]
  9961  014546  50E1               	movf	fsr1l,w,c
  9962  014548  0FFA               	addlw	-6
  9963  01454A  6ED9               	movwf	fsr2l,c
  9964  01454C  50E2               	movf	fsr1h,w,c
  9965  01454E  6EDA               	movwf	fsr2h,c
  9966  014550  0EFF               	movlw	255
  9967  014552  22DA               	addwfc	fsr2h,f,c
  9968  014554  06DE               	decf	postinc2,f,c
  9969  014556  0E00               	movlw	0
  9970  014558  5ADD               	subwfb	postdec2,f,c
  9971                           
  9972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  9973                           ;stkvar	_n @ sp[(-20)+4]
  9974  01455A  0EF0               	movlw	-16
  9975  01455C  006F FF8C  F02F    	movff	plusw1,btemp+10
  9976  014562  0EF1               	movlw	-15
  9977  014564  006F FF8C  F030    	movff	plusw1,btemp+11
  9978  01456A  0E0F               	movlw	15
  9979  01456C  162F               	andwf	(btemp+10)^0,f,c
  9980  01456E  0E00               	movlw	0
  9981  014570  1630               	andwf	(btemp+11)^0,f,c
  9982                           
  9983                           ;stkvar	_c @ sp[(-20)+12]
  9984  014572  0EF8               	movlw	-8
  9985  014574  0060  F0BF  FFE3   	movff	btemp+10,plusw1
  9986  01457A  0EF9               	movlw	-7
  9987  01457C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
  9988                           
  9989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  9990                           ;stkvar	_c @ sp[(-20)+12]
  9991  014582  0EF9               	movlw	-7
  9992  014584  BEE3               	btfsc	plusw1,7,c
  9993  014586  D00F               	goto	l10511
  9994  014588  0EF9               	movlw	-7
  9995  01458A  50E3               	movf	plusw1,w,c
  9996  01458C  E108               	bnz	u10140
  9997  01458E  0EF8               	movlw	-8
  9998  014590  006F FF8C  F025    	movff	plusw1,btemp
  9999  014596  0E0A               	movlw	10
 10000  014598  5E25               	subwf	btemp^0,f,c
 10001  01459A  A0D8               	btfss	status,0,c
 10002  01459C  D004               	goto	l10511
 10003  01459E                     u10140:
 10004                           
 10005                           ;stkvar	_c @ sp[(-20)+12]
 10006  01459E  0EF8               	movlw	-8
 10007  0145A0  50E3               	movf	plusw1,w,c
 10008  0145A2  0F57               	addlw	87
 10009  0145A4  D003               	goto	L8
 10010  0145A6                     l10511:
 10011                           
 10012                           ;stkvar	_c @ sp[(-20)+12]
 10013  0145A6  0EF8               	movlw	-8
 10014  0145A8  50E3               	movf	plusw1,w,c
 10015  0145AA  0F30               	addlw	48
 10016  0145AC                     L8:
 10017  0145AC  6E2F               	movwf	(btemp+10)^0,c
 10018  0145AE  0EF9               	movlw	-7
 10019  0145B0  006F FF8C  F030    	movff	plusw1,btemp+11
 10020  0145B6  0E00               	movlw	0
 10021  0145B8  2230               	addwfc	(btemp+11)^0,f,c
 10022                           
 10023                           ;stkvar	_c @ sp[(-20)+12]
 10024  0145BA  0EF8               	movlw	-8
 10025  0145BC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10026  0145C2  0EF9               	movlw	-7
 10027  0145C4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10028  0145CA  0EBF               	movlw	191
 10029  0145CC  6E2F               	movwf	(btemp+10)^0,c
 10030  0145CE  0EFF               	movlw	255
 10031  0145D0  6E30               	movwf	(btemp+11)^0,c
 10032                           
 10033                           ;stkvar	_x @ sp[(-20)+-11]
 10034  0145D2  0EE1               	movlw	-31
 10035  0145D4  50E3               	movf	plusw1,w,c
 10036  0145D6  6E2D               	movwf	(btemp+8)^0,c
 10037  0145D8  6A2E               	clrf	(btemp+9)^0,c
 10038  0145DA  502F               	movf	(btemp+10)^0,w,c
 10039  0145DC  262D               	addwf	(btemp+8)^0,f,c
 10040  0145DE  5030               	movf	(btemp+11)^0,w,c
 10041  0145E0  222E               	addwfc	(btemp+9)^0,f,c
 10042  0145E2  502E               	movf	(btemp+9)^0,w,c
 10043  0145E4  E106               	bnz	u10150
 10044  0145E6  0E1A               	movlw	26
 10045  0145E8  5C2D               	subwf	(btemp+8)^0,w,c
 10046  0145EA  B0D8               	btfsc	status,0,c
 10047  0145EC  D002               	goto	u10150
 10048  0145EE  0E01               	movlw	1
 10049  0145F0  D001               	goto	u10160
 10050  0145F2                     u10150:
 10051  0145F2  0E00               	movlw	0
 10052  0145F4                     u10160:
 10053  0145F4  6E2F               	movwf	(btemp+10)^0,c
 10054  0145F6  6A30               	clrf	(btemp+11)^0,c
 10055                           
 10056                           ;stkvar	_xtoa$5009 @ sp[(-20)+2]
 10057  0145F8  0EEE               	movlw	-18
 10058  0145FA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10059  014600  0EEF               	movlw	-17
 10060  014602  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10061                           
 10062                           ;stkvar	_xtoa$5009 @ sp[(-20)+2]
 10063  014608  0EEE               	movlw	-18
 10064  01460A  006F FF8C  F025    	movff	plusw1,btemp
 10065  014610  0EEF               	movlw	-17
 10066  014612  50E3               	movf	plusw1,w,c
 10067  014614  1025               	iorwf	btemp^0,w,c
 10068  014616  B4D8               	btfsc	status,2,c
 10069  014618  D041               	goto	l10527
 10070  01461A  0E9F               	movlw	159
 10071  01461C  6E2F               	movwf	(btemp+10)^0,c
 10072  01461E  0EFF               	movlw	255
 10073  014620  6E30               	movwf	(btemp+11)^0,c
 10074                           
 10075                           ;stkvar	_c @ sp[(-20)+12]
 10076  014622  0EF8               	movlw	-8
 10077  014624  006F FF8C  F02D    	movff	plusw1,btemp+8
 10078  01462A  0EF9               	movlw	-7
 10079  01462C  006F FF8C  F02E    	movff	plusw1,btemp+9
 10080  014632  0E20               	movlw	32
 10081  014634  122D               	iorwf	(btemp+8)^0,f,c
 10082  014636  0E00               	movlw	0
 10083  014638  122E               	iorwf	(btemp+9)^0,f,c
 10084  01463A  502F               	movf	(btemp+10)^0,w,c
 10085  01463C  262D               	addwf	(btemp+8)^0,f,c
 10086  01463E  5030               	movf	(btemp+11)^0,w,c
 10087  014640  222E               	addwfc	(btemp+9)^0,f,c
 10088  014642  502E               	movf	(btemp+9)^0,w,c
 10089  014644  E106               	bnz	u10180
 10090  014646  0E1A               	movlw	26
 10091  014648  5C2D               	subwf	(btemp+8)^0,w,c
 10092  01464A  B0D8               	btfsc	status,0,c
 10093  01464C  D002               	goto	u10180
 10094  01464E  0E01               	movlw	1
 10095  014650  D001               	goto	u10190
 10096  014652                     u10180:
 10097  014652  0E00               	movlw	0
 10098  014654                     u10190:
 10099  014654  6E2F               	movwf	(btemp+10)^0,c
 10100  014656  6A30               	clrf	(btemp+11)^0,c
 10101                           
 10102                           ;stkvar	_xtoa$5010 @ sp[(-20)+0]
 10103  014658  0EEC               	movlw	-20
 10104  01465A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10105  014660  0EED               	movlw	-19
 10106  014662  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10107                           
 10108                           ;stkvar	_xtoa$5010 @ sp[(-20)+0]
 10109  014668  0EEC               	movlw	-20
 10110  01466A  006F FF8C  F025    	movff	plusw1,btemp
 10111  014670  0EED               	movlw	-19
 10112  014672  50E3               	movf	plusw1,w,c
 10113  014674  1025               	iorwf	btemp^0,w,c
 10114  014676  B4D8               	btfsc	status,2,c
 10115  014678  D011               	goto	l10527
 10116                           
 10117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 10118                           ;stkvar	_c @ sp[(-20)+12]
 10119  01467A  0EF8               	movlw	-8
 10120  01467C  006F FF8F FFE6     	movff	plusw1,postinc1
 10121  014682  006F FF8F FFE6     	movff	plusw1,postinc1
 10122  014688  EC35  F0BF         	call	_toupper	;wreg free
 10123                           
 10124                           ;stkvar	_c @ sp[(-20)+12]
 10125  01468C  0EF8               	movlw	-8
 10126  01468E  0060  F097  FFE3   	movff	btemp,plusw1
 10127  014694  0EF9               	movlw	-7
 10128  014696  0060  F09B  FFE3   	movff	btemp+1,plusw1
 10129  01469C                     l10527:
 10130                           
 10131                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 10132                           ;stkvar	_c @ sp[(-20)+12]
 10133                           ;stkvar	_i @ sp[(-20)+14]
 10134  01469C  0EFA               	movlw	-6
 10135  01469E  006F FF8C  F02F    	movff	plusw1,btemp+10
 10136  0146A4  0EFB               	movlw	-5
 10137  0146A6  006F FF8C  F030    	movff	plusw1,btemp+11
 10138  0146AC  0E94               	movlw	low _dbuf
 10139  0146AE  242F               	addwf	(btemp+10)^0,w,c
 10140  0146B0  6ED9               	movwf	fsr2l,c
 10141  0146B2  0E03               	movlw	high _dbuf
 10142  0146B4  2030               	addwfc	(btemp+11)^0,w,c
 10143  0146B6  6EDA               	movwf	fsr2h,c
 10144  0146B8  0EF8               	movlw	-8
 10145  0146BA  006F FF8F FFDF     	movff	plusw1,indf2
 10146                           
 10147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 10148                           ;stkvar	_p @ sp[(-20)+18]
 10149  0146C0  50E1               	movf	fsr1l,w,c
 10150  0146C2  0FFE               	addlw	-2
 10151  0146C4  6ED9               	movwf	fsr2l,c
 10152  0146C6  50E2               	movf	fsr1h,w,c
 10153  0146C8  6EDA               	movwf	fsr2h,c
 10154  0146CA  0EFF               	movlw	255
 10155  0146CC  22DA               	addwfc	fsr2h,f,c
 10156  0146CE  06DE               	decf	postinc2,f,c
 10157  0146D0  0E00               	movlw	0
 10158  0146D2  5ADD               	subwfb	postdec2,f,c
 10159                           
 10160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 10161                           ;stkvar	_w @ sp[(-20)+16]
 10162  0146D4  50E1               	movf	fsr1l,w,c
 10163  0146D6  0FFC               	addlw	-4
 10164  0146D8  6ED9               	movwf	fsr2l,c
 10165  0146DA  50E2               	movf	fsr1h,w,c
 10166  0146DC  6EDA               	movwf	fsr2h,c
 10167  0146DE  0EFF               	movlw	255
 10168  0146E0  22DA               	addwfc	fsr2h,f,c
 10169  0146E2  06DE               	decf	postinc2,f,c
 10170  0146E4  0E00               	movlw	0
 10171  0146E6  5ADD               	subwfb	postdec2,f,c
 10172                           
 10173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 10174  0146E8  0E04               	movlw	4
 10175  0146EA  6E30               	movwf	(btemp+11)^0,c
 10176                           
 10177                           ;stkvar	_n @ sp[(-20)+4]
 10178  0146EC  50E1               	movf	fsr1l,w,c
 10179  0146EE  0FF0               	addlw	-16
 10180  0146F0  6ED9               	movwf	fsr2l,c
 10181  0146F2  50E2               	movf	fsr1h,w,c
 10182  0146F4  6EDA               	movwf	fsr2h,c
 10183  0146F6  0EFF               	movlw	255
 10184  0146F8  22DA               	addwfc	fsr2h,f,c
 10185  0146FA  2830               	incf	(btemp+11)^0,w,c
 10186  0146FC  52DE               	movf	postinc2,f,c
 10187  0146FE  D00F               	goto	u10210
 10188  014700                     u10215:
 10189  014700  52DE               	movf	postinc2,f,c
 10190  014702  52DE               	movf	postinc2,f,c
 10191  014704  52DE               	movf	postinc2,f,c
 10192  014706  52DE               	movf	postinc2,f,c
 10193  014708  52DE               	movf	postinc2,f,c
 10194  01470A  52DE               	movf	postinc2,f,c
 10195  01470C  90D8               	bcf	status,0,c
 10196  01470E  32DD               	rrcf	postdec2,f,c
 10197  014710  32DD               	rrcf	postdec2,f,c
 10198  014712  32DD               	rrcf	postdec2,f,c
 10199  014714  32DD               	rrcf	postdec2,f,c
 10200  014716  32DD               	rrcf	postdec2,f,c
 10201  014718  32DD               	rrcf	postdec2,f,c
 10202  01471A  32DD               	rrcf	postdec2,f,c
 10203  01471C  32DE               	rrcf	postinc2,f,c
 10204  01471E                     u10210:
 10205  01471E  2EE8               	decfsz	wreg,f,c
 10206  014720  D7EF               	goto	u10215
 10207  014722                     l10535:
 10208                           
 10209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 10210                           ;stkvar	_i @ sp[(-20)+14]
 10211  014722  0EFB               	movlw	-5
 10212  014724  BEE3               	btfsc	plusw1,7,c
 10213  014726  D03A               	goto	u10260
 10214  014728  0EFB               	movlw	-5
 10215  01472A  50E3               	movf	plusw1,w,c
 10216  01472C  E108               	bnz	u10220
 10217  01472E  0EFA               	movlw	-6
 10218  014730  006F FF8C  F025    	movff	plusw1,btemp
 10219  014736  0E02               	movlw	2
 10220  014738  5E25               	subwf	btemp^0,f,c
 10221  01473A  A0D8               	btfss	status,0,c
 10222  01473C  D02F               	goto	u10260
 10223  01473E                     u10220:
 10224                           
 10225                           ;stkvar	_n @ sp[(-20)+4]
 10226  01473E  0EF0               	movlw	-16
 10227  014740  50E3               	movf	plusw1,w,c
 10228  014742  E115               	bnz	u10231
 10229  014744  0EF1               	movlw	-15
 10230  014746  50E3               	movf	plusw1,w,c
 10231  014748  E112               	bnz	u10231
 10232  01474A  0EF2               	movlw	-14
 10233  01474C  50E3               	movf	plusw1,w,c
 10234  01474E  E10F               	bnz	u10231
 10235  014750  0EF3               	movlw	-13
 10236  014752  50E3               	movf	plusw1,w,c
 10237  014754  E10C               	bnz	u10231
 10238  014756  0EF4               	movlw	-12
 10239  014758  50E3               	movf	plusw1,w,c
 10240  01475A  E109               	bnz	u10231
 10241  01475C  0EF5               	movlw	-11
 10242  01475E  50E3               	movf	plusw1,w,c
 10243  014760  E106               	bnz	u10231
 10244  014762  0EF6               	movlw	-10
 10245  014764  50E3               	movf	plusw1,w,c
 10246  014766  E103               	bnz	u10231
 10247  014768  0EF7               	movlw	-9
 10248  01476A  50E3               	movf	plusw1,w,c
 10249  01476C  A4D8               	btfss	status,2,c
 10250  01476E                     u10231:
 10251  01476E  D6EB               	goto	l10503
 10252                           
 10253                           ;stkvar	_p @ sp[(-20)+18]
 10254  014770  0EFF               	movlw	-1
 10255  014772  BEE3               	btfsc	plusw1,7,c
 10256  014774  D007               	goto	u10240
 10257  014776  0EFF               	movlw	-1
 10258  014778  50E3               	movf	plusw1,w,c
 10259  01477A  E103               	bnz	u10241
 10260  01477C  0EFE               	movlw	-2
 10261  01477E  04E3               	decf	plusw1,w,c
 10262  014780  B0D8               	btfsc	status,0,c
 10263  014782                     u10241:
 10264  014782  D6E1               	goto	l10503
 10265  014784                     u10240:
 10266                           
 10267                           ;stkvar	_w @ sp[(-20)+16]
 10268  014784  0EFD               	movlw	-3
 10269  014786  BEE3               	btfsc	plusw1,7,c
 10270  014788  D009               	goto	u10260
 10271  01478A  0EFD               	movlw	-3
 10272  01478C  50E3               	movf	plusw1,w,c
 10273  01478E  E104               	bnz	u10250
 10274  014790  0EFC               	movlw	-4
 10275  014792  04E3               	decf	plusw1,w,c
 10276  014794  A0D8               	btfss	status,0,c
 10277  014796  D002               	goto	u10260
 10278  014798                     u10250:
 10279  014798  B20E               	btfsc	_flags^0,1,c
 10280  01479A  D6D5               	goto	l10503
 10281  01479C                     u10260:
 10282                           
 10283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 10284  01479C  A80E               	btfss	_flags^0,4,c
 10285  01479E  D036               	goto	l10551
 10286                           
 10287                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 10288                           ;stkvar	_i @ sp[(-20)+14]
 10289  0147A0  50E1               	movf	fsr1l,w,c
 10290  0147A2  0FFA               	addlw	-6
 10291  0147A4  6ED9               	movwf	fsr2l,c
 10292  0147A6  50E2               	movf	fsr1h,w,c
 10293  0147A8  6EDA               	movwf	fsr2h,c
 10294  0147AA  0EFF               	movlw	255
 10295  0147AC  22DA               	addwfc	fsr2h,f,c
 10296  0147AE  06DE               	decf	postinc2,f,c
 10297  0147B0  0E00               	movlw	0
 10298  0147B2  5ADD               	subwfb	postdec2,f,c
 10299                           
 10300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 10301                           ;stkvar	_x @ sp[(-20)+-11]
 10302                           ;stkvar	_i @ sp[(-20)+14]
 10303  0147B4  0EFA               	movlw	-6
 10304  0147B6  006F FF8C  F02F    	movff	plusw1,btemp+10
 10305  0147BC  0EFB               	movlw	-5
 10306  0147BE  006F FF8C  F030    	movff	plusw1,btemp+11
 10307  0147C4  0E94               	movlw	low _dbuf
 10308  0147C6  242F               	addwf	(btemp+10)^0,w,c
 10309  0147C8  6ED9               	movwf	fsr2l,c
 10310  0147CA  0E03               	movlw	high _dbuf
 10311  0147CC  2030               	addwfc	(btemp+11)^0,w,c
 10312  0147CE  6EDA               	movwf	fsr2h,c
 10313  0147D0  0EE1               	movlw	-31
 10314  0147D2  006F FF8F FFDF     	movff	plusw1,indf2
 10315                           
 10316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 10317                           ;stkvar	_i @ sp[(-20)+14]
 10318  0147D8  50E1               	movf	fsr1l,w,c
 10319  0147DA  0FFA               	addlw	-6
 10320  0147DC  6ED9               	movwf	fsr2l,c
 10321  0147DE  50E2               	movf	fsr1h,w,c
 10322  0147E0  6EDA               	movwf	fsr2h,c
 10323  0147E2  0EFF               	movlw	255
 10324  0147E4  22DA               	addwfc	fsr2h,f,c
 10325  0147E6  06DE               	decf	postinc2,f,c
 10326  0147E8  0E00               	movlw	0
 10327  0147EA  5ADD               	subwfb	postdec2,f,c
 10328                           
 10329                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 10330                           ;stkvar	_i @ sp[(-20)+14]
 10331  0147EC  0EFA               	movlw	-6
 10332  0147EE  006F FF8C  F02F    	movff	plusw1,btemp+10
 10333  0147F4  0EFB               	movlw	-5
 10334  0147F6  006F FF8C  F030    	movff	plusw1,btemp+11
 10335  0147FC  0E94               	movlw	low _dbuf
 10336  0147FE  242F               	addwf	(btemp+10)^0,w,c
 10337  014800  6ED9               	movwf	fsr2l,c
 10338  014802  0E03               	movlw	high _dbuf
 10339  014804  2030               	addwfc	(btemp+11)^0,w,c
 10340  014806  6EDA               	movwf	fsr2h,c
 10341  014808  0E30               	movlw	48
 10342  01480A  6EDF               	movwf	indf2,c
 10343  01480C                     l10551:
 10344                           
 10345                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 10346                           ;stkvar	_w @ sp[(-20)+16]
 10347  01480C  0EFC               	movlw	-4
 10348  01480E  006F FF8F FFE6     	movff	plusw1,postinc1
 10349  014814  006F FF8F FFE6     	movff	plusw1,postinc1
 10350                           
 10351                           ;stkvar	_i @ sp[(-22)+14]
 10352  01481A  0E94               	movlw	low _dbuf
 10353  01481C  6E2F               	movwf	(btemp+10)^0,c
 10354  01481E  0E03               	movlw	high _dbuf
 10355  014820  6E30               	movwf	(btemp+11)^0,c
 10356  014822  0EF8               	movlw	-8
 10357  014824  50E3               	movf	plusw1,w,c
 10358  014826  262F               	addwf	(btemp+10)^0,f,c
 10359  014828  0EF9               	movlw	-7
 10360  01482A  50E3               	movf	plusw1,w,c
 10361  01482C  2230               	addwfc	(btemp+11)^0,f,c
 10362  01482E  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 10363  014834  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 10364                           
 10365                           ;stkvar	_fp @ sp[(-24)+-2]
 10366  01483A  0EE6               	movlw	-26
 10367  01483C  006F FF8F FFE6     	movff	plusw1,postinc1
 10368  014842  006F FF8F FFE6     	movff	plusw1,postinc1
 10369  014848  ECC1  F0B6         	call	_pad	;wreg free
 10370                           
 10371                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 10372  01484C  0EE1               	movlw	225
 10373  01484E  26E1               	addwf	fsr1l,f,c
 10374  014850  0EFF               	movlw	255
 10375  014852  22E2               	addwfc	fsr1h,f,c
 10376  014854  0012               	return		;funcret
 10377  014856                     __end_of_xtoa:
 10378                           	opt callstack 0
 10379                           
 10380 ;; *************** function _toupper *****************
 10381 ;; Defined at:
 10382 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 10383 ;; Parameters:    Size  Location     Type
 10384 ;;  c               2  [STACK] int 
 10385 ;; Auto vars:     Size  Location     Type
 10386 ;;		None
 10387 ;; Return value:  Size  Location     Type
 10388 ;;                  2  [STACK] int 
 10389 ;; Registers used:
 10390 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 10391 ;; Tracked objects:
 10392 ;;		On entry : 0/3
 10393 ;;		On exit  : 0/0
 10394 ;;		Unchanged: 0/0
 10395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10400 ;;Total ram usage:        0 bytes
 10401 ;; Hardware stack levels used:    1
 10402 ;; Hardware stack levels required when called:    8
 10403 ;; This function calls:
 10404 ;;		_islower
 10405 ;; This function is called by:
 10406 ;;		_xtoa
 10407 ;; This function uses a reentrant model
 10408 ;;
 10409                           
 10410                           	psect	text43
 10411  017E6A                     __ptext43:
 10412                           	opt callstack 0
 10413  017E6A                     _toupper:
 10414                           	opt callstack 0
 10415                           
 10416                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10417  017E6A  52E6               	movf	postinc1,f,c
 10418  017E6C  52E6               	movf	postinc1,f,c
 10419                           
 10420                           ;stkvar	_c @ sp[(-2)+-2]
 10421                           
 10422                           ;incstack = 0
 10423  017E6E  0EFC               	movlw	-4
 10424  017E70  50E3               	movf	plusw1,w,c
 10425  017E72  0F9F               	addlw	159
 10426  017E74  6E2F               	movwf	(btemp+10)^0,c
 10427  017E76  0EFD               	movlw	-3
 10428  017E78  006F FF8C  F030    	movff	plusw1,btemp+11
 10429  017E7E  0EFF               	movlw	255
 10430  017E80  2230               	addwfc	(btemp+11)^0,f,c
 10431  017E82  5030               	movf	(btemp+11)^0,w,c
 10432  017E84  E106               	bnz	u5020
 10433  017E86  0E1A               	movlw	26
 10434  017E88  5C2F               	subwf	(btemp+10)^0,w,c
 10435  017E8A  B0D8               	btfsc	status,0,c
 10436  017E8C  D002               	goto	u5020
 10437  017E8E  0E01               	movlw	1
 10438  017E90  D001               	goto	u5030
 10439  017E92                     u5020:
 10440  017E92  0E00               	movlw	0
 10441  017E94                     u5030:
 10442  017E94  6E2F               	movwf	(btemp+10)^0,c
 10443  017E96  6A30               	clrf	(btemp+11)^0,c
 10444                           
 10445                           ;stkvar	_toupper$5670 @ sp[(-2)+0]
 10446  017E98  0EFE               	movlw	-2
 10447  017E9A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10448  017EA0  0EFF               	movlw	-1
 10449  017EA2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10450                           
 10451                           ;stkvar	_toupper$5670 @ sp[(-2)+0]
 10452  017EA8  0EFE               	movlw	-2
 10453  017EAA  006F FF8C  F025    	movff	plusw1,btemp
 10454  017EB0  0EFF               	movlw	-1
 10455  017EB2  50E3               	movf	plusw1,w,c
 10456  017EB4  1025               	iorwf	btemp^0,w,c
 10457  017EB6  B4D8               	btfsc	status,2,c
 10458  017EB8  D00D               	goto	l6719
 10459                           
 10460                           ;stkvar	_c @ sp[(-2)+-2]
 10461  017EBA  0EFC               	movlw	-4
 10462  017EBC  006F FF8C  F025    	movff	plusw1,btemp
 10463  017EC2  0EFD               	movlw	-3
 10464  017EC4  006F FF8C  F026    	movff	plusw1,btemp+1
 10465  017ECA  0E5F               	movlw	95
 10466  017ECC  1625               	andwf	btemp^0,f,c
 10467  017ECE  0E00               	movlw	0
 10468  017ED0  1626               	andwf	(btemp+1)^0,f,c
 10469  017ED2  D008               	goto	l3072
 10470  017ED4                     l6719:
 10471                           
 10472                           ;stkvar	_c @ sp[(-2)+-2]
 10473  017ED4  0EFC               	movlw	-4
 10474  017ED6  006F FF8C  F025    	movff	plusw1,btemp
 10475  017EDC  0EFD               	movlw	-3
 10476  017EDE  006F FF8C  F026    	movff	plusw1,btemp+1
 10477  017EE4                     l3072:
 10478                           
 10479                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10480  017EE4  52E5               	movf	postdec1,f,c
 10481  017EE6  52E5               	movf	postdec1,f,c
 10482  017EE8  52E5               	movf	postdec1,f,c
 10483  017EEA  52E5               	movf	postdec1,f,c
 10484  017EEC  0012               	return		;funcret
 10485  017EEE                     __end_of_toupper:
 10486                           	opt callstack 0
 10487                           
 10488 ;; *************** function _islower *****************
 10489 ;; Defined at:
 10490 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 10491 ;; Parameters:    Size  Location     Type
 10492 ;;  c               2  [STACK] int 
 10493 ;; Auto vars:     Size  Location     Type
 10494 ;;		None
 10495 ;; Return value:  Size  Location     Type
 10496 ;;                  2  [STACK] int 
 10497 ;; Registers used:
 10498 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10499 ;; Tracked objects:
 10500 ;;		On entry : 0/0
 10501 ;;		On exit  : 0/0
 10502 ;;		Unchanged: 0/0
 10503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10508 ;;Total ram usage:        0 bytes
 10509 ;; Hardware stack levels used:    1
 10510 ;; Hardware stack levels required when called:    7
 10511 ;; This function calls:
 10512 ;;		Nothing
 10513 ;; This function is called by:
 10514 ;;		_toupper
 10515 ;; This function uses a reentrant model
 10516 ;;
 10517                           
 10518                           	psect	text44
 10519  018A64                     __ptext44:
 10520                           	opt callstack 0
 10521  018A64                     _islower:
 10522                           	opt callstack 15
 10523                           
 10524                           ;stkvar	_c @ sp[(0)+-2]
 10525                           
 10526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10527                           ;incstack = 0
 10528  018A64  0EFE               	movlw	-2
 10529  018A66  50E3               	movf	plusw1,w,c
 10530  018A68  0F9F               	addlw	159
 10531  018A6A  6E2F               	movwf	(btemp+10)^0,c
 10532  018A6C  0EFF               	movlw	-1
 10533  018A6E  006F FF8C  F030    	movff	plusw1,btemp+11
 10534  018A74  0EFF               	movlw	255
 10535  018A76  2230               	addwfc	(btemp+11)^0,f,c
 10536  018A78  5030               	movf	(btemp+11)^0,w,c
 10537  018A7A  E106               	bnz	u4710
 10538  018A7C  0E1A               	movlw	26
 10539  018A7E  5C2F               	subwf	(btemp+10)^0,w,c
 10540  018A80  B0D8               	btfsc	status,0,c
 10541  018A82  D002               	goto	u4710
 10542  018A84  0E01               	movlw	1
 10543  018A86  D001               	goto	u4720
 10544  018A88                     u4710:
 10545  018A88  0E00               	movlw	0
 10546  018A8A                     u4720:
 10547  018A8A  6E25               	movwf	btemp^0,c
 10548  018A8C  6A26               	clrf	(btemp+1)^0,c
 10549                           
 10550                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10551  018A8E  52E5               	movf	postdec1,f,c
 10552  018A90  52E5               	movf	postdec1,f,c
 10553  018A92  0012               	return		;funcret
 10554  018A94                     __end_of_islower:
 10555                           	opt callstack 0
 10556                           
 10557 ;; *************** function _isalpha *****************
 10558 ;; Defined at:
 10559 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 10560 ;; Parameters:    Size  Location     Type
 10561 ;;  c               2  [STACK] int 
 10562 ;; Auto vars:     Size  Location     Type
 10563 ;;		None
 10564 ;; Return value:  Size  Location     Type
 10565 ;;                  2  [STACK] int 
 10566 ;; Registers used:
 10567 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 10568 ;; Tracked objects:
 10569 ;;		On entry : 0/0
 10570 ;;		On exit  : 0/0
 10571 ;;		Unchanged: 0/0
 10572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10577 ;;Total ram usage:        0 bytes
 10578 ;; Hardware stack levels used:    1
 10579 ;; Hardware stack levels required when called:    7
 10580 ;; This function calls:
 10581 ;;		Nothing
 10582 ;; This function is called by:
 10583 ;;		_xtoa
 10584 ;; This function uses a reentrant model
 10585 ;;
 10586                           
 10587                           	psect	text45
 10588  01872A                     __ptext45:
 10589                           	opt callstack 0
 10590  01872A                     _isalpha:
 10591                           	opt callstack 16
 10592                           
 10593                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10594                           ;incstack = 0
 10595  01872A  0E9F               	movlw	159
 10596  01872C  6E2F               	movwf	(btemp+10)^0,c
 10597  01872E  0EFF               	movlw	255
 10598  018730  6E30               	movwf	(btemp+11)^0,c
 10599                           
 10600                           ;stkvar	_c @ sp[(0)+-2]
 10601  018732  0EFE               	movlw	-2
 10602  018734  006F FF8C  F02D    	movff	plusw1,btemp+8
 10603  01873A  0EFF               	movlw	-1
 10604  01873C  006F FF8C  F02E    	movff	plusw1,btemp+9
 10605  018742  0E20               	movlw	32
 10606  018744  122D               	iorwf	(btemp+8)^0,f,c
 10607  018746  0E00               	movlw	0
 10608  018748  122E               	iorwf	(btemp+9)^0,f,c
 10609  01874A  502F               	movf	(btemp+10)^0,w,c
 10610  01874C  262D               	addwf	(btemp+8)^0,f,c
 10611  01874E  5030               	movf	(btemp+11)^0,w,c
 10612  018750  222E               	addwfc	(btemp+9)^0,f,c
 10613  018752  502E               	movf	(btemp+9)^0,w,c
 10614  018754  E106               	bnz	u5000
 10615  018756  0E1A               	movlw	26
 10616  018758  5C2D               	subwf	(btemp+8)^0,w,c
 10617  01875A  B0D8               	btfsc	status,0,c
 10618  01875C  D002               	goto	u5000
 10619  01875E  0E01               	movlw	1
 10620  018760  D001               	goto	u5010
 10621  018762                     u5000:
 10622  018762  0E00               	movlw	0
 10623  018764                     u5010:
 10624  018764  6E25               	movwf	btemp^0,c
 10625  018766  6A26               	clrf	(btemp+1)^0,c
 10626                           
 10627                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10628  018768  52E5               	movf	postdec1,f,c
 10629  01876A  52E5               	movf	postdec1,f,c
 10630  01876C  0012               	return		;funcret
 10631  01876E                     __end_of_isalpha:
 10632                           	opt callstack 0
 10633                           
 10634 ;; *************** function _strncmp *****************
 10635 ;; Defined at:
 10636 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10637 ;; Parameters:    Size  Location     Type
 10638 ;;  _l              2  [STACK] PTR const unsigned char 
 10639 ;;		 -> ct(3), 
 10640 ;;  _r              2  [STACK] PTR const unsigned char 
 10641 ;;		 -> STR_56(3), 
 10642 ;;  n               2  [STACK] unsigned int 
 10643 ;; Auto vars:     Size  Location     Type
 10644 ;;  r               2  [STACK] PTR const unsigned char 
 10645 ;;		 -> STR_56(3), 
 10646 ;;  l               2  [STACK] PTR const unsigned char 
 10647 ;;		 -> ct(3), 
 10648 ;; Return value:  Size  Location     Type
 10649 ;;                  2  [STACK] int 
 10650 ;; Registers used:
 10651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru,
      + prodl
 10652 ;; Tracked objects:
 10653 ;;		On entry : 0/0
 10654 ;;		On exit  : 0/0
 10655 ;;		Unchanged: 0/0
 10656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10661 ;;Total ram usage:        0 bytes
 10662 ;; Hardware stack levels used:    1
 10663 ;; Hardware stack levels required when called:    7
 10664 ;; This function calls:
 10665 ;;		Nothing
 10666 ;; This function is called by:
 10667 ;;		_vfpfcnvrt
 10668 ;; This function uses a reentrant model
 10669 ;;
 10670                           
 10671                           	psect	text46
 10672  015F90                     __ptext46:
 10673                           	opt callstack 0
 10674  015F90                     _strncmp:
 10675                           	opt callstack 0
 10676                           
 10677                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10678  015F90  52E6               	movf	postinc1,f,c
 10679  015F92  52E6               	movf	postinc1,f,c
 10680  015F94  52E6               	movf	postinc1,f,c
 10681  015F96  52E6               	movf	postinc1,f,c
 10682                           
 10683                           ;stkvar	__l @ sp[(-4)+-2]
 10684                           
 10685                           ;incstack = 0
 10686  015F98  0EFA               	movlw	-6
 10687  015F9A  006F FF8C  F02F    	movff	plusw1,btemp+10
 10688  015FA0  0EFB               	movlw	-5
 10689  015FA2  006F FF8C  F030    	movff	plusw1,btemp+11
 10690                           
 10691                           ;stkvar	_l @ sp[(-4)+2]
 10692  015FA8  0EFF               	movlw	-1
 10693  015FAA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10694  015FB0  0EFE               	movlw	-2
 10695  015FB2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10696                           
 10697                           ;stkvar	__r @ sp[(-4)+-4]
 10698  015FB8  0EF8               	movlw	-8
 10699  015FBA  006F FF8C  F02F    	movff	plusw1,btemp+10
 10700  015FC0  0EF9               	movlw	-7
 10701  015FC2  006F FF8C  F030    	movff	plusw1,btemp+11
 10702                           
 10703                           ;stkvar	_r @ sp[(-4)+0]
 10704  015FC8  0EFD               	movlw	-3
 10705  015FCA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10706  015FD0  0EFC               	movlw	-4
 10707  015FD2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10708                           
 10709                           ;stkvar	_n @ sp[(-4)+-6]
 10710  015FD8  0EF6               	movlw	-10
 10711  015FDA  006F FF8C  F025    	movff	plusw1,btemp
 10712  015FE0  0E01               	movlw	1
 10713  015FE2  5E25               	subwf	btemp^0,f,c
 10714  015FE4  0EF6               	movlw	-10
 10715  015FE6  0060  F097  FFE3   	movff	btemp,plusw1
 10716  015FEC  0EF7               	movlw	-9
 10717  015FEE  006F FF8C  F025    	movff	plusw1,btemp
 10718  015FF4  0E00               	movlw	0
 10719  015FF6  5A25               	subwfb	btemp^0,f,c
 10720  015FF8  0EF7               	movlw	-9
 10721  015FFA  0060  F097  FFE3   	movff	btemp,plusw1
 10722  016000  0EF6               	movlw	-10
 10723  016002  28E3               	incf	plusw1,w,c
 10724  016004  E13F               	bnz	l7695
 10725  016006  0EF7               	movlw	-9
 10726  016008  28E3               	incf	plusw1,w,c
 10727  01600A  A4D8               	btfss	status,2,c
 10728  01600C  D03B               	goto	l7695
 10729  01600E  0E00               	movlw	0
 10730  016010  6E25               	movwf	btemp^0,c
 10731  016012  0E00               	movlw	0
 10732  016014  6E26               	movwf	(btemp+1)^0,c
 10733  016016  D09B               	goto	l3044
 10734  016018                     l7693:
 10735                           
 10736                           ;stkvar	_l @ sp[(-4)+2]
 10737  016018  0EFE               	movlw	-2
 10738  01601A  50E3               	movf	plusw1,w,c
 10739  01601C  0F01               	addlw	1
 10740  01601E  6E25               	movwf	btemp^0,c
 10741  016020  0EFE               	movlw	-2
 10742  016022  0060  F097  FFE3   	movff	btemp,plusw1
 10743  016028  6A25               	clrf	btemp^0,c
 10744  01602A  0EFF               	movlw	-1
 10745  01602C  50E3               	movf	plusw1,w,c
 10746  01602E  2025               	addwfc	btemp^0,w,c
 10747  016030  6E25               	movwf	btemp^0,c
 10748  016032  0EFF               	movlw	-1
 10749  016034  0060  F097  FFE3   	movff	btemp,plusw1
 10750                           
 10751                           ;stkvar	_r @ sp[(-4)+0]
 10752  01603A  0EFC               	movlw	-4
 10753  01603C  50E3               	movf	plusw1,w,c
 10754  01603E  0F01               	addlw	1
 10755  016040  6E25               	movwf	btemp^0,c
 10756  016042  0EFC               	movlw	-4
 10757  016044  0060  F097  FFE3   	movff	btemp,plusw1
 10758  01604A  6A25               	clrf	btemp^0,c
 10759  01604C  0EFD               	movlw	-3
 10760  01604E  50E3               	movf	plusw1,w,c
 10761  016050  2025               	addwfc	btemp^0,w,c
 10762  016052  6E25               	movwf	btemp^0,c
 10763  016054  0EFD               	movlw	-3
 10764  016056  0060  F097  FFE3   	movff	btemp,plusw1
 10765                           
 10766                           ;stkvar	_n @ sp[(-4)+-6]
 10767  01605C  0EF6               	movlw	-10
 10768  01605E  006F FF8C  F025    	movff	plusw1,btemp
 10769  016064  0E01               	movlw	1
 10770  016066  5E25               	subwf	btemp^0,f,c
 10771  016068  0EF6               	movlw	-10
 10772  01606A  0060  F097  FFE3   	movff	btemp,plusw1
 10773  016070  0EF7               	movlw	-9
 10774  016072  006F FF8C  F025    	movff	plusw1,btemp
 10775  016078  0E00               	movlw	0
 10776  01607A  5A25               	subwfb	btemp^0,f,c
 10777  01607C  0EF7               	movlw	-9
 10778  01607E  0060  F097  FFE3   	movff	btemp,plusw1
 10779  016084                     l7695:
 10780                           
 10781                           ;stkvar	_l @ sp[(-4)+2]
 10782  016084  0EFE               	movlw	-2
 10783  016086  006F FF8F FFD9     	movff	plusw1,fsr2l
 10784  01608C  0EFF               	movlw	-1
 10785  01608E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10786  016094  50DF               	movf	indf2,w,c
 10787  016096  B4D8               	btfsc	status,2,c
 10788  016098  D03B               	goto	u6910
 10789                           
 10790                           ;stkvar	_r @ sp[(-4)+0]
 10791  01609A  50E1               	movf	fsr1l,w,c
 10792  01609C  0FFC               	addlw	-4
 10793  01609E  6ED9               	movwf	fsr2l,c
 10794  0160A0  50E2               	movf	fsr1h,w,c
 10795  0160A2  6EDA               	movwf	fsr2h,c
 10796  0160A4  0EFF               	movlw	255
 10797  0160A6  22DA               	addwfc	fsr2h,f,c
 10798  0160A8  006F FF7B FFF6     	movff	postinc2,tblptrl
 10799  0160AE  006F FF77 FFF7     	movff	postdec2,tblptrh
 10800  0160B4                     	if	0	;tblptru may be non-zero
 10801  0160B4                     	endif
 10802  0160B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10803  0160B4  0E00               	movlw	low (__mediumconst shr (0+16))
 10804  0160B6  6EF8               	movwf	tblptru,c
 10805  0160B8                     	endif
 10806  0160B8  0008               	tblrd		*
 10807  0160BA  50F5               	movf	tablat,w,c
 10808  0160BC  0900               	iorlw	0
 10809  0160BE  B4D8               	btfsc	status,2,c
 10810  0160C0  D027               	goto	u6910
 10811                           
 10812                           ;stkvar	_n @ sp[(-4)+-6]
 10813  0160C2  0EF6               	movlw	-10
 10814  0160C4  006F FF8C  F025    	movff	plusw1,btemp
 10815  0160CA  0EF7               	movlw	-9
 10816  0160CC  50E3               	movf	plusw1,w,c
 10817  0160CE  1025               	iorwf	btemp^0,w,c
 10818  0160D0  B4D8               	btfsc	status,2,c
 10819  0160D2  D01E               	goto	u6910
 10820                           
 10821                           ;stkvar	_l @ sp[(-4)+2]
 10822  0160D4  0EFE               	movlw	-2
 10823  0160D6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10824  0160DC  0EFF               	movlw	-1
 10825  0160DE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10826  0160E4  50DF               	movf	indf2,w,c
 10827  0160E6  6E30               	movwf	(btemp+11)^0,c
 10828                           
 10829                           ;stkvar	_r @ sp[(-4)+0]
 10830  0160E8  50E1               	movf	fsr1l,w,c
 10831  0160EA  0FFC               	addlw	-4
 10832  0160EC  6ED9               	movwf	fsr2l,c
 10833  0160EE  50E2               	movf	fsr1h,w,c
 10834  0160F0  6EDA               	movwf	fsr2h,c
 10835  0160F2  0EFF               	movlw	255
 10836  0160F4  22DA               	addwfc	fsr2h,f,c
 10837  0160F6  006F FF7B FFF6     	movff	postinc2,tblptrl
 10838  0160FC  006F FF77 FFF7     	movff	postdec2,tblptrh
 10839  016102                     	if	0	;tblptru may be non-zero
 10840  016102                     	endif
 10841  016102                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10842  016102  0E00               	movlw	low (__mediumconst shr (0+16))
 10843  016104  6EF8               	movwf	tblptru,c
 10844  016106                     	endif
 10845  016106  0008               	tblrd		*
 10846  016108  50F5               	movf	tablat,w,c
 10847  01610A  1830               	xorwf	(btemp+11)^0,w,c
 10848  01610C  B4D8               	btfsc	status,2,c
 10849  01610E  D784               	goto	l7693
 10850  016110                     u6910:
 10851                           
 10852                           ;stkvar	_l @ sp[(-4)+2]
 10853  016110  0EFE               	movlw	-2
 10854  016112  006F FF8F FFD9     	movff	plusw1,fsr2l
 10855  016118  0EFF               	movlw	-1
 10856  01611A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10857  016120  50DF               	movf	indf2,w,c
 10858  016122  6E25               	movwf	btemp^0,c
 10859  016124  6A26               	clrf	(btemp+1)^0,c
 10860                           
 10861                           ;stkvar	_r @ sp[(-4)+0]
 10862  016126  50E1               	movf	fsr1l,w,c
 10863  016128  0FFC               	addlw	-4
 10864  01612A  6ED9               	movwf	fsr2l,c
 10865  01612C  50E2               	movf	fsr1h,w,c
 10866  01612E  6EDA               	movwf	fsr2h,c
 10867  016130  0EFF               	movlw	255
 10868  016132  22DA               	addwfc	fsr2h,f,c
 10869  016134  006F FF7B FFF6     	movff	postinc2,tblptrl
 10870  01613A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10871  016140                     	if	0	;tblptru may be non-zero
 10872  016140                     	endif
 10873  016140                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10874  016140  0E00               	movlw	low (__mediumconst shr (0+16))
 10875  016142  6EF8               	movwf	tblptru,c
 10876  016144                     	endif
 10877  016144  0008               	tblrd		*
 10878  016146  50F5               	movf	tablat,w,c
 10879  016148  5E25               	subwf	btemp^0,f,c
 10880  01614A  0E00               	movlw	0
 10881  01614C  5A26               	subwfb	(btemp+1)^0,f,c
 10882  01614E                     l3044:
 10883                           
 10884                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10885  01614E  0EF6               	movlw	246
 10886  016150  26E1               	addwf	fsr1l,f,c
 10887  016152  0EFF               	movlw	255
 10888  016154  22E2               	addwfc	fsr1h,f,c
 10889  016156  0012               	return		;funcret
 10890  016158                     __end_of_strncmp:
 10891                           	opt callstack 0
 10892                           
 10893 ;; *************** function _stoa *****************
 10894 ;; Defined at:
 10895 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10896 ;; Parameters:    Size  Location     Type
 10897 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10898 ;;		 -> f(6), NULL(0), 
 10899 ;;  s               2  [STACK] PTR unsigned char 
 10900 ;;		 -> ?_printf(2), ?_sprintf(2), STR_28(9), STR_27(12), 
 10901 ;;		 -> D.lcd(288), D(290), T(144), STR_7(6), 
 10902 ;;		 -> STR_3(6), V(188), 
 10903 ;; Auto vars:     Size  Location     Type
 10904 ;;  nuls            7  [STACK] unsigned char [7]
 10905 ;;  l               2  [STACK] int 
 10906 ;;  p               2  [STACK] int 
 10907 ;;  cp              2  [STACK] PTR unsigned char 
 10908 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_28(9), 
 10909 ;;		 -> STR_27(12), D.lcd(288), D(290), T(144), 
 10910 ;;		 -> STR_7(6), STR_3(6), V(188), 
 10911 ;;  w               2  [STACK] int 
 10912 ;;  i               2  [STACK] int 
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  2  [STACK] int 
 10915 ;; Registers used:
 10916 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10926 ;;Total ram usage:        0 bytes
 10927 ;; Hardware stack levels used:    1
 10928 ;; Hardware stack levels required when called:   10
 10929 ;; This function calls:
 10930 ;;		_fputc
 10931 ;;		_strlen
 10932 ;; This function is called by:
 10933 ;;		_vfpfcnvrt
 10934 ;; This function uses a reentrant model
 10935 ;;
 10936                           
 10937                           	psect	text47
 10938  015188                     __ptext47:
 10939                           	opt callstack 0
 10940  015188                     _stoa:
 10941                           	opt callstack 0
 10942                           
 10943                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10944  015188  0E11               	movlw	17
 10945  01518A  26E1               	addwf	fsr1l,f,c
 10946  01518C  0E00               	movlw	0
 10947  01518E  22E2               	addwfc	fsr1h,f,c
 10948                           
 10949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10950                           
 10951                           ;incstack = 0
 10952  015190  EE20  F0EB         	lfsr	2,stoa@F1166
 10953                           
 10954                           ;stkvar	_nuls @ sp[(-17)+0]
 10955  015194  0E07               	movlw	7
 10956  015196  6E25               	movwf	btemp^0,c
 10957  015198  0EEF               	movlw	-17
 10958  01519A                     us1000999:
 10959  01519A  006F FF7B FFE3     	movff	postinc2,plusw1
 10960  0151A0  28E8               	incf	wreg,w,c
 10961  0151A2  2E25               	decfsz	btemp^0,f,c
 10962  0151A4  D7FA               	bra	us1000999
 10963                           
 10964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10965                           ;stkvar	_s @ sp[(-17)+-4]
 10966  0151A6  0EEB               	movlw	-21
 10967  0151A8  006F FF8C  F02F    	movff	plusw1,btemp+10
 10968  0151AE  0EEC               	movlw	-20
 10969  0151B0  006F FF8C  F030    	movff	plusw1,btemp+11
 10970                           
 10971                           ;stkvar	_cp @ sp[(-17)+11]
 10972  0151B6  0EFB               	movlw	-5
 10973  0151B8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10974  0151BE  0EFA               	movlw	-6
 10975  0151C0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 10976                           
 10977                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10978                           ;stkvar	_cp @ sp[(-17)+11]
 10979  0151C6  0EFA               	movlw	-6
 10980  0151C8  006F FF8C  F025    	movff	plusw1,btemp
 10981  0151CE  0EFB               	movlw	-5
 10982  0151D0  50E3               	movf	plusw1,w,c
 10983  0151D2  1025               	iorwf	btemp^0,w,c
 10984  0151D4  A4D8               	btfss	status,2,c
 10985  0151D6  D00E               	goto	l10439
 10986                           
 10987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10988                           ;stkvar	_nuls @ sp[(-17)+0]
 10989  0151D8  0EEF               	movlw	239
 10990  0151DA  24E1               	addwf	fsr1l,w,c
 10991  0151DC  6E2F               	movwf	(btemp+10)^0,c
 10992  0151DE  0EFF               	movlw	255
 10993  0151E0  20E2               	addwfc	fsr1h,w,c
 10994  0151E2  6E30               	movwf	(btemp+11)^0,c
 10995                           
 10996                           ;stkvar	_cp @ sp[(-17)+11]
 10997  0151E4  0EFB               	movlw	-5
 10998  0151E6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 10999  0151EC  0EFA               	movlw	-6
 11000  0151EE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11001  0151F4                     l10439:
 11002                           
 11003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 11004                           ;stkvar	_cp @ sp[(-17)+11]
 11005  0151F4  0EFA               	movlw	-6
 11006  0151F6  006F FF8F FFE6     	movff	plusw1,postinc1
 11007  0151FC  006F FF8F FFE6     	movff	plusw1,postinc1
 11008  015202  EC7A  F0BD         	call	_strlen	;wreg free
 11009                           
 11010                           ;stkvar	_l @ sp[(-17)+7]
 11011  015206  0EF6               	movlw	-10
 11012  015208  0060  F097  FFE3   	movff	btemp,plusw1
 11013  01520E  0EF7               	movlw	-9
 11014  015210  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11015                           
 11016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 11017                           ;stkvar	_p @ sp[(-17)+9]
 11018  015216  0EF8               	movlw	-8
 11019  015218  0060  F033  FFE3   	movff	_prec,plusw1
 11020  01521E  0EF9               	movlw	-7
 11021  015220  0060  F037  FFE3   	movff	_prec+1,plusw1
 11022                           
 11023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 11024                           ;stkvar	_p @ sp[(-17)+9]
 11025  015226  0EF9               	movlw	-7
 11026  015228  BEE3               	btfsc	plusw1,7,c
 11027  01522A  D023               	goto	l2118
 11028                           
 11029                           ;stkvar	_l @ sp[(-17)+7]
 11030                           ;stkvar	_p @ sp[(-17)+9]
 11031  01522C  50E1               	movf	fsr1l,w,c
 11032  01522E  0FF8               	addlw	-8
 11033  015230  6ED9               	movwf	fsr2l,c
 11034  015232  50E2               	movf	fsr1h,w,c
 11035  015234  6EDA               	movwf	fsr2h,c
 11036  015236  0EFF               	movlw	255
 11037  015238  22DA               	addwfc	fsr2h,f,c
 11038  01523A  0EF6               	movlw	-10
 11039  01523C  50E3               	movf	plusw1,w,c
 11040  01523E  5CDE               	subwf	postinc2,w,c
 11041  015240  50DE               	movf	postinc2,w,c
 11042  015242  0A80               	xorlw	128
 11043  015244  6E25               	movwf	btemp^0,c
 11044  015246  0EF7               	movlw	-9
 11045  015248  50E3               	movf	plusw1,w,c
 11046  01524A  0A80               	xorlw	128
 11047  01524C  5825               	subwfb	btemp^0,w,c
 11048  01524E  B0D8               	btfsc	status,0,c
 11049  015250  D010               	goto	l2118
 11050                           
 11051                           ;stkvar	_p @ sp[(-17)+9]
 11052                           ;stkvar	_l @ sp[(-17)+7]
 11053  015252  0EF8               	movlw	-8
 11054  015254  006F FF8C  F025    	movff	plusw1,btemp
 11055  01525A  0EF6               	movlw	-10
 11056  01525C  0060  F097  FFE3   	movff	btemp,plusw1
 11057  015262  0EF9               	movlw	-7
 11058  015264  006F FF8C  F025    	movff	plusw1,btemp
 11059  01526A  0EF7               	movlw	-9
 11060  01526C  0060  F097  FFE3   	movff	btemp,plusw1
 11061  015272                     l2118:
 11062                           
 11063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 11064                           ;stkvar	_l @ sp[(-17)+7]
 11065                           ;stkvar	_p @ sp[(-17)+9]
 11066  015272  0EF6               	movlw	-10
 11067  015274  006F FF8C  F025    	movff	plusw1,btemp
 11068  01527A  0EF8               	movlw	-8
 11069  01527C  0060  F097  FFE3   	movff	btemp,plusw1
 11070  015282  0EF7               	movlw	-9
 11071  015284  006F FF8C  F025    	movff	plusw1,btemp
 11072  01528A  0EF9               	movlw	-7
 11073  01528C  0060  F097  FFE3   	movff	btemp,plusw1
 11074                           
 11075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 11076                           ;stkvar	_w @ sp[(-17)+13]
 11077  015292  0EFC               	movlw	-4
 11078  015294  0060  F02B  FFE3   	movff	_width,plusw1
 11079  01529A  0EFD               	movlw	-3
 11080  01529C  0060  F02F  FFE3   	movff	_width+1,plusw1
 11081                           
 11082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 11083  0152A2  A00E               	btfss	_flags^0,0,c
 11084  0152A4  D01F               	goto	l10459
 11085  0152A6  D031               	goto	u10050
 11086  0152A8                     l10455:
 11087                           
 11088                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 11089                           ;stkvar	_fp @ sp[(-17)+-2]
 11090  0152A8  0EED               	movlw	-19
 11091  0152AA  006F FF8F FFE6     	movff	plusw1,postinc1
 11092  0152B0  006F FF8F FFE6     	movff	plusw1,postinc1
 11093  0152B6  0E20               	movlw	32
 11094  0152B8  6EE6               	movwf	postinc1,c
 11095  0152BA  0E00               	movlw	0
 11096  0152BC  6EE6               	movwf	postinc1,c
 11097  0152BE  ECA3  F0B5         	call	_fputc	;wreg free
 11098                           
 11099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 11100                           ;stkvar	_l @ sp[(-17)+7]
 11101  0152C2  0EF6               	movlw	-10
 11102  0152C4  50E3               	movf	plusw1,w,c
 11103  0152C6  0F01               	addlw	1
 11104  0152C8  6E25               	movwf	btemp^0,c
 11105  0152CA  0EF6               	movlw	-10
 11106  0152CC  0060  F097  FFE3   	movff	btemp,plusw1
 11107  0152D2  6A25               	clrf	btemp^0,c
 11108  0152D4  0EF7               	movlw	-9
 11109  0152D6  50E3               	movf	plusw1,w,c
 11110  0152D8  2025               	addwfc	btemp^0,w,c
 11111  0152DA  6E25               	movwf	btemp^0,c
 11112  0152DC  0EF7               	movlw	-9
 11113  0152DE  0060  F097  FFE3   	movff	btemp,plusw1
 11114  0152E4                     l10459:
 11115                           
 11116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 11117                           ;stkvar	_w @ sp[(-17)+13]
 11118                           ;stkvar	_l @ sp[(-17)+7]
 11119  0152E4  50E1               	movf	fsr1l,w,c
 11120  0152E6  0FF6               	addlw	-10
 11121  0152E8  6ED9               	movwf	fsr2l,c
 11122  0152EA  50E2               	movf	fsr1h,w,c
 11123  0152EC  6EDA               	movwf	fsr2h,c
 11124  0152EE  0EFF               	movlw	255
 11125  0152F0  22DA               	addwfc	fsr2h,f,c
 11126  0152F2  0EFC               	movlw	-4
 11127  0152F4  50E3               	movf	plusw1,w,c
 11128  0152F6  5CDE               	subwf	postinc2,w,c
 11129  0152F8  50DE               	movf	postinc2,w,c
 11130  0152FA  0A80               	xorlw	128
 11131  0152FC  6E25               	movwf	btemp^0,c
 11132  0152FE  0EFD               	movlw	-3
 11133  015300  50E3               	movf	plusw1,w,c
 11134  015302  0A80               	xorlw	128
 11135  015304  5825               	subwfb	btemp^0,w,c
 11136  015306  A0D8               	btfss	status,0,c
 11137  015308  D7CF               	goto	l10455
 11138  01530A                     u10050:
 11139                           
 11140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 11141                           ;stkvar	_i @ sp[(-17)+15]
 11142  01530A  0EFE               	movlw	-2
 11143  01530C  6AE3               	clrf	plusw1,c
 11144  01530E  0EFF               	movlw	-1
 11145  015310  6AE3               	clrf	plusw1,c
 11146                           
 11147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11148  015312  D045               	goto	l10469
 11149  015314                     l10463:
 11150                           
 11151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 11152                           ;stkvar	_fp @ sp[(-17)+-2]
 11153  015314  0EED               	movlw	-19
 11154  015316  006F FF8F FFE6     	movff	plusw1,postinc1
 11155  01531C  006F FF8F FFE6     	movff	plusw1,postinc1
 11156                           
 11157                           ;stkvar	_cp @ sp[(-19)+11]
 11158  015322  0EF8               	movlw	-8
 11159  015324  006F FF8F FFF6     	movff	plusw1,tblptrl
 11160  01532A  0EF9               	movlw	-7
 11161  01532C  006F FF8F FFF7     	movff	plusw1,tblptrh
 11162  015332  0E00               	movlw	low (__mediumconst shr (0+16))
 11163  015334  6EF8               	movwf	tblptru,c
 11164  015336  0E1F               	movlw	(high __ramtop+-1)
 11165  015338  64F7               	cpfsgt	tblptrh,c
 11166  01533A  D003               	bra	u10067
 11167  01533C  0008               	tblrd		*
 11168  01533E  50F5               	movf	tablat,w,c
 11169  015340  D007               	bra	u10060
 11170  015342                     u10067:
 11171  015342  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11172  015348  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11173  01534E  50EF               	movf	indf0,w,c
 11174  015350                     u10060:
 11175  015350  6EE6               	movwf	postinc1,c
 11176  015352  0E00               	movlw	0
 11177  015354  6EE6               	movwf	postinc1,c
 11178  015356  ECA3  F0B5         	call	_fputc	;wreg free
 11179                           
 11180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11181                           ;stkvar	_cp @ sp[(-17)+11]
 11182  01535A  0EFA               	movlw	-6
 11183  01535C  50E3               	movf	plusw1,w,c
 11184  01535E  0F01               	addlw	1
 11185  015360  6E25               	movwf	btemp^0,c
 11186  015362  0EFA               	movlw	-6
 11187  015364  0060  F097  FFE3   	movff	btemp,plusw1
 11188  01536A  6A25               	clrf	btemp^0,c
 11189  01536C  0EFB               	movlw	-5
 11190  01536E  50E3               	movf	plusw1,w,c
 11191  015370  2025               	addwfc	btemp^0,w,c
 11192  015372  6E25               	movwf	btemp^0,c
 11193  015374  0EFB               	movlw	-5
 11194  015376  0060  F097  FFE3   	movff	btemp,plusw1
 11195                           
 11196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11197                           ;stkvar	_i @ sp[(-17)+15]
 11198  01537C  0EFE               	movlw	-2
 11199  01537E  50E3               	movf	plusw1,w,c
 11200  015380  0F01               	addlw	1
 11201  015382  6E25               	movwf	btemp^0,c
 11202  015384  0EFE               	movlw	-2
 11203  015386  0060  F097  FFE3   	movff	btemp,plusw1
 11204  01538C  6A25               	clrf	btemp^0,c
 11205  01538E  0EFF               	movlw	-1
 11206  015390  50E3               	movf	plusw1,w,c
 11207  015392  2025               	addwfc	btemp^0,w,c
 11208  015394  6E25               	movwf	btemp^0,c
 11209  015396  0EFF               	movlw	-1
 11210  015398  0060  F097  FFE3   	movff	btemp,plusw1
 11211  01539E                     l10469:
 11212                           
 11213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11214                           ;stkvar	_p @ sp[(-17)+9]
 11215                           ;stkvar	_i @ sp[(-17)+15]
 11216  01539E  50E1               	movf	fsr1l,w,c
 11217  0153A0  0FFE               	addlw	-2
 11218  0153A2  6ED9               	movwf	fsr2l,c
 11219  0153A4  50E2               	movf	fsr1h,w,c
 11220  0153A6  6EDA               	movwf	fsr2h,c
 11221  0153A8  0EFF               	movlw	255
 11222  0153AA  22DA               	addwfc	fsr2h,f,c
 11223  0153AC  0EF8               	movlw	-8
 11224  0153AE  50E3               	movf	plusw1,w,c
 11225  0153B0  5CDE               	subwf	postinc2,w,c
 11226  0153B2  50DE               	movf	postinc2,w,c
 11227  0153B4  0A80               	xorlw	128
 11228  0153B6  6E25               	movwf	btemp^0,c
 11229  0153B8  0EF9               	movlw	-7
 11230  0153BA  50E3               	movf	plusw1,w,c
 11231  0153BC  0A80               	xorlw	128
 11232  0153BE  5825               	subwfb	btemp^0,w,c
 11233  0153C0  A0D8               	btfss	status,0,c
 11234  0153C2  D7A8               	goto	l10463
 11235                           
 11236                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11237  0153C4  B00E               	btfsc	_flags^0,0,c
 11238  0153C6  D01F               	goto	l10477
 11239  0153C8  D031               	goto	u10090
 11240  0153CA                     l10473:
 11241                           
 11242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11243                           ;stkvar	_fp @ sp[(-17)+-2]
 11244  0153CA  0EED               	movlw	-19
 11245  0153CC  006F FF8F FFE6     	movff	plusw1,postinc1
 11246  0153D2  006F FF8F FFE6     	movff	plusw1,postinc1
 11247  0153D8  0E20               	movlw	32
 11248  0153DA  6EE6               	movwf	postinc1,c
 11249  0153DC  0E00               	movlw	0
 11250  0153DE  6EE6               	movwf	postinc1,c
 11251  0153E0  ECA3  F0B5         	call	_fputc	;wreg free
 11252                           
 11253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11254                           ;stkvar	_l @ sp[(-17)+7]
 11255  0153E4  0EF6               	movlw	-10
 11256  0153E6  50E3               	movf	plusw1,w,c
 11257  0153E8  0F01               	addlw	1
 11258  0153EA  6E25               	movwf	btemp^0,c
 11259  0153EC  0EF6               	movlw	-10
 11260  0153EE  0060  F097  FFE3   	movff	btemp,plusw1
 11261  0153F4  6A25               	clrf	btemp^0,c
 11262  0153F6  0EF7               	movlw	-9
 11263  0153F8  50E3               	movf	plusw1,w,c
 11264  0153FA  2025               	addwfc	btemp^0,w,c
 11265  0153FC  6E25               	movwf	btemp^0,c
 11266  0153FE  0EF7               	movlw	-9
 11267  015400  0060  F097  FFE3   	movff	btemp,plusw1
 11268  015406                     l10477:
 11269                           
 11270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11271                           ;stkvar	_w @ sp[(-17)+13]
 11272                           ;stkvar	_l @ sp[(-17)+7]
 11273  015406  50E1               	movf	fsr1l,w,c
 11274  015408  0FF6               	addlw	-10
 11275  01540A  6ED9               	movwf	fsr2l,c
 11276  01540C  50E2               	movf	fsr1h,w,c
 11277  01540E  6EDA               	movwf	fsr2h,c
 11278  015410  0EFF               	movlw	255
 11279  015412  22DA               	addwfc	fsr2h,f,c
 11280  015414  0EFC               	movlw	-4
 11281  015416  50E3               	movf	plusw1,w,c
 11282  015418  5CDE               	subwf	postinc2,w,c
 11283  01541A  50DE               	movf	postinc2,w,c
 11284  01541C  0A80               	xorlw	128
 11285  01541E  6E25               	movwf	btemp^0,c
 11286  015420  0EFD               	movlw	-3
 11287  015422  50E3               	movf	plusw1,w,c
 11288  015424  0A80               	xorlw	128
 11289  015426  5825               	subwfb	btemp^0,w,c
 11290  015428  A0D8               	btfss	status,0,c
 11291  01542A  D7CF               	goto	l10473
 11292  01542C                     u10090:
 11293                           
 11294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 11295                           ;stkvar	_l @ sp[(-17)+7]
 11296  01542C  0EF6               	movlw	-10
 11297  01542E  006F FF8C  F025    	movff	plusw1,btemp
 11298  015434  0EF7               	movlw	-9
 11299  015436  006F FF8C  F026    	movff	plusw1,btemp+1
 11300                           
 11301                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11302  01543C  0EEB               	movlw	235
 11303  01543E  26E1               	addwf	fsr1l,f,c
 11304  015440  0EFF               	movlw	255
 11305  015442  22E2               	addwfc	fsr1h,f,c
 11306  015444  0012               	return		;funcret
 11307  015446                     __end_of_stoa:
 11308                           	opt callstack 0
 11309                           
 11310 ;; *************** function _efgtoa *****************
 11311 ;; Defined at:
 11312 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11313 ;; Parameters:    Size  Location     Type
 11314 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11315 ;;		 -> f(6), NULL(0), 
 11316 ;;  f               4  [STACK] PTR struct _IO_FILE
 11317 ;;  c               1  [STACK] unsigned char 
 11318 ;; Auto vars:     Size  Location     Type
 11319 ;;  u               4  [STACK] unsigned char 
 11320 ;;  g               4  [STACK] unsigned char 
 11321 ;;  l               4  [STACK] unsigned char 
 11322 ;;  h               4  [STACK] unsigned char 
 11323 ;;  ou              4  [STACK] unsigned char 
 11324 ;;  n               2  [STACK] int 
 11325 ;;  e               2  [STACK] int 
 11326 ;;  i               2  [STACK] int 
 11327 ;;  w               2  [STACK] int 
 11328 ;;  p               2  [STACK] int 
 11329 ;;  sign            2  [STACK] int 
 11330 ;;  d               2  [STACK] int 
 11331 ;;  ne              2  [STACK] int 
 11332 ;;  m               2  [STACK] int 
 11333 ;;  pp              2  [STACK] int 
 11334 ;;  t               2  [STACK] int 
 11335 ;;  mode            1  [STACK] unsigned char 
 11336 ;;  nmode           1  [STACK] unsigned char 
 11337 ;; Return value:  Size  Location     Type
 11338 ;;                  2  [STACK] int 
 11339 ;; Registers used:
 11340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11341 ;; Tracked objects:
 11342 ;;		On entry : 0/0
 11343 ;;		On exit  : 0/0
 11344 ;;		Unchanged: 0/0
 11345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11350 ;;Total ram usage:        0 bytes
 11351 ;; Hardware stack levels used:    1
 11352 ;; Hardware stack levels required when called:   12
 11353 ;; This function calls:
 11354 ;;		___awdiv
 11355 ;;		___awmod
 11356 ;;		___fladd
 11357 ;;		___fldiv
 11358 ;;		___fleq
 11359 ;;		___flge
 11360 ;;		___flmul
 11361 ;;		___flneg
 11362 ;;		___flsub
 11363 ;;		___fltol
 11364 ;;		___fpclassifyf
 11365 ;;		_floorf
 11366 ;;		_isupper
 11367 ;;		_pad
 11368 ;;		_strcpy
 11369 ;;		_tolower
 11370 ;; This function is called by:
 11371 ;;		_vfpfcnvrt
 11372 ;; This function uses a reentrant model
 11373 ;;
 11374                           
 11375                           	psect	text48
 11376  010000                     __ptext48:
 11377                           	opt callstack 0
 11378  010000                     _efgtoa:
 11379                           	opt callstack 0
 11380                           
 11381                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11382  010000  0E38               	movlw	56
 11383  010002  26E1               	addwf	fsr1l,f,c
 11384  010004  0E00               	movlw	0
 11385  010006  22E2               	addwfc	fsr1h,f,c
 11386                           
 11387                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11388                           ;stkvar	_sign @ sp[(-56)+42]
 11389                           
 11390                           ;incstack = 0
 11391  010008  0EF2               	movlw	-14
 11392  01000A  6AE3               	clrf	plusw1,c
 11393  01000C  0EF3               	movlw	-13
 11394  01000E  6AE3               	clrf	plusw1,c
 11395                           
 11396                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11397                           ;stkvar	_f @ sp[(-56)+-6]
 11398  010010  0EC2               	movlw	-62
 11399  010012  006F FF8C  F02D    	movff	plusw1,btemp+8
 11400  010018  0EC3               	movlw	-61
 11401  01001A  006F FF8C  F02E    	movff	plusw1,btemp+9
 11402  010020  0EC4               	movlw	-60
 11403  010022  006F FF8C  F02F    	movff	plusw1,btemp+10
 11404  010028  0EC5               	movlw	-59
 11405  01002A  006F FF8C  F030    	movff	plusw1,btemp+11
 11406                           
 11407                           ;stkvar	_g @ sp[(-56)+16]
 11408  010030  0ED8               	movlw	-40
 11409  010032  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 11410  010038  0ED9               	movlw	-39
 11411  01003A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 11412  010040  0EDA               	movlw	-38
 11413  010042  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11414  010048  0EDB               	movlw	-37
 11415  01004A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11416                           
 11417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11418                           ;stkvar	_g @ sp[(-56)+16]
 11419  010050  0EDB               	movlw	-37
 11420  010052  AEE3               	btfss	plusw1,7,c
 11421  010054  D02B               	goto	l10137
 11422                           
 11423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11424  010056  0E01               	movlw	1
 11425  010058  6E2F               	movwf	(btemp+10)^0,c
 11426  01005A  0E00               	movlw	0
 11427  01005C  6E30               	movwf	(btemp+11)^0,c
 11428                           
 11429                           ;stkvar	_sign @ sp[(-56)+42]
 11430  01005E  0EF2               	movlw	-14
 11431  010060  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11432  010066  0EF3               	movlw	-13
 11433  010068  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11434                           
 11435                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11436                           ;stkvar	_g @ sp[(-56)+16]
 11437  01006E  0ED8               	movlw	-40
 11438  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11439  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11440  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11441  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11442  010088  ECE5  F0C2         	call	___flneg	;wreg free
 11443                           
 11444                           ;stkvar	_g @ sp[(-56)+16]
 11445  01008C  0ED8               	movlw	-40
 11446  01008E  0060  F097  FFE3   	movff	btemp,plusw1
 11447  010094  0ED9               	movlw	-39
 11448  010096  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11449  01009C  0EDA               	movlw	-38
 11450  01009E  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11451  0100A4  0EDB               	movlw	-37
 11452  0100A6  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11453  0100AC                     l10137:
 11454                           
 11455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11456                           ;stkvar	_n @ sp[(-56)+32]
 11457  0100AC  0EE8               	movlw	-24
 11458  0100AE  6AE3               	clrf	plusw1,c
 11459  0100B0  0EE9               	movlw	-23
 11460  0100B2  6AE3               	clrf	plusw1,c
 11461                           
 11462                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11463                           ;stkvar	_w @ sp[(-56)+38]
 11464  0100B4  0EEE               	movlw	-18
 11465  0100B6  0060  F02B  FFE3   	movff	_width,plusw1
 11466  0100BC  0EEF               	movlw	-17
 11467  0100BE  0060  F02F  FFE3   	movff	_width+1,plusw1
 11468                           
 11469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11470                           ;stkvar	_sign @ sp[(-56)+42]
 11471  0100C4  0EF2               	movlw	-14
 11472  0100C6  006F FF8C  F025    	movff	plusw1,btemp
 11473  0100CC  0EF3               	movlw	-13
 11474  0100CE  50E3               	movf	plusw1,w,c
 11475  0100D0  1025               	iorwf	btemp^0,w,c
 11476  0100D2  A4D8               	btfss	status,2,c
 11477  0100D4  D002               	goto	u9500
 11478  0100D6  A40E               	btfss	_flags^0,2,c
 11479  0100D8  D036               	goto	l10157
 11480  0100DA                     u9500:
 11481                           
 11482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11483                           ;stkvar	_sign @ sp[(-56)+42]
 11484  0100DA  0EF2               	movlw	-14
 11485  0100DC  006F FF8C  F025    	movff	plusw1,btemp
 11486  0100E2  0EF3               	movlw	-13
 11487  0100E4  50E3               	movf	plusw1,w,c
 11488  0100E6  1025               	iorwf	btemp^0,w,c
 11489  0100E8  A4D8               	btfss	status,2,c
 11490  0100EA  D002               	goto	l10149
 11491  0100EC  0E2B               	movlw	43
 11492  0100EE  D001               	goto	L9
 11493  0100F0                     l10149:
 11494  0100F0  0E2D               	movlw	45
 11495  0100F2                     L9:
 11496  0100F2  6E2F               	movwf	(btemp+10)^0,c
 11497  0100F4  0E00               	movlw	0
 11498  0100F6  6E30               	movwf	(btemp+11)^0,c
 11499                           
 11500                           ;stkvar	_efgtoa$4978 @ sp[(-56)+10]
 11501  0100F8  0ED2               	movlw	-46
 11502  0100FA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11503  010100  0ED3               	movlw	-45
 11504  010102  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11505                           
 11506                           ;stkvar	_efgtoa$4978 @ sp[(-56)+10]
 11507  010108  0ED2               	movlw	-46
 11508  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 11509                           
 11510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11511                           ;stkvar	_n @ sp[(-56)+32]
 11512  010110  0EE8               	movlw	-24
 11513  010112  50E3               	movf	plusw1,w,c
 11514  010114  0F01               	addlw	1
 11515  010116  6E25               	movwf	btemp^0,c
 11516  010118  0EE8               	movlw	-24
 11517  01011A  0060  F097  FFE3   	movff	btemp,plusw1
 11518  010120  6A25               	clrf	btemp^0,c
 11519  010122  0EE9               	movlw	-23
 11520  010124  50E3               	movf	plusw1,w,c
 11521  010126  2025               	addwfc	btemp^0,w,c
 11522  010128  6E25               	movwf	btemp^0,c
 11523  01012A  0EE9               	movlw	-23
 11524  01012C  0060  F097  FFE3   	movff	btemp,plusw1
 11525                           
 11526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11527                           ;stkvar	_w @ sp[(-56)+38]
 11528  010132  50E1               	movf	fsr1l,w,c
 11529  010134  0FEE               	addlw	-18
 11530  010136  6ED9               	movwf	fsr2l,c
 11531  010138  50E2               	movf	fsr1h,w,c
 11532  01013A  6EDA               	movwf	fsr2h,c
 11533  01013C  0EFF               	movlw	255
 11534  01013E  22DA               	addwfc	fsr2h,f,c
 11535  010140  06DE               	decf	postinc2,f,c
 11536  010142  0E00               	movlw	0
 11537  010144  5ADD               	subwfb	postdec2,f,c
 11538  010146                     l10157:
 11539                           
 11540                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11541                           ;stkvar	_g @ sp[(-56)+16]
 11542  010146  0ED8               	movlw	-40
 11543  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11544  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11545  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11546  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11547  010160  EC8C  F0B1         	call	___fpclassifyf	;wreg free
 11548  010164  0425               	decf	btemp^0,w,c
 11549  010166  1026               	iorwf	(btemp+1)^0,w,c
 11550  010168  A4D8               	btfss	status,2,c
 11551  01016A  D076               	goto	l10175
 11552  01016C  0EBF               	movlw	191
 11553  01016E  6E2F               	movwf	(btemp+10)^0,c
 11554  010170  0EFF               	movlw	255
 11555  010172  6E30               	movwf	(btemp+11)^0,c
 11556                           
 11557                           ;stkvar	_c @ sp[(-56)+-7]
 11558  010174  0EC1               	movlw	-63
 11559  010176  50E3               	movf	plusw1,w,c
 11560  010178  6E2D               	movwf	(btemp+8)^0,c
 11561  01017A  6A2E               	clrf	(btemp+9)^0,c
 11562  01017C  502F               	movf	(btemp+10)^0,w,c
 11563  01017E  262D               	addwf	(btemp+8)^0,f,c
 11564  010180  5030               	movf	(btemp+11)^0,w,c
 11565  010182  222E               	addwfc	(btemp+9)^0,f,c
 11566  010184  502E               	movf	(btemp+9)^0,w,c
 11567  010186  E106               	bnz	u9530
 11568  010188  0E1A               	movlw	26
 11569  01018A  5C2D               	subwf	(btemp+8)^0,w,c
 11570  01018C  B0D8               	btfsc	status,0,c
 11571  01018E  D002               	goto	u9530
 11572  010190  0E01               	movlw	1
 11573  010192  D001               	goto	u9540
 11574  010194                     u9530:
 11575  010194  0E00               	movlw	0
 11576  010196                     u9540:
 11577  010196  6E2F               	movwf	(btemp+10)^0,c
 11578  010198  6A30               	clrf	(btemp+11)^0,c
 11579                           
 11580                           ;stkvar	_efgtoa$4979 @ sp[(-56)+8]
 11581  01019A  0ED0               	movlw	-48
 11582  01019C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11583  0101A2  0ED1               	movlw	-47
 11584  0101A4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11585                           
 11586                           ;stkvar	_efgtoa$4979 @ sp[(-56)+8]
 11587  0101AA  0ED0               	movlw	-48
 11588  0101AC  006F FF8C  F025    	movff	plusw1,btemp
 11589  0101B2  0ED1               	movlw	-47
 11590  0101B4  50E3               	movf	plusw1,w,c
 11591  0101B6  1025               	iorwf	btemp^0,w,c
 11592  0101B8  B4D8               	btfsc	status,2,c
 11593  0101BA  D017               	goto	l10167
 11594                           
 11595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11596  0101BC  0EE5               	movlw	low STR_46
 11597  0101BE  6EE6               	movwf	postinc1,c
 11598  0101C0  0EFF               	movlw	high STR_46
 11599  0101C2  6EE6               	movwf	postinc1,c
 11600                           
 11601                           ;stkvar	_n @ sp[(-58)+32]
 11602  0101C4  0E94               	movlw	low _dbuf
 11603  0101C6  6E2F               	movwf	(btemp+10)^0,c
 11604  0101C8  0E03               	movlw	high _dbuf
 11605  0101CA  6E30               	movwf	(btemp+11)^0,c
 11606  0101CC  0EE6               	movlw	-26
 11607  0101CE  50E3               	movf	plusw1,w,c
 11608  0101D0  262F               	addwf	(btemp+10)^0,f,c
 11609  0101D2  0EE7               	movlw	-25
 11610  0101D4  50E3               	movf	plusw1,w,c
 11611  0101D6  2230               	addwfc	(btemp+11)^0,f,c
 11612  0101D8  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11613  0101DE  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11614  0101E4  ECCC  F0B9         	call	_strcpy	;wreg free
 11615                           
 11616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11617  0101E8  D016               	goto	l10169
 11618  0101EA                     l10167:
 11619                           
 11620                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11621  0101EA  0EED               	movlw	low STR_47
 11622  0101EC  6EE6               	movwf	postinc1,c
 11623  0101EE  0EFF               	movlw	high STR_47
 11624  0101F0  6EE6               	movwf	postinc1,c
 11625                           
 11626                           ;stkvar	_n @ sp[(-58)+32]
 11627  0101F2  0E94               	movlw	low _dbuf
 11628  0101F4  6E2F               	movwf	(btemp+10)^0,c
 11629  0101F6  0E03               	movlw	high _dbuf
 11630  0101F8  6E30               	movwf	(btemp+11)^0,c
 11631  0101FA  0EE6               	movlw	-26
 11632  0101FC  50E3               	movf	plusw1,w,c
 11633  0101FE  262F               	addwf	(btemp+10)^0,f,c
 11634  010200  0EE7               	movlw	-25
 11635  010202  50E3               	movf	plusw1,w,c
 11636  010204  2230               	addwfc	(btemp+11)^0,f,c
 11637  010206  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11638  01020C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11639  010212  ECCC  F0B9         	call	_strcpy	;wreg free
 11640  010216                     l10169:
 11641                           
 11642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11643                           ;stkvar	_w @ sp[(-56)+38]
 11644  010216  50E1               	movf	fsr1l,w,c
 11645  010218  0FEE               	addlw	-18
 11646  01021A  6ED9               	movwf	fsr2l,c
 11647  01021C  50E2               	movf	fsr1h,w,c
 11648  01021E  6EDA               	movwf	fsr2h,c
 11649  010220  0EFF               	movlw	255
 11650  010222  22DA               	addwfc	fsr2h,f,c
 11651  010224  0EFD               	movlw	253
 11652  010226  26DE               	addwf	postinc2,f,c
 11653  010228  0EFF               	movlw	255
 11654  01022A  22DD               	addwfc	postdec2,f,c
 11655  01022C                     l10171:
 11656                           
 11657                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11658                           ;stkvar	_w @ sp[(-56)+38]
 11659  01022C  0EEE               	movlw	-18
 11660  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11661  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11662  01023A  0E94               	movlw	low _dbuf
 11663  01023C  6EE6               	movwf	postinc1,c
 11664  01023E  0E03               	movlw	high _dbuf
 11665  010240  6EE6               	movwf	postinc1,c
 11666                           
 11667                           ;stkvar	_fp @ sp[(-60)+-2]
 11668  010242  0EC2               	movlw	-62
 11669  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11670  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11671  010250  ECC1  F0B6         	call	_pad	;wreg free
 11672  010254  EF1D  F089         	goto	l2036
 11673  010258                     l10175:
 11674                           
 11675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11676                           ;stkvar	_g @ sp[(-56)+16]
 11677  010258  0ED8               	movlw	-40
 11678  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11679  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11680  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11681  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11682  010272  EC8C  F0B1         	call	___fpclassifyf	;wreg free
 11683  010276  5025               	movf	btemp^0,w,c
 11684  010278  1026               	iorwf	(btemp+1)^0,w,c
 11685  01027A  A4D8               	btfss	status,2,c
 11686  01027C  D056               	goto	l10193
 11687  01027E  0EBF               	movlw	191
 11688  010280  6E2F               	movwf	(btemp+10)^0,c
 11689  010282  0EFF               	movlw	255
 11690  010284  6E30               	movwf	(btemp+11)^0,c
 11691                           
 11692                           ;stkvar	_c @ sp[(-56)+-7]
 11693  010286  0EC1               	movlw	-63
 11694  010288  50E3               	movf	plusw1,w,c
 11695  01028A  6E2D               	movwf	(btemp+8)^0,c
 11696  01028C  6A2E               	clrf	(btemp+9)^0,c
 11697  01028E  502F               	movf	(btemp+10)^0,w,c
 11698  010290  262D               	addwf	(btemp+8)^0,f,c
 11699  010292  5030               	movf	(btemp+11)^0,w,c
 11700  010294  222E               	addwfc	(btemp+9)^0,f,c
 11701  010296  502E               	movf	(btemp+9)^0,w,c
 11702  010298  E106               	bnz	u9570
 11703  01029A  0E1A               	movlw	26
 11704  01029C  5C2D               	subwf	(btemp+8)^0,w,c
 11705  01029E  B0D8               	btfsc	status,0,c
 11706  0102A0  D002               	goto	u9570
 11707  0102A2  0E01               	movlw	1
 11708  0102A4  D001               	goto	u9580
 11709  0102A6                     u9570:
 11710  0102A6  0E00               	movlw	0
 11711  0102A8                     u9580:
 11712  0102A8  6E2F               	movwf	(btemp+10)^0,c
 11713  0102AA  6A30               	clrf	(btemp+11)^0,c
 11714                           
 11715                           ;stkvar	_efgtoa$4983 @ sp[(-56)+6]
 11716  0102AC  0ECE               	movlw	-50
 11717  0102AE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11718  0102B4  0ECF               	movlw	-49
 11719  0102B6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11720                           
 11721                           ;stkvar	_efgtoa$4983 @ sp[(-56)+6]
 11722  0102BC  0ECE               	movlw	-50
 11723  0102BE  006F FF8C  F025    	movff	plusw1,btemp
 11724  0102C4  0ECF               	movlw	-49
 11725  0102C6  50E3               	movf	plusw1,w,c
 11726  0102C8  1025               	iorwf	btemp^0,w,c
 11727  0102CA  B4D8               	btfsc	status,2,c
 11728  0102CC  D017               	goto	l10185
 11729                           
 11730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11731  0102CE  0EE9               	movlw	low STR_50
 11732  0102D0  6EE6               	movwf	postinc1,c
 11733  0102D2  0EFF               	movlw	high STR_50
 11734  0102D4  6EE6               	movwf	postinc1,c
 11735                           
 11736                           ;stkvar	_n @ sp[(-58)+32]
 11737  0102D6  0E94               	movlw	low _dbuf
 11738  0102D8  6E2F               	movwf	(btemp+10)^0,c
 11739  0102DA  0E03               	movlw	high _dbuf
 11740  0102DC  6E30               	movwf	(btemp+11)^0,c
 11741  0102DE  0EE6               	movlw	-26
 11742  0102E0  50E3               	movf	plusw1,w,c
 11743  0102E2  262F               	addwf	(btemp+10)^0,f,c
 11744  0102E4  0EE7               	movlw	-25
 11745  0102E6  50E3               	movf	plusw1,w,c
 11746  0102E8  2230               	addwfc	(btemp+11)^0,f,c
 11747  0102EA  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11748  0102F0  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11749  0102F6  ECCC  F0B9         	call	_strcpy	;wreg free
 11750                           
 11751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11752  0102FA  D78D               	goto	l10169
 11753  0102FC                     l10185:
 11754                           
 11755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11756  0102FC  0EF1               	movlw	low STR_51
 11757  0102FE  6EE6               	movwf	postinc1,c
 11758  010300  0EFF               	movlw	high STR_51
 11759  010302  6EE6               	movwf	postinc1,c
 11760                           
 11761                           ;stkvar	_n @ sp[(-58)+32]
 11762  010304  0E94               	movlw	low _dbuf
 11763  010306  6E2F               	movwf	(btemp+10)^0,c
 11764  010308  0E03               	movlw	high _dbuf
 11765  01030A  6E30               	movwf	(btemp+11)^0,c
 11766  01030C  0EE6               	movlw	-26
 11767  01030E  50E3               	movf	plusw1,w,c
 11768  010310  262F               	addwf	(btemp+10)^0,f,c
 11769  010312  0EE7               	movlw	-25
 11770  010314  50E3               	movf	plusw1,w,c
 11771  010316  2230               	addwfc	(btemp+11)^0,f,c
 11772  010318  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 11773  01031E  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 11774  010324  ECCC  F0B9         	call	_strcpy	;wreg free
 11775  010328  D776               	goto	l10169
 11776  01032A                     l10193:
 11777                           
 11778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11779  01032A  0E00               	movlw	0
 11780  01032C  6E2D               	movwf	(btemp+8)^0,c
 11781  01032E  0E00               	movlw	0
 11782  010330  6E2E               	movwf	(btemp+9)^0,c
 11783  010332  0E80               	movlw	128
 11784  010334  6E2F               	movwf	(btemp+10)^0,c
 11785  010336  0E3F               	movlw	63
 11786  010338  6E30               	movwf	(btemp+11)^0,c
 11787                           
 11788                           ;stkvar	_u @ sp[(-56)+12]
 11789  01033A  0ED4               	movlw	-44
 11790  01033C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 11791  010342  0ED5               	movlw	-43
 11792  010344  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 11793  01034A  0ED6               	movlw	-42
 11794  01034C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 11795  010352  0ED7               	movlw	-41
 11796  010354  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 11797                           
 11798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11799                           ;stkvar	_e @ sp[(-56)+34]
 11800  01035A  0EEA               	movlw	-22
 11801  01035C  6AE3               	clrf	plusw1,c
 11802  01035E  0EEB               	movlw	-21
 11803  010360  6AE3               	clrf	plusw1,c
 11804                           
 11805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11806  010362  0E00               	movlw	0
 11807  010364  6EE6               	movwf	postinc1,c
 11808  010366  0E00               	movlw	0
 11809  010368  6EE6               	movwf	postinc1,c
 11810  01036A  0E00               	movlw	0
 11811  01036C  6EE6               	movwf	postinc1,c
 11812  01036E  0E00               	movlw	0
 11813  010370  6EE6               	movwf	postinc1,c
 11814                           
 11815                           ;stkvar	_g @ sp[(-60)+16]
 11816  010372  0ED4               	movlw	-44
 11817  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11818  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11819  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11820  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11821  01038C  EC07  F0BB         	call	___fleq	;wreg free
 11822  010390  A025               	btfss	btemp& (0+255),0,c
 11823  010392  D039               	goto	l10205
 11824  010394  D0BC               	goto	u9620
 11825  010396                     l10201:
 11826                           
 11827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11828  010396  0E00               	movlw	0
 11829  010398  6EE6               	movwf	postinc1,c
 11830  01039A  0E00               	movlw	0
 11831  01039C  6EE6               	movwf	postinc1,c
 11832  01039E  0E20               	movlw	32
 11833  0103A0  6EE6               	movwf	postinc1,c
 11834  0103A2  0E41               	movlw	65
 11835  0103A4  6EE6               	movwf	postinc1,c
 11836                           
 11837                           ;stkvar	_u @ sp[(-60)+12]
 11838  0103A6  0ED0               	movlw	-48
 11839  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11840  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11841  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11842  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11843  0103C0  EC08  F093         	call	___flmul	;wreg free
 11844                           
 11845                           ;stkvar	_u @ sp[(-56)+12]
 11846  0103C4  0ED4               	movlw	-44
 11847  0103C6  0060  F097  FFE3   	movff	btemp,plusw1
 11848  0103CC  0ED5               	movlw	-43
 11849  0103CE  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11850  0103D4  0ED6               	movlw	-42
 11851  0103D6  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11852  0103DC  0ED7               	movlw	-41
 11853  0103DE  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11854                           
 11855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11856                           ;stkvar	_e @ sp[(-56)+34]
 11857  0103E4  0EEA               	movlw	-22
 11858  0103E6  50E3               	movf	plusw1,w,c
 11859  0103E8  0F01               	addlw	1
 11860  0103EA  6E25               	movwf	btemp^0,c
 11861  0103EC  0EEA               	movlw	-22
 11862  0103EE  0060  F097  FFE3   	movff	btemp,plusw1
 11863  0103F4  6A25               	clrf	btemp^0,c
 11864  0103F6  0EEB               	movlw	-21
 11865  0103F8  50E3               	movf	plusw1,w,c
 11866  0103FA  2025               	addwfc	btemp^0,w,c
 11867  0103FC  6E25               	movwf	btemp^0,c
 11868  0103FE  0EEB               	movlw	-21
 11869  010400  0060  F097  FFE3   	movff	btemp,plusw1
 11870  010406                     l10205:
 11871                           
 11872                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11873  010406  0E00               	movlw	0
 11874  010408  6EE6               	movwf	postinc1,c
 11875  01040A  0E00               	movlw	0
 11876  01040C  6EE6               	movwf	postinc1,c
 11877  01040E  0E20               	movlw	32
 11878  010410  6EE6               	movwf	postinc1,c
 11879  010412  0E41               	movlw	65
 11880  010414  6EE6               	movwf	postinc1,c
 11881                           
 11882                           ;stkvar	_u @ sp[(-60)+12]
 11883  010416  0ED0               	movlw	-48
 11884  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11885  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11886  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11887  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11888  010430  EC08  F093         	call	___flmul	;wreg free
 11889  010434  0060  F097  FFE6   	movff	btemp,postinc1
 11890  01043A  0060  F09B  FFE6   	movff	btemp+1,postinc1
 11891  010440  0060  F09F  FFE6   	movff	btemp+2,postinc1
 11892  010446  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 11893                           
 11894                           ;stkvar	_g @ sp[(-60)+16]
 11895  01044C  0ED4               	movlw	-44
 11896  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11897  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11898  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11899  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11900  010466  EC10  F0B3         	call	___flge	;wreg free
 11901  01046A  A025               	btfss	btemp& (0+255),0,c
 11902  01046C  D032               	goto	l10211
 11903  01046E  D793               	goto	l10201
 11904  010470                     l10207:
 11905                           
 11906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11907  010470  0E00               	movlw	0
 11908  010472  6EE6               	movwf	postinc1,c
 11909  010474  0E00               	movlw	0
 11910  010476  6EE6               	movwf	postinc1,c
 11911  010478  0E20               	movlw	32
 11912  01047A  6EE6               	movwf	postinc1,c
 11913  01047C  0E41               	movlw	65
 11914  01047E  6EE6               	movwf	postinc1,c
 11915                           
 11916                           ;stkvar	_u @ sp[(-60)+12]
 11917  010480  0ED0               	movlw	-48
 11918  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11919  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11920  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11921  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11922  01049A  ECFB  F09A         	call	___fldiv	;wreg free
 11923                           
 11924                           ;stkvar	_u @ sp[(-56)+12]
 11925  01049E  0ED4               	movlw	-44
 11926  0104A0  0060  F097  FFE3   	movff	btemp,plusw1
 11927  0104A6  0ED5               	movlw	-43
 11928  0104A8  0060  F09B  FFE3   	movff	btemp+1,plusw1
 11929  0104AE  0ED6               	movlw	-42
 11930  0104B0  0060  F09F  FFE3   	movff	btemp+2,plusw1
 11931  0104B6  0ED7               	movlw	-41
 11932  0104B8  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 11933                           
 11934                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11935                           ;stkvar	_e @ sp[(-56)+34]
 11936  0104BE  50E1               	movf	fsr1l,w,c
 11937  0104C0  0FEA               	addlw	-22
 11938  0104C2  6ED9               	movwf	fsr2l,c
 11939  0104C4  50E2               	movf	fsr1h,w,c
 11940  0104C6  6EDA               	movwf	fsr2h,c
 11941  0104C8  0EFF               	movlw	255
 11942  0104CA  22DA               	addwfc	fsr2h,f,c
 11943  0104CC  06DE               	decf	postinc2,f,c
 11944  0104CE  0E00               	movlw	0
 11945  0104D0  5ADD               	subwfb	postdec2,f,c
 11946  0104D2                     l10211:
 11947                           
 11948                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11949                           ;stkvar	_u @ sp[(-56)+12]
 11950  0104D2  0ED4               	movlw	-44
 11951  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11952  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11953  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11954  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11955                           
 11956                           ;stkvar	_g @ sp[(-60)+16]
 11957  0104EC  0ED4               	movlw	-44
 11958  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11959  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11960  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11961  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11962  010506  EC10  F0B3         	call	___flge	;wreg free
 11963  01050A  A025               	btfss	btemp& (0+255),0,c
 11964  01050C  D7B1               	goto	l10207
 11965  01050E                     u9620:
 11966                           
 11967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11968                           ;stkvar	_c @ sp[(-56)+-7]
 11969  01050E  0EC1               	movlw	-63
 11970  010510  50E3               	movf	plusw1,w,c
 11971  010512  6EE6               	movwf	postinc1,c
 11972  010514  0E00               	movlw	0
 11973  010516  6EE6               	movwf	postinc1,c
 11974  010518  EC77  F0BF         	call	_tolower	;wreg free
 11975                           
 11976                           ;stkvar	_mode @ sp[(-56)+54]
 11977  01051C  0EFE               	movlw	-2
 11978  01051E  0060  F097  FFE3   	movff	btemp,plusw1
 11979                           
 11980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 11981                           ;stkvar	_mode @ sp[(-56)+54]
 11982                           ;stkvar	_nmode @ sp[(-56)+55]
 11983  010524  0EFE               	movlw	-2
 11984  010526  006F FF8C  F025    	movff	plusw1,btemp
 11985  01052C  0EFF               	movlw	-1
 11986  01052E  0060  F097  FFE3   	movff	btemp,plusw1
 11987                           
 11988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 11989                           ;stkvar	_mode @ sp[(-56)+54]
 11990  010534  0EFE               	movlw	-2
 11991  010536  006F FF8C  F025    	movff	plusw1,btemp
 11992  01053C  0E67               	movlw	103
 11993  01053E  1825               	xorwf	btemp^0,w,c
 11994  010540  A4D8               	btfss	status,2,c
 11995  010542  D025               	goto	l10229
 11996                           
 11997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 11998  010544  500C               	movf	_prec^0,w,c
 11999  010546  100D               	iorwf	(_prec+1)^0,w,c
 12000  010548  A4D8               	btfss	status,2,c
 12001  01054A  D004               	goto	l10223
 12002                           
 12003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 12004  01054C  0E00               	movlw	0
 12005  01054E  6E0D               	movwf	(_prec+1)^0,c
 12006  010550  0E01               	movlw	1
 12007  010552  6E0C               	movwf	_prec^0,c
 12008  010554                     l10223:
 12009                           
 12010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 12011  010554  BE0D               	btfsc	(_prec+1)^0,7,c
 12012  010556  D005               	goto	u9650
 12013  010558  500D               	movf	(_prec+1)^0,w,c
 12014  01055A  E110               	bnz	l10227
 12015  01055C  040C               	decf	_prec^0,w,c
 12016  01055E  B0D8               	btfsc	status,0,c
 12017  010560  D00D               	goto	l10227
 12018  010562                     u9650:
 12019  010562  0E06               	movlw	6
 12020  010564  6E2F               	movwf	(btemp+10)^0,c
 12021  010566  0E00               	movlw	0
 12022  010568  6E30               	movwf	(btemp+11)^0,c
 12023                           
 12024                           ;stkvar	_p @ sp[(-56)+40]
 12025  01056A  0EF0               	movlw	-16
 12026  01056C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12027  010572  0EF1               	movlw	-15
 12028  010574  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12029  01057A  D00C               	goto	l10235
 12030  01057C                     l10227:
 12031                           
 12032                           ;stkvar	_p @ sp[(-56)+40]
 12033  01057C  0EF0               	movlw	-16
 12034  01057E  0060  F033  FFE3   	movff	_prec,plusw1
 12035  010584  0EF1               	movlw	-15
 12036  010586  0060  F037  FFE3   	movff	_prec+1,plusw1
 12037  01058C  D003               	goto	l10235
 12038  01058E                     l10229:
 12039                           
 12040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 12041  01058E  AE0D               	btfss	(_prec+1)^0,7,c
 12042  010590  D7F5               	goto	l10227
 12043  010592  D7E7               	goto	u9650
 12044  010594                     l10235:
 12045                           
 12046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 12047                           ;stkvar	_mode @ sp[(-56)+54]
 12048  010594  0EFE               	movlw	-2
 12049  010596  006F FF8C  F025    	movff	plusw1,btemp
 12050  01059C  0E67               	movlw	103
 12051  01059E  1825               	xorwf	btemp^0,w,c
 12052  0105A0  A4D8               	btfss	status,2,c
 12053  0105A2  D02F               	goto	l10245
 12054                           
 12055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 12056                           ;stkvar	_e @ sp[(-56)+34]
 12057  0105A4  0EEB               	movlw	-21
 12058  0105A6  AEE3               	btfss	plusw1,7,c
 12059  0105A8  D00E               	goto	u9680
 12060  0105AA  0EEA               	movlw	-22
 12061  0105AC  006F FF8C  F025    	movff	plusw1,btemp
 12062  0105B2  0EFC               	movlw	252
 12063  0105B4  5E25               	subwf	btemp^0,f,c
 12064  0105B6  0EEB               	movlw	-21
 12065  0105B8  006F FF8C  F025    	movff	plusw1,btemp
 12066  0105BE  0EFF               	movlw	255
 12067  0105C0  5A25               	subwfb	btemp^0,f,c
 12068  0105C2  A0D8               	btfss	status,0,c
 12069  0105C4  D018               	goto	l10243
 12070  0105C6                     u9680:
 12071                           
 12072                           ;stkvar	_e @ sp[(-56)+34]
 12073                           ;stkvar	_p @ sp[(-56)+40]
 12074  0105C6  0EF0               	movlw	-16
 12075  0105C8  50E3               	movf	plusw1,w,c
 12076  0105CA  0FFF               	addlw	255
 12077  0105CC  6E2F               	movwf	(btemp+10)^0,c
 12078  0105CE  0EF1               	movlw	-15
 12079  0105D0  006F FF8C  F030    	movff	plusw1,btemp+11
 12080  0105D6  0EFF               	movlw	255
 12081  0105D8  2230               	addwfc	(btemp+11)^0,f,c
 12082  0105DA  0EEA               	movlw	-22
 12083  0105DC  50E3               	movf	plusw1,w,c
 12084  0105DE  5C2F               	subwf	(btemp+10)^0,w,c
 12085  0105E0  5030               	movf	(btemp+11)^0,w,c
 12086  0105E2  0A80               	xorlw	128
 12087  0105E4  6E25               	movwf	btemp^0,c
 12088  0105E6  0EEB               	movlw	-21
 12089  0105E8  50E3               	movf	plusw1,w,c
 12090  0105EA  0A80               	xorlw	128
 12091  0105EC  5825               	subwfb	btemp^0,w,c
 12092  0105EE  A0D8               	btfss	status,0,c
 12093  0105F0  D002               	goto	l10243
 12094                           
 12095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 12096  0105F2  0E66               	movlw	102
 12097  0105F4  D001               	goto	L10
 12098  0105F6                     l10243:
 12099                           
 12100                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 12101  0105F6  0E65               	movlw	101
 12102  0105F8                     L10:
 12103  0105F8  6E30               	movwf	(btemp+11)^0,c
 12104                           
 12105                           ;stkvar	_nmode @ sp[(-56)+55]
 12106  0105FA  0EFF               	movlw	-1
 12107  0105FC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12108  010602                     l10245:
 12109                           
 12110                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 12111                           ;stkvar	_p @ sp[(-56)+40]
 12112                           ;stkvar	_m @ sp[(-56)+48]
 12113  010602  0EF0               	movlw	-16
 12114  010604  006F FF8C  F025    	movff	plusw1,btemp
 12115  01060A  0EF8               	movlw	-8
 12116  01060C  0060  F097  FFE3   	movff	btemp,plusw1
 12117  010612  0EF1               	movlw	-15
 12118  010614  006F FF8C  F025    	movff	plusw1,btemp
 12119  01061A  0EF9               	movlw	-7
 12120  01061C  0060  F097  FFE3   	movff	btemp,plusw1
 12121                           
 12122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 12123                           ;stkvar	_mode @ sp[(-56)+54]
 12124  010622  0EFE               	movlw	-2
 12125  010624  006F FF8C  F025    	movff	plusw1,btemp
 12126  01062A  0E67               	movlw	103
 12127  01062C  1825               	xorwf	btemp^0,w,c
 12128  01062E  A4D8               	btfss	status,2,c
 12129  010630  D00B               	goto	u9720
 12130                           
 12131                           ;stkvar	_nmode @ sp[(-56)+55]
 12132  010632  0EFF               	movlw	-1
 12133  010634  006F FF8C  F025    	movff	plusw1,btemp
 12134  01063A  0E66               	movlw	102
 12135  01063C  1825               	xorwf	btemp^0,w,c
 12136  01063E  A4D8               	btfss	status,2,c
 12137  010640  D014               	goto	l2065
 12138                           
 12139                           ;stkvar	_e @ sp[(-56)+34]
 12140  010642  0EEB               	movlw	-21
 12141  010644  AEE3               	btfss	plusw1,7,c
 12142  010646  D011               	goto	l2065
 12143  010648                     u9720:
 12144                           
 12145                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 12146                           ;stkvar	_m @ sp[(-56)+48]
 12147  010648  0EF8               	movlw	-8
 12148  01064A  50E3               	movf	plusw1,w,c
 12149  01064C  0F01               	addlw	1
 12150  01064E  6E25               	movwf	btemp^0,c
 12151  010650  0EF8               	movlw	-8
 12152  010652  0060  F097  FFE3   	movff	btemp,plusw1
 12153  010658  6A25               	clrf	btemp^0,c
 12154  01065A  0EF9               	movlw	-7
 12155  01065C  50E3               	movf	plusw1,w,c
 12156  01065E  2025               	addwfc	btemp^0,w,c
 12157  010660  6E25               	movwf	btemp^0,c
 12158  010662  0EF9               	movlw	-7
 12159  010664  0060  F097  FFE3   	movff	btemp,plusw1
 12160  01066A                     l2065:
 12161                           
 12162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 12163                           ;stkvar	_nmode @ sp[(-56)+55]
 12164  01066A  0EFF               	movlw	-1
 12165  01066C  006F FF8C  F025    	movff	plusw1,btemp
 12166  010672  0E66               	movlw	102
 12167  010674  1825               	xorwf	btemp^0,w,c
 12168  010676  A4D8               	btfss	status,2,c
 12169  010678  D03B               	goto	l10265
 12170                           
 12171                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 12172                           ;stkvar	_e @ sp[(-56)+34]
 12173  01067A  0EEB               	movlw	-21
 12174  01067C  AEE3               	btfss	plusw1,7,c
 12175  01067E  D01C               	goto	l10261
 12176                           
 12177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 12178  010680  0E00               	movlw	0
 12179  010682  6E2D               	movwf	(btemp+8)^0,c
 12180  010684  0E00               	movlw	0
 12181  010686  6E2E               	movwf	(btemp+9)^0,c
 12182  010688  0E80               	movlw	128
 12183  01068A  6E2F               	movwf	(btemp+10)^0,c
 12184  01068C  0E3F               	movlw	63
 12185  01068E  6E30               	movwf	(btemp+11)^0,c
 12186                           
 12187                           ;stkvar	_u @ sp[(-56)+12]
 12188  010690  0ED4               	movlw	-44
 12189  010692  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12190  010698  0ED5               	movlw	-43
 12191  01069A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12192  0106A0  0ED6               	movlw	-42
 12193  0106A2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12194  0106A8  0ED7               	movlw	-41
 12195  0106AA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12196                           
 12197                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 12198                           ;stkvar	_e @ sp[(-56)+34]
 12199  0106B0  0EEA               	movlw	-22
 12200  0106B2  6AE3               	clrf	plusw1,c
 12201  0106B4  0EEB               	movlw	-21
 12202  0106B6  6AE3               	clrf	plusw1,c
 12203  0106B8                     l10261:
 12204                           
 12205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 12206                           ;stkvar	_mode @ sp[(-56)+54]
 12207  0106B8  0EFE               	movlw	-2
 12208  0106BA  006F FF8C  F025    	movff	plusw1,btemp
 12209  0106C0  0E67               	movlw	103
 12210  0106C2  1825               	xorwf	btemp^0,w,c
 12211  0106C4  B4D8               	btfsc	status,2,c
 12212  0106C6  D014               	goto	l10265
 12213                           
 12214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 12215                           ;stkvar	_e @ sp[(-56)+34]
 12216                           ;stkvar	_m @ sp[(-56)+48]
 12217  0106C8  0EF8               	movlw	-8
 12218  0106CA  50E3               	movf	plusw1,w,c
 12219  0106CC  6E25               	movwf	btemp^0,c
 12220  0106CE  0EEA               	movlw	-22
 12221  0106D0  50E3               	movf	plusw1,w,c
 12222  0106D2  2625               	addwf	btemp^0,f,c
 12223  0106D4  0EF8               	movlw	-8
 12224  0106D6  0060  F097  FFE3   	movff	btemp,plusw1
 12225  0106DC  0EF9               	movlw	-7
 12226  0106DE  50E3               	movf	plusw1,w,c
 12227  0106E0  6E25               	movwf	btemp^0,c
 12228  0106E2  0EEB               	movlw	-21
 12229  0106E4  50E3               	movf	plusw1,w,c
 12230  0106E6  2225               	addwfc	btemp^0,f,c
 12231  0106E8  0EF9               	movlw	-7
 12232  0106EA  0060  F097  FFE3   	movff	btemp,plusw1
 12233  0106F0                     l10265:
 12234                           
 12235                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 12236                           ;stkvar	_i @ sp[(-56)+36]
 12237  0106F0  0EEC               	movlw	-20
 12238  0106F2  6AE3               	clrf	plusw1,c
 12239  0106F4  0EED               	movlw	-19
 12240  0106F6  6AE3               	clrf	plusw1,c
 12241                           
 12242                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 12243                           ;stkvar	_g @ sp[(-56)+16]
 12244  0106F8  0ED8               	movlw	-40
 12245  0106FA  006F FF8C  F02D    	movff	plusw1,btemp+8
 12246  010700  0ED9               	movlw	-39
 12247  010702  006F FF8C  F02E    	movff	plusw1,btemp+9
 12248  010708  0EDA               	movlw	-38
 12249  01070A  006F FF8C  F02F    	movff	plusw1,btemp+10
 12250  010710  0EDB               	movlw	-37
 12251  010712  006F FF8C  F030    	movff	plusw1,btemp+11
 12252                           
 12253                           ;stkvar	_h @ sp[(-56)+24]
 12254  010718  0EE0               	movlw	-32
 12255  01071A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12256  010720  0EE1               	movlw	-31
 12257  010722  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12258  010728  0EE2               	movlw	-30
 12259  01072A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12260  010730  0EE3               	movlw	-29
 12261  010732  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12262                           
 12263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 12264                           ;stkvar	_u @ sp[(-56)+12]
 12265  010738  0ED4               	movlw	-44
 12266  01073A  006F FF8C  F02D    	movff	plusw1,btemp+8
 12267  010740  0ED5               	movlw	-43
 12268  010742  006F FF8C  F02E    	movff	plusw1,btemp+9
 12269  010748  0ED6               	movlw	-42
 12270  01074A  006F FF8C  F02F    	movff	plusw1,btemp+10
 12271  010750  0ED7               	movlw	-41
 12272  010752  006F FF8C  F030    	movff	plusw1,btemp+11
 12273                           
 12274                           ;stkvar	_ou @ sp[(-56)+28]
 12275  010758  0EE4               	movlw	-28
 12276  01075A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12277  010760  0EE5               	movlw	-27
 12278  010762  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12279  010768  0EE6               	movlw	-26
 12280  01076A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12281  010770  0EE7               	movlw	-25
 12282  010772  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12283                           
 12284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12285  010778  D0D6               	goto	l10281
 12286  01077A                     l10271:
 12287                           
 12288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 12289                           ;stkvar	_u @ sp[(-56)+12]
 12290  01077A  0ED4               	movlw	-44
 12291  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 12292  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 12293  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 12294  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 12295                           
 12296                           ;stkvar	_h @ sp[(-60)+24]
 12297  010794  0EDC               	movlw	-36
 12298  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 12299  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 12300  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12301  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12302  0107AE  ECFB  F09A         	call	___fldiv	;wreg free
 12303  0107B2  0060  F097  FFE6   	movff	btemp,postinc1
 12304  0107B8  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12305  0107BE  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12306  0107C4  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12307  0107CA  EC2B  F0A4         	call	_floorf	;wreg free
 12308                           
 12309                           ;stkvar	_l @ sp[(-56)+20]
 12310  0107CE  0EDC               	movlw	-36
 12311  0107D0  0060  F097  FFE3   	movff	btemp,plusw1
 12312  0107D6  0EDD               	movlw	-35
 12313  0107D8  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12314  0107DE  0EDE               	movlw	-34
 12315  0107E0  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12316  0107E6  0EDF               	movlw	-33
 12317  0107E8  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12318                           
 12319                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 12320                           ;stkvar	_l @ sp[(-56)+20]
 12321  0107EE  0EDC               	movlw	-36
 12322  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12323  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12324  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12325  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12326  010808  EC57  F0B2         	call	___fltol	;wreg free
 12327  01080C  0060  F094  F02F   	movff	btemp,btemp+10
 12328  010812  0060  F098  F030   	movff	btemp+1,btemp+11
 12329                           
 12330                           ;stkvar	_d @ sp[(-56)+44]
 12331  010818  0EF4               	movlw	-12
 12332  01081A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12333  010820  0EF5               	movlw	-11
 12334  010822  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12335                           
 12336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12337                           ;stkvar	_u @ sp[(-56)+12]
 12338  010828  0ED4               	movlw	-44
 12339  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12340  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12341  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12342  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12343                           
 12344                           ;stkvar	_l @ sp[(-60)+20]
 12345  010842  0ED8               	movlw	-40
 12346  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12347  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12348  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12349  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12350  01085C  EC08  F093         	call	___flmul	;wreg free
 12351  010860  0060  F097  FFE6   	movff	btemp,postinc1
 12352  010866  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12353  01086C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12354  010872  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12355                           
 12356                           ;stkvar	_h @ sp[(-60)+24]
 12357  010878  0EDC               	movlw	-36
 12358  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12359  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12360  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12361  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12362  010892  EC2C  F0C3         	call	___flsub	;wreg free
 12363                           
 12364                           ;stkvar	_h @ sp[(-56)+24]
 12365  010896  0EE0               	movlw	-32
 12366  010898  0060  F097  FFE3   	movff	btemp,plusw1
 12367  01089E  0EE1               	movlw	-31
 12368  0108A0  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12369  0108A6  0EE2               	movlw	-30
 12370  0108A8  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12371  0108AE  0EE3               	movlw	-29
 12372  0108B0  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12373                           
 12374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12375  0108B6  0E00               	movlw	0
 12376  0108B8  6EE6               	movwf	postinc1,c
 12377  0108BA  0E00               	movlw	0
 12378  0108BC  6EE6               	movwf	postinc1,c
 12379  0108BE  0E20               	movlw	32
 12380  0108C0  6EE6               	movwf	postinc1,c
 12381  0108C2  0E41               	movlw	65
 12382  0108C4  6EE6               	movwf	postinc1,c
 12383                           
 12384                           ;stkvar	_u @ sp[(-60)+12]
 12385  0108C6  0ED0               	movlw	-48
 12386  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12387  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12388  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12389  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12390  0108E0  ECFB  F09A         	call	___fldiv	;wreg free
 12391                           
 12392                           ;stkvar	_u @ sp[(-56)+12]
 12393  0108E4  0ED4               	movlw	-44
 12394  0108E6  0060  F097  FFE3   	movff	btemp,plusw1
 12395  0108EC  0ED5               	movlw	-43
 12396  0108EE  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12397  0108F4  0ED6               	movlw	-42
 12398  0108F6  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12399  0108FC  0ED7               	movlw	-41
 12400  0108FE  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12401                           
 12402                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12403                           ;stkvar	_i @ sp[(-56)+36]
 12404  010904  0EEC               	movlw	-20
 12405  010906  50E3               	movf	plusw1,w,c
 12406  010908  0F01               	addlw	1
 12407  01090A  6E25               	movwf	btemp^0,c
 12408  01090C  0EEC               	movlw	-20
 12409  01090E  0060  F097  FFE3   	movff	btemp,plusw1
 12410  010914  6A25               	clrf	btemp^0,c
 12411  010916  0EED               	movlw	-19
 12412  010918  50E3               	movf	plusw1,w,c
 12413  01091A  2025               	addwfc	btemp^0,w,c
 12414  01091C  6E25               	movwf	btemp^0,c
 12415  01091E  0EED               	movlw	-19
 12416  010920  0060  F097  FFE3   	movff	btemp,plusw1
 12417  010926                     l10281:
 12418                           
 12419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12420                           ;stkvar	_m @ sp[(-56)+48]
 12421                           ;stkvar	_i @ sp[(-56)+36]
 12422  010926  50E1               	movf	fsr1l,w,c
 12423  010928  0FEC               	addlw	-20
 12424  01092A  6ED9               	movwf	fsr2l,c
 12425  01092C  50E2               	movf	fsr1h,w,c
 12426  01092E  6EDA               	movwf	fsr2h,c
 12427  010930  0EFF               	movlw	255
 12428  010932  22DA               	addwfc	fsr2h,f,c
 12429  010934  0EF8               	movlw	-8
 12430  010936  50E3               	movf	plusw1,w,c
 12431  010938  5CDE               	subwf	postinc2,w,c
 12432  01093A  50DE               	movf	postinc2,w,c
 12433  01093C  0A80               	xorlw	128
 12434  01093E  6E25               	movwf	btemp^0,c
 12435  010940  0EF9               	movlw	-7
 12436  010942  50E3               	movf	plusw1,w,c
 12437  010944  0A80               	xorlw	128
 12438  010946  5825               	subwfb	btemp^0,w,c
 12439  010948  A0D8               	btfss	status,0,c
 12440  01094A  D717               	goto	l10271
 12441                           
 12442                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12443  01094C  0E00               	movlw	0
 12444  01094E  6EE6               	movwf	postinc1,c
 12445  010950  0E00               	movlw	0
 12446  010952  6EE6               	movwf	postinc1,c
 12447  010954  0EA0               	movlw	160
 12448  010956  6EE6               	movwf	postinc1,c
 12449  010958  0E40               	movlw	64
 12450  01095A  6EE6               	movwf	postinc1,c
 12451                           
 12452                           ;stkvar	_u @ sp[(-60)+12]
 12453  01095C  0ED0               	movlw	-48
 12454  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12455  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12456  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12457  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12458  010976  EC08  F093         	call	___flmul	;wreg free
 12459                           
 12460                           ;stkvar	_l @ sp[(-56)+20]
 12461  01097A  0EDC               	movlw	-36
 12462  01097C  0060  F097  FFE3   	movff	btemp,plusw1
 12463  010982  0EDD               	movlw	-35
 12464  010984  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12465  01098A  0EDE               	movlw	-34
 12466  01098C  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12467  010992  0EDF               	movlw	-33
 12468  010994  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12469                           
 12470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12471                           ;stkvar	_l @ sp[(-56)+20]
 12472  01099A  0EDC               	movlw	-36
 12473  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12474  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12475  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12476  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12477                           
 12478                           ;stkvar	_h @ sp[(-60)+24]
 12479  0109B4  0EDC               	movlw	-36
 12480  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12481  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12482  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12483  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12484  0109CE  EC10  F0B3         	call	___flge	;wreg free
 12485  0109D2  A025               	btfss	btemp& (0+255),0,c
 12486  0109D4  D021               	goto	u9790
 12487                           
 12488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12489                           ;stkvar	_l @ sp[(-56)+20]
 12490                           
 12491                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12492                           
 12493                           ;stkvar	_l @ sp[(-56)+20]
 12494                           
 12495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12496  0109D6  0EDC               	movlw	-36
 12497  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12498  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12499  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12500  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12501                           
 12502                           ;stkvar	_h @ sp[(-60)+24]
 12503  0109F0  0EDC               	movlw	-36
 12504  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12505  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12506  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12507  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12508  010A0A  EC07  F0BB         	call	___fleq	;wreg free
 12509  010A0E  A025               	btfss	btemp& (0+255),0,c
 12510  010A10  D01B               	goto	l10295
 12511                           
 12512                           ;stkvar	_d @ sp[(-56)+44]
 12513  010A12  0EF4               	movlw	-12
 12514  010A14  B0E3               	btfsc	plusw1,0,c
 12515  010A16  D018               	goto	l10295
 12516  010A18                     u9790:
 12517                           
 12518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12519  010A18  0E00               	movlw	0
 12520  010A1A  6E2D               	movwf	(btemp+8)^0,c
 12521  010A1C  0E00               	movlw	0
 12522  010A1E  6E2E               	movwf	(btemp+9)^0,c
 12523  010A20  0E00               	movlw	0
 12524  010A22  6E2F               	movwf	(btemp+10)^0,c
 12525  010A24  0E00               	movlw	0
 12526  010A26  6E30               	movwf	(btemp+11)^0,c
 12527                           
 12528                           ;stkvar	_l @ sp[(-56)+20]
 12529  010A28  0EDC               	movlw	-36
 12530  010A2A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12531  010A30  0EDD               	movlw	-35
 12532  010A32  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12533  010A38  0EDE               	movlw	-34
 12534  010A3A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12535  010A40  0EDF               	movlw	-33
 12536  010A42  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12537  010A48                     l10295:
 12538                           
 12539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12540                           ;stkvar	_l @ sp[(-56)+20]
 12541  010A48  0EDC               	movlw	-36
 12542  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12543  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12544  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12545  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12546                           
 12547                           ;stkvar	_g @ sp[(-60)+16]
 12548  010A62  0ED4               	movlw	-44
 12549  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12550  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12551  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12552  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12553  010A7C  EC1D  F097         	call	___fladd	;wreg free
 12554                           
 12555                           ;stkvar	_h @ sp[(-56)+24]
 12556  010A80  0EE0               	movlw	-32
 12557  010A82  0060  F097  FFE3   	movff	btemp,plusw1
 12558  010A88  0EE1               	movlw	-31
 12559  010A8A  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12560  010A90  0EE2               	movlw	-30
 12561  010A92  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12562  010A98  0EE3               	movlw	-29
 12563  010A9A  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12564                           
 12565                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12566                           ;stkvar	_ou @ sp[(-56)+28]
 12567  010AA0  0EE4               	movlw	-28
 12568  010AA2  006F FF8C  F02D    	movff	plusw1,btemp+8
 12569  010AA8  0EE5               	movlw	-27
 12570  010AAA  006F FF8C  F02E    	movff	plusw1,btemp+9
 12571  010AB0  0EE6               	movlw	-26
 12572  010AB2  006F FF8C  F02F    	movff	plusw1,btemp+10
 12573  010AB8  0EE7               	movlw	-25
 12574  010ABA  006F FF8C  F030    	movff	plusw1,btemp+11
 12575                           
 12576                           ;stkvar	_u @ sp[(-56)+12]
 12577  010AC0  0ED4               	movlw	-44
 12578  010AC2  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 12579  010AC8  0ED5               	movlw	-43
 12580  010ACA  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 12581  010AD0  0ED6               	movlw	-42
 12582  010AD2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12583  010AD8  0ED7               	movlw	-41
 12584  010ADA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12585                           
 12586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12587                           ;stkvar	_nmode @ sp[(-56)+55]
 12588  010AE0  0EFF               	movlw	-1
 12589  010AE2  006F FF8C  F025    	movff	plusw1,btemp
 12590  010AE8  0E65               	movlw	101
 12591  010AEA  1825               	xorwf	btemp^0,w,c
 12592  010AEC  B4D8               	btfsc	status,2,c
 12593  010AEE  D011               	goto	l10303
 12594                           
 12595                           ;stkvar	_e @ sp[(-56)+34]
 12596                           ;stkvar	_ne @ sp[(-56)+46]
 12597  010AF0  0EEA               	movlw	-22
 12598  010AF2  006F FF8C  F025    	movff	plusw1,btemp
 12599  010AF8  0EF6               	movlw	-10
 12600  010AFA  0060  F097  FFE3   	movff	btemp,plusw1
 12601  010B00  0EEB               	movlw	-21
 12602  010B02  006F FF8C  F025    	movff	plusw1,btemp
 12603  010B08  0EF7               	movlw	-9
 12604  010B0A  0060  F097  FFE3   	movff	btemp,plusw1
 12605  010B10  D004               	goto	l2080
 12606  010B12                     l10303:
 12607                           
 12608                           ;stkvar	_ne @ sp[(-56)+46]
 12609  010B12  0EF6               	movlw	-10
 12610  010B14  6AE3               	clrf	plusw1,c
 12611  010B16  0EF7               	movlw	-9
 12612  010B18  6AE3               	clrf	plusw1,c
 12613  010B1A                     l2080:
 12614                           
 12615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12616                           ;stkvar	_pp @ sp[(-56)+50]
 12617  010B1A  0EFA               	movlw	-6
 12618  010B1C  6AE3               	clrf	plusw1,c
 12619  010B1E  0EFB               	movlw	-5
 12620  010B20  6AE3               	clrf	plusw1,c
 12621                           
 12622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12623                           ;stkvar	_t @ sp[(-56)+52]
 12624  010B22  0EFC               	movlw	-4
 12625  010B24  6AE3               	clrf	plusw1,c
 12626  010B26  0EFD               	movlw	-3
 12627  010B28  6AE3               	clrf	plusw1,c
 12628                           
 12629                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12630                           ;stkvar	_i @ sp[(-56)+36]
 12631  010B2A  0EEC               	movlw	-20
 12632  010B2C  6AE3               	clrf	plusw1,c
 12633  010B2E  0EED               	movlw	-19
 12634  010B30  6AE3               	clrf	plusw1,c
 12635                           
 12636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12637  010B32  D1B7               	goto	l10355
 12638  010B34                     l10305:
 12639                           
 12640                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12641                           ;stkvar	_u @ sp[(-56)+12]
 12642  010B34  0ED4               	movlw	-44
 12643  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12644  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12645  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12646  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12647                           
 12648                           ;stkvar	_h @ sp[(-60)+24]
 12649  010B4E  0EDC               	movlw	-36
 12650  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12651  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12652  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12653  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12654  010B68  ECFB  F09A         	call	___fldiv	;wreg free
 12655  010B6C  0060  F097  FFE6   	movff	btemp,postinc1
 12656  010B72  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12657  010B78  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12658  010B7E  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12659  010B84  EC2B  F0A4         	call	_floorf	;wreg free
 12660                           
 12661                           ;stkvar	_l @ sp[(-56)+20]
 12662  010B88  0EDC               	movlw	-36
 12663  010B8A  0060  F097  FFE3   	movff	btemp,plusw1
 12664  010B90  0EDD               	movlw	-35
 12665  010B92  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12666  010B98  0EDE               	movlw	-34
 12667  010B9A  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12668  010BA0  0EDF               	movlw	-33
 12669  010BA2  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12670                           
 12671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12672                           ;stkvar	_l @ sp[(-56)+20]
 12673  010BA8  0EDC               	movlw	-36
 12674  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12675  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12676  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12677  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12678  010BC2  EC57  F0B2         	call	___fltol	;wreg free
 12679  010BC6  0060  F094  F02F   	movff	btemp,btemp+10
 12680  010BCC  0060  F098  F030   	movff	btemp+1,btemp+11
 12681                           
 12682                           ;stkvar	_d @ sp[(-56)+44]
 12683  010BD2  0EF4               	movlw	-12
 12684  010BD4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12685  010BDA  0EF5               	movlw	-11
 12686  010BDC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12687                           
 12688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12689  010BE2  B80E               	btfsc	_flags^0,4,c
 12690  010BE4  D026               	goto	l10319
 12691                           
 12692                           ;stkvar	_d @ sp[(-56)+44]
 12693  010BE6  0EF4               	movlw	-12
 12694  010BE8  006F FF8C  F025    	movff	plusw1,btemp
 12695  010BEE  0EF5               	movlw	-11
 12696  010BF0  50E3               	movf	plusw1,w,c
 12697  010BF2  1025               	iorwf	btemp^0,w,c
 12698  010BF4  A4D8               	btfss	status,2,c
 12699  010BF6  D01D               	goto	l10319
 12700                           
 12701                           ;stkvar	_mode @ sp[(-56)+54]
 12702  010BF8  0EFE               	movlw	-2
 12703  010BFA  006F FF8C  F025    	movff	plusw1,btemp
 12704  010C00  0E67               	movlw	103
 12705  010C02  1825               	xorwf	btemp^0,w,c
 12706  010C04  A4D8               	btfss	status,2,c
 12707  010C06  D015               	goto	l10319
 12708                           
 12709                           ;stkvar	_ne @ sp[(-56)+46]
 12710  010C08  0EF7               	movlw	-9
 12711  010C0A  AEE3               	btfss	plusw1,7,c
 12712  010C0C  D012               	goto	l10319
 12713                           
 12714                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12715                           ;stkvar	_t @ sp[(-56)+52]
 12716  010C0E  0EFC               	movlw	-4
 12717  010C10  50E3               	movf	plusw1,w,c
 12718  010C12  0F01               	addlw	1
 12719  010C14  6E25               	movwf	btemp^0,c
 12720  010C16  0EFC               	movlw	-4
 12721  010C18  0060  F097  FFE3   	movff	btemp,plusw1
 12722  010C1E  6A25               	clrf	btemp^0,c
 12723  010C20  0EFD               	movlw	-3
 12724  010C22  50E3               	movf	plusw1,w,c
 12725  010C24  2025               	addwfc	btemp^0,w,c
 12726  010C26  6E25               	movwf	btemp^0,c
 12727  010C28  0EFD               	movlw	-3
 12728  010C2A  0060  F097  FFE3   	movff	btemp,plusw1
 12729                           
 12730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12731  010C30  D0AF               	goto	l10347
 12732  010C32                     l10319:
 12733                           
 12734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12735                           ;stkvar	_pp @ sp[(-56)+50]
 12736  010C32  0EFA               	movlw	-6
 12737  010C34  006F FF8C  F025    	movff	plusw1,btemp
 12738  010C3A  0EFB               	movlw	-5
 12739  010C3C  50E3               	movf	plusw1,w,c
 12740  010C3E  1025               	iorwf	btemp^0,w,c
 12741  010C40  A4D8               	btfss	status,2,c
 12742  010C42  D070               	goto	l10339
 12743                           
 12744                           ;stkvar	_ne @ sp[(-56)+46]
 12745  010C44  0EF7               	movlw	-9
 12746  010C46  AEE3               	btfss	plusw1,7,c
 12747  010C48  D06D               	goto	l10339
 12748                           
 12749                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12750                           ;stkvar	_n @ sp[(-56)+32]
 12751  010C4A  0EE8               	movlw	-24
 12752  010C4C  006F FF8C  F02F    	movff	plusw1,btemp+10
 12753  010C52  0EE9               	movlw	-23
 12754  010C54  006F FF8C  F030    	movff	plusw1,btemp+11
 12755  010C5A  0E94               	movlw	low _dbuf
 12756  010C5C  242F               	addwf	(btemp+10)^0,w,c
 12757  010C5E  6ED9               	movwf	fsr2l,c
 12758  010C60  0E03               	movlw	high _dbuf
 12759  010C62  2030               	addwfc	(btemp+11)^0,w,c
 12760  010C64  6EDA               	movwf	fsr2h,c
 12761  010C66  0E2E               	movlw	46
 12762  010C68  6EDF               	movwf	indf2,c
 12763                           
 12764                           ;stkvar	_n @ sp[(-56)+32]
 12765  010C6A  0EE8               	movlw	-24
 12766  010C6C  50E3               	movf	plusw1,w,c
 12767  010C6E  0F01               	addlw	1
 12768  010C70  6E25               	movwf	btemp^0,c
 12769  010C72  0EE8               	movlw	-24
 12770  010C74  0060  F097  FFE3   	movff	btemp,plusw1
 12771  010C7A  6A25               	clrf	btemp^0,c
 12772  010C7C  0EE9               	movlw	-23
 12773  010C7E  50E3               	movf	plusw1,w,c
 12774  010C80  2025               	addwfc	btemp^0,w,c
 12775  010C82  6E25               	movwf	btemp^0,c
 12776  010C84  0EE9               	movlw	-23
 12777  010C86  0060  F097  FFE3   	movff	btemp,plusw1
 12778                           
 12779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12780                           ;stkvar	_w @ sp[(-56)+38]
 12781  010C8C  50E1               	movf	fsr1l,w,c
 12782  010C8E  0FEE               	addlw	-18
 12783  010C90  6ED9               	movwf	fsr2l,c
 12784  010C92  50E2               	movf	fsr1h,w,c
 12785  010C94  6EDA               	movwf	fsr2h,c
 12786  010C96  0EFF               	movlw	255
 12787  010C98  22DA               	addwfc	fsr2h,f,c
 12788  010C9A  06DE               	decf	postinc2,f,c
 12789  010C9C  0E00               	movlw	0
 12790  010C9E  5ADD               	subwfb	postdec2,f,c
 12791                           
 12792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12793  010CA0  0E01               	movlw	1
 12794  010CA2  6E2F               	movwf	(btemp+10)^0,c
 12795  010CA4  0E00               	movlw	0
 12796  010CA6  6E30               	movwf	(btemp+11)^0,c
 12797                           
 12798                           ;stkvar	_pp @ sp[(-56)+50]
 12799  010CA8  0EFA               	movlw	-6
 12800  010CAA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 12801  010CB0  0EFB               	movlw	-5
 12802  010CB2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 12803  010CB8  D035               	goto	l10339
 12804  010CBA                     l10331:
 12805                           
 12806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12807                           ;stkvar	_n @ sp[(-56)+32]
 12808  010CBA  0EE8               	movlw	-24
 12809  010CBC  006F FF8C  F02F    	movff	plusw1,btemp+10
 12810  010CC2  0EE9               	movlw	-23
 12811  010CC4  006F FF8C  F030    	movff	plusw1,btemp+11
 12812  010CCA  0E94               	movlw	low _dbuf
 12813  010CCC  242F               	addwf	(btemp+10)^0,w,c
 12814  010CCE  6ED9               	movwf	fsr2l,c
 12815  010CD0  0E03               	movlw	high _dbuf
 12816  010CD2  2030               	addwfc	(btemp+11)^0,w,c
 12817  010CD4  6EDA               	movwf	fsr2h,c
 12818  010CD6  0E30               	movlw	48
 12819  010CD8  6EDF               	movwf	indf2,c
 12820                           
 12821                           ;stkvar	_n @ sp[(-56)+32]
 12822  010CDA  0EE8               	movlw	-24
 12823  010CDC  50E3               	movf	plusw1,w,c
 12824  010CDE  0F01               	addlw	1
 12825  010CE0  6E25               	movwf	btemp^0,c
 12826  010CE2  0EE8               	movlw	-24
 12827  010CE4  0060  F097  FFE3   	movff	btemp,plusw1
 12828  010CEA  6A25               	clrf	btemp^0,c
 12829  010CEC  0EE9               	movlw	-23
 12830  010CEE  50E3               	movf	plusw1,w,c
 12831  010CF0  2025               	addwfc	btemp^0,w,c
 12832  010CF2  6E25               	movwf	btemp^0,c
 12833  010CF4  0EE9               	movlw	-23
 12834  010CF6  0060  F097  FFE3   	movff	btemp,plusw1
 12835                           
 12836                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12837                           ;stkvar	_w @ sp[(-56)+38]
 12838  010CFC  50E1               	movf	fsr1l,w,c
 12839  010CFE  0FEE               	addlw	-18
 12840  010D00  6ED9               	movwf	fsr2l,c
 12841  010D02  50E2               	movf	fsr1h,w,c
 12842  010D04  6EDA               	movwf	fsr2h,c
 12843  010D06  0EFF               	movlw	255
 12844  010D08  22DA               	addwfc	fsr2h,f,c
 12845  010D0A  06DE               	decf	postinc2,f,c
 12846  010D0C  0E00               	movlw	0
 12847  010D0E  5ADD               	subwfb	postdec2,f,c
 12848                           
 12849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12850                           ;stkvar	_t @ sp[(-56)+52]
 12851  010D10  50E1               	movf	fsr1l,w,c
 12852  010D12  0FFC               	addlw	-4
 12853  010D14  6ED9               	movwf	fsr2l,c
 12854  010D16  50E2               	movf	fsr1h,w,c
 12855  010D18  6EDA               	movwf	fsr2h,c
 12856  010D1A  0EFF               	movlw	255
 12857  010D1C  22DA               	addwfc	fsr2h,f,c
 12858  010D1E  06DE               	decf	postinc2,f,c
 12859  010D20  0E00               	movlw	0
 12860  010D22  5ADD               	subwfb	postdec2,f,c
 12861  010D24                     l10339:
 12862                           
 12863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12864                           ;stkvar	_t @ sp[(-56)+52]
 12865  010D24  0EFC               	movlw	-4
 12866  010D26  006F FF8C  F025    	movff	plusw1,btemp
 12867  010D2C  0EFD               	movlw	-3
 12868  010D2E  50E3               	movf	plusw1,w,c
 12869  010D30  1025               	iorwf	btemp^0,w,c
 12870  010D32  A4D8               	btfss	status,2,c
 12871  010D34  D7C2               	goto	l10331
 12872                           
 12873                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12874                           ;stkvar	_n @ sp[(-56)+32]
 12875  010D36  0EE8               	movlw	-24
 12876  010D38  006F FF8C  F02F    	movff	plusw1,btemp+10
 12877  010D3E  0EE9               	movlw	-23
 12878  010D40  006F FF8C  F030    	movff	plusw1,btemp+11
 12879  010D46  0E94               	movlw	low _dbuf
 12880  010D48  242F               	addwf	(btemp+10)^0,w,c
 12881  010D4A  6ED9               	movwf	fsr2l,c
 12882  010D4C  0E03               	movlw	high _dbuf
 12883  010D4E  2030               	addwfc	(btemp+11)^0,w,c
 12884  010D50  6EDA               	movwf	fsr2h,c
 12885                           
 12886                           ;stkvar	_d @ sp[(-56)+44]
 12887  010D52  0EF4               	movlw	-12
 12888  010D54  50E3               	movf	plusw1,w,c
 12889  010D56  0F30               	addlw	48
 12890  010D58  6EDF               	movwf	indf2,c
 12891                           
 12892                           ;stkvar	_n @ sp[(-56)+32]
 12893  010D5A  0EE8               	movlw	-24
 12894  010D5C  50E3               	movf	plusw1,w,c
 12895  010D5E  0F01               	addlw	1
 12896  010D60  6E25               	movwf	btemp^0,c
 12897  010D62  0EE8               	movlw	-24
 12898  010D64  0060  F097  FFE3   	movff	btemp,plusw1
 12899  010D6A  6A25               	clrf	btemp^0,c
 12900  010D6C  0EE9               	movlw	-23
 12901  010D6E  50E3               	movf	plusw1,w,c
 12902  010D70  2025               	addwfc	btemp^0,w,c
 12903  010D72  6E25               	movwf	btemp^0,c
 12904  010D74  0EE9               	movlw	-23
 12905  010D76  0060  F097  FFE3   	movff	btemp,plusw1
 12906                           
 12907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12908                           ;stkvar	_w @ sp[(-56)+38]
 12909  010D7C  50E1               	movf	fsr1l,w,c
 12910  010D7E  0FEE               	addlw	-18
 12911  010D80  6ED9               	movwf	fsr2l,c
 12912  010D82  50E2               	movf	fsr1h,w,c
 12913  010D84  6EDA               	movwf	fsr2h,c
 12914  010D86  0EFF               	movlw	255
 12915  010D88  22DA               	addwfc	fsr2h,f,c
 12916  010D8A  06DE               	decf	postinc2,f,c
 12917  010D8C  0E00               	movlw	0
 12918  010D8E  5ADD               	subwfb	postdec2,f,c
 12919  010D90                     l10347:
 12920                           
 12921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12922                           ;stkvar	_u @ sp[(-56)+12]
 12923  010D90  0ED4               	movlw	-44
 12924  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12925  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12926  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12927  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12928                           
 12929                           ;stkvar	_l @ sp[(-60)+20]
 12930  010DAA  0ED8               	movlw	-40
 12931  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12932  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12933  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12934  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12935  010DC4  EC08  F093         	call	___flmul	;wreg free
 12936  010DC8  0060  F097  FFE6   	movff	btemp,postinc1
 12937  010DCE  0060  F09B  FFE6   	movff	btemp+1,postinc1
 12938  010DD4  0060  F09F  FFE6   	movff	btemp+2,postinc1
 12939  010DDA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 12940                           
 12941                           ;stkvar	_h @ sp[(-60)+24]
 12942  010DE0  0EDC               	movlw	-36
 12943  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12944  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12945  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12946  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12947  010DFA  EC2C  F0C3         	call	___flsub	;wreg free
 12948                           
 12949                           ;stkvar	_h @ sp[(-56)+24]
 12950  010DFE  0EE0               	movlw	-32
 12951  010E00  0060  F097  FFE3   	movff	btemp,plusw1
 12952  010E06  0EE1               	movlw	-31
 12953  010E08  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12954  010E0E  0EE2               	movlw	-30
 12955  010E10  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12956  010E16  0EE3               	movlw	-29
 12957  010E18  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12958                           
 12959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12960  010E1E  0E00               	movlw	0
 12961  010E20  6EE6               	movwf	postinc1,c
 12962  010E22  0E00               	movlw	0
 12963  010E24  6EE6               	movwf	postinc1,c
 12964  010E26  0E20               	movlw	32
 12965  010E28  6EE6               	movwf	postinc1,c
 12966  010E2A  0E41               	movlw	65
 12967  010E2C  6EE6               	movwf	postinc1,c
 12968                           
 12969                           ;stkvar	_u @ sp[(-60)+12]
 12970  010E2E  0ED0               	movlw	-48
 12971  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12972  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12973  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12974  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12975  010E48  ECFB  F09A         	call	___fldiv	;wreg free
 12976                           
 12977                           ;stkvar	_u @ sp[(-56)+12]
 12978  010E4C  0ED4               	movlw	-44
 12979  010E4E  0060  F097  FFE3   	movff	btemp,plusw1
 12980  010E54  0ED5               	movlw	-43
 12981  010E56  0060  F09B  FFE3   	movff	btemp+1,plusw1
 12982  010E5C  0ED6               	movlw	-42
 12983  010E5E  0060  F09F  FFE3   	movff	btemp+2,plusw1
 12984  010E64  0ED7               	movlw	-41
 12985  010E66  0060  F0A3  FFE3   	movff	btemp+3,plusw1
 12986                           
 12987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 12988                           ;stkvar	_ne @ sp[(-56)+46]
 12989  010E6C  50E1               	movf	fsr1l,w,c
 12990  010E6E  0FF6               	addlw	-10
 12991  010E70  6ED9               	movwf	fsr2l,c
 12992  010E72  50E2               	movf	fsr1h,w,c
 12993  010E74  6EDA               	movwf	fsr2h,c
 12994  010E76  0EFF               	movlw	255
 12995  010E78  22DA               	addwfc	fsr2h,f,c
 12996  010E7A  06DE               	decf	postinc2,f,c
 12997  010E7C  0E00               	movlw	0
 12998  010E7E  5ADD               	subwfb	postdec2,f,c
 12999                           
 13000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 13001                           ;stkvar	_i @ sp[(-56)+36]
 13002  010E80  0EEC               	movlw	-20
 13003  010E82  50E3               	movf	plusw1,w,c
 13004  010E84  0F01               	addlw	1
 13005  010E86  6E25               	movwf	btemp^0,c
 13006  010E88  0EEC               	movlw	-20
 13007  010E8A  0060  F097  FFE3   	movff	btemp,plusw1
 13008  010E90  6A25               	clrf	btemp^0,c
 13009  010E92  0EED               	movlw	-19
 13010  010E94  50E3               	movf	plusw1,w,c
 13011  010E96  2025               	addwfc	btemp^0,w,c
 13012  010E98  6E25               	movwf	btemp^0,c
 13013  010E9A  0EED               	movlw	-19
 13014  010E9C  0060  F097  FFE3   	movff	btemp,plusw1
 13015  010EA2                     l10355:
 13016                           
 13017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 13018                           ;stkvar	_m @ sp[(-56)+48]
 13019                           ;stkvar	_i @ sp[(-56)+36]
 13020  010EA2  50E1               	movf	fsr1l,w,c
 13021  010EA4  0FEC               	addlw	-20
 13022  010EA6  6ED9               	movwf	fsr2l,c
 13023  010EA8  50E2               	movf	fsr1h,w,c
 13024  010EAA  6EDA               	movwf	fsr2h,c
 13025  010EAC  0EFF               	movlw	255
 13026  010EAE  22DA               	addwfc	fsr2h,f,c
 13027  010EB0  0EF8               	movlw	-8
 13028  010EB2  50E3               	movf	plusw1,w,c
 13029  010EB4  5CDE               	subwf	postinc2,w,c
 13030  010EB6  50DE               	movf	postinc2,w,c
 13031  010EB8  0A80               	xorlw	128
 13032  010EBA  6E25               	movwf	btemp^0,c
 13033  010EBC  0EF9               	movlw	-7
 13034  010EBE  50E3               	movf	plusw1,w,c
 13035  010EC0  0A80               	xorlw	128
 13036  010EC2  5825               	subwfb	btemp^0,w,c
 13037  010EC4  B0D8               	btfsc	status,0,c
 13038  010EC6  D00E               	goto	u9890
 13039                           
 13040                           ;stkvar	_n @ sp[(-56)+32]
 13041  010EC8  0EE9               	movlw	-23
 13042  010ECA  BEE3               	btfsc	plusw1,7,c
 13043  010ECC  D633               	goto	l10305
 13044  010ECE  0EE9               	movlw	-23
 13045  010ED0  50E3               	movf	plusw1,w,c
 13046  010ED2  E108               	bnz	u9890
 13047  010ED4  0EE8               	movlw	-24
 13048  010ED6  006F FF8C  F025    	movff	plusw1,btemp
 13049  010EDC  0E4B               	movlw	75
 13050  010EDE  5E25               	subwf	btemp^0,f,c
 13051  010EE0  A0D8               	btfss	status,0,c
 13052  010EE2  D628               	goto	l10305
 13053  010EE4                     u9890:
 13054                           
 13055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 13056                           ;stkvar	_pp @ sp[(-56)+50]
 13057  010EE4  0EFA               	movlw	-6
 13058  010EE6  006F FF8C  F025    	movff	plusw1,btemp
 13059  010EEC  0EFB               	movlw	-5
 13060  010EEE  50E3               	movf	plusw1,w,c
 13061  010EF0  1025               	iorwf	btemp^0,w,c
 13062  010EF2  B4D8               	btfsc	status,2,c
 13063  010EF4  A80E               	btfss	_flags^0,4,c
 13064  010EF6  D021               	goto	l10367
 13065                           
 13066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 13067                           ;stkvar	_n @ sp[(-56)+32]
 13068  010EF8  0EE8               	movlw	-24
 13069  010EFA  006F FF8C  F02F    	movff	plusw1,btemp+10
 13070  010F00  0EE9               	movlw	-23
 13071  010F02  006F FF8C  F030    	movff	plusw1,btemp+11
 13072  010F08  0E94               	movlw	low _dbuf
 13073  010F0A  242F               	addwf	(btemp+10)^0,w,c
 13074  010F0C  6ED9               	movwf	fsr2l,c
 13075  010F0E  0E03               	movlw	high _dbuf
 13076  010F10  2030               	addwfc	(btemp+11)^0,w,c
 13077  010F12  6EDA               	movwf	fsr2h,c
 13078  010F14  0E2E               	movlw	46
 13079  010F16  6EDF               	movwf	indf2,c
 13080                           
 13081                           ;stkvar	_n @ sp[(-56)+32]
 13082  010F18  0EE8               	movlw	-24
 13083  010F1A  50E3               	movf	plusw1,w,c
 13084  010F1C  0F01               	addlw	1
 13085  010F1E  6E25               	movwf	btemp^0,c
 13086  010F20  0EE8               	movlw	-24
 13087  010F22  0060  F097  FFE3   	movff	btemp,plusw1
 13088  010F28  6A25               	clrf	btemp^0,c
 13089  010F2A  0EE9               	movlw	-23
 13090  010F2C  50E3               	movf	plusw1,w,c
 13091  010F2E  2025               	addwfc	btemp^0,w,c
 13092  010F30  6E25               	movwf	btemp^0,c
 13093  010F32  0EE9               	movlw	-23
 13094  010F34  0060  F097  FFE3   	movff	btemp,plusw1
 13095  010F3A                     l10367:
 13096                           
 13097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 13098                           ;stkvar	_n @ sp[(-56)+32]
 13099  010F3A  0EE8               	movlw	-24
 13100  010F3C  006F FF8C  F02F    	movff	plusw1,btemp+10
 13101  010F42  0EE9               	movlw	-23
 13102  010F44  006F FF8C  F030    	movff	plusw1,btemp+11
 13103  010F4A  0E94               	movlw	low _dbuf
 13104  010F4C  242F               	addwf	(btemp+10)^0,w,c
 13105  010F4E  6ED9               	movwf	fsr2l,c
 13106  010F50  0E03               	movlw	high _dbuf
 13107  010F52  2030               	addwfc	(btemp+11)^0,w,c
 13108  010F54  6EDA               	movwf	fsr2h,c
 13109  010F56  0E00               	movlw	0
 13110  010F58  6EDF               	movwf	indf2,c
 13111                           
 13112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 13113                           ;stkvar	_nmode @ sp[(-56)+55]
 13114  010F5A  0EFF               	movlw	-1
 13115  010F5C  006F FF8C  F025    	movff	plusw1,btemp
 13116  010F62  0E65               	movlw	101
 13117  010F64  1825               	xorwf	btemp^0,w,c
 13118  010F66  A4D8               	btfss	status,2,c
 13119  010F68  EF16  F081         	goto	l10171
 13120                           
 13121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 13122  010F6C  0E4F               	movlw	79
 13123  010F6E  6E2F               	movwf	(btemp+10)^0,c
 13124  010F70  0E00               	movlw	0
 13125  010F72  6E30               	movwf	(btemp+11)^0,c
 13126                           
 13127                           ;stkvar	_i @ sp[(-56)+36]
 13128  010F74  0EEC               	movlw	-20
 13129  010F76  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13130  010F7C  0EED               	movlw	-19
 13131  010F7E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13132                           
 13133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 13134                           ;stkvar	_i @ sp[(-56)+36]
 13135  010F84  0EEC               	movlw	-20
 13136  010F86  006F FF8C  F02F    	movff	plusw1,btemp+10
 13137  010F8C  0EED               	movlw	-19
 13138  010F8E  006F FF8C  F030    	movff	plusw1,btemp+11
 13139  010F94  0E94               	movlw	low _dbuf
 13140  010F96  242F               	addwf	(btemp+10)^0,w,c
 13141  010F98  6ED9               	movwf	fsr2l,c
 13142  010F9A  0E03               	movlw	high _dbuf
 13143  010F9C  2030               	addwfc	(btemp+11)^0,w,c
 13144  010F9E  6EDA               	movwf	fsr2h,c
 13145  010FA0  0E00               	movlw	0
 13146  010FA2  6EDF               	movwf	indf2,c
 13147                           
 13148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 13149                           ;stkvar	_sign @ sp[(-56)+42]
 13150  010FA4  0EF2               	movlw	-14
 13151  010FA6  6AE3               	clrf	plusw1,c
 13152  010FA8  0EF3               	movlw	-13
 13153  010FAA  6AE3               	clrf	plusw1,c
 13154                           
 13155                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 13156                           ;stkvar	_e @ sp[(-56)+34]
 13157  010FAC  0EEB               	movlw	-21
 13158  010FAE  AEE3               	btfss	plusw1,7,c
 13159  010FB0  D012               	goto	l10381
 13160                           
 13161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 13162  010FB2  0E01               	movlw	1
 13163  010FB4  6E2F               	movwf	(btemp+10)^0,c
 13164  010FB6  0E00               	movlw	0
 13165  010FB8  6E30               	movwf	(btemp+11)^0,c
 13166                           
 13167                           ;stkvar	_sign @ sp[(-56)+42]
 13168  010FBA  0EF2               	movlw	-14
 13169  010FBC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13170  010FC2  0EF3               	movlw	-13
 13171  010FC4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13172                           
 13173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 13174                           ;stkvar	_e @ sp[(-56)+34]
 13175                           ;stkvar	_e @ sp[(-56)+34]
 13176  010FCA  0EEA               	movlw	-22
 13177  010FCC  6CE3               	negf	plusw1,c
 13178  010FCE  0EEB               	movlw	-21
 13179  010FD0  1EE3               	comf	plusw1,f,c
 13180  010FD2  B0D8               	btfsc	status,0,c
 13181  010FD4  2AE3               	incf	plusw1,f,c
 13182  010FD6                     l10381:
 13183                           
 13184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 13185  010FD6  0E02               	movlw	2
 13186  010FD8  6E2F               	movwf	(btemp+10)^0,c
 13187  010FDA  0E00               	movlw	0
 13188  010FDC  6E30               	movwf	(btemp+11)^0,c
 13189                           
 13190                           ;stkvar	_p @ sp[(-56)+40]
 13191  010FDE  0EF0               	movlw	-16
 13192  010FE0  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13193  010FE6  0EF1               	movlw	-15
 13194  010FE8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13195                           
 13196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13197  010FEE  D051               	goto	l10393
 13198  010FF0                     l10383:
 13199                           
 13200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 13201                           ;stkvar	_i @ sp[(-56)+36]
 13202  010FF0  50E1               	movf	fsr1l,w,c
 13203  010FF2  0FEC               	addlw	-20
 13204  010FF4  6ED9               	movwf	fsr2l,c
 13205  010FF6  50E2               	movf	fsr1h,w,c
 13206  010FF8  6EDA               	movwf	fsr2h,c
 13207  010FFA  0EFF               	movlw	255
 13208  010FFC  22DA               	addwfc	fsr2h,f,c
 13209  010FFE  06DE               	decf	postinc2,f,c
 13210  011000  0E00               	movlw	0
 13211  011002  5ADD               	subwfb	postdec2,f,c
 13212                           
 13213                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 13214                           ;stkvar	_i @ sp[(-56)+36]
 13215  011004  0EEC               	movlw	-20
 13216  011006  006F FF8C  F02F    	movff	plusw1,btemp+10
 13217  01100C  0EED               	movlw	-19
 13218  01100E  006F FF8C  F030    	movff	plusw1,btemp+11
 13219  011014  0E94               	movlw	low _dbuf
 13220  011016  242F               	addwf	(btemp+10)^0,w,c
 13221  011018  6ED9               	movwf	fsr2l,c
 13222  01101A  0E03               	movlw	high _dbuf
 13223  01101C  2030               	addwfc	(btemp+11)^0,w,c
 13224  01101E  6EDA               	movwf	fsr2h,c
 13225  011020  0E0A               	movlw	10
 13226  011022  6EE6               	movwf	postinc1,c
 13227  011024  0E00               	movlw	0
 13228  011026  6EE6               	movwf	postinc1,c
 13229                           
 13230                           ;stkvar	_e @ sp[(-58)+34]
 13231  011028  0EE8               	movlw	-24
 13232  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 13233  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 13234  011036  EC35  F0B6         	call	___awmod	;wreg free
 13235  01103A  5025               	movf	btemp^0,w,c
 13236  01103C  0F30               	addlw	48
 13237  01103E  6EDF               	movwf	indf2,c
 13238                           
 13239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 13240  011040  0E0A               	movlw	10
 13241  011042  6EE6               	movwf	postinc1,c
 13242  011044  0E00               	movlw	0
 13243  011046  6EE6               	movwf	postinc1,c
 13244                           
 13245                           ;stkvar	_e @ sp[(-58)+34]
 13246  011048  0EE8               	movlw	-24
 13247  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 13248  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 13249  011056  ECC1  F0B3         	call	___awdiv	;wreg free
 13250                           
 13251                           ;stkvar	_e @ sp[(-56)+34]
 13252  01105A  0EEA               	movlw	-22
 13253  01105C  0060  F097  FFE3   	movff	btemp,plusw1
 13254  011062  0EEB               	movlw	-21
 13255  011064  0060  F09B  FFE3   	movff	btemp+1,plusw1
 13256                           
 13257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 13258                           ;stkvar	_p @ sp[(-56)+40]
 13259  01106A  50E1               	movf	fsr1l,w,c
 13260  01106C  0FF0               	addlw	-16
 13261  01106E  6ED9               	movwf	fsr2l,c
 13262  011070  50E2               	movf	fsr1h,w,c
 13263  011072  6EDA               	movwf	fsr2h,c
 13264  011074  0EFF               	movlw	255
 13265  011076  22DA               	addwfc	fsr2h,f,c
 13266  011078  06DE               	decf	postinc2,f,c
 13267  01107A  0E00               	movlw	0
 13268  01107C  5ADD               	subwfb	postdec2,f,c
 13269                           
 13270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 13271                           ;stkvar	_w @ sp[(-56)+38]
 13272  01107E  50E1               	movf	fsr1l,w,c
 13273  011080  0FEE               	addlw	-18
 13274  011082  6ED9               	movwf	fsr2l,c
 13275  011084  50E2               	movf	fsr1h,w,c
 13276  011086  6EDA               	movwf	fsr2h,c
 13277  011088  0EFF               	movlw	255
 13278  01108A  22DA               	addwfc	fsr2h,f,c
 13279  01108C  06DE               	decf	postinc2,f,c
 13280  01108E  0E00               	movlw	0
 13281  011090  5ADD               	subwfb	postdec2,f,c
 13282  011092                     l10393:
 13283                           
 13284                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13285                           ;stkvar	_e @ sp[(-56)+34]
 13286  011092  0EEA               	movlw	-22
 13287  011094  006F FF8C  F025    	movff	plusw1,btemp
 13288  01109A  0EEB               	movlw	-21
 13289  01109C  50E3               	movf	plusw1,w,c
 13290  01109E  1025               	iorwf	btemp^0,w,c
 13291  0110A0  A4D8               	btfss	status,2,c
 13292  0110A2  D7A6               	goto	l10383
 13293                           
 13294                           ;stkvar	_p @ sp[(-56)+40]
 13295  0110A4  0EF1               	movlw	-15
 13296  0110A6  BEE3               	btfsc	plusw1,7,c
 13297  0110A8  D007               	goto	u9950
 13298  0110AA  0EF1               	movlw	-15
 13299  0110AC  50E3               	movf	plusw1,w,c
 13300  0110AE  E1A0               	bnz	l10383
 13301  0110B0  0EF0               	movlw	-16
 13302  0110B2  04E3               	decf	plusw1,w,c
 13303  0110B4  B0D8               	btfsc	status,0,c
 13304  0110B6  D79C               	goto	l10383
 13305  0110B8                     u9950:
 13306                           
 13307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 13308                           ;stkvar	_i @ sp[(-56)+36]
 13309  0110B8  50E1               	movf	fsr1l,w,c
 13310  0110BA  0FEC               	addlw	-20
 13311  0110BC  6ED9               	movwf	fsr2l,c
 13312  0110BE  50E2               	movf	fsr1h,w,c
 13313  0110C0  6EDA               	movwf	fsr2h,c
 13314  0110C2  0EFF               	movlw	255
 13315  0110C4  22DA               	addwfc	fsr2h,f,c
 13316  0110C6  06DE               	decf	postinc2,f,c
 13317  0110C8  0E00               	movlw	0
 13318  0110CA  5ADD               	subwfb	postdec2,f,c
 13319                           
 13320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13321                           ;stkvar	_sign @ sp[(-56)+42]
 13322  0110CC  0EF2               	movlw	-14
 13323  0110CE  006F FF8C  F025    	movff	plusw1,btemp
 13324  0110D4  0EF3               	movlw	-13
 13325  0110D6  50E3               	movf	plusw1,w,c
 13326  0110D8  1025               	iorwf	btemp^0,w,c
 13327  0110DA  A4D8               	btfss	status,2,c
 13328  0110DC  D002               	goto	l10403
 13329  0110DE  0E2B               	movlw	43
 13330  0110E0  D001               	goto	L11
 13331  0110E2                     l10403:
 13332  0110E2  0E2D               	movlw	45
 13333  0110E4                     L11:
 13334  0110E4  6E2F               	movwf	(btemp+10)^0,c
 13335  0110E6  0E00               	movlw	0
 13336  0110E8  6E30               	movwf	(btemp+11)^0,c
 13337                           
 13338                           ;stkvar	_efgtoa$4987 @ sp[(-56)+4]
 13339  0110EA  0ECC               	movlw	-52
 13340  0110EC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13341  0110F2  0ECD               	movlw	-51
 13342  0110F4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13343                           
 13344                           ;stkvar	_efgtoa$4987 @ sp[(-56)+4]
 13345                           ;stkvar	_i @ sp[(-56)+36]
 13346  0110FA  0EEC               	movlw	-20
 13347  0110FC  006F FF8C  F02F    	movff	plusw1,btemp+10
 13348  011102  0EED               	movlw	-19
 13349  011104  006F FF8C  F030    	movff	plusw1,btemp+11
 13350  01110A  0E94               	movlw	low _dbuf
 13351  01110C  242F               	addwf	(btemp+10)^0,w,c
 13352  01110E  6ED9               	movwf	fsr2l,c
 13353  011110  0E03               	movlw	high _dbuf
 13354  011112  2030               	addwfc	(btemp+11)^0,w,c
 13355  011114  6EDA               	movwf	fsr2h,c
 13356  011116  0ECC               	movlw	-52
 13357  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13358                           
 13359                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13360                           ;stkvar	_w @ sp[(-56)+38]
 13361  01111E  50E1               	movf	fsr1l,w,c
 13362  011120  0FEE               	addlw	-18
 13363  011122  6ED9               	movwf	fsr2l,c
 13364  011124  50E2               	movf	fsr1h,w,c
 13365  011126  6EDA               	movwf	fsr2h,c
 13366  011128  0EFF               	movlw	255
 13367  01112A  22DA               	addwfc	fsr2h,f,c
 13368  01112C  06DE               	decf	postinc2,f,c
 13369  01112E  0E00               	movlw	0
 13370  011130  5ADD               	subwfb	postdec2,f,c
 13371                           
 13372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13373                           ;stkvar	_i @ sp[(-56)+36]
 13374  011132  50E1               	movf	fsr1l,w,c
 13375  011134  0FEC               	addlw	-20
 13376  011136  6ED9               	movwf	fsr2l,c
 13377  011138  50E2               	movf	fsr1h,w,c
 13378  01113A  6EDA               	movwf	fsr2h,c
 13379  01113C  0EFF               	movlw	255
 13380  01113E  22DA               	addwfc	fsr2h,f,c
 13381  011140  06DE               	decf	postinc2,f,c
 13382  011142  0E00               	movlw	0
 13383  011144  5ADD               	subwfb	postdec2,f,c
 13384  011146  0EBF               	movlw	191
 13385  011148  6E2F               	movwf	(btemp+10)^0,c
 13386  01114A  0EFF               	movlw	255
 13387  01114C  6E30               	movwf	(btemp+11)^0,c
 13388                           
 13389                           ;stkvar	_c @ sp[(-56)+-7]
 13390  01114E  0EC1               	movlw	-63
 13391  011150  50E3               	movf	plusw1,w,c
 13392  011152  6E2D               	movwf	(btemp+8)^0,c
 13393  011154  6A2E               	clrf	(btemp+9)^0,c
 13394  011156  502F               	movf	(btemp+10)^0,w,c
 13395  011158  262D               	addwf	(btemp+8)^0,f,c
 13396  01115A  5030               	movf	(btemp+11)^0,w,c
 13397  01115C  222E               	addwfc	(btemp+9)^0,f,c
 13398  01115E  502E               	movf	(btemp+9)^0,w,c
 13399  011160  E106               	bnz	u9970
 13400  011162  0E1A               	movlw	26
 13401  011164  5C2D               	subwf	(btemp+8)^0,w,c
 13402  011166  B0D8               	btfsc	status,0,c
 13403  011168  D002               	goto	u9970
 13404  01116A  0E01               	movlw	1
 13405  01116C  D001               	goto	u9980
 13406  01116E                     u9970:
 13407  01116E  0E00               	movlw	0
 13408  011170                     u9980:
 13409  011170  6E2F               	movwf	(btemp+10)^0,c
 13410  011172  6A30               	clrf	(btemp+11)^0,c
 13411                           
 13412                           ;stkvar	_efgtoa$4989 @ sp[(-56)+0]
 13413  011174  0EC8               	movlw	-56
 13414  011176  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13415  01117C  0EC9               	movlw	-55
 13416  01117E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13417                           
 13418                           ;stkvar	_efgtoa$4989 @ sp[(-56)+0]
 13419  011184  0EC8               	movlw	-56
 13420  011186  006F FF8C  F025    	movff	plusw1,btemp
 13421  01118C  0EC9               	movlw	-55
 13422  01118E  50E3               	movf	plusw1,w,c
 13423  011190  1025               	iorwf	btemp^0,w,c
 13424  011192  A4D8               	btfss	status,2,c
 13425  011194  D002               	goto	l10419
 13426  011196  0E65               	movlw	101
 13427  011198  D001               	goto	L12
 13428  01119A                     l10419:
 13429  01119A  0E45               	movlw	69
 13430  01119C                     L12:
 13431  01119C  6E2F               	movwf	(btemp+10)^0,c
 13432  01119E  0E00               	movlw	0
 13433  0111A0  6E30               	movwf	(btemp+11)^0,c
 13434                           
 13435                           ;stkvar	_efgtoa$4988 @ sp[(-56)+2]
 13436  0111A2  0ECA               	movlw	-54
 13437  0111A4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13438  0111AA  0ECB               	movlw	-53
 13439  0111AC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13440                           
 13441                           ;stkvar	_efgtoa$4988 @ sp[(-56)+2]
 13442                           ;stkvar	_i @ sp[(-56)+36]
 13443  0111B2  0EEC               	movlw	-20
 13444  0111B4  006F FF8C  F02F    	movff	plusw1,btemp+10
 13445  0111BA  0EED               	movlw	-19
 13446  0111BC  006F FF8C  F030    	movff	plusw1,btemp+11
 13447  0111C2  0E94               	movlw	low _dbuf
 13448  0111C4  242F               	addwf	(btemp+10)^0,w,c
 13449  0111C6  6ED9               	movwf	fsr2l,c
 13450  0111C8  0E03               	movlw	high _dbuf
 13451  0111CA  2030               	addwfc	(btemp+11)^0,w,c
 13452  0111CC  6EDA               	movwf	fsr2h,c
 13453  0111CE  0ECA               	movlw	-54
 13454  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13455                           
 13456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13457                           ;stkvar	_w @ sp[(-56)+38]
 13458  0111D6  50E1               	movf	fsr1l,w,c
 13459  0111D8  0FEE               	addlw	-18
 13460  0111DA  6ED9               	movwf	fsr2l,c
 13461  0111DC  50E2               	movf	fsr1h,w,c
 13462  0111DE  6EDA               	movwf	fsr2h,c
 13463  0111E0  0EFF               	movlw	255
 13464  0111E2  22DA               	addwfc	fsr2h,f,c
 13465  0111E4  06DE               	decf	postinc2,f,c
 13466  0111E6  0E00               	movlw	0
 13467  0111E8  5ADD               	subwfb	postdec2,f,c
 13468                           
 13469                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13470                           ;stkvar	_i @ sp[(-56)+36]
 13471  0111EA  0EEC               	movlw	-20
 13472  0111EC  006F FF8C  F02F    	movff	plusw1,btemp+10
 13473  0111F2  0EED               	movlw	-19
 13474  0111F4  006F FF8C  F030    	movff	plusw1,btemp+11
 13475  0111FA  0E94               	movlw	low _dbuf
 13476  0111FC  242F               	addwf	(btemp+10)^0,w,c
 13477  0111FE  6E2D               	movwf	(btemp+8)^0,c
 13478  011200  0E03               	movlw	high _dbuf
 13479  011202  2030               	addwfc	(btemp+11)^0,w,c
 13480  011204  6E2E               	movwf	(btemp+9)^0,c
 13481  011206  0060  F0B7  FFE6   	movff	btemp+8,postinc1
 13482  01120C  0060  F0BB  FFE6   	movff	btemp+9,postinc1
 13483                           
 13484                           ;stkvar	_n @ sp[(-58)+32]
 13485  011212  0E94               	movlw	low _dbuf
 13486  011214  6E2F               	movwf	(btemp+10)^0,c
 13487  011216  0E03               	movlw	high _dbuf
 13488  011218  6E30               	movwf	(btemp+11)^0,c
 13489  01121A  0EE6               	movlw	-26
 13490  01121C  50E3               	movf	plusw1,w,c
 13491  01121E  262F               	addwf	(btemp+10)^0,f,c
 13492  011220  0EE7               	movlw	-25
 13493  011222  50E3               	movf	plusw1,w,c
 13494  011224  2230               	addwfc	(btemp+11)^0,f,c
 13495  011226  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 13496  01122C  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 13497  011232  ECCC  F0B9         	call	_strcpy	;wreg free
 13498  011236  EF16  F081         	goto	l10171
 13499  01123A                     l2036:
 13500                           
 13501                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13502  01123A  0EC1               	movlw	193
 13503  01123C  26E1               	addwf	fsr1l,f,c
 13504  01123E  0EFF               	movlw	255
 13505  011240  22E2               	addwfc	fsr1h,f,c
 13506  011242  0012               	return		;funcret
 13507  011244                     __end_of_efgtoa:
 13508                           	opt callstack 0
 13509                           
 13510 ;; *************** function _tolower *****************
 13511 ;; Defined at:
 13512 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13513 ;; Parameters:    Size  Location     Type
 13514 ;;  c               2  [STACK] int 
 13515 ;; Auto vars:     Size  Location     Type
 13516 ;;		None
 13517 ;; Return value:  Size  Location     Type
 13518 ;;                  2  [STACK] int 
 13519 ;; Registers used:
 13520 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13521 ;; Tracked objects:
 13522 ;;		On entry : 0/0
 13523 ;;		On exit  : 0/0
 13524 ;;		Unchanged: 0/0
 13525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13530 ;;Total ram usage:        0 bytes
 13531 ;; Hardware stack levels used:    1
 13532 ;; Hardware stack levels required when called:    8
 13533 ;; This function calls:
 13534 ;;		_isupper
 13535 ;; This function is called by:
 13536 ;;		_efgtoa
 13537 ;;		_vfpfcnvrt
 13538 ;; This function uses a reentrant model
 13539 ;;
 13540                           
 13541                           	psect	text49
 13542  017EEE                     __ptext49:
 13543                           	opt callstack 0
 13544  017EEE                     _tolower:
 13545                           	opt callstack 0
 13546                           
 13547                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13548  017EEE  52E6               	movf	postinc1,f,c
 13549  017EF0  52E6               	movf	postinc1,f,c
 13550                           
 13551                           ;stkvar	_c @ sp[(-2)+-2]
 13552                           
 13553                           ;incstack = 0
 13554  017EF2  0EFC               	movlw	-4
 13555  017EF4  50E3               	movf	plusw1,w,c
 13556  017EF6  0FBF               	addlw	191
 13557  017EF8  6E2F               	movwf	(btemp+10)^0,c
 13558  017EFA  0EFD               	movlw	-3
 13559  017EFC  006F FF8C  F030    	movff	plusw1,btemp+11
 13560  017F02  0EFF               	movlw	255
 13561  017F04  2230               	addwfc	(btemp+11)^0,f,c
 13562  017F06  5030               	movf	(btemp+11)^0,w,c
 13563  017F08  E106               	bnz	u4870
 13564  017F0A  0E1A               	movlw	26
 13565  017F0C  5C2F               	subwf	(btemp+10)^0,w,c
 13566  017F0E  B0D8               	btfsc	status,0,c
 13567  017F10  D002               	goto	u4870
 13568  017F12  0E01               	movlw	1
 13569  017F14  D001               	goto	u4880
 13570  017F16                     u4870:
 13571  017F16  0E00               	movlw	0
 13572  017F18                     u4880:
 13573  017F18  6E2F               	movwf	(btemp+10)^0,c
 13574  017F1A  6A30               	clrf	(btemp+11)^0,c
 13575                           
 13576                           ;stkvar	_tolower$5655 @ sp[(-2)+0]
 13577  017F1C  0EFE               	movlw	-2
 13578  017F1E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13579  017F24  0EFF               	movlw	-1
 13580  017F26  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13581                           
 13582                           ;stkvar	_tolower$5655 @ sp[(-2)+0]
 13583  017F2C  0EFE               	movlw	-2
 13584  017F2E  006F FF8C  F025    	movff	plusw1,btemp
 13585  017F34  0EFF               	movlw	-1
 13586  017F36  50E3               	movf	plusw1,w,c
 13587  017F38  1025               	iorwf	btemp^0,w,c
 13588  017F3A  B4D8               	btfsc	status,2,c
 13589  017F3C  D00D               	goto	l6663
 13590                           
 13591                           ;stkvar	_c @ sp[(-2)+-2]
 13592  017F3E  0EFC               	movlw	-4
 13593  017F40  006F FF8C  F025    	movff	plusw1,btemp
 13594  017F46  0EFD               	movlw	-3
 13595  017F48  006F FF8C  F026    	movff	plusw1,btemp+1
 13596  017F4E  0E20               	movlw	32
 13597  017F50  1225               	iorwf	btemp^0,f,c
 13598  017F52  0E00               	movlw	0
 13599  017F54  1226               	iorwf	(btemp+1)^0,f,c
 13600  017F56  D008               	goto	l3059
 13601  017F58                     l6663:
 13602                           
 13603                           ;stkvar	_c @ sp[(-2)+-2]
 13604  017F58  0EFC               	movlw	-4
 13605  017F5A  006F FF8C  F025    	movff	plusw1,btemp
 13606  017F60  0EFD               	movlw	-3
 13607  017F62  006F FF8C  F026    	movff	plusw1,btemp+1
 13608  017F68                     l3059:
 13609                           
 13610                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13611  017F68  52E5               	movf	postdec1,f,c
 13612  017F6A  52E5               	movf	postdec1,f,c
 13613  017F6C  52E5               	movf	postdec1,f,c
 13614  017F6E  52E5               	movf	postdec1,f,c
 13615  017F70  0012               	return		;funcret
 13616  017F72                     __end_of_tolower:
 13617                           	opt callstack 0
 13618                           
 13619 ;; *************** function _isupper *****************
 13620 ;; Defined at:
 13621 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13622 ;; Parameters:    Size  Location     Type
 13623 ;;  c               2  [STACK] int 
 13624 ;; Auto vars:     Size  Location     Type
 13625 ;;		None
 13626 ;; Return value:  Size  Location     Type
 13627 ;;                  2  [STACK] int 
 13628 ;; Registers used:
 13629 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13630 ;; Tracked objects:
 13631 ;;		On entry : 0/0
 13632 ;;		On exit  : 0/0
 13633 ;;		Unchanged: 0/0
 13634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13639 ;;Total ram usage:        0 bytes
 13640 ;; Hardware stack levels used:    1
 13641 ;; Hardware stack levels required when called:    7
 13642 ;; This function calls:
 13643 ;;		Nothing
 13644 ;; This function is called by:
 13645 ;;		_efgtoa
 13646 ;;		_xtoa
 13647 ;;		_vfpfcnvrt
 13648 ;;		_tolower
 13649 ;; This function uses a reentrant model
 13650 ;;
 13651                           
 13652                           	psect	text50
 13653  018A94                     __ptext50:
 13654                           	opt callstack 0
 13655  018A94                     _isupper:
 13656                           	opt callstack 16
 13657                           
 13658                           ;stkvar	_c @ sp[(0)+-2]
 13659                           
 13660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13661                           ;incstack = 0
 13662  018A94  0EFE               	movlw	-2
 13663  018A96  50E3               	movf	plusw1,w,c
 13664  018A98  0FBF               	addlw	191
 13665  018A9A  6E2F               	movwf	(btemp+10)^0,c
 13666  018A9C  0EFF               	movlw	-1
 13667  018A9E  006F FF8C  F030    	movff	plusw1,btemp+11
 13668  018AA4  0EFF               	movlw	255
 13669  018AA6  2230               	addwfc	(btemp+11)^0,f,c
 13670  018AA8  5030               	movf	(btemp+11)^0,w,c
 13671  018AAA  E106               	bnz	u4690
 13672  018AAC  0E1A               	movlw	26
 13673  018AAE  5C2F               	subwf	(btemp+10)^0,w,c
 13674  018AB0  B0D8               	btfsc	status,0,c
 13675  018AB2  D002               	goto	u4690
 13676  018AB4  0E01               	movlw	1
 13677  018AB6  D001               	goto	u4700
 13678  018AB8                     u4690:
 13679  018AB8  0E00               	movlw	0
 13680  018ABA                     u4700:
 13681  018ABA  6E25               	movwf	btemp^0,c
 13682  018ABC  6A26               	clrf	(btemp+1)^0,c
 13683                           
 13684                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13685  018ABE  52E5               	movf	postdec1,f,c
 13686  018AC0  52E5               	movf	postdec1,f,c
 13687  018AC2  0012               	return		;funcret
 13688  018AC4                     __end_of_isupper:
 13689                           	opt callstack 0
 13690                           
 13691 ;; *************** function _strcpy *****************
 13692 ;; Defined at:
 13693 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13694 ;; Parameters:    Size  Location     Type
 13695 ;;  dest            2  [STACK] PTR unsigned char 
 13696 ;;		 -> dbuf(80), 
 13697 ;;  src             2  [STACK] PTR const unsigned char 
 13698 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13699 ;;		 -> dbuf(80), 
 13700 ;; Auto vars:     Size  Location     Type
 13701 ;;  d               2  [STACK] PTR unsigned char 
 13702 ;;		 -> dbuf(80), 
 13703 ;;  s               2  [STACK] PTR const unsigned char 
 13704 ;;		 -> STR_51(4), STR_50(4), STR_47(4), STR_46(4), 
 13705 ;;		 -> dbuf(80), 
 13706 ;; Return value:  Size  Location     Type
 13707 ;;                  2  [STACK] PTR unsigned char 
 13708 ;; Registers used:
 13709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13710 ;; Tracked objects:
 13711 ;;		On entry : 0/0
 13712 ;;		On exit  : 0/0
 13713 ;;		Unchanged: 0/0
 13714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13719 ;;Total ram usage:        0 bytes
 13720 ;; Hardware stack levels used:    1
 13721 ;; Hardware stack levels required when called:    7
 13722 ;; This function calls:
 13723 ;;		Nothing
 13724 ;; This function is called by:
 13725 ;;		_efgtoa
 13726 ;; This function uses a reentrant model
 13727 ;;
 13728                           
 13729                           	psect	text51
 13730  017398                     __ptext51:
 13731                           	opt callstack 0
 13732  017398                     _strcpy:
 13733                           	opt callstack 0
 13734                           
 13735                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13736  017398  52E6               	movf	postinc1,f,c
 13737  01739A  52E6               	movf	postinc1,f,c
 13738  01739C  52E6               	movf	postinc1,f,c
 13739  01739E  52E6               	movf	postinc1,f,c
 13740                           
 13741                           ;stkvar	_src @ sp[(-4)+-4]
 13742                           
 13743                           ;incstack = 0
 13744  0173A0  0EF8               	movlw	-8
 13745  0173A2  006F FF8C  F02F    	movff	plusw1,btemp+10
 13746  0173A8  0EF9               	movlw	-7
 13747  0173AA  006F FF8C  F030    	movff	plusw1,btemp+11
 13748                           
 13749                           ;stkvar	_s @ sp[(-4)+2]
 13750  0173B0  0EFF               	movlw	-1
 13751  0173B2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13752  0173B8  0EFE               	movlw	-2
 13753  0173BA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13754                           
 13755                           ;stkvar	_dest @ sp[(-4)+-2]
 13756  0173C0  0EFA               	movlw	-6
 13757  0173C2  006F FF8C  F02F    	movff	plusw1,btemp+10
 13758  0173C8  0EFB               	movlw	-5
 13759  0173CA  006F FF8C  F030    	movff	plusw1,btemp+11
 13760                           
 13761                           ;stkvar	_d @ sp[(-4)+0]
 13762  0173D0  0EFD               	movlw	-3
 13763  0173D2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13764  0173D8  0EFC               	movlw	-4
 13765  0173DA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13766  0173E0                     l10045:
 13767                           
 13768                           ;stkvar	_s @ sp[(-4)+2]
 13769  0173E0  50E1               	movf	fsr1l,w,c
 13770  0173E2  0FFE               	addlw	-2
 13771  0173E4  6ED9               	movwf	fsr2l,c
 13772  0173E6  50E2               	movf	fsr1h,w,c
 13773  0173E8  6EDA               	movwf	fsr2h,c
 13774  0173EA  0EFF               	movlw	255
 13775  0173EC  22DA               	addwfc	fsr2h,f,c
 13776  0173EE  006F FF7C  F02F    	movff	indf2,btemp+10
 13777  0173F4  0E01               	movlw	1
 13778  0173F6  26DE               	addwf	postinc2,f,c
 13779  0173F8  006F FF7C  F030    	movff	indf2,btemp+11
 13780  0173FE  0E00               	movlw	0
 13781  017400  22DD               	addwfc	postdec2,f,c
 13782  017402  0060  F0BF  FFF6   	movff	btemp+10,tblptrl
 13783  017408  0060  F0C3  FFF7   	movff	btemp+11,tblptrh
 13784  01740E  0E00               	movlw	low (__mediumconst shr (0+16))
 13785  017410  6EF8               	movwf	tblptru,c
 13786                           
 13787                           ;stkvar	_d @ sp[(-4)+0]
 13788  017412  50E1               	movf	fsr1l,w,c
 13789  017414  0FFC               	addlw	-4
 13790  017416  6ED9               	movwf	fsr2l,c
 13791  017418  50E2               	movf	fsr1h,w,c
 13792  01741A  6EDA               	movwf	fsr2h,c
 13793  01741C  0EFF               	movlw	255
 13794  01741E  22DA               	addwfc	fsr2h,f,c
 13795  017420  006F FF7C  F02F    	movff	indf2,btemp+10
 13796  017426  0E01               	movlw	1
 13797  017428  26DE               	addwf	postinc2,f,c
 13798  01742A  006F FF7C  F030    	movff	indf2,btemp+11
 13799  017430  0E00               	movlw	0
 13800  017432  22DD               	addwfc	postdec2,f,c
 13801  017434  0060  F0BF  FFD9   	movff	btemp+10,fsr2l
 13802  01743A  0060  F0C3  FFDA   	movff	btemp+11,fsr2h
 13803  017440  0E1F               	movlw	(high __ramtop+-1)
 13804  017442  64F7               	cpfsgt	tblptrh,c
 13805  017444  D003               	bra	u9287
 13806  017446  0008               	tblrd		*
 13807  017448  50F5               	movf	tablat,w,c
 13808  01744A  D007               	bra	u9280
 13809  01744C                     u9287:
 13810  01744C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13811  017452  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13812  017458  50EF               	movf	indf0,w,c
 13813  01745A                     u9280:
 13814  01745A  6EDF               	movwf	indf2,c
 13815  01745C  50DF               	movf	indf2,w,c
 13816  01745E  A4D8               	btfss	status,2,c
 13817  017460  D7BF               	goto	l10045
 13818                           
 13819                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13820  017462  0EF8               	movlw	248
 13821  017464  26E1               	addwf	fsr1l,f,c
 13822  017466  0EFF               	movlw	255
 13823  017468  22E2               	addwfc	fsr1h,f,c
 13824  01746A  0012               	return		;funcret
 13825  01746C                     __end_of_strcpy:
 13826                           	opt callstack 0
 13827                           
 13828 ;; *************** function _floorf *****************
 13829 ;; Defined at:
 13830 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13831 ;; Parameters:    Size  Location     Type
 13832 ;;  x               4  [STACK] float 
 13833 ;; Auto vars:     Size  Location     Type
 13834 ;;  u               4  [STACK] struct .
 13835 ;;  m               4  [STACK] unsigned long 
 13836 ;;  e               2  [STACK] int 
 13837 ;; Return value:  Size  Location     Type
 13838 ;;                  4  [STACK] float 
 13839 ;; Registers used:
 13840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13841 ;; Tracked objects:
 13842 ;;		On entry : 0/0
 13843 ;;		On exit  : 0/0
 13844 ;;		Unchanged: 0/0
 13845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13850 ;;Total ram usage:        0 bytes
 13851 ;; Hardware stack levels used:    1
 13852 ;; Hardware stack levels required when called:    7
 13853 ;; This function calls:
 13854 ;;		Nothing
 13855 ;; This function is called by:
 13856 ;;		_efgtoa
 13857 ;; This function uses a reentrant model
 13858 ;;
 13859                           
 13860                           	psect	text52
 13861  014856                     __ptext52:
 13862                           	opt callstack 0
 13863  014856                     _floorf:
 13864                           	opt callstack 0
 13865                           
 13866                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13867  014856  0E0A               	movlw	10
 13868  014858  26E1               	addwf	fsr1l,f,c
 13869  01485A  0E00               	movlw	0
 13870  01485C  22E2               	addwfc	fsr1h,f,c
 13871                           
 13872                           ;incstack = 0
 13873  01485E  0060  F254  F02D   	movff	floorf@F524,btemp+8
 13874  014864  0060  F258  F02E   	movff	floorf@F524+1,btemp+9
 13875  01486A  0060  F25C  F02F   	movff	floorf@F524+2,btemp+10
 13876  014870  0060  F260  F030   	movff	floorf@F524+3,btemp+11
 13877                           
 13878                           ;stkvar	_u @ sp[(-10)+0]
 13879  014876  0EF6               	movlw	-10
 13880  014878  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13881  01487E  0EF7               	movlw	-9
 13882  014880  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13883  014886  0EF8               	movlw	-8
 13884  014888  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13885  01488E  0EF9               	movlw	-7
 13886  014890  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13887                           
 13888                           ;stkvar	_x @ sp[(-10)+-4]
 13889  014896  0EF2               	movlw	-14
 13890  014898  006F FF8C  F02D    	movff	plusw1,btemp+8
 13891  01489E  0EF3               	movlw	-13
 13892  0148A0  006F FF8C  F02E    	movff	plusw1,btemp+9
 13893  0148A6  0EF4               	movlw	-12
 13894  0148A8  006F FF8C  F02F    	movff	plusw1,btemp+10
 13895  0148AE  0EF5               	movlw	-11
 13896  0148B0  006F FF8C  F030    	movff	plusw1,btemp+11
 13897                           
 13898                           ;stkvar	_u @ sp[(-10)+0]
 13899  0148B6  0EF6               	movlw	-10
 13900  0148B8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13901  0148BE  0EF7               	movlw	-9
 13902  0148C0  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13903  0148C6  0EF8               	movlw	-8
 13904  0148C8  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 13905  0148CE  0EF9               	movlw	-7
 13906  0148D0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 13907  0148D6  0E81               	movlw	129
 13908  0148D8  6E2F               	movwf	(btemp+10)^0,c
 13909  0148DA  0EFF               	movlw	255
 13910  0148DC  6E30               	movwf	(btemp+11)^0,c
 13911                           
 13912                           ;stkvar	_u @ sp[(-10)+0]
 13913  0148DE  0EF6               	movlw	-10
 13914  0148E0  006F FF8C  F029    	movff	plusw1,btemp+4
 13915  0148E6  0EF7               	movlw	-9
 13916  0148E8  006F FF8C  F02A    	movff	plusw1,btemp+5
 13917  0148EE  0EF8               	movlw	-8
 13918  0148F0  006F FF8C  F02B    	movff	plusw1,btemp+6
 13919  0148F6  0EF9               	movlw	-7
 13920  0148F8  006F FF8C  F02C    	movff	plusw1,btemp+7
 13921  0148FE  0E18               	movlw	24
 13922  014900  D005               	goto	u4900
 13923  014902                     u4905:
 13924  014902  90D8               	bcf	status,0,c
 13925  014904  322C               	rrcf	(btemp+7)^0,f,c
 13926  014906  322B               	rrcf	(btemp+6)^0,f,c
 13927  014908  322A               	rrcf	(btemp+5)^0,f,c
 13928  01490A  3229               	rrcf	(btemp+4)^0,f,c
 13929  01490C                     u4900:
 13930  01490C  2EE8               	decfsz	wreg,f,c
 13931  01490E  D7F9               	goto	u4905
 13932  014910  0060  F0A4  F02D   	movff	btemp+4,btemp+8
 13933  014916  0060  F0A8  F02E   	movff	btemp+5,btemp+9
 13934  01491C  0EFF               	movlw	255
 13935  01491E  162D               	andwf	(btemp+8)^0,f,c
 13936  014920  0E00               	movlw	0
 13937  014922  162E               	andwf	(btemp+9)^0,f,c
 13938  014924  502F               	movf	(btemp+10)^0,w,c
 13939  014926  262D               	addwf	(btemp+8)^0,f,c
 13940  014928  5030               	movf	(btemp+11)^0,w,c
 13941  01492A  222E               	addwfc	(btemp+9)^0,f,c
 13942                           
 13943                           ;stkvar	_e @ sp[(-10)+8]
 13944  01492C  0EFE               	movlw	-2
 13945  01492E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 13946  014934  0EFF               	movlw	-1
 13947  014936  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 13948                           
 13949                           ;stkvar	_e @ sp[(-10)+8]
 13950  01493C  0EFF               	movlw	-1
 13951  01493E  BEE3               	btfsc	plusw1,7,c
 13952  014940  D019               	goto	l6677
 13953  014942  0EFF               	movlw	-1
 13954  014944  50E3               	movf	plusw1,w,c
 13955  014946  E108               	bnz	u4910
 13956  014948  0EFE               	movlw	-2
 13957  01494A  006F FF8C  F025    	movff	plusw1,btemp
 13958  014950  0E17               	movlw	23
 13959  014952  5E25               	subwf	btemp^0,f,c
 13960  014954  A0D8               	btfss	status,0,c
 13961  014956  D00E               	goto	l6677
 13962  014958                     u4910:
 13963                           
 13964                           ;stkvar	_x @ sp[(-10)+-4]
 13965  014958  0EF2               	movlw	-14
 13966  01495A  006F FF8C  F025    	movff	plusw1,btemp
 13967  014960  0EF3               	movlw	-13
 13968  014962  006F FF8C  F026    	movff	plusw1,btemp+1
 13969  014968  0EF4               	movlw	-12
 13970  01496A  006F FF8C  F027    	movff	plusw1,btemp+2
 13971  014970  0EF5               	movlw	-11
 13972  014972  D11F               	goto	L13
 13973  014974                     l6677:
 13974                           
 13975                           ;stkvar	_e @ sp[(-10)+8]
 13976  014974  0EFF               	movlw	-1
 13977  014976  BEE3               	btfsc	plusw1,7,c
 13978  014978  D0B4               	goto	l6693
 13979                           
 13980                           ;stkvar	_e @ sp[(-10)+8]
 13981  01497A  0EFE               	movlw	-2
 13982  01497C  006F FF8C  F030    	movff	plusw1,btemp+11
 13983  014982  0EFF               	movlw	255
 13984  014984  6E29               	movwf	(btemp+4)^0,c
 13985  014986  0EFF               	movlw	255
 13986  014988  6E2A               	movwf	(btemp+5)^0,c
 13987  01498A  0E7F               	movlw	127
 13988  01498C  6E2B               	movwf	(btemp+6)^0,c
 13989  01498E  0E00               	movlw	0
 13990  014990  6E2C               	movwf	(btemp+7)^0,c
 13991  014992                     u4935:
 13992  014992  6630               	tstfsz	(btemp+11)^0,c
 13993  014994  D001               	goto	u4936
 13994  014996  D007               	goto	u4937
 13995  014998                     u4936:
 13996  014998  342C               	rlcf	(btemp+7)^0,w,c
 13997  01499A  322C               	rrcf	(btemp+7)^0,f,c
 13998  01499C  322B               	rrcf	(btemp+6)^0,f,c
 13999  01499E  322A               	rrcf	(btemp+5)^0,f,c
 14000  0149A0  3229               	rrcf	(btemp+4)^0,f,c
 14001  0149A2  2E30               	decfsz	(btemp+11)^0,f,c
 14002  0149A4  D7F6               	goto	u4935
 14003  0149A6                     u4937:
 14004                           
 14005                           ;stkvar	_m @ sp[(-10)+4]
 14006  0149A6  0EFA               	movlw	-6
 14007  0149A8  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 14008  0149AE  0EFB               	movlw	-5
 14009  0149B0  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 14010  0149B6  0EFC               	movlw	-4
 14011  0149B8  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 14012  0149BE  0EFD               	movlw	-3
 14013  0149C0  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 14014                           
 14015                           ;stkvar	_m @ sp[(-10)+4]
 14016                           ;stkvar	_u @ sp[(-10)+0]
 14017  0149C6  0EF6               	movlw	-10
 14018  0149C8  006F FF8C  F02D    	movff	plusw1,btemp+8
 14019  0149CE  0EF7               	movlw	-9
 14020  0149D0  006F FF8C  F02E    	movff	plusw1,btemp+9
 14021  0149D6  0EF8               	movlw	-8
 14022  0149D8  006F FF8C  F02F    	movff	plusw1,btemp+10
 14023  0149DE  0EF9               	movlw	-7
 14024  0149E0  006F FF8C  F030    	movff	plusw1,btemp+11
 14025  0149E6  0EFA               	movlw	-6
 14026  0149E8  50E3               	movf	plusw1,w,c
 14027  0149EA  162D               	andwf	(btemp+8)^0,f,c
 14028  0149EC  0EFB               	movlw	-5
 14029  0149EE  50E3               	movf	plusw1,w,c
 14030  0149F0  162E               	andwf	(btemp+9)^0,f,c
 14031  0149F2  0EFC               	movlw	-4
 14032  0149F4  50E3               	movf	plusw1,w,c
 14033  0149F6  162F               	andwf	(btemp+10)^0,f,c
 14034  0149F8  0EFD               	movlw	-3
 14035  0149FA  50E3               	movf	plusw1,w,c
 14036  0149FC  1630               	andwf	(btemp+11)^0,f,c
 14037  0149FE  502D               	movf	(btemp+8)^0,w,c
 14038  014A00  102E               	iorwf	(btemp+9)^0,w,c
 14039  014A02  102F               	iorwf	(btemp+10)^0,w,c
 14040  014A04  1030               	iorwf	(btemp+11)^0,w,c
 14041  014A06  B4D8               	btfsc	status,2,c
 14042  014A08  D7A7               	goto	u4910
 14043                           
 14044                           ;stkvar	_u @ sp[(-10)+0]
 14045  014A0A  0EF6               	movlw	-10
 14046  014A0C  006F FF8C  F02D    	movff	plusw1,btemp+8
 14047  014A12  0EF7               	movlw	-9
 14048  014A14  006F FF8C  F02E    	movff	plusw1,btemp+9
 14049  014A1A  0EF8               	movlw	-8
 14050  014A1C  006F FF8C  F02F    	movff	plusw1,btemp+10
 14051  014A22  0EF9               	movlw	-7
 14052  014A24  006F FF8C  F030    	movff	plusw1,btemp+11
 14053  014A2A  0E20               	movlw	32
 14054  014A2C  D005               	goto	u4950
 14055  014A2E                     u4955:
 14056  014A2E  90D8               	bcf	status,0,c
 14057  014A30  3230               	rrcf	(btemp+11)^0,f,c
 14058  014A32  322F               	rrcf	(btemp+10)^0,f,c
 14059  014A34  322E               	rrcf	(btemp+9)^0,f,c
 14060  014A36  322D               	rrcf	(btemp+8)^0,f,c
 14061  014A38                     u4950:
 14062  014A38  2EE8               	decfsz	wreg,f,c
 14063  014A3A  D7F9               	goto	u4955
 14064  014A3C  502D               	movf	(btemp+8)^0,w,c
 14065  014A3E  B4D8               	btfsc	status,2,c
 14066  014A40  D028               	goto	l6691
 14067                           
 14068                           ;stkvar	_m @ sp[(-10)+4]
 14069                           ;stkvar	_u @ sp[(-10)+0]
 14070  014A42  0EF6               	movlw	-10
 14071  014A44  50E3               	movf	plusw1,w,c
 14072  014A46  6E25               	movwf	btemp^0,c
 14073  014A48  0EFA               	movlw	-6
 14074  014A4A  50E3               	movf	plusw1,w,c
 14075  014A4C  2625               	addwf	btemp^0,f,c
 14076  014A4E  0EF6               	movlw	-10
 14077  014A50  0060  F097  FFE3   	movff	btemp,plusw1
 14078  014A56  0EF7               	movlw	-9
 14079  014A58  50E3               	movf	plusw1,w,c
 14080  014A5A  6E25               	movwf	btemp^0,c
 14081  014A5C  0EFB               	movlw	-5
 14082  014A5E  50E3               	movf	plusw1,w,c
 14083  014A60  2225               	addwfc	btemp^0,f,c
 14084  014A62  0EF7               	movlw	-9
 14085  014A64  0060  F097  FFE3   	movff	btemp,plusw1
 14086  014A6A  0EF8               	movlw	-8
 14087  014A6C  50E3               	movf	plusw1,w,c
 14088  014A6E  6E25               	movwf	btemp^0,c
 14089  014A70  0EFC               	movlw	-4
 14090  014A72  50E3               	movf	plusw1,w,c
 14091  014A74  2225               	addwfc	btemp^0,f,c
 14092  014A76  0EF8               	movlw	-8
 14093  014A78  0060  F097  FFE3   	movff	btemp,plusw1
 14094  014A7E  0EF9               	movlw	-7
 14095  014A80  50E3               	movf	plusw1,w,c
 14096  014A82  6E25               	movwf	btemp^0,c
 14097  014A84  0EFD               	movlw	-3
 14098  014A86  50E3               	movf	plusw1,w,c
 14099  014A88  2225               	addwfc	btemp^0,f,c
 14100  014A8A  0EF9               	movlw	-7
 14101  014A8C  0060  F097  FFE3   	movff	btemp,plusw1
 14102  014A92                     l6691:
 14103                           
 14104                           ;stkvar	_m @ sp[(-10)+4]
 14105  014A92  0EFA               	movlw	-6
 14106  014A94  006F FF8C  F02D    	movff	plusw1,btemp+8
 14107  014A9A  0EFB               	movlw	-5
 14108  014A9C  006F FF8C  F02E    	movff	plusw1,btemp+9
 14109  014AA2  0EFC               	movlw	-4
 14110  014AA4  006F FF8C  F02F    	movff	plusw1,btemp+10
 14111  014AAA  0EFD               	movlw	-3
 14112  014AAC  006F FF8C  F030    	movff	plusw1,btemp+11
 14113  014AB2  1C2D               	comf	(btemp+8)^0,w,c
 14114  014AB4  6E29               	movwf	(btemp+4)^0,c
 14115  014AB6  1C2E               	comf	(btemp+9)^0,w,c
 14116  014AB8  6E2A               	movwf	(btemp+5)^0,c
 14117  014ABA  1C2F               	comf	(btemp+10)^0,w,c
 14118  014ABC  6E2B               	movwf	(btemp+6)^0,c
 14119  014ABE  1C30               	comf	(btemp+11)^0,w,c
 14120  014AC0  6E2C               	movwf	(btemp+7)^0,c
 14121                           
 14122                           ;stkvar	_u @ sp[(-10)+0]
 14123  014AC2  50E1               	movf	fsr1l,w,c
 14124  014AC4  0FF6               	addlw	-10
 14125  014AC6  6ED9               	movwf	fsr2l,c
 14126  014AC8  50E2               	movf	fsr1h,w,c
 14127  014ACA  6EDA               	movwf	fsr2h,c
 14128  014ACC  0EFF               	movlw	255
 14129  014ACE  22DA               	addwfc	fsr2h,f,c
 14130  014AD0  5029               	movf	(btemp+4)^0,w,c
 14131  014AD2  16DE               	andwf	postinc2,f,c
 14132  014AD4  502A               	movf	(btemp+5)^0,w,c
 14133  014AD6  16DE               	andwf	postinc2,f,c
 14134  014AD8  502B               	movf	(btemp+6)^0,w,c
 14135  014ADA  16DE               	andwf	postinc2,f,c
 14136  014ADC  502C               	movf	(btemp+7)^0,w,c
 14137  014ADE  16DE               	andwf	postinc2,f,c
 14138  014AE0  D05B               	goto	l6701
 14139  014AE2                     l6693:
 14140                           
 14141                           ;stkvar	_u @ sp[(-10)+0]
 14142  014AE2  0EF6               	movlw	-10
 14143  014AE4  006F FF8C  F02D    	movff	plusw1,btemp+8
 14144  014AEA  0EF7               	movlw	-9
 14145  014AEC  006F FF8C  F02E    	movff	plusw1,btemp+9
 14146  014AF2  0EF8               	movlw	-8
 14147  014AF4  006F FF8C  F02F    	movff	plusw1,btemp+10
 14148  014AFA  0EF9               	movlw	-7
 14149  014AFC  006F FF8C  F030    	movff	plusw1,btemp+11
 14150  014B02  0E20               	movlw	32
 14151  014B04  D005               	goto	u4970
 14152  014B06                     u4975:
 14153  014B06  90D8               	bcf	status,0,c
 14154  014B08  3230               	rrcf	(btemp+11)^0,f,c
 14155  014B0A  322F               	rrcf	(btemp+10)^0,f,c
 14156  014B0C  322E               	rrcf	(btemp+9)^0,f,c
 14157  014B0E  322D               	rrcf	(btemp+8)^0,f,c
 14158  014B10                     u4970:
 14159  014B10  2EE8               	decfsz	wreg,f,c
 14160  014B12  D7F9               	goto	u4975
 14161  014B14  662D               	tstfsz	(btemp+8)^0,c
 14162  014B16  D009               	goto	l6697
 14163                           
 14164                           ;stkvar	_u @ sp[(-10)+0]
 14165  014B18  0EF6               	movlw	-10
 14166  014B1A  6AE3               	clrf	plusw1,c
 14167  014B1C  0EF7               	movlw	-9
 14168  014B1E  6AE3               	clrf	plusw1,c
 14169  014B20  0EF8               	movlw	-8
 14170  014B22  6AE3               	clrf	plusw1,c
 14171  014B24  0EF9               	movlw	-7
 14172  014B26  6AE3               	clrf	plusw1,c
 14173  014B28  D037               	goto	l6701
 14174  014B2A                     l6697:
 14175                           
 14176                           ;stkvar	_u @ sp[(-10)+0]
 14177  014B2A  0EF6               	movlw	-10
 14178  014B2C  006F FF8C  F02D    	movff	plusw1,btemp+8
 14179  014B32  0EF7               	movlw	-9
 14180  014B34  006F FF8C  F02E    	movff	plusw1,btemp+9
 14181  014B3A  0EF8               	movlw	-8
 14182  014B3C  006F FF8C  F02F    	movff	plusw1,btemp+10
 14183  014B42  0EF9               	movlw	-7
 14184  014B44  006F FF8C  F030    	movff	plusw1,btemp+11
 14185  014B4A  90D8               	bcf	status,0,c
 14186  014B4C  342D               	rlcf	(btemp+8)^0,w,c
 14187  014B4E  6E29               	movwf	(btemp+4)^0,c
 14188  014B50  342E               	rlcf	(btemp+9)^0,w,c
 14189  014B52  6E2A               	movwf	(btemp+5)^0,c
 14190  014B54  342F               	rlcf	(btemp+10)^0,w,c
 14191  014B56  6E2B               	movwf	(btemp+6)^0,c
 14192  014B58  3430               	rlcf	(btemp+11)^0,w,c
 14193  014B5A  6E2C               	movwf	(btemp+7)^0,c
 14194  014B5C  5029               	movf	(btemp+4)^0,w,c
 14195  014B5E  102A               	iorwf	(btemp+5)^0,w,c
 14196  014B60  102B               	iorwf	(btemp+6)^0,w,c
 14197  014B62  102C               	iorwf	(btemp+7)^0,w,c
 14198  014B64  B4D8               	btfsc	status,2,c
 14199  014B66  D018               	goto	l6701
 14200  014B68  0E00               	movlw	0
 14201  014B6A  6E2D               	movwf	(btemp+8)^0,c
 14202  014B6C  0E00               	movlw	0
 14203  014B6E  6E2E               	movwf	(btemp+9)^0,c
 14204  014B70  0E80               	movlw	128
 14205  014B72  6E2F               	movwf	(btemp+10)^0,c
 14206  014B74  0EBF               	movlw	191
 14207  014B76  6E30               	movwf	(btemp+11)^0,c
 14208                           
 14209                           ;stkvar	_u @ sp[(-10)+0]
 14210  014B78  0EF6               	movlw	-10
 14211  014B7A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14212  014B80  0EF7               	movlw	-9
 14213  014B82  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14214  014B88  0EF8               	movlw	-8
 14215  014B8A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14216  014B90  0EF9               	movlw	-7
 14217  014B92  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14218  014B98                     l6701:
 14219                           
 14220                           ;stkvar	_u @ sp[(-10)+0]
 14221  014B98  0EF6               	movlw	-10
 14222  014B9A  006F FF8C  F025    	movff	plusw1,btemp
 14223  014BA0  0EF7               	movlw	-9
 14224  014BA2  006F FF8C  F026    	movff	plusw1,btemp+1
 14225  014BA8  0EF8               	movlw	-8
 14226  014BAA  006F FF8C  F027    	movff	plusw1,btemp+2
 14227  014BB0  0EF9               	movlw	-7
 14228  014BB2                     L13:
 14229  014BB2  006F FF8C  F028    	movff	plusw1,btemp+3
 14230                           
 14231                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14232  014BB8  0EF2               	movlw	242
 14233  014BBA  26E1               	addwf	fsr1l,f,c
 14234  014BBC  0EFF               	movlw	255
 14235  014BBE  22E2               	addwfc	fsr1h,f,c
 14236  014BC0  0012               	return		;funcret
 14237  014BC2                     __end_of_floorf:
 14238                           	opt callstack 0
 14239                           
 14240 ;; *************** function ___fpclassifyf *****************
 14241 ;; Defined at:
 14242 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 14243 ;; Parameters:    Size  Location     Type
 14244 ;;  x               4  [STACK] float 
 14245 ;; Auto vars:     Size  Location     Type
 14246 ;;  u               4  [STACK] struct .
 14247 ;;  e               2  [STACK] int 
 14248 ;; Return value:  Size  Location     Type
 14249 ;;                  2  [STACK] int 
 14250 ;; Registers used:
 14251 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 14252 ;; Tracked objects:
 14253 ;;		On entry : 0/0
 14254 ;;		On exit  : 0/0
 14255 ;;		Unchanged: 0/0
 14256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14261 ;;Total ram usage:        0 bytes
 14262 ;; Hardware stack levels used:    1
 14263 ;; Hardware stack levels required when called:    7
 14264 ;; This function calls:
 14265 ;;		Nothing
 14266 ;; This function is called by:
 14267 ;;		_efgtoa
 14268 ;; This function uses a reentrant model
 14269 ;;
 14270                           
 14271                           	psect	text53
 14272  016318                     __ptext53:
 14273                           	opt callstack 0
 14274  016318                     ___fpclassifyf:
 14275                           	opt callstack 0
 14276                           
 14277                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14278  016318  0E06               	movlw	6
 14279  01631A  26E1               	addwf	fsr1l,f,c
 14280  01631C  0E00               	movlw	0
 14281  01631E  22E2               	addwfc	fsr1h,f,c
 14282                           
 14283                           ;incstack = 0
 14284  016320  0060  F264  F02D   	movff	___fpclassifyf@F463,btemp+8
 14285  016326  0060  F268  F02E   	movff	___fpclassifyf@F463+1,btemp+9
 14286  01632C  0060  F26C  F02F   	movff	___fpclassifyf@F463+2,btemp+10
 14287  016332  0060  F270  F030   	movff	___fpclassifyf@F463+3,btemp+11
 14288                           
 14289                           ;stkvar	_u @ sp[(-6)+0]
 14290  016338  0EFA               	movlw	-6
 14291  01633A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14292  016340  0EFB               	movlw	-5
 14293  016342  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14294  016348  0EFC               	movlw	-4
 14295  01634A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14296  016350  0EFD               	movlw	-3
 14297  016352  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14298                           
 14299                           ;stkvar	_x @ sp[(-6)+-4]
 14300  016358  0EF6               	movlw	-10
 14301  01635A  006F FF8C  F02D    	movff	plusw1,btemp+8
 14302  016360  0EF7               	movlw	-9
 14303  016362  006F FF8C  F02E    	movff	plusw1,btemp+9
 14304  016368  0EF8               	movlw	-8
 14305  01636A  006F FF8C  F02F    	movff	plusw1,btemp+10
 14306  016370  0EF9               	movlw	-7
 14307  016372  006F FF8C  F030    	movff	plusw1,btemp+11
 14308                           
 14309                           ;stkvar	_u @ sp[(-6)+0]
 14310  016378  0EFA               	movlw	-6
 14311  01637A  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14312  016380  0EFB               	movlw	-5
 14313  016382  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14314  016388  0EFC               	movlw	-4
 14315  01638A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14316  016390  0EFD               	movlw	-3
 14317  016392  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14318                           
 14319                           ;stkvar	_u @ sp[(-6)+0]
 14320  016398  0EFA               	movlw	-6
 14321  01639A  006F FF8C  F02D    	movff	plusw1,btemp+8
 14322  0163A0  0EFB               	movlw	-5
 14323  0163A2  006F FF8C  F02E    	movff	plusw1,btemp+9
 14324  0163A8  0EFC               	movlw	-4
 14325  0163AA  006F FF8C  F02F    	movff	plusw1,btemp+10
 14326  0163B0  0EFD               	movlw	-3
 14327  0163B2  006F FF8C  F030    	movff	plusw1,btemp+11
 14328  0163B8  0E18               	movlw	24
 14329  0163BA  D005               	goto	u4780
 14330  0163BC                     u4785:
 14331  0163BC  90D8               	bcf	status,0,c
 14332  0163BE  3230               	rrcf	(btemp+11)^0,f,c
 14333  0163C0  322F               	rrcf	(btemp+10)^0,f,c
 14334  0163C2  322E               	rrcf	(btemp+9)^0,f,c
 14335  0163C4  322D               	rrcf	(btemp+8)^0,f,c
 14336  0163C6                     u4780:
 14337  0163C6  2EE8               	decfsz	wreg,f,c
 14338  0163C8  D7F9               	goto	u4785
 14339  0163CA  0060  F0B4  F02B   	movff	btemp+8,btemp+6
 14340  0163D0  0060  F0B8  F02C   	movff	btemp+9,btemp+7
 14341  0163D6  0EFF               	movlw	255
 14342  0163D8  162B               	andwf	(btemp+6)^0,f,c
 14343  0163DA  0E00               	movlw	0
 14344  0163DC  162C               	andwf	(btemp+7)^0,f,c
 14345                           
 14346                           ;stkvar	_e @ sp[(-6)+4]
 14347  0163DE  0EFE               	movlw	-2
 14348  0163E0  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 14349  0163E6  0EFF               	movlw	-1
 14350  0163E8  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 14351                           
 14352                           ;stkvar	_e @ sp[(-6)+4]
 14353  0163EE  0EFE               	movlw	-2
 14354  0163F0  006F FF8C  F025    	movff	plusw1,btemp
 14355  0163F6  0EFF               	movlw	-1
 14356  0163F8  50E3               	movf	plusw1,w,c
 14357  0163FA  1025               	iorwf	btemp^0,w,c
 14358  0163FC  A4D8               	btfss	status,2,c
 14359  0163FE  D023               	goto	l6639
 14360                           
 14361                           ;stkvar	_u @ sp[(-6)+0]
 14362  016400  0EFA               	movlw	-6
 14363  016402  006F FF8C  F02D    	movff	plusw1,btemp+8
 14364  016408  0EFB               	movlw	-5
 14365  01640A  006F FF8C  F02E    	movff	plusw1,btemp+9
 14366  016410  0EFC               	movlw	-4
 14367  016412  006F FF8C  F02F    	movff	plusw1,btemp+10
 14368  016418  0EFD               	movlw	-3
 14369  01641A  006F FF8C  F030    	movff	plusw1,btemp+11
 14370  016420  90D8               	bcf	status,0,c
 14371  016422  342D               	rlcf	(btemp+8)^0,w,c
 14372  016424  6E29               	movwf	(btemp+4)^0,c
 14373  016426  342E               	rlcf	(btemp+9)^0,w,c
 14374  016428  6E2A               	movwf	(btemp+5)^0,c
 14375  01642A  342F               	rlcf	(btemp+10)^0,w,c
 14376  01642C  6E2B               	movwf	(btemp+6)^0,c
 14377  01642E  3430               	rlcf	(btemp+11)^0,w,c
 14378  016430  6E2C               	movwf	(btemp+7)^0,c
 14379  016432  5029               	movf	(btemp+4)^0,w,c
 14380  016434  102A               	iorwf	(btemp+5)^0,w,c
 14381  016436  102B               	iorwf	(btemp+6)^0,w,c
 14382  016438  102C               	iorwf	(btemp+7)^0,w,c
 14383  01643A  A4D8               	btfss	status,2,c
 14384  01643C  D002               	goto	l6635
 14385  01643E  0E02               	movlw	2
 14386  016440  D02E               	goto	L14
 14387  016442                     l6635:
 14388  016442  0E03               	movlw	3
 14389  016444  D02C               	goto	L14
 14390  016446                     l6639:
 14391                           
 14392                           ;stkvar	_e @ sp[(-6)+4]
 14393  016446  0EFE               	movlw	-2
 14394  016448  28E3               	incf	plusw1,w,c
 14395  01644A  E128               	bnz	l6645
 14396  01644C  0EFF               	movlw	-1
 14397  01644E  50E3               	movf	plusw1,w,c
 14398  016450  A4D8               	btfss	status,2,c
 14399  016452  D024               	goto	l6645
 14400                           
 14401                           ;stkvar	_u @ sp[(-6)+0]
 14402  016454  0EFA               	movlw	-6
 14403  016456  006F FF8C  F02D    	movff	plusw1,btemp+8
 14404  01645C  0EFB               	movlw	-5
 14405  01645E  006F FF8C  F02E    	movff	plusw1,btemp+9
 14406  016464  0EFC               	movlw	-4
 14407  016466  006F FF8C  F02F    	movff	plusw1,btemp+10
 14408  01646C  0EFD               	movlw	-3
 14409  01646E  006F FF8C  F030    	movff	plusw1,btemp+11
 14410  016474  0E09               	movlw	9
 14411  016476                     u4825:
 14412  016476  90D8               	bcf	status,0,c
 14413  016478  362D               	rlcf	(btemp+8)^0,f,c
 14414  01647A  362E               	rlcf	(btemp+9)^0,f,c
 14415  01647C  362F               	rlcf	(btemp+10)^0,f,c
 14416  01647E  3630               	rlcf	(btemp+11)^0,f,c
 14417  016480  2EE8               	decfsz	wreg,f,c
 14418  016482  D7F9               	goto	u4825
 14419  016484  502D               	movf	(btemp+8)^0,w,c
 14420  016486  102E               	iorwf	(btemp+9)^0,w,c
 14421  016488  102F               	iorwf	(btemp+10)^0,w,c
 14422  01648A  1030               	iorwf	(btemp+11)^0,w,c
 14423  01648C  A4D8               	btfss	status,2,c
 14424  01648E  D002               	goto	u4830
 14425  016490  0E01               	movlw	1
 14426  016492  D001               	goto	u4840
 14427  016494                     u4830:
 14428  016494  0E00               	movlw	0
 14429  016496                     u4840:
 14430  016496  6E25               	movwf	btemp^0,c
 14431  016498  6A26               	clrf	(btemp+1)^0,c
 14432  01649A  D004               	goto	l2895
 14433  01649C                     l6645:
 14434  01649C  0E04               	movlw	4
 14435  01649E                     L14:
 14436  01649E  6E25               	movwf	btemp^0,c
 14437  0164A0  0E00               	movlw	0
 14438  0164A2  6E26               	movwf	(btemp+1)^0,c
 14439  0164A4                     l2895:
 14440                           
 14441                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14442  0164A4  0EF6               	movlw	246
 14443  0164A6  26E1               	addwf	fsr1l,f,c
 14444  0164A8  0EFF               	movlw	255
 14445  0164AA  22E2               	addwfc	fsr1h,f,c
 14446  0164AC  0012               	return		;funcret
 14447  0164AE                     __end_of___fpclassifyf:
 14448                           	opt callstack 0
 14449                           
 14450 ;; *************** function ___fltol *****************
 14451 ;; Defined at:
 14452 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14453 ;; Parameters:    Size  Location     Type
 14454 ;;  f1              4  [STACK] int 
 14455 ;; Auto vars:     Size  Location     Type
 14456 ;;  exp1            1  [STACK] unsigned char 
 14457 ;;  sign1           1  [STACK] unsigned char 
 14458 ;; Return value:  Size  Location     Type
 14459 ;;                  4  [STACK] long 
 14460 ;; Registers used:
 14461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14462 ;; Tracked objects:
 14463 ;;		On entry : 0/0
 14464 ;;		On exit  : 0/0
 14465 ;;		Unchanged: 0/0
 14466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14471 ;;Total ram usage:        0 bytes
 14472 ;; Hardware stack levels used:    1
 14473 ;; Hardware stack levels required when called:    7
 14474 ;; This function calls:
 14475 ;;		Nothing
 14476 ;; This function is called by:
 14477 ;;		_efgtoa
 14478 ;; This function uses a reentrant model
 14479 ;;
 14480                           
 14481                           	psect	text54
 14482  0164AE                     __ptext54:
 14483                           	opt callstack 0
 14484  0164AE                     ___fltol:
 14485                           	opt callstack 0
 14486                           
 14487                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14488  0164AE  52E6               	movf	postinc1,f,c
 14489  0164B0  52E6               	movf	postinc1,f,c
 14490                           
 14491                           ;stkvar	_f1 @ sp[(-2)+-4]
 14492                           
 14493                           ;incstack = 0
 14494  0164B2  0EFA               	movlw	-6
 14495  0164B4  006F FF8C  F02D    	movff	plusw1,btemp+8
 14496  0164BA  0EFB               	movlw	-5
 14497  0164BC  006F FF8C  F02E    	movff	plusw1,btemp+9
 14498  0164C2  0EFC               	movlw	-4
 14499  0164C4  006F FF8C  F02F    	movff	plusw1,btemp+10
 14500  0164CA  0EFD               	movlw	-3
 14501  0164CC  006F FF8C  F030    	movff	plusw1,btemp+11
 14502  0164D2  0E18               	movlw	24
 14503  0164D4  D005               	goto	u5700
 14504  0164D6                     u5705:
 14505  0164D6  90D8               	bcf	status,0,c
 14506  0164D8  3230               	rrcf	(btemp+11)^0,f,c
 14507  0164DA  322F               	rrcf	(btemp+10)^0,f,c
 14508  0164DC  322E               	rrcf	(btemp+9)^0,f,c
 14509  0164DE  322D               	rrcf	(btemp+8)^0,f,c
 14510  0164E0                     u5700:
 14511  0164E0  2EE8               	decfsz	wreg,f,c
 14512  0164E2  D7F9               	goto	u5705
 14513                           
 14514                           ;stkvar	_exp1 @ sp[(-2)+0]
 14515  0164E4  0EFE               	movlw	-2
 14516  0164E6  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14517  0164EC  0EFE               	movlw	-2
 14518  0164EE  50E3               	movf	plusw1,w,c
 14519  0164F0  A4D8               	btfss	status,2,c
 14520  0164F2  D006               	goto	l7083
 14521  0164F4                     u5710:
 14522  0164F4  0E00               	movlw	0
 14523  0164F6  6E25               	movwf	btemp^0,c
 14524  0164F8  6A26               	clrf	(btemp+1)^0,c
 14525  0164FA  6A27               	clrf	(btemp+2)^0,c
 14526  0164FC  6A28               	clrf	(btemp+3)^0,c
 14527  0164FE  D08B               	goto	l2511
 14528  016500                     l7083:
 14529                           
 14530                           ;stkvar	_f1 @ sp[(-2)+-4]
 14531  016500  0EFA               	movlw	-6
 14532  016502  006F FF8C  F02D    	movff	plusw1,btemp+8
 14533  016508  0EFB               	movlw	-5
 14534  01650A  006F FF8C  F02E    	movff	plusw1,btemp+9
 14535  016510  0EFC               	movlw	-4
 14536  016512  006F FF8C  F02F    	movff	plusw1,btemp+10
 14537  016518  0EFD               	movlw	-3
 14538  01651A  006F FF8C  F030    	movff	plusw1,btemp+11
 14539  016520  0E20               	movlw	32
 14540  016522  D005               	goto	u5720
 14541  016524                     u5725:
 14542  016524  90D8               	bcf	status,0,c
 14543  016526  3230               	rrcf	(btemp+11)^0,f,c
 14544  016528  322F               	rrcf	(btemp+10)^0,f,c
 14545  01652A  322E               	rrcf	(btemp+9)^0,f,c
 14546  01652C  322D               	rrcf	(btemp+8)^0,f,c
 14547  01652E                     u5720:
 14548  01652E  2EE8               	decfsz	wreg,f,c
 14549  016530  D7F9               	goto	u5725
 14550                           
 14551                           ;stkvar	_sign1 @ sp[(-2)+1]
 14552  016532  0EFF               	movlw	-1
 14553  016534  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14554                           
 14555                           ;stkvar	_f1 @ sp[(-2)+-4]
 14556  01653A  0EFC               	movlw	-4
 14557  01653C  8EE3               	bsf	plusw1,7,c
 14558                           
 14559                           ;stkvar	_f1 @ sp[(-2)+-4]
 14560  01653E  50E1               	movf	fsr1l,w,c
 14561  016540  0FFA               	addlw	-6
 14562  016542  6ED9               	movwf	fsr2l,c
 14563  016544  50E2               	movf	fsr1h,w,c
 14564  016546  6EDA               	movwf	fsr2h,c
 14565  016548  0EFF               	movlw	255
 14566  01654A  22DA               	addwfc	fsr2h,f,c
 14567  01654C  0EFF               	movlw	255
 14568  01654E  16DE               	andwf	postinc2,f,c
 14569  016550  0EFF               	movlw	255
 14570  016552  16DE               	andwf	postinc2,f,c
 14571  016554  0EFF               	movlw	255
 14572  016556  16DE               	andwf	postinc2,f,c
 14573  016558  0E00               	movlw	0
 14574  01655A  16DE               	andwf	postinc2,f,c
 14575                           
 14576                           ;stkvar	_exp1 @ sp[(-2)+0]
 14577  01655C  0EFE               	movlw	-2
 14578  01655E  006F FF8C  F025    	movff	plusw1,btemp
 14579  016564  0E96               	movlw	150
 14580  016566  5E25               	subwf	btemp^0,f,c
 14581  016568  0EFE               	movlw	-2
 14582  01656A  0060  F097  FFE3   	movff	btemp,plusw1
 14583                           
 14584                           ;stkvar	_exp1 @ sp[(-2)+0]
 14585  016570  0EFE               	movlw	-2
 14586  016572  AEE3               	btfss	plusw1,7,c
 14587  016574  D014               	goto	l7101
 14588                           
 14589                           ;stkvar	_exp1 @ sp[(-2)+0]
 14590  016576  0EFE               	movlw	-2
 14591  016578  50E3               	movf	plusw1,w,c
 14592  01657A  0A80               	xorlw	128
 14593  01657C  0F97               	addlw	151
 14594  01657E  A0D8               	btfss	status,0,c
 14595  016580  D7B9               	goto	u5710
 14596  016582                     l7099:
 14597                           
 14598                           ;stkvar	_f1 @ sp[(-2)+-4]
 14599  016582  90D8               	bcf	status,0,c
 14600  016584  0EFD               	movlw	-3
 14601  016586  32E3               	rrcf	plusw1,f,c
 14602  016588  0EFC               	movlw	-4
 14603  01658A  32E3               	rrcf	plusw1,f,c
 14604  01658C  0EFB               	movlw	-5
 14605  01658E  32E3               	rrcf	plusw1,f,c
 14606  016590  0EFA               	movlw	-6
 14607  016592  32E3               	rrcf	plusw1,f,c
 14608                           
 14609                           ;stkvar	_exp1 @ sp[(-2)+0]
 14610  016594  0EFE               	movlw	-2
 14611  016596  2AE3               	incf	plusw1,f,c
 14612  016598  B4D8               	btfsc	status,2,c
 14613  01659A  D018               	goto	u5770
 14614  01659C  D7F2               	goto	l7099
 14615  01659E                     l7101:
 14616                           
 14617                           ;stkvar	_exp1 @ sp[(-2)+0]
 14618  01659E  0EFE               	movlw	-2
 14619  0165A0  006F FF8C  F025    	movff	plusw1,btemp
 14620  0165A6  0E1F               	movlw	31
 14621  0165A8  6425               	cpfsgt	btemp^0,c
 14622  0165AA  D00C               	goto	l7109
 14623  0165AC  D7A3               	goto	u5710
 14624  0165AE                     l7107:
 14625                           
 14626                           ;stkvar	_f1 @ sp[(-2)+-4]
 14627  0165AE  90D8               	bcf	status,0,c
 14628  0165B0  0EFA               	movlw	-6
 14629  0165B2  36E3               	rlcf	plusw1,f,c
 14630  0165B4  0EFB               	movlw	-5
 14631  0165B6  36E3               	rlcf	plusw1,f,c
 14632  0165B8  0EFC               	movlw	-4
 14633  0165BA  36E3               	rlcf	plusw1,f,c
 14634  0165BC  0EFD               	movlw	-3
 14635  0165BE  36E3               	rlcf	plusw1,f,c
 14636                           
 14637                           ;stkvar	_exp1 @ sp[(-2)+0]
 14638  0165C0  0EFE               	movlw	-2
 14639  0165C2  06E3               	decf	plusw1,f,c
 14640  0165C4                     l7109:
 14641                           
 14642                           ;stkvar	_exp1 @ sp[(-2)+0]
 14643  0165C4  0EFE               	movlw	-2
 14644  0165C6  50E3               	movf	plusw1,w,c
 14645  0165C8  A4D8               	btfss	status,2,c
 14646  0165CA  D7F1               	goto	l7107
 14647  0165CC                     u5770:
 14648                           
 14649                           ;stkvar	_sign1 @ sp[(-2)+1]
 14650  0165CC  0EFF               	movlw	-1
 14651  0165CE  50E3               	movf	plusw1,w,c
 14652  0165D0  B4D8               	btfsc	status,2,c
 14653  0165D2  D011               	goto	u5790
 14654                           
 14655                           ;stkvar	_f1 @ sp[(-2)+-4]
 14656                           ;stkvar	_f1 @ sp[(-2)+-4]
 14657  0165D4  0EFA               	movlw	-6
 14658  0165D6  6CE3               	negf	plusw1,c
 14659  0165D8  0EFB               	movlw	-5
 14660  0165DA  1EE3               	comf	plusw1,f,c
 14661  0165DC  0EFC               	movlw	-4
 14662  0165DE  1EE3               	comf	plusw1,f,c
 14663  0165E0  0EFD               	movlw	-3
 14664  0165E2  1EE3               	comf	plusw1,f,c
 14665  0165E4  E308               	bnc	u5790
 14666  0165E6  0EFB               	movlw	-5
 14667  0165E8  2AE3               	incf	plusw1,f,c
 14668  0165EA  E305               	bnc	u5790
 14669  0165EC  0EFC               	movlw	-4
 14670  0165EE  2AE3               	incf	plusw1,f,c
 14671  0165F0  E302               	bnc	u5790
 14672  0165F2  0EFD               	movlw	-3
 14673  0165F4  2AE3               	incf	plusw1,f,c
 14674  0165F6                     u5790:
 14675                           
 14676                           ;stkvar	_f1 @ sp[(-2)+-4]
 14677  0165F6  0EFA               	movlw	-6
 14678  0165F8  006F FF8C  F025    	movff	plusw1,btemp
 14679  0165FE  0EFB               	movlw	-5
 14680  016600  006F FF8C  F026    	movff	plusw1,btemp+1
 14681  016606  0EFC               	movlw	-4
 14682  016608  006F FF8C  F027    	movff	plusw1,btemp+2
 14683  01660E  0EFD               	movlw	-3
 14684  016610  006F FF8C  F028    	movff	plusw1,btemp+3
 14685  016616                     l2511:
 14686                           
 14687                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14688  016616  0EFA               	movlw	250
 14689  016618  26E1               	addwf	fsr1l,f,c
 14690  01661A  0EFF               	movlw	255
 14691  01661C  22E2               	addwfc	fsr1h,f,c
 14692  01661E  0012               	return		;funcret
 14693  016620                     __end_of___fltol:
 14694                           	opt callstack 0
 14695                           
 14696 ;; *************** function ___flneg *****************
 14697 ;; Defined at:
 14698 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 14699 ;; Parameters:    Size  Location     Type
 14700 ;;  f1              4  [STACK] long 
 14701 ;; Auto vars:     Size  Location     Type
 14702 ;;		None
 14703 ;; Return value:  Size  Location     Type
 14704 ;;                  4  [STACK] long 
 14705 ;; Registers used:
 14706 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 14707 ;; Tracked objects:
 14708 ;;		On entry : 0/0
 14709 ;;		On exit  : 0/0
 14710 ;;		Unchanged: 0/0
 14711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14716 ;;Total ram usage:        0 bytes
 14717 ;; Hardware stack levels used:    1
 14718 ;; Hardware stack levels required when called:    7
 14719 ;; This function calls:
 14720 ;;		Nothing
 14721 ;; This function is called by:
 14722 ;;		_efgtoa
 14723 ;; This function uses a reentrant model
 14724 ;;
 14725                           
 14726                           	psect	text55
 14727  0185CA                     __ptext55:
 14728                           	opt callstack 0
 14729  0185CA                     ___flneg:
 14730                           	opt callstack 16
 14731                           
 14732                           ;stkvar	_f1 @ sp[(0)+-4]
 14733                           
 14734                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14735                           ;incstack = 0
 14736  0185CA  0EFC               	movlw	-4
 14737  0185CC  50E3               	movf	plusw1,w,c
 14738  0185CE  E10A               	bnz	u5690
 14739  0185D0  0EFD               	movlw	-3
 14740  0185D2  50E3               	movf	plusw1,w,c
 14741  0185D4  E107               	bnz	u5690
 14742  0185D6  0EFE               	movlw	-2
 14743  0185D8  50E3               	movf	plusw1,w,c
 14744  0185DA  E104               	bnz	u5690
 14745  0185DC  0EFF               	movlw	-1
 14746  0185DE  50E3               	movf	plusw1,w,c
 14747  0185E0  B4D8               	btfsc	status,2,c
 14748  0185E2  D002               	goto	l7073
 14749  0185E4                     u5690:
 14750                           
 14751                           ;stkvar	_f1 @ sp[(0)+-4]
 14752  0185E4  0EFF               	movlw	-1
 14753  0185E6  7EE3               	btg	plusw1,7,c
 14754  0185E8                     l7073:
 14755                           
 14756                           ;stkvar	_f1 @ sp[(0)+-4]
 14757  0185E8  0EFC               	movlw	-4
 14758  0185EA  006F FF8C  F025    	movff	plusw1,btemp
 14759  0185F0  0EFD               	movlw	-3
 14760  0185F2  006F FF8C  F026    	movff	plusw1,btemp+1
 14761  0185F8  0EFE               	movlw	-2
 14762  0185FA  006F FF8C  F027    	movff	plusw1,btemp+2
 14763  018600  0EFF               	movlw	-1
 14764  018602  006F FF8C  F028    	movff	plusw1,btemp+3
 14765                           
 14766                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14767  018608  52E5               	movf	postdec1,f,c
 14768  01860A  52E5               	movf	postdec1,f,c
 14769  01860C  52E5               	movf	postdec1,f,c
 14770  01860E  52E5               	movf	postdec1,f,c
 14771  018610  0012               	return		;funcret
 14772  018612                     __end_of___flneg:
 14773                           	opt callstack 0
 14774                           
 14775 ;; *************** function ___flge *****************
 14776 ;; Defined at:
 14777 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 14778 ;; Parameters:    Size  Location     Type
 14779 ;;  ff1             4  [STACK] long 
 14780 ;;  ff2             4  [STACK] long 
 14781 ;; Auto vars:     Size  Location     Type
 14782 ;;		None
 14783 ;; Return value:  Size  Location     Type
 14784 ;;		None               void
 14785 ;; Registers used:
 14786 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14787 ;; Tracked objects:
 14788 ;;		On entry : 0/0
 14789 ;;		On exit  : 0/0
 14790 ;;		Unchanged: 0/0
 14791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14796 ;;Total ram usage:        0 bytes
 14797 ;; Hardware stack levels used:    1
 14798 ;; Hardware stack levels required when called:    7
 14799 ;; This function calls:
 14800 ;;		Nothing
 14801 ;; This function is called by:
 14802 ;;		_calc_bsoc
 14803 ;;		_efgtoa
 14804 ;; This function uses a reentrant model
 14805 ;;
 14806                           
 14807                           	psect	text56
 14808  016620                     __ptext56:
 14809                           	opt callstack 0
 14810  016620                     ___flge:
 14811                           	opt callstack 7
 14812                           
 14813                           ;stkvar	_ff1 @ sp[(0)+-4]
 14814                           
 14815                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14816                           ;incstack = 0
 14817  016620  50E1               	movf	fsr1l,w,c
 14818  016622  0FFC               	addlw	-4
 14819  016624  6ED9               	movwf	fsr2l,c
 14820  016626  50E2               	movf	fsr1h,w,c
 14821  016628  6EDA               	movwf	fsr2h,c
 14822  01662A  0EFF               	movlw	255
 14823  01662C  22DA               	addwfc	fsr2h,f,c
 14824  01662E  0E00               	movlw	0
 14825  016630  14DE               	andwf	postinc2,w,c
 14826  016632  6E2D               	movwf	(btemp+8)^0,c
 14827  016634  0E00               	movlw	0
 14828  016636  14DE               	andwf	postinc2,w,c
 14829  016638  6E2E               	movwf	(btemp+9)^0,c
 14830  01663A  0E80               	movlw	128
 14831  01663C  14DE               	andwf	postinc2,w,c
 14832  01663E  6E2F               	movwf	(btemp+10)^0,c
 14833  016640  0E7F               	movlw	127
 14834  016642  14DE               	andwf	postinc2,w,c
 14835  016644  6E30               	movwf	(btemp+11)^0,c
 14836  016646  502D               	movf	(btemp+8)^0,w,c
 14837  016648  102E               	iorwf	(btemp+9)^0,w,c
 14838  01664A  102F               	iorwf	(btemp+10)^0,w,c
 14839  01664C  1030               	iorwf	(btemp+11)^0,w,c
 14840  01664E  A4D8               	btfss	status,2,c
 14841  016650  D008               	goto	l8467
 14842                           
 14843                           ;stkvar	_ff1 @ sp[(0)+-4]
 14844  016652  0EFC               	movlw	-4
 14845  016654  6AE3               	clrf	plusw1,c
 14846  016656  0EFD               	movlw	-3
 14847  016658  6AE3               	clrf	plusw1,c
 14848  01665A  0EFE               	movlw	-2
 14849  01665C  6AE3               	clrf	plusw1,c
 14850  01665E  0EFF               	movlw	-1
 14851  016660  6AE3               	clrf	plusw1,c
 14852  016662                     l8467:
 14853                           
 14854                           ;stkvar	_ff2 @ sp[(0)+-8]
 14855  016662  50E1               	movf	fsr1l,w,c
 14856  016664  0FF8               	addlw	-8
 14857  016666  6ED9               	movwf	fsr2l,c
 14858  016668  50E2               	movf	fsr1h,w,c
 14859  01666A  6EDA               	movwf	fsr2h,c
 14860  01666C  0EFF               	movlw	255
 14861  01666E  22DA               	addwfc	fsr2h,f,c
 14862  016670  0E00               	movlw	0
 14863  016672  14DE               	andwf	postinc2,w,c
 14864  016674  6E2D               	movwf	(btemp+8)^0,c
 14865  016676  0E00               	movlw	0
 14866  016678  14DE               	andwf	postinc2,w,c
 14867  01667A  6E2E               	movwf	(btemp+9)^0,c
 14868  01667C  0E80               	movlw	128
 14869  01667E  14DE               	andwf	postinc2,w,c
 14870  016680  6E2F               	movwf	(btemp+10)^0,c
 14871  016682  0E7F               	movlw	127
 14872  016684  14DE               	andwf	postinc2,w,c
 14873  016686  6E30               	movwf	(btemp+11)^0,c
 14874  016688  502D               	movf	(btemp+8)^0,w,c
 14875  01668A  102E               	iorwf	(btemp+9)^0,w,c
 14876  01668C  102F               	iorwf	(btemp+10)^0,w,c
 14877  01668E  1030               	iorwf	(btemp+11)^0,w,c
 14878  016690  A4D8               	btfss	status,2,c
 14879  016692  D008               	goto	l2477
 14880                           
 14881                           ;stkvar	_ff2 @ sp[(0)+-8]
 14882  016694  0EF8               	movlw	-8
 14883  016696  6AE3               	clrf	plusw1,c
 14884  016698  0EF9               	movlw	-7
 14885  01669A  6AE3               	clrf	plusw1,c
 14886  01669C  0EFA               	movlw	-6
 14887  01669E  6AE3               	clrf	plusw1,c
 14888  0166A0  0EFB               	movlw	-5
 14889  0166A2  6AE3               	clrf	plusw1,c
 14890  0166A4                     l2477:
 14891                           
 14892                           ;stkvar	_ff1 @ sp[(0)+-4]
 14893  0166A4  0EFF               	movlw	-1
 14894  0166A6  AEE3               	btfss	plusw1,7,c
 14895  0166A8  D024               	goto	l8473
 14896                           
 14897                           ;stkvar	_ff1 @ sp[(0)+-4]
 14898  0166AA  0E00               	movlw	0
 14899  0166AC  6E2D               	movwf	(btemp+8)^0,c
 14900  0166AE  0E00               	movlw	0
 14901  0166B0  6E2E               	movwf	(btemp+9)^0,c
 14902  0166B2  0E00               	movlw	0
 14903  0166B4  6E2F               	movwf	(btemp+10)^0,c
 14904  0166B6  0E80               	movlw	128
 14905  0166B8  6E30               	movwf	(btemp+11)^0,c
 14906  0166BA  0EFC               	movlw	-4
 14907  0166BC  50E3               	movf	plusw1,w,c
 14908  0166BE  5E2D               	subwf	(btemp+8)^0,f,c
 14909  0166C0  0EFD               	movlw	-3
 14910  0166C2  50E3               	movf	plusw1,w,c
 14911  0166C4  5A2E               	subwfb	(btemp+9)^0,f,c
 14912  0166C6  0EFE               	movlw	-2
 14913  0166C8  50E3               	movf	plusw1,w,c
 14914  0166CA  5A2F               	subwfb	(btemp+10)^0,f,c
 14915  0166CC  0EFF               	movlw	-1
 14916  0166CE  50E3               	movf	plusw1,w,c
 14917  0166D0  5A30               	subwfb	(btemp+11)^0,f,c
 14918                           
 14919                           ;stkvar	_ff1 @ sp[(0)+-4]
 14920  0166D2  0EFC               	movlw	-4
 14921  0166D4  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14922  0166DA  0EFD               	movlw	-3
 14923  0166DC  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14924  0166E2  0EFE               	movlw	-2
 14925  0166E4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14926  0166EA  0EFF               	movlw	-1
 14927  0166EC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14928  0166F2                     l8473:
 14929                           
 14930                           ;stkvar	_ff2 @ sp[(0)+-8]
 14931  0166F2  0EFB               	movlw	-5
 14932  0166F4  AEE3               	btfss	plusw1,7,c
 14933  0166F6  D024               	goto	l8477
 14934                           
 14935                           ;stkvar	_ff2 @ sp[(0)+-8]
 14936  0166F8  0E00               	movlw	0
 14937  0166FA  6E2D               	movwf	(btemp+8)^0,c
 14938  0166FC  0E00               	movlw	0
 14939  0166FE  6E2E               	movwf	(btemp+9)^0,c
 14940  016700  0E00               	movlw	0
 14941  016702  6E2F               	movwf	(btemp+10)^0,c
 14942  016704  0E80               	movlw	128
 14943  016706  6E30               	movwf	(btemp+11)^0,c
 14944  016708  0EF8               	movlw	-8
 14945  01670A  50E3               	movf	plusw1,w,c
 14946  01670C  5E2D               	subwf	(btemp+8)^0,f,c
 14947  01670E  0EF9               	movlw	-7
 14948  016710  50E3               	movf	plusw1,w,c
 14949  016712  5A2E               	subwfb	(btemp+9)^0,f,c
 14950  016714  0EFA               	movlw	-6
 14951  016716  50E3               	movf	plusw1,w,c
 14952  016718  5A2F               	subwfb	(btemp+10)^0,f,c
 14953  01671A  0EFB               	movlw	-5
 14954  01671C  50E3               	movf	plusw1,w,c
 14955  01671E  5A30               	subwfb	(btemp+11)^0,f,c
 14956                           
 14957                           ;stkvar	_ff2 @ sp[(0)+-8]
 14958  016720  0EF8               	movlw	-8
 14959  016722  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 14960  016728  0EF9               	movlw	-7
 14961  01672A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 14962  016730  0EFA               	movlw	-6
 14963  016732  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 14964  016738  0EFB               	movlw	-5
 14965  01673A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 14966  016740                     l8477:
 14967                           
 14968                           ;stkvar	_ff1 @ sp[(0)+-4]
 14969  016740  0EFF               	movlw	-1
 14970  016742  7EE3               	btg	plusw1,7,c
 14971                           
 14972                           ;stkvar	_ff2 @ sp[(0)+-8]
 14973  016744  0EFB               	movlw	-5
 14974  016746  7EE3               	btg	plusw1,7,c
 14975                           
 14976                           ;stkvar	_ff2 @ sp[(0)+-8]
 14977                           ;stkvar	_ff1 @ sp[(0)+-4]
 14978  016748  50E1               	movf	fsr1l,w,c
 14979  01674A  0FFC               	addlw	-4
 14980  01674C  6ED9               	movwf	fsr2l,c
 14981  01674E  50E2               	movf	fsr1h,w,c
 14982  016750  6EDA               	movwf	fsr2h,c
 14983  016752  0EFF               	movlw	255
 14984  016754  22DA               	addwfc	fsr2h,f,c
 14985  016756  0EF8               	movlw	-8
 14986  016758  50E3               	movf	plusw1,w,c
 14987  01675A  5CDE               	subwf	postinc2,w,c
 14988  01675C  0EF9               	movlw	-7
 14989  01675E  50E3               	movf	plusw1,w,c
 14990  016760  58DE               	subwfb	postinc2,w,c
 14991  016762  0EFA               	movlw	-6
 14992  016764  50E3               	movf	plusw1,w,c
 14993  016766  58DE               	subwfb	postinc2,w,c
 14994  016768  0EFB               	movlw	-5
 14995  01676A  50E3               	movf	plusw1,w,c
 14996  01676C  58DE               	subwfb	postinc2,w,c
 14997  01676E  B0D8               	btfsc	status,0,c
 14998  016770  D002               	goto	l8485
 14999  016772  9025               	bcf	btemp& (0+255),0,c
 15000  016774  D001               	goto	l2484
 15001  016776                     l8485:
 15002  016776  8025               	bsf	btemp& (0+255),0,c
 15003  016778                     l2484:
 15004                           
 15005                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15006  016778  0EF8               	movlw	248
 15007  01677A  26E1               	addwf	fsr1l,f,c
 15008  01677C  0EFF               	movlw	255
 15009  01677E  22E2               	addwfc	fsr1h,f,c
 15010  016780  0012               	return		;funcret
 15011  016782                     __end_of___flge:
 15012                           	opt callstack 0
 15013                           
 15014 ;; *************** function ___fleq *****************
 15015 ;; Defined at:
 15016 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 15017 ;; Parameters:    Size  Location     Type
 15018 ;;  ff1             4  [STACK] long 
 15019 ;;  ff2             4  [STACK] long 
 15020 ;; Auto vars:     Size  Location     Type
 15021 ;;		None
 15022 ;; Return value:  Size  Location     Type
 15023 ;;		None               void
 15024 ;; Registers used:
 15025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 15026 ;; Tracked objects:
 15027 ;;		On entry : 0/0
 15028 ;;		On exit  : 0/0
 15029 ;;		Unchanged: 0/0
 15030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15035 ;;Total ram usage:        0 bytes
 15036 ;; Hardware stack levels used:    1
 15037 ;; Hardware stack levels required when called:    7
 15038 ;; This function calls:
 15039 ;;		Nothing
 15040 ;; This function is called by:
 15041 ;;		_efgtoa
 15042 ;; This function uses a reentrant model
 15043 ;;
 15044                           
 15045                           	psect	text57
 15046  01760E                     __ptext57:
 15047                           	opt callstack 0
 15048  01760E                     ___fleq:
 15049                           	opt callstack 16
 15050                           
 15051                           ;stkvar	_ff1 @ sp[(0)+-4]
 15052                           
 15053                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15054                           ;incstack = 0
 15055  01760E  50E1               	movf	fsr1l,w,c
 15056  017610  0FFC               	addlw	-4
 15057  017612  6ED9               	movwf	fsr2l,c
 15058  017614  50E2               	movf	fsr1h,w,c
 15059  017616  6EDA               	movwf	fsr2h,c
 15060  017618  0EFF               	movlw	255
 15061  01761A  22DA               	addwfc	fsr2h,f,c
 15062  01761C  0E00               	movlw	0
 15063  01761E  14DE               	andwf	postinc2,w,c
 15064  017620  6E2D               	movwf	(btemp+8)^0,c
 15065  017622  0E00               	movlw	0
 15066  017624  14DE               	andwf	postinc2,w,c
 15067  017626  6E2E               	movwf	(btemp+9)^0,c
 15068  017628  0E80               	movlw	128
 15069  01762A  14DE               	andwf	postinc2,w,c
 15070  01762C  6E2F               	movwf	(btemp+10)^0,c
 15071  01762E  0E7F               	movlw	127
 15072  017630  14DE               	andwf	postinc2,w,c
 15073  017632  6E30               	movwf	(btemp+11)^0,c
 15074  017634  502D               	movf	(btemp+8)^0,w,c
 15075  017636  102E               	iorwf	(btemp+9)^0,w,c
 15076  017638  102F               	iorwf	(btemp+10)^0,w,c
 15077  01763A  1030               	iorwf	(btemp+11)^0,w,c
 15078  01763C  A4D8               	btfss	status,2,c
 15079  01763E  D008               	goto	l7057
 15080                           
 15081                           ;stkvar	_ff1 @ sp[(0)+-4]
 15082  017640  0EFC               	movlw	-4
 15083  017642  6AE3               	clrf	plusw1,c
 15084  017644  0EFD               	movlw	-3
 15085  017646  6AE3               	clrf	plusw1,c
 15086  017648  0EFE               	movlw	-2
 15087  01764A  6AE3               	clrf	plusw1,c
 15088  01764C  0EFF               	movlw	-1
 15089  01764E  6AE3               	clrf	plusw1,c
 15090  017650                     l7057:
 15091                           
 15092                           ;stkvar	_ff2 @ sp[(0)+-8]
 15093  017650  50E1               	movf	fsr1l,w,c
 15094  017652  0FF8               	addlw	-8
 15095  017654  6ED9               	movwf	fsr2l,c
 15096  017656  50E2               	movf	fsr1h,w,c
 15097  017658  6EDA               	movwf	fsr2h,c
 15098  01765A  0EFF               	movlw	255
 15099  01765C  22DA               	addwfc	fsr2h,f,c
 15100  01765E  0E00               	movlw	0
 15101  017660  14DE               	andwf	postinc2,w,c
 15102  017662  6E2D               	movwf	(btemp+8)^0,c
 15103  017664  0E00               	movlw	0
 15104  017666  14DE               	andwf	postinc2,w,c
 15105  017668  6E2E               	movwf	(btemp+9)^0,c
 15106  01766A  0E80               	movlw	128
 15107  01766C  14DE               	andwf	postinc2,w,c
 15108  01766E  6E2F               	movwf	(btemp+10)^0,c
 15109  017670  0E7F               	movlw	127
 15110  017672  14DE               	andwf	postinc2,w,c
 15111  017674  6E30               	movwf	(btemp+11)^0,c
 15112  017676  502D               	movf	(btemp+8)^0,w,c
 15113  017678  102E               	iorwf	(btemp+9)^0,w,c
 15114  01767A  102F               	iorwf	(btemp+10)^0,w,c
 15115  01767C  1030               	iorwf	(btemp+11)^0,w,c
 15116  01767E  A4D8               	btfss	status,2,c
 15117  017680  D008               	goto	l7061
 15118                           
 15119                           ;stkvar	_ff2 @ sp[(0)+-8]
 15120  017682  0EF8               	movlw	-8
 15121  017684  6AE3               	clrf	plusw1,c
 15122  017686  0EF9               	movlw	-7
 15123  017688  6AE3               	clrf	plusw1,c
 15124  01768A  0EFA               	movlw	-6
 15125  01768C  6AE3               	clrf	plusw1,c
 15126  01768E  0EFB               	movlw	-5
 15127  017690  6AE3               	clrf	plusw1,c
 15128  017692                     l7061:
 15129                           
 15130                           ;stkvar	_ff2 @ sp[(0)+-8]
 15131                           ;stkvar	_ff1 @ sp[(0)+-4]
 15132  017692  50E1               	movf	fsr1l,w,c
 15133  017694  0FFC               	addlw	-4
 15134  017696  6ED9               	movwf	fsr2l,c
 15135  017698  50E2               	movf	fsr1h,w,c
 15136  01769A  6EDA               	movwf	fsr2h,c
 15137  01769C  0EFF               	movlw	255
 15138  01769E  22DA               	addwfc	fsr2h,f,c
 15139  0176A0  0EF8               	movlw	-8
 15140  0176A2  50E3               	movf	plusw1,w,c
 15141  0176A4  18DE               	xorwf	postinc2,w,c
 15142  0176A6  E10D               	bnz	u5680
 15143  0176A8  0EF9               	movlw	-7
 15144  0176AA  50E3               	movf	plusw1,w,c
 15145  0176AC  18DE               	xorwf	postinc2,w,c
 15146  0176AE  E109               	bnz	u5680
 15147  0176B0  0EFA               	movlw	-6
 15148  0176B2  50E3               	movf	plusw1,w,c
 15149  0176B4  18DE               	xorwf	postinc2,w,c
 15150  0176B6  E105               	bnz	u5680
 15151  0176B8  0EFB               	movlw	-5
 15152  0176BA  50E3               	movf	plusw1,w,c
 15153  0176BC  18DE               	xorwf	postinc2,w,c
 15154  0176BE  B4D8               	btfsc	status,2,c
 15155  0176C0  D002               	goto	l7065
 15156  0176C2                     u5680:
 15157  0176C2  9025               	bcf	btemp& (0+255),0,c
 15158  0176C4  D001               	goto	l2473
 15159  0176C6                     l7065:
 15160  0176C6  8025               	bsf	btemp& (0+255),0,c
 15161  0176C8                     l2473:
 15162                           
 15163                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 15164  0176C8  0EF8               	movlw	248
 15165  0176CA  26E1               	addwf	fsr1l,f,c
 15166  0176CC  0EFF               	movlw	255
 15167  0176CE  22E2               	addwfc	fsr1h,f,c
 15168  0176D0  0012               	return		;funcret
 15169  0176D2                     __end_of___fleq:
 15170                           	opt callstack 0
 15171                           
 15172 ;; *************** function ___fldiv *****************
 15173 ;; Defined at:
 15174 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 15175 ;; Parameters:    Size  Location     Type
 15176 ;;  b               4  [STACK] long 
 15177 ;;  a               4  [STACK] long 
 15178 ;; Auto vars:     Size  Location     Type
 15179 ;;  grs             4  [STACK] unsigned long 
 15180 ;;  rem             4  [STACK] unsigned long 
 15181 ;;  new_exp         2  [STACK] short 
 15182 ;;  aexp            1  [STACK] unsigned char 
 15183 ;;  bexp            1  [STACK] unsigned char 
 15184 ;;  sign            1  [STACK] unsigned char 
 15185 ;; Return value:  Size  Location     Type
 15186 ;;                  4  [STACK] unsigned char 
 15187 ;; Registers used:
 15188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 15189 ;; Tracked objects:
 15190 ;;		On entry : 0/2
 15191 ;;		On exit  : 0/0
 15192 ;;		Unchanged: 0/0
 15193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15198 ;;Total ram usage:        0 bytes
 15199 ;; Hardware stack levels used:    1
 15200 ;; Hardware stack levels required when called:    7
 15201 ;; This function calls:
 15202 ;;		Nothing
 15203 ;; This function is called by:
 15204 ;;		_conv_raw_result
 15205 ;;		_calc_bsoc
 15206 ;;		_efgtoa
 15207 ;; This function uses a reentrant model
 15208 ;;
 15209                           
 15210                           	psect	text58
 15211  0135F6                     __ptext58:
 15212                           	opt callstack 0
 15213  0135F6                     ___fldiv:
 15214                           	opt callstack 0
 15215                           
 15216                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15217  0135F6  0E0D               	movlw	13
 15218  0135F8  26E1               	addwf	fsr1l,f,c
 15219  0135FA  0E00               	movlw	0
 15220  0135FC  22E2               	addwfc	fsr1h,f,c
 15221                           
 15222                           ;stkvar	_b @ sp[(-13)+-4]
 15223                           
 15224                           ;incstack = 0
 15225  0135FE  0EF2               	movlw	242
 15226  013600  24E1               	addwf	fsr1l,w,c
 15227  013602  6ED9               	movwf	fsr2l,c
 15228  013604  0EFF               	movlw	255
 15229  013606  20E2               	addwfc	fsr1h,w,c
 15230  013608  6EDA               	movwf	fsr2h,c
 15231  01360A  50DF               	movf	indf2,w,c
 15232  01360C  6E30               	movwf	(btemp+11)^0,c
 15233  01360E  0E80               	movlw	128
 15234  013610  1630               	andwf	(btemp+11)^0,f,c
 15235                           
 15236                           ;stkvar	_sign @ sp[(-13)+12]
 15237  013612  0EFF               	movlw	-1
 15238  013614  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15239                           
 15240                           ;stkvar	_b @ sp[(-13)+-4]
 15241  01361A  0EF2               	movlw	242
 15242  01361C  24E1               	addwf	fsr1l,w,c
 15243  01361E  6ED9               	movwf	fsr2l,c
 15244  013620  0EFF               	movlw	255
 15245  013622  20E2               	addwfc	fsr1h,w,c
 15246  013624  6EDA               	movwf	fsr2h,c
 15247  013626  50DF               	movf	indf2,w,c
 15248  013628  6E30               	movwf	(btemp+11)^0,c
 15249  01362A  90D8               	bcf	status,0,c
 15250  01362C  3430               	rlcf	(btemp+11)^0,w,c
 15251  01362E  6E2F               	movwf	(btemp+10)^0,c
 15252                           
 15253                           ;stkvar	_bexp @ sp[(-13)+11]
 15254  013630  0EFE               	movlw	-2
 15255  013632  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15256                           
 15257                           ;stkvar	_b @ sp[(-13)+-4]
 15258  013638  0EF1               	movlw	241
 15259  01363A  24E1               	addwf	fsr1l,w,c
 15260  01363C  6ED9               	movwf	fsr2l,c
 15261  01363E  0EFF               	movlw	255
 15262  013640  20E2               	addwfc	fsr1h,w,c
 15263  013642  6EDA               	movwf	fsr2h,c
 15264  013644  AEDF               	btfss	indf2,7,c
 15265  013646  D002               	goto	l8315
 15266                           
 15267                           ;stkvar	_bexp @ sp[(-13)+11]
 15268  013648  0EFE               	movlw	-2
 15269  01364A  80E3               	bsf	plusw1,0,c
 15270  01364C                     l8315:
 15271                           
 15272                           ;stkvar	_bexp @ sp[(-13)+11]
 15273  01364C  0EFE               	movlw	-2
 15274  01364E  50E3               	movf	plusw1,w,c
 15275  013650  B4D8               	btfsc	status,2,c
 15276  013652  D027               	goto	l8325
 15277                           
 15278                           ;stkvar	_bexp @ sp[(-13)+11]
 15279  013654  0EFE               	movlw	-2
 15280  013656  28E3               	incf	plusw1,w,c
 15281  013658  A4D8               	btfss	status,2,c
 15282  01365A  D018               	goto	l8321
 15283  01365C  0E00               	movlw	0
 15284  01365E  6E2D               	movwf	(btemp+8)^0,c
 15285  013660  0E00               	movlw	0
 15286  013662  6E2E               	movwf	(btemp+9)^0,c
 15287  013664  0E00               	movlw	0
 15288  013666  6E2F               	movwf	(btemp+10)^0,c
 15289  013668  0E00               	movlw	0
 15290  01366A  6E30               	movwf	(btemp+11)^0,c
 15291                           
 15292                           ;stkvar	_b @ sp[(-13)+-4]
 15293  01366C  0EEF               	movlw	-17
 15294  01366E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15295  013674  0EF0               	movlw	-16
 15296  013676  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15297  01367C  0EF1               	movlw	-15
 15298  01367E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15299  013684  0EF2               	movlw	-14
 15300  013686  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15301  01368C                     l8321:
 15302                           
 15303                           ;stkvar	_b @ sp[(-13)+-4]
 15304  01368C  0EF1               	movlw	-15
 15305  01368E  8EE3               	bsf	plusw1,7,c
 15306                           
 15307                           ;stkvar	_b @ sp[(-13)+-4]
 15308  013690  0EF2               	movlw	242
 15309  013692  24E1               	addwf	fsr1l,w,c
 15310  013694  6ED9               	movwf	fsr2l,c
 15311  013696  0EFF               	movlw	255
 15312  013698  20E2               	addwfc	fsr1h,w,c
 15313  01369A  6EDA               	movwf	fsr2h,c
 15314  01369C  0E00               	movlw	0
 15315  01369E  6EDF               	movwf	indf2,c
 15316  0136A0  D018               	goto	l8327
 15317  0136A2                     l8325:
 15318  0136A2  0E00               	movlw	0
 15319  0136A4  6E2D               	movwf	(btemp+8)^0,c
 15320  0136A6  0E00               	movlw	0
 15321  0136A8  6E2E               	movwf	(btemp+9)^0,c
 15322  0136AA  0E00               	movlw	0
 15323  0136AC  6E2F               	movwf	(btemp+10)^0,c
 15324  0136AE  0E00               	movlw	0
 15325  0136B0  6E30               	movwf	(btemp+11)^0,c
 15326                           
 15327                           ;stkvar	_b @ sp[(-13)+-4]
 15328  0136B2  0EEF               	movlw	-17
 15329  0136B4  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15330  0136BA  0EF0               	movlw	-16
 15331  0136BC  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15332  0136C2  0EF1               	movlw	-15
 15333  0136C4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15334  0136CA  0EF2               	movlw	-14
 15335  0136CC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15336  0136D2                     l8327:
 15337                           
 15338                           ;stkvar	_a @ sp[(-13)+-8]
 15339  0136D2  0EEE               	movlw	238
 15340  0136D4  24E1               	addwf	fsr1l,w,c
 15341  0136D6  6ED9               	movwf	fsr2l,c
 15342  0136D8  0EFF               	movlw	255
 15343  0136DA  20E2               	addwfc	fsr1h,w,c
 15344  0136DC  6EDA               	movwf	fsr2h,c
 15345  0136DE  50DF               	movf	indf2,w,c
 15346  0136E0  6E30               	movwf	(btemp+11)^0,c
 15347  0136E2  0E80               	movlw	128
 15348  0136E4  1630               	andwf	(btemp+11)^0,f,c
 15349                           
 15350                           ;stkvar	_sign @ sp[(-13)+12]
 15351  0136E6  50E1               	movf	fsr1l,w,c
 15352  0136E8  0FFF               	addlw	-1
 15353  0136EA  6ED9               	movwf	fsr2l,c
 15354  0136EC  50E2               	movf	fsr1h,w,c
 15355  0136EE  6EDA               	movwf	fsr2h,c
 15356  0136F0  0EFF               	movlw	255
 15357  0136F2  22DA               	addwfc	fsr2h,f,c
 15358  0136F4  5030               	movf	(btemp+11)^0,w,c
 15359  0136F6  1ADF               	xorwf	indf2,f,c
 15360                           
 15361                           ;stkvar	_a @ sp[(-13)+-8]
 15362  0136F8  0EEE               	movlw	238
 15363  0136FA  24E1               	addwf	fsr1l,w,c
 15364  0136FC  6ED9               	movwf	fsr2l,c
 15365  0136FE  0EFF               	movlw	255
 15366  013700  20E2               	addwfc	fsr1h,w,c
 15367  013702  6EDA               	movwf	fsr2h,c
 15368  013704  50DF               	movf	indf2,w,c
 15369  013706  6E30               	movwf	(btemp+11)^0,c
 15370  013708  90D8               	bcf	status,0,c
 15371  01370A  3430               	rlcf	(btemp+11)^0,w,c
 15372  01370C  6E2F               	movwf	(btemp+10)^0,c
 15373                           
 15374                           ;stkvar	_aexp @ sp[(-13)+10]
 15375  01370E  0EFD               	movlw	-3
 15376  013710  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15377                           
 15378                           ;stkvar	_a @ sp[(-13)+-8]
 15379  013716  0EED               	movlw	237
 15380  013718  24E1               	addwf	fsr1l,w,c
 15381  01371A  6ED9               	movwf	fsr2l,c
 15382  01371C  0EFF               	movlw	255
 15383  01371E  20E2               	addwfc	fsr1h,w,c
 15384  013720  6EDA               	movwf	fsr2h,c
 15385  013722  AEDF               	btfss	indf2,7,c
 15386  013724  D002               	goto	l8335
 15387                           
 15388                           ;stkvar	_aexp @ sp[(-13)+10]
 15389  013726  0EFD               	movlw	-3
 15390  013728  80E3               	bsf	plusw1,0,c
 15391  01372A                     l8335:
 15392                           
 15393                           ;stkvar	_aexp @ sp[(-13)+10]
 15394  01372A  0EFD               	movlw	-3
 15395  01372C  50E3               	movf	plusw1,w,c
 15396  01372E  B4D8               	btfsc	status,2,c
 15397  013730  D027               	goto	l8345
 15398                           
 15399                           ;stkvar	_aexp @ sp[(-13)+10]
 15400  013732  0EFD               	movlw	-3
 15401  013734  28E3               	incf	plusw1,w,c
 15402  013736  A4D8               	btfss	status,2,c
 15403  013738  D018               	goto	l8341
 15404  01373A  0E00               	movlw	0
 15405  01373C  6E2D               	movwf	(btemp+8)^0,c
 15406  01373E  0E00               	movlw	0
 15407  013740  6E2E               	movwf	(btemp+9)^0,c
 15408  013742  0E00               	movlw	0
 15409  013744  6E2F               	movwf	(btemp+10)^0,c
 15410  013746  0E00               	movlw	0
 15411  013748  6E30               	movwf	(btemp+11)^0,c
 15412                           
 15413                           ;stkvar	_a @ sp[(-13)+-8]
 15414  01374A  0EEB               	movlw	-21
 15415  01374C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15416  013752  0EEC               	movlw	-20
 15417  013754  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15418  01375A  0EED               	movlw	-19
 15419  01375C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15420  013762  0EEE               	movlw	-18
 15421  013764  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15422  01376A                     l8341:
 15423                           
 15424                           ;stkvar	_a @ sp[(-13)+-8]
 15425  01376A  0EED               	movlw	-19
 15426  01376C  8EE3               	bsf	plusw1,7,c
 15427                           
 15428                           ;stkvar	_a @ sp[(-13)+-8]
 15429  01376E  0EEE               	movlw	238
 15430  013770  24E1               	addwf	fsr1l,w,c
 15431  013772  6ED9               	movwf	fsr2l,c
 15432  013774  0EFF               	movlw	255
 15433  013776  20E2               	addwfc	fsr1h,w,c
 15434  013778  6EDA               	movwf	fsr2h,c
 15435  01377A  0E00               	movlw	0
 15436  01377C  6EDF               	movwf	indf2,c
 15437  01377E  D018               	goto	l8347
 15438  013780                     l8345:
 15439  013780  0E00               	movlw	0
 15440  013782  6E2D               	movwf	(btemp+8)^0,c
 15441  013784  0E00               	movlw	0
 15442  013786  6E2E               	movwf	(btemp+9)^0,c
 15443  013788  0E00               	movlw	0
 15444  01378A  6E2F               	movwf	(btemp+10)^0,c
 15445  01378C  0E00               	movlw	0
 15446  01378E  6E30               	movwf	(btemp+11)^0,c
 15447                           
 15448                           ;stkvar	_a @ sp[(-13)+-8]
 15449  013790  0EEB               	movlw	-21
 15450  013792  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15451  013798  0EEC               	movlw	-20
 15452  01379A  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15453  0137A0  0EED               	movlw	-19
 15454  0137A2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15455  0137A8  0EEE               	movlw	-18
 15456  0137AA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15457  0137B0                     l8347:
 15458                           
 15459                           ;stkvar	_a @ sp[(-13)+-8]
 15460  0137B0  0EEB               	movlw	-21
 15461  0137B2  50E3               	movf	plusw1,w,c
 15462  0137B4  E139               	bnz	l8359
 15463  0137B6  0EEC               	movlw	-20
 15464  0137B8  50E3               	movf	plusw1,w,c
 15465  0137BA  E136               	bnz	l8359
 15466  0137BC  0EED               	movlw	-19
 15467  0137BE  50E3               	movf	plusw1,w,c
 15468  0137C0  E133               	bnz	l8359
 15469  0137C2  0EEE               	movlw	-18
 15470  0137C4  50E3               	movf	plusw1,w,c
 15471  0137C6  A4D8               	btfss	status,2,c
 15472  0137C8  D02F               	goto	l8359
 15473                           
 15474                           ;stkvar	_b @ sp[(-13)+-4]
 15475  0137CA  0EEF               	movlw	-17
 15476  0137CC  6AE3               	clrf	plusw1,c
 15477  0137CE  0EF0               	movlw	-16
 15478  0137D0  6AE3               	clrf	plusw1,c
 15479  0137D2  0EF1               	movlw	-15
 15480  0137D4  6AE3               	clrf	plusw1,c
 15481  0137D6  0EF2               	movlw	-14
 15482  0137D8  6AE3               	clrf	plusw1,c
 15483                           
 15484                           ;stkvar	_b @ sp[(-13)+-4]
 15485  0137DA  0EF1               	movlw	241
 15486  0137DC  24E1               	addwf	fsr1l,w,c
 15487  0137DE  6ED9               	movwf	fsr2l,c
 15488  0137E0  0EFF               	movlw	255
 15489  0137E2  20E2               	addwfc	fsr1h,w,c
 15490  0137E4  6EDA               	movwf	fsr2h,c
 15491  0137E6  0E80               	movlw	128
 15492  0137E8  12DE               	iorwf	postinc2,f,c
 15493  0137EA  0E7F               	movlw	127
 15494  0137EC  12DD               	iorwf	postdec2,f,c
 15495  0137EE                     l8353:
 15496                           
 15497                           ;stkvar	_sign @ sp[(-13)+12]
 15498  0137EE  0EFF               	movlw	-1
 15499  0137F0  006F FF8C  F030    	movff	plusw1,btemp+11
 15500                           
 15501                           ;stkvar	_b @ sp[(-13)+-4]
 15502  0137F6  0EF2               	movlw	242
 15503  0137F8  24E1               	addwf	fsr1l,w,c
 15504  0137FA  6ED9               	movwf	fsr2l,c
 15505  0137FC  0EFF               	movlw	255
 15506  0137FE  20E2               	addwfc	fsr1h,w,c
 15507  013800  6EDA               	movwf	fsr2h,c
 15508  013802  5030               	movf	(btemp+11)^0,w,c
 15509  013804  12DF               	iorwf	indf2,f,c
 15510                           
 15511                           ;stkvar	_b @ sp[(-13)+-4]
 15512  013806  0EEF               	movlw	-17
 15513  013808  006F FF8C  F025    	movff	plusw1,btemp
 15514  01380E  0EF0               	movlw	-16
 15515  013810  006F FF8C  F026    	movff	plusw1,btemp+1
 15516  013816  0EF1               	movlw	-15
 15517  013818  006F FF8C  F027    	movff	plusw1,btemp+2
 15518  01381E  0EF2               	movlw	-14
 15519  013820  006F FF8C  F028    	movff	plusw1,btemp+3
 15520  013826  D19F               	goto	l2796
 15521  013828                     l8359:
 15522                           
 15523                           ;stkvar	_bexp @ sp[(-13)+11]
 15524  013828  0EFE               	movlw	-2
 15525  01382A  50E3               	movf	plusw1,w,c
 15526  01382C  A4D8               	btfss	status,2,c
 15527  01382E  D009               	goto	l8367
 15528  013830  0E00               	movlw	0
 15529  013832  6E25               	movwf	btemp^0,c
 15530  013834  0E00               	movlw	0
 15531  013836  6E26               	movwf	(btemp+1)^0,c
 15532  013838  0E00               	movlw	0
 15533  01383A  6E27               	movwf	(btemp+2)^0,c
 15534  01383C  0E00               	movlw	0
 15535  01383E  6E28               	movwf	(btemp+3)^0,c
 15536  013840  D192               	goto	l2796
 15537  013842                     l8367:
 15538                           
 15539                           ;stkvar	_bexp @ sp[(-13)+11]
 15540  013842  0EFE               	movlw	-2
 15541  013844  50E3               	movf	plusw1,w,c
 15542  013846  6E2F               	movwf	(btemp+10)^0,c
 15543  013848  6A30               	clrf	(btemp+11)^0,c
 15544                           
 15545                           ;stkvar	_aexp @ sp[(-13)+10]
 15546  01384A  0EFD               	movlw	-3
 15547  01384C  50E3               	movf	plusw1,w,c
 15548  01384E  5E2F               	subwf	(btemp+10)^0,f,c
 15549  013850  0E00               	movlw	0
 15550  013852  5A30               	subwfb	(btemp+11)^0,f,c
 15551  013854  0E7F               	movlw	127
 15552  013856  262F               	addwf	(btemp+10)^0,f,c
 15553  013858  0E00               	movlw	0
 15554  01385A  2230               	addwfc	(btemp+11)^0,f,c
 15555                           
 15556                           ;stkvar	_new_exp @ sp[(-13)+8]
 15557  01385C  0EFB               	movlw	-5
 15558  01385E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15559  013864  0EFC               	movlw	-4
 15560  013866  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15561                           
 15562                           ;stkvar	_b @ sp[(-13)+-4]
 15563  01386C  0EEF               	movlw	-17
 15564  01386E  006F FF8C  F02D    	movff	plusw1,btemp+8
 15565  013874  0EF0               	movlw	-16
 15566  013876  006F FF8C  F02E    	movff	plusw1,btemp+9
 15567  01387C  0EF1               	movlw	-15
 15568  01387E  006F FF8C  F02F    	movff	plusw1,btemp+10
 15569  013884  0EF2               	movlw	-14
 15570  013886  006F FF8C  F030    	movff	plusw1,btemp+11
 15571                           
 15572                           ;stkvar	_rem @ sp[(-13)+4]
 15573  01388C  0EF7               	movlw	-9
 15574  01388E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 15575  013894  0EF8               	movlw	-8
 15576  013896  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 15577  01389C  0EF9               	movlw	-7
 15578  01389E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15579  0138A4  0EFA               	movlw	-6
 15580  0138A6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15581                           
 15582                           ;stkvar	_b @ sp[(-13)+-4]
 15583  0138AC  0EEF               	movlw	-17
 15584  0138AE  6AE3               	clrf	plusw1,c
 15585  0138B0  0EF0               	movlw	-16
 15586  0138B2  6AE3               	clrf	plusw1,c
 15587  0138B4  0EF1               	movlw	-15
 15588  0138B6  6AE3               	clrf	plusw1,c
 15589  0138B8  0EF2               	movlw	-14
 15590  0138BA  6AE3               	clrf	plusw1,c
 15591                           
 15592                           ;stkvar	_grs @ sp[(-13)+0]
 15593  0138BC  0EF3               	movlw	-13
 15594  0138BE  6AE3               	clrf	plusw1,c
 15595  0138C0  0EF4               	movlw	-12
 15596  0138C2  6AE3               	clrf	plusw1,c
 15597  0138C4  0EF5               	movlw	-11
 15598  0138C6  6AE3               	clrf	plusw1,c
 15599  0138C8  0EF6               	movlw	-10
 15600  0138CA  6AE3               	clrf	plusw1,c
 15601                           
 15602                           ;stkvar	_aexp @ sp[(-13)+10]
 15603  0138CC  0EFD               	movlw	-3
 15604  0138CE  6AE3               	clrf	plusw1,c
 15605  0138D0  D050               	goto	l8395
 15606  0138D2                     l8377:
 15607                           
 15608                           ;stkvar	_aexp @ sp[(-13)+10]
 15609  0138D2  0EFD               	movlw	-3
 15610  0138D4  50E3               	movf	plusw1,w,c
 15611  0138D6  B4D8               	btfsc	status,2,c
 15612  0138D8  D020               	goto	l8387
 15613                           
 15614                           ;stkvar	_rem @ sp[(-13)+4]
 15615  0138DA  90D8               	bcf	status,0,c
 15616  0138DC  0EF7               	movlw	-9
 15617  0138DE  36E3               	rlcf	plusw1,f,c
 15618  0138E0  0EF8               	movlw	-8
 15619  0138E2  36E3               	rlcf	plusw1,f,c
 15620  0138E4  0EF9               	movlw	-7
 15621  0138E6  36E3               	rlcf	plusw1,f,c
 15622  0138E8  0EFA               	movlw	-6
 15623  0138EA  36E3               	rlcf	plusw1,f,c
 15624                           
 15625                           ;stkvar	_b @ sp[(-13)+-4]
 15626  0138EC  90D8               	bcf	status,0,c
 15627  0138EE  0EEF               	movlw	-17
 15628  0138F0  36E3               	rlcf	plusw1,f,c
 15629  0138F2  0EF0               	movlw	-16
 15630  0138F4  36E3               	rlcf	plusw1,f,c
 15631  0138F6  0EF1               	movlw	-15
 15632  0138F8  36E3               	rlcf	plusw1,f,c
 15633  0138FA  0EF2               	movlw	-14
 15634  0138FC  36E3               	rlcf	plusw1,f,c
 15635                           
 15636                           ;stkvar	_grs @ sp[(-13)+0]
 15637  0138FE  0EF6               	movlw	-10
 15638  013900  AEE3               	btfss	plusw1,7,c
 15639  013902  D002               	goto	l8385
 15640                           
 15641                           ;stkvar	_b @ sp[(-13)+-4]
 15642  013904  0EEF               	movlw	-17
 15643  013906  80E3               	bsf	plusw1,0,c
 15644  013908                     l8385:
 15645                           
 15646                           ;stkvar	_grs @ sp[(-13)+0]
 15647  013908  90D8               	bcf	status,0,c
 15648  01390A  0EF3               	movlw	-13
 15649  01390C  36E3               	rlcf	plusw1,f,c
 15650  01390E  0EF4               	movlw	-12
 15651  013910  36E3               	rlcf	plusw1,f,c
 15652  013912  0EF5               	movlw	-11
 15653  013914  36E3               	rlcf	plusw1,f,c
 15654  013916  0EF6               	movlw	-10
 15655  013918  36E3               	rlcf	plusw1,f,c
 15656  01391A                     l8387:
 15657                           
 15658                           ;stkvar	_a @ sp[(-13)+-8]
 15659                           ;stkvar	_rem @ sp[(-13)+4]
 15660  01391A  50E1               	movf	fsr1l,w,c
 15661  01391C  0FF7               	addlw	-9
 15662  01391E  6ED9               	movwf	fsr2l,c
 15663  013920  50E2               	movf	fsr1h,w,c
 15664  013922  6EDA               	movwf	fsr2h,c
 15665  013924  0EFF               	movlw	255
 15666  013926  22DA               	addwfc	fsr2h,f,c
 15667  013928  0EEB               	movlw	-21
 15668  01392A  50E3               	movf	plusw1,w,c
 15669  01392C  5CDE               	subwf	postinc2,w,c
 15670  01392E  0EEC               	movlw	-20
 15671  013930  50E3               	movf	plusw1,w,c
 15672  013932  58DE               	subwfb	postinc2,w,c
 15673  013934  0EED               	movlw	-19
 15674  013936  50E3               	movf	plusw1,w,c
 15675  013938  58DE               	subwfb	postinc2,w,c
 15676  01393A  0EEE               	movlw	-18
 15677  01393C  50E3               	movf	plusw1,w,c
 15678  01393E  58DE               	subwfb	postinc2,w,c
 15679  013940  A0D8               	btfss	status,0,c
 15680  013942  D015               	goto	l8393
 15681                           
 15682                           ;stkvar	_grs @ sp[(-13)+0]
 15683  013944  0EF6               	movlw	-10
 15684  013946  8CE3               	bsf	plusw1,6,c
 15685                           
 15686                           ;stkvar	_a @ sp[(-13)+-8]
 15687                           ;stkvar	_rem @ sp[(-13)+4]
 15688  013948  50E1               	movf	fsr1l,w,c
 15689  01394A  0FF7               	addlw	-9
 15690  01394C  6ED9               	movwf	fsr2l,c
 15691  01394E  50E2               	movf	fsr1h,w,c
 15692  013950  6EDA               	movwf	fsr2h,c
 15693  013952  0EFF               	movlw	255
 15694  013954  22DA               	addwfc	fsr2h,f,c
 15695  013956  0EEB               	movlw	-21
 15696  013958  50E3               	movf	plusw1,w,c
 15697  01395A  5EDE               	subwf	postinc2,f,c
 15698  01395C  0EEC               	movlw	-20
 15699  01395E  50E3               	movf	plusw1,w,c
 15700  013960  5ADE               	subwfb	postinc2,f,c
 15701  013962  0EED               	movlw	-19
 15702  013964  50E3               	movf	plusw1,w,c
 15703  013966  5ADE               	subwfb	postinc2,f,c
 15704  013968  0EEE               	movlw	-18
 15705  01396A  50E3               	movf	plusw1,w,c
 15706  01396C  5ADE               	subwfb	postinc2,f,c
 15707  01396E                     l8393:
 15708                           
 15709                           ;stkvar	_aexp @ sp[(-13)+10]
 15710  01396E  0EFD               	movlw	-3
 15711  013970  2AE3               	incf	plusw1,f,c
 15712  013972                     l8395:
 15713                           
 15714                           ;stkvar	_aexp @ sp[(-13)+10]
 15715  013972  0EFD               	movlw	-3
 15716  013974  006F FF8C  F025    	movff	plusw1,btemp
 15717  01397A  0E19               	movlw	25
 15718  01397C  6425               	cpfsgt	btemp^0,c
 15719  01397E  D7A9               	goto	l8377
 15720                           
 15721                           ;stkvar	_rem @ sp[(-13)+4]
 15722  013980  0EF7               	movlw	-9
 15723  013982  50E3               	movf	plusw1,w,c
 15724  013984  E10A               	bnz	u7860
 15725  013986  0EF8               	movlw	-8
 15726  013988  50E3               	movf	plusw1,w,c
 15727  01398A  E107               	bnz	u7860
 15728  01398C  0EF9               	movlw	-7
 15729  01398E  50E3               	movf	plusw1,w,c
 15730  013990  E104               	bnz	u7860
 15731  013992  0EFA               	movlw	-6
 15732  013994  50E3               	movf	plusw1,w,c
 15733  013996  B4D8               	btfsc	status,2,c
 15734  013998  D024               	goto	l8411
 15735  01399A                     u7860:
 15736                           
 15737                           ;stkvar	_grs @ sp[(-13)+0]
 15738  01399A  0EF3               	movlw	-13
 15739  01399C  80E3               	bsf	plusw1,0,c
 15740  01399E  D021               	goto	l8411
 15741  0139A0                     l8401:
 15742                           
 15743                           ;stkvar	_b @ sp[(-13)+-4]
 15744  0139A0  90D8               	bcf	status,0,c
 15745  0139A2  0EEF               	movlw	-17
 15746  0139A4  36E3               	rlcf	plusw1,f,c
 15747  0139A6  0EF0               	movlw	-16
 15748  0139A8  36E3               	rlcf	plusw1,f,c
 15749  0139AA  0EF1               	movlw	-15
 15750  0139AC  36E3               	rlcf	plusw1,f,c
 15751  0139AE  0EF2               	movlw	-14
 15752  0139B0  36E3               	rlcf	plusw1,f,c
 15753                           
 15754                           ;stkvar	_grs @ sp[(-13)+0]
 15755  0139B2  0EF6               	movlw	-10
 15756  0139B4  AEE3               	btfss	plusw1,7,c
 15757  0139B6  D002               	goto	l8407
 15758                           
 15759                           ;stkvar	_b @ sp[(-13)+-4]
 15760  0139B8  0EEF               	movlw	-17
 15761  0139BA  80E3               	bsf	plusw1,0,c
 15762  0139BC                     l8407:
 15763                           
 15764                           ;stkvar	_grs @ sp[(-13)+0]
 15765  0139BC  90D8               	bcf	status,0,c
 15766  0139BE  0EF3               	movlw	-13
 15767  0139C0  36E3               	rlcf	plusw1,f,c
 15768  0139C2  0EF4               	movlw	-12
 15769  0139C4  36E3               	rlcf	plusw1,f,c
 15770  0139C6  0EF5               	movlw	-11
 15771  0139C8  36E3               	rlcf	plusw1,f,c
 15772  0139CA  0EF6               	movlw	-10
 15773  0139CC  36E3               	rlcf	plusw1,f,c
 15774                           
 15775                           ;stkvar	_new_exp @ sp[(-13)+8]
 15776  0139CE  50E1               	movf	fsr1l,w,c
 15777  0139D0  0FFB               	addlw	-5
 15778  0139D2  6ED9               	movwf	fsr2l,c
 15779  0139D4  50E2               	movf	fsr1h,w,c
 15780  0139D6  6EDA               	movwf	fsr2h,c
 15781  0139D8  0EFF               	movlw	255
 15782  0139DA  22DA               	addwfc	fsr2h,f,c
 15783  0139DC  06DE               	decf	postinc2,f,c
 15784  0139DE  0E00               	movlw	0
 15785  0139E0  5ADD               	subwfb	postdec2,f,c
 15786  0139E2                     l8411:
 15787                           
 15788                           ;stkvar	_b @ sp[(-13)+-4]
 15789  0139E2  0EF1               	movlw	-15
 15790  0139E4  AEE3               	btfss	plusw1,7,c
 15791  0139E6  D7DC               	goto	l8401
 15792                           
 15793                           ;stkvar	_aexp @ sp[(-13)+10]
 15794  0139E8  0EFD               	movlw	-3
 15795  0139EA  6AE3               	clrf	plusw1,c
 15796                           
 15797                           ;stkvar	_grs @ sp[(-13)+0]
 15798  0139EC  0EF6               	movlw	-10
 15799  0139EE  AEE3               	btfss	plusw1,7,c
 15800  0139F0  D020               	goto	l8425
 15801                           
 15802                           ;stkvar	_grs @ sp[(-13)+0]
 15803  0139F2  50E1               	movf	fsr1l,w,c
 15804  0139F4  0FF3               	addlw	-13
 15805  0139F6  6ED9               	movwf	fsr2l,c
 15806  0139F8  50E2               	movf	fsr1h,w,c
 15807  0139FA  6EDA               	movwf	fsr2h,c
 15808  0139FC  0EFF               	movlw	255
 15809  0139FE  22DA               	addwfc	fsr2h,f,c
 15810  013A00  0EFF               	movlw	255
 15811  013A02  14DE               	andwf	postinc2,w,c
 15812  013A04  6E2D               	movwf	(btemp+8)^0,c
 15813  013A06  0EFF               	movlw	255
 15814  013A08  14DE               	andwf	postinc2,w,c
 15815  013A0A  6E2E               	movwf	(btemp+9)^0,c
 15816  013A0C  0EFF               	movlw	255
 15817  013A0E  14DE               	andwf	postinc2,w,c
 15818  013A10  6E2F               	movwf	(btemp+10)^0,c
 15819  013A12  0E7F               	movlw	127
 15820  013A14  14DE               	andwf	postinc2,w,c
 15821  013A16  6E30               	movwf	(btemp+11)^0,c
 15822  013A18  502D               	movf	(btemp+8)^0,w,c
 15823  013A1A  102E               	iorwf	(btemp+9)^0,w,c
 15824  013A1C  102F               	iorwf	(btemp+10)^0,w,c
 15825  013A1E  1030               	iorwf	(btemp+11)^0,w,c
 15826  013A20  B4D8               	btfsc	status,2,c
 15827  013A22  D004               	goto	l8421
 15828  013A24                     u7900:
 15829                           
 15830                           ;stkvar	_aexp @ sp[(-13)+10]
 15831  013A24  0EFD               	movlw	-3
 15832  013A26  6AE3               	clrf	plusw1,c
 15833  013A28  2AE3               	incf	plusw1,f,c
 15834  013A2A  D003               	goto	l8425
 15835  013A2C                     l8421:
 15836                           
 15837                           ;stkvar	_b @ sp[(-13)+-4]
 15838  013A2C  0EEF               	movlw	-17
 15839  013A2E  B0E3               	btfsc	plusw1,0,c
 15840  013A30  D7F9               	goto	u7900
 15841  013A32                     l8425:
 15842                           
 15843                           ;stkvar	_aexp @ sp[(-13)+10]
 15844  013A32  0EFD               	movlw	-3
 15845  013A34  50E3               	movf	plusw1,w,c
 15846  013A36  B4D8               	btfsc	status,2,c
 15847  013A38  D036               	goto	l8435
 15848                           
 15849                           ;stkvar	_b @ sp[(-13)+-4]
 15850  013A3A  50E1               	movf	fsr1l,w,c
 15851  013A3C  0FEF               	addlw	-17
 15852  013A3E  6ED9               	movwf	fsr2l,c
 15853  013A40  50E2               	movf	fsr1h,w,c
 15854  013A42  6EDA               	movwf	fsr2h,c
 15855  013A44  0EFF               	movlw	255
 15856  013A46  22DA               	addwfc	fsr2h,f,c
 15857  013A48  2ADE               	incf	postinc2,f,c
 15858  013A4A  0E00               	movlw	0
 15859  013A4C  22DE               	addwfc	postinc2,f,c
 15860  013A4E  22DE               	addwfc	postinc2,f,c
 15861  013A50  22DE               	addwfc	postinc2,f,c
 15862                           
 15863                           ;stkvar	_b @ sp[(-13)+-4]
 15864  013A52  0EF2               	movlw	-14
 15865  013A54  A0E3               	btfss	plusw1,0,c
 15866  013A56  D027               	goto	l8435
 15867  013A58  0E01               	movlw	1
 15868  013A5A  6E30               	movwf	(btemp+11)^0,c
 15869                           
 15870                           ;stkvar	_b @ sp[(-13)+-4]
 15871  013A5C  50E1               	movf	fsr1l,w,c
 15872  013A5E  0FEF               	addlw	-17
 15873  013A60  6ED9               	movwf	fsr2l,c
 15874  013A62  50E2               	movf	fsr1h,w,c
 15875  013A64  6EDA               	movwf	fsr2h,c
 15876  013A66  0EFF               	movlw	255
 15877  013A68  22DA               	addwfc	fsr2h,f,c
 15878  013A6A  2830               	incf	(btemp+11)^0,w,c
 15879  013A6C  52DE               	movf	postinc2,f,c
 15880  013A6E  D008               	goto	u7940
 15881  013A70                     u7945:
 15882  013A70  52DE               	movf	postinc2,f,c
 15883  013A72  90D8               	bcf	status,0,c
 15884  013A74  BEDC               	btfsc	preinc2,7,c
 15885  013A76  80D8               	bsf	status,0,c
 15886  013A78  32DD               	rrcf	postdec2,f,c
 15887  013A7A  32DD               	rrcf	postdec2,f,c
 15888  013A7C  32DD               	rrcf	postdec2,f,c
 15889  013A7E  32DE               	rrcf	postinc2,f,c
 15890  013A80                     u7940:
 15891  013A80  2EE8               	decfsz	wreg,f,c
 15892  013A82  D7F6               	goto	u7945
 15893                           
 15894                           ;stkvar	_new_exp @ sp[(-13)+8]
 15895  013A84  0EFB               	movlw	-5
 15896  013A86  50E3               	movf	plusw1,w,c
 15897  013A88  0F01               	addlw	1
 15898  013A8A  6E25               	movwf	btemp^0,c
 15899  013A8C  0EFB               	movlw	-5
 15900  013A8E  0060  F097  FFE3   	movff	btemp,plusw1
 15901  013A94  6A25               	clrf	btemp^0,c
 15902  013A96  0EFC               	movlw	-4
 15903  013A98  50E3               	movf	plusw1,w,c
 15904  013A9A  2025               	addwfc	btemp^0,w,c
 15905  013A9C  6E25               	movwf	btemp^0,c
 15906  013A9E  0EFC               	movlw	-4
 15907  013AA0  0060  F097  FFE3   	movff	btemp,plusw1
 15908  013AA6                     l8435:
 15909                           
 15910                           ;stkvar	_new_exp @ sp[(-13)+8]
 15911  013AA6  0EFC               	movlw	-4
 15912  013AA8  BEE3               	btfsc	plusw1,7,c
 15913  013AAA  D01B               	goto	l8441
 15914  013AAC  0EFC               	movlw	-4
 15915  013AAE  50E3               	movf	plusw1,w,c
 15916  013AB0  E104               	bnz	u7950
 15917  013AB2  0EFB               	movlw	-5
 15918  013AB4  28E3               	incf	plusw1,w,c
 15919  013AB6  A0D8               	btfss	status,0,c
 15920  013AB8  D014               	goto	l8441
 15921  013ABA                     u7950:
 15922  013ABA  0EFF               	movlw	255
 15923  013ABC  6E2F               	movwf	(btemp+10)^0,c
 15924  013ABE  0E00               	movlw	0
 15925  013AC0  6E30               	movwf	(btemp+11)^0,c
 15926                           
 15927                           ;stkvar	_new_exp @ sp[(-13)+8]
 15928  013AC2  0EFB               	movlw	-5
 15929  013AC4  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 15930  013ACA  0EFC               	movlw	-4
 15931  013ACC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 15932                           
 15933                           ;stkvar	_b @ sp[(-13)+-4]
 15934  013AD2  0EEF               	movlw	-17
 15935  013AD4  6AE3               	clrf	plusw1,c
 15936  013AD6  0EF0               	movlw	-16
 15937  013AD8  6AE3               	clrf	plusw1,c
 15938  013ADA  0EF1               	movlw	-15
 15939  013ADC  6AE3               	clrf	plusw1,c
 15940  013ADE  0EF2               	movlw	-14
 15941  013AE0  6AE3               	clrf	plusw1,c
 15942  013AE2                     l8441:
 15943                           
 15944                           ;stkvar	_new_exp @ sp[(-13)+8]
 15945  013AE2  0EFC               	movlw	-4
 15946  013AE4  BEE3               	btfsc	plusw1,7,c
 15947  013AE6  D007               	goto	u7960
 15948  013AE8  0EFC               	movlw	-4
 15949  013AEA  50E3               	movf	plusw1,w,c
 15950  013AEC  E112               	bnz	l8447
 15951  013AEE  0EFB               	movlw	-5
 15952  013AF0  04E3               	decf	plusw1,w,c
 15953  013AF2  B0D8               	btfsc	status,0,c
 15954  013AF4  D00E               	goto	l8447
 15955  013AF6                     u7960:
 15956                           
 15957                           ;stkvar	_new_exp @ sp[(-13)+8]
 15958  013AF6  0EFB               	movlw	-5
 15959  013AF8  6AE3               	clrf	plusw1,c
 15960  013AFA  0EFC               	movlw	-4
 15961  013AFC  6AE3               	clrf	plusw1,c
 15962                           
 15963                           ;stkvar	_b @ sp[(-13)+-4]
 15964  013AFE  0EEF               	movlw	-17
 15965  013B00  6AE3               	clrf	plusw1,c
 15966  013B02  0EF0               	movlw	-16
 15967  013B04  6AE3               	clrf	plusw1,c
 15968  013B06  0EF1               	movlw	-15
 15969  013B08  6AE3               	clrf	plusw1,c
 15970  013B0A  0EF2               	movlw	-14
 15971  013B0C  6AE3               	clrf	plusw1,c
 15972                           
 15973                           ;stkvar	_sign @ sp[(-13)+12]
 15974  013B0E  0EFF               	movlw	-1
 15975  013B10  6AE3               	clrf	plusw1,c
 15976  013B12                     l8447:
 15977                           
 15978                           ;stkvar	_new_exp @ sp[(-13)+8]
 15979                           ;stkvar	_bexp @ sp[(-13)+11]
 15980  013B12  0EFB               	movlw	-5
 15981  013B14  006F FF8C  F025    	movff	plusw1,btemp
 15982  013B1A  0EFE               	movlw	-2
 15983  013B1C  0060  F097  FFE3   	movff	btemp,plusw1
 15984                           
 15985                           ;stkvar	_bexp @ sp[(-13)+11]
 15986  013B22  0EFE               	movlw	-2
 15987  013B24  A0E3               	btfss	plusw1,0,c
 15988  013B26  D009               	goto	l8453
 15989                           
 15990                           ;stkvar	_b @ sp[(-13)+-4]
 15991  013B28  0EF1               	movlw	241
 15992  013B2A  24E1               	addwf	fsr1l,w,c
 15993  013B2C  6ED9               	movwf	fsr2l,c
 15994  013B2E  0EFF               	movlw	255
 15995  013B30  20E2               	addwfc	fsr1h,w,c
 15996  013B32  6EDA               	movwf	fsr2h,c
 15997  013B34  0E00               	movlw	0
 15998  013B36  8EDB               	bsf	plusw2,7,c
 15999  013B38  D008               	goto	l8455
 16000  013B3A                     l8453:
 16001                           
 16002                           ;stkvar	_b @ sp[(-13)+-4]
 16003  013B3A  0EF1               	movlw	241
 16004  013B3C  24E1               	addwf	fsr1l,w,c
 16005  013B3E  6ED9               	movwf	fsr2l,c
 16006  013B40  0EFF               	movlw	255
 16007  013B42  20E2               	addwfc	fsr1h,w,c
 16008  013B44  6EDA               	movwf	fsr2h,c
 16009  013B46  0E7F               	movlw	127
 16010  013B48  16DF               	andwf	indf2,f,c
 16011  013B4A                     l8455:
 16012                           
 16013                           ;stkvar	_b @ sp[(-13)+-4]
 16014  013B4A  0EF2               	movlw	242
 16015  013B4C  24E1               	addwf	fsr1l,w,c
 16016  013B4E  6ED9               	movwf	fsr2l,c
 16017  013B50  0EFF               	movlw	255
 16018  013B52  20E2               	addwfc	fsr1h,w,c
 16019  013B54  6EDA               	movwf	fsr2h,c
 16020                           
 16021                           ;stkvar	_bexp @ sp[(-13)+11]
 16022  013B56  0EFE               	movlw	-2
 16023  013B58  006F FF8C  F030    	movff	plusw1,btemp+11
 16024  013B5E  90D8               	bcf	status,0,c
 16025  013B60  3030               	rrcf	(btemp+11)^0,w,c
 16026  013B62  6EDF               	movwf	indf2,c
 16027  013B64  D644               	goto	l8353
 16028  013B66                     l2796:
 16029                           
 16030                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 16031  013B66  0EEB               	movlw	235
 16032  013B68  26E1               	addwf	fsr1l,f,c
 16033  013B6A  0EFF               	movlw	255
 16034  013B6C  22E2               	addwfc	fsr1h,f,c
 16035  013B6E  0012               	return		;funcret
 16036  013B70                     __end_of___fldiv:
 16037                           	opt callstack 0
 16038                           
 16039 ;; *************** function ___awmod *****************
 16040 ;; Defined at:
 16041 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 16042 ;; Parameters:    Size  Location     Type
 16043 ;;  dividend        2  [STACK] int 
 16044 ;;  divisor         2  [STACK] int 
 16045 ;; Auto vars:     Size  Location     Type
 16046 ;;  sign            1  [STACK] unsigned char 
 16047 ;;  counter         1  [STACK] unsigned char 
 16048 ;; Return value:  Size  Location     Type
 16049 ;;                  2  [STACK] int 
 16050 ;; Registers used:
 16051 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16052 ;; Tracked objects:
 16053 ;;		On entry : 0/0
 16054 ;;		On exit  : 0/0
 16055 ;;		Unchanged: 0/0
 16056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16061 ;;Total ram usage:        0 bytes
 16062 ;; Hardware stack levels used:    1
 16063 ;; Hardware stack levels required when called:    7
 16064 ;; This function calls:
 16065 ;;		Nothing
 16066 ;; This function is called by:
 16067 ;;		_efgtoa
 16068 ;; This function uses a reentrant model
 16069 ;;
 16070                           
 16071                           	psect	text59
 16072  016C6A                     __ptext59:
 16073                           	opt callstack 0
 16074  016C6A                     ___awmod:
 16075                           	opt callstack 0
 16076                           
 16077                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16078  016C6A  52E6               	movf	postinc1,f,c
 16079  016C6C  52E6               	movf	postinc1,f,c
 16080                           
 16081                           ;stkvar	_sign @ sp[(-2)+0]
 16082                           
 16083                           ;incstack = 0
 16084  016C6E  0EFE               	movlw	-2
 16085  016C70  6AE3               	clrf	plusw1,c
 16086                           
 16087                           ;stkvar	_dividend @ sp[(-2)+-2]
 16088  016C72  0EFD               	movlw	-3
 16089  016C74  AEE3               	btfss	plusw1,7,c
 16090  016C76  D009               	goto	l7023
 16091                           
 16092                           ;stkvar	_dividend @ sp[(-2)+-2]
 16093                           ;stkvar	_dividend @ sp[(-2)+-2]
 16094  016C78  0EFC               	movlw	-4
 16095  016C7A  6CE3               	negf	plusw1,c
 16096  016C7C  0EFD               	movlw	-3
 16097  016C7E  1EE3               	comf	plusw1,f,c
 16098  016C80  B0D8               	btfsc	status,0,c
 16099  016C82  2AE3               	incf	plusw1,f,c
 16100                           
 16101                           ;stkvar	_sign @ sp[(-2)+0]
 16102  016C84  0EFE               	movlw	-2
 16103  016C86  6AE3               	clrf	plusw1,c
 16104  016C88  2AE3               	incf	plusw1,f,c
 16105  016C8A                     l7023:
 16106                           
 16107                           ;stkvar	_divisor @ sp[(-2)+-4]
 16108  016C8A  0EFB               	movlw	-5
 16109  016C8C  AEE3               	btfss	plusw1,7,c
 16110  016C8E  D006               	goto	l7027
 16111                           
 16112                           ;stkvar	_divisor @ sp[(-2)+-4]
 16113                           ;stkvar	_divisor @ sp[(-2)+-4]
 16114  016C90  0EFA               	movlw	-6
 16115  016C92  6CE3               	negf	plusw1,c
 16116  016C94  0EFB               	movlw	-5
 16117  016C96  1EE3               	comf	plusw1,f,c
 16118  016C98  B0D8               	btfsc	status,0,c
 16119  016C9A  2AE3               	incf	plusw1,f,c
 16120  016C9C                     l7027:
 16121                           
 16122                           ;stkvar	_divisor @ sp[(-2)+-4]
 16123  016C9C  0EFA               	movlw	-6
 16124  016C9E  006F FF8C  F025    	movff	plusw1,btemp
 16125  016CA4  0EFB               	movlw	-5
 16126  016CA6  50E3               	movf	plusw1,w,c
 16127  016CA8  1025               	iorwf	btemp^0,w,c
 16128  016CAA  B4D8               	btfsc	status,2,c
 16129  016CAC  D053               	goto	u5640
 16130                           
 16131                           ;stkvar	_counter @ sp[(-2)+1]
 16132  016CAE  0EFF               	movlw	-1
 16133  016CB0  6AE3               	clrf	plusw1,c
 16134  016CB2  D012               	goto	L15
 16135  016CB4                     l7031:
 16136                           
 16137                           ;stkvar	_divisor @ sp[(-2)+-4]
 16138  016CB4  0EFA               	movlw	-6
 16139  016CB6  50E3               	movf	plusw1,w,c
 16140  016CB8  90D8               	bcf	status,0,c
 16141  016CBA  34E8               	rlcf	wreg,w,c
 16142  016CBC  6E25               	movwf	btemp^0,c
 16143  016CBE  0EFA               	movlw	-6
 16144  016CC0  0060  F097  FFE3   	movff	btemp,plusw1
 16145  016CC6  0EFB               	movlw	-5
 16146  016CC8  50E3               	movf	plusw1,w,c
 16147  016CCA  34E8               	rlcf	wreg,w,c
 16148  016CCC  6E25               	movwf	btemp^0,c
 16149  016CCE  0EFB               	movlw	-5
 16150  016CD0  0060  F097  FFE3   	movff	btemp,plusw1
 16151                           
 16152                           ;stkvar	_counter @ sp[(-2)+1]
 16153  016CD6  0EFF               	movlw	-1
 16154  016CD8                     L15:
 16155  016CD8  2AE3               	incf	plusw1,f,c
 16156                           
 16157                           ;stkvar	_divisor @ sp[(-2)+-4]
 16158  016CDA  0EFB               	movlw	-5
 16159  016CDC  AEE3               	btfss	plusw1,7,c
 16160  016CDE  D7EA               	goto	l7031
 16161  016CE0                     u5620:
 16162                           
 16163                           ;stkvar	_divisor @ sp[(-2)+-4]
 16164  016CE0  0EFA               	movlw	-6
 16165  016CE2  006F FF8C  F02F    	movff	plusw1,btemp+10
 16166  016CE8  0EFB               	movlw	-5
 16167  016CEA  006F FF8C  F030    	movff	plusw1,btemp+11
 16168                           
 16169                           ;stkvar	_dividend @ sp[(-2)+-2]
 16170  016CF0  0EFC               	movlw	-4
 16171  016CF2  006F FF8C  F02D    	movff	plusw1,btemp+8
 16172  016CF8  0EFD               	movlw	-3
 16173  016CFA  006F FF8C  F02E    	movff	plusw1,btemp+9
 16174  016D00  502F               	movf	(btemp+10)^0,w,c
 16175  016D02  5C2D               	subwf	(btemp+8)^0,w,c
 16176  016D04  5030               	movf	(btemp+11)^0,w,c
 16177  016D06  582E               	subwfb	(btemp+9)^0,w,c
 16178  016D08  A0D8               	btfss	status,0,c
 16179  016D0A  D014               	goto	l7041
 16180                           
 16181                           ;stkvar	_divisor @ sp[(-2)+-4]
 16182                           ;stkvar	_dividend @ sp[(-2)+-2]
 16183  016D0C  0EFC               	movlw	-4
 16184  016D0E  50E3               	movf	plusw1,w,c
 16185  016D10  6E25               	movwf	btemp^0,c
 16186  016D12  0EFA               	movlw	-6
 16187  016D14  50E3               	movf	plusw1,w,c
 16188  016D16  5E25               	subwf	btemp^0,f,c
 16189  016D18  0EFC               	movlw	-4
 16190  016D1A  0060  F097  FFE3   	movff	btemp,plusw1
 16191  016D20  0EFD               	movlw	-3
 16192  016D22  50E3               	movf	plusw1,w,c
 16193  016D24  6E25               	movwf	btemp^0,c
 16194  016D26  0EFB               	movlw	-5
 16195  016D28  50E3               	movf	plusw1,w,c
 16196  016D2A  5A25               	subwfb	btemp^0,f,c
 16197  016D2C  0EFD               	movlw	-3
 16198  016D2E  0060  F097  FFE3   	movff	btemp,plusw1
 16199  016D34                     l7041:
 16200                           
 16201                           ;stkvar	_divisor @ sp[(-2)+-4]
 16202  016D34  90D8               	bcf	status,0,c
 16203  016D36  0EFB               	movlw	-5
 16204  016D38  32E3               	rrcf	plusw1,f,c
 16205  016D3A  0EFA               	movlw	-6
 16206  016D3C  32E3               	rrcf	plusw1,f,c
 16207                           
 16208                           ;stkvar	_counter @ sp[(-2)+1]
 16209  016D3E  0EFF               	movlw	-1
 16210  016D40  50E3               	movf	plusw1,w,c
 16211  016D42  6E25               	movwf	btemp^0,c
 16212  016D44  0E01               	movlw	1
 16213  016D46  5E25               	subwf	btemp^0,f,c
 16214  016D48  0EFF               	movlw	-1
 16215  016D4A  0060  F097  FFE3   	movff	btemp,plusw1
 16216  016D50  A4D8               	btfss	status,2,c
 16217  016D52  D7C6               	goto	u5620
 16218  016D54                     u5640:
 16219                           
 16220                           ;stkvar	_sign @ sp[(-2)+0]
 16221  016D54  0EFE               	movlw	-2
 16222  016D56  50E3               	movf	plusw1,w,c
 16223  016D58  B4D8               	btfsc	status,2,c
 16224  016D5A  D006               	goto	l7049
 16225                           
 16226                           ;stkvar	_dividend @ sp[(-2)+-2]
 16227                           ;stkvar	_dividend @ sp[(-2)+-2]
 16228  016D5C  0EFC               	movlw	-4
 16229  016D5E  6CE3               	negf	plusw1,c
 16230  016D60  0EFD               	movlw	-3
 16231  016D62  1EE3               	comf	plusw1,f,c
 16232  016D64  B0D8               	btfsc	status,0,c
 16233  016D66  2AE3               	incf	plusw1,f,c
 16234  016D68                     l7049:
 16235                           
 16236                           ;stkvar	_dividend @ sp[(-2)+-2]
 16237  016D68  0EFC               	movlw	-4
 16238  016D6A  006F FF8C  F025    	movff	plusw1,btemp
 16239  016D70  0EFD               	movlw	-3
 16240  016D72  006F FF8C  F026    	movff	plusw1,btemp+1
 16241                           
 16242                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16243  016D78  0EFA               	movlw	250
 16244  016D7A  26E1               	addwf	fsr1l,f,c
 16245  016D7C  0EFF               	movlw	255
 16246  016D7E  22E2               	addwfc	fsr1h,f,c
 16247  016D80  0012               	return		;funcret
 16248  016D82                     __end_of___awmod:
 16249                           	opt callstack 0
 16250                           
 16251 ;; *************** function ___awdiv *****************
 16252 ;; Defined at:
 16253 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 16254 ;; Parameters:    Size  Location     Type
 16255 ;;  dividend        2  [STACK] int 
 16256 ;;  divisor         2  [STACK] int 
 16257 ;; Auto vars:     Size  Location     Type
 16258 ;;  quotient        2  [STACK] int 
 16259 ;;  sign            1  [STACK] unsigned char 
 16260 ;;  counter         1  [STACK] unsigned char 
 16261 ;; Return value:  Size  Location     Type
 16262 ;;                  2  [STACK] int 
 16263 ;; Registers used:
 16264 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 16265 ;; Tracked objects:
 16266 ;;		On entry : 0/0
 16267 ;;		On exit  : 0/0
 16268 ;;		Unchanged: 0/0
 16269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16274 ;;Total ram usage:        0 bytes
 16275 ;; Hardware stack levels used:    1
 16276 ;; Hardware stack levels required when called:    7
 16277 ;; This function calls:
 16278 ;;		Nothing
 16279 ;; This function is called by:
 16280 ;;		_efgtoa
 16281 ;; This function uses a reentrant model
 16282 ;;
 16283                           
 16284                           	psect	text60
 16285  016782                     __ptext60:
 16286                           	opt callstack 0
 16287  016782                     ___awdiv:
 16288                           	opt callstack 0
 16289                           
 16290                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16291  016782  52E6               	movf	postinc1,f,c
 16292  016784  52E6               	movf	postinc1,f,c
 16293  016786  52E6               	movf	postinc1,f,c
 16294  016788  52E6               	movf	postinc1,f,c
 16295                           
 16296                           ;stkvar	_sign @ sp[(-4)+2]
 16297                           
 16298                           ;incstack = 0
 16299  01678A  0EFE               	movlw	-2
 16300  01678C  6AE3               	clrf	plusw1,c
 16301                           
 16302                           ;stkvar	_divisor @ sp[(-4)+-4]
 16303  01678E  0EF9               	movlw	-7
 16304  016790  AEE3               	btfss	plusw1,7,c
 16305  016792  D009               	goto	l6977
 16306                           
 16307                           ;stkvar	_divisor @ sp[(-4)+-4]
 16308                           ;stkvar	_divisor @ sp[(-4)+-4]
 16309  016794  0EF8               	movlw	-8
 16310  016796  6CE3               	negf	plusw1,c
 16311  016798  0EF9               	movlw	-7
 16312  01679A  1EE3               	comf	plusw1,f,c
 16313  01679C  B0D8               	btfsc	status,0,c
 16314  01679E  2AE3               	incf	plusw1,f,c
 16315                           
 16316                           ;stkvar	_sign @ sp[(-4)+2]
 16317  0167A0  0EFE               	movlw	-2
 16318  0167A2  6AE3               	clrf	plusw1,c
 16319  0167A4  2AE3               	incf	plusw1,f,c
 16320  0167A6                     l6977:
 16321                           
 16322                           ;stkvar	_dividend @ sp[(-4)+-2]
 16323  0167A6  0EFB               	movlw	-5
 16324  0167A8  AEE3               	btfss	plusw1,7,c
 16325  0167AA  D008               	goto	l6983
 16326                           
 16327                           ;stkvar	_dividend @ sp[(-4)+-2]
 16328                           ;stkvar	_dividend @ sp[(-4)+-2]
 16329  0167AC  0EFA               	movlw	-6
 16330  0167AE  6CE3               	negf	plusw1,c
 16331  0167B0  0EFB               	movlw	-5
 16332  0167B2  1EE3               	comf	plusw1,f,c
 16333  0167B4  B0D8               	btfsc	status,0,c
 16334  0167B6  2AE3               	incf	plusw1,f,c
 16335                           
 16336                           ;stkvar	_sign @ sp[(-4)+2]
 16337  0167B8  0EFE               	movlw	-2
 16338  0167BA  70E3               	btg	plusw1,0,c
 16339  0167BC                     l6983:
 16340                           
 16341                           ;stkvar	_quotient @ sp[(-4)+0]
 16342  0167BC  0EFC               	movlw	-4
 16343  0167BE  6AE3               	clrf	plusw1,c
 16344  0167C0  0EFD               	movlw	-3
 16345  0167C2  6AE3               	clrf	plusw1,c
 16346                           
 16347                           ;stkvar	_divisor @ sp[(-4)+-4]
 16348  0167C4  0EF8               	movlw	-8
 16349  0167C6  006F FF8C  F025    	movff	plusw1,btemp
 16350  0167CC  0EF9               	movlw	-7
 16351  0167CE  50E3               	movf	plusw1,w,c
 16352  0167D0  1025               	iorwf	btemp^0,w,c
 16353  0167D2  B4D8               	btfsc	status,2,c
 16354  0167D4  D066               	goto	u5570
 16355                           
 16356                           ;stkvar	_counter @ sp[(-4)+3]
 16357  0167D6  0EFF               	movlw	-1
 16358  0167D8  6AE3               	clrf	plusw1,c
 16359  0167DA  D012               	goto	L16
 16360  0167DC                     l6989:
 16361                           
 16362                           ;stkvar	_divisor @ sp[(-4)+-4]
 16363  0167DC  0EF8               	movlw	-8
 16364  0167DE  50E3               	movf	plusw1,w,c
 16365  0167E0  90D8               	bcf	status,0,c
 16366  0167E2  34E8               	rlcf	wreg,w,c
 16367  0167E4  6E25               	movwf	btemp^0,c
 16368  0167E6  0EF8               	movlw	-8
 16369  0167E8  0060  F097  FFE3   	movff	btemp,plusw1
 16370  0167EE  0EF9               	movlw	-7
 16371  0167F0  50E3               	movf	plusw1,w,c
 16372  0167F2  34E8               	rlcf	wreg,w,c
 16373  0167F4  6E25               	movwf	btemp^0,c
 16374  0167F6  0EF9               	movlw	-7
 16375  0167F8  0060  F097  FFE3   	movff	btemp,plusw1
 16376                           
 16377                           ;stkvar	_counter @ sp[(-4)+3]
 16378  0167FE  0EFF               	movlw	-1
 16379  016800                     L16:
 16380  016800  2AE3               	incf	plusw1,f,c
 16381                           
 16382                           ;stkvar	_divisor @ sp[(-4)+-4]
 16383  016802  0EF9               	movlw	-7
 16384  016804  AEE3               	btfss	plusw1,7,c
 16385  016806  D7EA               	goto	l6989
 16386  016808                     u5550:
 16387                           
 16388                           ;stkvar	_quotient @ sp[(-4)+0]
 16389  016808  0EFC               	movlw	-4
 16390  01680A  50E3               	movf	plusw1,w,c
 16391  01680C  90D8               	bcf	status,0,c
 16392  01680E  34E8               	rlcf	wreg,w,c
 16393  016810  6E25               	movwf	btemp^0,c
 16394  016812  0EFC               	movlw	-4
 16395  016814  0060  F097  FFE3   	movff	btemp,plusw1
 16396  01681A  0EFD               	movlw	-3
 16397  01681C  50E3               	movf	plusw1,w,c
 16398  01681E  34E8               	rlcf	wreg,w,c
 16399  016820  6E25               	movwf	btemp^0,c
 16400  016822  0EFD               	movlw	-3
 16401  016824  0060  F097  FFE3   	movff	btemp,plusw1
 16402                           
 16403                           ;stkvar	_divisor @ sp[(-4)+-4]
 16404  01682A  0EF8               	movlw	-8
 16405  01682C  006F FF8C  F02F    	movff	plusw1,btemp+10
 16406  016832  0EF9               	movlw	-7
 16407  016834  006F FF8C  F030    	movff	plusw1,btemp+11
 16408                           
 16409                           ;stkvar	_dividend @ sp[(-4)+-2]
 16410  01683A  0EFA               	movlw	-6
 16411  01683C  006F FF8C  F02D    	movff	plusw1,btemp+8
 16412  016842  0EFB               	movlw	-5
 16413  016844  006F FF8C  F02E    	movff	plusw1,btemp+9
 16414  01684A  502F               	movf	(btemp+10)^0,w,c
 16415  01684C  5C2D               	subwf	(btemp+8)^0,w,c
 16416  01684E  5030               	movf	(btemp+11)^0,w,c
 16417  016850  582E               	subwfb	(btemp+9)^0,w,c
 16418  016852  A0D8               	btfss	status,0,c
 16419  016854  D016               	goto	l7003
 16420                           
 16421                           ;stkvar	_divisor @ sp[(-4)+-4]
 16422                           ;stkvar	_dividend @ sp[(-4)+-2]
 16423  016856  0EFA               	movlw	-6
 16424  016858  50E3               	movf	plusw1,w,c
 16425  01685A  6E25               	movwf	btemp^0,c
 16426  01685C  0EF8               	movlw	-8
 16427  01685E  50E3               	movf	plusw1,w,c
 16428  016860  5E25               	subwf	btemp^0,f,c
 16429  016862  0EFA               	movlw	-6
 16430  016864  0060  F097  FFE3   	movff	btemp,plusw1
 16431  01686A  0EFB               	movlw	-5
 16432  01686C  50E3               	movf	plusw1,w,c
 16433  01686E  6E25               	movwf	btemp^0,c
 16434  016870  0EF9               	movlw	-7
 16435  016872  50E3               	movf	plusw1,w,c
 16436  016874  5A25               	subwfb	btemp^0,f,c
 16437  016876  0EFB               	movlw	-5
 16438  016878  0060  F097  FFE3   	movff	btemp,plusw1
 16439                           
 16440                           ;stkvar	_quotient @ sp[(-4)+0]
 16441  01687E  0EFC               	movlw	-4
 16442  016880  80E3               	bsf	plusw1,0,c
 16443  016882                     l7003:
 16444                           
 16445                           ;stkvar	_divisor @ sp[(-4)+-4]
 16446  016882  90D8               	bcf	status,0,c
 16447  016884  0EF9               	movlw	-7
 16448  016886  32E3               	rrcf	plusw1,f,c
 16449  016888  0EF8               	movlw	-8
 16450  01688A  32E3               	rrcf	plusw1,f,c
 16451                           
 16452                           ;stkvar	_counter @ sp[(-4)+3]
 16453  01688C  0EFF               	movlw	-1
 16454  01688E  50E3               	movf	plusw1,w,c
 16455  016890  6E25               	movwf	btemp^0,c
 16456  016892  0E01               	movlw	1
 16457  016894  5E25               	subwf	btemp^0,f,c
 16458  016896  0EFF               	movlw	-1
 16459  016898  0060  F097  FFE3   	movff	btemp,plusw1
 16460  01689E  A4D8               	btfss	status,2,c
 16461  0168A0  D7B3               	goto	u5550
 16462  0168A2                     u5570:
 16463                           
 16464                           ;stkvar	_sign @ sp[(-4)+2]
 16465  0168A2  0EFE               	movlw	-2
 16466  0168A4  50E3               	movf	plusw1,w,c
 16467  0168A6  B4D8               	btfsc	status,2,c
 16468  0168A8  D006               	goto	l7011
 16469                           
 16470                           ;stkvar	_quotient @ sp[(-4)+0]
 16471                           ;stkvar	_quotient @ sp[(-4)+0]
 16472  0168AA  0EFC               	movlw	-4
 16473  0168AC  6CE3               	negf	plusw1,c
 16474  0168AE  0EFD               	movlw	-3
 16475  0168B0  1EE3               	comf	plusw1,f,c
 16476  0168B2  B0D8               	btfsc	status,0,c
 16477  0168B4  2AE3               	incf	plusw1,f,c
 16478  0168B6                     l7011:
 16479                           
 16480                           ;stkvar	_quotient @ sp[(-4)+0]
 16481  0168B6  0EFC               	movlw	-4
 16482  0168B8  006F FF8C  F025    	movff	plusw1,btemp
 16483  0168BE  0EFD               	movlw	-3
 16484  0168C0  006F FF8C  F026    	movff	plusw1,btemp+1
 16485                           
 16486                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 16487  0168C6  0EF8               	movlw	248
 16488  0168C8  26E1               	addwf	fsr1l,f,c
 16489  0168CA  0EFF               	movlw	255
 16490  0168CC  22E2               	addwfc	fsr1h,f,c
 16491  0168CE  0012               	return		;funcret
 16492  0168D0                     __end_of___awdiv:
 16493                           	opt callstack 0
 16494                           
 16495 ;; *************** function _dtoa *****************
 16496 ;; Defined at:
 16497 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 16498 ;; Parameters:    Size  Location     Type
 16499 ;;  fp              2  [STACK] PTR struct _IO_FILE
 16500 ;;		 -> f(6), NULL(0), 
 16501 ;;  d               8  [STACK] long long 
 16502 ;; Auto vars:     Size  Location     Type
 16503 ;;  n               8  [STACK] long long 
 16504 ;;  i               2  [STACK] int 
 16505 ;;  s               2  [STACK] int 
 16506 ;;  w               2  [STACK] int 
 16507 ;;  p               2  [STACK] int 
 16508 ;; Return value:  Size  Location     Type
 16509 ;;                  2  [STACK] int 
 16510 ;; Registers used:
 16511 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 16512 ;; Tracked objects:
 16513 ;;		On entry : 0/0
 16514 ;;		On exit  : 0/0
 16515 ;;		Unchanged: 0/0
 16516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16521 ;;Total ram usage:        0 bytes
 16522 ;; Hardware stack levels used:    1
 16523 ;; Hardware stack levels required when called:   12
 16524 ;; This function calls:
 16525 ;;		___aodiv
 16526 ;;		___aomod
 16527 ;;		_abs
 16528 ;;		_pad
 16529 ;; This function is called by:
 16530 ;;		_vfpfcnvrt
 16531 ;; This function uses a reentrant model
 16532 ;;
 16533                           
 16534                           	psect	text61
 16535  01401C                     __ptext61:
 16536                           	opt callstack 0
 16537  01401C                     _dtoa:
 16538                           	opt callstack 0
 16539                           
 16540                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 16541  01401C  0E12               	movlw	18
 16542  01401E  26E1               	addwf	fsr1l,f,c
 16543  014020  0E00               	movlw	0
 16544  014022  22E2               	addwfc	fsr1h,f,c
 16545                           
 16546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 16547                           ;stkvar	_d @ sp[(-18)+-10]
 16548                           
 16549                           ;incstack = 0
 16550  014024  0EE4               	movlw	228
 16551  014026  24E1               	addwf	fsr1l,w,c
 16552  014028  6ED9               	movwf	fsr2l,c
 16553  01402A  0EFF               	movlw	255
 16554  01402C  20E2               	addwfc	fsr1h,w,c
 16555  01402E  6EDA               	movwf	fsr2h,c
 16556                           
 16557                           ;stkvar	_n @ sp[(-18)+2]
 16558  014030  0E08               	movlw	8
 16559  014032  6E25               	movwf	btemp^0,c
 16560  014034  0EF0               	movlw	-16
 16561  014036                     us931999:
 16562  014036  006F FF7B FFE3     	movff	postinc2,plusw1
 16563  01403C  28E8               	incf	wreg,w,c
 16564  01403E  2E25               	decfsz	btemp^0,f,c
 16565  014040  D7FA               	bra	us931999
 16566                           
 16567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 16568                           ;stkvar	_n @ sp[(-18)+2]
 16569  014042  0EF7               	movlw	-9
 16570  014044  AEE3               	btfss	plusw1,7,c
 16571  014046  D002               	goto	u9320
 16572  014048  0E01               	movlw	1
 16573  01404A  D001               	goto	u9330
 16574  01404C                     u9320:
 16575  01404C  0E00               	movlw	0
 16576  01404E                     u9330:
 16577  01404E  6E2F               	movwf	(btemp+10)^0,c
 16578  014050  6A30               	clrf	(btemp+11)^0,c
 16579                           
 16580                           ;stkvar	_s @ sp[(-18)+12]
 16581  014052  0EFA               	movlw	-6
 16582  014054  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16583  01405A  0EFB               	movlw	-5
 16584  01405C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16585                           
 16586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 16587                           ;stkvar	_s @ sp[(-18)+12]
 16588  014062  0EFA               	movlw	-6
 16589  014064  006F FF8C  F025    	movff	plusw1,btemp
 16590  01406A  0EFB               	movlw	-5
 16591  01406C  50E3               	movf	plusw1,w,c
 16592  01406E  1025               	iorwf	btemp^0,w,c
 16593  014070  B4D8               	btfsc	status,2,c
 16594  014072  D025               	goto	u9350
 16595                           
 16596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 16597                           ;stkvar	_n @ sp[(-18)+2]
 16598                           ;stkvar	_n @ sp[(-18)+2]
 16599  014074  0EF0               	movlw	-16
 16600  014076  6CE3               	negf	plusw1,c
 16601  014078  0EF1               	movlw	-15
 16602  01407A  1EE3               	comf	plusw1,f,c
 16603  01407C  0EF2               	movlw	-14
 16604  01407E  1EE3               	comf	plusw1,f,c
 16605  014080  0EF3               	movlw	-13
 16606  014082  1EE3               	comf	plusw1,f,c
 16607  014084  0EF4               	movlw	-12
 16608  014086  1EE3               	comf	plusw1,f,c
 16609  014088  0EF5               	movlw	-11
 16610  01408A  1EE3               	comf	plusw1,f,c
 16611  01408C  0EF6               	movlw	-10
 16612  01408E  1EE3               	comf	plusw1,f,c
 16613  014090  0EF7               	movlw	-9
 16614  014092  1EE3               	comf	plusw1,f,c
 16615  014094  E314               	bnc	u9350
 16616  014096  0EF1               	movlw	-15
 16617  014098  2AE3               	incf	plusw1,f,c
 16618  01409A  E311               	bnc	u9350
 16619  01409C  0EF2               	movlw	-14
 16620  01409E  2AE3               	incf	plusw1,f,c
 16621  0140A0  E30E               	bnc	u9350
 16622  0140A2  0EF3               	movlw	-13
 16623  0140A4  2AE3               	incf	plusw1,f,c
 16624  0140A6  E30B               	bnc	u9350
 16625  0140A8  0EF4               	movlw	-12
 16626  0140AA  2AE3               	incf	plusw1,f,c
 16627  0140AC  E308               	bnc	u9350
 16628  0140AE  0EF5               	movlw	-11
 16629  0140B0  2AE3               	incf	plusw1,f,c
 16630  0140B2  E305               	bnc	u9350
 16631  0140B4  0EF6               	movlw	-10
 16632  0140B6  2AE3               	incf	plusw1,f,c
 16633  0140B8  E302               	bnc	u9350
 16634  0140BA  0EF7               	movlw	-9
 16635  0140BC  2AE3               	incf	plusw1,f,c
 16636  0140BE                     u9350:
 16637                           
 16638                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 16639  0140BE  AE0D               	btfss	(_prec+1)^0,7,c
 16640                           
 16641                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 16642  0140C0  920E               	bcf	_flags^0,1,c
 16643                           
 16644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 16645  0140C2  BE0D               	btfsc	(_prec+1)^0,7,c
 16646  0140C4  D005               	goto	u9370
 16647  0140C6  500D               	movf	(_prec+1)^0,w,c
 16648  0140C8  E110               	bnz	l10077
 16649  0140CA  040C               	decf	_prec^0,w,c
 16650  0140CC  B0D8               	btfsc	status,0,c
 16651  0140CE  D00D               	goto	l10077
 16652  0140D0                     u9370:
 16653  0140D0  0E01               	movlw	1
 16654  0140D2  6E2F               	movwf	(btemp+10)^0,c
 16655  0140D4  0E00               	movlw	0
 16656  0140D6  6E30               	movwf	(btemp+11)^0,c
 16657                           
 16658                           ;stkvar	_p @ sp[(-18)+16]
 16659  0140D8  0EFE               	movlw	-2
 16660  0140DA  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16661  0140E0  0EFF               	movlw	-1
 16662  0140E2  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16663  0140E8  D008               	goto	l2000
 16664  0140EA                     l10077:
 16665                           
 16666                           ;stkvar	_p @ sp[(-18)+16]
 16667  0140EA  0EFE               	movlw	-2
 16668  0140EC  0060  F033  FFE3   	movff	_prec,plusw1
 16669  0140F2  0EFF               	movlw	-1
 16670  0140F4  0060  F037  FFE3   	movff	_prec+1,plusw1
 16671  0140FA                     l2000:
 16672                           
 16673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 16674                           ;stkvar	_w @ sp[(-18)+14]
 16675  0140FA  0EFC               	movlw	-4
 16676  0140FC  0060  F02B  FFE3   	movff	_width,plusw1
 16677  014102  0EFD               	movlw	-3
 16678  014104  0060  F02F  FFE3   	movff	_width+1,plusw1
 16679                           
 16680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 16681                           ;stkvar	_s @ sp[(-18)+12]
 16682  01410A  0EFA               	movlw	-6
 16683  01410C  006F FF8C  F025    	movff	plusw1,btemp
 16684  014112  0EFB               	movlw	-5
 16685  014114  50E3               	movf	plusw1,w,c
 16686  014116  1025               	iorwf	btemp^0,w,c
 16687  014118  A4D8               	btfss	status,2,c
 16688  01411A  D002               	goto	u9390
 16689  01411C  A40E               	btfss	_flags^0,2,c
 16690  01411E  D00A               	goto	l10085
 16691  014120                     u9390:
 16692                           
 16693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 16694                           ;stkvar	_w @ sp[(-18)+14]
 16695  014120  50E1               	movf	fsr1l,w,c
 16696  014122  0FFC               	addlw	-4
 16697  014124  6ED9               	movwf	fsr2l,c
 16698  014126  50E2               	movf	fsr1h,w,c
 16699  014128  6EDA               	movwf	fsr2h,c
 16700  01412A  0EFF               	movlw	255
 16701  01412C  22DA               	addwfc	fsr2h,f,c
 16702  01412E  06DE               	decf	postinc2,f,c
 16703  014130  0E00               	movlw	0
 16704  014132  5ADD               	subwfb	postdec2,f,c
 16705  014134                     l10085:
 16706                           
 16707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 16708  014134  0E4F               	movlw	79
 16709  014136  6E2F               	movwf	(btemp+10)^0,c
 16710  014138  0E00               	movlw	0
 16711  01413A  6E30               	movwf	(btemp+11)^0,c
 16712                           
 16713                           ;stkvar	_i @ sp[(-18)+10]
 16714  01413C  0EF8               	movlw	-8
 16715  01413E  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 16716  014144  0EF9               	movlw	-7
 16717  014146  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 16718                           
 16719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 16720  01414C  0103               	movlb	3	; () banked
 16721  01414E  6BE3               	clrf	(_dbuf+79)& (0+255),b
 16722                           
 16723                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16724  014150  D109               	goto	l10099
 16725  014152                     l10089:
 16726                           
 16727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 16728                           ;stkvar	_i @ sp[(-18)+10]
 16729  014152  50E1               	movf	fsr1l,w,c
 16730  014154  0FF8               	addlw	-8
 16731  014156  6ED9               	movwf	fsr2l,c
 16732  014158  50E2               	movf	fsr1h,w,c
 16733  01415A  6EDA               	movwf	fsr2h,c
 16734  01415C  0EFF               	movlw	255
 16735  01415E  22DA               	addwfc	fsr2h,f,c
 16736  014160  06DE               	decf	postinc2,f,c
 16737  014162  0E00               	movlw	0
 16738  014164  5ADD               	subwfb	postdec2,f,c
 16739                           
 16740                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 16741  014166  0E0A               	movlw	10
 16742  014168  6EE6               	movwf	postinc1,c
 16743  01416A  0E00               	movlw	0
 16744  01416C  6EE6               	movwf	postinc1,c
 16745  01416E  0E00               	movlw	0
 16746  014170  6EE6               	movwf	postinc1,c
 16747  014172  0E00               	movlw	0
 16748  014174  6EE6               	movwf	postinc1,c
 16749  014176  0E00               	movlw	0
 16750  014178  6EE6               	movwf	postinc1,c
 16751  01417A  0E00               	movlw	0
 16752  01417C  6EE6               	movwf	postinc1,c
 16753  01417E  0E00               	movlw	0
 16754  014180  6EE6               	movwf	postinc1,c
 16755  014182  0E00               	movlw	0
 16756  014184  6EE6               	movwf	postinc1,c
 16757                           
 16758                           ;stkvar	_n @ sp[(-26)+2]
 16759  014186  50E1               	movf	fsr1l,w,c
 16760  014188  0FE8               	addlw	-24
 16761  01418A  6ED9               	movwf	fsr2l,c
 16762  01418C  50E2               	movf	fsr1h,w,c
 16763  01418E  6EDA               	movwf	fsr2h,c
 16764  014190  0EFF               	movlw	255
 16765  014192  22DA               	addwfc	fsr2h,f,c
 16766  014194  006F FF7B FFE6     	movff	postinc2,postinc1
 16767  01419A  006F FF7B FFE6     	movff	postinc2,postinc1
 16768  0141A0  006F FF7B FFE6     	movff	postinc2,postinc1
 16769  0141A6  006F FF7B FFE6     	movff	postinc2,postinc1
 16770  0141AC  006F FF7B FFE6     	movff	postinc2,postinc1
 16771  0141B2  006F FF7B FFE6     	movff	postinc2,postinc1
 16772  0141B8  006F FF7B FFE6     	movff	postinc2,postinc1
 16773  0141BE  006F FF7B FFE6     	movff	postinc2,postinc1
 16774  0141C4  EC9D  F0AC         	call	___aomod	;wreg free
 16775  0141C8  52E5               	movf	postdec1,f,c
 16776  0141CA  006F FF9C  F03C    	movff	indf1,btemp+23
 16777  0141D0  52E5               	movf	postdec1,f,c
 16778  0141D2  006F FF9C  F03B    	movff	indf1,btemp+22
 16779  0141D8  52E5               	movf	postdec1,f,c
 16780  0141DA  006F FF9C  F03A    	movff	indf1,btemp+21
 16781  0141E0  52E5               	movf	postdec1,f,c
 16782  0141E2  006F FF9C  F039    	movff	indf1,btemp+20
 16783  0141E8  52E5               	movf	postdec1,f,c
 16784  0141EA  006F FF9C  F038    	movff	indf1,btemp+19
 16785  0141F0  52E5               	movf	postdec1,f,c
 16786  0141F2  006F FF9C  F037    	movff	indf1,btemp+18
 16787  0141F8  52E5               	movf	postdec1,f,c
 16788  0141FA  006F FF9C  F036    	movff	indf1,btemp+17
 16789  014200  52E5               	movf	postdec1,f,c
 16790  014202  006F FF9C  F035    	movff	indf1,btemp+16
 16791  014208  0EF8               	movlw	248
 16792  01420A  26E1               	addwf	fsr1l,f,c
 16793  01420C  0EFF               	movlw	255
 16794  01420E  22E2               	addwfc	fsr1h,f,c
 16795  014210  0060  F0D4  F02F   	movff	btemp+16,btemp+10
 16796  014216  0060  F0D8  F030   	movff	btemp+17,btemp+11
 16797  01421C  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 16798  014222  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 16799  014228  EC09  F0C3         	call	_abs	;wreg free
 16800  01422C  0E30               	movlw	48
 16801  01422E  2625               	addwf	btemp^0,f,c
 16802                           
 16803                           ;stkvar	_i @ sp[(-18)+10]
 16804  014230  0EF8               	movlw	-8
 16805  014232  006F FF8C  F02F    	movff	plusw1,btemp+10
 16806  014238  0EF9               	movlw	-7
 16807  01423A  006F FF8C  F030    	movff	plusw1,btemp+11
 16808  014240  0E94               	movlw	low _dbuf
 16809  014242  242F               	addwf	(btemp+10)^0,w,c
 16810  014244  6ED9               	movwf	fsr2l,c
 16811  014246  0E03               	movlw	high _dbuf
 16812  014248  2030               	addwfc	(btemp+11)^0,w,c
 16813  01424A  6EDA               	movwf	fsr2h,c
 16814  01424C  0060  F097  FFDF   	movff	btemp,indf2
 16815                           
 16816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 16817                           ;stkvar	_p @ sp[(-18)+16]
 16818  014252  50E1               	movf	fsr1l,w,c
 16819  014254  0FFE               	addlw	-2
 16820  014256  6ED9               	movwf	fsr2l,c
 16821  014258  50E2               	movf	fsr1h,w,c
 16822  01425A  6EDA               	movwf	fsr2h,c
 16823  01425C  0EFF               	movlw	255
 16824  01425E  22DA               	addwfc	fsr2h,f,c
 16825  014260  06DE               	decf	postinc2,f,c
 16826  014262  0E00               	movlw	0
 16827  014264  5ADD               	subwfb	postdec2,f,c
 16828                           
 16829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 16830                           ;stkvar	_w @ sp[(-18)+14]
 16831  014266  50E1               	movf	fsr1l,w,c
 16832  014268  0FFC               	addlw	-4
 16833  01426A  6ED9               	movwf	fsr2l,c
 16834  01426C  50E2               	movf	fsr1h,w,c
 16835  01426E  6EDA               	movwf	fsr2h,c
 16836  014270  0EFF               	movlw	255
 16837  014272  22DA               	addwfc	fsr2h,f,c
 16838  014274  06DE               	decf	postinc2,f,c
 16839  014276  0E00               	movlw	0
 16840  014278  5ADD               	subwfb	postdec2,f,c
 16841                           
 16842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 16843  01427A  0E0A               	movlw	10
 16844  01427C  6EE6               	movwf	postinc1,c
 16845  01427E  0E00               	movlw	0
 16846  014280  6EE6               	movwf	postinc1,c
 16847  014282  0E00               	movlw	0
 16848  014284  6EE6               	movwf	postinc1,c
 16849  014286  0E00               	movlw	0
 16850  014288  6EE6               	movwf	postinc1,c
 16851  01428A  0E00               	movlw	0
 16852  01428C  6EE6               	movwf	postinc1,c
 16853  01428E  0E00               	movlw	0
 16854  014290  6EE6               	movwf	postinc1,c
 16855  014292  0E00               	movlw	0
 16856  014294  6EE6               	movwf	postinc1,c
 16857  014296  0E00               	movlw	0
 16858  014298  6EE6               	movwf	postinc1,c
 16859                           
 16860                           ;stkvar	_n @ sp[(-26)+2]
 16861  01429A  50E1               	movf	fsr1l,w,c
 16862  01429C  0FE8               	addlw	-24
 16863  01429E  6ED9               	movwf	fsr2l,c
 16864  0142A0  50E2               	movf	fsr1h,w,c
 16865  0142A2  6EDA               	movwf	fsr2h,c
 16866  0142A4  0EFF               	movlw	255
 16867  0142A6  22DA               	addwfc	fsr2h,f,c
 16868  0142A8  006F FF7B FFE6     	movff	postinc2,postinc1
 16869  0142AE  006F FF7B FFE6     	movff	postinc2,postinc1
 16870  0142B4  006F FF7B FFE6     	movff	postinc2,postinc1
 16871  0142BA  006F FF7B FFE6     	movff	postinc2,postinc1
 16872  0142C0  006F FF7B FFE6     	movff	postinc2,postinc1
 16873  0142C6  006F FF7B FFE6     	movff	postinc2,postinc1
 16874  0142CC  006F FF7B FFE6     	movff	postinc2,postinc1
 16875  0142D2  006F FF7B FFE6     	movff	postinc2,postinc1
 16876  0142D8  EC23  F0AA         	call	___aodiv	;wreg free
 16877  0142DC  52E5               	movf	postdec1,f,c
 16878  0142DE  006F FF9C  F03C    	movff	indf1,btemp+23
 16879  0142E4  52E5               	movf	postdec1,f,c
 16880  0142E6  006F FF9C  F03B    	movff	indf1,btemp+22
 16881  0142EC  52E5               	movf	postdec1,f,c
 16882  0142EE  006F FF9C  F03A    	movff	indf1,btemp+21
 16883  0142F4  52E5               	movf	postdec1,f,c
 16884  0142F6  006F FF9C  F039    	movff	indf1,btemp+20
 16885  0142FC  52E5               	movf	postdec1,f,c
 16886  0142FE  006F FF9C  F038    	movff	indf1,btemp+19
 16887  014304  52E5               	movf	postdec1,f,c
 16888  014306  006F FF9C  F037    	movff	indf1,btemp+18
 16889  01430C  52E5               	movf	postdec1,f,c
 16890  01430E  006F FF9C  F036    	movff	indf1,btemp+17
 16891  014314  52E5               	movf	postdec1,f,c
 16892  014316  006F FF9C  F035    	movff	indf1,btemp+16
 16893  01431C  0EF8               	movlw	248
 16894  01431E  26E1               	addwf	fsr1l,f,c
 16895  014320  0EFF               	movlw	255
 16896  014322  22E2               	addwfc	fsr1h,f,c
 16897                           
 16898                           ;stkvar	_n @ sp[(-18)+2]
 16899  014324  0EF0               	movlw	-16
 16900  014326  0060  F0D7  FFE3   	movff	btemp+16,plusw1
 16901  01432C  0EF1               	movlw	-15
 16902  01432E  0060  F0DB  FFE3   	movff	btemp+17,plusw1
 16903  014334  0EF2               	movlw	-14
 16904  014336  0060  F0DF  FFE3   	movff	btemp+18,plusw1
 16905  01433C  0EF3               	movlw	-13
 16906  01433E  0060  F0E3  FFE3   	movff	btemp+19,plusw1
 16907  014344  0EF4               	movlw	-12
 16908  014346  0060  F0E7  FFE3   	movff	btemp+20,plusw1
 16909  01434C  0EF5               	movlw	-11
 16910  01434E  0060  F0EB  FFE3   	movff	btemp+21,plusw1
 16911  014354  0EF6               	movlw	-10
 16912  014356  0060  F0EF  FFE3   	movff	btemp+22,plusw1
 16913  01435C  0EF7               	movlw	-9
 16914  01435E  0060  F0F3  FFE3   	movff	btemp+23,plusw1
 16915  014364                     l10099:
 16916                           
 16917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 16918                           ;stkvar	_i @ sp[(-18)+10]
 16919  014364  0EF9               	movlw	-7
 16920  014366  BEE3               	btfsc	plusw1,7,c
 16921  014368  D036               	goto	u9440
 16922  01436A  0EF9               	movlw	-7
 16923  01436C  50E3               	movf	plusw1,w,c
 16924  01436E  E104               	bnz	u9400
 16925  014370  0EF8               	movlw	-8
 16926  014372  04E3               	decf	plusw1,w,c
 16927  014374  A0D8               	btfss	status,0,c
 16928  014376  D02F               	goto	u9440
 16929  014378                     u9400:
 16930                           
 16931                           ;stkvar	_n @ sp[(-18)+2]
 16932  014378  0EF0               	movlw	-16
 16933  01437A  50E3               	movf	plusw1,w,c
 16934  01437C  E115               	bnz	u9411
 16935  01437E  0EF1               	movlw	-15
 16936  014380  50E3               	movf	plusw1,w,c
 16937  014382  E112               	bnz	u9411
 16938  014384  0EF2               	movlw	-14
 16939  014386  50E3               	movf	plusw1,w,c
 16940  014388  E10F               	bnz	u9411
 16941  01438A  0EF3               	movlw	-13
 16942  01438C  50E3               	movf	plusw1,w,c
 16943  01438E  E10C               	bnz	u9411
 16944  014390  0EF4               	movlw	-12
 16945  014392  50E3               	movf	plusw1,w,c
 16946  014394  E109               	bnz	u9411
 16947  014396  0EF5               	movlw	-11
 16948  014398  50E3               	movf	plusw1,w,c
 16949  01439A  E106               	bnz	u9411
 16950  01439C  0EF6               	movlw	-10
 16951  01439E  50E3               	movf	plusw1,w,c
 16952  0143A0  E103               	bnz	u9411
 16953  0143A2  0EF7               	movlw	-9
 16954  0143A4  50E3               	movf	plusw1,w,c
 16955  0143A6  A4D8               	btfss	status,2,c
 16956  0143A8                     u9411:
 16957  0143A8  D6D4               	goto	l10089
 16958                           
 16959                           ;stkvar	_p @ sp[(-18)+16]
 16960  0143AA  0EFF               	movlw	-1
 16961  0143AC  BEE3               	btfsc	plusw1,7,c
 16962  0143AE  D007               	goto	u9420
 16963  0143B0  0EFF               	movlw	-1
 16964  0143B2  50E3               	movf	plusw1,w,c
 16965  0143B4  E103               	bnz	u9421
 16966  0143B6  0EFE               	movlw	-2
 16967  0143B8  04E3               	decf	plusw1,w,c
 16968  0143BA  B0D8               	btfsc	status,0,c
 16969  0143BC                     u9421:
 16970  0143BC  D6CA               	goto	l10089
 16971  0143BE                     u9420:
 16972                           
 16973                           ;stkvar	_w @ sp[(-18)+14]
 16974  0143BE  0EFD               	movlw	-3
 16975  0143C0  BEE3               	btfsc	plusw1,7,c
 16976  0143C2  D009               	goto	u9440
 16977  0143C4  0EFD               	movlw	-3
 16978  0143C6  50E3               	movf	plusw1,w,c
 16979  0143C8  E104               	bnz	u9430
 16980  0143CA  0EFC               	movlw	-4
 16981  0143CC  04E3               	decf	plusw1,w,c
 16982  0143CE  A0D8               	btfss	status,0,c
 16983  0143D0  D002               	goto	u9440
 16984  0143D2                     u9430:
 16985  0143D2  B20E               	btfsc	_flags^0,1,c
 16986  0143D4  D6BE               	goto	l10089
 16987  0143D6                     u9440:
 16988                           
 16989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 16990                           ;stkvar	_s @ sp[(-18)+12]
 16991  0143D6  0EFA               	movlw	-6
 16992  0143D8  006F FF8C  F025    	movff	plusw1,btemp
 16993  0143DE  0EFB               	movlw	-5
 16994  0143E0  50E3               	movf	plusw1,w,c
 16995  0143E2  1025               	iorwf	btemp^0,w,c
 16996  0143E4  A4D8               	btfss	status,2,c
 16997  0143E6  D002               	goto	u9460
 16998  0143E8  A40E               	btfss	_flags^0,2,c
 16999  0143EA  D033               	goto	l10123
 17000  0143EC                     u9460:
 17001                           
 17002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 17003                           ;stkvar	_i @ sp[(-18)+10]
 17004  0143EC  50E1               	movf	fsr1l,w,c
 17005  0143EE  0FF8               	addlw	-8
 17006  0143F0  6ED9               	movwf	fsr2l,c
 17007  0143F2  50E2               	movf	fsr1h,w,c
 17008  0143F4  6EDA               	movwf	fsr2h,c
 17009  0143F6  0EFF               	movlw	255
 17010  0143F8  22DA               	addwfc	fsr2h,f,c
 17011  0143FA  06DE               	decf	postinc2,f,c
 17012  0143FC  0E00               	movlw	0
 17013  0143FE  5ADD               	subwfb	postdec2,f,c
 17014                           
 17015                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 17016                           ;stkvar	_s @ sp[(-18)+12]
 17017  014400  0EFA               	movlw	-6
 17018  014402  006F FF8C  F025    	movff	plusw1,btemp
 17019  014408  0EFB               	movlw	-5
 17020  01440A  50E3               	movf	plusw1,w,c
 17021  01440C  1025               	iorwf	btemp^0,w,c
 17022  01440E  A4D8               	btfss	status,2,c
 17023  014410  D002               	goto	l10119
 17024  014412  0E2B               	movlw	43
 17025  014414  D001               	goto	L17
 17026  014416                     l10119:
 17027  014416  0E2D               	movlw	45
 17028  014418                     L17:
 17029  014418  6E2F               	movwf	(btemp+10)^0,c
 17030  01441A  0E00               	movlw	0
 17031  01441C  6E30               	movwf	(btemp+11)^0,c
 17032                           
 17033                           ;stkvar	_dtoa$4955 @ sp[(-18)+0]
 17034  01441E  0EEE               	movlw	-18
 17035  014420  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 17036  014426  0EEF               	movlw	-17
 17037  014428  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 17038                           
 17039                           ;stkvar	_dtoa$4955 @ sp[(-18)+0]
 17040                           ;stkvar	_i @ sp[(-18)+10]
 17041  01442E  0EF8               	movlw	-8
 17042  014430  006F FF8C  F02F    	movff	plusw1,btemp+10
 17043  014436  0EF9               	movlw	-7
 17044  014438  006F FF8C  F030    	movff	plusw1,btemp+11
 17045  01443E  0E94               	movlw	low _dbuf
 17046  014440  242F               	addwf	(btemp+10)^0,w,c
 17047  014442  6ED9               	movwf	fsr2l,c
 17048  014444  0E03               	movlw	high _dbuf
 17049  014446  2030               	addwfc	(btemp+11)^0,w,c
 17050  014448  6EDA               	movwf	fsr2h,c
 17051  01444A  0EEE               	movlw	-18
 17052  01444C  006F FF8F FFDF     	movff	plusw1,indf2
 17053  014452                     l10123:
 17054                           
 17055                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 17056                           ;stkvar	_w @ sp[(-18)+14]
 17057  014452  0EFC               	movlw	-4
 17058  014454  006F FF8F FFE6     	movff	plusw1,postinc1
 17059  01445A  006F FF8F FFE6     	movff	plusw1,postinc1
 17060                           
 17061                           ;stkvar	_i @ sp[(-20)+10]
 17062  014460  0E94               	movlw	low _dbuf
 17063  014462  6E2F               	movwf	(btemp+10)^0,c
 17064  014464  0E03               	movlw	high _dbuf
 17065  014466  6E30               	movwf	(btemp+11)^0,c
 17066  014468  0EF6               	movlw	-10
 17067  01446A  50E3               	movf	plusw1,w,c
 17068  01446C  262F               	addwf	(btemp+10)^0,f,c
 17069  01446E  0EF7               	movlw	-9
 17070  014470  50E3               	movf	plusw1,w,c
 17071  014472  2230               	addwfc	(btemp+11)^0,f,c
 17072  014474  0060  F0BF  FFE6   	movff	btemp+10,postinc1
 17073  01447A  0060  F0C3  FFE6   	movff	btemp+11,postinc1
 17074                           
 17075                           ;stkvar	_fp @ sp[(-22)+-2]
 17076  014480  0EE8               	movlw	-24
 17077  014482  006F FF8F FFE6     	movff	plusw1,postinc1
 17078  014488  006F FF8F FFE6     	movff	plusw1,postinc1
 17079  01448E  ECC1  F0B6         	call	_pad	;wreg free
 17080                           
 17081                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 17082  014492  0EE4               	movlw	228
 17083  014494  26E1               	addwf	fsr1l,f,c
 17084  014496  0EFF               	movlw	255
 17085  014498  22E2               	addwfc	fsr1h,f,c
 17086  01449A  0012               	return		;funcret
 17087  01449C                     __end_of_dtoa:
 17088                           	opt callstack 0
 17089                           
 17090 ;; *************** function _abs *****************
 17091 ;; Defined at:
 17092 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 17093 ;; Parameters:    Size  Location     Type
 17094 ;;  a               2  [STACK] int 
 17095 ;; Auto vars:     Size  Location     Type
 17096 ;;		None
 17097 ;; Return value:  Size  Location     Type
 17098 ;;                  2  [STACK] int 
 17099 ;; Registers used:
 17100 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 17101 ;; Tracked objects:
 17102 ;;		On entry : 0/3
 17103 ;;		On exit  : 0/0
 17104 ;;		Unchanged: 0/0
 17105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17110 ;;Total ram usage:        0 bytes
 17111 ;; Hardware stack levels used:    1
 17112 ;; Hardware stack levels required when called:    7
 17113 ;; This function calls:
 17114 ;;		Nothing
 17115 ;; This function is called by:
 17116 ;;		_dtoa
 17117 ;; This function uses a reentrant model
 17118 ;;
 17119                           
 17120                           	psect	text62
 17121  018612                     __ptext62:
 17122                           	opt callstack 0
 17123  018612                     _abs:
 17124                           	opt callstack 16
 17125                           
 17126                           ;stkvar	_a @ sp[(0)+-2]
 17127                           
 17128                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17129                           ;incstack = 0
 17130  018612  0EFF               	movlw	-1
 17131  018614  BEE3               	btfsc	plusw1,7,c
 17132  018616  D007               	goto	u4770
 17133  018618  0EFF               	movlw	-1
 17134  01861A  50E3               	movf	plusw1,w,c
 17135  01861C  E112               	bnz	l6621
 17136  01861E  0EFE               	movlw	-2
 17137  018620  04E3               	decf	plusw1,w,c
 17138  018622  B0D8               	btfsc	status,0,c
 17139  018624  D00E               	goto	l6621
 17140  018626                     u4770:
 17141                           
 17142                           ;stkvar	_a @ sp[(0)+-2]
 17143  018626  0EFE               	movlw	-2
 17144  018628  006F FF8C  F025    	movff	plusw1,btemp
 17145  01862E  1E25               	comf	btemp^0,f,c
 17146  018630  0EFF               	movlw	-1
 17147  018632  006F FF8C  F026    	movff	plusw1,btemp+1
 17148  018638  1E26               	comf	(btemp+1)^0,f,c
 17149  01863A  2A25               	incf	btemp^0,f,c
 17150  01863C  B4D8               	btfsc	status,2,c
 17151  01863E  2A26               	incf	(btemp+1)^0,f,c
 17152  018640  D008               	goto	l2903
 17153  018642                     l6621:
 17154                           
 17155                           ;stkvar	_a @ sp[(0)+-2]
 17156  018642  0EFE               	movlw	-2
 17157  018644  006F FF8C  F025    	movff	plusw1,btemp
 17158  01864A  0EFF               	movlw	-1
 17159  01864C  006F FF8C  F026    	movff	plusw1,btemp+1
 17160  018652                     l2903:
 17161                           
 17162                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 17163  018652  52E5               	movf	postdec1,f,c
 17164  018654  52E5               	movf	postdec1,f,c
 17165  018656  0012               	return		;funcret
 17166  018658                     __end_of_abs:
 17167                           	opt callstack 0
 17168                           
 17169 ;; *************** function ___aomod *****************
 17170 ;; Defined at:
 17171 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 17172 ;; Parameters:    Size  Location     Type
 17173 ;;  dividend        8  [STACK] long long 
 17174 ;;  divisor         8  [STACK] long long 
 17175 ;; Auto vars:     Size  Location     Type
 17176 ;;  sign            1  [STACK] unsigned char 
 17177 ;;  counter         1  [STACK] unsigned char 
 17178 ;; Return value:  Size  Location     Type
 17179 ;;                  8  [STACK] long long 
 17180 ;; Registers used:
 17181 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17182 ;; Tracked objects:
 17183 ;;		On entry : 0/3
 17184 ;;		On exit  : 0/0
 17185 ;;		Unchanged: 0/0
 17186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17191 ;;Total ram usage:        0 bytes
 17192 ;; Hardware stack levels used:    1
 17193 ;; Hardware stack levels required when called:    7
 17194 ;; This function calls:
 17195 ;;		Nothing
 17196 ;; This function is called by:
 17197 ;;		_dtoa
 17198 ;; This function uses a reentrant model
 17199 ;;
 17200                           
 17201                           	psect	text63
 17202  01593A                     __ptext63:
 17203                           	opt callstack 0
 17204  01593A                     ___aomod:
 17205                           	opt callstack 0
 17206                           
 17207                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 17208  01593A  52E6               	movf	postinc1,f,c
 17209  01593C  52E6               	movf	postinc1,f,c
 17210                           
 17211                           ;stkvar	_sign @ sp[(-2)+0]
 17212                           
 17213                           ;incstack = 0
 17214  01593E  0EFE               	movlw	-2
 17215  015940  6AE3               	clrf	plusw1,c
 17216                           
 17217                           ;stkvar	_dividend @ sp[(-2)+-8]
 17218  015942  0EFD               	movlw	-3
 17219  015944  AEE3               	btfss	plusw1,7,c
 17220  015946  D028               	goto	l6779
 17221                           
 17222                           ;stkvar	_dividend @ sp[(-2)+-8]
 17223                           ;stkvar	_dividend @ sp[(-2)+-8]
 17224  015948  0EF6               	movlw	-10
 17225  01594A  6CE3               	negf	plusw1,c
 17226  01594C  0EF7               	movlw	-9
 17227  01594E  1EE3               	comf	plusw1,f,c
 17228  015950  0EF8               	movlw	-8
 17229  015952  1EE3               	comf	plusw1,f,c
 17230  015954  0EF9               	movlw	-7
 17231  015956  1EE3               	comf	plusw1,f,c
 17232  015958  0EFA               	movlw	-6
 17233  01595A  1EE3               	comf	plusw1,f,c
 17234  01595C  0EFB               	movlw	-5
 17235  01595E  1EE3               	comf	plusw1,f,c
 17236  015960  0EFC               	movlw	-4
 17237  015962  1EE3               	comf	plusw1,f,c
 17238  015964  0EFD               	movlw	-3
 17239  015966  1EE3               	comf	plusw1,f,c
 17240  015968  E314               	bnc	u5200
 17241  01596A  0EF7               	movlw	-9
 17242  01596C  2AE3               	incf	plusw1,f,c
 17243  01596E  E311               	bnc	u5200
 17244  015970  0EF8               	movlw	-8
 17245  015972  2AE3               	incf	plusw1,f,c
 17246  015974  E30E               	bnc	u5200
 17247  015976  0EF9               	movlw	-7
 17248  015978  2AE3               	incf	plusw1,f,c
 17249  01597A  E30B               	bnc	u5200
 17250  01597C  0EFA               	movlw	-6
 17251  01597E  2AE3               	incf	plusw1,f,c
 17252  015980  E308               	bnc	u5200
 17253  015982  0EFB               	movlw	-5
 17254  015984  2AE3               	incf	plusw1,f,c
 17255  015986  E305               	bnc	u5200
 17256  015988  0EFC               	movlw	-4
 17257  01598A  2AE3               	incf	plusw1,f,c
 17258  01598C  E302               	bnc	u5200
 17259  01598E  0EFD               	movlw	-3
 17260  015990  2AE3               	incf	plusw1,f,c
 17261  015992                     u5200:
 17262                           
 17263                           ;stkvar	_sign @ sp[(-2)+0]
 17264  015992  0EFE               	movlw	-2
 17265  015994  6AE3               	clrf	plusw1,c
 17266  015996  2AE3               	incf	plusw1,f,c
 17267  015998                     l6779:
 17268                           
 17269                           ;stkvar	_divisor @ sp[(-2)+-16]
 17270  015998  0EF5               	movlw	-11
 17271  01599A  AEE3               	btfss	plusw1,7,c
 17272  01599C  D025               	goto	u5220
 17273                           
 17274                           ;stkvar	_divisor @ sp[(-2)+-16]
 17275                           ;stkvar	_divisor @ sp[(-2)+-16]
 17276  01599E  0EEE               	movlw	-18
 17277  0159A0  6CE3               	negf	plusw1,c
 17278  0159A2  0EEF               	movlw	-17
 17279  0159A4  1EE3               	comf	plusw1,f,c
 17280  0159A6  0EF0               	movlw	-16
 17281  0159A8  1EE3               	comf	plusw1,f,c
 17282  0159AA  0EF1               	movlw	-15
 17283  0159AC  1EE3               	comf	plusw1,f,c
 17284  0159AE  0EF2               	movlw	-14
 17285  0159B0  1EE3               	comf	plusw1,f,c
 17286  0159B2  0EF3               	movlw	-13
 17287  0159B4  1EE3               	comf	plusw1,f,c
 17288  0159B6  0EF4               	movlw	-12
 17289  0159B8  1EE3               	comf	plusw1,f,c
 17290  0159BA  0EF5               	movlw	-11
 17291  0159BC  1EE3               	comf	plusw1,f,c
 17292  0159BE  E314               	bnc	u5220
 17293  0159C0  0EEF               	movlw	-17
 17294  0159C2  2AE3               	incf	plusw1,f,c
 17295  0159C4  E311               	bnc	u5220
 17296  0159C6  0EF0               	movlw	-16
 17297  0159C8  2AE3               	incf	plusw1,f,c
 17298  0159CA  E30E               	bnc	u5220
 17299  0159CC  0EF1               	movlw	-15
 17300  0159CE  2AE3               	incf	plusw1,f,c
 17301  0159D0  E30B               	bnc	u5220
 17302  0159D2  0EF2               	movlw	-14
 17303  0159D4  2AE3               	incf	plusw1,f,c
 17304  0159D6  E308               	bnc	u5220
 17305  0159D8  0EF3               	movlw	-13
 17306  0159DA  2AE3               	incf	plusw1,f,c
 17307  0159DC  E305               	bnc	u5220
 17308  0159DE  0EF4               	movlw	-12
 17309  0159E0  2AE3               	incf	plusw1,f,c
 17310  0159E2  E302               	bnc	u5220
 17311  0159E4  0EF5               	movlw	-11
 17312  0159E6  2AE3               	incf	plusw1,f,c
 17313  0159E8                     u5220:
 17314                           
 17315                           ;stkvar	_divisor @ sp[(-2)+-16]
 17316  0159E8  0EEE               	movlw	-18
 17317  0159EA  50E3               	movf	plusw1,w,c
 17318  0159EC  E116               	bnz	u5230
 17319  0159EE  0EEF               	movlw	-17
 17320  0159F0  50E3               	movf	plusw1,w,c
 17321  0159F2  E113               	bnz	u5230
 17322  0159F4  0EF0               	movlw	-16
 17323  0159F6  50E3               	movf	plusw1,w,c
 17324  0159F8  E110               	bnz	u5230
 17325  0159FA  0EF1               	movlw	-15
 17326  0159FC  50E3               	movf	plusw1,w,c
 17327  0159FE  E10D               	bnz	u5230
 17328  015A00  0EF2               	movlw	-14
 17329  015A02  50E3               	movf	plusw1,w,c
 17330  015A04  E10A               	bnz	u5230
 17331  015A06  0EF3               	movlw	-13
 17332  015A08  50E3               	movf	plusw1,w,c
 17333  015A0A  E107               	bnz	u5230
 17334  015A0C  0EF4               	movlw	-12
 17335  015A0E  50E3               	movf	plusw1,w,c
 17336  015A10  E104               	bnz	u5230
 17337  015A12  0EF5               	movlw	-11
 17338  015A14  50E3               	movf	plusw1,w,c
 17339  015A16  B4D8               	btfsc	status,2,c
 17340  015A18  D075               	goto	u5260
 17341  015A1A                     u5230:
 17342                           
 17343                           ;stkvar	_counter @ sp[(-2)+1]
 17344  015A1A  0EFF               	movlw	-1
 17345  015A1C  6AE3               	clrf	plusw1,c
 17346  015A1E  D012               	goto	L18
 17347  015A20                     l6787:
 17348                           
 17349                           ;stkvar	_divisor @ sp[(-2)+-16]
 17350  015A20  90D8               	bcf	status,0,c
 17351  015A22  0EEE               	movlw	-18
 17352  015A24  36E3               	rlcf	plusw1,f,c
 17353  015A26  0EEF               	movlw	-17
 17354  015A28  36E3               	rlcf	plusw1,f,c
 17355  015A2A  0EF0               	movlw	-16
 17356  015A2C  36E3               	rlcf	plusw1,f,c
 17357  015A2E  0EF1               	movlw	-15
 17358  015A30  36E3               	rlcf	plusw1,f,c
 17359  015A32  0EF2               	movlw	-14
 17360  015A34  36E3               	rlcf	plusw1,f,c
 17361  015A36  0EF3               	movlw	-13
 17362  015A38  36E3               	rlcf	plusw1,f,c
 17363  015A3A  0EF4               	movlw	-12
 17364  015A3C  36E3               	rlcf	plusw1,f,c
 17365  015A3E  0EF5               	movlw	-11
 17366  015A40  36E3               	rlcf	plusw1,f,c
 17367                           
 17368                           ;stkvar	_counter @ sp[(-2)+1]
 17369  015A42  0EFF               	movlw	-1
 17370  015A44                     L18:
 17371  015A44  2AE3               	incf	plusw1,f,c
 17372                           
 17373                           ;stkvar	_divisor @ sp[(-2)+-16]
 17374  015A46  0EF5               	movlw	-11
 17375  015A48  AEE3               	btfss	plusw1,7,c
 17376  015A4A  D7EA               	goto	l6787
 17377  015A4C                     u5240:
 17378                           
 17379                           ;stkvar	_divisor @ sp[(-2)+-16]
 17380                           ;stkvar	_dividend @ sp[(-2)+-8]
 17381  015A4C  50E1               	movf	fsr1l,w,c
 17382  015A4E  0FF6               	addlw	-10
 17383  015A50  6ED9               	movwf	fsr2l,c
 17384  015A52  50E2               	movf	fsr1h,w,c
 17385  015A54  6EDA               	movwf	fsr2h,c
 17386  015A56  0EFF               	movlw	255
 17387  015A58  22DA               	addwfc	fsr2h,f,c
 17388  015A5A  0EEE               	movlw	-18
 17389  015A5C  50E3               	movf	plusw1,w,c
 17390  015A5E  5CDE               	subwf	postinc2,w,c
 17391  015A60  0EEF               	movlw	-17
 17392  015A62  50E3               	movf	plusw1,w,c
 17393  015A64  58DE               	subwfb	postinc2,w,c
 17394  015A66  0EF0               	movlw	-16
 17395  015A68  50E3               	movf	plusw1,w,c
 17396  015A6A  58DE               	subwfb	postinc2,w,c
 17397  015A6C  0EF1               	movlw	-15
 17398  015A6E  50E3               	movf	plusw1,w,c
 17399  015A70  58DE               	subwfb	postinc2,w,c
 17400  015A72  0EF2               	movlw	-14
 17401  015A74  50E3               	movf	plusw1,w,c
 17402  015A76  58DE               	subwfb	postinc2,w,c
 17403  015A78  0EF3               	movlw	-13
 17404  015A7A  50E3               	movf	plusw1,w,c
 17405  015A7C  58DE               	subwfb	postinc2,w,c
 17406  015A7E  0EF4               	movlw	-12
 17407  015A80  50E3               	movf	plusw1,w,c
 17408  015A82  58DE               	subwfb	postinc2,w,c
 17409  015A84  0EF5               	movlw	-11
 17410  015A86  50E3               	movf	plusw1,w,c
 17411  015A88  58DE               	subwfb	postinc2,w,c
 17412  015A8A  A0D8               	btfss	status,0,c
 17413  015A8C  D01F               	goto	l6795
 17414                           
 17415                           ;stkvar	_divisor @ sp[(-2)+-16]
 17416                           ;stkvar	_dividend @ sp[(-2)+-8]
 17417  015A8E  50E1               	movf	fsr1l,w,c
 17418  015A90  0FF6               	addlw	-10
 17419  015A92  6ED9               	movwf	fsr2l,c
 17420  015A94  50E2               	movf	fsr1h,w,c
 17421  015A96  6EDA               	movwf	fsr2h,c
 17422  015A98  0EFF               	movlw	255
 17423  015A9A  22DA               	addwfc	fsr2h,f,c
 17424  015A9C  0EEE               	movlw	-18
 17425  015A9E  50E3               	movf	plusw1,w,c
 17426  015AA0  5EDE               	subwf	postinc2,f,c
 17427  015AA2  0EEF               	movlw	-17
 17428  015AA4  50E3               	movf	plusw1,w,c
 17429  015AA6  5ADE               	subwfb	postinc2,f,c
 17430  015AA8  0EF0               	movlw	-16
 17431  015AAA  50E3               	movf	plusw1,w,c
 17432  015AAC  5ADE               	subwfb	postinc2,f,c
 17433  015AAE  0EF1               	movlw	-15
 17434  015AB0  50E3               	movf	plusw1,w,c
 17435  015AB2  5ADE               	subwfb	postinc2,f,c
 17436  015AB4  0EF2               	movlw	-14
 17437  015AB6  50E3               	movf	plusw1,w,c
 17438  015AB8  5ADE               	subwfb	postinc2,f,c
 17439  015ABA  0EF3               	movlw	-13
 17440  015ABC  50E3               	movf	plusw1,w,c
 17441  015ABE  5ADE               	subwfb	postinc2,f,c
 17442  015AC0  0EF4               	movlw	-12
 17443  015AC2  50E3               	movf	plusw1,w,c
 17444  015AC4  5ADE               	subwfb	postinc2,f,c
 17445  015AC6  0EF5               	movlw	-11
 17446  015AC8  50E3               	movf	plusw1,w,c
 17447  015ACA  5ADE               	subwfb	postinc2,f,c
 17448  015ACC                     l6795:
 17449                           
 17450                           ;stkvar	_divisor @ sp[(-2)+-16]
 17451  015ACC  90D8               	bcf	status,0,c
 17452  015ACE  0EF5               	movlw	-11
 17453  015AD0  32E3               	rrcf	plusw1,f,c
 17454  015AD2  0EF4               	movlw	-12
 17455  015AD4  32E3               	rrcf	plusw1,f,c
 17456  015AD6  0EF3               	movlw	-13
 17457  015AD8  32E3               	rrcf	plusw1,f,c
 17458  015ADA  0EF2               	movlw	-14
 17459  015ADC  32E3               	rrcf	plusw1,f,c
 17460  015ADE  0EF1               	movlw	-15
 17461  015AE0  32E3               	rrcf	plusw1,f,c
 17462  015AE2  0EF0               	movlw	-16
 17463  015AE4  32E3               	rrcf	plusw1,f,c
 17464  015AE6  0EEF               	movlw	-17
 17465  015AE8  32E3               	rrcf	plusw1,f,c
 17466  015AEA  0EEE               	movlw	-18
 17467  015AEC  32E3               	rrcf	plusw1,f,c
 17468                           
 17469                           ;stkvar	_counter @ sp[(-2)+1]
 17470  015AEE  0EFF               	movlw	-1
 17471  015AF0  50E3               	movf	plusw1,w,c
 17472  015AF2  6E25               	movwf	btemp^0,c
 17473  015AF4  0E01               	movlw	1
 17474  015AF6  5E25               	subwf	btemp^0,f,c
 17475  015AF8  0EFF               	movlw	-1
 17476  015AFA  0060  F097  FFE3   	movff	btemp,plusw1
 17477  015B00  A4D8               	btfss	status,2,c
 17478  015B02  D7A4               	goto	u5240
 17479  015B04                     u5260:
 17480                           
 17481                           ;stkvar	_sign @ sp[(-2)+0]
 17482  015B04  0EFE               	movlw	-2
 17483  015B06  50E3               	movf	plusw1,w,c
 17484  015B08  B4D8               	btfsc	status,2,c
 17485  015B0A  D025               	goto	u5280
 17486                           
 17487                           ;stkvar	_dividend @ sp[(-2)+-8]
 17488                           ;stkvar	_dividend @ sp[(-2)+-8]
 17489  015B0C  0EF6               	movlw	-10
 17490  015B0E  6CE3               	negf	plusw1,c
 17491  015B10  0EF7               	movlw	-9
 17492  015B12  1EE3               	comf	plusw1,f,c
 17493  015B14  0EF8               	movlw	-8
 17494  015B16  1EE3               	comf	plusw1,f,c
 17495  015B18  0EF9               	movlw	-7
 17496  015B1A  1EE3               	comf	plusw1,f,c
 17497  015B1C  0EFA               	movlw	-6
 17498  015B1E  1EE3               	comf	plusw1,f,c
 17499  015B20  0EFB               	movlw	-5
 17500  015B22  1EE3               	comf	plusw1,f,c
 17501  015B24  0EFC               	movlw	-4
 17502  015B26  1EE3               	comf	plusw1,f,c
 17503  015B28  0EFD               	movlw	-3
 17504  015B2A  1EE3               	comf	plusw1,f,c
 17505  015B2C  E314               	bnc	u5280
 17506  015B2E  0EF7               	movlw	-9
 17507  015B30  2AE3               	incf	plusw1,f,c
 17508  015B32  E311               	bnc	u5280
 17509  015B34  0EF8               	movlw	-8
 17510  015B36  2AE3               	incf	plusw1,f,c
 17511  015B38  E30E               	bnc	u5280
 17512  015B3A  0EF9               	movlw	-7
 17513  015B3C  2AE3               	incf	plusw1,f,c
 17514  015B3E  E30B               	bnc	u5280
 17515  015B40  0EFA               	movlw	-6
 17516  015B42  2AE3               	incf	plusw1,f,c
 17517  015B44  E308               	bnc	u5280
 17518  015B46  0EFB               	movlw	-5
 17519  015B48  2AE3               	incf	plusw1,f,c
 17520  015B4A  E305               	bnc	u5280
 17521  015B4C  0EFC               	movlw	-4
 17522  015B4E  2AE3               	incf	plusw1,f,c
 17523  015B50  E302               	bnc	u5280
 17524  015B52  0EFD               	movlw	-3
 17525  015B54  2AE3               	incf	plusw1,f,c
 17526  015B56                     u5280:
 17527                           
 17528                           ;stkvar	_dividend @ sp[(-2)+-8]
 17529  015B56  0EF6               	movlw	246
 17530  015B58  24E1               	addwf	fsr1l,w,c
 17531  015B5A  6ED9               	movwf	fsr2l,c
 17532  015B5C  0EFF               	movlw	255
 17533  015B5E  20E2               	addwfc	fsr1h,w,c
 17534  015B60  6EDA               	movwf	fsr2h,c
 17535                           
 17536                           ;stkvar	?___aomod @ sp[(-2)+-8]
 17537  015B62  0E08               	movlw	8
 17538  015B64  6E25               	movwf	btemp^0,c
 17539  015B66  0EF6               	movlw	-10
 17540  015B68                     us529999:
 17541  015B68  006F FF7B FFE3     	movff	postinc2,plusw1
 17542  015B6E  28E8               	incf	wreg,w,c
 17543  015B70  2E25               	decfsz	btemp^0,f,c
 17544  015B72  D7FA               	bra	us529999
 17545                           
 17546                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 17547  015B74  52E5               	movf	postdec1,f,c
 17548  015B76  52E5               	movf	postdec1,f,c
 17549  015B78  0012               	return		;funcret
 17550  015B7A                     __end_of___aomod:
 17551                           	opt callstack 0
 17552                           
 17553 ;; *************** function ___aodiv *****************
 17554 ;; Defined at:
 17555 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 17556 ;; Parameters:    Size  Location     Type
 17557 ;;  dividend        8  [STACK] long long 
 17558 ;;  divisor         8  [STACK] long long 
 17559 ;; Auto vars:     Size  Location     Type
 17560 ;;  quotient        8  [STACK] long long 
 17561 ;;  sign            1  [STACK] unsigned char 
 17562 ;;  counter         1  [STACK] unsigned char 
 17563 ;; Return value:  Size  Location     Type
 17564 ;;                  8  [STACK] long long 
 17565 ;; Registers used:
 17566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 17567 ;; Tracked objects:
 17568 ;;		On entry : 0/3
 17569 ;;		On exit  : 0/0
 17570 ;;		Unchanged: 0/0
 17571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17572 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17573 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17574 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17575 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17576 ;;Total ram usage:        0 bytes
 17577 ;; Hardware stack levels used:    1
 17578 ;; Hardware stack levels required when called:    7
 17579 ;; This function calls:
 17580 ;;		Nothing
 17581 ;; This function is called by:
 17582 ;;		_dtoa
 17583 ;; This function uses a reentrant model
 17584 ;;
 17585                           
 17586                           	psect	text64
 17587  015446                     __ptext64:
 17588                           	opt callstack 0
 17589  015446                     ___aodiv:
 17590                           	opt callstack 0
 17591                           
 17592                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 17593  015446  0E0A               	movlw	10
 17594  015448  26E1               	addwf	fsr1l,f,c
 17595  01544A  0E00               	movlw	0
 17596  01544C  22E2               	addwfc	fsr1h,f,c
 17597                           
 17598                           ;stkvar	_sign @ sp[(-10)+8]
 17599                           
 17600                           ;incstack = 0
 17601  01544E  0EFE               	movlw	-2
 17602  015450  6AE3               	clrf	plusw1,c
 17603                           
 17604                           ;stkvar	_divisor @ sp[(-10)+-16]
 17605  015452  0EED               	movlw	-19
 17606  015454  AEE3               	btfss	plusw1,7,c
 17607  015456  D028               	goto	l6735
 17608                           
 17609                           ;stkvar	_divisor @ sp[(-10)+-16]
 17610                           ;stkvar	_divisor @ sp[(-10)+-16]
 17611  015458  0EE6               	movlw	-26
 17612  01545A  6CE3               	negf	plusw1,c
 17613  01545C  0EE7               	movlw	-25
 17614  01545E  1EE3               	comf	plusw1,f,c
 17615  015460  0EE8               	movlw	-24
 17616  015462  1EE3               	comf	plusw1,f,c
 17617  015464  0EE9               	movlw	-23
 17618  015466  1EE3               	comf	plusw1,f,c
 17619  015468  0EEA               	movlw	-22
 17620  01546A  1EE3               	comf	plusw1,f,c
 17621  01546C  0EEB               	movlw	-21
 17622  01546E  1EE3               	comf	plusw1,f,c
 17623  015470  0EEC               	movlw	-20
 17624  015472  1EE3               	comf	plusw1,f,c
 17625  015474  0EED               	movlw	-19
 17626  015476  1EE3               	comf	plusw1,f,c
 17627  015478  E314               	bnc	u5080
 17628  01547A  0EE7               	movlw	-25
 17629  01547C  2AE3               	incf	plusw1,f,c
 17630  01547E  E311               	bnc	u5080
 17631  015480  0EE8               	movlw	-24
 17632  015482  2AE3               	incf	plusw1,f,c
 17633  015484  E30E               	bnc	u5080
 17634  015486  0EE9               	movlw	-23
 17635  015488  2AE3               	incf	plusw1,f,c
 17636  01548A  E30B               	bnc	u5080
 17637  01548C  0EEA               	movlw	-22
 17638  01548E  2AE3               	incf	plusw1,f,c
 17639  015490  E308               	bnc	u5080
 17640  015492  0EEB               	movlw	-21
 17641  015494  2AE3               	incf	plusw1,f,c
 17642  015496  E305               	bnc	u5080
 17643  015498  0EEC               	movlw	-20
 17644  01549A  2AE3               	incf	plusw1,f,c
 17645  01549C  E302               	bnc	u5080
 17646  01549E  0EED               	movlw	-19
 17647  0154A0  2AE3               	incf	plusw1,f,c
 17648  0154A2                     u5080:
 17649                           
 17650                           ;stkvar	_sign @ sp[(-10)+8]
 17651  0154A2  0EFE               	movlw	-2
 17652  0154A4  6AE3               	clrf	plusw1,c
 17653  0154A6  2AE3               	incf	plusw1,f,c
 17654  0154A8                     l6735:
 17655                           
 17656                           ;stkvar	_dividend @ sp[(-10)+-8]
 17657  0154A8  0EF5               	movlw	-11
 17658  0154AA  AEE3               	btfss	plusw1,7,c
 17659  0154AC  D027               	goto	l6741
 17660                           
 17661                           ;stkvar	_dividend @ sp[(-10)+-8]
 17662                           ;stkvar	_dividend @ sp[(-10)+-8]
 17663  0154AE  0EEE               	movlw	-18
 17664  0154B0  6CE3               	negf	plusw1,c
 17665  0154B2  0EEF               	movlw	-17
 17666  0154B4  1EE3               	comf	plusw1,f,c
 17667  0154B6  0EF0               	movlw	-16
 17668  0154B8  1EE3               	comf	plusw1,f,c
 17669  0154BA  0EF1               	movlw	-15
 17670  0154BC  1EE3               	comf	plusw1,f,c
 17671  0154BE  0EF2               	movlw	-14
 17672  0154C0  1EE3               	comf	plusw1,f,c
 17673  0154C2  0EF3               	movlw	-13
 17674  0154C4  1EE3               	comf	plusw1,f,c
 17675  0154C6  0EF4               	movlw	-12
 17676  0154C8  1EE3               	comf	plusw1,f,c
 17677  0154CA  0EF5               	movlw	-11
 17678  0154CC  1EE3               	comf	plusw1,f,c
 17679  0154CE  E314               	bnc	u5100
 17680  0154D0  0EEF               	movlw	-17
 17681  0154D2  2AE3               	incf	plusw1,f,c
 17682  0154D4  E311               	bnc	u5100
 17683  0154D6  0EF0               	movlw	-16
 17684  0154D8  2AE3               	incf	plusw1,f,c
 17685  0154DA  E30E               	bnc	u5100
 17686  0154DC  0EF1               	movlw	-15
 17687  0154DE  2AE3               	incf	plusw1,f,c
 17688  0154E0  E30B               	bnc	u5100
 17689  0154E2  0EF2               	movlw	-14
 17690  0154E4  2AE3               	incf	plusw1,f,c
 17691  0154E6  E308               	bnc	u5100
 17692  0154E8  0EF3               	movlw	-13
 17693  0154EA  2AE3               	incf	plusw1,f,c
 17694  0154EC  E305               	bnc	u5100
 17695  0154EE  0EF4               	movlw	-12
 17696  0154F0  2AE3               	incf	plusw1,f,c
 17697  0154F2  E302               	bnc	u5100
 17698  0154F4  0EF5               	movlw	-11
 17699  0154F6  2AE3               	incf	plusw1,f,c
 17700  0154F8                     u5100:
 17701                           
 17702                           ;stkvar	_sign @ sp[(-10)+8]
 17703  0154F8  0EFE               	movlw	-2
 17704  0154FA  70E3               	btg	plusw1,0,c
 17705  0154FC                     l6741:
 17706                           
 17707                           ;stkvar	_quotient @ sp[(-10)+0]
 17708  0154FC  0E07               	movlw	7
 17709  0154FE  6E25               	movwf	btemp^0,c
 17710  015500  0EF6               	movlw	-10
 17711  015502                     u5111:
 17712  015502  6AE3               	clrf	plusw1,c
 17713  015504  2AE8               	incf	wreg,f,c
 17714  015506  0625               	decf	btemp^0,f,c
 17715  015508  E2FC               	bc	u5111
 17716                           
 17717                           ;stkvar	_divisor @ sp[(-10)+-16]
 17718  01550A  0EE6               	movlw	-26
 17719  01550C  50E3               	movf	plusw1,w,c
 17720  01550E  E116               	bnz	u5120
 17721  015510  0EE7               	movlw	-25
 17722  015512  50E3               	movf	plusw1,w,c
 17723  015514  E113               	bnz	u5120
 17724  015516  0EE8               	movlw	-24
 17725  015518  50E3               	movf	plusw1,w,c
 17726  01551A  E110               	bnz	u5120
 17727  01551C  0EE9               	movlw	-23
 17728  01551E  50E3               	movf	plusw1,w,c
 17729  015520  E10D               	bnz	u5120
 17730  015522  0EEA               	movlw	-22
 17731  015524  50E3               	movf	plusw1,w,c
 17732  015526  E10A               	bnz	u5120
 17733  015528  0EEB               	movlw	-21
 17734  01552A  50E3               	movf	plusw1,w,c
 17735  01552C  E107               	bnz	u5120
 17736  01552E  0EEC               	movlw	-20
 17737  015530  50E3               	movf	plusw1,w,c
 17738  015532  E104               	bnz	u5120
 17739  015534  0EED               	movlw	-19
 17740  015536  50E3               	movf	plusw1,w,c
 17741  015538  B4D8               	btfsc	status,2,c
 17742  01553A  D088               	goto	u5150
 17743  01553C                     u5120:
 17744                           
 17745                           ;stkvar	_counter @ sp[(-10)+9]
 17746  01553C  0EFF               	movlw	-1
 17747  01553E  6AE3               	clrf	plusw1,c
 17748  015540  D012               	goto	L19
 17749  015542                     l6747:
 17750                           
 17751                           ;stkvar	_divisor @ sp[(-10)+-16]
 17752  015542  90D8               	bcf	status,0,c
 17753  015544  0EE6               	movlw	-26
 17754  015546  36E3               	rlcf	plusw1,f,c
 17755  015548  0EE7               	movlw	-25
 17756  01554A  36E3               	rlcf	plusw1,f,c
 17757  01554C  0EE8               	movlw	-24
 17758  01554E  36E3               	rlcf	plusw1,f,c
 17759  015550  0EE9               	movlw	-23
 17760  015552  36E3               	rlcf	plusw1,f,c
 17761  015554  0EEA               	movlw	-22
 17762  015556  36E3               	rlcf	plusw1,f,c
 17763  015558  0EEB               	movlw	-21
 17764  01555A  36E3               	rlcf	plusw1,f,c
 17765  01555C  0EEC               	movlw	-20
 17766  01555E  36E3               	rlcf	plusw1,f,c
 17767  015560  0EED               	movlw	-19
 17768  015562  36E3               	rlcf	plusw1,f,c
 17769                           
 17770                           ;stkvar	_counter @ sp[(-10)+9]
 17771  015564  0EFF               	movlw	-1
 17772  015566                     L19:
 17773  015566  2AE3               	incf	plusw1,f,c
 17774                           
 17775                           ;stkvar	_divisor @ sp[(-10)+-16]
 17776  015568  0EED               	movlw	-19
 17777  01556A  AEE3               	btfss	plusw1,7,c
 17778  01556C  D7EA               	goto	l6747
 17779  01556E                     u5130:
 17780                           
 17781                           ;stkvar	_quotient @ sp[(-10)+0]
 17782  01556E  90D8               	bcf	status,0,c
 17783  015570  0EF6               	movlw	-10
 17784  015572  36E3               	rlcf	plusw1,f,c
 17785  015574  0EF7               	movlw	-9
 17786  015576  36E3               	rlcf	plusw1,f,c
 17787  015578  0EF8               	movlw	-8
 17788  01557A  36E3               	rlcf	plusw1,f,c
 17789  01557C  0EF9               	movlw	-7
 17790  01557E  36E3               	rlcf	plusw1,f,c
 17791  015580  0EFA               	movlw	-6
 17792  015582  36E3               	rlcf	plusw1,f,c
 17793  015584  0EFB               	movlw	-5
 17794  015586  36E3               	rlcf	plusw1,f,c
 17795  015588  0EFC               	movlw	-4
 17796  01558A  36E3               	rlcf	plusw1,f,c
 17797  01558C  0EFD               	movlw	-3
 17798  01558E  36E3               	rlcf	plusw1,f,c
 17799                           
 17800                           ;stkvar	_divisor @ sp[(-10)+-16]
 17801                           ;stkvar	_dividend @ sp[(-10)+-8]
 17802  015590  50E1               	movf	fsr1l,w,c
 17803  015592  0FEE               	addlw	-18
 17804  015594  6ED9               	movwf	fsr2l,c
 17805  015596  50E2               	movf	fsr1h,w,c
 17806  015598  6EDA               	movwf	fsr2h,c
 17807  01559A  0EFF               	movlw	255
 17808  01559C  22DA               	addwfc	fsr2h,f,c
 17809  01559E  0EE6               	movlw	-26
 17810  0155A0  50E3               	movf	plusw1,w,c
 17811  0155A2  5CDE               	subwf	postinc2,w,c
 17812  0155A4  0EE7               	movlw	-25
 17813  0155A6  50E3               	movf	plusw1,w,c
 17814  0155A8  58DE               	subwfb	postinc2,w,c
 17815  0155AA  0EE8               	movlw	-24
 17816  0155AC  50E3               	movf	plusw1,w,c
 17817  0155AE  58DE               	subwfb	postinc2,w,c
 17818  0155B0  0EE9               	movlw	-23
 17819  0155B2  50E3               	movf	plusw1,w,c
 17820  0155B4  58DE               	subwfb	postinc2,w,c
 17821  0155B6  0EEA               	movlw	-22
 17822  0155B8  50E3               	movf	plusw1,w,c
 17823  0155BA  58DE               	subwfb	postinc2,w,c
 17824  0155BC  0EEB               	movlw	-21
 17825  0155BE  50E3               	movf	plusw1,w,c
 17826  0155C0  58DE               	subwfb	postinc2,w,c
 17827  0155C2  0EEC               	movlw	-20
 17828  0155C4  50E3               	movf	plusw1,w,c
 17829  0155C6  58DE               	subwfb	postinc2,w,c
 17830  0155C8  0EED               	movlw	-19
 17831  0155CA  50E3               	movf	plusw1,w,c
 17832  0155CC  58DE               	subwfb	postinc2,w,c
 17833  0155CE  A0D8               	btfss	status,0,c
 17834  0155D0  D021               	goto	l6759
 17835                           
 17836                           ;stkvar	_divisor @ sp[(-10)+-16]
 17837                           ;stkvar	_dividend @ sp[(-10)+-8]
 17838  0155D2  50E1               	movf	fsr1l,w,c
 17839  0155D4  0FEE               	addlw	-18
 17840  0155D6  6ED9               	movwf	fsr2l,c
 17841  0155D8  50E2               	movf	fsr1h,w,c
 17842  0155DA  6EDA               	movwf	fsr2h,c
 17843  0155DC  0EFF               	movlw	255
 17844  0155DE  22DA               	addwfc	fsr2h,f,c
 17845  0155E0  0EE6               	movlw	-26
 17846  0155E2  50E3               	movf	plusw1,w,c
 17847  0155E4  5EDE               	subwf	postinc2,f,c
 17848  0155E6  0EE7               	movlw	-25
 17849  0155E8  50E3               	movf	plusw1,w,c
 17850  0155EA  5ADE               	subwfb	postinc2,f,c
 17851  0155EC  0EE8               	movlw	-24
 17852  0155EE  50E3               	movf	plusw1,w,c
 17853  0155F0  5ADE               	subwfb	postinc2,f,c
 17854  0155F2  0EE9               	movlw	-23
 17855  0155F4  50E3               	movf	plusw1,w,c
 17856  0155F6  5ADE               	subwfb	postinc2,f,c
 17857  0155F8  0EEA               	movlw	-22
 17858  0155FA  50E3               	movf	plusw1,w,c
 17859  0155FC  5ADE               	subwfb	postinc2,f,c
 17860  0155FE  0EEB               	movlw	-21
 17861  015600  50E3               	movf	plusw1,w,c
 17862  015602  5ADE               	subwfb	postinc2,f,c
 17863  015604  0EEC               	movlw	-20
 17864  015606  50E3               	movf	plusw1,w,c
 17865  015608  5ADE               	subwfb	postinc2,f,c
 17866  01560A  0EED               	movlw	-19
 17867  01560C  50E3               	movf	plusw1,w,c
 17868  01560E  5ADE               	subwfb	postinc2,f,c
 17869                           
 17870                           ;stkvar	_quotient @ sp[(-10)+0]
 17871  015610  0EF6               	movlw	-10
 17872  015612  80E3               	bsf	plusw1,0,c
 17873  015614                     l6759:
 17874                           
 17875                           ;stkvar	_divisor @ sp[(-10)+-16]
 17876  015614  90D8               	bcf	status,0,c
 17877  015616  0EED               	movlw	-19
 17878  015618  32E3               	rrcf	plusw1,f,c
 17879  01561A  0EEC               	movlw	-20
 17880  01561C  32E3               	rrcf	plusw1,f,c
 17881  01561E  0EEB               	movlw	-21
 17882  015620  32E3               	rrcf	plusw1,f,c
 17883  015622  0EEA               	movlw	-22
 17884  015624  32E3               	rrcf	plusw1,f,c
 17885  015626  0EE9               	movlw	-23
 17886  015628  32E3               	rrcf	plusw1,f,c
 17887  01562A  0EE8               	movlw	-24
 17888  01562C  32E3               	rrcf	plusw1,f,c
 17889  01562E  0EE7               	movlw	-25
 17890  015630  32E3               	rrcf	plusw1,f,c
 17891  015632  0EE6               	movlw	-26
 17892  015634  32E3               	rrcf	plusw1,f,c
 17893                           
 17894                           ;stkvar	_counter @ sp[(-10)+9]
 17895  015636  0EFF               	movlw	-1
 17896  015638  50E3               	movf	plusw1,w,c
 17897  01563A  6E25               	movwf	btemp^0,c
 17898  01563C  0E01               	movlw	1
 17899  01563E  5E25               	subwf	btemp^0,f,c
 17900  015640  0EFF               	movlw	-1
 17901  015642  0060  F097  FFE3   	movff	btemp,plusw1
 17902  015648  A4D8               	btfss	status,2,c
 17903  01564A  D791               	goto	u5130
 17904  01564C                     u5150:
 17905                           
 17906                           ;stkvar	_sign @ sp[(-10)+8]
 17907  01564C  0EFE               	movlw	-2
 17908  01564E  50E3               	movf	plusw1,w,c
 17909  015650  B4D8               	btfsc	status,2,c
 17910  015652  D025               	goto	u5170
 17911                           
 17912                           ;stkvar	_quotient @ sp[(-10)+0]
 17913                           ;stkvar	_quotient @ sp[(-10)+0]
 17914  015654  0EF6               	movlw	-10
 17915  015656  6CE3               	negf	plusw1,c
 17916  015658  0EF7               	movlw	-9
 17917  01565A  1EE3               	comf	plusw1,f,c
 17918  01565C  0EF8               	movlw	-8
 17919  01565E  1EE3               	comf	plusw1,f,c
 17920  015660  0EF9               	movlw	-7
 17921  015662  1EE3               	comf	plusw1,f,c
 17922  015664  0EFA               	movlw	-6
 17923  015666  1EE3               	comf	plusw1,f,c
 17924  015668  0EFB               	movlw	-5
 17925  01566A  1EE3               	comf	plusw1,f,c
 17926  01566C  0EFC               	movlw	-4
 17927  01566E  1EE3               	comf	plusw1,f,c
 17928  015670  0EFD               	movlw	-3
 17929  015672  1EE3               	comf	plusw1,f,c
 17930  015674  E314               	bnc	u5170
 17931  015676  0EF7               	movlw	-9
 17932  015678  2AE3               	incf	plusw1,f,c
 17933  01567A  E311               	bnc	u5170
 17934  01567C  0EF8               	movlw	-8
 17935  01567E  2AE3               	incf	plusw1,f,c
 17936  015680  E30E               	bnc	u5170
 17937  015682  0EF9               	movlw	-7
 17938  015684  2AE3               	incf	plusw1,f,c
 17939  015686  E30B               	bnc	u5170
 17940  015688  0EFA               	movlw	-6
 17941  01568A  2AE3               	incf	plusw1,f,c
 17942  01568C  E308               	bnc	u5170
 17943  01568E  0EFB               	movlw	-5
 17944  015690  2AE3               	incf	plusw1,f,c
 17945  015692  E305               	bnc	u5170
 17946  015694  0EFC               	movlw	-4
 17947  015696  2AE3               	incf	plusw1,f,c
 17948  015698  E302               	bnc	u5170
 17949  01569A  0EFD               	movlw	-3
 17950  01569C  2AE3               	incf	plusw1,f,c
 17951  01569E                     u5170:
 17952                           
 17953                           ;stkvar	_quotient @ sp[(-10)+0]
 17954  01569E  0EF6               	movlw	246
 17955  0156A0  24E1               	addwf	fsr1l,w,c
 17956  0156A2  6ED9               	movwf	fsr2l,c
 17957  0156A4  0EFF               	movlw	255
 17958  0156A6  20E2               	addwfc	fsr1h,w,c
 17959  0156A8  6EDA               	movwf	fsr2h,c
 17960                           
 17961                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 17962  0156AA  0E08               	movlw	8
 17963  0156AC  6E25               	movwf	btemp^0,c
 17964  0156AE  0EEE               	movlw	-18
 17965  0156B0                     us518999:
 17966  0156B0  006F FF7B FFE3     	movff	postinc2,plusw1
 17967  0156B6  28E8               	incf	wreg,w,c
 17968  0156B8  2E25               	decfsz	btemp^0,f,c
 17969  0156BA  D7FA               	bra	us518999
 17970                           
 17971                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 17972  0156BC  0EF6               	movlw	246
 17973  0156BE  26E1               	addwf	fsr1l,f,c
 17974  0156C0  0EFF               	movlw	255
 17975  0156C2  22E2               	addwfc	fsr1h,f,c
 17976  0156C4  0012               	return		;funcret
 17977  0156C6                     __end_of___aodiv:
 17978                           	opt callstack 0
 17979                           
 17980 ;; *************** function _ctoa *****************
 17981 ;; Defined at:
 17982 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 17983 ;; Parameters:    Size  Location     Type
 17984 ;;  fp              2  [STACK] PTR struct _IO_FILE
 17985 ;;		 -> f(6), NULL(0), 
 17986 ;;  c               1  [STACK] unsigned char 
 17987 ;; Auto vars:     Size  Location     Type
 17988 ;;  w               2  [STACK] int 
 17989 ;;  l               2    0        int 
 17990 ;; Return value:  Size  Location     Type
 17991 ;;                  2  [STACK] int 
 17992 ;; Registers used:
 17993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 17994 ;; Tracked objects:
 17995 ;;		On entry : 0/0
 17996 ;;		On exit  : 0/0
 17997 ;;		Unchanged: 0/0
 17998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18003 ;;Total ram usage:        0 bytes
 18004 ;; Hardware stack levels used:    1
 18005 ;; Hardware stack levels required when called:   12
 18006 ;; This function calls:
 18007 ;;		_pad
 18008 ;; This function is called by:
 18009 ;;		_vfpfcnvrt
 18010 ;; This function uses a reentrant model
 18011 ;;
 18012                           
 18013                           	psect	text65
 18014  017DE2                     __ptext65:
 18015                           	opt callstack 0
 18016  017DE2                     _ctoa:
 18017                           	opt callstack 0
 18018                           
 18019                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18020  017DE2  52E6               	movf	postinc1,f,c
 18021  017DE4  52E6               	movf	postinc1,f,c
 18022                           
 18023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 18024                           
 18025                           ;incstack = 0
 18026  017DE6  500A               	movf	_width^0,w,c
 18027  017DE8  100B               	iorwf	(_width+1)^0,w,c
 18028  017DEA  A4D8               	btfss	status,2,c
 18029  017DEC  D009               	goto	l10051
 18030                           
 18031                           ;stkvar	_w @ sp[(-2)+0]
 18032  017DEE  0EFE               	movlw	-2
 18033  017DF0  0060  F02B  FFE3   	movff	_width,plusw1
 18034  017DF6  0EFF               	movlw	-1
 18035  017DF8  0060  F02F  FFE3   	movff	_width+1,plusw1
 18036  017DFE  D016               	goto	l10053
 18037  017E00                     l10051:
 18038  017E00  0EFF               	movlw	255
 18039  017E02  6E2F               	movwf	(btemp+10)^0,c
 18040  017E04  0EFF               	movlw	255
 18041  017E06  6E30               	movwf	(btemp+11)^0,c
 18042  017E08  0060  F028  F02D   	movff	_width,btemp+8
 18043  017E0E  0060  F02C  F02E   	movff	_width+1,btemp+9
 18044  017E14  502F               	movf	(btemp+10)^0,w,c
 18045  017E16  262D               	addwf	(btemp+8)^0,f,c
 18046  017E18  5030               	movf	(btemp+11)^0,w,c
 18047  017E1A  222E               	addwfc	(btemp+9)^0,f,c
 18048                           
 18049                           ;stkvar	_w @ sp[(-2)+0]
 18050  017E1C  0EFE               	movlw	-2
 18051  017E1E  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 18052  017E24  0EFF               	movlw	-1
 18053  017E26  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 18054  017E2C                     l10053:
 18055                           
 18056                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 18057                           ;stkvar	_c @ sp[(-2)+-3]
 18058  017E2C  0EFB               	movlw	-5
 18059  017E2E  006F FF8C  F394    	movff	plusw1,_dbuf
 18060                           
 18061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 18062  017E34  0103               	movlb	3	; () banked
 18063  017E36  6B95               	clrf	(_dbuf+1)& (0+255),b
 18064                           
 18065                           ; BSR set to: 3
 18066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 18067                           ;stkvar	_w @ sp[(-2)+0]
 18068  017E38  0EFE               	movlw	-2
 18069  017E3A  006F FF8F FFE6     	movff	plusw1,postinc1
 18070  017E40  006F FF8F FFE6     	movff	plusw1,postinc1
 18071  017E46  0E94               	movlw	low _dbuf
 18072  017E48  6EE6               	movwf	postinc1,c
 18073  017E4A  0E03               	movlw	high _dbuf
 18074  017E4C  6EE6               	movwf	postinc1,c
 18075                           
 18076                           ;stkvar	_fp @ sp[(-6)+-2]
 18077  017E4E  0EF8               	movlw	-8
 18078  017E50  006F FF8F FFE6     	movff	plusw1,postinc1
 18079  017E56  006F FF8F FFE6     	movff	plusw1,postinc1
 18080  017E5C  ECC1  F0B6         	call	_pad	;wreg free
 18081                           
 18082                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 18083  017E60  0EFB               	movlw	251
 18084  017E62  26E1               	addwf	fsr1l,f,c
 18085  017E64  0EFF               	movlw	255
 18086  017E66  22E2               	addwfc	fsr1h,f,c
 18087  017E68  0012               	return		;funcret
 18088  017E6A                     __end_of_ctoa:
 18089                           	opt callstack 0
 18090                           
 18091 ;; *************** function _pad *****************
 18092 ;; Defined at:
 18093 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18094 ;; Parameters:    Size  Location     Type
 18095 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18096 ;;		 -> f(6), NULL(0), 
 18097 ;;  buf             2  [STACK] PTR unsigned char 
 18098 ;;		 -> dbuf(80), 
 18099 ;;  p               2  [STACK] int 
 18100 ;; Auto vars:     Size  Location     Type
 18101 ;;  w               2  [STACK] int 
 18102 ;;  i               2  [STACK] int 
 18103 ;; Return value:  Size  Location     Type
 18104 ;;                  2  [STACK] int 
 18105 ;; Registers used:
 18106 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 18107 ;; Tracked objects:
 18108 ;;		On entry : 0/3
 18109 ;;		On exit  : 0/0
 18110 ;;		Unchanged: 0/0
 18111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18115 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18116 ;;Total ram usage:        0 bytes
 18117 ;; Hardware stack levels used:    1
 18118 ;; Hardware stack levels required when called:   11
 18119 ;; This function calls:
 18120 ;;		_fputc
 18121 ;;		_fputs
 18122 ;;		_strlen
 18123 ;; This function is called by:
 18124 ;;		_ctoa
 18125 ;;		_dtoa
 18126 ;;		_efgtoa
 18127 ;;		_xtoa
 18128 ;; This function uses a reentrant model
 18129 ;;
 18130                           
 18131                           	psect	text66
 18132  016D82                     __ptext66:
 18133                           	opt callstack 0
 18134  016D82                     _pad:
 18135                           	opt callstack 0
 18136                           
 18137                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18138  016D82  52E6               	movf	postinc1,f,c
 18139  016D84  52E6               	movf	postinc1,f,c
 18140  016D86  52E6               	movf	postinc1,f,c
 18141  016D88  52E6               	movf	postinc1,f,c
 18142                           
 18143                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 18144                           
 18145                           ;incstack = 0
 18146  016D8A  A00E               	btfss	_flags^0,0,c
 18147  016D8C  D010               	goto	l10025
 18148                           
 18149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 18150                           ;stkvar	_fp @ sp[(-4)+-2]
 18151  016D8E  0EFA               	movlw	-6
 18152  016D90  006F FF8F FFE6     	movff	plusw1,postinc1
 18153  016D96  006F FF8F FFE6     	movff	plusw1,postinc1
 18154                           
 18155                           ;stkvar	_buf @ sp[(-6)+-4]
 18156  016D9C  0EF6               	movlw	-10
 18157  016D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 18158  016DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 18159  016DAA  ECCB  F0BD         	call	_fputs	;wreg free
 18160  016DAE                     l10025:
 18161                           
 18162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 18163                           ;stkvar	_p @ sp[(-4)+-6]
 18164  016DAE  0EF7               	movlw	-9
 18165  016DB0  BEE3               	btfsc	plusw1,7,c
 18166  016DB2  D011               	goto	l10029
 18167                           
 18168                           ;stkvar	_p @ sp[(-4)+-6]
 18169                           ;stkvar	_w @ sp[(-4)+0]
 18170  016DB4  0EF6               	movlw	-10
 18171  016DB6  006F FF8C  F025    	movff	plusw1,btemp
 18172  016DBC  0EFC               	movlw	-4
 18173  016DBE  0060  F097  FFE3   	movff	btemp,plusw1
 18174  016DC4  0EF7               	movlw	-9
 18175  016DC6  006F FF8C  F025    	movff	plusw1,btemp
 18176  016DCC  0EFD               	movlw	-3
 18177  016DCE  0060  F097  FFE3   	movff	btemp,plusw1
 18178  016DD4  D004               	goto	l1980
 18179  016DD6                     l10029:
 18180                           
 18181                           ;stkvar	_w @ sp[(-4)+0]
 18182  016DD6  0EFC               	movlw	-4
 18183  016DD8  6AE3               	clrf	plusw1,c
 18184  016DDA  0EFD               	movlw	-3
 18185  016DDC  6AE3               	clrf	plusw1,c
 18186  016DDE                     l1980:
 18187                           
 18188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 18189                           ;stkvar	_i @ sp[(-4)+2]
 18190  016DDE  0EFE               	movlw	-2
 18191  016DE0  6AE3               	clrf	plusw1,c
 18192  016DE2  0EFF               	movlw	-1
 18193  016DE4  6AE3               	clrf	plusw1,c
 18194                           
 18195                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18196  016DE6  D01E               	goto	l10035
 18197  016DE8                     l10031:
 18198                           
 18199                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 18200                           ;stkvar	_fp @ sp[(-4)+-2]
 18201  016DE8  0EFA               	movlw	-6
 18202  016DEA  006F FF8F FFE6     	movff	plusw1,postinc1
 18203  016DF0  006F FF8F FFE6     	movff	plusw1,postinc1
 18204  016DF6  0E20               	movlw	32
 18205  016DF8  6EE6               	movwf	postinc1,c
 18206  016DFA  0E00               	movlw	0
 18207  016DFC  6EE6               	movwf	postinc1,c
 18208  016DFE  ECA3  F0B5         	call	_fputc	;wreg free
 18209                           
 18210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 18211                           ;stkvar	_i @ sp[(-4)+2]
 18212  016E02  0EFE               	movlw	-2
 18213  016E04  50E3               	movf	plusw1,w,c
 18214  016E06  0F01               	addlw	1
 18215  016E08  6E25               	movwf	btemp^0,c
 18216  016E0A  0EFE               	movlw	-2
 18217  016E0C  0060  F097  FFE3   	movff	btemp,plusw1
 18218  016E12  6A25               	clrf	btemp^0,c
 18219  016E14  0EFF               	movlw	-1
 18220  016E16  50E3               	movf	plusw1,w,c
 18221  016E18  2025               	addwfc	btemp^0,w,c
 18222  016E1A  6E25               	movwf	btemp^0,c
 18223  016E1C  0EFF               	movlw	-1
 18224  016E1E  0060  F097  FFE3   	movff	btemp,plusw1
 18225  016E24                     l10035:
 18226                           
 18227                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 18228                           ;stkvar	_w @ sp[(-4)+0]
 18229                           ;stkvar	_i @ sp[(-4)+2]
 18230  016E24  50E1               	movf	fsr1l,w,c
 18231  016E26  0FFE               	addlw	-2
 18232  016E28  6ED9               	movwf	fsr2l,c
 18233  016E2A  50E2               	movf	fsr1h,w,c
 18234  016E2C  6EDA               	movwf	fsr2h,c
 18235  016E2E  0EFF               	movlw	255
 18236  016E30  22DA               	addwfc	fsr2h,f,c
 18237  016E32  0EFC               	movlw	-4
 18238  016E34  50E3               	movf	plusw1,w,c
 18239  016E36  5CDE               	subwf	postinc2,w,c
 18240  016E38  50DE               	movf	postinc2,w,c
 18241  016E3A  0A80               	xorlw	128
 18242  016E3C  6E25               	movwf	btemp^0,c
 18243  016E3E  0EFD               	movlw	-3
 18244  016E40  50E3               	movf	plusw1,w,c
 18245  016E42  0A80               	xorlw	128
 18246  016E44  5825               	subwfb	btemp^0,w,c
 18247  016E46  A0D8               	btfss	status,0,c
 18248  016E48  D7CF               	goto	l10031
 18249                           
 18250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 18251  016E4A  B00E               	btfsc	_flags^0,0,c
 18252  016E4C  D010               	goto	l10039
 18253                           
 18254                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 18255                           ;stkvar	_fp @ sp[(-4)+-2]
 18256  016E4E  0EFA               	movlw	-6
 18257  016E50  006F FF8F FFE6     	movff	plusw1,postinc1
 18258  016E56  006F FF8F FFE6     	movff	plusw1,postinc1
 18259                           
 18260                           ;stkvar	_buf @ sp[(-6)+-4]
 18261  016E5C  0EF6               	movlw	-10
 18262  016E5E  006F FF8F FFE6     	movff	plusw1,postinc1
 18263  016E64  006F FF8F FFE6     	movff	plusw1,postinc1
 18264  016E6A  ECCB  F0BD         	call	_fputs	;wreg free
 18265  016E6E                     l10039:
 18266                           
 18267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 18268                           ;stkvar	_w @ sp[(-4)+0]
 18269                           ;stkvar	_buf @ sp[(-4)+-4]
 18270  016E6E  0EF8               	movlw	-8
 18271  016E70  006F FF8F FFE6     	movff	plusw1,postinc1
 18272  016E76  006F FF8F FFE6     	movff	plusw1,postinc1
 18273  016E7C  EC7A  F0BD         	call	_strlen	;wreg free
 18274  016E80  0EFC               	movlw	-4
 18275  016E82  50E3               	movf	plusw1,w,c
 18276  016E84  2625               	addwf	btemp^0,f,c
 18277  016E86  0EFD               	movlw	-3
 18278  016E88  50E3               	movf	plusw1,w,c
 18279  016E8A  2226               	addwfc	(btemp+1)^0,f,c
 18280                           
 18281                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 18282  016E8C  0EF6               	movlw	246
 18283  016E8E  26E1               	addwf	fsr1l,f,c
 18284  016E90  0EFF               	movlw	255
 18285  016E92  22E2               	addwfc	fsr1h,f,c
 18286  016E94  0012               	return		;funcret
 18287  016E96                     __end_of_pad:
 18288                           	opt callstack 0
 18289                           
 18290 ;; *************** function _strlen *****************
 18291 ;; Defined at:
 18292 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 18293 ;; Parameters:    Size  Location     Type
 18294 ;;  s               2  [STACK] PTR const unsigned char 
 18295 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18296 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18297 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18298 ;; Auto vars:     Size  Location     Type
 18299 ;;  a               2  [STACK] PTR const unsigned char 
 18300 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 18301 ;;		 -> STR_28(9), STR_27(12), D.lcd(288), D(290), 
 18302 ;;		 -> T(144), STR_7(6), STR_3(6), V(188), 
 18303 ;; Return value:  Size  Location     Type
 18304 ;;                  2  [STACK] unsigned int 
 18305 ;; Registers used:
 18306 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 18307 ;; Tracked objects:
 18308 ;;		On entry : 0/0
 18309 ;;		On exit  : 0/0
 18310 ;;		Unchanged: 0/0
 18311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18316 ;;Total ram usage:        0 bytes
 18317 ;; Hardware stack levels used:    1
 18318 ;; Hardware stack levels required when called:    7
 18319 ;; This function calls:
 18320 ;;		Nothing
 18321 ;; This function is called by:
 18322 ;;		_eaDogM_WriteString
 18323 ;;		_pad
 18324 ;;		_stoa
 18325 ;; This function uses a reentrant model
 18326 ;;
 18327                           
 18328                           	psect	text67
 18329  017AF4                     __ptext67:
 18330                           	opt callstack 0
 18331  017AF4                     _strlen:
 18332                           	opt callstack 0
 18333                           
 18334                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18335  017AF4  52E6               	movf	postinc1,f,c
 18336  017AF6  52E6               	movf	postinc1,f,c
 18337                           
 18338                           ;stkvar	_s @ sp[(-2)+-2]
 18339                           
 18340                           ;incstack = 0
 18341  017AF8  0EFC               	movlw	-4
 18342  017AFA  006F FF8C  F02F    	movff	plusw1,btemp+10
 18343  017B00  0EFD               	movlw	-3
 18344  017B02  006F FF8C  F030    	movff	plusw1,btemp+11
 18345                           
 18346                           ;stkvar	_a @ sp[(-2)+0]
 18347  017B08  0EFF               	movlw	-1
 18348  017B0A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 18349  017B10  0EFE               	movlw	-2
 18350  017B12  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 18351  017B18  D011               	goto	l6573
 18352  017B1A                     l6571:
 18353                           
 18354                           ;stkvar	_s @ sp[(-2)+-2]
 18355  017B1A  0EFC               	movlw	-4
 18356  017B1C  50E3               	movf	plusw1,w,c
 18357  017B1E  0F01               	addlw	1
 18358  017B20  6E25               	movwf	btemp^0,c
 18359  017B22  0EFC               	movlw	-4
 18360  017B24  0060  F097  FFE3   	movff	btemp,plusw1
 18361  017B2A  6A25               	clrf	btemp^0,c
 18362  017B2C  0EFD               	movlw	-3
 18363  017B2E  50E3               	movf	plusw1,w,c
 18364  017B30  2025               	addwfc	btemp^0,w,c
 18365  017B32  6E25               	movwf	btemp^0,c
 18366  017B34  0EFD               	movlw	-3
 18367  017B36  0060  F097  FFE3   	movff	btemp,plusw1
 18368  017B3C                     l6573:
 18369                           
 18370                           ;stkvar	_s @ sp[(-2)+-2]
 18371  017B3C  0EFC               	movlw	-4
 18372  017B3E  006F FF8F FFF6     	movff	plusw1,tblptrl
 18373  017B44  0EFD               	movlw	-3
 18374  017B46  006F FF8F FFF7     	movff	plusw1,tblptrh
 18375  017B4C  0E00               	movlw	low (__mediumconst shr (0+16))
 18376  017B4E  6EF8               	movwf	tblptru,c
 18377  017B50  0E1F               	movlw	(high __ramtop+-1)
 18378  017B52  64F7               	cpfsgt	tblptrh,c
 18379  017B54  D003               	bra	u4667
 18380  017B56  0008               	tblrd		*
 18381  017B58  50F5               	movf	tablat,w,c
 18382  017B5A  D007               	bra	u4660
 18383  017B5C                     u4667:
 18384  017B5C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 18385  017B62  006F FFDF FFEA     	movff	tblptrh,fsr0h
 18386  017B68  50EF               	movf	indf0,w,c
 18387  017B6A                     u4660:
 18388  017B6A  0900               	iorlw	0
 18389  017B6C  A4D8               	btfss	status,2,c
 18390  017B6E  D7D5               	goto	l6571
 18391                           
 18392                           ;stkvar	_a @ sp[(-2)+0]
 18393                           ;stkvar	_s @ sp[(-2)+-2]
 18394  017B70  0EFC               	movlw	-4
 18395  017B72  006F FF8C  F025    	movff	plusw1,btemp
 18396  017B78  0EFD               	movlw	-3
 18397  017B7A  006F FF8C  F026    	movff	plusw1,btemp+1
 18398  017B80  0EFE               	movlw	-2
 18399  017B82  50E3               	movf	plusw1,w,c
 18400  017B84  5E25               	subwf	btemp^0,f,c
 18401  017B86  0EFF               	movlw	-1
 18402  017B88  50E3               	movf	plusw1,w,c
 18403  017B8A  5A26               	subwfb	(btemp+1)^0,f,c
 18404                           
 18405                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 18406  017B8C  52E5               	movf	postdec1,f,c
 18407  017B8E  52E5               	movf	postdec1,f,c
 18408  017B90  52E5               	movf	postdec1,f,c
 18409  017B92  52E5               	movf	postdec1,f,c
 18410  017B94  0012               	return		;funcret
 18411  017B96                     __end_of_strlen:
 18412                           	opt callstack 0
 18413                           
 18414 ;; *************** function _fputs *****************
 18415 ;; Defined at:
 18416 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 18417 ;; Parameters:    Size  Location     Type
 18418 ;;  s               2  [STACK] PTR const unsigned char 
 18419 ;;		 -> dbuf(80), 
 18420 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18421 ;;		 -> f(6), NULL(0), 
 18422 ;; Auto vars:     Size  Location     Type
 18423 ;;  i               2  [STACK] int 
 18424 ;;  c               1  [STACK] unsigned char 
 18425 ;; Return value:  Size  Location     Type
 18426 ;;                  2  [STACK] int 
 18427 ;; Registers used:
 18428 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18429 ;; Tracked objects:
 18430 ;;		On entry : 0/3
 18431 ;;		On exit  : 0/0
 18432 ;;		Unchanged: 0/0
 18433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18438 ;;Total ram usage:        0 bytes
 18439 ;; Hardware stack levels used:    1
 18440 ;; Hardware stack levels required when called:   10
 18441 ;; This function calls:
 18442 ;;		_fputc
 18443 ;; This function is called by:
 18444 ;;		_pad
 18445 ;; This function uses a reentrant model
 18446 ;;
 18447                           
 18448                           	psect	text68
 18449  017B96                     __ptext68:
 18450                           	opt callstack 0
 18451  017B96                     _fputs:
 18452                           	opt callstack 0
 18453                           
 18454                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18455  017B96  52E6               	movf	postinc1,f,c
 18456  017B98  52E6               	movf	postinc1,f,c
 18457  017B9A  52E6               	movf	postinc1,f,c
 18458                           
 18459                           ;stkvar	_i @ sp[(-3)+0]
 18460                           
 18461                           ;incstack = 0
 18462  017B9C  0EFD               	movlw	-3
 18463  017B9E  6AE3               	clrf	plusw1,c
 18464  017BA0  0EFE               	movlw	-2
 18465  017BA2  6AE3               	clrf	plusw1,c
 18466  017BA4  D01F               	goto	l10019
 18467  017BA6                     l10015:
 18468                           
 18469                           ;stkvar	_fp @ sp[(-3)+-4]
 18470  017BA6  0EF9               	movlw	-7
 18471  017BA8  006F FF8F FFE6     	movff	plusw1,postinc1
 18472  017BAE  006F FF8F FFE6     	movff	plusw1,postinc1
 18473                           
 18474                           ;stkvar	_c @ sp[(-5)+2]
 18475  017BB4  0EFD               	movlw	-3
 18476  017BB6  50E3               	movf	plusw1,w,c
 18477  017BB8  6EE6               	movwf	postinc1,c
 18478  017BBA  0E00               	movlw	0
 18479  017BBC  6EE6               	movwf	postinc1,c
 18480  017BBE  ECA3  F0B5         	call	_fputc	;wreg free
 18481                           
 18482                           ;stkvar	_i @ sp[(-3)+0]
 18483  017BC2  0EFD               	movlw	-3
 18484  017BC4  50E3               	movf	plusw1,w,c
 18485  017BC6  0F01               	addlw	1
 18486  017BC8  6E25               	movwf	btemp^0,c
 18487  017BCA  0EFD               	movlw	-3
 18488  017BCC  0060  F097  FFE3   	movff	btemp,plusw1
 18489  017BD2  6A25               	clrf	btemp^0,c
 18490  017BD4  0EFE               	movlw	-2
 18491  017BD6  50E3               	movf	plusw1,w,c
 18492  017BD8  2025               	addwfc	btemp^0,w,c
 18493  017BDA  6E25               	movwf	btemp^0,c
 18494  017BDC  0EFE               	movlw	-2
 18495  017BDE  0060  F097  FFE3   	movff	btemp,plusw1
 18496  017BE4                     l10019:
 18497                           
 18498                           ;stkvar	_i @ sp[(-3)+0]
 18499  017BE4  0EFD               	movlw	-3
 18500  017BE6  006F FF8C  F02F    	movff	plusw1,btemp+10
 18501  017BEC  0EFE               	movlw	-2
 18502  017BEE  006F FF8C  F030    	movff	plusw1,btemp+11
 18503                           
 18504                           ;stkvar	_s @ sp[(-3)+-2]
 18505  017BF4  0EFB               	movlw	-5
 18506  017BF6  006F FF8C  F02D    	movff	plusw1,btemp+8
 18507  017BFC  0EFC               	movlw	-4
 18508  017BFE  006F FF8C  F02E    	movff	plusw1,btemp+9
 18509  017C04  502F               	movf	(btemp+10)^0,w,c
 18510  017C06  242D               	addwf	(btemp+8)^0,w,c
 18511  017C08  6ED9               	movwf	fsr2l,c
 18512  017C0A  5030               	movf	(btemp+11)^0,w,c
 18513  017C0C  202E               	addwfc	(btemp+9)^0,w,c
 18514  017C0E  6EDA               	movwf	fsr2h,c
 18515  017C10  50DF               	movf	indf2,w,c
 18516  017C12  6E30               	movwf	(btemp+11)^0,c
 18517                           
 18518                           ;stkvar	_c @ sp[(-3)+2]
 18519  017C14  0EFF               	movlw	-1
 18520  017C16  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 18521  017C1C  0EFF               	movlw	-1
 18522  017C1E  50E3               	movf	plusw1,w,c
 18523  017C20  A4D8               	btfss	status,2,c
 18524  017C22  D7C1               	goto	l10015
 18525                           
 18526                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18527  017C24  0EF9               	movlw	249
 18528  017C26  26E1               	addwf	fsr1l,f,c
 18529  017C28  0EFF               	movlw	255
 18530  017C2A  22E2               	addwfc	fsr1h,f,c
 18531  017C2C  0012               	return		;funcret
 18532  017C2E                     __end_of_fputs:
 18533                           	opt callstack 0
 18534                           
 18535 ;; *************** function _fputc *****************
 18536 ;; Defined at:
 18537 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 18538 ;; Parameters:    Size  Location     Type
 18539 ;;  c               2  [STACK] int 
 18540 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18541 ;;		 -> f(6), NULL(0), 
 18542 ;; Auto vars:     Size  Location     Type
 18543 ;;		None
 18544 ;; Return value:  Size  Location     Type
 18545 ;;                  2  [STACK] int 
 18546 ;; Registers used:
 18547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 18548 ;; Tracked objects:
 18549 ;;		On entry : 0/0
 18550 ;;		On exit  : 0/0
 18551 ;;		Unchanged: 0/0
 18552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18557 ;;Total ram usage:        0 bytes
 18558 ;; Hardware stack levels used:    1
 18559 ;; Hardware stack levels required when called:    9
 18560 ;; This function calls:
 18561 ;;		_putch
 18562 ;; This function is called by:
 18563 ;;		_pad
 18564 ;;		_stoa
 18565 ;;		_vfpfcnvrt
 18566 ;;		_fputs
 18567 ;; This function uses a reentrant model
 18568 ;;
 18569                           
 18570                           	psect	text69
 18571  016B46                     __ptext69:
 18572                           	opt callstack 0
 18573  016B46                     _fputc:
 18574                           	opt callstack 12
 18575                           
 18576                           ;stkvar	_fp @ sp[(0)+-4]
 18577                           
 18578                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18579                           ;incstack = 0
 18580  016B46  0EFC               	movlw	-4
 18581  016B48  006F FF8C  F025    	movff	plusw1,btemp
 18582  016B4E  0EFD               	movlw	-3
 18583  016B50  50E3               	movf	plusw1,w,c
 18584  016B52  1025               	iorwf	btemp^0,w,c
 18585  016B54  B4D8               	btfsc	status,2,c
 18586  016B56  D009               	goto	u9200
 18587                           
 18588                           ;stkvar	_fp @ sp[(0)+-4]
 18589  016B58  0EFC               	movlw	-4
 18590  016B5A  006F FF8C  F025    	movff	plusw1,btemp
 18591  016B60  0EFD               	movlw	-3
 18592  016B62  50E3               	movf	plusw1,w,c
 18593  016B64  1025               	iorwf	btemp^0,w,c
 18594  016B66  A4D8               	btfss	status,2,c
 18595  016B68  D006               	goto	l10003
 18596  016B6A                     u9200:
 18597                           
 18598                           ;stkvar	_c @ sp[(0)+-2]
 18599  016B6A  0EFE               	movlw	-2
 18600  016B6C  50E3               	movf	plusw1,w,c
 18601  016B6E  6EE6               	movwf	postinc1,c
 18602  016B70  EC6F  F0C8         	call	_putch	;wreg free
 18603  016B74  D075               	goto	l2998
 18604  016B76                     l10003:
 18605                           
 18606                           ;stkvar	_fp @ sp[(0)+-4]
 18607  016B76  0EFC               	movlw	-4
 18608  016B78  006F FF8C  F02F    	movff	plusw1,btemp+10
 18609  016B7E  0EFD               	movlw	-3
 18610  016B80  006F FF8C  F030    	movff	plusw1,btemp+11
 18611  016B86  0E04               	movlw	4
 18612  016B88  242F               	addwf	(btemp+10)^0,w,c
 18613  016B8A  6ED9               	movwf	fsr2l,c
 18614  016B8C  0E00               	movlw	0
 18615  016B8E  2030               	addwfc	(btemp+11)^0,w,c
 18616  016B90  6EDA               	movwf	fsr2h,c
 18617  016B92  50DE               	movf	postinc2,w,c
 18618  016B94  10DE               	iorwf	postinc2,w,c
 18619  016B96  B4D8               	btfsc	status,2,c
 18620  016B98  D026               	goto	u9220
 18621                           
 18622                           ;stkvar	_fp @ sp[(0)+-4]
 18623  016B9A  0EFC               	movlw	-4
 18624  016B9C  006F FF8C  F02F    	movff	plusw1,btemp+10
 18625  016BA2  0EFD               	movlw	-3
 18626  016BA4  006F FF8C  F030    	movff	plusw1,btemp+11
 18627  016BAA  0E04               	movlw	4
 18628  016BAC  242F               	addwf	(btemp+10)^0,w,c
 18629  016BAE  6ED9               	movwf	fsr2l,c
 18630  016BB0  0E00               	movlw	0
 18631  016BB2  2030               	addwfc	(btemp+11)^0,w,c
 18632  016BB4  6EDA               	movwf	fsr2h,c
 18633                           
 18634                           ;stkvar	_fp @ sp[(0)+-4]
 18635  016BB6  0EFC               	movlw	-4
 18636  016BB8  006F FF8C  F02F    	movff	plusw1,btemp+10
 18637  016BBE  0EFD               	movlw	-3
 18638  016BC0  006F FF8C  F030    	movff	plusw1,btemp+11
 18639  016BC6  0E02               	movlw	2
 18640  016BC8  242F               	addwf	(btemp+10)^0,w,c
 18641  016BCA  6EE9               	movwf	fsr0l,c
 18642  016BCC  0E00               	movlw	0
 18643  016BCE  2030               	addwfc	(btemp+11)^0,w,c
 18644  016BD0  6EEA               	movwf	fsr0h,c
 18645  016BD2  50DE               	movf	postinc2,w,c
 18646  016BD4  5CEE               	subwf	postinc0,w,c
 18647  016BD6  50EE               	movf	postinc0,w,c
 18648  016BD8  0A80               	xorlw	128
 18649  016BDA  6E25               	movwf	btemp^0,c
 18650  016BDC  50DE               	movf	postinc2,w,c
 18651  016BDE  0A80               	xorlw	128
 18652  016BE0  5825               	subwfb	btemp^0,w,c
 18653  016BE2  B0D8               	btfsc	status,0,c
 18654  016BE4  D03D               	goto	l2998
 18655  016BE6                     u9220:
 18656                           
 18657                           ;stkvar	_c @ sp[(0)+-2]
 18658                           ;stkvar	_fp @ sp[(0)+-4]
 18659  016BE6  0EFC               	movlw	-4
 18660  016BE8  006F FF8C  F02F    	movff	plusw1,btemp+10
 18661  016BEE  0EFD               	movlw	-3
 18662  016BF0  006F FF8C  F030    	movff	plusw1,btemp+11
 18663  016BF6  0E02               	movlw	2
 18664  016BF8  242F               	addwf	(btemp+10)^0,w,c
 18665  016BFA  6ED9               	movwf	fsr2l,c
 18666  016BFC  0E00               	movlw	0
 18667  016BFE  2030               	addwfc	(btemp+11)^0,w,c
 18668  016C00  6EDA               	movwf	fsr2h,c
 18669  016C02  006F FF78  F02F    	movff	postinc2,btemp+10
 18670  016C08  006F FF74  F030    	movff	postdec2,btemp+11
 18671                           
 18672                           ;stkvar	_fp @ sp[(0)+-4]
 18673  016C0E  0EFC               	movlw	-4
 18674  016C10  006F FF8F FFD9     	movff	plusw1,fsr2l
 18675  016C16  0EFD               	movlw	-3
 18676  016C18  006F FF8F FFDA     	movff	plusw1,fsr2h
 18677  016C1E  006F FF78  F02D    	movff	postinc2,btemp+8
 18678  016C24  006F FF74  F02E    	movff	postdec2,btemp+9
 18679  016C2A  502F               	movf	(btemp+10)^0,w,c
 18680  016C2C  242D               	addwf	(btemp+8)^0,w,c
 18681  016C2E  6ED9               	movwf	fsr2l,c
 18682  016C30  5030               	movf	(btemp+11)^0,w,c
 18683  016C32  202E               	addwfc	(btemp+9)^0,w,c
 18684  016C34  6EDA               	movwf	fsr2h,c
 18685  016C36  0EFE               	movlw	-2
 18686  016C38  006F FF8F FFDF     	movff	plusw1,indf2
 18687                           
 18688                           ;stkvar	_fp @ sp[(0)+-4]
 18689  016C3E  0EFC               	movlw	-4
 18690  016C40  006F FF8C  F02F    	movff	plusw1,btemp+10
 18691  016C46  0EFD               	movlw	-3
 18692  016C48  006F FF8C  F030    	movff	plusw1,btemp+11
 18693  016C4E  0E02               	movlw	2
 18694  016C50  242F               	addwf	(btemp+10)^0,w,c
 18695  016C52  6ED9               	movwf	fsr2l,c
 18696  016C54  0E00               	movlw	0
 18697  016C56  2030               	addwfc	(btemp+11)^0,w,c
 18698  016C58  6EDA               	movwf	fsr2h,c
 18699  016C5A  2ADE               	incf	postinc2,f,c
 18700  016C5C  0E00               	movlw	0
 18701  016C5E  22DD               	addwfc	postdec2,f,c
 18702  016C60                     l2998:
 18703                           
 18704                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 18705  016C60  52E5               	movf	postdec1,f,c
 18706  016C62  52E5               	movf	postdec1,f,c
 18707  016C64  52E5               	movf	postdec1,f,c
 18708  016C66  52E5               	movf	postdec1,f,c
 18709  016C68  0012               	return		;funcret
 18710  016C6A                     __end_of_fputc:
 18711                           	opt callstack 0
 18712                           
 18713 ;; *************** function _putch *****************
 18714 ;; Defined at:
 18715 ;;		line 168 in file "eadog.c"
 18716 ;; Parameters:    Size  Location     Type
 18717 ;;  c               1  [STACK] unsigned char 
 18718 ;; Auto vars:     Size  Location     Type
 18719 ;;		None
 18720 ;; Return value:  Size  Location     Type
 18721 ;;                  1  [STACK] void 
 18722 ;; Registers used:
 18723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18724 ;; Tracked objects:
 18725 ;;		On entry : 0/0
 18726 ;;		On exit  : 0/0
 18727 ;;		Unchanged: 0/0
 18728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18733 ;;Total ram usage:        0 bytes
 18734 ;; Hardware stack levels used:    1
 18735 ;; Hardware stack levels required when called:    8
 18736 ;; This function calls:
 18737 ;;		_ringBufS_put_dma
 18738 ;; This function is called by:
 18739 ;;		_fputc
 18740 ;; This function uses a reentrant model
 18741 ;;
 18742                           
 18743                           	psect	text70
 18744  0190DE                     __ptext70:
 18745                           	opt callstack 0
 18746  0190DE                     _putch:
 18747                           	opt callstack 12
 18748                           
 18749                           ;eadog.c: 168: void putch(char c);eadog.c: 169: {;eadog.c: 170:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 18750                           ;stkvar	_c @ sp[(0)+-1]
 18751                           
 18752                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18753                           ;incstack = 0
 18754  0190DE  0EFF               	movlw	-1
 18755  0190E0  50E3               	movf	plusw1,w,c
 18756  0190E2  6EE6               	movwf	postinc1,c
 18757  0190E4  0060  F23F  FFE6   	movff	_spi_link+6,postinc1
 18758  0190EA  0060  F243  FFE6   	movff	_spi_link+7,postinc1
 18759  0190F0  ECD2  F0BC         	call	_ringBufS_put_dma	;wreg free
 18760                           
 18761                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 18762  0190F4  52E5               	movf	postdec1,f,c
 18763  0190F6  0012               	return		;funcret
 18764  0190F8                     __end_of_putch:
 18765                           	opt callstack 0
 18766                           
 18767 ;; *************** function _ringBufS_put_dma *****************
 18768 ;; Defined at:
 18769 ;;		line 67 in file "ringbufs.c"
 18770 ;; Parameters:    Size  Location     Type
 18771 ;;  _this           2  [STACK] PTR struct ringBufS_t
 18772 ;;		 -> ring_buf1(67), 
 18773 ;;  c               1  [STACK] const unsigned char 
 18774 ;; Auto vars:     Size  Location     Type
 18775 ;;		None
 18776 ;; Return value:  Size  Location     Type
 18777 ;;                  1  [STACK] void 
 18778 ;; Registers used:
 18779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18780 ;; Tracked objects:
 18781 ;;		On entry : 0/0
 18782 ;;		On exit  : 0/0
 18783 ;;		Unchanged: 0/0
 18784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18789 ;;Total ram usage:        0 bytes
 18790 ;; Hardware stack levels used:    1
 18791 ;; Hardware stack levels required when called:    7
 18792 ;; This function calls:
 18793 ;;		Nothing
 18794 ;; This function is called by:
 18795 ;;		_putch
 18796 ;; This function uses a reentrant model
 18797 ;;
 18798                           
 18799                           	psect	text71
 18800  0179A4                     __ptext71:
 18801                           	opt callstack 0
 18802  0179A4                     _ringBufS_put_dma:
 18803                           	opt callstack 12
 18804                           
 18805                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 18806                           ;stkvar	__this @ sp[(0)+-2]
 18807                           
 18808                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18809                           ;incstack = 0
 18810  0179A4  0EFE               	movlw	-2
 18811  0179A6  006F FF8C  F02F    	movff	plusw1,btemp+10
 18812  0179AC  0EFF               	movlw	-1
 18813  0179AE  006F FF8C  F030    	movff	plusw1,btemp+11
 18814  0179B4  0E42               	movlw	66
 18815  0179B6  242F               	addwf	(btemp+10)^0,w,c
 18816  0179B8  6ED9               	movwf	fsr2l,c
 18817  0179BA  0E00               	movlw	0
 18818  0179BC  2030               	addwfc	(btemp+11)^0,w,c
 18819  0179BE  6EDA               	movwf	fsr2h,c
 18820  0179C0  0E40               	movlw	64
 18821  0179C2  60DF               	cpfslt	indf2,c
 18822  0179C4  D040               	goto	l1580
 18823                           
 18824                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 18825                           ;stkvar	_c @ sp[(0)+-3]
 18826                           ;stkvar	__this @ sp[(0)+-2]
 18827  0179C6  0EFE               	movlw	-2
 18828  0179C8  006F FF8C  F02F    	movff	plusw1,btemp+10
 18829  0179CE  0EFF               	movlw	-1
 18830  0179D0  006F FF8C  F030    	movff	plusw1,btemp+11
 18831  0179D6  0E40               	movlw	64
 18832  0179D8  242F               	addwf	(btemp+10)^0,w,c
 18833  0179DA  6ED9               	movwf	fsr2l,c
 18834  0179DC  0E00               	movlw	0
 18835  0179DE  2030               	addwfc	(btemp+11)^0,w,c
 18836  0179E0  6EDA               	movwf	fsr2h,c
 18837  0179E2  50DF               	movf	indf2,w,c
 18838  0179E4  6E30               	movwf	(btemp+11)^0,c
 18839                           
 18840                           ;stkvar	__this @ sp[(0)+-2]
 18841  0179E6  0EFE               	movlw	-2
 18842  0179E8  006F FF8C  F02D    	movff	plusw1,btemp+8
 18843  0179EE  0EFF               	movlw	-1
 18844  0179F0  006F FF8C  F02E    	movff	plusw1,btemp+9
 18845  0179F6  5030               	movf	(btemp+11)^0,w,c
 18846  0179F8  242D               	addwf	(btemp+8)^0,w,c
 18847  0179FA  6ED9               	movwf	fsr2l,c
 18848  0179FC  0E00               	movlw	0
 18849  0179FE  202E               	addwfc	(btemp+9)^0,w,c
 18850  017A00  6EDA               	movwf	fsr2h,c
 18851  017A02  0EFD               	movlw	-3
 18852  017A04  006F FF8F FFDF     	movff	plusw1,indf2
 18853                           
 18854                           ;ringbufs.c: 71:   ++_this->head;
 18855                           ;stkvar	__this @ sp[(0)+-2]
 18856  017A0A  0EFE               	movlw	-2
 18857  017A0C  006F FF8C  F02F    	movff	plusw1,btemp+10
 18858  017A12  0EFF               	movlw	-1
 18859  017A14  006F FF8C  F030    	movff	plusw1,btemp+11
 18860  017A1A  0E40               	movlw	64
 18861  017A1C  242F               	addwf	(btemp+10)^0,w,c
 18862  017A1E  6ED9               	movwf	fsr2l,c
 18863  017A20  0E00               	movlw	0
 18864  017A22  2030               	addwfc	(btemp+11)^0,w,c
 18865  017A24  6EDA               	movwf	fsr2h,c
 18866  017A26  2ADF               	incf	indf2,f,c
 18867                           
 18868                           ;ringbufs.c: 72:   ++_this->count;
 18869                           ;stkvar	__this @ sp[(0)+-2]
 18870  017A28  0EFE               	movlw	-2
 18871  017A2A  006F FF8C  F02F    	movff	plusw1,btemp+10
 18872  017A30  0EFF               	movlw	-1
 18873  017A32  006F FF8C  F030    	movff	plusw1,btemp+11
 18874  017A38  0E42               	movlw	66
 18875  017A3A  242F               	addwf	(btemp+10)^0,w,c
 18876  017A3C  6ED9               	movwf	fsr2l,c
 18877  017A3E  0E00               	movlw	0
 18878  017A40  2030               	addwfc	(btemp+11)^0,w,c
 18879  017A42  6EDA               	movwf	fsr2h,c
 18880  017A44  2ADF               	incf	indf2,f,c
 18881  017A46                     l1580:
 18882                           
 18883                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 18884  017A46  52E5               	movf	postdec1,f,c
 18885  017A48  52E5               	movf	postdec1,f,c
 18886  017A4A  52E5               	movf	postdec1,f,c
 18887  017A4C  0012               	return		;funcret
 18888  017A4E                     __end_of_ringBufS_put_dma:
 18889                           	opt callstack 0
 18890                           
 18891 ;; *************** function _atoi *****************
 18892 ;; Defined at:
 18893 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 18894 ;; Parameters:    Size  Location     Type
 18895 ;;  s               2  [STACK] PTR const unsigned char 
 18896 ;;		 -> STR_44(3), STR_43(3), STR_42(19), STR_41(19), 
 18897 ;;		 -> STR_40(19), STR_39(19), STR_38(19), STR_37(19), 
 18898 ;;		 -> STR_36(24), STR_35(15), STR_34(15), STR_33(15), 
 18899 ;;		 -> STR_32(10), STR_31(10), STR_30(19), STR_29(19), 
 18900 ;;		 -> STR_26(3), STR_25(3), STR_24(3), STR_23(17), 
 18901 ;;		 -> STR_22(16), STR_21(16), STR_20(19), STR_19(19), 
 18902 ;;		 -> STR_18(19), STR_17(19), STR_16(19), STR_15(19), 
 18903 ;;		 -> STR_14(19), STR_13(19), STR_12(19), STR_11(17), 
 18904 ;;		 -> STR_10(16), STR_9(16), STR_8(17), STR_6(15), 
 18905 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 18906 ;; Auto vars:     Size  Location     Type
 18907 ;;  n               2  [STACK] int 
 18908 ;;  neg             2  [STACK] int 
 18909 ;; Return value:  Size  Location     Type
 18910 ;;                  2  [STACK] int 
 18911 ;; Registers used:
 18912 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 18913 ;; Tracked objects:
 18914 ;;		On entry : 0/0
 18915 ;;		On exit  : 0/0
 18916 ;;		Unchanged: 0/0
 18917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18922 ;;Total ram usage:        0 bytes
 18923 ;; Hardware stack levels used:    1
 18924 ;; Hardware stack levels required when called:    8
 18925 ;; This function calls:
 18926 ;;		_isdigit
 18927 ;;		_isspace
 18928 ;; This function is called by:
 18929 ;;		_vfpfcnvrt
 18930 ;; This function uses a reentrant model
 18931 ;;
 18932                           
 18933                           	psect	text72
 18934  0156C6                     __ptext72:
 18935                           	opt callstack 0
 18936  0156C6                     _atoi:
 18937                           	opt callstack 0
 18938                           
 18939                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18940  0156C6  0E09               	movlw	9
 18941  0156C8  26E1               	addwf	fsr1l,f,c
 18942  0156CA  0E00               	movlw	0
 18943  0156CC  22E2               	addwfc	fsr1h,f,c
 18944                           
 18945                           ;stkvar	_n @ sp[(-9)+5]
 18946                           
 18947                           ;incstack = 0
 18948  0156CE  0EFC               	movlw	-4
 18949  0156D0  6AE3               	clrf	plusw1,c
 18950  0156D2  0EFD               	movlw	-3
 18951  0156D4  6AE3               	clrf	plusw1,c
 18952                           
 18953                           ;stkvar	_neg @ sp[(-9)+7]
 18954  0156D6  0EFE               	movlw	-2
 18955  0156D8  6AE3               	clrf	plusw1,c
 18956  0156DA  0EFF               	movlw	-1
 18957  0156DC  6AE3               	clrf	plusw1,c
 18958  0156DE  D011               	goto	l7643
 18959  0156E0                     l7641:
 18960                           
 18961                           ;stkvar	_s @ sp[(-9)+-2]
 18962  0156E0  0EF5               	movlw	-11
 18963  0156E2  50E3               	movf	plusw1,w,c
 18964  0156E4  0F01               	addlw	1
 18965  0156E6  6E25               	movwf	btemp^0,c
 18966  0156E8  0EF5               	movlw	-11
 18967  0156EA  0060  F097  FFE3   	movff	btemp,plusw1
 18968  0156F0  6A25               	clrf	btemp^0,c
 18969  0156F2  0EF6               	movlw	-10
 18970  0156F4  50E3               	movf	plusw1,w,c
 18971  0156F6  2025               	addwfc	btemp^0,w,c
 18972  0156F8  6E25               	movwf	btemp^0,c
 18973  0156FA  0EF6               	movlw	-10
 18974  0156FC  0060  F097  FFE3   	movff	btemp,plusw1
 18975  015702                     l7643:
 18976                           
 18977                           ;stkvar	_atoi$5507 @ sp[(-9)+4]
 18978  015702  0EFB               	movlw	-5
 18979  015704  6AE3               	clrf	plusw1,c
 18980  015706  2AE3               	incf	plusw1,f,c
 18981                           
 18982                           ;stkvar	_s @ sp[(-9)+-2]
 18983  015708  50E1               	movf	fsr1l,w,c
 18984  01570A  0FF5               	addlw	-11
 18985  01570C  6ED9               	movwf	fsr2l,c
 18986  01570E  50E2               	movf	fsr1h,w,c
 18987  015710  6EDA               	movwf	fsr2h,c
 18988  015712  0EFF               	movlw	255
 18989  015714  22DA               	addwfc	fsr2h,f,c
 18990  015716  006F FF7B FFF6     	movff	postinc2,tblptrl
 18991  01571C  006F FF77 FFF7     	movff	postdec2,tblptrh
 18992  015722                     	if	0	;tblptru may be non-zero
 18993  015722                     	endif
 18994  015722                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18995  015722  0E00               	movlw	low (__mediumconst shr (0+16))
 18996  015724  6EF8               	movwf	tblptru,c
 18997  015726                     	endif
 18998  015726  0008               	tblrd		*
 18999  015728  50F5               	movf	tablat,w,c
 19000  01572A  0A20               	xorlw	32
 19001  01572C  B4D8               	btfsc	status,2,c
 19002  01572E  D023               	goto	l7651
 19003  015730  0EF7               	movlw	247
 19004  015732  6E2F               	movwf	(btemp+10)^0,c
 19005  015734  0EFF               	movlw	255
 19006  015736  6E30               	movwf	(btemp+11)^0,c
 19007                           
 19008                           ;stkvar	_s @ sp[(-9)+-2]
 19009  015738  50E1               	movf	fsr1l,w,c
 19010  01573A  0FF5               	addlw	-11
 19011  01573C  6ED9               	movwf	fsr2l,c
 19012  01573E  50E2               	movf	fsr1h,w,c
 19013  015740  6EDA               	movwf	fsr2h,c
 19014  015742  0EFF               	movlw	255
 19015  015744  22DA               	addwfc	fsr2h,f,c
 19016  015746  006F FF7B FFF6     	movff	postinc2,tblptrl
 19017  01574C  006F FF77 FFF7     	movff	postdec2,tblptrh
 19018  015752                     	if	0	;tblptru may be non-zero
 19019  015752                     	endif
 19020  015752                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19021  015752  0E00               	movlw	low (__mediumconst shr (0+16))
 19022  015754  6EF8               	movwf	tblptru,c
 19023  015756                     	endif
 19024  015756  0008               	tblrd		*
 19025  015758  50F5               	movf	tablat,w,c
 19026  01575A  6E2D               	movwf	(btemp+8)^0,c
 19027  01575C  6A2E               	clrf	(btemp+9)^0,c
 19028  01575E  502F               	movf	(btemp+10)^0,w,c
 19029  015760  262D               	addwf	(btemp+8)^0,f,c
 19030  015762  5030               	movf	(btemp+11)^0,w,c
 19031  015764  222E               	addwfc	(btemp+9)^0,f,c
 19032  015766  502E               	movf	(btemp+9)^0,w,c
 19033  015768  E104               	bnz	u6810
 19034  01576A  0E05               	movlw	5
 19035  01576C  5C2D               	subwf	(btemp+8)^0,w,c
 19036  01576E  A0D8               	btfss	status,0,c
 19037  015770  D002               	goto	l7651
 19038  015772                     u6810:
 19039                           
 19040                           ;stkvar	_atoi$5507 @ sp[(-9)+4]
 19041  015772  0EFB               	movlw	-5
 19042  015774  6AE3               	clrf	plusw1,c
 19043  015776                     l7651:
 19044                           
 19045                           ;stkvar	_atoi$5507 @ sp[(-9)+4]
 19046  015776  0EFB               	movlw	-5
 19047  015778  50E3               	movf	plusw1,w,c
 19048  01577A  6E2F               	movwf	(btemp+10)^0,c
 19049  01577C  6A30               	clrf	(btemp+11)^0,c
 19050                           
 19051                           ;stkvar	_atoi$5506 @ sp[(-9)+2]
 19052  01577E  0EF9               	movlw	-7
 19053  015780  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19054  015786  0EFA               	movlw	-6
 19055  015788  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19056                           
 19057                           ;stkvar	_atoi$5506 @ sp[(-9)+2]
 19058  01578E  0EF9               	movlw	-7
 19059  015790  006F FF8C  F025    	movff	plusw1,btemp
 19060  015796  0EFA               	movlw	-6
 19061  015798  50E3               	movf	plusw1,w,c
 19062  01579A  1025               	iorwf	btemp^0,w,c
 19063  01579C  B4D8               	btfsc	status,2,c
 19064  01579E  D01F               	goto	l7661
 19065  0157A0  D79F               	goto	l7641
 19066  0157A2                     l7657:
 19067  0157A2  0E01               	movlw	1
 19068  0157A4  6E2F               	movwf	(btemp+10)^0,c
 19069  0157A6  0E00               	movlw	0
 19070  0157A8  6E30               	movwf	(btemp+11)^0,c
 19071                           
 19072                           ;stkvar	_neg @ sp[(-9)+7]
 19073  0157AA  0EFE               	movlw	-2
 19074  0157AC  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19075  0157B2  0EFF               	movlw	-1
 19076  0157B4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19077  0157BA                     l7659:
 19078                           
 19079                           ;stkvar	_s @ sp[(-9)+-2]
 19080  0157BA  0EF5               	movlw	-11
 19081  0157BC  50E3               	movf	plusw1,w,c
 19082  0157BE  0F01               	addlw	1
 19083  0157C0  6E25               	movwf	btemp^0,c
 19084  0157C2  0EF5               	movlw	-11
 19085  0157C4  0060  F097  FFE3   	movff	btemp,plusw1
 19086  0157CA  6A25               	clrf	btemp^0,c
 19087  0157CC  0EF6               	movlw	-10
 19088  0157CE  50E3               	movf	plusw1,w,c
 19089  0157D0  2025               	addwfc	btemp^0,w,c
 19090  0157D2  6E25               	movwf	btemp^0,c
 19091  0157D4  0EF6               	movlw	-10
 19092  0157D6  0060  F097  FFE3   	movff	btemp,plusw1
 19093  0157DC  D053               	goto	l7667
 19094  0157DE                     l7661:
 19095                           
 19096                           ;stkvar	_s @ sp[(-9)+-2]
 19097  0157DE  50E1               	movf	fsr1l,w,c
 19098  0157E0  0FF5               	addlw	-11
 19099  0157E2  6ED9               	movwf	fsr2l,c
 19100  0157E4  50E2               	movf	fsr1h,w,c
 19101  0157E6  6EDA               	movwf	fsr2h,c
 19102  0157E8  0EFF               	movlw	255
 19103  0157EA  22DA               	addwfc	fsr2h,f,c
 19104  0157EC  006F FF7B FFF6     	movff	postinc2,tblptrl
 19105  0157F2  006F FF77 FFF7     	movff	postdec2,tblptrh
 19106  0157F8                     	if	0	;tblptru may be non-zero
 19107  0157F8                     	endif
 19108  0157F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19109  0157F8  0E00               	movlw	low (__mediumconst shr (0+16))
 19110  0157FA  6EF8               	movwf	tblptru,c
 19111  0157FC                     	endif
 19112  0157FC  0008               	tblrd		*
 19113  0157FE  50F5               	movf	tablat,w,c
 19114  015800  6E2F               	movwf	(btemp+10)^0,c
 19115  015802  6A30               	clrf	(btemp+11)^0,c
 19116                           
 19117                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19118                           ; Switch size 1, requested type "simple"
 19119                           ; Number of cases is 1, Range of values is 0 to 0
 19120                           ; switch strategies available:
 19121                           ; Name         Instructions Cycles
 19122                           ; simple_byte            4     3 (average)
 19123                           ;	Chosen strategy is simple_byte
 19124  015804  5030               	movf	(btemp+11)^0,w,c
 19125  015806  0A00               	xorlw	0	; case 0
 19126  015808  A4D8               	btfss	status,2,c
 19127  01580A  D03C               	goto	l7667
 19128                           
 19129                           ; Switch size 1, requested type "simple"
 19130                           ; Number of cases is 2, Range of values is 43 to 45
 19131                           ; switch strategies available:
 19132                           ; Name         Instructions Cycles
 19133                           ; simple_byte            7     4 (average)
 19134                           ;	Chosen strategy is simple_byte
 19135  01580C  502F               	movf	(btemp+10)^0,w,c
 19136  01580E  0A2B               	xorlw	43	; case 43
 19137  015810  B4D8               	btfsc	status,2,c
 19138  015812  D7D3               	goto	l7659
 19139  015814  0A06               	xorlw	6	; case 45
 19140  015816  B4D8               	btfsc	status,2,c
 19141  015818  D7C4               	goto	l7657
 19142  01581A  D034               	goto	l7667
 19143  01581C                     l7663:
 19144                           
 19145                           ;stkvar	_n @ sp[(-9)+5]
 19146  01581C  0EFC               	movlw	-4
 19147  01581E  006F FF8C  F02F    	movff	plusw1,btemp+10
 19148  015824  0EFD               	movlw	-3
 19149  015826  006F FF8C  F030    	movff	plusw1,btemp+11
 19150  01582C  0E0A               	movlw	10
 19151  01582E  022F               	mulwf	(btemp+10)^0,c
 19152  015830  006F FFCC  F02D    	movff	prodl,btemp+8
 19153  015836  006F FFD0  F02E    	movff	prodh,btemp+9
 19154  01583C  0230               	mulwf	(btemp+11)^0,c
 19155  01583E  50F3               	movf	prodl,w,c
 19156  015840  262E               	addwf	(btemp+9)^0,f,c
 19157                           
 19158                           ;stkvar	_s @ sp[(-9)+-2]
 19159  015842  50E1               	movf	fsr1l,w,c
 19160  015844  0FF5               	addlw	-11
 19161  015846  6ED9               	movwf	fsr2l,c
 19162  015848  50E2               	movf	fsr1h,w,c
 19163  01584A  6EDA               	movwf	fsr2h,c
 19164  01584C  0EFF               	movlw	255
 19165  01584E  22DA               	addwfc	fsr2h,f,c
 19166  015850  006F FF7B FFF6     	movff	postinc2,tblptrl
 19167  015856  006F FF77 FFF7     	movff	postdec2,tblptrh
 19168  01585C                     	if	0	;tblptru may be non-zero
 19169  01585C                     	endif
 19170  01585C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19171  01585C  0E00               	movlw	low (__mediumconst shr (0+16))
 19172  01585E  6EF8               	movwf	tblptru,c
 19173  015860                     	endif
 19174  015860  0008               	tblrd		*
 19175  015862  50F5               	movf	tablat,w,c
 19176  015864  5E2D               	subwf	(btemp+8)^0,f,c
 19177  015866  0E00               	movlw	0
 19178  015868  5A2E               	subwfb	(btemp+9)^0,f,c
 19179  01586A  0E30               	movlw	48
 19180  01586C  262D               	addwf	(btemp+8)^0,f,c
 19181  01586E  0E00               	movlw	0
 19182  015870  222E               	addwfc	(btemp+9)^0,f,c
 19183                           
 19184                           ;stkvar	_n @ sp[(-9)+5]
 19185  015872  0EFC               	movlw	-4
 19186  015874  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 19187  01587A  0EFD               	movlw	-3
 19188  01587C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 19189  015882  D79B               	goto	l7659
 19190  015884                     l7667:
 19191  015884  0ED0               	movlw	208
 19192  015886  6E2F               	movwf	(btemp+10)^0,c
 19193  015888  0EFF               	movlw	255
 19194  01588A  6E30               	movwf	(btemp+11)^0,c
 19195                           
 19196                           ;stkvar	_s @ sp[(-9)+-2]
 19197  01588C  50E1               	movf	fsr1l,w,c
 19198  01588E  0FF5               	addlw	-11
 19199  015890  6ED9               	movwf	fsr2l,c
 19200  015892  50E2               	movf	fsr1h,w,c
 19201  015894  6EDA               	movwf	fsr2h,c
 19202  015896  0EFF               	movlw	255
 19203  015898  22DA               	addwfc	fsr2h,f,c
 19204  01589A  006F FF7B FFF6     	movff	postinc2,tblptrl
 19205  0158A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 19206  0158A6                     	if	0	;tblptru may be non-zero
 19207  0158A6                     	endif
 19208  0158A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19209  0158A6  0E00               	movlw	low (__mediumconst shr (0+16))
 19210  0158A8  6EF8               	movwf	tblptru,c
 19211  0158AA                     	endif
 19212  0158AA  0008               	tblrd		*
 19213  0158AC  50F5               	movf	tablat,w,c
 19214  0158AE  6E2D               	movwf	(btemp+8)^0,c
 19215  0158B0  6A2E               	clrf	(btemp+9)^0,c
 19216  0158B2  502F               	movf	(btemp+10)^0,w,c
 19217  0158B4  262D               	addwf	(btemp+8)^0,f,c
 19218  0158B6  5030               	movf	(btemp+11)^0,w,c
 19219  0158B8  222E               	addwfc	(btemp+9)^0,f,c
 19220  0158BA  502E               	movf	(btemp+9)^0,w,c
 19221  0158BC  E106               	bnz	u6830
 19222  0158BE  0E0A               	movlw	10
 19223  0158C0  5C2D               	subwf	(btemp+8)^0,w,c
 19224  0158C2  B0D8               	btfsc	status,0,c
 19225  0158C4  D002               	goto	u6830
 19226  0158C6  0E01               	movlw	1
 19227  0158C8  D001               	goto	u6840
 19228  0158CA                     u6830:
 19229  0158CA  0E00               	movlw	0
 19230  0158CC                     u6840:
 19231  0158CC  6E2F               	movwf	(btemp+10)^0,c
 19232  0158CE  6A30               	clrf	(btemp+11)^0,c
 19233                           
 19234                           ;stkvar	_atoi$5508 @ sp[(-9)+0]
 19235  0158D0  0EF7               	movlw	-9
 19236  0158D2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 19237  0158D8  0EF8               	movlw	-8
 19238  0158DA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 19239                           
 19240                           ;stkvar	_atoi$5508 @ sp[(-9)+0]
 19241  0158E0  0EF7               	movlw	-9
 19242  0158E2  006F FF8C  F025    	movff	plusw1,btemp
 19243  0158E8  0EF8               	movlw	-8
 19244  0158EA  50E3               	movf	plusw1,w,c
 19245  0158EC  1025               	iorwf	btemp^0,w,c
 19246  0158EE  A4D8               	btfss	status,2,c
 19247  0158F0  D795               	goto	l7663
 19248                           
 19249                           ;stkvar	_neg @ sp[(-9)+7]
 19250  0158F2  0EFE               	movlw	-2
 19251  0158F4  006F FF8C  F025    	movff	plusw1,btemp
 19252  0158FA  0EFF               	movlw	-1
 19253  0158FC  50E3               	movf	plusw1,w,c
 19254  0158FE  1025               	iorwf	btemp^0,w,c
 19255  015900  A4D8               	btfss	status,2,c
 19256  015902  D00E               	goto	l7677
 19257                           
 19258                           ;stkvar	_n @ sp[(-9)+5]
 19259  015904  0EFC               	movlw	-4
 19260  015906  006F FF8C  F025    	movff	plusw1,btemp
 19261  01590C  1E25               	comf	btemp^0,f,c
 19262  01590E  0EFD               	movlw	-3
 19263  015910  006F FF8C  F026    	movff	plusw1,btemp+1
 19264  015916  1E26               	comf	(btemp+1)^0,f,c
 19265  015918  2A25               	incf	btemp^0,f,c
 19266  01591A  B4D8               	btfsc	status,2,c
 19267  01591C  2A26               	incf	(btemp+1)^0,f,c
 19268  01591E  D008               	goto	l2934
 19269  015920                     l7677:
 19270                           
 19271                           ;stkvar	_n @ sp[(-9)+5]
 19272  015920  0EFC               	movlw	-4
 19273  015922  006F FF8C  F025    	movff	plusw1,btemp
 19274  015928  0EFD               	movlw	-3
 19275  01592A  006F FF8C  F026    	movff	plusw1,btemp+1
 19276  015930                     l2934:
 19277                           
 19278                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 19279  015930  0EF5               	movlw	245
 19280  015932  26E1               	addwf	fsr1l,f,c
 19281  015934  0EFF               	movlw	255
 19282  015936  22E2               	addwfc	fsr1h,f,c
 19283  015938  0012               	return		;funcret
 19284  01593A                     __end_of_atoi:
 19285                           	opt callstack 0
 19286                           
 19287 ;; *************** function _isspace *****************
 19288 ;; Defined at:
 19289 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 19290 ;; Parameters:    Size  Location     Type
 19291 ;;  c               2  [STACK] int 
 19292 ;; Auto vars:     Size  Location     Type
 19293 ;;		None
 19294 ;; Return value:  Size  Location     Type
 19295 ;;                  2  [STACK] int 
 19296 ;; Registers used:
 19297 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19298 ;; Tracked objects:
 19299 ;;		On entry : 0/0
 19300 ;;		On exit  : 0/0
 19301 ;;		Unchanged: 0/0
 19302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19306 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19307 ;;Total ram usage:        0 bytes
 19308 ;; Hardware stack levels used:    1
 19309 ;; Hardware stack levels required when called:    7
 19310 ;; This function calls:
 19311 ;;		Nothing
 19312 ;; This function is called by:
 19313 ;;		_atoi
 19314 ;; This function uses a reentrant model
 19315 ;;
 19316                           
 19317                           	psect	text73
 19318  0184E0                     __ptext73:
 19319                           	opt callstack 0
 19320  0184E0                     _isspace:
 19321                           	opt callstack 0
 19322                           
 19323                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19324  0184E0  52E6               	movf	postinc1,f,c
 19325                           
 19326                           ;stkvar	_isspace$5546 @ sp[(-1)+0]
 19327                           
 19328                           ;incstack = 0
 19329  0184E2  0EFF               	movlw	-1
 19330  0184E4  6AE3               	clrf	plusw1,c
 19331  0184E6  2AE3               	incf	plusw1,f,c
 19332                           
 19333                           ;stkvar	_c @ sp[(-1)+-2]
 19334  0184E8  0EFD               	movlw	-3
 19335  0184EA  006F FF8C  F025    	movff	plusw1,btemp
 19336  0184F0  0E20               	movlw	32
 19337  0184F2  1825               	xorwf	btemp^0,w,c
 19338  0184F4  E104               	bnz	u5800
 19339  0184F6  0EFE               	movlw	-2
 19340  0184F8  50E3               	movf	plusw1,w,c
 19341  0184FA  B4D8               	btfsc	status,2,c
 19342  0184FC  D012               	goto	l7127
 19343  0184FE                     u5800:
 19344                           
 19345                           ;stkvar	_c @ sp[(-1)+-2]
 19346  0184FE  0EFD               	movlw	-3
 19347  018500  50E3               	movf	plusw1,w,c
 19348  018502  0FF7               	addlw	247
 19349  018504  6E2F               	movwf	(btemp+10)^0,c
 19350  018506  0EFE               	movlw	-2
 19351  018508  006F FF8C  F030    	movff	plusw1,btemp+11
 19352  01850E  0EFF               	movlw	255
 19353  018510  2230               	addwfc	(btemp+11)^0,f,c
 19354  018512  5030               	movf	(btemp+11)^0,w,c
 19355  018514  E104               	bnz	u5810
 19356  018516  0E05               	movlw	5
 19357  018518  5C2F               	subwf	(btemp+10)^0,w,c
 19358  01851A  A0D8               	btfss	status,0,c
 19359  01851C  D002               	goto	l7127
 19360  01851E                     u5810:
 19361                           
 19362                           ;stkvar	_isspace$5546 @ sp[(-1)+0]
 19363  01851E  0EFF               	movlw	-1
 19364  018520  6AE3               	clrf	plusw1,c
 19365  018522                     l7127:
 19366                           
 19367                           ;stkvar	_isspace$5546 @ sp[(-1)+0]
 19368  018522  0EFF               	movlw	-1
 19369  018524  50E3               	movf	plusw1,w,c
 19370  018526  6E25               	movwf	btemp^0,c
 19371  018528  6A26               	clrf	(btemp+1)^0,c
 19372                           
 19373                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19374  01852A  52E5               	movf	postdec1,f,c
 19375  01852C  52E5               	movf	postdec1,f,c
 19376  01852E  52E5               	movf	postdec1,f,c
 19377  018530  0012               	return		;funcret
 19378  018532                     __end_of_isspace:
 19379                           	opt callstack 0
 19380                           
 19381 ;; *************** function _isdigit *****************
 19382 ;; Defined at:
 19383 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 19384 ;; Parameters:    Size  Location     Type
 19385 ;;  c               2  [STACK] int 
 19386 ;; Auto vars:     Size  Location     Type
 19387 ;;		None
 19388 ;; Return value:  Size  Location     Type
 19389 ;;                  2  [STACK] int 
 19390 ;; Registers used:
 19391 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 19392 ;; Tracked objects:
 19393 ;;		On entry : 0/0
 19394 ;;		On exit  : 0/0
 19395 ;;		Unchanged: 0/0
 19396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19401 ;;Total ram usage:        0 bytes
 19402 ;; Hardware stack levels used:    1
 19403 ;; Hardware stack levels required when called:    7
 19404 ;; This function calls:
 19405 ;;		Nothing
 19406 ;; This function is called by:
 19407 ;;		_vfpfcnvrt
 19408 ;;		_atoi
 19409 ;; This function uses a reentrant model
 19410 ;;
 19411                           
 19412                           	psect	text74
 19413  018AC4                     __ptext74:
 19414                           	opt callstack 0
 19415  018AC4                     _isdigit:
 19416                           	opt callstack 17
 19417                           
 19418                           ;stkvar	_c @ sp[(0)+-2]
 19419                           
 19420                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19421                           ;incstack = 0
 19422  018AC4  0EFE               	movlw	-2
 19423  018AC6  50E3               	movf	plusw1,w,c
 19424  018AC8  0FD0               	addlw	208
 19425  018ACA  6E2F               	movwf	(btemp+10)^0,c
 19426  018ACC  0EFF               	movlw	-1
 19427  018ACE  006F FF8C  F030    	movff	plusw1,btemp+11
 19428  018AD4  0EFF               	movlw	255
 19429  018AD6  2230               	addwfc	(btemp+11)^0,f,c
 19430  018AD8  5030               	movf	(btemp+11)^0,w,c
 19431  018ADA  E106               	bnz	u5050
 19432  018ADC  0E0A               	movlw	10
 19433  018ADE  5C2F               	subwf	(btemp+10)^0,w,c
 19434  018AE0  B0D8               	btfsc	status,0,c
 19435  018AE2  D002               	goto	u5050
 19436  018AE4  0E01               	movlw	1
 19437  018AE6  D001               	goto	u5060
 19438  018AE8                     u5050:
 19439  018AE8  0E00               	movlw	0
 19440  018AEA                     u5060:
 19441  018AEA  6E25               	movwf	btemp^0,c
 19442  018AEC  6A26               	clrf	(btemp+1)^0,c
 19443                           
 19444                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 19445  018AEE  52E5               	movf	postdec1,f,c
 19446  018AF0  52E5               	movf	postdec1,f,c
 19447  018AF2  0012               	return		;funcret
 19448  018AF4                     __end_of_isdigit:
 19449                           	opt callstack 0
 19450                           
 19451 ;; *************** function _set_vterm *****************
 19452 ;; Defined at:
 19453 ;;		line 107 in file "mconfig.c"
 19454 ;; Parameters:    Size  Location     Type
 19455 ;;  vterm           1  [STACK] const unsigned char 
 19456 ;; Auto vars:     Size  Location     Type
 19457 ;;		None
 19458 ;; Return value:  Size  Location     Type
 19459 ;;                  1  [STACK] unsigned char 
 19460 ;; Registers used:
 19461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 19462 ;; Tracked objects:
 19463 ;;		On entry : 0/1
 19464 ;;		On exit  : 0/0
 19465 ;;		Unchanged: 0/0
 19466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19471 ;;Total ram usage:        0 bytes
 19472 ;; Hardware stack levels used:    1
 19473 ;; Hardware stack levels required when called:    7
 19474 ;; This function calls:
 19475 ;;		Nothing
 19476 ;; This function is called by:
 19477 ;;		_main
 19478 ;;		_check_help
 19479 ;; This function uses a reentrant model
 19480 ;;
 19481                           
 19482                           	psect	text75
 19483  01904A                     __ptext75:
 19484                           	opt callstack 0
 19485  01904A                     _set_vterm:
 19486                           	opt callstack 23
 19487                           
 19488                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 19489                           ;stkvar	_vterm @ sp[(0)+-1]
 19490                           
 19491                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19492                           ;incstack = 0
 19493  01904A  0EFF               	movlw	-1
 19494  01904C  006F FF8C  F030    	movff	plusw1,btemp+11
 19495  019052  0E03               	movlw	3
 19496  019054  1630               	andwf	(btemp+11)^0,f,c
 19497  019056  EE22  F01F         	lfsr	2,_D+288
 19498  01905A  50DF               	movf	223,w,c
 19499  01905C  1830               	xorwf	(btemp+11)^0,w,c
 19500  01905E  0BFE               	andlw	-2
 19501  019060  1830               	xorwf	(btemp+11)^0,w,c
 19502  019062  6EDF               	movwf	223,c
 19503                           
 19504                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19505  019064  52E5               	movf	postdec1,f,c
 19506  019066  0012               	return		;funcret
 19507  019068                     __end_of_set_vterm:
 19508                           	opt callstack 0
 19509                           
 19510 ;; *************** function _set_temp_display_help *****************
 19511 ;; Defined at:
 19512 ;;		line 211 in file "mconfig.c"
 19513 ;; Parameters:    Size  Location     Type
 19514 ;;  new_response    1  [STACK] const enum E16518
 19515 ;; Auto vars:     Size  Location     Type
 19516 ;;		None
 19517 ;; Return value:  Size  Location     Type
 19518 ;;                  1  [STACK] enum E16518
 19519 ;; Registers used:
 19520 ;;		wreg, fsr1l, fsr1h
 19521 ;; Tracked objects:
 19522 ;;		On entry : 0/2
 19523 ;;		On exit  : 3F/2
 19524 ;;		Unchanged: 0/0
 19525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19530 ;;Total ram usage:        0 bytes
 19531 ;; Hardware stack levels used:    1
 19532 ;; Hardware stack levels required when called:    7
 19533 ;; This function calls:
 19534 ;;		Nothing
 19535 ;; This function is called by:
 19536 ;;		_check_help
 19537 ;; This function uses a reentrant model
 19538 ;;
 19539                           
 19540                           	psect	text76
 19541  0191BC                     __ptext76:
 19542                           	opt callstack 0
 19543  0191BC                     _set_temp_display_help:
 19544                           	opt callstack 22
 19545                           
 19546                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 19547                           
 19548                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19549                           ;incstack = 0
 19550  0191BC  0102               	movlb	2	; () banked
 19551  0191BE  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 19552                           
 19553                           ; BSR set to: 2
 19554                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 19555                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19556  0191C0  0EFF               	movlw	-1
 19557  0191C2  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 19558                           
 19559                           ; BSR set to: 2
 19560                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 19561  0191C8  52E5               	movf	postdec1,f,c
 19562  0191CA  0012               	return		;funcret
 19563  0191CC                     __end_of_set_temp_display_help:
 19564                           	opt callstack 0
 19565                           
 19566 ;; *************** function _set_display_info *****************
 19567 ;; Defined at:
 19568 ;;		line 200 in file "mconfig.c"
 19569 ;; Parameters:    Size  Location     Type
 19570 ;;  new_response    1  [STACK] const enum E16518
 19571 ;; Auto vars:     Size  Location     Type
 19572 ;;		None
 19573 ;; Return value:  Size  Location     Type
 19574 ;;                  1  [STACK] enum E17003
 19575 ;; Registers used:
 19576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19577 ;; Tracked objects:
 19578 ;;		On entry : 0/1
 19579 ;;		On exit  : 0/0
 19580 ;;		Unchanged: 0/0
 19581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19586 ;;Total ram usage:        0 bytes
 19587 ;; Hardware stack levels used:    1
 19588 ;; Hardware stack levels required when called:    8
 19589 ;; This function calls:
 19590 ;;		_TimerDone
 19591 ;; This function is called by:
 19592 ;;		_main
 19593 ;;		_check_help
 19594 ;; This function uses a reentrant model
 19595 ;;
 19596                           
 19597                           	psect	text77
 19598  019068                     __ptext77:
 19599                           	opt callstack 0
 19600  019068                     _set_display_info:
 19601                           	opt callstack 22
 19602                           
 19603                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 19604                           
 19605                           ; BSR set to: 2
 19606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19607                           ;incstack = 0
 19608  019068  0E07               	movlw	7
 19609  01906A  6EE6               	movwf	postinc1,c
 19610  01906C  EC39  F0C6         	call	_TimerDone	;wreg free
 19611  019070  5025               	movf	btemp^0,w,c
 19612  019072  B4D8               	btfsc	status,2,c
 19613  019074  D006               	goto	l1717
 19614                           
 19615                           ;mconfig.c: 205:   old_info = V.response.info;
 19616  019076  0102               	movlb	2	; () banked
 19617  019078  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 19618                           
 19619                           ; BSR set to: 2
 19620                           ;mconfig.c: 206:   V.response.info = new_response_info;
 19621                           ;stkvar	_new_response_info @ sp[(0)+-1]
 19622  01907A  0EFF               	movlw	-1
 19623  01907C  006F FF8C  F2A3    	movff	plusw1,_V+163	;volatile
 19624  019082                     l1717:
 19625                           
 19626                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 19627  019082  52E5               	movf	postdec1,f,c
 19628  019084  0012               	return		;funcret
 19629  019086                     __end_of_set_display_info:
 19630                           	opt callstack 0
 19631                           
 19632 ;; *************** function _mode_lamp_dim *****************
 19633 ;; Defined at:
 19634 ;;		line 13 in file "mconfig.c"
 19635 ;; Parameters:    Size  Location     Type
 19636 ;;  level           2  [STACK] const unsigned short 
 19637 ;; Auto vars:     Size  Location     Type
 19638 ;;		None
 19639 ;; Return value:  Size  Location     Type
 19640 ;;                  1  [STACK] void 
 19641 ;; Registers used:
 19642 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19643 ;; Tracked objects:
 19644 ;;		On entry : 0/2
 19645 ;;		On exit  : 0/0
 19646 ;;		Unchanged: 0/0
 19647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19652 ;;Total ram usage:        0 bytes
 19653 ;; Hardware stack levels used:    1
 19654 ;; Hardware stack levels required when called:    8
 19655 ;; This function calls:
 19656 ;;		_PWM8_LoadDutyValue
 19657 ;; This function is called by:
 19658 ;;		_main
 19659 ;;		_check_help
 19660 ;; This function uses a reentrant model
 19661 ;;
 19662                           
 19663                           	psect	text78
 19664  019112                     __ptext78:
 19665                           	opt callstack 0
 19666  019112                     _mode_lamp_dim:
 19667                           	opt callstack 22
 19668                           
 19669                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 19670                           ;stkvar	_level @ sp[(0)+-2]
 19671                           
 19672                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19673                           ;incstack = 0
 19674  019112  0EFE               	movlw	-2
 19675  019114  006F FF8F FFE6     	movff	plusw1,postinc1
 19676  01911A  006F FF8F FFE6     	movff	plusw1,postinc1
 19677  019120  ECB7  F0C3         	call	_PWM8_LoadDutyValue	;wreg free
 19678                           
 19679                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 19680  019124  52E5               	movf	postdec1,f,c
 19681  019126  52E5               	movf	postdec1,f,c
 19682  019128  0012               	return		;funcret
 19683  01912A                     __end_of_mode_lamp_dim:
 19684                           	opt callstack 0
 19685                           
 19686 ;; *************** function _mode_lamp_bright *****************
 19687 ;; Defined at:
 19688 ;;		line 18 in file "mconfig.c"
 19689 ;; Parameters:    Size  Location     Type
 19690 ;;		None
 19691 ;; Auto vars:     Size  Location     Type
 19692 ;;		None
 19693 ;; Return value:  Size  Location     Type
 19694 ;;                  1  [STACK] void 
 19695 ;; Registers used:
 19696 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19697 ;; Tracked objects:
 19698 ;;		On entry : 0/0
 19699 ;;		On exit  : 0/0
 19700 ;;		Unchanged: 0/0
 19701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19706 ;;Total ram usage:        0 bytes
 19707 ;; Hardware stack levels used:    1
 19708 ;; Hardware stack levels required when called:    8
 19709 ;; This function calls:
 19710 ;;		_PWM8_LoadDutyValue
 19711 ;; This function is called by:
 19712 ;;		_check_help
 19713 ;; This function uses a reentrant model
 19714 ;;
 19715                           
 19716                           	psect	text79
 19717  0191DA                     __ptext79:
 19718                           	opt callstack 0
 19719  0191DA                     _mode_lamp_bright:
 19720                           	opt callstack 21
 19721                           
 19722                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 19723                           
 19724                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19725                           ;incstack = 0
 19726  0191DA  0E2C               	movlw	44
 19727  0191DC  6EE6               	movwf	postinc1,c
 19728  0191DE  0E01               	movlw	1
 19729  0191E0  6EE6               	movwf	postinc1,c
 19730  0191E2  ECB7  F0C3         	call	_PWM8_LoadDutyValue	;wreg free
 19731                           
 19732                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 19733  0191E6  0012               	return		;funcret
 19734  0191E8                     __end_of_mode_lamp_bright:
 19735                           	opt callstack 0
 19736                           
 19737 ;; *************** function _PWM8_LoadDutyValue *****************
 19738 ;; Defined at:
 19739 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 19740 ;; Parameters:    Size  Location     Type
 19741 ;;  dutyValue       2  [STACK] unsigned short 
 19742 ;; Auto vars:     Size  Location     Type
 19743 ;;		None
 19744 ;; Return value:  Size  Location     Type
 19745 ;;                  1  [STACK] void 
 19746 ;; Registers used:
 19747 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 19748 ;; Tracked objects:
 19749 ;;		On entry : 0/2
 19750 ;;		On exit  : 0/0
 19751 ;;		Unchanged: 0/0
 19752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19757 ;;Total ram usage:        0 bytes
 19758 ;; Hardware stack levels used:    1
 19759 ;; Hardware stack levels required when called:    7
 19760 ;; This function calls:
 19761 ;;		Nothing
 19762 ;; This function is called by:
 19763 ;;		_mode_lamp_dim
 19764 ;;		_mode_lamp_bright
 19765 ;; This function uses a reentrant model
 19766 ;;
 19767                           
 19768                           	psect	text80
 19769  01876E                     __ptext80:
 19770                           	opt callstack 0
 19771  01876E                     _PWM8_LoadDutyValue:
 19772                           	opt callstack 22
 19773                           
 19774                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 19775                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19776                           
 19777                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19778                           ;incstack = 0
 19779  01876E  0EFE               	movlw	-2
 19780  018770  006F FF8C  F02F    	movff	plusw1,btemp+10
 19781  018776  0EFF               	movlw	-1
 19782  018778  006F FF8C  F030    	movff	plusw1,btemp+11
 19783  01877E  90D8               	bcf	status,0,c
 19784  018780  3230               	rrcf	(btemp+11)^0,f,c
 19785  018782  322F               	rrcf	(btemp+10)^0,f,c
 19786  018784  90D8               	bcf	status,0,c
 19787  018786  3230               	rrcf	(btemp+11)^0,f,c
 19788  018788  322F               	rrcf	(btemp+10)^0,f,c
 19789  01878A  502F               	movf	(btemp+10)^0,w,c
 19790  01878C  6E61               	movwf	97,c	;volatile
 19791                           
 19792                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 19793                           ;stkvar	_dutyValue @ sp[(0)+-2]
 19794  01878E  0EFE               	movlw	-2
 19795  018790  006F FF8C  F030    	movff	plusw1,btemp+11
 19796  018796  0E03               	movlw	3
 19797  018798  1630               	andwf	(btemp+11)^0,f,c
 19798  01879A  0E06               	movlw	6
 19799  01879C  6E25               	movwf	btemp^0,c
 19800  01879E                     u7295:
 19801  01879E  90D8               	bcf	status,0,c
 19802  0187A0  3630               	rlcf	(btemp+11)^0,f,c
 19803  0187A2  2E25               	decfsz	btemp^0,f,c
 19804  0187A4  D7FC               	goto	u7295
 19805  0187A6  5030               	movf	(btemp+11)^0,w,c
 19806  0187A8  6E60               	movwf	96,c	;volatile
 19807                           
 19808                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 19809  0187AA  52E5               	movf	postdec1,f,c
 19810  0187AC  52E5               	movf	postdec1,f,c
 19811  0187AE  0012               	return		;funcret
 19812  0187B0                     __end_of_PWM8_LoadDutyValue:
 19813                           	opt callstack 0
 19814                           
 19815 ;; *************** function _help_button *****************
 19816 ;; Defined at:
 19817 ;;		line 26 in file "mconfig.c"
 19818 ;; Parameters:    Size  Location     Type
 19819 ;;		None
 19820 ;; Auto vars:     Size  Location     Type
 19821 ;;		None
 19822 ;; Return value:  Size  Location     Type
 19823 ;;                  1  [STACK] _Bool 
 19824 ;; Registers used:
 19825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19826 ;; Tracked objects:
 19827 ;;		On entry : 0/2
 19828 ;;		On exit  : 0/0
 19829 ;;		Unchanged: 0/0
 19830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19835 ;;Total ram usage:        0 bytes
 19836 ;; Hardware stack levels used:    1
 19837 ;; Hardware stack levels required when called:    8
 19838 ;; This function calls:
 19839 ;;		_StartTimer
 19840 ;;		_TimerDone
 19841 ;; This function is called by:
 19842 ;;		_check_help
 19843 ;; This function uses a reentrant model
 19844 ;;
 19845                           
 19846                           	psect	text81
 19847  0188EE                     __ptext81:
 19848                           	opt callstack 0
 19849  0188EE                     _help_button:
 19850                           	opt callstack 21
 19851                           
 19852                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 19853                           
 19854                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19855                           ;incstack = 0
 19856  0188EE  B0CB               	btfsc	203,0,c	;volatile
 19857  0188F0  D00C               	goto	l1660
 19858                           
 19859                           ;mconfig.c: 29:   V.help = 1;
 19860  0188F2  0102               	movlb	2	; () banked
 19861  0188F4  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 19862                           
 19863                           ; BSR set to: 2
 19864                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 19865  0188F6  0E08               	movlw	8
 19866  0188F8  6EE6               	movwf	postinc1,c
 19867  0188FA  EC39  F0C6         	call	_TimerDone	;wreg free
 19868  0188FE  5025               	movf	btemp^0,w,c
 19869  018900  B4D8               	btfsc	status,2,c
 19870  018902  D003               	goto	l1660
 19871                           
 19872                           ;mconfig.c: 31:    return 1;
 19873  018904  0E01               	movlw	1
 19874  018906  6E25               	movwf	btemp^0,c
 19875  018908  0012               	return	
 19876  01890A                     l1660:
 19877                           
 19878                           ;mconfig.c: 34:  if (!V.help)
 19879  01890A  0102               	movlb	2	; () banked
 19880  01890C  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 19881  01890E  D008               	goto	l9021
 19882                           
 19883                           ; BSR set to: 2
 19884                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 19885  018910  0E2C               	movlw	44
 19886  018912  6EE6               	movwf	postinc1,c
 19887  018914  0E01               	movlw	1
 19888  018916  6EE6               	movwf	postinc1,c
 19889  018918  0E08               	movlw	8
 19890  01891A  6EE6               	movwf	postinc1,c
 19891  01891C  ECD8  F0C3         	call	_StartTimer	;wreg free
 19892  018920                     l9021:
 19893                           
 19894                           ;mconfig.c: 37:  return 0;
 19895  018920  0E00               	movlw	0
 19896  018922  6E25               	movwf	btemp^0,c
 19897                           
 19898                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 19899  018924  0012               	return		;funcret
 19900  018926                     __end_of_help_button:
 19901                           	opt callstack 0
 19902                           
 19903 ;; *************** function _TimerDone *****************
 19904 ;; Defined at:
 19905 ;;		line 20 in file "timers.c"
 19906 ;; Parameters:    Size  Location     Type
 19907 ;;  timer           1  [STACK] const unsigned char 
 19908 ;; Auto vars:     Size  Location     Type
 19909 ;;		None
 19910 ;; Return value:  Size  Location     Type
 19911 ;;                  1  [STACK] _Bool 
 19912 ;; Registers used:
 19913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 19914 ;; Tracked objects:
 19915 ;;		On entry : 0/1
 19916 ;;		On exit  : 0/0
 19917 ;;		Unchanged: 0/0
 19918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19923 ;;Total ram usage:        0 bytes
 19924 ;; Hardware stack levels used:    1
 19925 ;; Hardware stack levels required when called:    7
 19926 ;; This function calls:
 19927 ;;		Nothing
 19928 ;; This function is called by:
 19929 ;;		_main
 19930 ;;		_WaitMs
 19931 ;;		_help_button
 19932 ;;		_check_help
 19933 ;;		_set_display_info
 19934 ;; This function uses a reentrant model
 19935 ;;
 19936                           
 19937                           	psect	text82
 19938  018C72                     __ptext82:
 19939                           	opt callstack 0
 19940  018C72                     _TimerDone:
 19941                           	opt callstack 22
 19942                           
 19943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19944                           ;incstack = 0
 19945  018C72  0004               	clrwdt		;# 
 19946                           
 19947                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 19948                           ;stkvar	_timer @ sp[(0)+-1]
 19949  018C74  0EFF               	movlw	-1
 19950  018C76  50E3               	movf	plusw1,w,c
 19951  018C78  0D02               	mullw	2
 19952  018C7A  0EB1               	movlw	low _tickCount
 19953  018C7C  24F3               	addwf	243,w,c
 19954  018C7E  6ED9               	movwf	fsr2l,c
 19955  018C80  0E01               	movlw	high _tickCount
 19956  018C82  20F4               	addwfc	prodh,w,c
 19957  018C84  6EDA               	movwf	fsr2h,c
 19958  018C86  50DE               	movf	postinc2,w,c
 19959  018C88  10DE               	iorwf	postinc2,w,c
 19960  018C8A  A4D8               	btfss	status,2,c
 19961  018C8C  D002               	goto	l7963
 19962                           
 19963                           ;timers.c: 24:   return 1;
 19964  018C8E  0E01               	movlw	1
 19965  018C90  D001               	goto	L20
 19966  018C92                     l7963:
 19967                           
 19968                           ;timers.c: 26:  return 0;
 19969  018C92  0E00               	movlw	0
 19970  018C94                     L20:
 19971  018C94  6E25               	movwf	btemp^0,c
 19972                           
 19973                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 19974  018C96  52E5               	movf	postdec1,f,c
 19975  018C98  0012               	return		;funcret
 19976  018C9A                     __end_of_TimerDone:
 19977                           	opt callstack 0
 19978                           
 19979 ;; *************** function _StartTimer *****************
 19980 ;; Defined at:
 19981 ;;		line 12 in file "timers.c"
 19982 ;; Parameters:    Size  Location     Type
 19983 ;;  timer           1  [STACK] const unsigned char 
 19984 ;;  count           2  [STACK] const unsigned short 
 19985 ;; Auto vars:     Size  Location     Type
 19986 ;;		None
 19987 ;; Return value:  Size  Location     Type
 19988 ;;                  1  [STACK] void 
 19989 ;; Registers used:
 19990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 19991 ;; Tracked objects:
 19992 ;;		On entry : 0/0
 19993 ;;		On exit  : 0/0
 19994 ;;		Unchanged: 0/0
 19995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20000 ;;Total ram usage:        0 bytes
 20001 ;; Hardware stack levels used:    1
 20002 ;; Hardware stack levels required when called:    7
 20003 ;; This function calls:
 20004 ;;		Nothing
 20005 ;; This function is called by:
 20006 ;;		_main
 20007 ;;		_WaitMs
 20008 ;;		_help_button
 20009 ;;		_check_help
 20010 ;; This function uses a reentrant model
 20011 ;;
 20012                           
 20013                           	psect	text83
 20014  0187B0                     __ptext83:
 20015                           	opt callstack 0
 20016  0187B0                     _StartTimer:
 20017                           	opt callstack 20
 20018                           
 20019                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 20020                           ;stkvar	_count @ sp[(0)+-3]
 20021                           
 20022                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20023                           ;incstack = 0
 20024  0187B0  0EFD               	movlw	-3
 20025  0187B2  006F FF8C  F02F    	movff	plusw1,btemp+10
 20026  0187B8  0EFE               	movlw	-2
 20027  0187BA  006F FF8C  F030    	movff	plusw1,btemp+11
 20028  0187C0  90D8               	bcf	status,0,c
 20029  0187C2  342F               	rlcf	(btemp+10)^0,w,c
 20030  0187C4  6E2D               	movwf	(btemp+8)^0,c
 20031  0187C6  3430               	rlcf	(btemp+11)^0,w,c
 20032  0187C8  6E2E               	movwf	(btemp+9)^0,c
 20033                           
 20034                           ;stkvar	_timer @ sp[(0)+-1]
 20035  0187CA  0EFF               	movlw	-1
 20036  0187CC  50E3               	movf	plusw1,w,c
 20037  0187CE  0D02               	mullw	2
 20038  0187D0  0EB1               	movlw	low _tickCount
 20039  0187D2  24F3               	addwf	243,w,c
 20040  0187D4  6ED9               	movwf	fsr2l,c
 20041  0187D6  0E01               	movlw	high _tickCount
 20042  0187D8  20F4               	addwfc	prodh,w,c
 20043  0187DA  6EDA               	movwf	fsr2h,c
 20044  0187DC  0060  F0B7  FFDE   	movff	btemp+8,postinc2
 20045  0187E2  0060  F0BB  FFDD   	movff	btemp+9,postdec2
 20046                           
 20047                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 20048  0187E8  52E5               	movf	postdec1,f,c
 20049  0187EA  52E5               	movf	postdec1,f,c
 20050  0187EC  52E5               	movf	postdec1,f,c
 20051  0187EE  0012               	return		;funcret
 20052  0187F0                     __end_of_StartTimer:
 20053                           	opt callstack 0
 20054                           
 20055 ;; *************** function _display_info *****************
 20056 ;; Defined at:
 20057 ;;		line 190 in file "mconfig.c"
 20058 ;; Parameters:    Size  Location     Type
 20059 ;;		None
 20060 ;; Auto vars:     Size  Location     Type
 20061 ;;		None
 20062 ;; Return value:  Size  Location     Type
 20063 ;;                  1  [STACK] enum E16518
 20064 ;; Registers used:
 20065 ;;		btemp
 20066 ;; Tracked objects:
 20067 ;;		On entry : 0/2
 20068 ;;		On exit  : 0/0
 20069 ;;		Unchanged: 0/0
 20070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20075 ;;Total ram usage:        0 bytes
 20076 ;; Hardware stack levels used:    1
 20077 ;; Hardware stack levels required when called:    7
 20078 ;; This function calls:
 20079 ;;		Nothing
 20080 ;; This function is called by:
 20081 ;;		_check_help
 20082 ;; This function uses a reentrant model
 20083 ;;
 20084                           
 20085                           	psect	text84
 20086  01923A                     __ptext84:
 20087                           	opt callstack 0
 20088  01923A                     _display_info:
 20089                           	opt callstack 22
 20090                           
 20091                           ;mconfig.c: 192:  return V.response.info;
 20092                           
 20093                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20094                           ;incstack = 0
 20095  01923A  0060  FA8C  F025   	movff	_V+163,btemp	;volatile
 20096                           
 20097                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20098  019240  0012               	return		;funcret
 20099  019242                     __end_of_display_info:
 20100                           	opt callstack 0
 20101                           
 20102 ;; *************** function _display_help *****************
 20103 ;; Defined at:
 20104 ;;		line 195 in file "mconfig.c"
 20105 ;; Parameters:    Size  Location     Type
 20106 ;;		None
 20107 ;; Auto vars:     Size  Location     Type
 20108 ;;		None
 20109 ;; Return value:  Size  Location     Type
 20110 ;;                  1  [STACK] enum E16518
 20111 ;; Registers used:
 20112 ;;		btemp
 20113 ;; Tracked objects:
 20114 ;;		On entry : 3F/2
 20115 ;;		On exit  : 0/0
 20116 ;;		Unchanged: 0/0
 20117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20122 ;;Total ram usage:        0 bytes
 20123 ;; Hardware stack levels used:    1
 20124 ;; Hardware stack levels required when called:    7
 20125 ;; This function calls:
 20126 ;;		Nothing
 20127 ;; This function is called by:
 20128 ;;		_check_help
 20129 ;; This function uses a reentrant model
 20130 ;;
 20131                           
 20132                           	psect	text85
 20133  019242                     __ptext85:
 20134                           	opt callstack 0
 20135  019242                     _display_help:
 20136                           	opt callstack 22
 20137                           
 20138                           ;mconfig.c: 197:  return V.response.help_temp;
 20139                           
 20140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20141                           ;incstack = 0
 20142  019242  0060  FA90  F025   	movff	_V+164,btemp	;volatile
 20143                           
 20144                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 20145  019248  0012               	return		;funcret
 20146  01924A                     __end_of_display_help:
 20147                           	opt callstack 0
 20148                           
 20149 ;; *************** function _check_enter_button *****************
 20150 ;; Defined at:
 20151 ;;		line 42 in file "hid.c"
 20152 ;; Parameters:    Size  Location     Type
 20153 ;;  h               1  [STACK] PTR struct H_data
 20154 ;;		 -> H(7), 
 20155 ;; Auto vars:     Size  Location     Type
 20156 ;;		None
 20157 ;; Return value:  Size  Location     Type
 20158 ;;                  1  [STACK] _Bool 
 20159 ;; Registers used:
 20160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20161 ;; Tracked objects:
 20162 ;;		On entry : 0/1
 20163 ;;		On exit  : 0/0
 20164 ;;		Unchanged: 0/0
 20165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20170 ;;Total ram usage:        0 bytes
 20171 ;; Hardware stack levels used:    1
 20172 ;; Hardware stack levels required when called:    7
 20173 ;; This function calls:
 20174 ;;		Nothing
 20175 ;; This function is called by:
 20176 ;;		_main
 20177 ;; This function uses a reentrant model
 20178 ;;
 20179                           
 20180                           	psect	text86
 20181  0187F0                     __ptext86:
 20182                           	opt callstack 0
 20183  0187F0                     _check_enter_button:
 20184                           	opt callstack 23
 20185                           
 20186                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 20187                           ;stkvar	_h @ sp[(0)+-1]
 20188                           
 20189                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20190                           ;incstack = 0
 20191  0187F0  0EFF               	movlw	-1
 20192  0187F2  50E3               	movf	plusw1,w,c
 20193  0187F4  6ED9               	movwf	fsr2l,c
 20194  0187F6  6ADA               	clrf	fsr2h,c
 20195  0187F8  0E04               	movlw	4
 20196  0187FA  26D9               	addwf	fsr2l,f,c
 20197  0187FC  50DF               	movf	indf2,w,c
 20198  0187FE  A4D8               	btfss	status,2,c
 20199  018800  D013               	goto	l9531
 20200                           
 20201                           ;stkvar	_h @ sp[(0)+-1]
 20202  018802  0EFF               	movlw	-1
 20203  018804  50E3               	movf	plusw1,w,c
 20204  018806  6ED9               	movwf	fsr2l,c
 20205  018808  6ADA               	clrf	fsr2h,c
 20206  01880A  0E05               	movlw	5
 20207  01880C  26D9               	addwf	fsr2l,f,c
 20208  01880E  50DF               	movf	indf2,w,c
 20209  018810  A4D8               	btfss	status,2,c
 20210  018812  D00A               	goto	l9531
 20211                           
 20212                           ;hid.c: 45:   h->wait_enter = 1;
 20213                           ;stkvar	_h @ sp[(0)+-1]
 20214  018814  0EFF               	movlw	-1
 20215  018816  50E3               	movf	plusw1,w,c
 20216  018818  6ED9               	movwf	fsr2l,c
 20217  01881A  6ADA               	clrf	fsr2h,c
 20218  01881C  0E04               	movlw	4
 20219  01881E  26D9               	addwf	fsr2l,f,c
 20220  018820  0E01               	movlw	1
 20221  018822  6EDF               	movwf	indf2,c
 20222                           
 20223                           ;hid.c: 46:   return 1;
 20224  018824  0E01               	movlw	1
 20225  018826  D001               	goto	L21
 20226  018828                     l9531:
 20227                           
 20228                           ;hid.c: 48:  return 0;
 20229  018828  0E00               	movlw	0
 20230  01882A                     L21:
 20231  01882A  6E25               	movwf	btemp^0,c
 20232                           
 20233                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 20234  01882C  52E5               	movf	postdec1,f,c
 20235  01882E  0012               	return		;funcret
 20236  018830                     __end_of_check_enter_button:
 20237                           	opt callstack 0
 20238                           
 20239 ;; *************** function _check_adc_scan *****************
 20240 ;; Defined at:
 20241 ;;		line 56 in file "daq.c"
 20242 ;; Parameters:    Size  Location     Type
 20243 ;;		None
 20244 ;; Auto vars:     Size  Location     Type
 20245 ;;		None
 20246 ;; Return value:  Size  Location     Type
 20247 ;;                  1  [STACK] _Bool 
 20248 ;; Registers used:
 20249 ;;		btemp
 20250 ;; Tracked objects:
 20251 ;;		On entry : 0/1
 20252 ;;		On exit  : 0/0
 20253 ;;		Unchanged: 0/0
 20254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20259 ;;Total ram usage:        0 bytes
 20260 ;; Hardware stack levels used:    1
 20261 ;; Hardware stack levels required when called:    7
 20262 ;; This function calls:
 20263 ;;		Nothing
 20264 ;; This function is called by:
 20265 ;;		_main
 20266 ;; This function uses a reentrant model
 20267 ;;
 20268                           
 20269                           	psect	text87
 20270  01924A                     __ptext87:
 20271                           	opt callstack 0
 20272  01924A                     _check_adc_scan:
 20273                           	opt callstack 23
 20274                           
 20275                           ;daq.c: 58:  return R.done;
 20276                           
 20277                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20278                           ;incstack = 0
 20279  01924A  0060  F3A8  F025   	movff	_R+39,btemp	;volatile
 20280                           
 20281                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 20282  019250  0012               	return		;funcret
 20283  019252                     __end_of_check_adc_scan:
 20284                           	opt callstack 0
 20285                           
 20286 ;; *************** function _calc_model_data *****************
 20287 ;; Defined at:
 20288 ;;		line 56 in file "mbmc.c"
 20289 ;; Parameters:    Size  Location     Type
 20290 ;;		None
 20291 ;; Auto vars:     Size  Location     Type
 20292 ;;		None
 20293 ;; Return value:  Size  Location     Type
 20294 ;;                  1  [STACK] void 
 20295 ;; Registers used:
 20296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20297 ;; Tracked objects:
 20298 ;;		On entry : 0/1
 20299 ;;		On exit  : 3F/1
 20300 ;;		Unchanged: 0/0
 20301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20306 ;;Total ram usage:        0 bytes
 20307 ;; Hardware stack levels used:    1
 20308 ;; Hardware stack levels required when called:   10
 20309 ;; This function calls:
 20310 ;;		___fladd
 20311 ;;		___flmul
 20312 ;;		___flsub
 20313 ;;		_lp_filter
 20314 ;;		_start_bsoc
 20315 ;;		_stop_bsoc
 20316 ;; This function is called by:
 20317 ;;		_main
 20318 ;; This function uses a reentrant model
 20319 ;;
 20320                           
 20321                           	psect	text88
 20322  014EAE                     __ptext88:
 20323                           	opt callstack 0
 20324  014EAE                     _calc_model_data:
 20325                           	opt callstack 20
 20326                           
 20327                           ;mbmc.c: 58:  stop_bsoc();
 20328                           
 20329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20330                           ;incstack = 0
 20331  014EAE  EC36  F0C9         	call	_stop_bsoc	;wreg free
 20332                           
 20333                           ; BSR set to: 57
 20334                           ;mbmc.c: 60:  if (!V.calib) {
 20335  014EB2  0102               	movlb	2	; () banked
 20336  014EB4  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
 20337  014EB6  A4D8               	btfss	status,2,c
 20338  014EB8  D161               	goto	l9433
 20339                           
 20340                           ; BSR set to: 2
 20341                           ;mbmc.c: 61:   C.c_bat = C.calc[C_BATT];
 20342  014EBA  C100  F144         	movff	_C,_C+68	;volatile
 20343  014EBE  C101  F145         	movff	_C+1,_C+69	;volatile
 20344  014EC2  C102  F146         	movff	_C+2,_C+70	;volatile
 20345  014EC6  C103  F147         	movff	_C+3,_C+71	;volatile
 20346                           
 20347                           ;mbmc.c: 62:   C.c_pv = C.calc[C_PV];
 20348  014ECA  C104  F148         	movff	_C+4,_C+72	;volatile
 20349  014ECE  C105  F149         	movff	_C+5,_C+73	;volatile
 20350  014ED2  C106  F14A         	movff	_C+6,_C+74	;volatile
 20351  014ED6  C107  F14B         	movff	_C+7,_C+75	;volatile
 20352                           
 20353                           ;mbmc.c: 63:   C.v_bat = C.calc[V_BAT];
 20354  014EDA  C110  F154         	movff	_C+16,_C+84	;volatile
 20355  014EDE  C111  F155         	movff	_C+17,_C+85	;volatile
 20356  014EE2  C112  F156         	movff	_C+18,_C+86	;volatile
 20357  014EE6  C113  F157         	movff	_C+19,_C+87	;volatile
 20358                           
 20359                           ;mbmc.c: 64:   C.v_pv = C.calc[V_PV];
 20360  014EEA  C114  F150         	movff	_C+20,_C+80	;volatile
 20361  014EEE  C115  F151         	movff	_C+21,_C+81	;volatile
 20362  014EF2  C116  F152         	movff	_C+22,_C+82	;volatile
 20363  014EF6  C117  F153         	movff	_C+23,_C+83	;volatile
 20364                           
 20365                           ;mbmc.c: 65:   C.v_inverter = C.calc[V_INVERTER];
 20366  014EFA  C130  F164         	movff	_C+48,_C+100	;volatile
 20367  014EFE  C131  F165         	movff	_C+49,_C+101	;volatile
 20368  014F02  C132  F166         	movff	_C+50,_C+102	;volatile
 20369  014F06  C133  F167         	movff	_C+51,_C+103	;volatile
 20370                           
 20371                           ; BSR set to: 2
 20372                           ;mbmc.c: 66:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 20373  014F0A  0E01               	movlw	1
 20374  014F0C  6EE6               	movwf	postinc1,c
 20375  014F0E  0E10               	movlw	16
 20376  014F10  6EE6               	movwf	postinc1,c
 20377  014F12  0060  F403  FFE6   	movff	_C,postinc1
 20378  014F18  0060  F407  FFE6   	movff	_C+1,postinc1
 20379  014F1E  0060  F40B  FFE6   	movff	_C+2,postinc1
 20380  014F24  0060  F40F  FFE6   	movff	_C+3,postinc1
 20381  014F2A  0060  F413  FFE6   	movff	_C+4,postinc1
 20382  014F30  0060  F417  FFE6   	movff	_C+5,postinc1
 20383  014F36  0060  F41B  FFE6   	movff	_C+6,postinc1
 20384  014F3C  0060  F41F  FFE6   	movff	_C+7,postinc1
 20385  014F42  EC2C  F0C3         	call	___flsub	;wreg free
 20386  014F46  0060  F097  FFE6   	movff	btemp,postinc1
 20387  014F4C  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20388  014F52  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20389  014F58  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20390  014F5E  ECAC  F0B0         	call	_lp_filter	;wreg free
 20391  014F62  0060  F094  F140   	movff	btemp,_C+64	;volatile
 20392  014F68  0060  F098  F141   	movff	btemp+1,_C+65	;volatile
 20393  014F6E  0060  F09C  F142   	movff	btemp+2,_C+66	;volatile
 20394  014F74  0060  F0A0  F143   	movff	btemp+3,_C+67	;volatile
 20395                           
 20396                           ;mbmc.c: 67:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 20397  014F7A  0E01               	movlw	1
 20398  014F7C  6EE6               	movwf	postinc1,c
 20399  014F7E  0E11               	movlw	17
 20400  014F80  6EE6               	movwf	postinc1,c
 20401  014F82  0060  F553  FFE6   	movff	_C+84,postinc1
 20402  014F88  0060  F557  FFE6   	movff	_C+85,postinc1
 20403  014F8E  0060  F55B  FFE6   	movff	_C+86,postinc1
 20404  014F94  0060  F55F  FFE6   	movff	_C+87,postinc1
 20405  014F9A  0060  F503  FFE6   	movff	_C+64,postinc1
 20406  014FA0  0060  F507  FFE6   	movff	_C+65,postinc1
 20407  014FA6  0060  F50B  FFE6   	movff	_C+66,postinc1
 20408  014FAC  0060  F50F  FFE6   	movff	_C+67,postinc1
 20409  014FB2  EC08  F093         	call	___flmul	;wreg free
 20410  014FB6  0060  F097  FFE6   	movff	btemp,postinc1
 20411  014FBC  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20412  014FC2  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20413  014FC8  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20414  014FCE  ECAC  F0B0         	call	_lp_filter	;wreg free
 20415  014FD2  0060  F094  F168   	movff	btemp,_C+104	;volatile
 20416  014FD8  0060  F098  F169   	movff	btemp+1,_C+105	;volatile
 20417  014FDE  0060  F09C  F16A   	movff	btemp+2,_C+106	;volatile
 20418  014FE4  0060  F0A0  F16B   	movff	btemp+3,_C+107	;volatile
 20419                           
 20420                           ;mbmc.c: 68:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 20421  014FEA  0E01               	movlw	1
 20422  014FEC  6EE6               	movwf	postinc1,c
 20423  014FEE  0E12               	movlw	18
 20424  014FF0  6EE6               	movwf	postinc1,c
 20425  014FF2  0060  F543  FFE6   	movff	_C+80,postinc1
 20426  014FF8  0060  F547  FFE6   	movff	_C+81,postinc1
 20427  014FFE  0060  F54B  FFE6   	movff	_C+82,postinc1
 20428  015004  0060  F54F  FFE6   	movff	_C+83,postinc1
 20429  01500A  0060  F523  FFE6   	movff	_C+72,postinc1
 20430  015010  0060  F527  FFE6   	movff	_C+73,postinc1
 20431  015016  0060  F52B  FFE6   	movff	_C+74,postinc1
 20432  01501C  0060  F52F  FFE6   	movff	_C+75,postinc1
 20433  015022  EC08  F093         	call	___flmul	;wreg free
 20434  015026  0060  F097  FFE6   	movff	btemp,postinc1
 20435  01502C  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20436  015032  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20437  015038  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20438  01503E  ECAC  F0B0         	call	_lp_filter	;wreg free
 20439  015042  0060  F094  F170   	movff	btemp,_C+112	;volatile
 20440  015048  0060  F098  F171   	movff	btemp+1,_C+113	;volatile
 20441  01504E  0060  F09C  F172   	movff	btemp+2,_C+114	;volatile
 20442  015054  0060  F0A0  F173   	movff	btemp+3,_C+115	;volatile
 20443                           
 20444                           ;mbmc.c: 69:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 20445  01505A  0E01               	movlw	1
 20446  01505C  6EE6               	movwf	postinc1,c
 20447  01505E  0E13               	movlw	19
 20448  015060  6EE6               	movwf	postinc1,c
 20449  015062  0E00               	movlw	0
 20450  015064  6EE6               	movwf	postinc1,c
 20451  015066  0E00               	movlw	0
 20452  015068  6EE6               	movwf	postinc1,c
 20453  01506A  0E60               	movlw	96
 20454  01506C  6EE6               	movwf	postinc1,c
 20455  01506E  0EC1               	movlw	193
 20456  015070  6EE6               	movwf	postinc1,c
 20457  015072  0060  F593  FFE6   	movff	_C+100,postinc1
 20458  015078  0060  F597  FFE6   	movff	_C+101,postinc1
 20459  01507E  0060  F59B  FFE6   	movff	_C+102,postinc1
 20460  015084  0060  F59F  FFE6   	movff	_C+103,postinc1
 20461  01508A  0060  F503  FFE6   	movff	_C+64,postinc1
 20462  015090  0060  F507  FFE6   	movff	_C+65,postinc1
 20463  015096  0060  F50B  FFE6   	movff	_C+66,postinc1
 20464  01509C  0060  F50F  FFE6   	movff	_C+67,postinc1
 20465  0150A2  EC08  F093         	call	___flmul	;wreg free
 20466  0150A6  0060  F097  FFE6   	movff	btemp,postinc1
 20467  0150AC  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20468  0150B2  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20469  0150B8  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20470  0150BE  EC1D  F097         	call	___fladd	;wreg free
 20471  0150C2  0060  F097  FFE6   	movff	btemp,postinc1
 20472  0150C8  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20473  0150CE  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20474  0150D4  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20475  0150DA  ECAC  F0B0         	call	_lp_filter	;wreg free
 20476  0150DE  0060  F094  F16C   	movff	btemp,_C+108	;volatile
 20477  0150E4  0060  F098  F16D   	movff	btemp+1,_C+109	;volatile
 20478  0150EA  0060  F09C  F16E   	movff	btemp+2,_C+110	;volatile
 20479  0150F0  0060  F0A0  F16F   	movff	btemp+3,_C+111	;volatile
 20480                           
 20481                           ;mbmc.c: 70:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 20482  0150F6  0E01               	movlw	1
 20483  0150F8  6EE6               	movwf	postinc1,c
 20484  0150FA  0E14               	movlw	20
 20485  0150FC  6EE6               	movwf	postinc1,c
 20486  0150FE  0060  F553  FFE6   	movff	_C+84,postinc1
 20487  015104  0060  F557  FFE6   	movff	_C+85,postinc1
 20488  01510A  0060  F55B  FFE6   	movff	_C+86,postinc1
 20489  015110  0060  F55F  FFE6   	movff	_C+87,postinc1
 20490  015116  0060  F513  FFE6   	movff	_C+68,postinc1
 20491  01511C  0060  F517  FFE6   	movff	_C+69,postinc1
 20492  015122  0060  F51B  FFE6   	movff	_C+70,postinc1
 20493  015128  0060  F51F  FFE6   	movff	_C+71,postinc1
 20494  01512E  EC08  F093         	call	___flmul	;wreg free
 20495  015132  0060  F097  FFE6   	movff	btemp,postinc1
 20496  015138  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20497  01513E  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20498  015144  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20499  01514A  ECAC  F0B0         	call	_lp_filter	;wreg free
 20500  01514E  0060  F094  F174   	movff	btemp,_C+116	;volatile
 20501  015154  0060  F098  F175   	movff	btemp+1,_C+117	;volatile
 20502  01515A  0060  F09C  F176   	movff	btemp+2,_C+118	;volatile
 20503  015160  0060  F0A0  F177   	movff	btemp+3,_C+119	;volatile
 20504                           
 20505                           ;mbmc.c: 74:   if (C.p_inverter < 0.0)
 20506  015166  0101               	movlb	1	; () banked
 20507  015168  AF6F               	btfss	(_C+111)& (0+255),7,b	;volatile
 20508  01516A  D008               	goto	l9433
 20509                           
 20510                           ; BSR set to: 1
 20511                           ;mbmc.c: 75:    C.p_inverter = 0.0001;
 20512  01516C  0E17               	movlw	23
 20513  01516E  6F6C               	movwf	(_C+108)& (0+255),b	;volatile
 20514  015170  0EB7               	movlw	183
 20515  015172  6F6D               	movwf	(_C+109)& (0+255),b	;volatile
 20516  015174  0ED1               	movlw	209
 20517  015176  6F6E               	movwf	(_C+110)& (0+255),b	;volatile
 20518  015178  0E38               	movlw	56
 20519  01517A  6F6F               	movwf	(_C+111)& (0+255),b	;volatile
 20520  01517C                     l9433:
 20521                           
 20522                           ;mbmc.c: 77:  start_bsoc();
 20523  01517C  EC39  F0C9         	call	_start_bsoc	;wreg free
 20524                           
 20525                           ;mbmc.c: 78:  C.update = 1;
 20526  015180  0E01               	movlw	1
 20527  015182  0101               	movlb	1	; () banked
 20528  015184  6FA0               	movwf	(_C+160)& (0+255),b	;volatile
 20529                           
 20530                           ; BSR set to: 1
 20531                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 20532  015186  0012               	return		;funcret
 20533  015188                     __end_of_calc_model_data:
 20534                           	opt callstack 0
 20535                           
 20536 ;; *************** function _stop_bsoc *****************
 20537 ;; Defined at:
 20538 ;;		line 28 in file "bsoc.c"
 20539 ;; Parameters:    Size  Location     Type
 20540 ;;		None
 20541 ;; Auto vars:     Size  Location     Type
 20542 ;;		None
 20543 ;; Return value:  Size  Location     Type
 20544 ;;                  1  [STACK] void 
 20545 ;; Registers used:
 20546 ;;		None
 20547 ;; Tracked objects:
 20548 ;;		On entry : 0/1
 20549 ;;		On exit  : 3F/39
 20550 ;;		Unchanged: 0/0
 20551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20556 ;;Total ram usage:        0 bytes
 20557 ;; Hardware stack levels used:    1
 20558 ;; Hardware stack levels required when called:    7
 20559 ;; This function calls:
 20560 ;;		Nothing
 20561 ;; This function is called by:
 20562 ;;		_calc_model_data
 20563 ;; This function uses a reentrant model
 20564 ;;
 20565                           
 20566                           	psect	text89
 20567  01926C                     __ptext89:
 20568                           	opt callstack 0
 20569  01926C                     _stop_bsoc:
 20570                           	opt callstack 22
 20571                           
 20572                           ;bsoc.c: 31:  PIE6bits.TMR3IE = 0;
 20573                           
 20574                           ; BSR set to: 1
 20575                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20576                           ;incstack = 0
 20577  01926C  0139               	movlb	57	; () banked
 20578  01926E  9D96               	bcf	150,6,b	;volatile
 20579                           
 20580                           ; BSR set to: 57
 20581                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 20582  019270  0012               	return		;funcret
 20583  019272                     __end_of_stop_bsoc:
 20584                           	opt callstack 0
 20585                           
 20586 ;; *************** function _start_bsoc *****************
 20587 ;; Defined at:
 20588 ;;		line 22 in file "bsoc.c"
 20589 ;; Parameters:    Size  Location     Type
 20590 ;;		None
 20591 ;; Auto vars:     Size  Location     Type
 20592 ;;		None
 20593 ;; Return value:  Size  Location     Type
 20594 ;;                  1  [STACK] void 
 20595 ;; Registers used:
 20596 ;;		None
 20597 ;; Tracked objects:
 20598 ;;		On entry : 3C/2
 20599 ;;		On exit  : 3F/39
 20600 ;;		Unchanged: 0/0
 20601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20606 ;;Total ram usage:        0 bytes
 20607 ;; Hardware stack levels used:    1
 20608 ;; Hardware stack levels required when called:    7
 20609 ;; This function calls:
 20610 ;;		Nothing
 20611 ;; This function is called by:
 20612 ;;		_calc_model_data
 20613 ;; This function uses a reentrant model
 20614 ;;
 20615                           
 20616                           	psect	text90
 20617  019272                     __ptext90:
 20618                           	opt callstack 0
 20619  019272                     _start_bsoc:
 20620                           	opt callstack 22
 20621                           
 20622                           ;bsoc.c: 25:  PIE6bits.TMR3IE = 1;
 20623                           
 20624                           ; BSR set to: 57
 20625                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20626                           ;incstack = 0
 20627  019272  0139               	movlb	57	; () banked
 20628  019274  8D96               	bsf	150,6,b	;volatile
 20629                           
 20630                           ; BSR set to: 57
 20631                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 20632  019276  0012               	return		;funcret
 20633  019278                     __end_of_start_bsoc:
 20634                           	opt callstack 0
 20635                           
 20636 ;; *************** function _lp_filter *****************
 20637 ;; Defined at:
 20638 ;;		line 18 in file "mbmc.c"
 20639 ;; Parameters:    Size  Location     Type
 20640 ;;  new             4  [STACK] const float 
 20641 ;;  bn              1  [STACK] const unsigned char 
 20642 ;;  slow            1  [STACK] const char 
 20643 ;; Auto vars:     Size  Location     Type
 20644 ;;  lp_speed        4  [STACK] float 
 20645 ;; Return value:  Size  Location     Type
 20646 ;;                  4  [STACK] float 
 20647 ;; Registers used:
 20648 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 20649 ;; Tracked objects:
 20650 ;;		On entry : 0/2
 20651 ;;		On exit  : 0/0
 20652 ;;		Unchanged: 0/0
 20653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20658 ;;Total ram usage:        0 bytes
 20659 ;; Hardware stack levels used:    1
 20660 ;; Hardware stack levels required when called:    9
 20661 ;; This function calls:
 20662 ;;		___fladd
 20663 ;;		___flmul
 20664 ;;		___flsub
 20665 ;; This function is called by:
 20666 ;;		_main
 20667 ;;		_convert_adc_data
 20668 ;;		_calc_model_data
 20669 ;; This function uses a reentrant model
 20670 ;;
 20671                           
 20672                           	psect	text91
 20673  016158                     __ptext91:
 20674                           	opt callstack 0
 20675  016158                     _lp_filter:
 20676                           	opt callstack 0
 20677                           
 20678                           ; BSR set to: 57
 20679                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20680  016158  52E6               	movf	postinc1,f,c
 20681  01615A  52E6               	movf	postinc1,f,c
 20682  01615C  52E6               	movf	postinc1,f,c
 20683  01615E  52E6               	movf	postinc1,f,c
 20684                           
 20685                           ;mbmc.c: 18: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 19: {;mbmc.c: 20:  static float smooth[16 +5];;mbmc.c: 21:  float lp_speed;;mbmc.c: 2
      +                          3:  if (bn >= 16 +5)
 20686                           ;stkvar	_bn @ sp[(-4)+-5]
 20687                           
 20688                           ;incstack = 0
 20689  016160  0EF7               	movlw	-9
 20690  016162  006F FF8C  F025    	movff	plusw1,btemp
 20691  016168  0E14               	movlw	20
 20692  01616A  6425               	cpfsgt	btemp^0,c
 20693  01616C  D011               	goto	l8975
 20694  01616E                     u8230:
 20695                           
 20696                           ;mbmc.c: 24:   return new;
 20697                           ;stkvar	_new @ sp[(-4)+-4]
 20698  01616E  0EF8               	movlw	-8
 20699  016170  006F FF8C  F025    	movff	plusw1,btemp
 20700  016176  0EF9               	movlw	-7
 20701  016178  006F FF8C  F026    	movff	plusw1,btemp+1
 20702  01617E  0EFA               	movlw	-6
 20703  016180  006F FF8C  F027    	movff	plusw1,btemp+2
 20704  016186  0EFB               	movlw	-5
 20705  016188  006F FF8C  F028    	movff	plusw1,btemp+3
 20706  01618E  D0BF               	goto	l1808
 20707  016190                     l8975:
 20708                           
 20709                           ;mbmc.c: 26:  if (slow == (-1)) {
 20710                           ;stkvar	_slow @ sp[(-4)+-6]
 20711  016190  0EF6               	movlw	-10
 20712  016192  28E3               	incf	plusw1,w,c
 20713  016194  A4D8               	btfss	status,2,c
 20714  016196  D012               	goto	l8983
 20715                           
 20716                           ;mbmc.c: 27:   smooth[bn] = 0.0;
 20717                           ;stkvar	_bn @ sp[(-4)+-5]
 20718  016198  0EF7               	movlw	-9
 20719  01619A  50E3               	movf	plusw1,w,c
 20720  01619C  0D04               	mullw	4
 20721  01619E  0E00               	movlw	low lp_filter@smooth
 20722  0161A0  24F3               	addwf	243,w,c
 20723  0161A2  6ED9               	movwf	fsr2l,c
 20724  0161A4  0E03               	movlw	high lp_filter@smooth
 20725  0161A6  20F4               	addwfc	prodh,w,c
 20726  0161A8  6EDA               	movwf	fsr2h,c
 20727  0161AA  0E00               	movlw	0
 20728  0161AC  6EDE               	movwf	postinc2,c
 20729  0161AE  0E00               	movlw	0
 20730  0161B0  6EDE               	movwf	postinc2,c
 20731  0161B2  0E00               	movlw	0
 20732  0161B4  6EDE               	movwf	postinc2,c
 20733  0161B6  0E00               	movlw	0
 20734  0161B8  6EDD               	movwf	postdec2,c
 20735  0161BA  D7D9               	goto	u8230
 20736  0161BC                     l8983:
 20737                           
 20738                           ;mbmc.c: 31:  if (slow) {
 20739                           ;stkvar	_slow @ sp[(-4)+-6]
 20740  0161BC  0EF6               	movlw	-10
 20741  0161BE  50E3               	movf	plusw1,w,c
 20742  0161C0  B4D8               	btfsc	status,2,c
 20743  0161C2  D008               	goto	l8987
 20744                           
 20745                           ;mbmc.c: 32:   lp_speed = 0.033;
 20746  0161C4  0E02               	movlw	2
 20747  0161C6  6E2D               	movwf	(btemp+8)^0,c
 20748  0161C8  0E2B               	movlw	43
 20749  0161CA  6E2E               	movwf	(btemp+9)^0,c
 20750  0161CC  0E07               	movlw	7
 20751  0161CE  6E2F               	movwf	(btemp+10)^0,c
 20752  0161D0  0E3D               	movlw	61
 20753  0161D2  D007               	goto	L22
 20754  0161D4                     l8987:
 20755                           
 20756                           ;mbmc.c: 34:   lp_speed = 0.125;
 20757  0161D4  0E00               	movlw	0
 20758  0161D6  6E2D               	movwf	(btemp+8)^0,c
 20759  0161D8  0E00               	movlw	0
 20760  0161DA  6E2E               	movwf	(btemp+9)^0,c
 20761  0161DC  0E00               	movlw	0
 20762  0161DE  6E2F               	movwf	(btemp+10)^0,c
 20763  0161E0  0E3E               	movlw	62
 20764  0161E2                     L22:
 20765  0161E2  6E30               	movwf	(btemp+11)^0,c
 20766                           
 20767                           ;stkvar	_lp_speed @ sp[(-4)+0]
 20768  0161E4  0EFC               	movlw	-4
 20769  0161E6  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 20770  0161EC  0EFD               	movlw	-3
 20771  0161EE  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 20772  0161F4  0EFE               	movlw	-2
 20773  0161F6  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 20774  0161FC  0EFF               	movlw	-1
 20775  0161FE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 20776                           
 20777                           ;mbmc.c: 37:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 20778                           ;stkvar	_bn @ sp[(-4)+-5]
 20779  016204  0EF7               	movlw	-9
 20780  016206  50E3               	movf	plusw1,w,c
 20781  016208  0D04               	mullw	4
 20782  01620A  0E00               	movlw	low lp_filter@smooth
 20783  01620C  24F3               	addwf	243,w,c
 20784  01620E  6ED9               	movwf	fsr2l,c
 20785  016210  0E03               	movlw	high lp_filter@smooth
 20786  016212  20F4               	addwfc	prodh,w,c
 20787  016214  6EDA               	movwf	fsr2h,c
 20788  016216  006F FF7B FFE6     	movff	postinc2,postinc1
 20789  01621C  006F FF7B FFE6     	movff	postinc2,postinc1
 20790  016222  006F FF7B FFE6     	movff	postinc2,postinc1
 20791  016228  006F FF7B FFE6     	movff	postinc2,postinc1
 20792                           
 20793                           ;stkvar	_lp_speed @ sp[(-8)+0]
 20794  01622E  0EF8               	movlw	-8
 20795  016230  006F FF8F FFE6     	movff	plusw1,postinc1
 20796  016236  006F FF8F FFE6     	movff	plusw1,postinc1
 20797  01623C  006F FF8F FFE6     	movff	plusw1,postinc1
 20798  016242  006F FF8F FFE6     	movff	plusw1,postinc1
 20799                           
 20800                           ;stkvar	_bn @ sp[(-12)+-5]
 20801  016248  0EEF               	movlw	-17
 20802  01624A  50E3               	movf	plusw1,w,c
 20803  01624C  0D04               	mullw	4
 20804  01624E  0E00               	movlw	low lp_filter@smooth
 20805  016250  24F3               	addwf	243,w,c
 20806  016252  6ED9               	movwf	fsr2l,c
 20807  016254  0E03               	movlw	high lp_filter@smooth
 20808  016256  20F4               	addwfc	prodh,w,c
 20809  016258  6EDA               	movwf	fsr2h,c
 20810  01625A  006F FF7B FFE6     	movff	postinc2,postinc1
 20811  016260  006F FF7B FFE6     	movff	postinc2,postinc1
 20812  016266  006F FF7B FFE6     	movff	postinc2,postinc1
 20813  01626C  006F FF7B FFE6     	movff	postinc2,postinc1
 20814                           
 20815                           ;stkvar	_new @ sp[(-16)+-4]
 20816  016272  0EEC               	movlw	-20
 20817  016274  006F FF8F FFE6     	movff	plusw1,postinc1
 20818  01627A  006F FF8F FFE6     	movff	plusw1,postinc1
 20819  016280  006F FF8F FFE6     	movff	plusw1,postinc1
 20820  016286  006F FF8F FFE6     	movff	plusw1,postinc1
 20821  01628C  EC2C  F0C3         	call	___flsub	;wreg free
 20822  016290  0060  F097  FFE6   	movff	btemp,postinc1
 20823  016296  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20824  01629C  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20825  0162A2  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20826  0162A8  EC08  F093         	call	___flmul	;wreg free
 20827  0162AC  0060  F097  FFE6   	movff	btemp,postinc1
 20828  0162B2  0060  F09B  FFE6   	movff	btemp+1,postinc1
 20829  0162B8  0060  F09F  FFE6   	movff	btemp+2,postinc1
 20830  0162BE  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 20831  0162C4  EC1D  F097         	call	___fladd	;wreg free
 20832                           
 20833                           ;stkvar	_bn @ sp[(-4)+-5]
 20834  0162C8  0EF7               	movlw	-9
 20835  0162CA  50E3               	movf	plusw1,w,c
 20836  0162CC  0D04               	mullw	4
 20837  0162CE  0E00               	movlw	low lp_filter@smooth
 20838  0162D0  24F3               	addwf	243,w,c
 20839  0162D2  6ED9               	movwf	fsr2l,c
 20840  0162D4  0E03               	movlw	high lp_filter@smooth
 20841  0162D6  20F4               	addwfc	prodh,w,c
 20842  0162D8  6EDA               	movwf	fsr2h,c
 20843  0162DA  0060  F097  FFDE   	movff	btemp,postinc2
 20844  0162E0  0060  F09B  FFDE   	movff	btemp+1,postinc2
 20845  0162E6  0060  F09F  FFDE   	movff	btemp+2,postinc2
 20846  0162EC  0060  F0A3  FFDD   	movff	btemp+3,postdec2
 20847  0162F2  52DD               	movf	postdec2,f,c
 20848  0162F4  52DD               	movf	postdec2,f,c
 20849  0162F6  006F FF78  F025    	movff	postinc2,btemp
 20850  0162FC  006F FF78  F026    	movff	postinc2,btemp+1
 20851  016302  006F FF78  F027    	movff	postinc2,btemp+2
 20852  016308  006F FF78  F028    	movff	postinc2,btemp+3
 20853  01630E                     l1808:
 20854                           
 20855                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 20856  01630E  0EF6               	movlw	246
 20857  016310  26E1               	addwf	fsr1l,f,c
 20858  016312  0EFF               	movlw	255
 20859  016314  22E2               	addwfc	fsr1h,f,c
 20860  016316  0012               	return		;funcret
 20861  016318                     __end_of_lp_filter:
 20862                           	opt callstack 0
 20863                           
 20864 ;; *************** function ___flsub *****************
 20865 ;; Defined at:
 20866 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20867 ;; Parameters:    Size  Location     Type
 20868 ;;  b               4  [STACK] float 
 20869 ;;  a               4  [STACK] float 
 20870 ;; Auto vars:     Size  Location     Type
 20871 ;;		None
 20872 ;; Return value:  Size  Location     Type
 20873 ;;                  4  [STACK] float 
 20874 ;; Registers used:
 20875 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20876 ;; Tracked objects:
 20877 ;;		On entry : 0/2
 20878 ;;		On exit  : 0/0
 20879 ;;		Unchanged: 0/0
 20880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20885 ;;Total ram usage:        0 bytes
 20886 ;; Hardware stack levels used:    1
 20887 ;; Hardware stack levels required when called:    8
 20888 ;; This function calls:
 20889 ;;		___fladd
 20890 ;; This function is called by:
 20891 ;;		_conv_raw_result
 20892 ;;		_lp_filter
 20893 ;;		_calc_model_data
 20894 ;;		_efgtoa
 20895 ;; This function uses a reentrant model
 20896 ;;
 20897                           
 20898                           	psect	text92
 20899  018658                     __ptext92:
 20900                           	opt callstack 0
 20901  018658                     ___flsub:
 20902                           	opt callstack 15
 20903                           
 20904                           ;stkvar	_a @ sp[(0)+-8]
 20905                           
 20906                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20907                           ;incstack = 0
 20908  018658  0EFB               	movlw	-5
 20909  01865A  7EE3               	btg	plusw1,7,c
 20910                           
 20911                           ;stkvar	_a @ sp[(0)+-8]
 20912  01865C  0EF8               	movlw	-8
 20913  01865E  006F FF8F FFE6     	movff	plusw1,postinc1
 20914  018664  006F FF8F FFE6     	movff	plusw1,postinc1
 20915  01866A  006F FF8F FFE6     	movff	plusw1,postinc1
 20916  018670  006F FF8F FFE6     	movff	plusw1,postinc1
 20917                           
 20918                           ;stkvar	_b @ sp[(-4)+-4]
 20919  018676  0EF8               	movlw	-8
 20920  018678  006F FF8F FFE6     	movff	plusw1,postinc1
 20921  01867E  006F FF8F FFE6     	movff	plusw1,postinc1
 20922  018684  006F FF8F FFE6     	movff	plusw1,postinc1
 20923  01868A  006F FF8F FFE6     	movff	plusw1,postinc1
 20924  018690  EC1D  F097         	call	___fladd	;wreg free
 20925                           
 20926                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 20927  018694  0EF8               	movlw	248
 20928  018696  26E1               	addwf	fsr1l,f,c
 20929  018698  0EFF               	movlw	255
 20930  01869A  22E2               	addwfc	fsr1h,f,c
 20931  01869C  0012               	return		;funcret
 20932  01869E                     __end_of___flsub:
 20933                           	opt callstack 0
 20934                           
 20935 ;; *************** function ___fladd *****************
 20936 ;; Defined at:
 20937 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 20938 ;; Parameters:    Size  Location     Type
 20939 ;;  b               4  [STACK] float 
 20940 ;;  a               4  [STACK] float 
 20941 ;; Auto vars:     Size  Location     Type
 20942 ;;  grs             1  [STACK] unsigned char 
 20943 ;;  bexp            1  [STACK] unsigned char 
 20944 ;;  aexp            1  [STACK] unsigned char 
 20945 ;;  signs           1  [STACK] unsigned char 
 20946 ;; Return value:  Size  Location     Type
 20947 ;;                  4  [STACK] unsigned char 
 20948 ;; Registers used:
 20949 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 20950 ;; Tracked objects:
 20951 ;;		On entry : 0/0
 20952 ;;		On exit  : 0/0
 20953 ;;		Unchanged: 0/0
 20954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20959 ;;Total ram usage:        0 bytes
 20960 ;; Hardware stack levels used:    1
 20961 ;; Hardware stack levels required when called:    7
 20962 ;; This function calls:
 20963 ;;		Nothing
 20964 ;; This function is called by:
 20965 ;;		_lp_filter
 20966 ;;		_calc_model_data
 20967 ;;		_calc_bsoc
 20968 ;;		_efgtoa
 20969 ;;		___flsub
 20970 ;; This function uses a reentrant model
 20971 ;;
 20972                           
 20973                           	psect	text93
 20974  012E3A                     __ptext93:
 20975                           	opt callstack 0
 20976  012E3A                     ___fladd:
 20977                           	opt callstack 0
 20978                           
 20979                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20980  012E3A  52E6               	movf	postinc1,f,c
 20981  012E3C  52E6               	movf	postinc1,f,c
 20982  012E3E  52E6               	movf	postinc1,f,c
 20983  012E40  52E6               	movf	postinc1,f,c
 20984                           
 20985                           ;stkvar	_b @ sp[(-4)+-4]
 20986                           
 20987                           ;incstack = 0
 20988  012E42  0EFB               	movlw	251
 20989  012E44  24E1               	addwf	fsr1l,w,c
 20990  012E46  6ED9               	movwf	fsr2l,c
 20991  012E48  0EFF               	movlw	255
 20992  012E4A  20E2               	addwfc	fsr1h,w,c
 20993  012E4C  6EDA               	movwf	fsr2h,c
 20994  012E4E  50DF               	movf	indf2,w,c
 20995  012E50  6E30               	movwf	(btemp+11)^0,c
 20996  012E52  0E80               	movlw	128
 20997  012E54  1630               	andwf	(btemp+11)^0,f,c
 20998                           
 20999                           ;stkvar	_signs @ sp[(-4)+3]
 21000  012E56  0EFF               	movlw	-1
 21001  012E58  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21002                           
 21003                           ;stkvar	_b @ sp[(-4)+-4]
 21004  012E5E  0EFB               	movlw	251
 21005  012E60  24E1               	addwf	fsr1l,w,c
 21006  012E62  6ED9               	movwf	fsr2l,c
 21007  012E64  0EFF               	movlw	255
 21008  012E66  20E2               	addwfc	fsr1h,w,c
 21009  012E68  6EDA               	movwf	fsr2h,c
 21010  012E6A  50DF               	movf	indf2,w,c
 21011  012E6C  6E30               	movwf	(btemp+11)^0,c
 21012  012E6E  90D8               	bcf	status,0,c
 21013  012E70  3430               	rlcf	(btemp+11)^0,w,c
 21014  012E72  6E2F               	movwf	(btemp+10)^0,c
 21015                           
 21016                           ;stkvar	_bexp @ sp[(-4)+1]
 21017  012E74  0EFD               	movlw	-3
 21018  012E76  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21019                           
 21020                           ;stkvar	_b @ sp[(-4)+-4]
 21021  012E7C  0EFA               	movlw	250
 21022  012E7E  24E1               	addwf	fsr1l,w,c
 21023  012E80  6ED9               	movwf	fsr2l,c
 21024  012E82  0EFF               	movlw	255
 21025  012E84  20E2               	addwfc	fsr1h,w,c
 21026  012E86  6EDA               	movwf	fsr2h,c
 21027  012E88  AEDF               	btfss	indf2,7,c
 21028  012E8A  D002               	goto	l8095
 21029                           
 21030                           ;stkvar	_bexp @ sp[(-4)+1]
 21031  012E8C  0EFD               	movlw	-3
 21032  012E8E  80E3               	bsf	plusw1,0,c
 21033  012E90                     l8095:
 21034                           
 21035                           ;stkvar	_bexp @ sp[(-4)+1]
 21036  012E90  0EFD               	movlw	-3
 21037  012E92  50E3               	movf	plusw1,w,c
 21038  012E94  B4D8               	btfsc	status,2,c
 21039  012E96  D027               	goto	l8105
 21040                           
 21041                           ;stkvar	_bexp @ sp[(-4)+1]
 21042  012E98  0EFD               	movlw	-3
 21043  012E9A  28E3               	incf	plusw1,w,c
 21044  012E9C  A4D8               	btfss	status,2,c
 21045  012E9E  D018               	goto	l8101
 21046  012EA0  0E00               	movlw	0
 21047  012EA2  6E2D               	movwf	(btemp+8)^0,c
 21048  012EA4  0E00               	movlw	0
 21049  012EA6  6E2E               	movwf	(btemp+9)^0,c
 21050  012EA8  0E00               	movlw	0
 21051  012EAA  6E2F               	movwf	(btemp+10)^0,c
 21052  012EAC  0E00               	movlw	0
 21053  012EAE  6E30               	movwf	(btemp+11)^0,c
 21054                           
 21055                           ;stkvar	_b @ sp[(-4)+-4]
 21056  012EB0  0EF8               	movlw	-8
 21057  012EB2  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21058  012EB8  0EF9               	movlw	-7
 21059  012EBA  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21060  012EC0  0EFA               	movlw	-6
 21061  012EC2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21062  012EC8  0EFB               	movlw	-5
 21063  012ECA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21064  012ED0                     l8101:
 21065                           
 21066                           ;stkvar	_b @ sp[(-4)+-4]
 21067  012ED0  0EFA               	movlw	-6
 21068  012ED2  8EE3               	bsf	plusw1,7,c
 21069                           
 21070                           ;stkvar	_b @ sp[(-4)+-4]
 21071  012ED4  0EFB               	movlw	251
 21072  012ED6  24E1               	addwf	fsr1l,w,c
 21073  012ED8  6ED9               	movwf	fsr2l,c
 21074  012EDA  0EFF               	movlw	255
 21075  012EDC  20E2               	addwfc	fsr1h,w,c
 21076  012EDE  6EDA               	movwf	fsr2h,c
 21077  012EE0  0E00               	movlw	0
 21078  012EE2  6EDF               	movwf	indf2,c
 21079  012EE4  D018               	goto	l8107
 21080  012EE6                     l8105:
 21081  012EE6  0E00               	movlw	0
 21082  012EE8  6E2D               	movwf	(btemp+8)^0,c
 21083  012EEA  0E00               	movlw	0
 21084  012EEC  6E2E               	movwf	(btemp+9)^0,c
 21085  012EEE  0E00               	movlw	0
 21086  012EF0  6E2F               	movwf	(btemp+10)^0,c
 21087  012EF2  0E00               	movlw	0
 21088  012EF4  6E30               	movwf	(btemp+11)^0,c
 21089                           
 21090                           ;stkvar	_b @ sp[(-4)+-4]
 21091  012EF6  0EF8               	movlw	-8
 21092  012EF8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21093  012EFE  0EF9               	movlw	-7
 21094  012F00  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21095  012F06  0EFA               	movlw	-6
 21096  012F08  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21097  012F0E  0EFB               	movlw	-5
 21098  012F10  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21099  012F16                     l8107:
 21100                           
 21101                           ;stkvar	_a @ sp[(-4)+-8]
 21102  012F16  0EF7               	movlw	247
 21103  012F18  24E1               	addwf	fsr1l,w,c
 21104  012F1A  6ED9               	movwf	fsr2l,c
 21105  012F1C  0EFF               	movlw	255
 21106  012F1E  20E2               	addwfc	fsr1h,w,c
 21107  012F20  6EDA               	movwf	fsr2h,c
 21108  012F22  50DF               	movf	indf2,w,c
 21109  012F24  6E30               	movwf	(btemp+11)^0,c
 21110  012F26  0E80               	movlw	128
 21111  012F28  1630               	andwf	(btemp+11)^0,f,c
 21112                           
 21113                           ;stkvar	_aexp @ sp[(-4)+2]
 21114  012F2A  0EFE               	movlw	-2
 21115  012F2C  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21116                           
 21117                           ;stkvar	_signs @ sp[(-4)+3]
 21118                           ;stkvar	_aexp @ sp[(-4)+2]
 21119  012F32  50E1               	movf	fsr1l,w,c
 21120  012F34  0FFE               	addlw	-2
 21121  012F36  6ED9               	movwf	fsr2l,c
 21122  012F38  50E2               	movf	fsr1h,w,c
 21123  012F3A  6EDA               	movwf	fsr2h,c
 21124  012F3C  0EFF               	movlw	255
 21125  012F3E  22DA               	addwfc	fsr2h,f,c
 21126  012F40  0EFF               	movlw	-1
 21127  012F42  50E3               	movf	plusw1,w,c
 21128  012F44  18DE               	xorwf	postinc2,w,c
 21129  012F46  B4D8               	btfsc	status,2,c
 21130  012F48  D002               	goto	l8113
 21131                           
 21132                           ;stkvar	_signs @ sp[(-4)+3]
 21133  012F4A  0EFF               	movlw	-1
 21134  012F4C  8CE3               	bsf	plusw1,6,c
 21135  012F4E                     l8113:
 21136                           
 21137                           ;stkvar	_a @ sp[(-4)+-8]
 21138  012F4E  0EF7               	movlw	247
 21139  012F50  24E1               	addwf	fsr1l,w,c
 21140  012F52  6ED9               	movwf	fsr2l,c
 21141  012F54  0EFF               	movlw	255
 21142  012F56  20E2               	addwfc	fsr1h,w,c
 21143  012F58  6EDA               	movwf	fsr2h,c
 21144  012F5A  50DF               	movf	indf2,w,c
 21145  012F5C  6E30               	movwf	(btemp+11)^0,c
 21146  012F5E  90D8               	bcf	status,0,c
 21147  012F60  3430               	rlcf	(btemp+11)^0,w,c
 21148  012F62  6E2F               	movwf	(btemp+10)^0,c
 21149                           
 21150                           ;stkvar	_aexp @ sp[(-4)+2]
 21151  012F64  0EFE               	movlw	-2
 21152  012F66  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21153                           
 21154                           ;stkvar	_a @ sp[(-4)+-8]
 21155  012F6C  0EF6               	movlw	246
 21156  012F6E  24E1               	addwf	fsr1l,w,c
 21157  012F70  6ED9               	movwf	fsr2l,c
 21158  012F72  0EFF               	movlw	255
 21159  012F74  20E2               	addwfc	fsr1h,w,c
 21160  012F76  6EDA               	movwf	fsr2h,c
 21161  012F78  AEDF               	btfss	indf2,7,c
 21162  012F7A  D002               	goto	l8119
 21163                           
 21164                           ;stkvar	_aexp @ sp[(-4)+2]
 21165  012F7C  0EFE               	movlw	-2
 21166  012F7E  80E3               	bsf	plusw1,0,c
 21167  012F80                     l8119:
 21168                           
 21169                           ;stkvar	_aexp @ sp[(-4)+2]
 21170  012F80  0EFE               	movlw	-2
 21171  012F82  50E3               	movf	plusw1,w,c
 21172  012F84  B4D8               	btfsc	status,2,c
 21173  012F86  D027               	goto	l8129
 21174                           
 21175                           ;stkvar	_aexp @ sp[(-4)+2]
 21176  012F88  0EFE               	movlw	-2
 21177  012F8A  28E3               	incf	plusw1,w,c
 21178  012F8C  A4D8               	btfss	status,2,c
 21179  012F8E  D018               	goto	l8125
 21180  012F90  0E00               	movlw	0
 21181  012F92  6E2D               	movwf	(btemp+8)^0,c
 21182  012F94  0E00               	movlw	0
 21183  012F96  6E2E               	movwf	(btemp+9)^0,c
 21184  012F98  0E00               	movlw	0
 21185  012F9A  6E2F               	movwf	(btemp+10)^0,c
 21186  012F9C  0E00               	movlw	0
 21187  012F9E  6E30               	movwf	(btemp+11)^0,c
 21188                           
 21189                           ;stkvar	_a @ sp[(-4)+-8]
 21190  012FA0  0EF4               	movlw	-12
 21191  012FA2  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21192  012FA8  0EF5               	movlw	-11
 21193  012FAA  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21194  012FB0  0EF6               	movlw	-10
 21195  012FB2  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21196  012FB8  0EF7               	movlw	-9
 21197  012FBA  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21198  012FC0                     l8125:
 21199                           
 21200                           ;stkvar	_a @ sp[(-4)+-8]
 21201  012FC0  0EF6               	movlw	-10
 21202  012FC2  8EE3               	bsf	plusw1,7,c
 21203                           
 21204                           ;stkvar	_a @ sp[(-4)+-8]
 21205  012FC4  0EF7               	movlw	247
 21206  012FC6  24E1               	addwf	fsr1l,w,c
 21207  012FC8  6ED9               	movwf	fsr2l,c
 21208  012FCA  0EFF               	movlw	255
 21209  012FCC  20E2               	addwfc	fsr1h,w,c
 21210  012FCE  6EDA               	movwf	fsr2h,c
 21211  012FD0  0E00               	movlw	0
 21212  012FD2  6EDF               	movwf	indf2,c
 21213  012FD4  D018               	goto	l8131
 21214  012FD6                     l8129:
 21215  012FD6  0E00               	movlw	0
 21216  012FD8  6E2D               	movwf	(btemp+8)^0,c
 21217  012FDA  0E00               	movlw	0
 21218  012FDC  6E2E               	movwf	(btemp+9)^0,c
 21219  012FDE  0E00               	movlw	0
 21220  012FE0  6E2F               	movwf	(btemp+10)^0,c
 21221  012FE2  0E00               	movlw	0
 21222  012FE4  6E30               	movwf	(btemp+11)^0,c
 21223                           
 21224                           ;stkvar	_a @ sp[(-4)+-8]
 21225  012FE6  0EF4               	movlw	-12
 21226  012FE8  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 21227  012FEE  0EF5               	movlw	-11
 21228  012FF0  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 21229  012FF6  0EF6               	movlw	-10
 21230  012FF8  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21231  012FFE  0EF7               	movlw	-9
 21232  013000  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21233  013006                     l8131:
 21234                           
 21235                           ;stkvar	_bexp @ sp[(-4)+1]
 21236                           ;stkvar	_aexp @ sp[(-4)+2]
 21237  013006  50E1               	movf	fsr1l,w,c
 21238  013008  0FFE               	addlw	-2
 21239  01300A  6ED9               	movwf	fsr2l,c
 21240  01300C  50E2               	movf	fsr1h,w,c
 21241  01300E  6EDA               	movwf	fsr2h,c
 21242  013010  0EFF               	movlw	255
 21243  013012  22DA               	addwfc	fsr2h,f,c
 21244  013014  0EFD               	movlw	-3
 21245  013016  50E3               	movf	plusw1,w,c
 21246  013018  5CDE               	subwf	postinc2,w,c
 21247  01301A  B0D8               	btfsc	status,0,c
 21248  01301C  D0A4               	goto	l8167
 21249                           
 21250                           ;stkvar	_signs @ sp[(-4)+3]
 21251  01301E  0EFF               	movlw	-1
 21252  013020  ACE3               	btfss	plusw1,6,c
 21253  013022  D002               	goto	l8137
 21254                           
 21255                           ;stkvar	_signs @ sp[(-4)+3]
 21256  013024  0EFF               	movlw	-1
 21257  013026  7EE3               	btg	plusw1,7,c
 21258  013028                     l8137:
 21259                           
 21260                           ;stkvar	_bexp @ sp[(-4)+1]
 21261                           ;stkvar	_grs @ sp[(-4)+0]
 21262  013028  0EFD               	movlw	-3
 21263  01302A  006F FF8C  F025    	movff	plusw1,btemp
 21264  013030  0EFC               	movlw	-4
 21265  013032  0060  F097  FFE3   	movff	btemp,plusw1
 21266                           
 21267                           ;stkvar	_aexp @ sp[(-4)+2]
 21268                           ;stkvar	_bexp @ sp[(-4)+1]
 21269  013038  0EFE               	movlw	-2
 21270  01303A  006F FF8C  F025    	movff	plusw1,btemp
 21271  013040  0EFD               	movlw	-3
 21272  013042  0060  F097  FFE3   	movff	btemp,plusw1
 21273                           
 21274                           ;stkvar	_grs @ sp[(-4)+0]
 21275                           ;stkvar	_aexp @ sp[(-4)+2]
 21276  013048  0EFC               	movlw	-4
 21277  01304A  006F FF8C  F025    	movff	plusw1,btemp
 21278  013050  0EFE               	movlw	-2
 21279  013052  0060  F097  FFE3   	movff	btemp,plusw1
 21280                           
 21281                           ;stkvar	_b @ sp[(-4)+-4]
 21282                           ;stkvar	_grs @ sp[(-4)+0]
 21283  013058  0EF8               	movlw	-8
 21284  01305A  006F FF8C  F025    	movff	plusw1,btemp
 21285  013060  0EFC               	movlw	-4
 21286  013062  0060  F097  FFE3   	movff	btemp,plusw1
 21287                           
 21288                           ;stkvar	_a @ sp[(-4)+-8]
 21289                           ;stkvar	_b @ sp[(-4)+-4]
 21290  013068  0EF4               	movlw	-12
 21291  01306A  006F FF8C  F025    	movff	plusw1,btemp
 21292  013070  0EF8               	movlw	-8
 21293  013072  0060  F097  FFE3   	movff	btemp,plusw1
 21294                           
 21295                           ;stkvar	_grs @ sp[(-4)+0]
 21296                           ;stkvar	_a @ sp[(-4)+-8]
 21297  013078  0EFC               	movlw	-4
 21298  01307A  006F FF8C  F025    	movff	plusw1,btemp
 21299  013080  0EF4               	movlw	-12
 21300  013082  0060  F097  FFE3   	movff	btemp,plusw1
 21301                           
 21302                           ;stkvar	_b @ sp[(-4)+-4]
 21303  013088  0EF9               	movlw	249
 21304  01308A  24E1               	addwf	fsr1l,w,c
 21305  01308C  6ED9               	movwf	fsr2l,c
 21306  01308E  0EFF               	movlw	255
 21307  013090  20E2               	addwfc	fsr1h,w,c
 21308  013092  6EDA               	movwf	fsr2h,c
 21309  013094  50DF               	movf	indf2,w,c
 21310  013096  6E30               	movwf	(btemp+11)^0,c
 21311                           
 21312                           ;stkvar	_grs @ sp[(-4)+0]
 21313  013098  0EFC               	movlw	-4
 21314  01309A  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21315                           
 21316                           ;stkvar	_a @ sp[(-4)+-8]
 21317  0130A0  0EF5               	movlw	245
 21318  0130A2  24E1               	addwf	fsr1l,w,c
 21319  0130A4  6ED9               	movwf	fsr2l,c
 21320  0130A6  0EFF               	movlw	255
 21321  0130A8  20E2               	addwfc	fsr1h,w,c
 21322  0130AA  6EDA               	movwf	fsr2h,c
 21323                           
 21324                           ;stkvar	_b @ sp[(-4)+-4]
 21325  0130AC  0EF9               	movlw	249
 21326  0130AE  24E1               	addwf	fsr1l,w,c
 21327  0130B0  6EE9               	movwf	fsr0l,c
 21328  0130B2  0EFF               	movlw	255
 21329  0130B4  20E2               	addwfc	fsr1h,w,c
 21330  0130B6  6EEA               	movwf	fsr0h,c
 21331  0130B8  006F FF7F FFEF     	movff	indf2,indf0
 21332                           
 21333                           ;stkvar	_grs @ sp[(-4)+0]
 21334                           ;stkvar	_a @ sp[(-4)+-8]
 21335  0130BE  0EF5               	movlw	245
 21336  0130C0  24E1               	addwf	fsr1l,w,c
 21337  0130C2  6ED9               	movwf	fsr2l,c
 21338  0130C4  0EFF               	movlw	255
 21339  0130C6  20E2               	addwfc	fsr1h,w,c
 21340  0130C8  6EDA               	movwf	fsr2h,c
 21341  0130CA  0EFC               	movlw	-4
 21342  0130CC  006F FF8F FFDF     	movff	plusw1,indf2
 21343                           
 21344                           ;stkvar	_b @ sp[(-4)+-4]
 21345  0130D2  0EFA               	movlw	250
 21346  0130D4  24E1               	addwf	fsr1l,w,c
 21347  0130D6  6ED9               	movwf	fsr2l,c
 21348  0130D8  0EFF               	movlw	255
 21349  0130DA  20E2               	addwfc	fsr1h,w,c
 21350  0130DC  6EDA               	movwf	fsr2h,c
 21351  0130DE  50DF               	movf	indf2,w,c
 21352  0130E0  6E30               	movwf	(btemp+11)^0,c
 21353                           
 21354                           ;stkvar	_grs @ sp[(-4)+0]
 21355  0130E2  0EFC               	movlw	-4
 21356  0130E4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21357                           
 21358                           ;stkvar	_a @ sp[(-4)+-8]
 21359  0130EA  0EF6               	movlw	246
 21360  0130EC  24E1               	addwf	fsr1l,w,c
 21361  0130EE  6ED9               	movwf	fsr2l,c
 21362  0130F0  0EFF               	movlw	255
 21363  0130F2  20E2               	addwfc	fsr1h,w,c
 21364  0130F4  6EDA               	movwf	fsr2h,c
 21365                           
 21366                           ;stkvar	_b @ sp[(-4)+-4]
 21367  0130F6  0EFA               	movlw	250
 21368  0130F8  24E1               	addwf	fsr1l,w,c
 21369  0130FA  6EE9               	movwf	fsr0l,c
 21370  0130FC  0EFF               	movlw	255
 21371  0130FE  20E2               	addwfc	fsr1h,w,c
 21372  013100  6EEA               	movwf	fsr0h,c
 21373  013102  006F FF7F FFEF     	movff	indf2,indf0
 21374                           
 21375                           ;stkvar	_grs @ sp[(-4)+0]
 21376                           ;stkvar	_a @ sp[(-4)+-8]
 21377  013108  0EF6               	movlw	246
 21378  01310A  24E1               	addwf	fsr1l,w,c
 21379  01310C  6ED9               	movwf	fsr2l,c
 21380  01310E  0EFF               	movlw	255
 21381  013110  20E2               	addwfc	fsr1h,w,c
 21382  013112  6EDA               	movwf	fsr2h,c
 21383  013114  0EFC               	movlw	-4
 21384  013116  006F FF8F FFDF     	movff	plusw1,indf2
 21385                           
 21386                           ;stkvar	_b @ sp[(-4)+-4]
 21387  01311C  0EFB               	movlw	251
 21388  01311E  24E1               	addwf	fsr1l,w,c
 21389  013120  6ED9               	movwf	fsr2l,c
 21390  013122  0EFF               	movlw	255
 21391  013124  20E2               	addwfc	fsr1h,w,c
 21392  013126  6EDA               	movwf	fsr2h,c
 21393  013128  50DF               	movf	indf2,w,c
 21394  01312A  6E30               	movwf	(btemp+11)^0,c
 21395                           
 21396                           ;stkvar	_grs @ sp[(-4)+0]
 21397  01312C  0EFC               	movlw	-4
 21398  01312E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21399                           
 21400                           ;stkvar	_a @ sp[(-4)+-8]
 21401  013134  0EF7               	movlw	247
 21402  013136  24E1               	addwf	fsr1l,w,c
 21403  013138  6ED9               	movwf	fsr2l,c
 21404  01313A  0EFF               	movlw	255
 21405  01313C  20E2               	addwfc	fsr1h,w,c
 21406  01313E  6EDA               	movwf	fsr2h,c
 21407                           
 21408                           ;stkvar	_b @ sp[(-4)+-4]
 21409  013140  0EFB               	movlw	251
 21410  013142  24E1               	addwf	fsr1l,w,c
 21411  013144  6EE9               	movwf	fsr0l,c
 21412  013146  0EFF               	movlw	255
 21413  013148  20E2               	addwfc	fsr1h,w,c
 21414  01314A  6EEA               	movwf	fsr0h,c
 21415  01314C  006F FF7F FFEF     	movff	indf2,indf0
 21416                           
 21417                           ;stkvar	_grs @ sp[(-4)+0]
 21418                           ;stkvar	_a @ sp[(-4)+-8]
 21419  013152  0EF7               	movlw	247
 21420  013154  24E1               	addwf	fsr1l,w,c
 21421  013156  6ED9               	movwf	fsr2l,c
 21422  013158  0EFF               	movlw	255
 21423  01315A  20E2               	addwfc	fsr1h,w,c
 21424  01315C  6EDA               	movwf	fsr2h,c
 21425  01315E  0EFC               	movlw	-4
 21426  013160  006F FF8F FFDF     	movff	plusw1,indf2
 21427  013166                     l8167:
 21428                           
 21429                           ;stkvar	_grs @ sp[(-4)+0]
 21430  013166  0EFC               	movlw	-4
 21431  013168  6AE3               	clrf	plusw1,c
 21432                           
 21433                           ;stkvar	_aexp @ sp[(-4)+2]
 21434  01316A  0EFE               	movlw	-2
 21435  01316C  50E3               	movf	plusw1,w,c
 21436  01316E  6E2F               	movwf	(btemp+10)^0,c
 21437  013170  6A30               	clrf	(btemp+11)^0,c
 21438                           
 21439                           ;stkvar	_bexp @ sp[(-4)+1]
 21440  013172  0EFD               	movlw	-3
 21441  013174  50E3               	movf	plusw1,w,c
 21442  013176  5E2F               	subwf	(btemp+10)^0,f,c
 21443  013178  0E00               	movlw	0
 21444  01317A  5A30               	subwfb	(btemp+11)^0,f,c
 21445  01317C  BE30               	btfsc	(btemp+11)^0,7,c
 21446  01317E  D062               	goto	l8191
 21447  013180  5030               	movf	(btemp+11)^0,w,c
 21448  013182  E104               	bnz	u7410
 21449  013184  0E1A               	movlw	26
 21450  013186  5C2F               	subwf	(btemp+10)^0,w,c
 21451  013188  A0D8               	btfss	status,0,c
 21452  01318A  D05C               	goto	l8191
 21453  01318C                     u7410:
 21454                           
 21455                           ;stkvar	_b @ sp[(-4)+-4]
 21456  01318C  0EF8               	movlw	-8
 21457  01318E  50E3               	movf	plusw1,w,c
 21458  013190  E10A               	bnz	u7421
 21459  013192  0EF9               	movlw	-7
 21460  013194  50E3               	movf	plusw1,w,c
 21461  013196  E107               	bnz	u7421
 21462  013198  0EFA               	movlw	-6
 21463  01319A  50E3               	movf	plusw1,w,c
 21464  01319C  E104               	bnz	u7421
 21465  01319E  0EFB               	movlw	-5
 21466  0131A0  50E3               	movf	plusw1,w,c
 21467  0131A2  B4D8               	btfsc	status,2,c
 21468  0131A4  D003               	goto	u7420
 21469  0131A6                     u7421:
 21470  0131A6  6A30               	clrf	(btemp+11)^0,c
 21471  0131A8  2A30               	incf	(btemp+11)^0,f,c
 21472  0131AA  D001               	goto	u7438
 21473  0131AC                     u7420:
 21474  0131AC  6A30               	clrf	(btemp+11)^0,c
 21475  0131AE                     u7438:
 21476                           
 21477                           ;stkvar	_grs @ sp[(-4)+0]
 21478  0131AE  0EFC               	movlw	-4
 21479  0131B0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21480                           
 21481                           ;stkvar	_b @ sp[(-4)+-4]
 21482  0131B6  0EF8               	movlw	-8
 21483  0131B8  6AE3               	clrf	plusw1,c
 21484  0131BA  0EF9               	movlw	-7
 21485  0131BC  6AE3               	clrf	plusw1,c
 21486  0131BE  0EFA               	movlw	-6
 21487  0131C0  6AE3               	clrf	plusw1,c
 21488  0131C2  0EFB               	movlw	-5
 21489  0131C4  6AE3               	clrf	plusw1,c
 21490                           
 21491                           ;stkvar	_aexp @ sp[(-4)+2]
 21492                           ;stkvar	_bexp @ sp[(-4)+1]
 21493  0131C6  0EFE               	movlw	-2
 21494  0131C8  006F FF8C  F025    	movff	plusw1,btemp
 21495  0131CE  0EFD               	movlw	-3
 21496  0131D0  0060  F097  FFE3   	movff	btemp,plusw1
 21497  0131D6  D042               	goto	u7470
 21498  0131D8                     l8177:
 21499                           
 21500                           ;stkvar	_grs @ sp[(-4)+0]
 21501  0131D8  0EFC               	movlw	-4
 21502  0131DA  A0E3               	btfss	plusw1,0,c
 21503  0131DC  D00D               	goto	l8181
 21504                           
 21505                           ;stkvar	_grs @ sp[(-4)+0]
 21506  0131DE  0EFC               	movlw	-4
 21507  0131E0  006F FF8C  F030    	movff	plusw1,btemp+11
 21508  0131E6  90D8               	bcf	status,0,c
 21509  0131E8  3230               	rrcf	(btemp+11)^0,f,c
 21510  0131EA  0E01               	movlw	1
 21511  0131EC  1230               	iorwf	(btemp+11)^0,f,c
 21512                           
 21513                           ;stkvar	_grs @ sp[(-4)+0]
 21514  0131EE  0EFC               	movlw	-4
 21515  0131F0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21516  0131F6  D009               	goto	l8183
 21517  0131F8                     l8181:
 21518                           
 21519                           ;stkvar	_grs @ sp[(-4)+0]
 21520  0131F8  50E1               	movf	fsr1l,w,c
 21521  0131FA  0FFC               	addlw	-4
 21522  0131FC  6ED9               	movwf	fsr2l,c
 21523  0131FE  50E2               	movf	fsr1h,w,c
 21524  013200  6EDA               	movwf	fsr2h,c
 21525  013202  0EFF               	movlw	255
 21526  013204  22DA               	addwfc	fsr2h,f,c
 21527  013206  90D8               	bcf	status,0,c
 21528  013208  32DF               	rrcf	indf2,f,c
 21529  01320A                     l8183:
 21530                           
 21531                           ;stkvar	_b @ sp[(-4)+-4]
 21532  01320A  0EF8               	movlw	-8
 21533  01320C  A0E3               	btfss	plusw1,0,c
 21534  01320E  D002               	goto	l8187
 21535                           
 21536                           ;stkvar	_grs @ sp[(-4)+0]
 21537  013210  0EFC               	movlw	-4
 21538  013212  8EE3               	bsf	plusw1,7,c
 21539  013214                     l8187:
 21540  013214  0E01               	movlw	1
 21541  013216  6E30               	movwf	(btemp+11)^0,c
 21542                           
 21543                           ;stkvar	_b @ sp[(-4)+-4]
 21544  013218  50E1               	movf	fsr1l,w,c
 21545  01321A  0FF8               	addlw	-8
 21546  01321C  6ED9               	movwf	fsr2l,c
 21547  01321E  50E2               	movf	fsr1h,w,c
 21548  013220  6EDA               	movwf	fsr2h,c
 21549  013222  0EFF               	movlw	255
 21550  013224  22DA               	addwfc	fsr2h,f,c
 21551  013226  2830               	incf	(btemp+11)^0,w,c
 21552  013228  52DE               	movf	postinc2,f,c
 21553  01322A  D008               	goto	u7460
 21554  01322C                     u7465:
 21555  01322C  52DE               	movf	postinc2,f,c
 21556  01322E  90D8               	bcf	status,0,c
 21557  013230  BEDC               	btfsc	preinc2,7,c
 21558  013232  80D8               	bsf	status,0,c
 21559  013234  32DD               	rrcf	postdec2,f,c
 21560  013236  32DD               	rrcf	postdec2,f,c
 21561  013238  32DD               	rrcf	postdec2,f,c
 21562  01323A  32DE               	rrcf	postinc2,f,c
 21563  01323C                     u7460:
 21564  01323C  2EE8               	decfsz	wreg,f,c
 21565  01323E  D7F6               	goto	u7465
 21566                           
 21567                           ;stkvar	_bexp @ sp[(-4)+1]
 21568  013240  0EFD               	movlw	-3
 21569  013242  2AE3               	incf	plusw1,f,c
 21570  013244                     l8191:
 21571                           
 21572                           ;stkvar	_aexp @ sp[(-4)+2]
 21573                           ;stkvar	_bexp @ sp[(-4)+1]
 21574  013244  50E1               	movf	fsr1l,w,c
 21575  013246  0FFD               	addlw	-3
 21576  013248  6ED9               	movwf	fsr2l,c
 21577  01324A  50E2               	movf	fsr1h,w,c
 21578  01324C  6EDA               	movwf	fsr2h,c
 21579  01324E  0EFF               	movlw	255
 21580  013250  22DA               	addwfc	fsr2h,f,c
 21581  013252  0EFE               	movlw	-2
 21582  013254  50E3               	movf	plusw1,w,c
 21583  013256  5CDE               	subwf	postinc2,w,c
 21584  013258  A0D8               	btfss	status,0,c
 21585  01325A  D7BE               	goto	l8177
 21586  01325C                     u7470:
 21587                           
 21588                           ;stkvar	_signs @ sp[(-4)+3]
 21589  01325C  0EFF               	movlw	-1
 21590  01325E  BCE3               	btfsc	plusw1,6,c
 21591  013260  D066               	goto	l8219
 21592                           
 21593                           ;stkvar	_bexp @ sp[(-4)+1]
 21594  013262  0EFD               	movlw	-3
 21595  013264  50E3               	movf	plusw1,w,c
 21596  013266  B4D8               	btfsc	status,2,c
 21597  013268  D0F2               	goto	u7570
 21598                           
 21599                           ;stkvar	_a @ sp[(-4)+-8]
 21600                           ;stkvar	_b @ sp[(-4)+-4]
 21601  01326A  0EF8               	movlw	-8
 21602  01326C  50E3               	movf	plusw1,w,c
 21603  01326E  6E25               	movwf	btemp^0,c
 21604  013270  0EF4               	movlw	-12
 21605  013272  50E3               	movf	plusw1,w,c
 21606  013274  2625               	addwf	btemp^0,f,c
 21607  013276  0EF8               	movlw	-8
 21608  013278  0060  F097  FFE3   	movff	btemp,plusw1
 21609  01327E  0EF9               	movlw	-7
 21610  013280  50E3               	movf	plusw1,w,c
 21611  013282  6E25               	movwf	btemp^0,c
 21612  013284  0EF5               	movlw	-11
 21613  013286  50E3               	movf	plusw1,w,c
 21614  013288  2225               	addwfc	btemp^0,f,c
 21615  01328A  0EF9               	movlw	-7
 21616  01328C  0060  F097  FFE3   	movff	btemp,plusw1
 21617  013292  0EFA               	movlw	-6
 21618  013294  50E3               	movf	plusw1,w,c
 21619  013296  6E25               	movwf	btemp^0,c
 21620  013298  0EF6               	movlw	-10
 21621  01329A  50E3               	movf	plusw1,w,c
 21622  01329C  2225               	addwfc	btemp^0,f,c
 21623  01329E  0EFA               	movlw	-6
 21624  0132A0  0060  F097  FFE3   	movff	btemp,plusw1
 21625  0132A6  0EFB               	movlw	-5
 21626  0132A8  50E3               	movf	plusw1,w,c
 21627  0132AA  6E25               	movwf	btemp^0,c
 21628  0132AC  0EF7               	movlw	-9
 21629  0132AE  50E3               	movf	plusw1,w,c
 21630  0132B0  2225               	addwfc	btemp^0,f,c
 21631  0132B2  0EFB               	movlw	-5
 21632  0132B4  0060  F097  FFE3   	movff	btemp,plusw1
 21633                           
 21634                           ;stkvar	_b @ sp[(-4)+-4]
 21635  0132BA  0EFB               	movlw	-5
 21636  0132BC  A0E3               	btfss	plusw1,0,c
 21637  0132BE  D101               	goto	u7610
 21638                           
 21639                           ;stkvar	_grs @ sp[(-4)+0]
 21640  0132C0  0EFC               	movlw	-4
 21641  0132C2  A0E3               	btfss	plusw1,0,c
 21642  0132C4  D00D               	goto	l8209
 21643                           
 21644                           ;stkvar	_grs @ sp[(-4)+0]
 21645  0132C6  0EFC               	movlw	-4
 21646  0132C8  006F FF8C  F030    	movff	plusw1,btemp+11
 21647  0132CE  90D8               	bcf	status,0,c
 21648  0132D0  3230               	rrcf	(btemp+11)^0,f,c
 21649  0132D2  0E01               	movlw	1
 21650  0132D4  1230               	iorwf	(btemp+11)^0,f,c
 21651                           
 21652                           ;stkvar	_grs @ sp[(-4)+0]
 21653  0132D6  0EFC               	movlw	-4
 21654  0132D8  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21655  0132DE  D009               	goto	l8211
 21656  0132E0                     l8209:
 21657                           
 21658                           ;stkvar	_grs @ sp[(-4)+0]
 21659  0132E0  50E1               	movf	fsr1l,w,c
 21660  0132E2  0FFC               	addlw	-4
 21661  0132E4  6ED9               	movwf	fsr2l,c
 21662  0132E6  50E2               	movf	fsr1h,w,c
 21663  0132E8  6EDA               	movwf	fsr2h,c
 21664  0132EA  0EFF               	movlw	255
 21665  0132EC  22DA               	addwfc	fsr2h,f,c
 21666  0132EE  90D8               	bcf	status,0,c
 21667  0132F0  32DF               	rrcf	indf2,f,c
 21668  0132F2                     l8211:
 21669                           
 21670                           ;stkvar	_b @ sp[(-4)+-4]
 21671  0132F2  0EF8               	movlw	-8
 21672  0132F4  A0E3               	btfss	plusw1,0,c
 21673  0132F6  D002               	goto	l8215
 21674                           
 21675                           ;stkvar	_grs @ sp[(-4)+0]
 21676  0132F8  0EFC               	movlw	-4
 21677  0132FA  8EE3               	bsf	plusw1,7,c
 21678  0132FC                     l8215:
 21679  0132FC  0E01               	movlw	1
 21680  0132FE  6E30               	movwf	(btemp+11)^0,c
 21681                           
 21682                           ;stkvar	_b @ sp[(-4)+-4]
 21683  013300  50E1               	movf	fsr1l,w,c
 21684  013302  0FF8               	addlw	-8
 21685  013304  6ED9               	movwf	fsr2l,c
 21686  013306  50E2               	movf	fsr1h,w,c
 21687  013308  6EDA               	movwf	fsr2h,c
 21688  01330A  0EFF               	movlw	255
 21689  01330C  22DA               	addwfc	fsr2h,f,c
 21690  01330E  2830               	incf	(btemp+11)^0,w,c
 21691  013310  52DE               	movf	postinc2,f,c
 21692  013312  D008               	goto	u7530
 21693  013314                     u7535:
 21694  013314  52DE               	movf	postinc2,f,c
 21695  013316  90D8               	bcf	status,0,c
 21696  013318  BEDC               	btfsc	preinc2,7,c
 21697  01331A  80D8               	bsf	status,0,c
 21698  01331C  32DD               	rrcf	postdec2,f,c
 21699  01331E  32DD               	rrcf	postdec2,f,c
 21700  013320  32DD               	rrcf	postdec2,f,c
 21701  013322  32DE               	rrcf	postinc2,f,c
 21702  013324                     u7530:
 21703  013324  2EE8               	decfsz	wreg,f,c
 21704  013326  D7F6               	goto	u7535
 21705                           
 21706                           ;stkvar	_bexp @ sp[(-4)+1]
 21707  013328  0EFD               	movlw	-3
 21708  01332A  2AE3               	incf	plusw1,f,c
 21709  01332C  D0CA               	goto	u7610
 21710  01332E                     l8219:
 21711                           
 21712                           ;stkvar	_a @ sp[(-4)+-8]
 21713                           ;stkvar	_b @ sp[(-4)+-4]
 21714  01332E  50E1               	movf	fsr1l,w,c
 21715  013330  0FF8               	addlw	-8
 21716  013332  6ED9               	movwf	fsr2l,c
 21717  013334  50E2               	movf	fsr1h,w,c
 21718  013336  6EDA               	movwf	fsr2h,c
 21719  013338  0EFF               	movlw	255
 21720  01333A  22DA               	addwfc	fsr2h,f,c
 21721  01333C  0EF4               	movlw	-12
 21722  01333E  50E3               	movf	plusw1,w,c
 21723  013340  5CDE               	subwf	postinc2,w,c
 21724  013342  0EF5               	movlw	-11
 21725  013344  50E3               	movf	plusw1,w,c
 21726  013346  58DE               	subwfb	postinc2,w,c
 21727  013348  0EF6               	movlw	-10
 21728  01334A  50E3               	movf	plusw1,w,c
 21729  01334C  58DE               	subwfb	postinc2,w,c
 21730  01334E  50DE               	movf	postinc2,w,c
 21731  013350  0A80               	xorlw	128
 21732  013352  6E25               	movwf	btemp^0,c
 21733  013354  0EF7               	movlw	-9
 21734  013356  50E3               	movf	plusw1,w,c
 21735  013358  0A80               	xorlw	128
 21736  01335A  5825               	subwfb	btemp^0,w,c
 21737  01335C  B0D8               	btfsc	status,0,c
 21738  01335E  D053               	goto	l8231
 21739                           
 21740                           ;stkvar	_b @ sp[(-4)+-4]
 21741                           ;stkvar	_a @ sp[(-4)+-8]
 21742  013360  0EF4               	movlw	-12
 21743  013362  006F FF8C  F02D    	movff	plusw1,btemp+8
 21744  013368  0EF5               	movlw	-11
 21745  01336A  006F FF8C  F02E    	movff	plusw1,btemp+9
 21746  013370  0EF6               	movlw	-10
 21747  013372  006F FF8C  F02F    	movff	plusw1,btemp+10
 21748  013378  0EF7               	movlw	-9
 21749  01337A  006F FF8C  F030    	movff	plusw1,btemp+11
 21750  013380  0EF8               	movlw	-8
 21751  013382  50E3               	movf	plusw1,w,c
 21752  013384  5E2D               	subwf	(btemp+8)^0,f,c
 21753  013386  0EF9               	movlw	-7
 21754  013388  50E3               	movf	plusw1,w,c
 21755  01338A  5A2E               	subwfb	(btemp+9)^0,f,c
 21756  01338C  0EFA               	movlw	-6
 21757  01338E  50E3               	movf	plusw1,w,c
 21758  013390  5A2F               	subwfb	(btemp+10)^0,f,c
 21759  013392  0EFB               	movlw	-5
 21760  013394  50E3               	movf	plusw1,w,c
 21761  013396  5A30               	subwfb	(btemp+11)^0,f,c
 21762  013398  0EFF               	movlw	255
 21763  01339A  242D               	addwf	(btemp+8)^0,w,c
 21764  01339C  6E29               	movwf	(btemp+4)^0,c
 21765  01339E  0EFF               	movlw	255
 21766  0133A0  202E               	addwfc	(btemp+9)^0,w,c
 21767  0133A2  6E2A               	movwf	(btemp+5)^0,c
 21768  0133A4  0EFF               	movlw	255
 21769  0133A6  202F               	addwfc	(btemp+10)^0,w,c
 21770  0133A8  6E2B               	movwf	(btemp+6)^0,c
 21771  0133AA  0EFF               	movlw	255
 21772  0133AC  2030               	addwfc	(btemp+11)^0,w,c
 21773  0133AE  6E2C               	movwf	(btemp+7)^0,c
 21774                           
 21775                           ;stkvar	_b @ sp[(-4)+-4]
 21776  0133B0  0EF8               	movlw	-8
 21777  0133B2  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 21778  0133B8  0EF9               	movlw	-7
 21779  0133BA  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 21780  0133C0  0EFA               	movlw	-6
 21781  0133C2  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 21782  0133C8  0EFB               	movlw	-5
 21783  0133CA  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 21784                           
 21785                           ;stkvar	_signs @ sp[(-4)+3]
 21786  0133D0  0EFF               	movlw	-1
 21787  0133D2  7EE3               	btg	plusw1,7,c
 21788                           
 21789                           ;stkvar	_grs @ sp[(-4)+0]
 21790  0133D4  0EFC               	movlw	-4
 21791  0133D6  50E3               	movf	plusw1,w,c
 21792  0133D8  0800               	sublw	0
 21793  0133DA  6E30               	movwf	(btemp+11)^0,c
 21794                           
 21795                           ;stkvar	_grs @ sp[(-4)+0]
 21796  0133DC  0EFC               	movlw	-4
 21797  0133DE  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 21798                           
 21799                           ;stkvar	_grs @ sp[(-4)+0]
 21800  0133E4  0EFC               	movlw	-4
 21801  0133E6  50E3               	movf	plusw1,w,c
 21802  0133E8  A4D8               	btfss	status,2,c
 21803  0133EA  D020               	goto	l8233
 21804                           
 21805                           ;stkvar	_b @ sp[(-4)+-4]
 21806  0133EC  50E1               	movf	fsr1l,w,c
 21807  0133EE  0FF8               	addlw	-8
 21808  0133F0  6ED9               	movwf	fsr2l,c
 21809  0133F2  50E2               	movf	fsr1h,w,c
 21810  0133F4  6EDA               	movwf	fsr2h,c
 21811  0133F6  0EFF               	movlw	255
 21812  0133F8  22DA               	addwfc	fsr2h,f,c
 21813  0133FA  2ADE               	incf	postinc2,f,c
 21814  0133FC  0E00               	movlw	0
 21815  0133FE  22DE               	addwfc	postinc2,f,c
 21816  013400  22DE               	addwfc	postinc2,f,c
 21817  013402  22DE               	addwfc	postinc2,f,c
 21818  013404  D013               	goto	l8233
 21819  013406                     l8231:
 21820                           
 21821                           ;stkvar	_a @ sp[(-4)+-8]
 21822                           ;stkvar	_b @ sp[(-4)+-4]
 21823  013406  50E1               	movf	fsr1l,w,c
 21824  013408  0FF8               	addlw	-8
 21825  01340A  6ED9               	movwf	fsr2l,c
 21826  01340C  50E2               	movf	fsr1h,w,c
 21827  01340E  6EDA               	movwf	fsr2h,c
 21828  013410  0EFF               	movlw	255
 21829  013412  22DA               	addwfc	fsr2h,f,c
 21830  013414  0EF4               	movlw	-12
 21831  013416  50E3               	movf	plusw1,w,c
 21832  013418  5EDE               	subwf	postinc2,f,c
 21833  01341A  0EF5               	movlw	-11
 21834  01341C  50E3               	movf	plusw1,w,c
 21835  01341E  5ADE               	subwfb	postinc2,f,c
 21836  013420  0EF6               	movlw	-10
 21837  013422  50E3               	movf	plusw1,w,c
 21838  013424  5ADE               	subwfb	postinc2,f,c
 21839  013426  0EF7               	movlw	-9
 21840  013428  50E3               	movf	plusw1,w,c
 21841  01342A  5ADE               	subwfb	postinc2,f,c
 21842  01342C                     l8233:
 21843                           
 21844                           ;stkvar	_b @ sp[(-4)+-4]
 21845  01342C  0EF8               	movlw	-8
 21846  01342E  50E3               	movf	plusw1,w,c
 21847  013430  E145               	bnz	l8255
 21848  013432  0EF9               	movlw	-7
 21849  013434  50E3               	movf	plusw1,w,c
 21850  013436  E142               	bnz	l8255
 21851  013438  0EFA               	movlw	-6
 21852  01343A  50E3               	movf	plusw1,w,c
 21853  01343C  E13F               	bnz	l8255
 21854  01343E  0EFB               	movlw	-5
 21855  013440  50E3               	movf	plusw1,w,c
 21856  013442  A4D8               	btfss	status,2,c
 21857  013444  D03B               	goto	l8255
 21858                           
 21859                           ;stkvar	_grs @ sp[(-4)+0]
 21860  013446  0EFC               	movlw	-4
 21861  013448  50E3               	movf	plusw1,w,c
 21862  01344A  A4D8               	btfss	status,2,c
 21863  01344C  D037               	goto	l8255
 21864  01344E                     u7570:
 21865  01344E  0E00               	movlw	0
 21866  013450  6E25               	movwf	btemp^0,c
 21867  013452  0E00               	movlw	0
 21868  013454  6E26               	movwf	(btemp+1)^0,c
 21869  013456  0E00               	movlw	0
 21870  013458  6E27               	movwf	(btemp+2)^0,c
 21871  01345A  0E00               	movlw	0
 21872  01345C  6E28               	movwf	(btemp+3)^0,c
 21873  01345E  D0C6               	goto	l2751
 21874  013460                     l8241:
 21875                           
 21876                           ;stkvar	_b @ sp[(-4)+-4]
 21877  013460  90D8               	bcf	status,0,c
 21878  013462  0EF8               	movlw	-8
 21879  013464  36E3               	rlcf	plusw1,f,c
 21880  013466  0EF9               	movlw	-7
 21881  013468  36E3               	rlcf	plusw1,f,c
 21882  01346A  0EFA               	movlw	-6
 21883  01346C  36E3               	rlcf	plusw1,f,c
 21884  01346E  0EFB               	movlw	-5
 21885  013470  36E3               	rlcf	plusw1,f,c
 21886                           
 21887                           ;stkvar	_grs @ sp[(-4)+0]
 21888  013472  0EFC               	movlw	-4
 21889  013474  AEE3               	btfss	plusw1,7,c
 21890  013476  D002               	goto	l2763
 21891                           
 21892                           ;stkvar	_b @ sp[(-4)+-4]
 21893  013478  0EF8               	movlw	-8
 21894  01347A  80E3               	bsf	plusw1,0,c
 21895  01347C                     l2763:
 21896                           
 21897                           ;stkvar	_grs @ sp[(-4)+0]
 21898  01347C  0EFC               	movlw	-4
 21899  01347E  A0E3               	btfss	plusw1,0,c
 21900  013480  D00E               	goto	l8249
 21901                           
 21902                           ;stkvar	_grs @ sp[(-4)+0]
 21903  013482  0EFC               	movlw	-4
 21904  013484  006F FF8C  F030    	movff	plusw1,btemp+11
 21905  01348A  90D8               	bcf	status,0,c
 21906  01348C  3430               	rlcf	(btemp+11)^0,w,c
 21907  01348E  6E2F               	movwf	(btemp+10)^0,c
 21908  013490  0E01               	movlw	1
 21909  013492  122F               	iorwf	(btemp+10)^0,f,c
 21910                           
 21911                           ;stkvar	_grs @ sp[(-4)+0]
 21912  013494  0EFC               	movlw	-4
 21913  013496  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 21914  01349C  D009               	goto	l8251
 21915  01349E                     l8249:
 21916                           
 21917                           ;stkvar	_grs @ sp[(-4)+0]
 21918  01349E  50E1               	movf	fsr1l,w,c
 21919  0134A0  0FFC               	addlw	-4
 21920  0134A2  6ED9               	movwf	fsr2l,c
 21921  0134A4  50E2               	movf	fsr1h,w,c
 21922  0134A6  6EDA               	movwf	fsr2h,c
 21923  0134A8  0EFF               	movlw	255
 21924  0134AA  22DA               	addwfc	fsr2h,f,c
 21925  0134AC  90D8               	bcf	status,0,c
 21926  0134AE  36DF               	rlcf	indf2,f,c
 21927  0134B0                     l8251:
 21928                           
 21929                           ;stkvar	_bexp @ sp[(-4)+1]
 21930  0134B0  0EFD               	movlw	-3
 21931  0134B2  50E3               	movf	plusw1,w,c
 21932  0134B4  B4D8               	btfsc	status,2,c
 21933  0134B6  D002               	goto	l8255
 21934                           
 21935                           ;stkvar	_bexp @ sp[(-4)+1]
 21936  0134B8  0EFD               	movlw	-3
 21937  0134BA  06E3               	decf	plusw1,f,c
 21938  0134BC                     l8255:
 21939                           
 21940                           ;stkvar	_b @ sp[(-4)+-4]
 21941  0134BC  0EFA               	movlw	-6
 21942  0134BE  AEE3               	btfss	plusw1,7,c
 21943  0134C0  D7CF               	goto	l8241
 21944  0134C2                     u7610:
 21945                           
 21946                           ;stkvar	_aexp @ sp[(-4)+2]
 21947  0134C2  0EFE               	movlw	-2
 21948  0134C4  6AE3               	clrf	plusw1,c
 21949                           
 21950                           ;stkvar	_grs @ sp[(-4)+0]
 21951  0134C6  0EFC               	movlw	-4
 21952  0134C8  AEE3               	btfss	plusw1,7,c
 21953  0134CA  D00F               	goto	l8269
 21954                           
 21955                           ;stkvar	_grs @ sp[(-4)+0]
 21956  0134CC  0EFC               	movlw	-4
 21957  0134CE  006F FF8C  F030    	movff	plusw1,btemp+11
 21958  0134D4  0E7F               	movlw	127
 21959  0134D6  1630               	andwf	(btemp+11)^0,f,c
 21960  0134D8  B4D8               	btfsc	status,2,c
 21961  0134DA  D004               	goto	l8265
 21962  0134DC                     u7630:
 21963                           
 21964                           ;stkvar	_aexp @ sp[(-4)+2]
 21965  0134DC  0EFE               	movlw	-2
 21966  0134DE  6AE3               	clrf	plusw1,c
 21967  0134E0  2AE3               	incf	plusw1,f,c
 21968  0134E2  D003               	goto	l8269
 21969  0134E4                     l8265:
 21970                           
 21971                           ;stkvar	_b @ sp[(-4)+-4]
 21972  0134E4  0EF8               	movlw	-8
 21973  0134E6  B0E3               	btfsc	plusw1,0,c
 21974  0134E8  D7F9               	goto	u7630
 21975  0134EA                     l8269:
 21976                           
 21977                           ;stkvar	_aexp @ sp[(-4)+2]
 21978  0134EA  0EFE               	movlw	-2
 21979  0134EC  50E3               	movf	plusw1,w,c
 21980  0134EE  B4D8               	btfsc	status,2,c
 21981  0134F0  D02B               	goto	l8281
 21982                           
 21983                           ;stkvar	_b @ sp[(-4)+-4]
 21984  0134F2  50E1               	movf	fsr1l,w,c
 21985  0134F4  0FF8               	addlw	-8
 21986  0134F6  6ED9               	movwf	fsr2l,c
 21987  0134F8  50E2               	movf	fsr1h,w,c
 21988  0134FA  6EDA               	movwf	fsr2h,c
 21989  0134FC  0EFF               	movlw	255
 21990  0134FE  22DA               	addwfc	fsr2h,f,c
 21991  013500  2ADE               	incf	postinc2,f,c
 21992  013502  0E00               	movlw	0
 21993  013504  22DE               	addwfc	postinc2,f,c
 21994  013506  22DE               	addwfc	postinc2,f,c
 21995  013508  22DE               	addwfc	postinc2,f,c
 21996                           
 21997                           ;stkvar	_b @ sp[(-4)+-4]
 21998  01350A  0EFB               	movlw	-5
 21999  01350C  A0E3               	btfss	plusw1,0,c
 22000  01350E  D01C               	goto	l8281
 22001  013510  0E01               	movlw	1
 22002  013512  6E30               	movwf	(btemp+11)^0,c
 22003                           
 22004                           ;stkvar	_b @ sp[(-4)+-4]
 22005  013514  50E1               	movf	fsr1l,w,c
 22006  013516  0FF8               	addlw	-8
 22007  013518  6ED9               	movwf	fsr2l,c
 22008  01351A  50E2               	movf	fsr1h,w,c
 22009  01351C  6EDA               	movwf	fsr2h,c
 22010  01351E  0EFF               	movlw	255
 22011  013520  22DA               	addwfc	fsr2h,f,c
 22012  013522  2830               	incf	(btemp+11)^0,w,c
 22013  013524  52DE               	movf	postinc2,f,c
 22014  013526  D008               	goto	u7670
 22015  013528                     u7675:
 22016  013528  52DE               	movf	postinc2,f,c
 22017  01352A  90D8               	bcf	status,0,c
 22018  01352C  BEDC               	btfsc	preinc2,7,c
 22019  01352E  80D8               	bsf	status,0,c
 22020  013530  32DD               	rrcf	postdec2,f,c
 22021  013532  32DD               	rrcf	postdec2,f,c
 22022  013534  32DD               	rrcf	postdec2,f,c
 22023  013536  32DE               	rrcf	postinc2,f,c
 22024  013538                     u7670:
 22025  013538  2EE8               	decfsz	wreg,f,c
 22026  01353A  D7F6               	goto	u7675
 22027                           
 22028                           ;stkvar	_bexp @ sp[(-4)+1]
 22029  01353C  0EFD               	movlw	-3
 22030  01353E  28E3               	incf	plusw1,w,c
 22031  013540  B4D8               	btfsc	status,2,c
 22032  013542  D002               	goto	l8281
 22033                           
 22034                           ;stkvar	_bexp @ sp[(-4)+1]
 22035  013544  0EFD               	movlw	-3
 22036  013546  2AE3               	incf	plusw1,f,c
 22037  013548                     l8281:
 22038                           
 22039                           ;stkvar	_bexp @ sp[(-4)+1]
 22040  013548  0EFD               	movlw	-3
 22041  01354A  28E3               	incf	plusw1,w,c
 22042  01354C  B4D8               	btfsc	status,2,c
 22043  01354E  D004               	goto	u7700
 22044                           
 22045                           ;stkvar	_bexp @ sp[(-4)+1]
 22046  013550  0EFD               	movlw	-3
 22047  013552  50E3               	movf	plusw1,w,c
 22048  013554  A4D8               	btfss	status,2,c
 22049  013556  D00E               	goto	l8291
 22050  013558                     u7700:
 22051                           
 22052                           ;stkvar	_b @ sp[(-4)+-4]
 22053  013558  0EF8               	movlw	-8
 22054  01355A  6AE3               	clrf	plusw1,c
 22055  01355C  0EF9               	movlw	-7
 22056  01355E  6AE3               	clrf	plusw1,c
 22057  013560  0EFA               	movlw	-6
 22058  013562  6AE3               	clrf	plusw1,c
 22059  013564  0EFB               	movlw	-5
 22060  013566  6AE3               	clrf	plusw1,c
 22061                           
 22062                           ;stkvar	_bexp @ sp[(-4)+1]
 22063  013568  0EFD               	movlw	-3
 22064  01356A  50E3               	movf	plusw1,w,c
 22065  01356C  A4D8               	btfss	status,2,c
 22066  01356E  D002               	goto	l8291
 22067                           
 22068                           ;stkvar	_signs @ sp[(-4)+3]
 22069  013570  0EFF               	movlw	-1
 22070  013572  6AE3               	clrf	plusw1,c
 22071  013574                     l8291:
 22072                           
 22073                           ;stkvar	_bexp @ sp[(-4)+1]
 22074  013574  0EFD               	movlw	-3
 22075  013576  A0E3               	btfss	plusw1,0,c
 22076  013578  D009               	goto	l8295
 22077                           
 22078                           ;stkvar	_b @ sp[(-4)+-4]
 22079  01357A  0EFA               	movlw	250
 22080  01357C  24E1               	addwf	fsr1l,w,c
 22081  01357E  6ED9               	movwf	fsr2l,c
 22082  013580  0EFF               	movlw	255
 22083  013582  20E2               	addwfc	fsr1h,w,c
 22084  013584  6EDA               	movwf	fsr2h,c
 22085  013586  0E00               	movlw	0
 22086  013588  8EDB               	bsf	plusw2,7,c
 22087  01358A  D008               	goto	l8297
 22088  01358C                     l8295:
 22089                           
 22090                           ;stkvar	_b @ sp[(-4)+-4]
 22091  01358C  0EFA               	movlw	250
 22092  01358E  24E1               	addwf	fsr1l,w,c
 22093  013590  6ED9               	movwf	fsr2l,c
 22094  013592  0EFF               	movlw	255
 22095  013594  20E2               	addwfc	fsr1h,w,c
 22096  013596  6EDA               	movwf	fsr2h,c
 22097  013598  0E7F               	movlw	127
 22098  01359A  16DF               	andwf	indf2,f,c
 22099  01359C                     l8297:
 22100                           
 22101                           ;stkvar	_b @ sp[(-4)+-4]
 22102  01359C  0EFB               	movlw	251
 22103  01359E  24E1               	addwf	fsr1l,w,c
 22104  0135A0  6ED9               	movwf	fsr2l,c
 22105  0135A2  0EFF               	movlw	255
 22106  0135A4  20E2               	addwfc	fsr1h,w,c
 22107  0135A6  6EDA               	movwf	fsr2h,c
 22108                           
 22109                           ;stkvar	_bexp @ sp[(-4)+1]
 22110  0135A8  0EFD               	movlw	-3
 22111  0135AA  006F FF8C  F030    	movff	plusw1,btemp+11
 22112  0135B0  90D8               	bcf	status,0,c
 22113  0135B2  3030               	rrcf	(btemp+11)^0,w,c
 22114  0135B4  6EDF               	movwf	indf2,c
 22115                           
 22116                           ;stkvar	_signs @ sp[(-4)+3]
 22117  0135B6  0EFF               	movlw	-1
 22118  0135B8  AEE3               	btfss	plusw1,7,c
 22119  0135BA  D008               	goto	l8303
 22120                           
 22121                           ;stkvar	_b @ sp[(-4)+-4]
 22122  0135BC  0EFB               	movlw	251
 22123  0135BE  24E1               	addwf	fsr1l,w,c
 22124  0135C0  6ED9               	movwf	fsr2l,c
 22125  0135C2  0EFF               	movlw	255
 22126  0135C4  20E2               	addwfc	fsr1h,w,c
 22127  0135C6  6EDA               	movwf	fsr2h,c
 22128  0135C8  0E00               	movlw	0
 22129  0135CA  8EDB               	bsf	plusw2,7,c
 22130  0135CC                     l8303:
 22131                           
 22132                           ;stkvar	_b @ sp[(-4)+-4]
 22133  0135CC  0EF8               	movlw	-8
 22134  0135CE  006F FF8C  F025    	movff	plusw1,btemp
 22135  0135D4  0EF9               	movlw	-7
 22136  0135D6  006F FF8C  F026    	movff	plusw1,btemp+1
 22137  0135DC  0EFA               	movlw	-6
 22138  0135DE  006F FF8C  F027    	movff	plusw1,btemp+2
 22139  0135E4  0EFB               	movlw	-5
 22140  0135E6  006F FF8C  F028    	movff	plusw1,btemp+3
 22141  0135EC                     l2751:
 22142                           
 22143                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 22144  0135EC  0EF4               	movlw	244
 22145  0135EE  26E1               	addwf	fsr1l,f,c
 22146  0135F0  0EFF               	movlw	255
 22147  0135F2  22E2               	addwfc	fsr1h,f,c
 22148  0135F4  0012               	return		;funcret
 22149  0135F6                     __end_of___fladd:
 22150                           	opt callstack 0
 22151                           
 22152 ;; *************** function ___flmul *****************
 22153 ;; Defined at:
 22154 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 22155 ;; Parameters:    Size  Location     Type
 22156 ;;  b               4  [STACK] unsigned char 
 22157 ;;  a               4  [STACK] unsigned char 
 22158 ;; Auto vars:     Size  Location     Type
 22159 ;;  prod            4  [STACK] struct .
 22160 ;;  grs             4  [STACK] unsigned long 
 22161 ;;  temp            2  [STACK] struct .
 22162 ;;  bexp            1  [STACK] unsigned char 
 22163 ;;  aexp            1  [STACK] unsigned char 
 22164 ;;  sign            1  [STACK] unsigned char 
 22165 ;; Return value:  Size  Location     Type
 22166 ;;                  4  [STACK] unsigned char 
 22167 ;; Registers used:
 22168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22169 ;; Tracked objects:
 22170 ;;		On entry : 0/2
 22171 ;;		On exit  : 0/0
 22172 ;;		Unchanged: 0/0
 22173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22178 ;;Total ram usage:        0 bytes
 22179 ;; Hardware stack levels used:    1
 22180 ;; Hardware stack levels required when called:    7
 22181 ;; This function calls:
 22182 ;;		Nothing
 22183 ;; This function is called by:
 22184 ;;		_conv_raw_result
 22185 ;;		_lp_filter
 22186 ;;		_calc_model_data
 22187 ;;		_efgtoa
 22188 ;; This function uses a reentrant model
 22189 ;;
 22190                           
 22191                           	psect	text94
 22192  012610                     __ptext94:
 22193                           	opt callstack 0
 22194  012610                     ___flmul:
 22195                           	opt callstack 0
 22196                           
 22197                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 22198  012610  0E0D               	movlw	13
 22199  012612  26E1               	addwf	fsr1l,f,c
 22200  012614  0E00               	movlw	0
 22201  012616  22E2               	addwfc	fsr1h,f,c
 22202                           
 22203                           ;stkvar	_b @ sp[(-13)+-4]
 22204                           
 22205                           ;incstack = 0
 22206  012618  0EF2               	movlw	242
 22207  01261A  24E1               	addwf	fsr1l,w,c
 22208  01261C  6ED9               	movwf	fsr2l,c
 22209  01261E  0EFF               	movlw	255
 22210  012620  20E2               	addwfc	fsr1h,w,c
 22211  012622  6EDA               	movwf	fsr2h,c
 22212  012624  50DF               	movf	indf2,w,c
 22213  012626  6E30               	movwf	(btemp+11)^0,c
 22214  012628  0E80               	movlw	128
 22215  01262A  1630               	andwf	(btemp+11)^0,f,c
 22216                           
 22217                           ;stkvar	_sign @ sp[(-13)+12]
 22218  01262C  0EFF               	movlw	-1
 22219  01262E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22220                           
 22221                           ;stkvar	_b @ sp[(-13)+-4]
 22222  012634  0EF2               	movlw	242
 22223  012636  24E1               	addwf	fsr1l,w,c
 22224  012638  6ED9               	movwf	fsr2l,c
 22225  01263A  0EFF               	movlw	255
 22226  01263C  20E2               	addwfc	fsr1h,w,c
 22227  01263E  6EDA               	movwf	fsr2h,c
 22228  012640  50DF               	movf	indf2,w,c
 22229  012642  6E30               	movwf	(btemp+11)^0,c
 22230  012644  90D8               	bcf	status,0,c
 22231  012646  3430               	rlcf	(btemp+11)^0,w,c
 22232  012648  6E2F               	movwf	(btemp+10)^0,c
 22233                           
 22234                           ;stkvar	_bexp @ sp[(-13)+10]
 22235  01264A  0EFD               	movlw	-3
 22236  01264C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22237                           
 22238                           ;stkvar	_b @ sp[(-13)+-4]
 22239  012652  0EF1               	movlw	241
 22240  012654  24E1               	addwf	fsr1l,w,c
 22241  012656  6ED9               	movwf	fsr2l,c
 22242  012658  0EFF               	movlw	255
 22243  01265A  20E2               	addwfc	fsr1h,w,c
 22244  01265C  6EDA               	movwf	fsr2h,c
 22245  01265E  AEDF               	btfss	indf2,7,c
 22246  012660  D002               	goto	l6815
 22247                           
 22248                           ;stkvar	_bexp @ sp[(-13)+10]
 22249  012662  0EFD               	movlw	-3
 22250  012664  80E3               	bsf	plusw1,0,c
 22251  012666                     l6815:
 22252                           
 22253                           ;stkvar	_bexp @ sp[(-13)+10]
 22254  012666  0EFD               	movlw	-3
 22255  012668  50E3               	movf	plusw1,w,c
 22256  01266A  B4D8               	btfsc	status,2,c
 22257  01266C  D01F               	goto	l6823
 22258                           
 22259                           ;stkvar	_bexp @ sp[(-13)+10]
 22260  01266E  0EFD               	movlw	-3
 22261  012670  28E3               	incf	plusw1,w,c
 22262  012672  A4D8               	btfss	status,2,c
 22263  012674  D018               	goto	l6821
 22264  012676  0E00               	movlw	0
 22265  012678  6E2D               	movwf	(btemp+8)^0,c
 22266  01267A  0E00               	movlw	0
 22267  01267C  6E2E               	movwf	(btemp+9)^0,c
 22268  01267E  0E00               	movlw	0
 22269  012680  6E2F               	movwf	(btemp+10)^0,c
 22270  012682  0E00               	movlw	0
 22271  012684  6E30               	movwf	(btemp+11)^0,c
 22272                           
 22273                           ;stkvar	_b @ sp[(-13)+-4]
 22274  012686  0EEF               	movlw	-17
 22275  012688  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22276  01268E  0EF0               	movlw	-16
 22277  012690  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22278  012696  0EF1               	movlw	-15
 22279  012698  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22280  01269E  0EF2               	movlw	-14
 22281  0126A0  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22282  0126A6                     l6821:
 22283                           
 22284                           ;stkvar	_b @ sp[(-13)+-4]
 22285  0126A6  0EF1               	movlw	-15
 22286  0126A8  8EE3               	bsf	plusw1,7,c
 22287  0126AA  D018               	goto	l6825
 22288  0126AC                     l6823:
 22289  0126AC  0E00               	movlw	0
 22290  0126AE  6E2D               	movwf	(btemp+8)^0,c
 22291  0126B0  0E00               	movlw	0
 22292  0126B2  6E2E               	movwf	(btemp+9)^0,c
 22293  0126B4  0E00               	movlw	0
 22294  0126B6  6E2F               	movwf	(btemp+10)^0,c
 22295  0126B8  0E00               	movlw	0
 22296  0126BA  6E30               	movwf	(btemp+11)^0,c
 22297                           
 22298                           ;stkvar	_b @ sp[(-13)+-4]
 22299  0126BC  0EEF               	movlw	-17
 22300  0126BE  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22301  0126C4  0EF0               	movlw	-16
 22302  0126C6  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22303  0126CC  0EF1               	movlw	-15
 22304  0126CE  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22305  0126D4  0EF2               	movlw	-14
 22306  0126D6  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22307  0126DC                     l6825:
 22308                           
 22309                           ;stkvar	_a @ sp[(-13)+-8]
 22310  0126DC  0EEE               	movlw	238
 22311  0126DE  24E1               	addwf	fsr1l,w,c
 22312  0126E0  6ED9               	movwf	fsr2l,c
 22313  0126E2  0EFF               	movlw	255
 22314  0126E4  20E2               	addwfc	fsr1h,w,c
 22315  0126E6  6EDA               	movwf	fsr2h,c
 22316  0126E8  50DF               	movf	indf2,w,c
 22317  0126EA  6E30               	movwf	(btemp+11)^0,c
 22318  0126EC  0E80               	movlw	128
 22319  0126EE  1630               	andwf	(btemp+11)^0,f,c
 22320                           
 22321                           ;stkvar	_sign @ sp[(-13)+12]
 22322  0126F0  50E1               	movf	fsr1l,w,c
 22323  0126F2  0FFF               	addlw	-1
 22324  0126F4  6ED9               	movwf	fsr2l,c
 22325  0126F6  50E2               	movf	fsr1h,w,c
 22326  0126F8  6EDA               	movwf	fsr2h,c
 22327  0126FA  0EFF               	movlw	255
 22328  0126FC  22DA               	addwfc	fsr2h,f,c
 22329  0126FE  5030               	movf	(btemp+11)^0,w,c
 22330  012700  1ADF               	xorwf	indf2,f,c
 22331                           
 22332                           ;stkvar	_a @ sp[(-13)+-8]
 22333  012702  0EEE               	movlw	238
 22334  012704  24E1               	addwf	fsr1l,w,c
 22335  012706  6ED9               	movwf	fsr2l,c
 22336  012708  0EFF               	movlw	255
 22337  01270A  20E2               	addwfc	fsr1h,w,c
 22338  01270C  6EDA               	movwf	fsr2h,c
 22339  01270E  50DF               	movf	indf2,w,c
 22340  012710  6E30               	movwf	(btemp+11)^0,c
 22341  012712  90D8               	bcf	status,0,c
 22342  012714  3430               	rlcf	(btemp+11)^0,w,c
 22343  012716  6E2F               	movwf	(btemp+10)^0,c
 22344                           
 22345                           ;stkvar	_aexp @ sp[(-13)+11]
 22346  012718  0EFE               	movlw	-2
 22347  01271A  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22348                           
 22349                           ;stkvar	_a @ sp[(-13)+-8]
 22350  012720  0EED               	movlw	237
 22351  012722  24E1               	addwf	fsr1l,w,c
 22352  012724  6ED9               	movwf	fsr2l,c
 22353  012726  0EFF               	movlw	255
 22354  012728  20E2               	addwfc	fsr1h,w,c
 22355  01272A  6EDA               	movwf	fsr2h,c
 22356  01272C  AEDF               	btfss	indf2,7,c
 22357  01272E  D002               	goto	l6833
 22358                           
 22359                           ;stkvar	_aexp @ sp[(-13)+11]
 22360  012730  0EFE               	movlw	-2
 22361  012732  80E3               	bsf	plusw1,0,c
 22362  012734                     l6833:
 22363                           
 22364                           ;stkvar	_aexp @ sp[(-13)+11]
 22365  012734  0EFE               	movlw	-2
 22366  012736  50E3               	movf	plusw1,w,c
 22367  012738  B4D8               	btfsc	status,2,c
 22368  01273A  D01F               	goto	l6841
 22369                           
 22370                           ;stkvar	_aexp @ sp[(-13)+11]
 22371  01273C  0EFE               	movlw	-2
 22372  01273E  28E3               	incf	plusw1,w,c
 22373  012740  A4D8               	btfss	status,2,c
 22374  012742  D018               	goto	l6839
 22375  012744  0E00               	movlw	0
 22376  012746  6E2D               	movwf	(btemp+8)^0,c
 22377  012748  0E00               	movlw	0
 22378  01274A  6E2E               	movwf	(btemp+9)^0,c
 22379  01274C  0E00               	movlw	0
 22380  01274E  6E2F               	movwf	(btemp+10)^0,c
 22381  012750  0E00               	movlw	0
 22382  012752  6E30               	movwf	(btemp+11)^0,c
 22383                           
 22384                           ;stkvar	_a @ sp[(-13)+-8]
 22385  012754  0EEB               	movlw	-21
 22386  012756  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22387  01275C  0EEC               	movlw	-20
 22388  01275E  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22389  012764  0EED               	movlw	-19
 22390  012766  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22391  01276C  0EEE               	movlw	-18
 22392  01276E  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22393  012774                     l6839:
 22394                           
 22395                           ;stkvar	_a @ sp[(-13)+-8]
 22396  012774  0EED               	movlw	-19
 22397  012776  8EE3               	bsf	plusw1,7,c
 22398  012778  D018               	goto	l6843
 22399  01277A                     l6841:
 22400  01277A  0E00               	movlw	0
 22401  01277C  6E2D               	movwf	(btemp+8)^0,c
 22402  01277E  0E00               	movlw	0
 22403  012780  6E2E               	movwf	(btemp+9)^0,c
 22404  012782  0E00               	movlw	0
 22405  012784  6E2F               	movwf	(btemp+10)^0,c
 22406  012786  0E00               	movlw	0
 22407  012788  6E30               	movwf	(btemp+11)^0,c
 22408                           
 22409                           ;stkvar	_a @ sp[(-13)+-8]
 22410  01278A  0EEB               	movlw	-21
 22411  01278C  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 22412  012792  0EEC               	movlw	-20
 22413  012794  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 22414  01279A  0EED               	movlw	-19
 22415  01279C  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 22416  0127A2  0EEE               	movlw	-18
 22417  0127A4  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 22418  0127AA                     l6843:
 22419                           
 22420                           ;stkvar	_aexp @ sp[(-13)+11]
 22421  0127AA  0EFE               	movlw	-2
 22422  0127AC  50E3               	movf	plusw1,w,c
 22423  0127AE  B4D8               	btfsc	status,2,c
 22424  0127B0  D004               	goto	u5370
 22425                           
 22426                           ;stkvar	_bexp @ sp[(-13)+10]
 22427  0127B2  0EFD               	movlw	-3
 22428  0127B4  50E3               	movf	plusw1,w,c
 22429  0127B6  A4D8               	btfss	status,2,c
 22430  0127B8  D009               	goto	l6851
 22431  0127BA                     u5370:
 22432  0127BA  0E00               	movlw	0
 22433  0127BC  6E25               	movwf	btemp^0,c
 22434  0127BE  0E00               	movlw	0
 22435  0127C0  6E26               	movwf	(btemp+1)^0,c
 22436  0127C2  0E00               	movlw	0
 22437  0127C4  6E27               	movwf	(btemp+2)^0,c
 22438  0127C6  0E00               	movlw	0
 22439  0127C8  6E28               	movwf	(btemp+3)^0,c
 22440  0127CA  D332               	goto	l2832
 22441  0127CC                     l6851:
 22442                           
 22443                           ;stkvar	_b @ sp[(-13)+-4]
 22444  0127CC  0EEF               	movlw	-17
 22445  0127CE  006F FF8C  F030    	movff	plusw1,btemp+11
 22446                           
 22447                           ;stkvar	_a @ sp[(-13)+-8]
 22448  0127D4  0EED               	movlw	237
 22449  0127D6  24E1               	addwf	fsr1l,w,c
 22450  0127D8  6ED9               	movwf	fsr2l,c
 22451  0127DA  0EFF               	movlw	255
 22452  0127DC  20E2               	addwfc	fsr1h,w,c
 22453  0127DE  6EDA               	movwf	fsr2h,c
 22454  0127E0  50DF               	movf	indf2,w,c
 22455  0127E2  0230               	mulwf	(btemp+11)^0,c
 22456                           
 22457                           ;stkvar	_temp @ sp[(-13)+8]
 22458  0127E4  0EFB               	movlw	-5
 22459  0127E6  006F FFCF FFE3     	movff	prodl,plusw1
 22460  0127EC  0EFC               	movlw	-4
 22461  0127EE  006F FFD3 FFE3     	movff	prodh,plusw1
 22462                           
 22463                           ;stkvar	_temp @ sp[(-13)+8]
 22464  0127F4  0EFB               	movlw	-5
 22465  0127F6  006F FF8C  F030    	movff	plusw1,btemp+11
 22466  0127FC  0060  F0C0  F029   	movff	btemp+11,btemp+4
 22467  012802  6A2A               	clrf	(btemp+5)^0,c
 22468  012804  6A2B               	clrf	(btemp+6)^0,c
 22469  012806  6A2C               	clrf	(btemp+7)^0,c
 22470                           
 22471                           ;stkvar	_grs @ sp[(-13)+4]
 22472  012808  0EF7               	movlw	-9
 22473  01280A  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 22474  012810  0EF8               	movlw	-8
 22475  012812  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 22476  012818  0EF9               	movlw	-7
 22477  01281A  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 22478  012820  0EFA               	movlw	-6
 22479  012822  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 22480                           
 22481                           ;stkvar	_temp @ sp[(-13)+8]
 22482  012828  0EFC               	movlw	252
 22483  01282A  24E1               	addwf	fsr1l,w,c
 22484  01282C  6ED9               	movwf	fsr2l,c
 22485  01282E  0EFF               	movlw	255
 22486  012830  20E2               	addwfc	fsr1h,w,c
 22487  012832  6EDA               	movwf	fsr2h,c
 22488  012834  50DF               	movf	indf2,w,c
 22489  012836  6E30               	movwf	(btemp+11)^0,c
 22490  012838  0060  F0C0  F029   	movff	btemp+11,btemp+4
 22491  01283E  6A2A               	clrf	(btemp+5)^0,c
 22492  012840  6A2B               	clrf	(btemp+6)^0,c
 22493  012842  6A2C               	clrf	(btemp+7)^0,c
 22494                           
 22495                           ;stkvar	_prod @ sp[(-13)+0]
 22496  012844  0EF3               	movlw	-13
 22497  012846  0060  F0A7  FFE3   	movff	btemp+4,plusw1
 22498  01284C  0EF4               	movlw	-12
 22499  01284E  0060  F0AB  FFE3   	movff	btemp+5,plusw1
 22500  012854  0EF5               	movlw	-11
 22501  012856  0060  F0AF  FFE3   	movff	btemp+6,plusw1
 22502  01285C  0EF6               	movlw	-10
 22503  01285E  0060  F0B3  FFE3   	movff	btemp+7,plusw1
 22504                           
 22505                           ;stkvar	_b @ sp[(-13)+-4]
 22506  012864  0EF0               	movlw	240
 22507  012866  24E1               	addwf	fsr1l,w,c
 22508  012868  6ED9               	movwf	fsr2l,c
 22509  01286A  0EFF               	movlw	255
 22510  01286C  20E2               	addwfc	fsr1h,w,c
 22511  01286E  6EDA               	movwf	fsr2h,c
 22512  012870  50DF               	movf	indf2,w,c
 22513  012872  6E30               	movwf	(btemp+11)^0,c
 22514                           
 22515                           ;stkvar	_a @ sp[(-13)+-8]
 22516  012874  0EEC               	movlw	236
 22517  012876  24E1               	addwf	fsr1l,w,c
 22518  012878  6ED9               	movwf	fsr2l,c
 22519  01287A  0EFF               	movlw	255
 22520  01287C  20E2               	addwfc	fsr1h,w,c
 22521  01287E  6EDA               	movwf	fsr2h,c
 22522  012880  50DF               	movf	indf2,w,c
 22523  012882  0230               	mulwf	(btemp+11)^0,c
 22524                           
 22525                           ;stkvar	_temp @ sp[(-13)+8]
 22526  012884  0EFB               	movlw	-5
 22527  012886  006F FFCF FFE3     	movff	prodl,plusw1
 22528  01288C  0EFC               	movlw	-4
 22529  01288E  006F FFD3 FFE3     	movff	prodh,plusw1
 22530                           
 22531                           ;stkvar	_grs @ sp[(-13)+4]
 22532  012894  50E1               	movf	fsr1l,w,c
 22533  012896  0FF7               	addlw	-9
 22534  012898  6ED9               	movwf	fsr2l,c
 22535  01289A  50E2               	movf	fsr1h,w,c
 22536  01289C  6EDA               	movwf	fsr2h,c
 22537  01289E  0EFF               	movlw	255
 22538  0128A0  22DA               	addwfc	fsr2h,f,c
 22539                           
 22540                           ;stkvar	_temp @ sp[(-13)+8]
 22541  0128A2  0EFB               	movlw	-5
 22542  0128A4  50E3               	movf	plusw1,w,c
 22543  0128A6  26DE               	addwf	postinc2,f,c
 22544  0128A8  0E00               	movlw	0
 22545  0128AA  22DE               	addwfc	postinc2,f,c
 22546  0128AC  22DE               	addwfc	postinc2,f,c
 22547  0128AE  22DE               	addwfc	postinc2,f,c
 22548                           
 22549                           ;stkvar	_prod @ sp[(-13)+0]
 22550  0128B0  50E1               	movf	fsr1l,w,c
 22551  0128B2  0FF3               	addlw	-13
 22552  0128B4  6ED9               	movwf	fsr2l,c
 22553  0128B6  50E2               	movf	fsr1h,w,c
 22554  0128B8  6EDA               	movwf	fsr2h,c
 22555  0128BA  0EFF               	movlw	255
 22556  0128BC  22DA               	addwfc	fsr2h,f,c
 22557                           
 22558                           ;stkvar	_temp @ sp[(-13)+8]
 22559  0128BE  0EFC               	movlw	252
 22560  0128C0  24E1               	addwf	fsr1l,w,c
 22561  0128C2  6EE9               	movwf	fsr0l,c
 22562  0128C4  0EFF               	movlw	255
 22563  0128C6  20E2               	addwfc	fsr1h,w,c
 22564  0128C8  6EEA               	movwf	fsr0h,c
 22565  0128CA  50EF               	movf	indf0,w,c
 22566  0128CC  26DE               	addwf	postinc2,f,c
 22567  0128CE  0E00               	movlw	0
 22568  0128D0  22DE               	addwfc	postinc2,f,c
 22569  0128D2  22DE               	addwfc	postinc2,f,c
 22570  0128D4  22DE               	addwfc	postinc2,f,c
 22571                           
 22572                           ;stkvar	_b @ sp[(-13)+-4]
 22573  0128D6  0EF1               	movlw	241
 22574  0128D8  24E1               	addwf	fsr1l,w,c
 22575  0128DA  6ED9               	movwf	fsr2l,c
 22576  0128DC  0EFF               	movlw	255
 22577  0128DE  20E2               	addwfc	fsr1h,w,c
 22578  0128E0  6EDA               	movwf	fsr2h,c
 22579  0128E2  50DF               	movf	indf2,w,c
 22580  0128E4  6E30               	movwf	(btemp+11)^0,c
 22581                           
 22582                           ;stkvar	_a @ sp[(-13)+-8]
 22583  0128E6  0EEB               	movlw	-21
 22584  0128E8  50E3               	movf	plusw1,w,c
 22585  0128EA  0230               	mulwf	(btemp+11)^0,c
 22586                           
 22587                           ;stkvar	_temp @ sp[(-13)+8]
 22588  0128EC  0EFB               	movlw	-5
 22589  0128EE  006F FFCF FFE3     	movff	prodl,plusw1
 22590  0128F4  0EFC               	movlw	-4
 22591  0128F6  006F FFD3 FFE3     	movff	prodh,plusw1
 22592                           
 22593                           ;stkvar	_grs @ sp[(-13)+4]
 22594  0128FC  50E1               	movf	fsr1l,w,c
 22595  0128FE  0FF7               	addlw	-9
 22596  012900  6ED9               	movwf	fsr2l,c
 22597  012902  50E2               	movf	fsr1h,w,c
 22598  012904  6EDA               	movwf	fsr2h,c
 22599  012906  0EFF               	movlw	255
 22600  012908  22DA               	addwfc	fsr2h,f,c
 22601                           
 22602                           ;stkvar	_temp @ sp[(-13)+8]
 22603  01290A  0EFB               	movlw	-5
 22604  01290C  50E3               	movf	plusw1,w,c
 22605  01290E  26DE               	addwf	postinc2,f,c
 22606  012910  0E00               	movlw	0
 22607  012912  22DE               	addwfc	postinc2,f,c
 22608  012914  22DE               	addwfc	postinc2,f,c
 22609  012916  22DE               	addwfc	postinc2,f,c
 22610                           
 22611                           ;stkvar	_prod @ sp[(-13)+0]
 22612  012918  50E1               	movf	fsr1l,w,c
 22613  01291A  0FF3               	addlw	-13
 22614  01291C  6ED9               	movwf	fsr2l,c
 22615  01291E  50E2               	movf	fsr1h,w,c
 22616  012920  6EDA               	movwf	fsr2h,c
 22617  012922  0EFF               	movlw	255
 22618  012924  22DA               	addwfc	fsr2h,f,c
 22619                           
 22620                           ;stkvar	_temp @ sp[(-13)+8]
 22621  012926  0EFC               	movlw	252
 22622  012928  24E1               	addwf	fsr1l,w,c
 22623  01292A  6EE9               	movwf	fsr0l,c
 22624  01292C  0EFF               	movlw	255
 22625  01292E  20E2               	addwfc	fsr1h,w,c
 22626  012930  6EEA               	movwf	fsr0h,c
 22627  012932  50EF               	movf	indf0,w,c
 22628  012934  26DE               	addwf	postinc2,f,c
 22629  012936  0E00               	movlw	0
 22630  012938  22DE               	addwfc	postinc2,f,c
 22631  01293A  22DE               	addwfc	postinc2,f,c
 22632  01293C  22DE               	addwfc	postinc2,f,c
 22633                           
 22634                           ;stkvar	_grs @ sp[(-13)+4]
 22635  01293E  50E1               	movf	fsr1l,w,c
 22636  012940  0FF7               	addlw	-9
 22637  012942  6ED9               	movwf	fsr2l,c
 22638  012944  50E2               	movf	fsr1h,w,c
 22639  012946  6EDA               	movwf	fsr2h,c
 22640  012948  0EFF               	movlw	255
 22641  01294A  22DA               	addwfc	fsr2h,f,c
 22642  01294C  0E08               	movlw	8
 22643  01294E                     u5385:
 22644  01294E  90D8               	bcf	status,0,c
 22645  012950  36DE               	rlcf	postinc2,f,c
 22646  012952  36DE               	rlcf	postinc2,f,c
 22647  012954  36DE               	rlcf	postinc2,f,c
 22648  012956  36DD               	rlcf	postdec2,f,c
 22649  012958  52DD               	movf	postdec2,f,c
 22650  01295A  52DD               	movf	postdec2,f,c
 22651  01295C  2EE8               	decfsz	wreg,f,c
 22652  01295E  D7F7               	goto	u5385
 22653                           
 22654                           ;stkvar	_b @ sp[(-13)+-4]
 22655  012960  0EF0               	movlw	240
 22656  012962  24E1               	addwf	fsr1l,w,c
 22657  012964  6ED9               	movwf	fsr2l,c
 22658  012966  0EFF               	movlw	255
 22659  012968  20E2               	addwfc	fsr1h,w,c
 22660  01296A  6EDA               	movwf	fsr2h,c
 22661  01296C  50DF               	movf	indf2,w,c
 22662  01296E  6E30               	movwf	(btemp+11)^0,c
 22663                           
 22664                           ;stkvar	_a @ sp[(-13)+-8]
 22665  012970  0EEB               	movlw	-21
 22666  012972  50E3               	movf	plusw1,w,c
 22667  012974  0230               	mulwf	(btemp+11)^0,c
 22668                           
 22669                           ;stkvar	_temp @ sp[(-13)+8]
 22670  012976  0EFB               	movlw	-5
 22671  012978  006F FFCF FFE3     	movff	prodl,plusw1
 22672  01297E  0EFC               	movlw	-4
 22673  012980  006F FFD3 FFE3     	movff	prodh,plusw1
 22674                           
 22675                           ;stkvar	_temp @ sp[(-13)+8]
 22676  012986  0EFB               	movlw	-5
 22677  012988  006F FF8C  F02F    	movff	plusw1,btemp+10
 22678  01298E  0EFC               	movlw	-4
 22679  012990  006F FF8C  F030    	movff	plusw1,btemp+11
 22680                           
 22681                           ;stkvar	_grs @ sp[(-13)+4]
 22682  012996  50E1               	movf	fsr1l,w,c
 22683  012998  0FF7               	addlw	-9
 22684  01299A  6ED9               	movwf	fsr2l,c
 22685  01299C  50E2               	movf	fsr1h,w,c
 22686  01299E  6EDA               	movwf	fsr2h,c
 22687  0129A0  0EFF               	movlw	255
 22688  0129A2  22DA               	addwfc	fsr2h,f,c
 22689  0129A4  502F               	movf	(btemp+10)^0,w,c
 22690  0129A6  26DE               	addwf	postinc2,f,c
 22691  0129A8  5030               	movf	(btemp+11)^0,w,c
 22692  0129AA  22DE               	addwfc	postinc2,f,c
 22693  0129AC  0E00               	movlw	0
 22694  0129AE  22DE               	addwfc	postinc2,f,c
 22695  0129B0  22DE               	addwfc	postinc2,f,c
 22696                           
 22697                           ;stkvar	_b @ sp[(-13)+-4]
 22698  0129B2  0EEF               	movlw	-17
 22699  0129B4  006F FF8C  F030    	movff	plusw1,btemp+11
 22700                           
 22701                           ;stkvar	_a @ sp[(-13)+-8]
 22702  0129BA  0EEC               	movlw	236
 22703  0129BC  24E1               	addwf	fsr1l,w,c
 22704  0129BE  6ED9               	movwf	fsr2l,c
 22705  0129C0  0EFF               	movlw	255
 22706  0129C2  20E2               	addwfc	fsr1h,w,c
 22707  0129C4  6EDA               	movwf	fsr2h,c
 22708  0129C6  50DF               	movf	indf2,w,c
 22709  0129C8  0230               	mulwf	(btemp+11)^0,c
 22710                           
 22711                           ;stkvar	_temp @ sp[(-13)+8]
 22712  0129CA  0EFB               	movlw	-5
 22713  0129CC  006F FFCF FFE3     	movff	prodl,plusw1
 22714  0129D2  0EFC               	movlw	-4
 22715  0129D4  006F FFD3 FFE3     	movff	prodh,plusw1
 22716                           
 22717                           ;stkvar	_temp @ sp[(-13)+8]
 22718  0129DA  0EFB               	movlw	-5
 22719  0129DC  006F FF8C  F02F    	movff	plusw1,btemp+10
 22720  0129E2  0EFC               	movlw	-4
 22721  0129E4  006F FF8C  F030    	movff	plusw1,btemp+11
 22722                           
 22723                           ;stkvar	_grs @ sp[(-13)+4]
 22724  0129EA  50E1               	movf	fsr1l,w,c
 22725  0129EC  0FF7               	addlw	-9
 22726  0129EE  6ED9               	movwf	fsr2l,c
 22727  0129F0  50E2               	movf	fsr1h,w,c
 22728  0129F2  6EDA               	movwf	fsr2h,c
 22729  0129F4  0EFF               	movlw	255
 22730  0129F6  22DA               	addwfc	fsr2h,f,c
 22731  0129F8  502F               	movf	(btemp+10)^0,w,c
 22732  0129FA  26DE               	addwf	postinc2,f,c
 22733  0129FC  5030               	movf	(btemp+11)^0,w,c
 22734  0129FE  22DE               	addwfc	postinc2,f,c
 22735  012A00  0E00               	movlw	0
 22736  012A02  22DE               	addwfc	postinc2,f,c
 22737  012A04  22DE               	addwfc	postinc2,f,c
 22738                           
 22739                           ;stkvar	_grs @ sp[(-13)+4]
 22740  012A06  50E1               	movf	fsr1l,w,c
 22741  012A08  0FF7               	addlw	-9
 22742  012A0A  6ED9               	movwf	fsr2l,c
 22743  012A0C  50E2               	movf	fsr1h,w,c
 22744  012A0E  6EDA               	movwf	fsr2h,c
 22745  012A10  0EFF               	movlw	255
 22746  012A12  22DA               	addwfc	fsr2h,f,c
 22747  012A14  0E08               	movlw	8
 22748  012A16                     u5395:
 22749  012A16  90D8               	bcf	status,0,c
 22750  012A18  36DE               	rlcf	postinc2,f,c
 22751  012A1A  36DE               	rlcf	postinc2,f,c
 22752  012A1C  36DE               	rlcf	postinc2,f,c
 22753  012A1E  36DD               	rlcf	postdec2,f,c
 22754  012A20  52DD               	movf	postdec2,f,c
 22755  012A22  52DD               	movf	postdec2,f,c
 22756  012A24  2EE8               	decfsz	wreg,f,c
 22757  012A26  D7F7               	goto	u5395
 22758                           
 22759                           ;stkvar	_b @ sp[(-13)+-4]
 22760  012A28  0EEF               	movlw	-17
 22761  012A2A  006F FF8C  F030    	movff	plusw1,btemp+11
 22762                           
 22763                           ;stkvar	_a @ sp[(-13)+-8]
 22764  012A30  0EEB               	movlw	-21
 22765  012A32  50E3               	movf	plusw1,w,c
 22766  012A34  0230               	mulwf	(btemp+11)^0,c
 22767                           
 22768                           ;stkvar	_temp @ sp[(-13)+8]
 22769  012A36  0EFB               	movlw	-5
 22770  012A38  006F FFCF FFE3     	movff	prodl,plusw1
 22771  012A3E  0EFC               	movlw	-4
 22772  012A40  006F FFD3 FFE3     	movff	prodh,plusw1
 22773                           
 22774                           ;stkvar	_temp @ sp[(-13)+8]
 22775  012A46  0EFB               	movlw	-5
 22776  012A48  006F FF8C  F02F    	movff	plusw1,btemp+10
 22777  012A4E  0EFC               	movlw	-4
 22778  012A50  006F FF8C  F030    	movff	plusw1,btemp+11
 22779                           
 22780                           ;stkvar	_grs @ sp[(-13)+4]
 22781  012A56  50E1               	movf	fsr1l,w,c
 22782  012A58  0FF7               	addlw	-9
 22783  012A5A  6ED9               	movwf	fsr2l,c
 22784  012A5C  50E2               	movf	fsr1h,w,c
 22785  012A5E  6EDA               	movwf	fsr2h,c
 22786  012A60  0EFF               	movlw	255
 22787  012A62  22DA               	addwfc	fsr2h,f,c
 22788  012A64  502F               	movf	(btemp+10)^0,w,c
 22789  012A66  26DE               	addwf	postinc2,f,c
 22790  012A68  5030               	movf	(btemp+11)^0,w,c
 22791  012A6A  22DE               	addwfc	postinc2,f,c
 22792  012A6C  0E00               	movlw	0
 22793  012A6E  22DE               	addwfc	postinc2,f,c
 22794  012A70  22DE               	addwfc	postinc2,f,c
 22795                           
 22796                           ;stkvar	_b @ sp[(-13)+-4]
 22797  012A72  0EF0               	movlw	240
 22798  012A74  24E1               	addwf	fsr1l,w,c
 22799  012A76  6ED9               	movwf	fsr2l,c
 22800  012A78  0EFF               	movlw	255
 22801  012A7A  20E2               	addwfc	fsr1h,w,c
 22802  012A7C  6EDA               	movwf	fsr2h,c
 22803  012A7E  50DF               	movf	indf2,w,c
 22804  012A80  6E30               	movwf	(btemp+11)^0,c
 22805                           
 22806                           ;stkvar	_a @ sp[(-13)+-8]
 22807  012A82  0EED               	movlw	237
 22808  012A84  24E1               	addwf	fsr1l,w,c
 22809  012A86  6ED9               	movwf	fsr2l,c
 22810  012A88  0EFF               	movlw	255
 22811  012A8A  20E2               	addwfc	fsr1h,w,c
 22812  012A8C  6EDA               	movwf	fsr2h,c
 22813  012A8E  50DF               	movf	indf2,w,c
 22814  012A90  0230               	mulwf	(btemp+11)^0,c
 22815                           
 22816                           ;stkvar	_temp @ sp[(-13)+8]
 22817  012A92  0EFB               	movlw	-5
 22818  012A94  006F FFCF FFE3     	movff	prodl,plusw1
 22819  012A9A  0EFC               	movlw	-4
 22820  012A9C  006F FFD3 FFE3     	movff	prodh,plusw1
 22821                           
 22822                           ;stkvar	_temp @ sp[(-13)+8]
 22823  012AA2  0EFB               	movlw	-5
 22824  012AA4  006F FF8C  F02F    	movff	plusw1,btemp+10
 22825  012AAA  0EFC               	movlw	-4
 22826  012AAC  006F FF8C  F030    	movff	plusw1,btemp+11
 22827                           
 22828                           ;stkvar	_prod @ sp[(-13)+0]
 22829  012AB2  50E1               	movf	fsr1l,w,c
 22830  012AB4  0FF3               	addlw	-13
 22831  012AB6  6ED9               	movwf	fsr2l,c
 22832  012AB8  50E2               	movf	fsr1h,w,c
 22833  012ABA  6EDA               	movwf	fsr2h,c
 22834  012ABC  0EFF               	movlw	255
 22835  012ABE  22DA               	addwfc	fsr2h,f,c
 22836  012AC0  502F               	movf	(btemp+10)^0,w,c
 22837  012AC2  26DE               	addwf	postinc2,f,c
 22838  012AC4  5030               	movf	(btemp+11)^0,w,c
 22839  012AC6  22DE               	addwfc	postinc2,f,c
 22840  012AC8  0E00               	movlw	0
 22841  012ACA  22DE               	addwfc	postinc2,f,c
 22842  012ACC  22DE               	addwfc	postinc2,f,c
 22843                           
 22844                           ;stkvar	_b @ sp[(-13)+-4]
 22845  012ACE  0EF1               	movlw	241
 22846  012AD0  24E1               	addwf	fsr1l,w,c
 22847  012AD2  6ED9               	movwf	fsr2l,c
 22848  012AD4  0EFF               	movlw	255
 22849  012AD6  20E2               	addwfc	fsr1h,w,c
 22850  012AD8  6EDA               	movwf	fsr2h,c
 22851  012ADA  50DF               	movf	indf2,w,c
 22852  012ADC  6E30               	movwf	(btemp+11)^0,c
 22853                           
 22854                           ;stkvar	_a @ sp[(-13)+-8]
 22855  012ADE  0EEC               	movlw	236
 22856  012AE0  24E1               	addwf	fsr1l,w,c
 22857  012AE2  6ED9               	movwf	fsr2l,c
 22858  012AE4  0EFF               	movlw	255
 22859  012AE6  20E2               	addwfc	fsr1h,w,c
 22860  012AE8  6EDA               	movwf	fsr2h,c
 22861  012AEA  50DF               	movf	indf2,w,c
 22862  012AEC  0230               	mulwf	(btemp+11)^0,c
 22863                           
 22864                           ;stkvar	_temp @ sp[(-13)+8]
 22865  012AEE  0EFB               	movlw	-5
 22866  012AF0  006F FFCF FFE3     	movff	prodl,plusw1
 22867  012AF6  0EFC               	movlw	-4
 22868  012AF8  006F FFD3 FFE3     	movff	prodh,plusw1
 22869                           
 22870                           ;stkvar	_temp @ sp[(-13)+8]
 22871  012AFE  0EFB               	movlw	-5
 22872  012B00  006F FF8C  F02F    	movff	plusw1,btemp+10
 22873  012B06  0EFC               	movlw	-4
 22874  012B08  006F FF8C  F030    	movff	plusw1,btemp+11
 22875                           
 22876                           ;stkvar	_prod @ sp[(-13)+0]
 22877  012B0E  50E1               	movf	fsr1l,w,c
 22878  012B10  0FF3               	addlw	-13
 22879  012B12  6ED9               	movwf	fsr2l,c
 22880  012B14  50E2               	movf	fsr1h,w,c
 22881  012B16  6EDA               	movwf	fsr2h,c
 22882  012B18  0EFF               	movlw	255
 22883  012B1A  22DA               	addwfc	fsr2h,f,c
 22884  012B1C  502F               	movf	(btemp+10)^0,w,c
 22885  012B1E  26DE               	addwf	postinc2,f,c
 22886  012B20  5030               	movf	(btemp+11)^0,w,c
 22887  012B22  22DE               	addwfc	postinc2,f,c
 22888  012B24  0E00               	movlw	0
 22889  012B26  22DE               	addwfc	postinc2,f,c
 22890  012B28  22DE               	addwfc	postinc2,f,c
 22891                           
 22892                           ;stkvar	_b @ sp[(-13)+-4]
 22893  012B2A  0EF1               	movlw	241
 22894  012B2C  24E1               	addwf	fsr1l,w,c
 22895  012B2E  6ED9               	movwf	fsr2l,c
 22896  012B30  0EFF               	movlw	255
 22897  012B32  20E2               	addwfc	fsr1h,w,c
 22898  012B34  6EDA               	movwf	fsr2h,c
 22899  012B36  50DF               	movf	indf2,w,c
 22900  012B38  6E30               	movwf	(btemp+11)^0,c
 22901                           
 22902                           ;stkvar	_a @ sp[(-13)+-8]
 22903  012B3A  0EED               	movlw	237
 22904  012B3C  24E1               	addwf	fsr1l,w,c
 22905  012B3E  6ED9               	movwf	fsr2l,c
 22906  012B40  0EFF               	movlw	255
 22907  012B42  20E2               	addwfc	fsr1h,w,c
 22908  012B44  6EDA               	movwf	fsr2h,c
 22909  012B46  50DF               	movf	indf2,w,c
 22910  012B48  0230               	mulwf	(btemp+11)^0,c
 22911                           
 22912                           ;stkvar	_temp @ sp[(-13)+8]
 22913  012B4A  0EFB               	movlw	-5
 22914  012B4C  006F FFCF FFE3     	movff	prodl,plusw1
 22915  012B52  0EFC               	movlw	-4
 22916  012B54  006F FFD3 FFE3     	movff	prodh,plusw1
 22917                           
 22918                           ;stkvar	_temp @ sp[(-13)+8]
 22919  012B5A  0EFB               	movlw	-5
 22920  012B5C  006F FF8C  F02F    	movff	plusw1,btemp+10
 22921  012B62  0EFC               	movlw	-4
 22922  012B64  006F FF8C  F030    	movff	plusw1,btemp+11
 22923  012B6A  502F               	movf	(btemp+10)^0,w,c
 22924  012B6C  6E29               	movwf	(btemp+4)^0,c
 22925  012B6E  5030               	movf	(btemp+11)^0,w,c
 22926  012B70  6E2A               	movwf	(btemp+5)^0,c
 22927  012B72  6A2B               	clrf	(btemp+6)^0,c
 22928  012B74  6A2C               	clrf	(btemp+7)^0,c
 22929  012B76  0060  F0AC  F02C   	movff	btemp+6,btemp+7
 22930  012B7C  0060  F0A8  F02B   	movff	btemp+5,btemp+6
 22931  012B82  0060  F0A4  F02A   	movff	btemp+4,btemp+5
 22932  012B88  6A29               	clrf	(btemp+4)^0,c
 22933                           
 22934                           ;stkvar	_prod @ sp[(-13)+0]
 22935  012B8A  50E1               	movf	fsr1l,w,c
 22936  012B8C  0FF3               	addlw	-13
 22937  012B8E  6ED9               	movwf	fsr2l,c
 22938  012B90  50E2               	movf	fsr1h,w,c
 22939  012B92  6EDA               	movwf	fsr2h,c
 22940  012B94  0EFF               	movlw	255
 22941  012B96  22DA               	addwfc	fsr2h,f,c
 22942  012B98  5029               	movf	(btemp+4)^0,w,c
 22943  012B9A  26DE               	addwf	postinc2,f,c
 22944  012B9C  502A               	movf	(btemp+5)^0,w,c
 22945  012B9E  22DE               	addwfc	postinc2,f,c
 22946  012BA0  502B               	movf	(btemp+6)^0,w,c
 22947  012BA2  22DE               	addwfc	postinc2,f,c
 22948  012BA4  502C               	movf	(btemp+7)^0,w,c
 22949  012BA6  22DE               	addwfc	postinc2,f,c
 22950                           
 22951                           ;stkvar	_prod @ sp[(-13)+0]
 22952  012BA8  50E1               	movf	fsr1l,w,c
 22953  012BAA  0FF3               	addlw	-13
 22954  012BAC  6ED9               	movwf	fsr2l,c
 22955  012BAE  50E2               	movf	fsr1h,w,c
 22956  012BB0  6EDA               	movwf	fsr2h,c
 22957  012BB2  0EFF               	movlw	255
 22958  012BB4  22DA               	addwfc	fsr2h,f,c
 22959                           
 22960                           ;stkvar	_grs @ sp[(-13)+4]
 22961  012BB6  0EFA               	movlw	250
 22962  012BB8  24E1               	addwf	fsr1l,w,c
 22963  012BBA  6EE9               	movwf	fsr0l,c
 22964  012BBC  0EFF               	movlw	255
 22965  012BBE  20E2               	addwfc	fsr1h,w,c
 22966  012BC0  6EEA               	movwf	fsr0h,c
 22967  012BC2  50EF               	movf	indf0,w,c
 22968  012BC4  26DE               	addwf	postinc2,f,c
 22969  012BC6  0E00               	movlw	0
 22970  012BC8  22DE               	addwfc	postinc2,f,c
 22971  012BCA  22DE               	addwfc	postinc2,f,c
 22972  012BCC  22DE               	addwfc	postinc2,f,c
 22973                           
 22974                           ;stkvar	_grs @ sp[(-13)+4]
 22975  012BCE  50E1               	movf	fsr1l,w,c
 22976  012BD0  0FF7               	addlw	-9
 22977  012BD2  6ED9               	movwf	fsr2l,c
 22978  012BD4  50E2               	movf	fsr1h,w,c
 22979  012BD6  6EDA               	movwf	fsr2h,c
 22980  012BD8  0EFF               	movlw	255
 22981  012BDA  22DA               	addwfc	fsr2h,f,c
 22982  012BDC  0E08               	movlw	8
 22983  012BDE                     u5405:
 22984  012BDE  90D8               	bcf	status,0,c
 22985  012BE0  36DE               	rlcf	postinc2,f,c
 22986  012BE2  36DE               	rlcf	postinc2,f,c
 22987  012BE4  36DE               	rlcf	postinc2,f,c
 22988  012BE6  36DD               	rlcf	postdec2,f,c
 22989  012BE8  52DD               	movf	postdec2,f,c
 22990  012BEA  52DD               	movf	postdec2,f,c
 22991  012BEC  2EE8               	decfsz	wreg,f,c
 22992  012BEE  D7F7               	goto	u5405
 22993  012BF0  0E82               	movlw	130
 22994  012BF2  6E2F               	movwf	(btemp+10)^0,c
 22995  012BF4  0EFF               	movlw	255
 22996  012BF6  6E30               	movwf	(btemp+11)^0,c
 22997                           
 22998                           ;stkvar	_bexp @ sp[(-13)+10]
 22999  012BF8  0EFD               	movlw	-3
 23000  012BFA  50E3               	movf	plusw1,w,c
 23001  012BFC  6E2D               	movwf	(btemp+8)^0,c
 23002  012BFE  6A2E               	clrf	(btemp+9)^0,c
 23003                           
 23004                           ;stkvar	_aexp @ sp[(-13)+11]
 23005  012C00  0EFE               	movlw	-2
 23006  012C02  50E3               	movf	plusw1,w,c
 23007  012C04  262D               	addwf	(btemp+8)^0,f,c
 23008  012C06  0E00               	movlw	0
 23009  012C08  222E               	addwfc	(btemp+9)^0,f,c
 23010  012C0A  502F               	movf	(btemp+10)^0,w,c
 23011  012C0C  262D               	addwf	(btemp+8)^0,f,c
 23012  012C0E  5030               	movf	(btemp+11)^0,w,c
 23013  012C10  222E               	addwfc	(btemp+9)^0,f,c
 23014                           
 23015                           ;stkvar	_temp @ sp[(-13)+8]
 23016  012C12  0EFB               	movlw	-5
 23017  012C14  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 23018  012C1A  0EFC               	movlw	-4
 23019  012C1C  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 23020  012C22  D021               	goto	l6913
 23021  012C24                     l6903:
 23022                           
 23023                           ;stkvar	_prod @ sp[(-13)+0]
 23024  012C24  90D8               	bcf	status,0,c
 23025  012C26  0EF3               	movlw	-13
 23026  012C28  36E3               	rlcf	plusw1,f,c
 23027  012C2A  0EF4               	movlw	-12
 23028  012C2C  36E3               	rlcf	plusw1,f,c
 23029  012C2E  0EF5               	movlw	-11
 23030  012C30  36E3               	rlcf	plusw1,f,c
 23031  012C32  0EF6               	movlw	-10
 23032  012C34  36E3               	rlcf	plusw1,f,c
 23033                           
 23034                           ;stkvar	_grs @ sp[(-13)+4]
 23035  012C36  0EFA               	movlw	-6
 23036  012C38  AEE3               	btfss	plusw1,7,c
 23037  012C3A  D002               	goto	l6909
 23038                           
 23039                           ;stkvar	_prod @ sp[(-13)+0]
 23040  012C3C  0EF3               	movlw	-13
 23041  012C3E  80E3               	bsf	plusw1,0,c
 23042  012C40                     l6909:
 23043                           
 23044                           ;stkvar	_grs @ sp[(-13)+4]
 23045  012C40  90D8               	bcf	status,0,c
 23046  012C42  0EF7               	movlw	-9
 23047  012C44  36E3               	rlcf	plusw1,f,c
 23048  012C46  0EF8               	movlw	-8
 23049  012C48  36E3               	rlcf	plusw1,f,c
 23050  012C4A  0EF9               	movlw	-7
 23051  012C4C  36E3               	rlcf	plusw1,f,c
 23052  012C4E  0EFA               	movlw	-6
 23053  012C50  36E3               	rlcf	plusw1,f,c
 23054                           
 23055                           ;stkvar	_temp @ sp[(-13)+8]
 23056  012C52  50E1               	movf	fsr1l,w,c
 23057  012C54  0FFB               	addlw	-5
 23058  012C56  6ED9               	movwf	fsr2l,c
 23059  012C58  50E2               	movf	fsr1h,w,c
 23060  012C5A  6EDA               	movwf	fsr2h,c
 23061  012C5C  0EFF               	movlw	255
 23062  012C5E  22DA               	addwfc	fsr2h,f,c
 23063  012C60  06DE               	decf	postinc2,f,c
 23064  012C62  0E00               	movlw	0
 23065  012C64  5ADD               	subwfb	postdec2,f,c
 23066  012C66                     l6913:
 23067                           
 23068                           ;stkvar	_prod @ sp[(-13)+0]
 23069  012C66  0EF5               	movlw	-11
 23070  012C68  AEE3               	btfss	plusw1,7,c
 23071  012C6A  D7DC               	goto	l6903
 23072                           
 23073                           ;stkvar	_aexp @ sp[(-13)+11]
 23074  012C6C  0EFE               	movlw	-2
 23075  012C6E  6AE3               	clrf	plusw1,c
 23076                           
 23077                           ;stkvar	_grs @ sp[(-13)+4]
 23078  012C70  0EFA               	movlw	-6
 23079  012C72  AEE3               	btfss	plusw1,7,c
 23080  012C74  D020               	goto	l6927
 23081                           
 23082                           ;stkvar	_grs @ sp[(-13)+4]
 23083  012C76  50E1               	movf	fsr1l,w,c
 23084  012C78  0FF7               	addlw	-9
 23085  012C7A  6ED9               	movwf	fsr2l,c
 23086  012C7C  50E2               	movf	fsr1h,w,c
 23087  012C7E  6EDA               	movwf	fsr2h,c
 23088  012C80  0EFF               	movlw	255
 23089  012C82  22DA               	addwfc	fsr2h,f,c
 23090  012C84  0EFF               	movlw	255
 23091  012C86  14DE               	andwf	postinc2,w,c
 23092  012C88  6E2D               	movwf	(btemp+8)^0,c
 23093  012C8A  0EFF               	movlw	255
 23094  012C8C  14DE               	andwf	postinc2,w,c
 23095  012C8E  6E2E               	movwf	(btemp+9)^0,c
 23096  012C90  0EFF               	movlw	255
 23097  012C92  14DE               	andwf	postinc2,w,c
 23098  012C94  6E2F               	movwf	(btemp+10)^0,c
 23099  012C96  0E7F               	movlw	127
 23100  012C98  14DE               	andwf	postinc2,w,c
 23101  012C9A  6E30               	movwf	(btemp+11)^0,c
 23102  012C9C  502D               	movf	(btemp+8)^0,w,c
 23103  012C9E  102E               	iorwf	(btemp+9)^0,w,c
 23104  012CA0  102F               	iorwf	(btemp+10)^0,w,c
 23105  012CA2  1030               	iorwf	(btemp+11)^0,w,c
 23106  012CA4  B4D8               	btfsc	status,2,c
 23107  012CA6  D004               	goto	l6923
 23108  012CA8                     u5440:
 23109                           
 23110                           ;stkvar	_aexp @ sp[(-13)+11]
 23111  012CA8  0EFE               	movlw	-2
 23112  012CAA  6AE3               	clrf	plusw1,c
 23113  012CAC  2AE3               	incf	plusw1,f,c
 23114  012CAE  D003               	goto	l6927
 23115  012CB0                     l6923:
 23116                           
 23117                           ;stkvar	_prod @ sp[(-13)+0]
 23118  012CB0  0EF3               	movlw	-13
 23119  012CB2  B0E3               	btfsc	plusw1,0,c
 23120  012CB4  D7F9               	goto	u5440
 23121  012CB6                     l6927:
 23122                           
 23123                           ;stkvar	_aexp @ sp[(-13)+11]
 23124  012CB6  0EFE               	movlw	-2
 23125  012CB8  50E3               	movf	plusw1,w,c
 23126  012CBA  B4D8               	btfsc	status,2,c
 23127  012CBC  D036               	goto	l6937
 23128                           
 23129                           ;stkvar	_prod @ sp[(-13)+0]
 23130  012CBE  50E1               	movf	fsr1l,w,c
 23131  012CC0  0FF3               	addlw	-13
 23132  012CC2  6ED9               	movwf	fsr2l,c
 23133  012CC4  50E2               	movf	fsr1h,w,c
 23134  012CC6  6EDA               	movwf	fsr2h,c
 23135  012CC8  0EFF               	movlw	255
 23136  012CCA  22DA               	addwfc	fsr2h,f,c
 23137  012CCC  2ADE               	incf	postinc2,f,c
 23138  012CCE  0E00               	movlw	0
 23139  012CD0  22DE               	addwfc	postinc2,f,c
 23140  012CD2  22DE               	addwfc	postinc2,f,c
 23141  012CD4  22DE               	addwfc	postinc2,f,c
 23142                           
 23143                           ;stkvar	_prod @ sp[(-13)+0]
 23144  012CD6  0EF6               	movlw	-10
 23145  012CD8  A0E3               	btfss	plusw1,0,c
 23146  012CDA  D027               	goto	l6937
 23147  012CDC  0E01               	movlw	1
 23148  012CDE  6E30               	movwf	(btemp+11)^0,c
 23149                           
 23150                           ;stkvar	_prod @ sp[(-13)+0]
 23151  012CE0  50E1               	movf	fsr1l,w,c
 23152  012CE2  0FF3               	addlw	-13
 23153  012CE4  6ED9               	movwf	fsr2l,c
 23154  012CE6  50E2               	movf	fsr1h,w,c
 23155  012CE8  6EDA               	movwf	fsr2h,c
 23156  012CEA  0EFF               	movlw	255
 23157  012CEC  22DA               	addwfc	fsr2h,f,c
 23158  012CEE  2830               	incf	(btemp+11)^0,w,c
 23159  012CF0  52DE               	movf	postinc2,f,c
 23160  012CF2  D008               	goto	u5480
 23161  012CF4                     u5485:
 23162  012CF4  52DE               	movf	postinc2,f,c
 23163  012CF6  90D8               	bcf	status,0,c
 23164  012CF8  BEDC               	btfsc	preinc2,7,c
 23165  012CFA  80D8               	bsf	status,0,c
 23166  012CFC  32DD               	rrcf	postdec2,f,c
 23167  012CFE  32DD               	rrcf	postdec2,f,c
 23168  012D00  32DD               	rrcf	postdec2,f,c
 23169  012D02  32DE               	rrcf	postinc2,f,c
 23170  012D04                     u5480:
 23171  012D04  2EE8               	decfsz	wreg,f,c
 23172  012D06  D7F6               	goto	u5485
 23173                           
 23174                           ;stkvar	_temp @ sp[(-13)+8]
 23175  012D08  0EFB               	movlw	-5
 23176  012D0A  50E3               	movf	plusw1,w,c
 23177  012D0C  0F01               	addlw	1
 23178  012D0E  6E25               	movwf	btemp^0,c
 23179  012D10  0EFB               	movlw	-5
 23180  012D12  0060  F097  FFE3   	movff	btemp,plusw1
 23181  012D18  6A25               	clrf	btemp^0,c
 23182  012D1A  0EFC               	movlw	-4
 23183  012D1C  50E3               	movf	plusw1,w,c
 23184  012D1E  2025               	addwfc	btemp^0,w,c
 23185  012D20  6E25               	movwf	btemp^0,c
 23186  012D22  0EFC               	movlw	-4
 23187  012D24  0060  F097  FFE3   	movff	btemp,plusw1
 23188  012D2A                     l6937:
 23189                           
 23190                           ;stkvar	_temp @ sp[(-13)+8]
 23191  012D2A  0EFC               	movlw	-4
 23192  012D2C  BEE3               	btfsc	plusw1,7,c
 23193  012D2E  D020               	goto	l6941
 23194  012D30  0EFC               	movlw	-4
 23195  012D32  50E3               	movf	plusw1,w,c
 23196  012D34  E104               	bnz	u5490
 23197  012D36  0EFB               	movlw	-5
 23198  012D38  28E3               	incf	plusw1,w,c
 23199  012D3A  A0D8               	btfss	status,0,c
 23200  012D3C  D019               	goto	l6941
 23201  012D3E                     u5490:
 23202  012D3E  0E00               	movlw	0
 23203  012D40  6E2D               	movwf	(btemp+8)^0,c
 23204  012D42  0E00               	movlw	0
 23205  012D44  6E2E               	movwf	(btemp+9)^0,c
 23206  012D46  0E80               	movlw	128
 23207  012D48  6E2F               	movwf	(btemp+10)^0,c
 23208  012D4A  0E7F               	movlw	127
 23209  012D4C  6E30               	movwf	(btemp+11)^0,c
 23210                           
 23211                           ;stkvar	_prod @ sp[(-13)+0]
 23212  012D4E  0EF3               	movlw	-13
 23213  012D50  0060  F0B7  FFE3   	movff	btemp+8,plusw1
 23214  012D56  0EF4               	movlw	-12
 23215  012D58  0060  F0BB  FFE3   	movff	btemp+9,plusw1
 23216  012D5E  0EF5               	movlw	-11
 23217  012D60  0060  F0BF  FFE3   	movff	btemp+10,plusw1
 23218  012D66  0EF6               	movlw	-10
 23219  012D68  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 23220  012D6E  D044               	goto	l6957
 23221  012D70                     l6941:
 23222                           
 23223                           ;stkvar	_temp @ sp[(-13)+8]
 23224  012D70  0EFC               	movlw	-4
 23225  012D72  BEE3               	btfsc	plusw1,7,c
 23226  012D74  D007               	goto	u5500
 23227  012D76  0EFC               	movlw	-4
 23228  012D78  50E3               	movf	plusw1,w,c
 23229  012D7A  E10F               	bnz	l6947
 23230  012D7C  0EFB               	movlw	-5
 23231  012D7E  04E3               	decf	plusw1,w,c
 23232  012D80  B0D8               	btfsc	status,0,c
 23233  012D82  D00B               	goto	l6947
 23234  012D84                     u5500:
 23235                           
 23236                           ;stkvar	_prod @ sp[(-13)+0]
 23237  012D84  0EF3               	movlw	-13
 23238  012D86  6AE3               	clrf	plusw1,c
 23239  012D88  0EF4               	movlw	-12
 23240  012D8A  6AE3               	clrf	plusw1,c
 23241  012D8C  0EF5               	movlw	-11
 23242  012D8E  6AE3               	clrf	plusw1,c
 23243  012D90  0EF6               	movlw	-10
 23244  012D92  6AE3               	clrf	plusw1,c
 23245                           
 23246                           ;stkvar	_sign @ sp[(-13)+12]
 23247  012D94  0EFF               	movlw	-1
 23248  012D96  6AE3               	clrf	plusw1,c
 23249  012D98  D02F               	goto	l6957
 23250  012D9A                     l6947:
 23251                           
 23252                           ;stkvar	_temp @ sp[(-13)+8]
 23253                           ;stkvar	_bexp @ sp[(-13)+10]
 23254  012D9A  0EFB               	movlw	-5
 23255  012D9C  006F FF8C  F025    	movff	plusw1,btemp
 23256  012DA2  0EFD               	movlw	-3
 23257  012DA4  0060  F097  FFE3   	movff	btemp,plusw1
 23258                           
 23259                           ;stkvar	_prod @ sp[(-13)+0]
 23260  012DAA  50E1               	movf	fsr1l,w,c
 23261  012DAC  0FF3               	addlw	-13
 23262  012DAE  6ED9               	movwf	fsr2l,c
 23263  012DB0  50E2               	movf	fsr1h,w,c
 23264  012DB2  6EDA               	movwf	fsr2h,c
 23265  012DB4  0EFF               	movlw	255
 23266  012DB6  22DA               	addwfc	fsr2h,f,c
 23267  012DB8  0EFF               	movlw	255
 23268  012DBA  16DE               	andwf	postinc2,f,c
 23269  012DBC  0EFF               	movlw	255
 23270  012DBE  16DE               	andwf	postinc2,f,c
 23271  012DC0  0E7F               	movlw	127
 23272  012DC2  16DE               	andwf	postinc2,f,c
 23273  012DC4  0E00               	movlw	0
 23274  012DC6  16DE               	andwf	postinc2,f,c
 23275                           
 23276                           ;stkvar	_bexp @ sp[(-13)+10]
 23277  012DC8  0EFD               	movlw	-3
 23278  012DCA  A0E3               	btfss	plusw1,0,c
 23279  012DCC  D008               	goto	l6955
 23280                           
 23281                           ;stkvar	_prod @ sp[(-13)+0]
 23282  012DCE  0EF5               	movlw	245
 23283  012DD0  24E1               	addwf	fsr1l,w,c
 23284  012DD2  6ED9               	movwf	fsr2l,c
 23285  012DD4  0EFF               	movlw	255
 23286  012DD6  20E2               	addwfc	fsr1h,w,c
 23287  012DD8  6EDA               	movwf	fsr2h,c
 23288  012DDA  0E00               	movlw	0
 23289  012DDC  8EDB               	bsf	plusw2,7,c
 23290  012DDE                     l6955:
 23291                           
 23292                           ;stkvar	_prod @ sp[(-13)+0]
 23293  012DDE  0EF6               	movlw	246
 23294  012DE0  24E1               	addwf	fsr1l,w,c
 23295  012DE2  6ED9               	movwf	fsr2l,c
 23296  012DE4  0EFF               	movlw	255
 23297  012DE6  20E2               	addwfc	fsr1h,w,c
 23298  012DE8  6EDA               	movwf	fsr2h,c
 23299                           
 23300                           ;stkvar	_bexp @ sp[(-13)+10]
 23301  012DEA  0EFD               	movlw	-3
 23302  012DEC  006F FF8C  F030    	movff	plusw1,btemp+11
 23303  012DF2  90D8               	bcf	status,0,c
 23304  012DF4  3030               	rrcf	(btemp+11)^0,w,c
 23305  012DF6  6EDF               	movwf	indf2,c
 23306  012DF8                     l6957:
 23307                           
 23308                           ;stkvar	_sign @ sp[(-13)+12]
 23309  012DF8  0EFF               	movlw	-1
 23310  012DFA  006F FF8C  F030    	movff	plusw1,btemp+11
 23311                           
 23312                           ;stkvar	_prod @ sp[(-13)+0]
 23313  012E00  0EF6               	movlw	246
 23314  012E02  24E1               	addwf	fsr1l,w,c
 23315  012E04  6ED9               	movwf	fsr2l,c
 23316  012E06  0EFF               	movlw	255
 23317  012E08  20E2               	addwfc	fsr1h,w,c
 23318  012E0A  6EDA               	movwf	fsr2h,c
 23319  012E0C  5030               	movf	(btemp+11)^0,w,c
 23320  012E0E  12DF               	iorwf	indf2,f,c
 23321                           
 23322                           ;stkvar	_prod @ sp[(-13)+0]
 23323  012E10  0EF3               	movlw	-13
 23324  012E12  006F FF8C  F025    	movff	plusw1,btemp
 23325  012E18  0EF4               	movlw	-12
 23326  012E1A  006F FF8C  F026    	movff	plusw1,btemp+1
 23327  012E20  0EF5               	movlw	-11
 23328  012E22  006F FF8C  F027    	movff	plusw1,btemp+2
 23329  012E28  0EF6               	movlw	-10
 23330  012E2A  006F FF8C  F028    	movff	plusw1,btemp+3
 23331  012E30                     l2832:
 23332                           
 23333                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 23334  012E30  0EEB               	movlw	235
 23335  012E32  26E1               	addwf	fsr1l,f,c
 23336  012E34  0EFF               	movlw	255
 23337  012E36  22E2               	addwfc	fsr1h,f,c
 23338  012E38  0012               	return		;funcret
 23339  012E3A                     __end_of___flmul:
 23340                           	opt callstack 0
 23341                           
 23342 ;; *************** function _SYSTEM_Initialize *****************
 23343 ;; Defined at:
 23344 ;;		line 50 in file "mcc_generated_files/mcc.c"
 23345 ;; Parameters:    Size  Location     Type
 23346 ;;		None
 23347 ;; Auto vars:     Size  Location     Type
 23348 ;;		None
 23349 ;; Return value:  Size  Location     Type
 23350 ;;                  1  [STACK] void 
 23351 ;; Registers used:
 23352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 23353 ;; Tracked objects:
 23354 ;;		On entry : 0/0
 23355 ;;		On exit  : 3F/3C
 23356 ;;		Unchanged: 0/0
 23357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23362 ;;Total ram usage:        0 bytes
 23363 ;; Hardware stack levels used:    1
 23364 ;; Hardware stack levels required when called:    9
 23365 ;; This function calls:
 23366 ;;		_ADCC_Initialize
 23367 ;;		_CLKREF_Initialize
 23368 ;;		_DMA1_Initialize
 23369 ;;		_DMA2_Initialize
 23370 ;;		_EXT_INT_Initialize
 23371 ;;		_FVR_Initialize
 23372 ;;		_INTERRUPT_Initialize
 23373 ;;		_OSCILLATOR_Initialize
 23374 ;;		_PIN_MANAGER_Initialize
 23375 ;;		_PMD_Initialize
 23376 ;;		_PWM8_Initialize
 23377 ;;		_SPI1_Initialize
 23378 ;;		_TMR2_Initialize
 23379 ;;		_TMR3_Initialize
 23380 ;;		_TMR5_Initialize
 23381 ;;		_TMR6_Initialize
 23382 ;;		_UART1_Initialize
 23383 ;;		_UART2_Initialize
 23384 ;; This function is called by:
 23385 ;;		_main
 23386 ;; This function uses a reentrant model
 23387 ;;
 23388                           
 23389                           	psect	text95
 23390  018580                     __ptext95:
 23391                           	opt callstack 0
 23392  018580                     _SYSTEM_Initialize:
 23393                           	opt callstack 21
 23394                           
 23395                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 23396                           
 23397                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23398                           ;incstack = 0
 23399  018580  EC97  F0C0         	call	_INTERRUPT_Initialize	;wreg free
 23400                           
 23401                           ; BSR set to: 57
 23402                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 23403  018584  ECC2  F0C8         	call	_PMD_Initialize	;wreg free
 23404                           
 23405                           ; BSR set to: 57
 23406                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 23407  018588  EC60  F0BE         	call	_PIN_MANAGER_Initialize	;wreg free
 23408                           
 23409                           ; BSR set to: 58
 23410                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 23411  01858C  ECB7  F0C8         	call	_OSCILLATOR_Initialize	;wreg free
 23412                           
 23413                           ; BSR set to: 57
 23414                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 23415  018590  EC29  F0C9         	call	_FVR_Initialize	;wreg free
 23416                           
 23417                           ; BSR set to: 62
 23418                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 23419  018594  EC2D  F0C0         	call	_ADCC_Initialize	;wreg free
 23420                           
 23421                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 23422  018598  ECAC  F0C8         	call	_PWM8_Initialize	;wreg free
 23423                           
 23424                           ; BSR set to: 63
 23425                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 23426  01859C  EC95  F0C8         	call	_TMR2_Initialize	;wreg free
 23427                           
 23428                           ; BSR set to: 57
 23429                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 23430  0185A0  EC18  F0C5         	call	_EXT_INT_Initialize	;wreg free
 23431                           
 23432                           ; BSR set to: 57
 23433                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 23434  0185A4  ECD4  F0C5         	call	_TMR6_Initialize	;wreg free
 23435                           
 23436                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 23437  0185A8  EC72  F0C3         	call	_TMR3_Initialize	;wreg free
 23438                           
 23439                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 23440  0185AC  EC4F  F0C3         	call	_TMR5_Initialize	;wreg free
 23441                           
 23442                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 23443  0185B0  ECFD  F0C0         	call	_UART1_Initialize	;wreg free
 23444                           
 23445                           ; BSR set to: 57
 23446                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 23447  0185B4  EC91  F0C1         	call	_UART2_Initialize	;wreg free
 23448                           
 23449                           ; BSR set to: 57
 23450                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 23451  0185B8  ECA1  F0C8         	call	_SPI1_Initialize	;wreg free
 23452                           
 23453                           ; BSR set to: 61
 23454                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 23455  0185BC  ECED  F0C1         	call	_DMA2_Initialize	;wreg free
 23456                           
 23457                           ; BSR set to: 59
 23458                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 23459  0185C0  ECF8  F0BF         	call	_DMA1_Initialize	;wreg free
 23460                           
 23461                           ; BSR set to: 59
 23462                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 23463  0185C4  EC03  F0C9         	call	_CLKREF_Initialize	;wreg free
 23464                           
 23465                           ; BSR set to: 60
 23466                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 23467  0185C8  0012               	return		;funcret
 23468  0185CA                     __end_of_SYSTEM_Initialize:
 23469                           	opt callstack 0
 23470                           
 23471 ;; *************** function _UART2_Initialize *****************
 23472 ;; Defined at:
 23473 ;;		line 78 in file "mcc_generated_files/uart2.c"
 23474 ;; Parameters:    Size  Location     Type
 23475 ;;		None
 23476 ;; Auto vars:     Size  Location     Type
 23477 ;;		None
 23478 ;; Return value:  Size  Location     Type
 23479 ;;                  1  [STACK] void 
 23480 ;; Registers used:
 23481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23482 ;; Tracked objects:
 23483 ;;		On entry : 3F/39
 23484 ;;		On exit  : 3F/39
 23485 ;;		Unchanged: 0/0
 23486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23491 ;;Total ram usage:        0 bytes
 23492 ;; Hardware stack levels used:    1
 23493 ;; Hardware stack levels required when called:    8
 23494 ;; This function calls:
 23495 ;;		_UART2_SetRxInterruptHandler
 23496 ;;		_UART2_SetTxInterruptHandler
 23497 ;; This function is called by:
 23498 ;;		_SYSTEM_Initialize
 23499 ;; This function uses a reentrant model
 23500 ;;
 23501                           
 23502                           	psect	text96
 23503  018322                     __ptext96:
 23504                           	opt callstack 0
 23505  018322                     _UART2_Initialize:
 23506                           	opt callstack 21
 23507                           
 23508                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 23509                           
 23510                           ; BSR set to: 60
 23511                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23512                           ;incstack = 0
 23513  018322  0139               	movlb	57	; () banked
 23514  018324  9596               	bcf	150,2,b	;volatile
 23515                           
 23516                           ; BSR set to: 57
 23517                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 23518  018326  0EA4               	movlw	low _UART2_Receive_ISR
 23519  018328  6EE6               	movwf	postinc1,c
 23520  01832A  0E90               	movlw	high _UART2_Receive_ISR
 23521  01832C  6EE6               	movwf	postinc1,c
 23522  01832E  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 23523  018330  6EE6               	movwf	postinc1,c
 23524  018332  EC61  F0C6         	call	_UART2_SetRxInterruptHandler	;wreg free
 23525                           
 23526                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 23527  018336  0139               	movlb	57	; () banked
 23528  018338  9796               	bcf	150,3,b	;volatile
 23529                           
 23530                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 23531  01833A  0E7C               	movlw	low _UART2_Transmit_ISR
 23532  01833C  6EE6               	movwf	postinc1,c
 23533  01833E  0E8B               	movlw	high _UART2_Transmit_ISR
 23534  018340  6EE6               	movwf	postinc1,c
 23535  018342  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 23536  018344  6EE6               	movwf	postinc1,c
 23537  018346  EC4D  F0C6         	call	_UART2_SetTxInterruptHandler	;wreg free
 23538                           
 23539                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 23540  01834A  013D               	movlb	61	; () banked
 23541  01834C  6BD4               	clrf	212,b	;volatile
 23542                           
 23543                           ; BSR set to: 61
 23544                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 23545  01834E  6BD6               	clrf	214,b	;volatile
 23546                           
 23547                           ; BSR set to: 61
 23548                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 23549  018350  6BD8               	clrf	216,b	;volatile
 23550                           
 23551                           ; BSR set to: 61
 23552                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 23553  018352  0EB0               	movlw	176
 23554  018354  6FDA               	movwf	218,b	;volatile
 23555                           
 23556                           ; BSR set to: 61
 23557                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 23558  018356  0E80               	movlw	128
 23559  018358  6FDB               	movwf	219,b	;volatile
 23560                           
 23561                           ; BSR set to: 61
 23562                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 23563  01835A  6BDC               	clrf	220,b	;volatile
 23564                           
 23565                           ; BSR set to: 61
 23566                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 23567  01835C  0E82               	movlw	130
 23568  01835E  6FDD               	movwf	221,b	;volatile
 23569                           
 23570                           ; BSR set to: 61
 23571                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 23572  018360  0E06               	movlw	6
 23573  018362  6FDE               	movwf	222,b	;volatile
 23574                           
 23575                           ; BSR set to: 61
 23576                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 23577  018364  6BDF               	clrf	223,b	;volatile
 23578                           
 23579                           ; BSR set to: 61
 23580                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 23581  018366  6BE0               	clrf	224,b	;volatile
 23582                           
 23583                           ; BSR set to: 61
 23584                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 23585  018368  6BE1               	clrf	225,b	;volatile
 23586                           
 23587                           ; BSR set to: 61
 23588                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 23589  01836A  6BE2               	clrf	226,b	;volatile
 23590                           
 23591                           ; BSR set to: 61
 23592                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 23593  01836C  6A1E               	clrf	_uart2TxHead^0,c	;volatile
 23594                           
 23595                           ; BSR set to: 61
 23596                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 23597  01836E  6A1D               	clrf	_uart2TxTail^0,c	;volatile
 23598                           
 23599                           ; BSR set to: 61
 23600                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 23601  018370  0E40               	movlw	64
 23602  018372  6E1C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 23603                           
 23604                           ; BSR set to: 61
 23605                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 23606  018374  6A1B               	clrf	_uart2RxHead^0,c	;volatile
 23607                           
 23608                           ; BSR set to: 61
 23609                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 23610  018376  6A1A               	clrf	_uart2RxTail^0,c	;volatile
 23611                           
 23612                           ; BSR set to: 61
 23613                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 23614  018378  6A19               	clrf	_uart2RxCount^0,c	;volatile
 23615                           
 23616                           ; BSR set to: 61
 23617                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 23618  01837A  0139               	movlb	57	; () banked
 23619  01837C  8596               	bsf	150,2,b	;volatile
 23620                           
 23621                           ; BSR set to: 57
 23622                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23623  01837E  0012               	return		;funcret
 23624  018380                     __end_of_UART2_Initialize:
 23625                           	opt callstack 0
 23626                           
 23627 ;; *************** function _UART2_SetTxInterruptHandler *****************
 23628 ;; Defined at:
 23629 ;;		line 252 in file "mcc_generated_files/uart2.c"
 23630 ;; Parameters:    Size  Location     Type
 23631 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23632 ;;		 -> UART2_Transmit_ISR(1), 
 23633 ;; Auto vars:     Size  Location     Type
 23634 ;;		None
 23635 ;; Return value:  Size  Location     Type
 23636 ;;                  1  [STACK] void 
 23637 ;; Registers used:
 23638 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23639 ;; Tracked objects:
 23640 ;;		On entry : 3F/39
 23641 ;;		On exit  : 0/0
 23642 ;;		Unchanged: 0/0
 23643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23648 ;;Total ram usage:        0 bytes
 23649 ;; Hardware stack levels used:    1
 23650 ;; Hardware stack levels required when called:    7
 23651 ;; This function calls:
 23652 ;;		Nothing
 23653 ;; This function is called by:
 23654 ;;		_UART2_Initialize
 23655 ;; This function uses a reentrant model
 23656 ;;
 23657                           
 23658                           	psect	text97
 23659  018C9A                     __ptext97:
 23660                           	opt callstack 0
 23661  018C9A                     _UART2_SetTxInterruptHandler:
 23662                           	opt callstack 21
 23663                           
 23664                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 23665                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23666                           
 23667                           ; BSR set to: 57
 23668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23669                           ;incstack = 0
 23670  018C9A  50E1               	movf	fsr1l,w,c
 23671  018C9C  0FFD               	addlw	-3
 23672  018C9E  6ED9               	movwf	fsr2l,c
 23673  018CA0  50E2               	movf	fsr1h,w,c
 23674  018CA2  6EDA               	movwf	fsr2h,c
 23675  018CA4  0EFF               	movlw	255
 23676  018CA6  22DA               	addwfc	fsr2h,f,c
 23677  018CA8  006F FF78  F0BE    	movff	postinc2,_UART2_TxInterruptHandler
 23678  018CAE  006F FF78  F0BF    	movff	postinc2,_UART2_TxInterruptHandler+1
 23679  018CB4  006F FF74  F0C0    	movff	postdec2,_UART2_TxInterruptHandler+2
 23680                           
 23681                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23682  018CBA  52E5               	movf	postdec1,f,c
 23683  018CBC  52E5               	movf	postdec1,f,c
 23684  018CBE  52E5               	movf	postdec1,f,c
 23685  018CC0  0012               	return		;funcret
 23686  018CC2                     __end_of_UART2_SetTxInterruptHandler:
 23687                           	opt callstack 0
 23688                           
 23689 ;; *************** function _UART2_SetRxInterruptHandler *****************
 23690 ;; Defined at:
 23691 ;;		line 248 in file "mcc_generated_files/uart2.c"
 23692 ;; Parameters:    Size  Location     Type
 23693 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23694 ;;		 -> UART2_Receive_ISR(1), 
 23695 ;; Auto vars:     Size  Location     Type
 23696 ;;		None
 23697 ;; Return value:  Size  Location     Type
 23698 ;;                  1  [STACK] void 
 23699 ;; Registers used:
 23700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23701 ;; Tracked objects:
 23702 ;;		On entry : 3F/39
 23703 ;;		On exit  : 0/0
 23704 ;;		Unchanged: 0/0
 23705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23710 ;;Total ram usage:        0 bytes
 23711 ;; Hardware stack levels used:    1
 23712 ;; Hardware stack levels required when called:    7
 23713 ;; This function calls:
 23714 ;;		Nothing
 23715 ;; This function is called by:
 23716 ;;		_UART2_Initialize
 23717 ;; This function uses a reentrant model
 23718 ;;
 23719                           
 23720                           	psect	text98
 23721  018CC2                     __ptext98:
 23722                           	opt callstack 0
 23723  018CC2                     _UART2_SetRxInterruptHandler:
 23724                           	opt callstack 21
 23725                           
 23726                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 23727                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23728                           
 23729                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23730                           ;incstack = 0
 23731  018CC2  50E1               	movf	fsr1l,w,c
 23732  018CC4  0FFD               	addlw	-3
 23733  018CC6  6ED9               	movwf	fsr2l,c
 23734  018CC8  50E2               	movf	fsr1h,w,c
 23735  018CCA  6EDA               	movwf	fsr2h,c
 23736  018CCC  0EFF               	movlw	255
 23737  018CCE  22DA               	addwfc	fsr2h,f,c
 23738  018CD0  006F FF78  F001    	movff	postinc2,_UART2_RxInterruptHandler
 23739  018CD6  006F FF78  F002    	movff	postinc2,_UART2_RxInterruptHandler+1
 23740  018CDC  006F FF74  F003    	movff	postdec2,_UART2_RxInterruptHandler+2
 23741                           
 23742                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23743  018CE2  52E5               	movf	postdec1,f,c
 23744  018CE4  52E5               	movf	postdec1,f,c
 23745  018CE6  52E5               	movf	postdec1,f,c
 23746  018CE8  0012               	return		;funcret
 23747  018CEA                     __end_of_UART2_SetRxInterruptHandler:
 23748                           	opt callstack 0
 23749                           
 23750 ;; *************** function _UART1_Initialize *****************
 23751 ;; Defined at:
 23752 ;;		line 79 in file "mcc_generated_files/uart1.c"
 23753 ;; Parameters:    Size  Location     Type
 23754 ;;		None
 23755 ;; Auto vars:     Size  Location     Type
 23756 ;;		None
 23757 ;; Return value:  Size  Location     Type
 23758 ;;                  1  [STACK] void 
 23759 ;; Registers used:
 23760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23761 ;; Tracked objects:
 23762 ;;		On entry : 0/39
 23763 ;;		On exit  : 3F/39
 23764 ;;		Unchanged: 0/0
 23765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23770 ;;Total ram usage:        0 bytes
 23771 ;; Hardware stack levels used:    1
 23772 ;; Hardware stack levels required when called:    8
 23773 ;; This function calls:
 23774 ;;		_UART1_SetRxInterruptHandler
 23775 ;;		_UART1_SetTxInterruptHandler
 23776 ;; This function is called by:
 23777 ;;		_SYSTEM_Initialize
 23778 ;; This function uses a reentrant model
 23779 ;;
 23780                           
 23781                           	psect	text99
 23782  0181FA                     __ptext99:
 23783                           	opt callstack 0
 23784  0181FA                     _UART1_Initialize:
 23785                           	opt callstack 21
 23786                           
 23787                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 23788                           
 23789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23790                           ;incstack = 0
 23791  0181FA  0139               	movlb	57	; () banked
 23792  0181FC  9793               	bcf	147,3,b	;volatile
 23793                           
 23794                           ; BSR set to: 57
 23795                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 23796  0181FE  0E86               	movlw	low _UART1_Receive_ISR
 23797  018200  6EE6               	movwf	postinc1,c
 23798  018202  0E90               	movlw	high _UART1_Receive_ISR
 23799  018204  6EE6               	movwf	postinc1,c
 23800  018206  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 23801  018208  6EE6               	movwf	postinc1,c
 23802  01820A  EC89  F0C6         	call	_UART1_SetRxInterruptHandler	;wreg free
 23803                           
 23804                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 23805  01820E  0139               	movlb	57	; () banked
 23806  018210  9993               	bcf	147,4,b	;volatile
 23807                           
 23808                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 23809  018212  0E50               	movlw	low _UART1_Transmit_ISR
 23810  018214  6EE6               	movwf	postinc1,c
 23811  018216  0E8B               	movlw	high _UART1_Transmit_ISR
 23812  018218  6EE6               	movwf	postinc1,c
 23813  01821A  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 23814  01821C  6EE6               	movwf	postinc1,c
 23815  01821E  EC75  F0C6         	call	_UART1_SetTxInterruptHandler	;wreg free
 23816                           
 23817                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 23818  018222  013D               	movlb	61	; () banked
 23819  018224  6BEC               	clrf	236,b	;volatile
 23820                           
 23821                           ; BSR set to: 61
 23822                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 23823  018226  6BED               	clrf	237,b	;volatile
 23824                           
 23825                           ; BSR set to: 61
 23826                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 23827  018228  6BEE               	clrf	238,b	;volatile
 23828                           
 23829                           ; BSR set to: 61
 23830                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 23831  01822A  6BEF               	clrf	239,b	;volatile
 23832                           
 23833                           ; BSR set to: 61
 23834                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 23835  01822C  6BF0               	clrf	240,b	;volatile
 23836                           
 23837                           ; BSR set to: 61
 23838                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 23839  01822E  6BF1               	clrf	241,b	;volatile
 23840                           
 23841                           ; BSR set to: 61
 23842                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 23843  018230  0EB0               	movlw	176
 23844  018232  6FF2               	movwf	242,b	;volatile
 23845                           
 23846                           ; BSR set to: 61
 23847                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 23848  018234  0E80               	movlw	128
 23849  018236  6FF3               	movwf	243,b	;volatile
 23850                           
 23851                           ; BSR set to: 61
 23852                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 23853  018238  6BF4               	clrf	244,b	;volatile
 23854                           
 23855                           ; BSR set to: 61
 23856                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 23857  01823A  0E82               	movlw	130
 23858  01823C  6FF5               	movwf	245,b	;volatile
 23859                           
 23860                           ; BSR set to: 61
 23861                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 23862  01823E  0E06               	movlw	6
 23863  018240  6FF6               	movwf	246,b	;volatile
 23864                           
 23865                           ; BSR set to: 61
 23866                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 23867  018242  6BF7               	clrf	247,b	;volatile
 23868                           
 23869                           ; BSR set to: 61
 23870                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 23871  018244  6BF8               	clrf	248,b	;volatile
 23872                           
 23873                           ; BSR set to: 61
 23874                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 23875  018246  6BF9               	clrf	249,b	;volatile
 23876                           
 23877                           ; BSR set to: 61
 23878                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 23879  018248  6BFA               	clrf	250,b	;volatile
 23880                           
 23881                           ; BSR set to: 61
 23882                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 23883  01824A  6A24               	clrf	_uart1TxHead^0,c	;volatile
 23884                           
 23885                           ; BSR set to: 61
 23886                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 23887  01824C  6A23               	clrf	_uart1TxTail^0,c	;volatile
 23888                           
 23889                           ; BSR set to: 61
 23890                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 23891  01824E  0E40               	movlw	64
 23892  018250  6E22               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 23893                           
 23894                           ; BSR set to: 61
 23895                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 23896  018252  6A21               	clrf	_uart1RxHead^0,c	;volatile
 23897                           
 23898                           ; BSR set to: 61
 23899                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 23900  018254  6A20               	clrf	_uart1RxTail^0,c	;volatile
 23901                           
 23902                           ; BSR set to: 61
 23903                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 23904  018256  6A1F               	clrf	_uart1RxCount^0,c	;volatile
 23905                           
 23906                           ; BSR set to: 61
 23907                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 23908  018258  0139               	movlb	57	; () banked
 23909  01825A  8793               	bsf	147,3,b	;volatile
 23910                           
 23911                           ; BSR set to: 57
 23912                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23913  01825C  0012               	return		;funcret
 23914  01825E                     __end_of_UART1_Initialize:
 23915                           	opt callstack 0
 23916                           
 23917 ;; *************** function _UART1_SetTxInterruptHandler *****************
 23918 ;; Defined at:
 23919 ;;		line 246 in file "mcc_generated_files/uart1.c"
 23920 ;; Parameters:    Size  Location     Type
 23921 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23922 ;;		 -> UART1_Transmit_ISR(1), 
 23923 ;; Auto vars:     Size  Location     Type
 23924 ;;		None
 23925 ;; Return value:  Size  Location     Type
 23926 ;;                  1  [STACK] void 
 23927 ;; Registers used:
 23928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23929 ;; Tracked objects:
 23930 ;;		On entry : 3F/39
 23931 ;;		On exit  : 0/0
 23932 ;;		Unchanged: 0/0
 23933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23938 ;;Total ram usage:        0 bytes
 23939 ;; Hardware stack levels used:    1
 23940 ;; Hardware stack levels required when called:    7
 23941 ;; This function calls:
 23942 ;;		Nothing
 23943 ;; This function is called by:
 23944 ;;		_UART1_Initialize
 23945 ;; This function uses a reentrant model
 23946 ;;
 23947                           
 23948                           	psect	text100
 23949  018CEA                     __ptext100:
 23950                           	opt callstack 0
 23951  018CEA                     _UART1_SetTxInterruptHandler:
 23952                           	opt callstack 21
 23953                           
 23954                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 23955                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23956                           
 23957                           ; BSR set to: 57
 23958                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23959                           ;incstack = 0
 23960  018CEA  50E1               	movf	fsr1l,w,c
 23961  018CEC  0FFD               	addlw	-3
 23962  018CEE  6ED9               	movwf	fsr2l,c
 23963  018CF0  50E2               	movf	fsr1h,w,c
 23964  018CF2  6EDA               	movwf	fsr2h,c
 23965  018CF4  0EFF               	movlw	255
 23966  018CF6  22DA               	addwfc	fsr2h,f,c
 23967  018CF8  006F FF78  F0B8    	movff	postinc2,_UART1_TxInterruptHandler
 23968  018CFE  006F FF78  F0B9    	movff	postinc2,_UART1_TxInterruptHandler+1
 23969  018D04  006F FF74  F0BA    	movff	postdec2,_UART1_TxInterruptHandler+2
 23970                           
 23971                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23972  018D0A  52E5               	movf	postdec1,f,c
 23973  018D0C  52E5               	movf	postdec1,f,c
 23974  018D0E  52E5               	movf	postdec1,f,c
 23975  018D10  0012               	return		;funcret
 23976  018D12                     __end_of_UART1_SetTxInterruptHandler:
 23977                           	opt callstack 0
 23978                           
 23979 ;; *************** function _UART1_SetRxInterruptHandler *****************
 23980 ;; Defined at:
 23981 ;;		line 241 in file "mcc_generated_files/uart1.c"
 23982 ;; Parameters:    Size  Location     Type
 23983 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23984 ;;		 -> UART1_Receive_ISR(1), 
 23985 ;; Auto vars:     Size  Location     Type
 23986 ;;		None
 23987 ;; Return value:  Size  Location     Type
 23988 ;;                  1  [STACK] void 
 23989 ;; Registers used:
 23990 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23991 ;; Tracked objects:
 23992 ;;		On entry : 3F/39
 23993 ;;		On exit  : 0/0
 23994 ;;		Unchanged: 0/0
 23995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24000 ;;Total ram usage:        0 bytes
 24001 ;; Hardware stack levels used:    1
 24002 ;; Hardware stack levels required when called:    7
 24003 ;; This function calls:
 24004 ;;		Nothing
 24005 ;; This function is called by:
 24006 ;;		_UART1_Initialize
 24007 ;; This function uses a reentrant model
 24008 ;;
 24009                           
 24010                           	psect	text101
 24011  018D12                     __ptext101:
 24012                           	opt callstack 0
 24013  018D12                     _UART1_SetRxInterruptHandler:
 24014                           	opt callstack 21
 24015                           
 24016                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 24017                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24018                           
 24019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24020                           ;incstack = 0
 24021  018D12  50E1               	movf	fsr1l,w,c
 24022  018D14  0FFD               	addlw	-3
 24023  018D16  6ED9               	movwf	fsr2l,c
 24024  018D18  50E2               	movf	fsr1h,w,c
 24025  018D1A  6EDA               	movwf	fsr2h,c
 24026  018D1C  0EFF               	movlw	255
 24027  018D1E  22DA               	addwfc	fsr2h,f,c
 24028  018D20  006F FF78  F0BB    	movff	postinc2,_UART1_RxInterruptHandler
 24029  018D26  006F FF78  F0BC    	movff	postinc2,_UART1_RxInterruptHandler+1
 24030  018D2C  006F FF74  F0BD    	movff	postdec2,_UART1_RxInterruptHandler+2
 24031                           
 24032                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 24033  018D32  52E5               	movf	postdec1,f,c
 24034  018D34  52E5               	movf	postdec1,f,c
 24035  018D36  52E5               	movf	postdec1,f,c
 24036  018D38  0012               	return		;funcret
 24037  018D3A                     __end_of_UART1_SetRxInterruptHandler:
 24038                           	opt callstack 0
 24039                           
 24040 ;; *************** function _TMR6_Initialize *****************
 24041 ;; Defined at:
 24042 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 24043 ;; Parameters:    Size  Location     Type
 24044 ;;		None
 24045 ;; Auto vars:     Size  Location     Type
 24046 ;;		None
 24047 ;; Return value:  Size  Location     Type
 24048 ;;                  1  [STACK] void 
 24049 ;; Registers used:
 24050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24051 ;; Tracked objects:
 24052 ;;		On entry : 3F/39
 24053 ;;		On exit  : 0/0
 24054 ;;		Unchanged: 0/0
 24055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24060 ;;Total ram usage:        0 bytes
 24061 ;; Hardware stack levels used:    1
 24062 ;; Hardware stack levels required when called:    8
 24063 ;; This function calls:
 24064 ;;		_TMR6_SetInterruptHandler
 24065 ;; This function is called by:
 24066 ;;		_SYSTEM_Initialize
 24067 ;; This function uses a reentrant model
 24068 ;;
 24069                           
 24070                           	psect	text102
 24071  018BA8                     __ptext102:
 24072                           	opt callstack 0
 24073  018BA8                     _TMR6_Initialize:
 24074                           	opt callstack 21
 24075                           
 24076                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 24077                           
 24078                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24079                           ;incstack = 0
 24080  018BA8  0E01               	movlw	1
 24081  018BAA  6E96               	movwf	150,c	;volatile
 24082                           
 24083                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 24084  018BAC  6A95               	clrf	149,c	;volatile
 24085                           
 24086                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 24087  018BAE  6A97               	clrf	151,c	;volatile
 24088                           
 24089                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 24090  018BB0  0E7C               	movlw	124
 24091  018BB2  6E93               	movwf	147,c	;volatile
 24092                           
 24093                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 24094  018BB4  6A92               	clrf	146,c	;volatile
 24095                           
 24096                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 24097  018BB6  0139               	movlb	57	; () banked
 24098  018BB8  91A9               	bcf	169,0,b	;volatile
 24099                           
 24100                           ; BSR set to: 57
 24101                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 24102  018BBA  8199               	bsf	153,0,b	;volatile
 24103                           
 24104                           ; BSR set to: 57
 24105                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 24106  018BBC  0E32               	movlw	low _TMR6_DefaultInterruptHandler
 24107  018BBE  6EE6               	movwf	postinc1,c
 24108  018BC0  0E85               	movlw	high _TMR6_DefaultInterruptHandler
 24109  018BC2  6EE6               	movwf	postinc1,c
 24110  018BC4  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 24111  018BC6  6EE6               	movwf	postinc1,c
 24112  018BC8  EC9D  F0C6         	call	_TMR6_SetInterruptHandler	;wreg free
 24113                           
 24114                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 24115  018BCC  0EE0               	movlw	224
 24116  018BCE  6E94               	movwf	148,c	;volatile
 24117                           
 24118                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24119  018BD0  0012               	return		;funcret
 24120  018BD2                     __end_of_TMR6_Initialize:
 24121                           	opt callstack 0
 24122                           
 24123 ;; *************** function _TMR6_SetInterruptHandler *****************
 24124 ;; Defined at:
 24125 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 24126 ;; Parameters:    Size  Location     Type
 24127 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24128 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 24129 ;; Auto vars:     Size  Location     Type
 24130 ;;		None
 24131 ;; Return value:  Size  Location     Type
 24132 ;;                  1  [STACK] void 
 24133 ;; Registers used:
 24134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24135 ;; Tracked objects:
 24136 ;;		On entry : 3F/39
 24137 ;;		On exit  : 0/0
 24138 ;;		Unchanged: 0/0
 24139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24144 ;;Total ram usage:        0 bytes
 24145 ;; Hardware stack levels used:    1
 24146 ;; Hardware stack levels required when called:    7
 24147 ;; This function calls:
 24148 ;;		Nothing
 24149 ;; This function is called by:
 24150 ;;		_TMR6_Initialize
 24151 ;; This function uses a reentrant model
 24152 ;;
 24153                           
 24154                           	psect	text103
 24155  018D3A                     __ptext103:
 24156                           	opt callstack 0
 24157  018D3A                     _TMR6_SetInterruptHandler:
 24158                           	opt callstack 21
 24159                           
 24160                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 24161                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24162                           
 24163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24164                           ;incstack = 0
 24165  018D3A  50E1               	movf	fsr1l,w,c
 24166  018D3C  0FFD               	addlw	-3
 24167  018D3E  6ED9               	movwf	fsr2l,c
 24168  018D40  50E2               	movf	fsr1h,w,c
 24169  018D42  6EDA               	movwf	fsr2h,c
 24170  018D44  0EFF               	movlw	255
 24171  018D46  22DA               	addwfc	fsr2h,f,c
 24172  018D48  006F FF78  F0AF    	movff	postinc2,_TMR6_InterruptHandler
 24173  018D4E  006F FF78  F0B0    	movff	postinc2,_TMR6_InterruptHandler+1
 24174  018D54  006F FF74  F0B1    	movff	postdec2,_TMR6_InterruptHandler+2
 24175                           
 24176                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24177  018D5A  52E5               	movf	postdec1,f,c
 24178  018D5C  52E5               	movf	postdec1,f,c
 24179  018D5E  52E5               	movf	postdec1,f,c
 24180  018D60  0012               	return		;funcret
 24181  018D62                     __end_of_TMR6_SetInterruptHandler:
 24182                           	opt callstack 0
 24183                           
 24184 ;; *************** function _TMR5_Initialize *****************
 24185 ;; Defined at:
 24186 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 24187 ;; Parameters:    Size  Location     Type
 24188 ;;		None
 24189 ;; Auto vars:     Size  Location     Type
 24190 ;;		None
 24191 ;; Return value:  Size  Location     Type
 24192 ;;                  1  [STACK] void 
 24193 ;; Registers used:
 24194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 24195 ;; Tracked objects:
 24196 ;;		On entry : 0/39
 24197 ;;		On exit  : 0/0
 24198 ;;		Unchanged: 0/0
 24199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24204 ;;Total ram usage:        0 bytes
 24205 ;; Hardware stack levels used:    1
 24206 ;; Hardware stack levels required when called:    8
 24207 ;; This function calls:
 24208 ;;		_TMR5_SetInterruptHandler
 24209 ;; This function is called by:
 24210 ;;		_SYSTEM_Initialize
 24211 ;; This function uses a reentrant model
 24212 ;;
 24213                           
 24214                           	psect	text104
 24215  01869E                     __ptext104:
 24216                           	opt callstack 0
 24217  01869E                     _TMR5_Initialize:
 24218                           	opt callstack 21
 24219                           
 24220                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 24221                           
 24222                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24223                           ;incstack = 0
 24224  01869E  6A9B               	clrf	155,c	;volatile
 24225                           
 24226                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 24227  0186A0  6A9C               	clrf	156,c	;volatile
 24228                           
 24229                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 24230  0186A2  0E01               	movlw	1
 24231  0186A4  6E9D               	movwf	157,c	;volatile
 24232                           
 24233                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 24234  0186A6  0E63               	movlw	99
 24235  0186A8  6E99               	movwf	153,c	;volatile
 24236                           
 24237                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 24238  0186AA  0EC0               	movlw	192
 24239  0186AC  6E98               	movwf	152,c	;volatile
 24240                           
 24241                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 24242  0186AE  5098               	movf	152,w,c	;volatile
 24243  0186B0  006F FE64  F025    	movff	16281,btemp	;volatile
 24244  0186B6  6A26               	clrf	(btemp+1)^0,c
 24245  0186B8  0060  F094  F026   	movff	btemp,btemp+1
 24246  0186BE  6A25               	clrf	btemp^0,c
 24247  0186C0  1025               	iorwf	btemp^0,w,c
 24248  0186C2  6E16               	movwf	_timer5ReloadVal^0,c	;volatile
 24249  0186C4  5026               	movf	(btemp+1)^0,w,c
 24250  0186C6  6E17               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 24251                           
 24252                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 24253  0186C8  0139               	movlb	57	; () banked
 24254  0186CA  9DA8               	bcf	168,6,b	;volatile
 24255                           
 24256                           ; BSR set to: 57
 24257                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 24258  0186CC  8D98               	bsf	152,6,b	;volatile
 24259                           
 24260                           ; BSR set to: 57
 24261                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 24262  0186CE  0E52               	movlw	low _TMR5_DefaultInterruptHandler
 24263  0186D0  6EE6               	movwf	postinc1,c
 24264  0186D2  0E8E               	movlw	high _TMR5_DefaultInterruptHandler
 24265  0186D4  6EE6               	movwf	postinc1,c
 24266  0186D6  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 24267  0186D8  6EE6               	movwf	postinc1,c
 24268  0186DA  ECB1  F0C6         	call	_TMR5_SetInterruptHandler	;wreg free
 24269                           
 24270                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 24271  0186DE  0E31               	movlw	49
 24272  0186E0  6E9A               	movwf	154,c	;volatile
 24273                           
 24274                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24275  0186E2  0012               	return		;funcret
 24276  0186E4                     __end_of_TMR5_Initialize:
 24277                           	opt callstack 0
 24278                           
 24279 ;; *************** function _TMR5_SetInterruptHandler *****************
 24280 ;; Defined at:
 24281 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 24282 ;; Parameters:    Size  Location     Type
 24283 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24284 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 24285 ;; Auto vars:     Size  Location     Type
 24286 ;;		None
 24287 ;; Return value:  Size  Location     Type
 24288 ;;                  1  [STACK] void 
 24289 ;; Registers used:
 24290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24291 ;; Tracked objects:
 24292 ;;		On entry : 3F/39
 24293 ;;		On exit  : 0/0
 24294 ;;		Unchanged: 0/0
 24295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24300 ;;Total ram usage:        0 bytes
 24301 ;; Hardware stack levels used:    1
 24302 ;; Hardware stack levels required when called:    7
 24303 ;; This function calls:
 24304 ;;		Nothing
 24305 ;; This function is called by:
 24306 ;;		_TMR5_Initialize
 24307 ;; This function uses a reentrant model
 24308 ;;
 24309                           
 24310                           	psect	text105
 24311  018D62                     __ptext105:
 24312                           	opt callstack 0
 24313  018D62                     _TMR5_SetInterruptHandler:
 24314                           	opt callstack 21
 24315                           
 24316                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 24317                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24318                           
 24319                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24320                           ;incstack = 0
 24321  018D62  50E1               	movf	fsr1l,w,c
 24322  018D64  0FFD               	addlw	-3
 24323  018D66  6ED9               	movwf	fsr2l,c
 24324  018D68  50E2               	movf	fsr1h,w,c
 24325  018D6A  6EDA               	movwf	fsr2h,c
 24326  018D6C  0EFF               	movlw	255
 24327  018D6E  22DA               	addwfc	fsr2h,f,c
 24328  018D70  006F FF78  F0AC    	movff	postinc2,_TMR5_InterruptHandler
 24329  018D76  006F FF78  F0AD    	movff	postinc2,_TMR5_InterruptHandler+1
 24330  018D7C  006F FF74  F0AE    	movff	postdec2,_TMR5_InterruptHandler+2
 24331                           
 24332                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24333  018D82  52E5               	movf	postdec1,f,c
 24334  018D84  52E5               	movf	postdec1,f,c
 24335  018D86  52E5               	movf	postdec1,f,c
 24336  018D88  0012               	return		;funcret
 24337  018D8A                     __end_of_TMR5_SetInterruptHandler:
 24338                           	opt callstack 0
 24339                           
 24340 ;; *************** function _TMR3_Initialize *****************
 24341 ;; Defined at:
 24342 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 24343 ;; Parameters:    Size  Location     Type
 24344 ;;		None
 24345 ;; Auto vars:     Size  Location     Type
 24346 ;;		None
 24347 ;; Return value:  Size  Location     Type
 24348 ;;                  1  [STACK] void 
 24349 ;; Registers used:
 24350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 24351 ;; Tracked objects:
 24352 ;;		On entry : 0/39
 24353 ;;		On exit  : 0/0
 24354 ;;		Unchanged: 0/0
 24355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24360 ;;Total ram usage:        0 bytes
 24361 ;; Hardware stack levels used:    1
 24362 ;; Hardware stack levels required when called:    8
 24363 ;; This function calls:
 24364 ;;		_TMR3_SetInterruptHandler
 24365 ;; This function is called by:
 24366 ;;		_SYSTEM_Initialize
 24367 ;; This function uses a reentrant model
 24368 ;;
 24369                           
 24370                           	psect	text106
 24371  0186E4                     __ptext106:
 24372                           	opt callstack 0
 24373  0186E4                     _TMR3_Initialize:
 24374                           	opt callstack 21
 24375                           
 24376                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 24377                           
 24378                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24379                           ;incstack = 0
 24380  0186E4  6AA7               	clrf	167,c	;volatile
 24381                           
 24382                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 24383  0186E6  6AA8               	clrf	168,c	;volatile
 24384                           
 24385                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 24386  0186E8  0E01               	movlw	1
 24387  0186EA  6EA9               	movwf	169,c	;volatile
 24388                           
 24389                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 24390  0186EC  0E3C               	movlw	60
 24391  0186EE  6EA5               	movwf	165,c	;volatile
 24392                           
 24393                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 24394  0186F0  0EB0               	movlw	176
 24395  0186F2  6EA4               	movwf	164,c	;volatile
 24396                           
 24397                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 24398  0186F4  50A4               	movf	164,w,c	;volatile
 24399  0186F6  006F FE94  F025    	movff	16293,btemp	;volatile
 24400  0186FC  6A26               	clrf	(btemp+1)^0,c
 24401  0186FE  0060  F094  F026   	movff	btemp,btemp+1
 24402  018704  6A25               	clrf	btemp^0,c
 24403  018706  1025               	iorwf	btemp^0,w,c
 24404  018708  6E12               	movwf	_timer3ReloadVal^0,c	;volatile
 24405  01870A  5026               	movf	(btemp+1)^0,w,c
 24406  01870C  6E13               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 24407                           
 24408                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 24409  01870E  0139               	movlb	57	; () banked
 24410  018710  9DA6               	bcf	166,6,b	;volatile
 24411                           
 24412                           ; BSR set to: 57
 24413                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 24414  018712  8D96               	bsf	150,6,b	;volatile
 24415                           
 24416                           ; BSR set to: 57
 24417                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 24418  018714  0E80               	movlw	low _TMR3_DefaultInterruptHandler
 24419  018716  6EE6               	movwf	postinc1,c
 24420  018718  0E92               	movlw	high _TMR3_DefaultInterruptHandler
 24421  01871A  6EE6               	movwf	postinc1,c
 24422  01871C  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 24423  01871E  6EE6               	movwf	postinc1,c
 24424  018720  ECC5  F0C6         	call	_TMR3_SetInterruptHandler	;wreg free
 24425                           
 24426                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 24427  018724  0E31               	movlw	49
 24428  018726  6EA6               	movwf	166,c	;volatile
 24429                           
 24430                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24431  018728  0012               	return		;funcret
 24432  01872A                     __end_of_TMR3_Initialize:
 24433                           	opt callstack 0
 24434                           
 24435 ;; *************** function _TMR3_SetInterruptHandler *****************
 24436 ;; Defined at:
 24437 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 24438 ;; Parameters:    Size  Location     Type
 24439 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24440 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 24441 ;; Auto vars:     Size  Location     Type
 24442 ;;		None
 24443 ;; Return value:  Size  Location     Type
 24444 ;;                  1  [STACK] void 
 24445 ;; Registers used:
 24446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24447 ;; Tracked objects:
 24448 ;;		On entry : 0/1
 24449 ;;		On exit  : 0/0
 24450 ;;		Unchanged: 0/0
 24451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24456 ;;Total ram usage:        0 bytes
 24457 ;; Hardware stack levels used:    1
 24458 ;; Hardware stack levels required when called:    7
 24459 ;; This function calls:
 24460 ;;		Nothing
 24461 ;; This function is called by:
 24462 ;;		_TMR3_Initialize
 24463 ;;		_init_bsoc
 24464 ;; This function uses a reentrant model
 24465 ;;
 24466                           
 24467                           	psect	text107
 24468  018D8A                     __ptext107:
 24469                           	opt callstack 0
 24470  018D8A                     _TMR3_SetInterruptHandler:
 24471                           	opt callstack 22
 24472                           
 24473                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 24474                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24475                           
 24476                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24477                           ;incstack = 0
 24478  018D8A  50E1               	movf	fsr1l,w,c
 24479  018D8C  0FFD               	addlw	-3
 24480  018D8E  6ED9               	movwf	fsr2l,c
 24481  018D90  50E2               	movf	fsr1h,w,c
 24482  018D92  6EDA               	movwf	fsr2h,c
 24483  018D94  0EFF               	movlw	255
 24484  018D96  22DA               	addwfc	fsr2h,f,c
 24485  018D98  006F FF78  F0A9    	movff	postinc2,_TMR3_InterruptHandler
 24486  018D9E  006F FF78  F0AA    	movff	postinc2,_TMR3_InterruptHandler+1
 24487  018DA4  006F FF74  F0AB    	movff	postdec2,_TMR3_InterruptHandler+2
 24488                           
 24489                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24490  018DAA  52E5               	movf	postdec1,f,c
 24491  018DAC  52E5               	movf	postdec1,f,c
 24492  018DAE  52E5               	movf	postdec1,f,c
 24493  018DB0  0012               	return		;funcret
 24494  018DB2                     __end_of_TMR3_SetInterruptHandler:
 24495                           	opt callstack 0
 24496                           
 24497 ;; *************** function _TMR2_Initialize *****************
 24498 ;; Defined at:
 24499 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 24500 ;; Parameters:    Size  Location     Type
 24501 ;;		None
 24502 ;; Auto vars:     Size  Location     Type
 24503 ;;		None
 24504 ;; Return value:  Size  Location     Type
 24505 ;;                  1  [STACK] void 
 24506 ;; Registers used:
 24507 ;;		wreg, status,2
 24508 ;; Tracked objects:
 24509 ;;		On entry : 3F/3F
 24510 ;;		On exit  : 3F/39
 24511 ;;		Unchanged: 0/0
 24512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24517 ;;Total ram usage:        0 bytes
 24518 ;; Hardware stack levels used:    1
 24519 ;; Hardware stack levels required when called:    7
 24520 ;; This function calls:
 24521 ;;		Nothing
 24522 ;; This function is called by:
 24523 ;;		_SYSTEM_Initialize
 24524 ;; This function uses a reentrant model
 24525 ;;
 24526                           
 24527                           	psect	text108
 24528  01912A                     __ptext108:
 24529                           	opt callstack 0
 24530  01912A                     _TMR2_Initialize:
 24531                           	opt callstack 22
 24532                           
 24533                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 24534                           
 24535                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24536                           ;incstack = 0
 24537  01912A  0E01               	movlw	1
 24538  01912C  6EAE               	movwf	174,c	;volatile
 24539                           
 24540                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 24541  01912E  6AAD               	clrf	173,c	;volatile
 24542                           
 24543                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 24544  019130  6AAF               	clrf	175,c	;volatile
 24545                           
 24546                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 24547  019132  0E63               	movlw	99
 24548  019134  6EAB               	movwf	171,c	;volatile
 24549                           
 24550                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 24551  019136  6AAA               	clrf	170,c	;volatile
 24552                           
 24553                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 24554  019138  0139               	movlb	57	; () banked
 24555  01913A  95A4               	bcf	164,2,b	;volatile
 24556                           
 24557                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 24558  01913C  0EC0               	movlw	192
 24559  01913E  6EAC               	movwf	172,c	;volatile
 24560                           
 24561                           ; BSR set to: 57
 24562                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24563  019140  0012               	return		;funcret
 24564  019142                     __end_of_TMR2_Initialize:
 24565                           	opt callstack 0
 24566                           
 24567 ;; *************** function _SPI1_Initialize *****************
 24568 ;; Defined at:
 24569 ;;		line 64 in file "mcc_generated_files/spi1.c"
 24570 ;; Parameters:    Size  Location     Type
 24571 ;;		None
 24572 ;; Auto vars:     Size  Location     Type
 24573 ;;		None
 24574 ;; Return value:  Size  Location     Type
 24575 ;;                  1  [STACK] void 
 24576 ;; Registers used:
 24577 ;;		wreg, status,2
 24578 ;; Tracked objects:
 24579 ;;		On entry : 3F/39
 24580 ;;		On exit  : 3F/3D
 24581 ;;		Unchanged: 0/0
 24582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24587 ;;Total ram usage:        0 bytes
 24588 ;; Hardware stack levels used:    1
 24589 ;; Hardware stack levels required when called:    7
 24590 ;; This function calls:
 24591 ;;		Nothing
 24592 ;; This function is called by:
 24593 ;;		_SYSTEM_Initialize
 24594 ;; This function uses a reentrant model
 24595 ;;
 24596                           
 24597                           	psect	text109
 24598  019142                     __ptext109:
 24599                           	opt callstack 0
 24600  019142                     _SPI1_Initialize:
 24601                           	opt callstack 22
 24602                           
 24603                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 24604                           
 24605                           ; BSR set to: 57
 24606                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24607                           ;incstack = 0
 24608  019142  0E40               	movlw	64
 24609  019144  013D               	movlb	61	; () banked
 24610  019146  6F15               	movwf	21,b	;volatile
 24611                           
 24612                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 24613  019148  0E03               	movlw	3
 24614  01914A  6F16               	movwf	22,b	;volatile
 24615                           
 24616                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 24617  01914C  0E4F               	movlw	79
 24618  01914E  6F19               	movwf	25,b	;volatile
 24619                           
 24620                           ; BSR set to: 61
 24621                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 24622  019150  6B1C               	clrf	28,b	;volatile
 24623                           
 24624                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 24625  019152  0E83               	movlw	131
 24626  019154  6F14               	movwf	20,b	;volatile
 24627                           
 24628                           ; BSR set to: 61
 24629                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24630  019156  0012               	return		;funcret
 24631  019158                     __end_of_SPI1_Initialize:
 24632                           	opt callstack 0
 24633                           
 24634 ;; *************** function _PWM8_Initialize *****************
 24635 ;; Defined at:
 24636 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 24637 ;; Parameters:    Size  Location     Type
 24638 ;;		None
 24639 ;; Auto vars:     Size  Location     Type
 24640 ;;		None
 24641 ;; Return value:  Size  Location     Type
 24642 ;;                  1  [STACK] void 
 24643 ;; Registers used:
 24644 ;;		wreg, status,2
 24645 ;; Tracked objects:
 24646 ;;		On entry : 0/3E
 24647 ;;		On exit  : 3F/3F
 24648 ;;		Unchanged: 0/0
 24649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24653 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24654 ;;Total ram usage:        0 bytes
 24655 ;; Hardware stack levels used:    1
 24656 ;; Hardware stack levels required when called:    7
 24657 ;; This function calls:
 24658 ;;		Nothing
 24659 ;; This function is called by:
 24660 ;;		_SYSTEM_Initialize
 24661 ;; This function uses a reentrant model
 24662 ;;
 24663                           
 24664                           	psect	text110
 24665  019158                     __ptext110:
 24666                           	opt callstack 0
 24667  019158                     _PWM8_Initialize:
 24668                           	opt callstack 22
 24669                           
 24670                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 24671                           
 24672                           ; BSR set to: 61
 24673                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24674                           ;incstack = 0
 24675  019158  0E80               	movlw	128
 24676  01915A  6E62               	movwf	98,c	;volatile
 24677                           
 24678                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 24679  01915C  6A61               	clrf	97,c	;volatile
 24680                           
 24681                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 24682  01915E  0E40               	movlw	64
 24683  019160  6E60               	movwf	96,c	;volatile
 24684                           
 24685                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 24686  019162  013F               	movlb	63	; () banked
 24687  019164  515F               	movf	95,w,b	;volatile
 24688  019166  0B3F               	andlw	-193
 24689  019168  0940               	iorlw	64
 24690  01916A  6F5F               	movwf	95,b	;volatile
 24691                           
 24692                           ; BSR set to: 63
 24693                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24694  01916C  0012               	return		;funcret
 24695  01916E                     __end_of_PWM8_Initialize:
 24696                           	opt callstack 0
 24697                           
 24698 ;; *************** function _PMD_Initialize *****************
 24699 ;; Defined at:
 24700 ;;		line 90 in file "mcc_generated_files/mcc.c"
 24701 ;; Parameters:    Size  Location     Type
 24702 ;;		None
 24703 ;; Auto vars:     Size  Location     Type
 24704 ;;		None
 24705 ;; Return value:  Size  Location     Type
 24706 ;;                  1  [STACK] void 
 24707 ;; Registers used:
 24708 ;;		None
 24709 ;; Tracked objects:
 24710 ;;		On entry : 3F/39
 24711 ;;		On exit  : 3F/39
 24712 ;;		Unchanged: 0/0
 24713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24718 ;;Total ram usage:        0 bytes
 24719 ;; Hardware stack levels used:    1
 24720 ;; Hardware stack levels required when called:    7
 24721 ;; This function calls:
 24722 ;;		Nothing
 24723 ;; This function is called by:
 24724 ;;		_SYSTEM_Initialize
 24725 ;; This function uses a reentrant model
 24726 ;;
 24727                           
 24728                           	psect	text111
 24729  019184                     __ptext111:
 24730                           	opt callstack 0
 24731  019184                     _PMD_Initialize:
 24732                           	opt callstack 22
 24733                           
 24734                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 24735                           
 24736                           ; BSR set to: 63
 24737                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24738                           ;incstack = 0
 24739  019184  0139               	movlb	57	; () banked
 24740  019186  6BC0               	clrf	192,b	;volatile
 24741                           
 24742                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 24743  019188  6BC1               	clrf	193,b	;volatile
 24744                           
 24745                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 24746  01918A  6BC2               	clrf	194,b	;volatile
 24747                           
 24748                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 24749  01918C  6BC3               	clrf	195,b	;volatile
 24750                           
 24751                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 24752  01918E  6BC4               	clrf	196,b	;volatile
 24753                           
 24754                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 24755  019190  6BC5               	clrf	197,b	;volatile
 24756                           
 24757                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 24758  019192  6BC6               	clrf	198,b	;volatile
 24759                           
 24760                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 24761  019194  6BC7               	clrf	199,b	;volatile
 24762                           
 24763                           ; BSR set to: 57
 24764                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24765  019196  0012               	return		;funcret
 24766  019198                     __end_of_PMD_Initialize:
 24767                           	opt callstack 0
 24768                           
 24769 ;; *************** function _PIN_MANAGER_Initialize *****************
 24770 ;; Defined at:
 24771 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 24772 ;; Parameters:    Size  Location     Type
 24773 ;;		None
 24774 ;; Auto vars:     Size  Location     Type
 24775 ;;		None
 24776 ;; Return value:  Size  Location     Type
 24777 ;;                  1  [STACK] void 
 24778 ;; Registers used:
 24779 ;;		wreg, status,2
 24780 ;; Tracked objects:
 24781 ;;		On entry : 3F/39
 24782 ;;		On exit  : 3F/3A
 24783 ;;		Unchanged: 0/0
 24784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24789 ;;Total ram usage:        0 bytes
 24790 ;; Hardware stack levels used:    1
 24791 ;; Hardware stack levels required when called:    7
 24792 ;; This function calls:
 24793 ;;		Nothing
 24794 ;; This function is called by:
 24795 ;;		_SYSTEM_Initialize
 24796 ;; This function uses a reentrant model
 24797 ;;
 24798                           
 24799                           	psect	text112
 24800  017CC0                     __ptext112:
 24801                           	opt callstack 0
 24802  017CC0                     _PIN_MANAGER_Initialize:
 24803                           	opt callstack 22
 24804                           
 24805                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 24806                           
 24807                           ; BSR set to: 57
 24808                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24809                           ;incstack = 0
 24810  017CC0  0E07               	movlw	7
 24811  017CC2  6EBE               	movwf	190,c	;volatile
 24812                           
 24813                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 24814  017CC4  0E80               	movlw	128
 24815  017CC6  6EBD               	movwf	189,c	;volatile
 24816                           
 24817                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 24818  017CC8  6ABA               	clrf	186,c	;volatile
 24819                           
 24820                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 24821  017CCA  6ABF               	clrf	191,c	;volatile
 24822                           
 24823                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 24824  017CCC  6ABB               	clrf	187,c	;volatile
 24825                           
 24826                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 24827  017CCE  0E07               	movlw	7
 24828  017CD0  6EBC               	movwf	188,c	;volatile
 24829                           
 24830                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 24831  017CD2  6AC6               	clrf	198,c	;volatile
 24832                           
 24833                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 24834  017CD4  0E0F               	movlw	15
 24835  017CD6  6EC7               	movwf	199,c	;volatile
 24836                           
 24837                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 24838  017CD8  68C2               	setf	194,c	;volatile
 24839                           
 24840                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 24841  017CDA  0EBF               	movlw	191
 24842  017CDC  6EC3               	movwf	195,c	;volatile
 24843                           
 24844                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 24845  017CDE  0E90               	movlw	144
 24846  017CE0  6EC4               	movwf	196,c	;volatile
 24847                           
 24848                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 24849  017CE2  0E0C               	movlw	12
 24850  017CE4  6EC5               	movwf	197,c	;volatile
 24851                           
 24852                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 24853  017CE6  013A               	movlb	58	; () banked
 24854  017CE8  6B70               	clrf	112,b	;volatile
 24855                           
 24856                           ; BSR set to: 58
 24857                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 24858  017CEA  6B60               	clrf	96,b	;volatile
 24859                           
 24860                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 24861  017CEC  0E3C               	movlw	60
 24862  017CEE  6F50               	movwf	80,b	;volatile
 24863                           
 24864                           ; BSR set to: 58
 24865                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 24866  017CF0  6B80               	clrf	128,b	;volatile
 24867                           
 24868                           ; BSR set to: 58
 24869                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 24870  017CF2  6B90               	clrf	144,b	;volatile
 24871                           
 24872                           ; BSR set to: 58
 24873                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 24874  017CF4  6940               	setf	64,b	;volatile
 24875                           
 24876                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 24877  017CF6  0E0C               	movlw	12
 24878  017CF8  6F71               	movwf	113,b	;volatile
 24879                           
 24880                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 24881  017CFA  0E0F               	movlw	15
 24882  017CFC  6F91               	movwf	145,b	;volatile
 24883                           
 24884                           ; BSR set to: 58
 24885                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 24886  017CFE  6B81               	clrf	129,b	;volatile
 24887                           
 24888                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 24889  017D00  0E83               	movlw	131
 24890  017D02  6F51               	movwf	81,b	;volatile
 24891                           
 24892                           ; BSR set to: 58
 24893                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 24894  017D04  6B41               	clrf	65,b	;volatile
 24895                           
 24896                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 24897  017D06  0E97               	movlw	151
 24898  017D08  6F61               	movwf	97,b	;volatile
 24899                           
 24900                           ; BSR set to: 58
 24901                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 24902  017D0A  6B82               	clrf	130,b	;volatile
 24903                           
 24904                           ; BSR set to: 58
 24905                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 24906  017D0C  6B92               	clrf	146,b	;volatile
 24907                           
 24908                           ; BSR set to: 58
 24909                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 24910  017D0E  6B42               	clrf	66,b	;volatile
 24911                           
 24912                           ; BSR set to: 58
 24913                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 24914  017D10  6B52               	clrf	82,b	;volatile
 24915                           
 24916                           ; BSR set to: 58
 24917                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 24918  017D12  6B62               	clrf	98,b	;volatile
 24919                           
 24920                           ; BSR set to: 58
 24921                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 24922  017D14  6B72               	clrf	114,b	;volatile
 24923                           
 24924                           ; BSR set to: 58
 24925                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 24926  017D16  6943               	setf	67,b	;volatile
 24927                           
 24928                           ; BSR set to: 58
 24929                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 24930  017D18  6953               	setf	83,b	;volatile
 24931                           
 24932                           ; BSR set to: 58
 24933                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 24934  017D1A  6963               	setf	99,b	;volatile
 24935                           
 24936                           ; BSR set to: 58
 24937                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 24938  017D1C  6973               	setf	115,b	;volatile
 24939                           
 24940                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 24941  017D1E  0E07               	movlw	7
 24942  017D20  6F83               	movwf	131,b	;volatile
 24943                           
 24944                           ; BSR set to: 58
 24945                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 24946  017D22  6993               	setf	147,b	;volatile
 24947                           
 24948                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 24949  017D24  0E0F               	movlw	15
 24950  017D26  6FE8               	movwf	232,b	;volatile
 24951                           
 24952                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 24953  017D28  0E13               	movlw	19
 24954  017D2A  6FDE               	movwf	222,b	;volatile
 24955                           
 24956                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 24957  017D2C  0E16               	movlw	22
 24958  017D2E  6F0E               	movwf	14,b	;volatile
 24959                           
 24960                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 24961  017D30  0E1E               	movlw	30
 24962  017D32  6F13               	movwf	19,b	;volatile
 24963                           
 24964                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 24965  017D34  0E08               	movlw	8
 24966  017D36  6FC0               	movwf	192,b	;volatile
 24967                           
 24968                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 24969  017D38  0E10               	movlw	16
 24970  017D3A  6F19               	movwf	25,b	;volatile
 24971                           
 24972                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 24973  017D3C  0E09               	movlw	9
 24974  017D3E  6FC1               	movwf	193,b	;volatile
 24975                           
 24976                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 24977  017D40  0E1F               	movlw	31
 24978  017D42  6F15               	movwf	21,b	;volatile
 24979                           
 24980                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 24981  017D44  0E13               	movlw	19
 24982  017D46  6F16               	movwf	22,b	;volatile
 24983                           
 24984                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 24985  017D48  0E17               	movlw	23
 24986  017D4A  6FE5               	movwf	229,b	;volatile
 24987                           
 24988                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 24989  017D4C  0E14               	movlw	20
 24990  017D4E  6FDF               	movwf	223,b	;volatile
 24991                           
 24992                           ; BSR set to: 58
 24993                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 24994  017D50  0012               	return		;funcret
 24995  017D52                     __end_of_PIN_MANAGER_Initialize:
 24996                           	opt callstack 0
 24997                           
 24998 ;; *************** function _OSCILLATOR_Initialize *****************
 24999 ;; Defined at:
 25000 ;;		line 72 in file "mcc_generated_files/mcc.c"
 25001 ;; Parameters:    Size  Location     Type
 25002 ;;		None
 25003 ;; Auto vars:     Size  Location     Type
 25004 ;;		None
 25005 ;; Return value:  Size  Location     Type
 25006 ;;                  1  [STACK] void 
 25007 ;; Registers used:
 25008 ;;		wreg, status,2
 25009 ;; Tracked objects:
 25010 ;;		On entry : 3F/3A
 25011 ;;		On exit  : 3F/39
 25012 ;;		Unchanged: 0/0
 25013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25018 ;;Total ram usage:        0 bytes
 25019 ;; Hardware stack levels used:    1
 25020 ;; Hardware stack levels required when called:    7
 25021 ;; This function calls:
 25022 ;;		Nothing
 25023 ;; This function is called by:
 25024 ;;		_SYSTEM_Initialize
 25025 ;; This function uses a reentrant model
 25026 ;;
 25027                           
 25028                           	psect	text113
 25029  01916E                     __ptext113:
 25030                           	opt callstack 0
 25031  01916E                     _OSCILLATOR_Initialize:
 25032                           	opt callstack 22
 25033                           
 25034                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 25035                           
 25036                           ; BSR set to: 58
 25037                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25038                           ;incstack = 0
 25039  01916E  0E20               	movlw	32
 25040  019170  0139               	movlb	57	; () banked
 25041  019172  6FD9               	movwf	217,b	;volatile
 25042                           
 25043                           ; BSR set to: 57
 25044                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 25045  019174  6BDB               	clrf	219,b	;volatile
 25046                           
 25047                           ; BSR set to: 57
 25048                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 25049  019176  6BDD               	clrf	221,b	;volatile
 25050                           
 25051                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 25052  019178  0E02               	movlw	2
 25053  01917A  6FDF               	movwf	223,b	;volatile
 25054                           
 25055                           ; BSR set to: 57
 25056                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 25057  01917C  6BDE               	clrf	222,b	;volatile
 25058  01917E                     l173:
 25059                           
 25060                           ; BSR set to: 57
 25061                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 25062  01917E  B1DC               	btfsc	220,0,b	;volatile
 25063  019180  0012               	return	
 25064  019182  D7FD               	goto	l173
 25065  019184                     __end_of_OSCILLATOR_Initialize:
 25066                           	opt callstack 0
 25067                           
 25068 ;; *************** function _INTERRUPT_Initialize *****************
 25069 ;; Defined at:
 25070 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 25071 ;; Parameters:    Size  Location     Type
 25072 ;;		None
 25073 ;; Auto vars:     Size  Location     Type
 25074 ;;  state           1  [STACK] _Bool 
 25075 ;; Return value:  Size  Location     Type
 25076 ;;                  1  [STACK] void 
 25077 ;; Registers used:
 25078 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 25079 ;; Tracked objects:
 25080 ;;		On entry : 0/0
 25081 ;;		On exit  : 3F/39
 25082 ;;		Unchanged: 0/0
 25083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25088 ;;Total ram usage:        0 bytes
 25089 ;; Hardware stack levels used:    1
 25090 ;; Hardware stack levels required when called:    7
 25091 ;; This function calls:
 25092 ;;		Nothing
 25093 ;; This function is called by:
 25094 ;;		_SYSTEM_Initialize
 25095 ;; This function uses a reentrant model
 25096 ;;
 25097                           
 25098                           	psect	text114
 25099  01812E                     __ptext114:
 25100                           	opt callstack 0
 25101  01812E                     _INTERRUPT_Initialize:
 25102                           	opt callstack 0
 25103                           
 25104                           ; BSR set to: 57
 25105                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25106  01812E  52E6               	movf	postinc1,f,c
 25107                           
 25108                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 25109                           
 25110                           ;incstack = 0
 25111  018130  8AD2               	bsf	210,5,c	;volatile
 25112                           
 25113                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 25114  018132  AED2               	btfss	16338,7,c	;volatile
 25115  018134  D003               	goto	u8130
 25116  018136  6A30               	clrf	(btemp+11)^0,c
 25117  018138  2A30               	incf	(btemp+11)^0,f,c
 25118  01813A  D001               	goto	u8148
 25119  01813C                     u8130:
 25120  01813C  6A30               	clrf	(btemp+11)^0,c
 25121  01813E                     u8148:
 25122                           
 25123                           ;stkvar	_state @ sp[(-1)+0]
 25124  01813E  0EFF               	movlw	-1
 25125  018140  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 25126                           
 25127                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 25128  018146  9ED2               	bcf	16338,7,c	;volatile
 25129                           
 25130                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 25131  018148  0E55               	movlw	85
 25132  01814A  6ED4               	movwf	212,c	;volatile
 25133                           
 25134                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 25135  01814C  0EAA               	movlw	170
 25136  01814E  6ED4               	movwf	212,c	;volatile
 25137                           
 25138                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 25139  018150  90D4               	bcf	212,0,c	;volatile
 25140                           
 25141                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 25142  018152  0138               	movlb	56	; () banked
 25143  018154  6B9F               	clrf	159,b	;volatile
 25144                           
 25145                           ; BSR set to: 56
 25146                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 25147  018156  6B9E               	clrf	158,b	;volatile
 25148                           
 25149                           ; BSR set to: 56
 25150                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 25151  018158  0E08               	movlw	8
 25152  01815A  6F9D               	movwf	157,b	;volatile
 25153                           
 25154                           ; BSR set to: 56
 25155                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 25156  01815C  0E55               	movlw	85
 25157  01815E  6ED4               	movwf	212,c	;volatile
 25158                           
 25159                           ; BSR set to: 56
 25160                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 25161  018160  0EAA               	movlw	170
 25162  018162  6ED4               	movwf	212,c	;volatile
 25163                           
 25164                           ; BSR set to: 56
 25165                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 25166  018164  80D4               	bsf	212,0,c	;volatile
 25167                           
 25168                           ; BSR set to: 56
 25169                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 25170                           ;stkvar	_state @ sp[(-1)+0]
 25171  018166  0EFF               	movlw	-1
 25172  018168  B0E3               	btfsc	plusw1,0,c
 25173  01816A  D002               	bra	u8155
 25174  01816C  9ED2               	bcf	16338,7,c	;volatile
 25175  01816E  D001               	bra	u8156
 25176  018170                     u8155:
 25177  018170  8ED2               	bsf	16338,7,c	;volatile
 25178  018172                     u8156:
 25179                           
 25180                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 25181  018172  0139               	movlb	57	; () banked
 25182  018174  8782               	bsf	130,3,b	;volatile
 25183                           
 25184                           ; BSR set to: 57
 25185                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 25186  018176  8382               	bsf	130,1,b	;volatile
 25187                           
 25188                           ; BSR set to: 57
 25189                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 25190  018178  8182               	bsf	130,0,b	;volatile
 25191                           
 25192                           ; BSR set to: 57
 25193                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 25194  01817A  8582               	bsf	130,2,b	;volatile
 25195                           
 25196                           ; BSR set to: 57
 25197                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 25198  01817C  8786               	bsf	134,3,b	;volatile
 25199                           
 25200                           ; BSR set to: 57
 25201                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 25202  01817E  8586               	bsf	134,2,b	;volatile
 25203                           
 25204                           ; BSR set to: 57
 25205                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 25206  018180  8983               	bsf	131,4,b	;volatile
 25207                           
 25208                           ; BSR set to: 57
 25209                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 25210  018182  8783               	bsf	131,3,b	;volatile
 25211                           
 25212                           ; BSR set to: 57
 25213                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 25214  018184  8181               	bsf	129,0,b	;volatile
 25215                           
 25216                           ; BSR set to: 57
 25217                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 0;
 25218  018186  9185               	bcf	133,0,b	;volatile
 25219                           
 25220                           ; BSR set to: 57
 25221                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 25222  018188  8189               	bsf	137,0,b	;volatile
 25223                           
 25224                           ; BSR set to: 57
 25225                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 25226  01818A  9D88               	bcf	136,6,b	;volatile
 25227                           
 25228                           ; BSR set to: 57
 25229                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 25230  01818C  8581               	bsf	129,2,b	;volatile
 25231                           
 25232                           ; BSR set to: 57
 25233                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 25234  01818E  8781               	bsf	129,3,b	;volatile
 25235                           
 25236                           ; BSR set to: 57
 25237                           ;mcc_generated_files/interrupt_manager.c: 86:     IPR6bits.TMR3IP = 0;
 25238  018190  9D86               	bcf	134,6,b	;volatile
 25239                           
 25240                           ; BSR set to: 57
 25241                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 25242  018192  52E5               	movf	postdec1,f,c
 25243  018194  0012               	return		;funcret
 25244  018196                     __end_of_INTERRUPT_Initialize:
 25245                           	opt callstack 0
 25246                           
 25247 ;; *************** function _FVR_Initialize *****************
 25248 ;; Defined at:
 25249 ;;		line 58 in file "mcc_generated_files/fvr.c"
 25250 ;; Parameters:    Size  Location     Type
 25251 ;;		None
 25252 ;; Auto vars:     Size  Location     Type
 25253 ;;		None
 25254 ;; Return value:  Size  Location     Type
 25255 ;;                  1  [STACK] void 
 25256 ;; Registers used:
 25257 ;;		wreg, status,2
 25258 ;; Tracked objects:
 25259 ;;		On entry : 3F/39
 25260 ;;		On exit  : 3F/3E
 25261 ;;		Unchanged: 0/0
 25262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25267 ;;Total ram usage:        0 bytes
 25268 ;; Hardware stack levels used:    1
 25269 ;; Hardware stack levels required when called:    7
 25270 ;; This function calls:
 25271 ;;		Nothing
 25272 ;; This function is called by:
 25273 ;;		_SYSTEM_Initialize
 25274 ;; This function uses a reentrant model
 25275 ;;
 25276                           
 25277                           	psect	text115
 25278  019252                     __ptext115:
 25279                           	opt callstack 0
 25280  019252                     _FVR_Initialize:
 25281                           	opt callstack 22
 25282                           
 25283                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 25284                           
 25285                           ; BSR set to: 57
 25286                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25287                           ;incstack = 0
 25288  019252  0EAF               	movlw	175
 25289  019254  013E               	movlb	62	; () banked
 25290  019256  6FC1               	movwf	193,b	;volatile
 25291                           
 25292                           ; BSR set to: 62
 25293                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 25294  019258  0012               	return		;funcret
 25295  01925A                     __end_of_FVR_Initialize:
 25296                           	opt callstack 0
 25297                           
 25298 ;; *************** function _EXT_INT_Initialize *****************
 25299 ;; Defined at:
 25300 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 25301 ;; Parameters:    Size  Location     Type
 25302 ;;		None
 25303 ;; Auto vars:     Size  Location     Type
 25304 ;;		None
 25305 ;; Return value:  Size  Location     Type
 25306 ;;                  1  [STACK] void 
 25307 ;; Registers used:
 25308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25309 ;; Tracked objects:
 25310 ;;		On entry : 3F/39
 25311 ;;		On exit  : 3F/39
 25312 ;;		Unchanged: 0/0
 25313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25318 ;;Total ram usage:        0 bytes
 25319 ;; Hardware stack levels used:    1
 25320 ;; Hardware stack levels required when called:    8
 25321 ;; This function calls:
 25322 ;;		_INT0_SetInterruptHandler
 25323 ;;		_INT1_SetInterruptHandler
 25324 ;; This function is called by:
 25325 ;;		_SYSTEM_Initialize
 25326 ;; This function uses a reentrant model
 25327 ;;
 25328                           
 25329                           	psect	text116
 25330  018A30                     __ptext116:
 25331                           	opt callstack 0
 25332  018A30                     _EXT_INT_Initialize:
 25333                           	opt callstack 21
 25334                           
 25335                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 25336                           
 25337                           ; BSR set to: 62
 25338                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25339                           ;incstack = 0
 25340  018A30  0139               	movlb	57	; () banked
 25341  018A32  91A1               	bcf	161,0,b	;volatile
 25342                           
 25343                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 25344  018A34  90D2               	bcf	210,0,c	;volatile
 25345                           
 25346                           ; BSR set to: 57
 25347                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 25348  018A36  0E82               	movlw	low _INT0_DefaultInterruptHandler
 25349  018A38  6EE6               	movwf	postinc1,c
 25350  018A3A  0E92               	movlw	high _INT0_DefaultInterruptHandler
 25351  018A3C  6EE6               	movwf	postinc1,c
 25352  018A3E  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 25353  018A40  6EE6               	movwf	postinc1,c
 25354  018A42  ECED  F0C6         	call	_INT0_SetInterruptHandler	;wreg free
 25355                           
 25356                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 25357  018A46  0139               	movlb	57	; () banked
 25358  018A48  8191               	bsf	145,0,b	;volatile
 25359                           
 25360                           ; BSR set to: 57
 25361                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 25362  018A4A  91A5               	bcf	165,0,b	;volatile
 25363                           
 25364                           ; BSR set to: 57
 25365                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 25366  018A4C  92D2               	bcf	210,1,c	;volatile
 25367                           
 25368                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 25369  018A4E  0E7E               	movlw	low _INT1_DefaultInterruptHandler
 25370  018A50  6EE6               	movwf	postinc1,c
 25371  018A52  0E92               	movlw	high _INT1_DefaultInterruptHandler
 25372  018A54  6EE6               	movwf	postinc1,c
 25373  018A56  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 25374  018A58  6EE6               	movwf	postinc1,c
 25375  018A5A  ECD9  F0C6         	call	_INT1_SetInterruptHandler	;wreg free
 25376                           
 25377                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 25378  018A5E  0139               	movlb	57	; () banked
 25379  018A60  8195               	bsf	149,0,b	;volatile
 25380                           
 25381                           ; BSR set to: 57
 25382                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 25383  018A62  0012               	return		;funcret
 25384  018A64                     __end_of_EXT_INT_Initialize:
 25385                           	opt callstack 0
 25386                           
 25387 ;; *************** function _INT1_SetInterruptHandler *****************
 25388 ;; Defined at:
 25389 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 25390 ;; Parameters:    Size  Location     Type
 25391 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25392 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 25393 ;; Auto vars:     Size  Location     Type
 25394 ;;		None
 25395 ;; Return value:  Size  Location     Type
 25396 ;;                  1  [STACK] void 
 25397 ;; Registers used:
 25398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25399 ;; Tracked objects:
 25400 ;;		On entry : 3F/39
 25401 ;;		On exit  : 0/0
 25402 ;;		Unchanged: 0/0
 25403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25408 ;;Total ram usage:        0 bytes
 25409 ;; Hardware stack levels used:    1
 25410 ;; Hardware stack levels required when called:    7
 25411 ;; This function calls:
 25412 ;;		Nothing
 25413 ;; This function is called by:
 25414 ;;		_EXT_INT_Initialize
 25415 ;;		_start_switch_handler
 25416 ;; This function uses a reentrant model
 25417 ;;
 25418                           
 25419                           	psect	text117
 25420  018DB2                     __ptext117:
 25421                           	opt callstack 0
 25422  018DB2                     _INT1_SetInterruptHandler:
 25423                           	opt callstack 22
 25424                           
 25425                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 25426                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25427                           
 25428                           ; BSR set to: 57
 25429                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25430                           ;incstack = 0
 25431  018DB2  50E1               	movf	fsr1l,w,c
 25432  018DB4  0FFD               	addlw	-3
 25433  018DB6  6ED9               	movwf	fsr2l,c
 25434  018DB8  50E2               	movf	fsr1h,w,c
 25435  018DBA  6EDA               	movwf	fsr2h,c
 25436  018DBC  0EFF               	movlw	255
 25437  018DBE  22DA               	addwfc	fsr2h,f,c
 25438  018DC0  006F FF78  F004    	movff	postinc2,_INT1_InterruptHandler
 25439  018DC6  006F FF78  F005    	movff	postinc2,_INT1_InterruptHandler+1
 25440  018DCC  006F FF74  F006    	movff	postdec2,_INT1_InterruptHandler+2
 25441                           
 25442                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25443  018DD2  52E5               	movf	postdec1,f,c
 25444  018DD4  52E5               	movf	postdec1,f,c
 25445  018DD6  52E5               	movf	postdec1,f,c
 25446  018DD8  0012               	return		;funcret
 25447  018DDA                     __end_of_INT1_SetInterruptHandler:
 25448                           	opt callstack 0
 25449                           
 25450 ;; *************** function _INT0_SetInterruptHandler *****************
 25451 ;; Defined at:
 25452 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 25453 ;; Parameters:    Size  Location     Type
 25454 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25455 ;;		 -> INT0_DefaultInterruptHandler(1), 
 25456 ;; Auto vars:     Size  Location     Type
 25457 ;;		None
 25458 ;; Return value:  Size  Location     Type
 25459 ;;                  1  [STACK] void 
 25460 ;; Registers used:
 25461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25462 ;; Tracked objects:
 25463 ;;		On entry : 3F/39
 25464 ;;		On exit  : 0/0
 25465 ;;		Unchanged: 0/0
 25466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25471 ;;Total ram usage:        0 bytes
 25472 ;; Hardware stack levels used:    1
 25473 ;; Hardware stack levels required when called:    7
 25474 ;; This function calls:
 25475 ;;		Nothing
 25476 ;; This function is called by:
 25477 ;;		_EXT_INT_Initialize
 25478 ;; This function uses a reentrant model
 25479 ;;
 25480                           
 25481                           	psect	text118
 25482  018DDA                     __ptext118:
 25483                           	opt callstack 0
 25484  018DDA                     _INT0_SetInterruptHandler:
 25485                           	opt callstack 21
 25486                           
 25487                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 25488                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25489                           
 25490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25491                           ;incstack = 0
 25492  018DDA  50E1               	movf	fsr1l,w,c
 25493  018DDC  0FFD               	addlw	-3
 25494  018DDE  6ED9               	movwf	fsr2l,c
 25495  018DE0  50E2               	movf	fsr1h,w,c
 25496  018DE2  6EDA               	movwf	fsr2h,c
 25497  018DE4  0EFF               	movlw	255
 25498  018DE6  22DA               	addwfc	fsr2h,f,c
 25499  018DE8  006F FF78  F007    	movff	postinc2,_INT0_InterruptHandler
 25500  018DEE  006F FF78  F008    	movff	postinc2,_INT0_InterruptHandler+1
 25501  018DF4  006F FF74  F009    	movff	postdec2,_INT0_InterruptHandler+2
 25502                           
 25503                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 25504  018DFA  52E5               	movf	postdec1,f,c
 25505  018DFC  52E5               	movf	postdec1,f,c
 25506  018DFE  52E5               	movf	postdec1,f,c
 25507  018E00  0012               	return		;funcret
 25508  018E02                     __end_of_INT0_SetInterruptHandler:
 25509                           	opt callstack 0
 25510                           
 25511 ;; *************** function _DMA2_Initialize *****************
 25512 ;; Defined at:
 25513 ;;		line 61 in file "mcc_generated_files/dma2.c"
 25514 ;; Parameters:    Size  Location     Type
 25515 ;;		None
 25516 ;; Auto vars:     Size  Location     Type
 25517 ;;		None
 25518 ;; Return value:  Size  Location     Type
 25519 ;;                  1  [STACK] void 
 25520 ;; Registers used:
 25521 ;;		wreg, status,2
 25522 ;; Tracked objects:
 25523 ;;		On entry : 3F/3D
 25524 ;;		On exit  : 3F/3B
 25525 ;;		Unchanged: 0/0
 25526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25531 ;;Total ram usage:        0 bytes
 25532 ;; Hardware stack levels used:    1
 25533 ;; Hardware stack levels required when called:    7
 25534 ;; This function calls:
 25535 ;;		Nothing
 25536 ;; This function is called by:
 25537 ;;		_SYSTEM_Initialize
 25538 ;; This function uses a reentrant model
 25539 ;;
 25540                           
 25541                           	psect	text119
 25542  0183DA                     __ptext119:
 25543                           	opt callstack 0
 25544  0183DA                     _DMA2_Initialize:
 25545                           	opt callstack 22
 25546                           
 25547                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 25548                           
 25549                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25550                           ;incstack = 0
 25551  0183DA  0E00               	movlw	0
 25552  0183DC  013B               	movlb	59	; () banked
 25553  0183DE  6FD9               	movwf	217,b	;volatile
 25554  0183E0  0E10               	movlw	16
 25555  0183E2  6FDA               	movwf	218,b	;volatile
 25556  0183E4  0E00               	movlw	0
 25557  0183E6  6FDB               	movwf	219,b	;volatile
 25558                           
 25559                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 25560  0183E8  0E3F               	movlw	63
 25561  0183EA  6FD1               	movwf	209,b	;volatile
 25562  0183EC  0EBB               	movlw	187
 25563  0183EE  6FD0               	movwf	208,b	;volatile
 25564                           
 25565                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 25566  0183F0  0E03               	movlw	3
 25567  0183F2  6FDD               	movwf	221,b	;volatile
 25568                           
 25569                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 25570  0183F4  0E00               	movlw	0
 25571  0183F6  6FD8               	movwf	216,b	;volatile
 25572  0183F8  0E01               	movlw	1
 25573  0183FA  6FD7               	movwf	215,b	;volatile
 25574                           
 25575                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 25576  0183FC  0E00               	movlw	0
 25577  0183FE  6FCF               	movwf	207,b	;volatile
 25578  018400  0E01               	movlw	1
 25579  018402  6FCE               	movwf	206,b	;volatile
 25580                           
 25581                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 25582  018404  0E46               	movlw	70
 25583  018406  6FDF               	movwf	223,b	;volatile
 25584                           
 25585                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 25586  018408  0E3D               	movlw	61
 25587  01840A  6FDE               	movwf	222,b	;volatile
 25588                           
 25589                           ; BSR set to: 59
 25590                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 25591  01840C  0139               	movlb	57	; () banked
 25592  01840E  97A5               	bcf	165,3,b	;volatile
 25593                           
 25594                           ; BSR set to: 57
 25595                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 25596  018410  95A5               	bcf	165,2,b	;volatile
 25597                           
 25598                           ; BSR set to: 57
 25599                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 25600  018412  9BA5               	bcf	165,5,b	;volatile
 25601                           
 25602                           ; BSR set to: 57
 25603                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 25604  018414  99A5               	bcf	165,4,b	;volatile
 25605                           
 25606                           ; BSR set to: 57
 25607                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 25608  018416  9795               	bcf	149,3,b	;volatile
 25609                           
 25610                           ; BSR set to: 57
 25611                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 25612  018418  9595               	bcf	149,2,b	;volatile
 25613                           
 25614                           ; BSR set to: 57
 25615                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 25616  01841A  9B95               	bcf	149,5,b	;volatile
 25617                           
 25618                           ; BSR set to: 57
 25619                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 25620  01841C  9995               	bcf	149,4,b	;volatile
 25621  01841E  9ED2               	bcf	16338,7,c	;# 
 25622  018420  0139               	banksel	14831	;# 
 25623  018422  0E55               	movlw	85	;# 
 25624  018424  6FEF               	movwf	14831,b	;# 
 25625  018426  0EAA               	movlw	170	;# 
 25626  018428  6FEF               	movwf	14831,b	;# 
 25627  01842A  81EF               	bsf	14831,0,b	;# 
 25628  01842C  8ED2               	bsf	16338,7,c	;# 
 25629                           
 25630                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 25631  01842E  013B               	movlb	59	; () banked
 25632  018430  6BDC               	clrf	220,b	;volatile
 25633                           
 25634                           ; BSR set to: 59
 25635                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25636  018432  0012               	return		;funcret
 25637  018434                     __end_of_DMA2_Initialize:
 25638                           	opt callstack 0
 25639                           
 25640 ;; *************** function _DMA1_Initialize *****************
 25641 ;; Defined at:
 25642 ;;		line 86 in file "mcc_generated_files/dma1.c"
 25643 ;; Parameters:    Size  Location     Type
 25644 ;;		None
 25645 ;; Auto vars:     Size  Location     Type
 25646 ;;		None
 25647 ;; Return value:  Size  Location     Type
 25648 ;;                  1  [STACK] void 
 25649 ;; Registers used:
 25650 ;;		wreg, status,2
 25651 ;; Tracked objects:
 25652 ;;		On entry : 3F/3B
 25653 ;;		On exit  : 3F/3B
 25654 ;;		Unchanged: 0/0
 25655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25660 ;;Total ram usage:        0 bytes
 25661 ;; Hardware stack levels used:    1
 25662 ;; Hardware stack levels required when called:    7
 25663 ;; This function calls:
 25664 ;;		Nothing
 25665 ;; This function is called by:
 25666 ;;		_SYSTEM_Initialize
 25667 ;; This function uses a reentrant model
 25668 ;;
 25669                           
 25670                           	psect	text120
 25671  017FF0                     __ptext120:
 25672                           	opt callstack 0
 25673  017FF0                     _DMA1_Initialize:
 25674                           	opt callstack 22
 25675                           
 25676                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 25677                           
 25678                           ; BSR set to: 59
 25679                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25680                           ;incstack = 0
 25681  017FF0  0E00               	movlw	0
 25682  017FF2  013B               	movlb	59	; () banked
 25683  017FF4  6FF9               	movwf	249,b	;volatile
 25684  017FF6  0E10               	movlw	16
 25685  017FF8  6FFA               	movwf	250,b	;volatile
 25686  017FFA  0E00               	movlw	0
 25687  017FFC  6FFB               	movwf	251,b	;volatile
 25688                           
 25689                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 25690  017FFE  0E3D               	movlw	61
 25691  018000  6FF1               	movwf	241,b	;volatile
 25692  018002  0E11               	movlw	17
 25693  018004  6FF0               	movwf	240,b	;volatile
 25694                           
 25695                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 25696  018006  0E03               	movlw	3
 25697  018008  6FFD               	movwf	253,b	;volatile
 25698                           
 25699                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 25700  01800A  0E00               	movlw	0
 25701  01800C  6FF8               	movwf	248,b	;volatile
 25702  01800E  0E01               	movlw	1
 25703  018010  6FF7               	movwf	247,b	;volatile
 25704                           
 25705                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 25706  018012  0E00               	movlw	0
 25707  018014  6FEF               	movwf	239,b	;volatile
 25708  018016  0E01               	movlw	1
 25709  018018  6FEE               	movwf	238,b	;volatile
 25710                           
 25711                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 25712  01801A  0E15               	movlw	21
 25713  01801C  6FFF               	movwf	255,b	;volatile
 25714                           
 25715                           ; BSR set to: 59
 25716                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 25717  01801E  6BFE               	clrf	254,b	;volatile
 25718                           
 25719                           ; BSR set to: 59
 25720                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 25721  018020  0139               	movlb	57	; () banked
 25722  018022  93A2               	bcf	162,1,b	;volatile
 25723                           
 25724                           ; BSR set to: 57
 25725                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 25726  018024  91A2               	bcf	162,0,b	;volatile
 25727                           
 25728                           ; BSR set to: 57
 25729                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 25730  018026  97A2               	bcf	162,3,b	;volatile
 25731                           
 25732                           ; BSR set to: 57
 25733                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 25734  018028  95A2               	bcf	162,2,b	;volatile
 25735                           
 25736                           ; BSR set to: 57
 25737                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 25738  01802A  8392               	bsf	146,1,b	;volatile
 25739                           
 25740                           ; BSR set to: 57
 25741                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 25742  01802C  8192               	bsf	146,0,b	;volatile
 25743                           
 25744                           ; BSR set to: 57
 25745                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 25746  01802E  8792               	bsf	146,3,b	;volatile
 25747                           
 25748                           ; BSR set to: 57
 25749                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 25750  018030  8592               	bsf	146,2,b	;volatile
 25751                           
 25752                           ; BSR set to: 57
 25753                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 25754  018032  6BF1               	clrf	241,b	;volatile
 25755                           
 25756                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 25757  018034  0E01               	movlw	1
 25758  018036  6FF2               	movwf	242,b	;volatile
 25759                           
 25760                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 25761  018038  0E04               	movlw	4
 25762  01803A  6FF3               	movwf	243,b	;volatile
 25763                           
 25764                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 25765  01803C  0E02               	movlw	2
 25766  01803E  6FF4               	movwf	244,b	;volatile
 25767                           
 25768                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 25769  018040  0E03               	movlw	3
 25770  018042  6FF7               	movwf	247,b	;volatile
 25771  018044  9ED2               	bcf	16338,7,c	;# 
 25772  018046  0139               	banksel	14831	;# 
 25773  018048  0E55               	movlw	85	;# 
 25774  01804A  6FEF               	movwf	14831,b	;# 
 25775  01804C  0EAA               	movlw	170	;# 
 25776  01804E  6FEF               	movwf	14831,b	;# 
 25777  018050  81EF               	bsf	14831,0,b	;# 
 25778  018052  8ED2               	bsf	16338,7,c	;# 
 25779                           
 25780                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 25781  018054  013B               	movlb	59	; () banked
 25782  018056  6BFC               	clrf	252,b	;volatile
 25783                           
 25784                           ; BSR set to: 59
 25785                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25786  018058  0012               	return		;funcret
 25787  01805A                     __end_of_DMA1_Initialize:
 25788                           	opt callstack 0
 25789                           
 25790 ;; *************** function _CLKREF_Initialize *****************
 25791 ;; Defined at:
 25792 ;;		line 58 in file "mcc_generated_files/clkref.c"
 25793 ;; Parameters:    Size  Location     Type
 25794 ;;		None
 25795 ;; Auto vars:     Size  Location     Type
 25796 ;;		None
 25797 ;; Return value:  Size  Location     Type
 25798 ;;                  1  [STACK] void 
 25799 ;; Registers used:
 25800 ;;		wreg, status,2
 25801 ;; Tracked objects:
 25802 ;;		On entry : 3F/3B
 25803 ;;		On exit  : 3F/3C
 25804 ;;		Unchanged: 0/0
 25805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25810 ;;Total ram usage:        0 bytes
 25811 ;; Hardware stack levels used:    1
 25812 ;; Hardware stack levels required when called:    7
 25813 ;; This function calls:
 25814 ;;		Nothing
 25815 ;; This function is called by:
 25816 ;;		_SYSTEM_Initialize
 25817 ;; This function uses a reentrant model
 25818 ;;
 25819                           
 25820                           	psect	text121
 25821  019206                     __ptext121:
 25822                           	opt callstack 0
 25823  019206                     _CLKREF_Initialize:
 25824                           	opt callstack 22
 25825                           
 25826                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 25827                           
 25828                           ; BSR set to: 59
 25829                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25830                           ;incstack = 0
 25831  019206  013C               	movlb	60	; () banked
 25832  019208  6BE6               	clrf	230,b	;volatile
 25833                           
 25834                           ; BSR set to: 60
 25835                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 25836  01920A  0E94               	movlw	148
 25837  01920C  6FE5               	movwf	229,b	;volatile
 25838                           
 25839                           ; BSR set to: 60
 25840                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25841  01920E  0012               	return		;funcret
 25842  019210                     __end_of_CLKREF_Initialize:
 25843                           	opt callstack 0
 25844                           
 25845 ;; *************** function _ADCC_Initialize *****************
 25846 ;; Defined at:
 25847 ;;		line 65 in file "mcc_generated_files/adcc.c"
 25848 ;; Parameters:    Size  Location     Type
 25849 ;;		None
 25850 ;; Auto vars:     Size  Location     Type
 25851 ;;		None
 25852 ;; Return value:  Size  Location     Type
 25853 ;;                  1  [STACK] void 
 25854 ;; Registers used:
 25855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 25856 ;; Tracked objects:
 25857 ;;		On entry : 3F/3E
 25858 ;;		On exit  : 0/0
 25859 ;;		Unchanged: 0/0
 25860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25865 ;;Total ram usage:        0 bytes
 25866 ;; Hardware stack levels used:    1
 25867 ;; Hardware stack levels required when called:    8
 25868 ;; This function calls:
 25869 ;;		_ADCC_SetADIInterruptHandler
 25870 ;;		_ADCC_SetADTIInterruptHandler
 25871 ;; This function is called by:
 25872 ;;		_SYSTEM_Initialize
 25873 ;; This function uses a reentrant model
 25874 ;;
 25875                           
 25876                           	psect	text122
 25877  01805A                     __ptext122:
 25878                           	opt callstack 0
 25879  01805A                     _ADCC_Initialize:
 25880                           	opt callstack 21
 25881                           
 25882                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 25883                           
 25884                           ; BSR set to: 60
 25885                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25886                           ;incstack = 0
 25887  01805A  013E               	movlb	62	; () banked
 25888  01805C  6BDE               	clrf	222,b	;volatile
 25889                           
 25890                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 25891  01805E  6BDF               	clrf	223,b	;volatile
 25892                           
 25893                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 25894  018060  6BE0               	clrf	224,b	;volatile
 25895                           
 25896                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 25897  018062  6BE1               	clrf	225,b	;volatile
 25898                           
 25899                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 25900  018064  6BE4               	clrf	228,b	;volatile
 25901                           
 25902                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 25903  018066  6BE5               	clrf	229,b	;volatile
 25904                           
 25905                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 25906  018068  6BEA               	clrf	234,b	;volatile
 25907                           
 25908                           ; BSR set to: 62
 25909                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 25910  01806A  0E40               	movlw	64
 25911  01806C  6FEC               	movwf	236,b	;volatile
 25912                           
 25913                           ; BSR set to: 62
 25914                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 25915  01806E  6BF1               	clrf	241,b	;volatile
 25916                           
 25917                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 25918  018070  0E20               	movlw	32
 25919  018072  6FF3               	movwf	243,b	;volatile
 25920                           
 25921                           ; BSR set to: 62
 25922                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 25923  018074  6BF4               	clrf	244,b	;volatile
 25924                           
 25925                           ; BSR set to: 62
 25926                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 25927  018076  6BF5               	clrf	245,b	;volatile
 25928                           
 25929                           ; BSR set to: 62
 25930                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 25931  018078  6BF6               	clrf	246,b	;volatile
 25932                           
 25933                           ; BSR set to: 62
 25934                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 25935  01807A  6BF7               	clrf	247,b	;volatile
 25936                           
 25937                           ; BSR set to: 62
 25938                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 25939  01807C  6BF9               	clrf	249,b	;volatile
 25940                           
 25941                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 25942  01807E  0E5B               	movlw	91
 25943  018080  6FFA               	movwf	250,b	;volatile
 25944                           
 25945                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 25946  018082  0E27               	movlw	39
 25947  018084  6FFB               	movwf	251,b	;volatile
 25948                           
 25949                           ; BSR set to: 62
 25950                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 25951  018086  6BFC               	clrf	252,b	;volatile
 25952                           
 25953                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 25954  018088  0E02               	movlw	2
 25955  01808A  6FFD               	movwf	253,b	;volatile
 25956                           
 25957                           ; BSR set to: 62
 25958                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 25959  01808C  6BFE               	clrf	254,b	;volatile
 25960                           
 25961                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 25962  01808E  0E07               	movlw	7
 25963  018090  6FFF               	movwf	255,b	;volatile
 25964                           
 25965                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 25966  018092  0E84               	movlw	132
 25967  018094  6FF8               	movwf	248,b	;volatile
 25968                           
 25969                           ; BSR set to: 62
 25970                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 25971  018096  0139               	movlb	57	; () banked
 25972  018098  95A1               	bcf	161,2,b	;volatile
 25973                           
 25974                           ; BSR set to: 57
 25975                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 25976  01809A  8591               	bsf	145,2,b	;volatile
 25977                           
 25978                           ; BSR set to: 57
 25979                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 25980  01809C  0E84               	movlw	low _ADCC_DefaultInterruptHandler
 25981  01809E  6EE6               	movwf	postinc1,c
 25982  0180A0  0E92               	movlw	high _ADCC_DefaultInterruptHandler
 25983  0180A2  6EE6               	movwf	postinc1,c
 25984  0180A4  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 25985  0180A6  6EE6               	movwf	postinc1,c
 25986  0180A8  EC15  F0C7         	call	_ADCC_SetADIInterruptHandler	;wreg free
 25987                           
 25988                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 25989  0180AC  0139               	movlb	57	; () banked
 25990  0180AE  97A1               	bcf	161,3,b	;volatile
 25991                           
 25992                           ; BSR set to: 57
 25993                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 25994  0180B0  8791               	bsf	145,3,b	;volatile
 25995                           
 25996                           ; BSR set to: 57
 25997                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 25998  0180B2  0E84               	movlw	low _ADCC_DefaultInterruptHandler
 25999  0180B4  6EE6               	movwf	postinc1,c
 26000  0180B6  0E92               	movlw	high _ADCC_DefaultInterruptHandler
 26001  0180B8  6EE6               	movwf	postinc1,c
 26002  0180BA  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 26003  0180BC  6EE6               	movwf	postinc1,c
 26004  0180BE  EC01  F0C7         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 26005                           
 26006                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26007  0180C2  0012               	return		;funcret
 26008  0180C4                     __end_of_ADCC_Initialize:
 26009                           	opt callstack 0
 26010                           
 26011 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 26012 ;; Defined at:
 26013 ;;		line 336 in file "mcc_generated_files/adcc.c"
 26014 ;; Parameters:    Size  Location     Type
 26015 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26016 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 26017 ;; Auto vars:     Size  Location     Type
 26018 ;;		None
 26019 ;; Return value:  Size  Location     Type
 26020 ;;                  1  [STACK] void 
 26021 ;; Registers used:
 26022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26023 ;; Tracked objects:
 26024 ;;		On entry : 0/0
 26025 ;;		On exit  : 0/0
 26026 ;;		Unchanged: 0/0
 26027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26032 ;;Total ram usage:        0 bytes
 26033 ;; Hardware stack levels used:    1
 26034 ;; Hardware stack levels required when called:    7
 26035 ;; This function calls:
 26036 ;;		Nothing
 26037 ;; This function is called by:
 26038 ;;		_ADCC_Initialize
 26039 ;;		_start_adc_scan
 26040 ;; This function uses a reentrant model
 26041 ;;
 26042                           
 26043                           	psect	text123
 26044  018E02                     __ptext123:
 26045                           	opt callstack 0
 26046  018E02                     _ADCC_SetADTIInterruptHandler:
 26047                           	opt callstack 22
 26048                           
 26049                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 26050                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26051                           
 26052                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26053                           ;incstack = 0
 26054  018E02  50E1               	movf	fsr1l,w,c
 26055  018E04  0FFD               	addlw	-3
 26056  018E06  6ED9               	movwf	fsr2l,c
 26057  018E08  50E2               	movf	fsr1h,w,c
 26058  018E0A  6EDA               	movwf	fsr2h,c
 26059  018E0C  0EFF               	movlw	255
 26060  018E0E  22DA               	addwfc	fsr2h,f,c
 26061  018E10  006F FF78  F0B2    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 26062  018E16  006F FF78  F0B3    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 26063  018E1C  006F FF74  F0B4    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 26064                           
 26065                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 26066  018E22  52E5               	movf	postdec1,f,c
 26067  018E24  52E5               	movf	postdec1,f,c
 26068  018E26  52E5               	movf	postdec1,f,c
 26069  018E28  0012               	return		;funcret
 26070  018E2A                     __end_of_ADCC_SetADTIInterruptHandler:
 26071                           	opt callstack 0
 26072                           
 26073 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 26074 ;; Defined at:
 26075 ;;		line 323 in file "mcc_generated_files/adcc.c"
 26076 ;; Parameters:    Size  Location     Type
 26077 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 26078 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 26079 ;; Auto vars:     Size  Location     Type
 26080 ;;		None
 26081 ;; Return value:  Size  Location     Type
 26082 ;;                  1  [STACK] void 
 26083 ;; Registers used:
 26084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 26085 ;; Tracked objects:
 26086 ;;		On entry : 6/0
 26087 ;;		On exit  : 0/0
 26088 ;;		Unchanged: 0/0
 26089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26094 ;;Total ram usage:        0 bytes
 26095 ;; Hardware stack levels used:    1
 26096 ;; Hardware stack levels required when called:    7
 26097 ;; This function calls:
 26098 ;;		Nothing
 26099 ;; This function is called by:
 26100 ;;		_ADCC_Initialize
 26101 ;;		_start_adc_scan
 26102 ;; This function uses a reentrant model
 26103 ;;
 26104                           
 26105                           	psect	text124
 26106  018E2A                     __ptext124:
 26107                           	opt callstack 0
 26108  018E2A                     _ADCC_SetADIInterruptHandler:
 26109                           	opt callstack 22
 26110                           
 26111                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 26112                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 26113                           
 26114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26115                           ;incstack = 0
 26116  018E2A  50E1               	movf	fsr1l,w,c
 26117  018E2C  0FFD               	addlw	-3
 26118  018E2E  6ED9               	movwf	fsr2l,c
 26119  018E30  50E2               	movf	fsr1h,w,c
 26120  018E32  6EDA               	movwf	fsr2h,c
 26121  018E34  0EFF               	movlw	255
 26122  018E36  22DA               	addwfc	fsr2h,f,c
 26123  018E38  006F FF78  F0B5    	movff	postinc2,_ADCC_ADI_InterruptHandler
 26124  018E3E  006F FF78  F0B6    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 26125  018E44  006F FF74  F0B7    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 26126                           
 26127                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 26128  018E4A  52E5               	movf	postdec1,f,c
 26129  018E4C  52E5               	movf	postdec1,f,c
 26130  018E4E  52E5               	movf	postdec1,f,c
 26131  018E50  0012               	return		;funcret
 26132  018E52                     __end_of_ADCC_SetADIInterruptHandler:
 26133                           	opt callstack 0
 26134                           
 26135 ;; *************** function _INT1_ISR *****************
 26136 ;; Defined at:
 26137 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 26138 ;; Parameters:    Size  Location     Type
 26139 ;;		None
 26140 ;; Auto vars:     Size  Location     Type
 26141 ;;		None
 26142 ;; Return value:  Size  Location     Type
 26143 ;;                  1    wreg      void 
 26144 ;; Registers used:
 26145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 26146 ;; Tracked objects:
 26147 ;;		On entry : 0/0
 26148 ;;		On exit  : 0/0
 26149 ;;		Unchanged: 0/0
 26150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26153 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26154 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26155 ;;Total ram usage:        4 bytes
 26156 ;; Hardware stack levels used:    1
 26157 ;; Hardware stack levels required when called:    5
 26158 ;; This function calls:
 26159 ;;		_INT1_CallBack
 26160 ;; This function is called by:
 26161 ;;		Interrupt level 1
 26162 ;; This function uses a non-reentrant model
 26163 ;;
 26164                           
 26165                           	psect	text125
 26166  0188B0                     __ptext125:
 26167                           	opt callstack 0
 26168  0188B0                     _INT1_ISR:
 26169                           	opt callstack 12
 26170                           
 26171                           ;incstack = 0
 26172  0188B0  006F FF60  F04B    	movff	status,??_INT1_ISR
 26173  0188B6  0060  F094  F04C   	movff	btemp,??_INT1_ISR+1
 26174  0188BC  0060  F0BC  F04D   	movff	btemp+10,??_INT1_ISR+2
 26175  0188C2  0060  F0C0  F04E   	movff	btemp+11,??_INT1_ISR+3
 26176  0188C8  EE16  F00B         	lfsr	1,___intlo_sp
 26177                           
 26178                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 26179  0188CC  0139               	movlb	57	; () banked
 26180  0188CE  91A5               	bcf	165,0,b	;volatile
 26181                           
 26182                           ; BSR set to: 57
 26183                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 26184  0188D0  ECD5  F0C7         	call	_INT1_CallBack	;wreg free
 26185  0188D4  0060  F138  F030   	movff	??_INT1_ISR+3,btemp+11
 26186  0188DA  0060  F134  F02F   	movff	??_INT1_ISR+2,btemp+10
 26187  0188E0  0060  F130  F025   	movff	??_INT1_ISR+1,btemp
 26188  0188E6  0060  F12F  FFD8   	movff	??_INT1_ISR,status
 26189  0188EC  0011               	retfie		f
 26190  0188EE                     __end_of_INT1_ISR:
 26191                           	opt callstack 0
 26192                           
 26193 ;; *************** function _INT1_CallBack *****************
 26194 ;; Defined at:
 26195 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 26196 ;; Parameters:    Size  Location     Type
 26197 ;;		None
 26198 ;; Auto vars:     Size  Location     Type
 26199 ;;		None
 26200 ;; Return value:  Size  Location     Type
 26201 ;;                  1  [STACK] void 
 26202 ;; Registers used:
 26203 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 26204 ;; Tracked objects:
 26205 ;;		On entry : 3F/39
 26206 ;;		On exit  : 0/0
 26207 ;;		Unchanged: 0/0
 26208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26213 ;;Total ram usage:        0 bytes
 26214 ;; Hardware stack levels used:    1
 26215 ;; Hardware stack levels required when called:    4
 26216 ;; This function calls:
 26217 ;;		Absolute function
 26218 ;;		_INT1_DefaultInterruptHandler
 26219 ;;		_switch_handler
 26220 ;; This function is called by:
 26221 ;;		_INT1_ISR
 26222 ;; This function uses a reentrant model
 26223 ;;
 26224                           
 26225                           	psect	text126
 26226  018FAA                     __ptext126:
 26227                           	opt callstack 0
 26228  018FAA                     _INT1_CallBack:
 26229                           	opt callstack 12
 26230                           
 26231                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 26232                           
 26233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26234                           ;incstack = 0
 26235  018FAA  5004               	movf	_INT1_InterruptHandler^0,w,c
 26236  018FAC  1005               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 26237  018FAE  1006               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 26238  018FB0  B4D8               	btfsc	status,2,c
 26239  018FB2  0012               	return	
 26240                           
 26241                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 26242  018FB4  D801               	call	u859_28
 26243  018FB6  0012               	return	
 26244  018FB8                     u859_28:
 26245  018FB8  0005               	push	
 26246  018FBA  6EFA               	movwf	pclath,c
 26247  018FBC  5004               	movf	_INT1_InterruptHandler^0,w,c
 26248  018FBE  6EFD               	movwf	tosl,c
 26249  018FC0  5005               	movf	(_INT1_InterruptHandler+1)^0,w,c
 26250  018FC2  6EFE               	movwf	tosh,c
 26251  018FC4  5006               	movf	(_INT1_InterruptHandler+2)^0,w,c
 26252  018FC6  6EFF               	movwf	tosu,c
 26253  018FC8  50FA               	movf	pclath,w,c
 26254  018FCA  0012               	return		;indir
 26255  018FCC                     __end_of_INT1_CallBack:
 26256                           	opt callstack 0
 26257                           
 26258 ;; *************** function _INT1_DefaultInterruptHandler *****************
 26259 ;; Defined at:
 26260 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 26261 ;; Parameters:    Size  Location     Type
 26262 ;;		None
 26263 ;; Auto vars:     Size  Location     Type
 26264 ;;		None
 26265 ;; Return value:  Size  Location     Type
 26266 ;;                  1  [STACK] void 
 26267 ;; Registers used:
 26268 ;;		None
 26269 ;; Tracked objects:
 26270 ;;		On entry : 0/39
 26271 ;;		On exit  : 0/0
 26272 ;;		Unchanged: 0/0
 26273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26278 ;;Total ram usage:        0 bytes
 26279 ;; Hardware stack levels used:    1
 26280 ;; Hardware stack levels required when called:    3
 26281 ;; This function calls:
 26282 ;;		Nothing
 26283 ;; This function is called by:
 26284 ;;		_EXT_INT_Initialize
 26285 ;;		_INT1_CallBack
 26286 ;; This function uses a reentrant model
 26287 ;;
 26288                           
 26289                           	psect	text127
 26290  01927E                     __ptext127:
 26291                           	opt callstack 0
 26292  01927E                     _INT1_DefaultInterruptHandler:
 26293                           	opt callstack 12
 26294                           
 26295                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26296                           
 26297                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26298                           ;incstack = 0
 26299  01927E  0012               	return		;funcret
 26300  019280                     __end_of_INT1_DefaultInterruptHandler:
 26301                           	opt callstack 0
 26302                           
 26303 ;; *************** function _switch_handler *****************
 26304 ;; Defined at:
 26305 ;;		line 58 in file "dio.c"
 26306 ;; Parameters:    Size  Location     Type
 26307 ;;		None
 26308 ;; Auto vars:     Size  Location     Type
 26309 ;;  i               1  [STACK] unsigned char 
 26310 ;;  sw_value        1  [STACK] unsigned char 
 26311 ;; Return value:  Size  Location     Type
 26312 ;;                  1  [STACK] void 
 26313 ;; Registers used:
 26314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 26315 ;; Tracked objects:
 26316 ;;		On entry : 0/39
 26317 ;;		On exit  : 0/0
 26318 ;;		Unchanged: 0/0
 26319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26324 ;;Total ram usage:        0 bytes
 26325 ;; Hardware stack levels used:    1
 26326 ;; Hardware stack levels required when called:    3
 26327 ;; This function calls:
 26328 ;;		Nothing
 26329 ;; This function is called by:
 26330 ;;		_start_switch_handler
 26331 ;;		_INT1_CallBack
 26332 ;; This function uses a reentrant model
 26333 ;;
 26334                           
 26335                           	psect	text128
 26336  0168D0                     __ptext128:
 26337                           	opt callstack 0
 26338  0168D0                     _switch_handler:
 26339                           	opt callstack 0
 26340                           
 26341                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26342  0168D0  52E6               	movf	postinc1,f,c
 26343  0168D2  52E6               	movf	postinc1,f,c
 26344                           
 26345                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 26346                           ;stkvar	_i @ sp[(-2)+0]
 26347                           
 26348                           ;incstack = 0
 26349  0168D4  0EFE               	movlw	-2
 26350  0168D6  6AE3               	clrf	plusw1,c
 26351  0168D8  9EBD               	bcf	189,7,c	;volatile
 26352  0168DA  82BE               	bsf	190,1,c	;volatile
 26353                           
 26354                           ;dio.c: 72:  __nop();
 26355  0168DC  F000               	nop	
 26356                           
 26357                           ;dio.c: 73:  __nop();
 26358  0168DE  F000               	nop	
 26359                           
 26360                           ;dio.c: 74:  __nop();
 26361  0168E0  F000               	nop	
 26362  0168E2  D019               	goto	l9149
 26363  0168E4                     l9137:
 26364                           
 26365                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 26366  0168E4  A6CF               	btfss	207,3,c	;volatile
 26367  0168E6  D011               	goto	u844_20
 26368  0168E8  D00D               	goto	u844_21
 26369  0168EA                     u841_28:
 26370                           
 26371                           ;stkvar	_sw_value @ sp[(-2)+1]
 26372  0168EA  0EFF               	movlw	-1
 26373  0168EC  0060  F0C3  FFE3   	movff	btemp+11,plusw1
 26374                           
 26375                           ;dio.c: 80:    break;
 26376  0168F2  D027               	goto	l9151
 26377  0168F4                     l9139:
 26378                           
 26379                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 26380  0168F4  A4CF               	btfss	207,2,c	;volatile
 26381  0168F6  D009               	goto	u844_20
 26382  0168F8  D005               	goto	u844_21
 26383  0168FA                     l9141:
 26384                           
 26385                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 26386  0168FA  A2CF               	btfss	207,1,c	;volatile
 26387  0168FC  D006               	goto	u844_20
 26388  0168FE  D002               	goto	u844_21
 26389  016900                     l9143:
 26390                           
 26391                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 26392  016900  A0CF               	btfss	207,0,c	;volatile
 26393  016902  D003               	goto	u844_20
 26394  016904                     u844_21:
 26395  016904  6A30               	clrf	(btemp+11)^0,c
 26396  016906  2A30               	incf	(btemp+11)^0,f,c
 26397  016908  D7F0               	goto	u841_28
 26398  01690A                     u844_20:
 26399  01690A  6A30               	clrf	(btemp+11)^0,c
 26400  01690C  D7EE               	goto	u841_28
 26401  01690E                     l9145:
 26402                           
 26403                           ;dio.c: 91:    sw_value = 1;
 26404                           ;stkvar	_sw_value @ sp[(-2)+1]
 26405  01690E  0EFF               	movlw	-1
 26406  016910  6AE3               	clrf	plusw1,c
 26407  016912  2AE3               	incf	plusw1,f,c
 26408                           
 26409                           ;dio.c: 92:    break;
 26410  016914  D016               	goto	l9151
 26411  016916                     l9149:
 26412                           
 26413                           ;stkvar	_i @ sp[(-2)+0]
 26414  016916  0EFE               	movlw	-2
 26415  016918  50E3               	movf	plusw1,w,c
 26416  01691A  6E2F               	movwf	(btemp+10)^0,c
 26417  01691C  6A30               	clrf	(btemp+11)^0,c
 26418                           
 26419                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26420                           ; Switch size 1, requested type "simple"
 26421                           ; Number of cases is 1, Range of values is 0 to 0
 26422                           ; switch strategies available:
 26423                           ; Name         Instructions Cycles
 26424                           ; simple_byte            4     3 (average)
 26425                           ;	Chosen strategy is simple_byte
 26426  01691E  5030               	movf	(btemp+11)^0,w,c
 26427  016920  0A00               	xorlw	0	; case 0
 26428  016922  A4D8               	btfss	status,2,c
 26429  016924  D7F4               	goto	l9145
 26430                           
 26431                           ; Switch size 1, requested type "simple"
 26432                           ; Number of cases is 4, Range of values is 0 to 3
 26433                           ; switch strategies available:
 26434                           ; Name         Instructions Cycles
 26435                           ; simple_byte           13     7 (average)
 26436                           ;	Chosen strategy is simple_byte
 26437  016926  502F               	movf	(btemp+10)^0,w,c
 26438  016928  0A00               	xorlw	0	; case 0
 26439  01692A  B4D8               	btfsc	status,2,c
 26440  01692C  D7E9               	goto	l9143
 26441  01692E  0A01               	xorlw	1	; case 1
 26442  016930  B4D8               	btfsc	status,2,c
 26443  016932  D7E3               	goto	l9141
 26444  016934  0A03               	xorlw	3	; case 2
 26445  016936  B4D8               	btfsc	status,2,c
 26446  016938  D7DD               	goto	l9139
 26447  01693A  0A01               	xorlw	1	; case 3
 26448  01693C  B4D8               	btfsc	status,2,c
 26449  01693E  D7D2               	goto	l9137
 26450  016940  D7E6               	goto	l9145
 26451  016942                     l9151:
 26452                           
 26453                           ;dio.c: 96:   if (sw_value) {
 26454                           ;stkvar	_sw_value @ sp[(-2)+1]
 26455  016942  0EFF               	movlw	-1
 26456  016944  50E3               	movf	plusw1,w,c
 26457  016946  B4D8               	btfsc	status,2,c
 26458  016948  D014               	goto	l9157
 26459                           
 26460                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 26461                           ;stkvar	_i @ sp[(-2)+0]
 26462  01694A  0EFE               	movlw	-2
 26463  01694C  50E3               	movf	plusw1,w,c
 26464  01694E  0D05               	mullw	5
 26465  016950  50F3               	movf	243,w,c
 26466  016952  0F60               	addlw	low _S
 26467  016954  6ED9               	movwf	fsr2l,c
 26468  016956  6ADA               	clrf	fsr2h,c
 26469  016958  04DE               	decf	postinc2,w,c
 26470  01695A  A4D8               	btfss	status,2,c
 26471  01695C  D041               	goto	l9165
 26472                           
 26473                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 26474                           ;stkvar	_i @ sp[(-2)+0]
 26475  01695E  0EFE               	movlw	-2
 26476  016960  50E3               	movf	plusw1,w,c
 26477  016962  0D05               	mullw	5
 26478  016964  50F3               	movf	243,w,c
 26479  016966  0F60               	addlw	low _S
 26480  016968  6ED9               	movwf	fsr2l,c
 26481  01696A  6ADA               	clrf	fsr2h,c
 26482  01696C  0E00               	movlw	0
 26483  01696E  6EDF               	movwf	indf2,c
 26484  016970  D037               	goto	l9165
 26485  016972                     l9157:
 26486                           
 26487                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 26488                           ;stkvar	_i @ sp[(-2)+0]
 26489  016972  0EFE               	movlw	-2
 26490  016974  50E3               	movf	plusw1,w,c
 26491  016976  0D05               	mullw	5
 26492  016978  50F3               	movf	243,w,c
 26493  01697A  0F60               	addlw	low _S
 26494  01697C  6ED9               	movwf	fsr2l,c
 26495  01697E  6ADA               	clrf	fsr2h,c
 26496  016980  50DF               	movf	indf2,w,c
 26497  016982  A4D8               	btfss	status,2,c
 26498  016984  D02D               	goto	l9165
 26499                           
 26500                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 26501                           ;stkvar	_i @ sp[(-2)+0]
 26502  016986  0EFE               	movlw	-2
 26503  016988  50E3               	movf	plusw1,w,c
 26504  01698A  0D05               	mullw	5
 26505  01698C  50F3               	movf	243,w,c
 26506  01698E  0F60               	addlw	low _S
 26507  016990  6ED9               	movwf	fsr2l,c
 26508  016992  6ADA               	clrf	fsr2h,c
 26509  016994  0E01               	movlw	1
 26510  016996  6EDF               	movwf	indf2,c
 26511                           
 26512                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 26513  016998  EE20  F2B8         	lfsr	2,_V+184	;volatile
 26514                           
 26515                           ;stkvar	_i @ sp[(-2)+0]
 26516  01699C  0EFE               	movlw	-2
 26517  01699E  50E3               	movf	plusw1,w,c
 26518  0169A0  0D05               	mullw	5
 26519  0169A2  50F3               	movf	243,w,c
 26520  0169A4  0F61               	addlw	low (_S+1)
 26521  0169A6  6EE9               	movwf	fsr0l,c
 26522  0169A8  6AEA               	clrf	fsr0h,c
 26523  0169AA  006F FF7B FFEE     	movff	postinc2,postinc0
 26524  0169B0  006F FF7B FFEE     	movff	postinc2,postinc0
 26525  0169B6  006F FF7B FFEE     	movff	postinc2,postinc0
 26526  0169BC  006F FF7B FFEE     	movff	postinc2,postinc0
 26527                           
 26528                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 26529                           ;stkvar	_i @ sp[(-2)+0]
 26530  0169C2  0EFE               	movlw	-2
 26531  0169C4  006F FF8C  F030    	movff	plusw1,btemp+11
 26532  0169CA  0E01               	movlw	1
 26533  0169CC  6E2F               	movwf	(btemp+10)^0,c
 26534  0169CE  2A30               	incf	(btemp+11)^0,f,c
 26535  0169D0  D002               	goto	u848_24
 26536  0169D2                     u848_25:
 26537  0169D2  90D8               	bcf	status,0,c
 26538  0169D4  362F               	rlcf	(btemp+10)^0,f,c
 26539  0169D6                     u848_24:
 26540  0169D6  2E30               	decfsz	(btemp+11)^0,f,c
 26541  0169D8  D7FC               	goto	u848_25
 26542  0169DA  502F               	movf	(btemp+10)^0,w,c
 26543  0169DC  0100               	movlb	0	; () banked
 26544  0169DE  1388               	iorwf	(_S+40)& (0+255),f,b	;volatile
 26545  0169E0                     l9165:
 26546                           
 26547                           ;dio.c: 107:  } while (++i < 4);
 26548                           ;stkvar	_i @ sp[(-2)+0]
 26549  0169E0  0EFE               	movlw	-2
 26550  0169E2  2AE3               	incf	plusw1,f,c
 26551  0169E4  0EFE               	movlw	-2
 26552  0169E6  006F FF8C  F025    	movff	plusw1,btemp
 26553  0169EC  0E03               	movlw	3
 26554  0169EE  6425               	cpfsgt	btemp^0,c
 26555  0169F0  D792               	goto	l9149
 26556                           
 26557                           ;dio.c: 110:  do { LATEbits.LATE1 = 0; } while(0);
 26558  0169F2  92BE               	bcf	190,1,c	;volatile
 26559  0169F4  A4BE               	btfss	190,2,c	;volatile
 26560  0169F6  D002               	goto	u850_20
 26561  0169F8  0E01               	movlw	1
 26562  0169FA  D001               	goto	u850_26
 26563  0169FC                     u850_20:
 26564  0169FC  0E00               	movlw	0
 26565  0169FE                     u850_26:
 26566  0169FE  0AFF               	xorlw	255
 26567  016A00  6E30               	movwf	(btemp+11)^0,c
 26568  016A02  4630               	rlncf	(btemp+11)^0,f,c
 26569  016A04  4630               	rlncf	(btemp+11)^0,f,c
 26570  016A06  50BE               	movf	190,w,c	;volatile
 26571  016A08  1830               	xorwf	(btemp+11)^0,w,c
 26572  016A0A  0BFB               	andlw	-5
 26573  016A0C  1830               	xorwf	(btemp+11)^0,w,c
 26574  016A0E  6EBE               	movwf	190,c	;volatile
 26575  016A10  8EBD               	bsf	189,7,c	;volatile
 26576                           
 26577                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 26578  016A12  52E5               	movf	postdec1,f,c
 26579  016A14  52E5               	movf	postdec1,f,c
 26580  016A16  0012               	return		;funcret
 26581  016A18                     __end_of_switch_handler:
 26582                           	opt callstack 0
 26583                           
 26584 ;; *************** function _TMR5_ISR *****************
 26585 ;; Defined at:
 26586 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 26587 ;; Parameters:    Size  Location     Type
 26588 ;;		None
 26589 ;; Auto vars:     Size  Location     Type
 26590 ;;		None
 26591 ;; Return value:  Size  Location     Type
 26592 ;;                  1    wreg      void 
 26593 ;; Registers used:
 26594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 26595 ;; Tracked objects:
 26596 ;;		On entry : 0/0
 26597 ;;		On exit  : 0/0
 26598 ;;		Unchanged: 0/0
 26599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26602 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26603 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26604 ;;Total ram usage:        4 bytes
 26605 ;; Hardware stack levels used:    1
 26606 ;; Hardware stack levels required when called:    5
 26607 ;; This function calls:
 26608 ;;		_TMR5_CallBack
 26609 ;;		_TMR5_WriteTimer
 26610 ;; This function is called by:
 26611 ;;		Interrupt level 1
 26612 ;; This function uses a non-reentrant model
 26613 ;;
 26614                           
 26615                           	psect	text129
 26616  018434                     __ptext129:
 26617                           	opt callstack 0
 26618  018434                     _TMR5_ISR:
 26619                           	opt callstack 12
 26620                           
 26621                           ;incstack = 0
 26622  018434  006F FF60  F051    	movff	status,??_TMR5_ISR+2
 26623  01843A  0060  F0C0  F052   	movff	btemp+11,??_TMR5_ISR+3
 26624  018440  EE16  F00B         	lfsr	1,___intlo_sp
 26625                           
 26626                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 26627  018444  0139               	movlb	57	; () banked
 26628  018446  9DA8               	bcf	168,6,b	;volatile
 26629                           
 26630                           ; BSR set to: 57
 26631                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 26632  018448  0060  F05B  FFE6   	movff	_timer5ReloadVal,postinc1
 26633  01844E  0060  F05F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 26634  018454  EC18  F0C4         	call	_TMR5_WriteTimer	;wreg free
 26635                           
 26636                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 26637  018458  0102               	movlb	2	; () banked
 26638  01845A  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 26639  01845C  6E4F               	movwf	??_TMR5_ISR^0,c
 26640  01845E  6A50               	clrf	(??_TMR5_ISR+1)^0,c
 26641  018460  0E05               	movlw	5
 26642  018462  264F               	addwf	??_TMR5_ISR^0,f,c
 26643  018464  0E00               	movlw	0
 26644  018466  2250               	addwfc	(??_TMR5_ISR+1)^0,f,c
 26645  018468  4A14               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 26646  01846A  2A15               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 26647  01846C  504F               	movf	??_TMR5_ISR^0,w,c
 26648  01846E  5C14               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 26649  018470  5050               	movf	(??_TMR5_ISR+1)^0,w,c
 26650  018472  5815               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 26651  018474  A0D8               	btfss	status,0,c
 26652  018476  D004               	goto	i1l1047
 26653                           
 26654                           ; BSR set to: 2
 26655                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 26656  018478  EC9F  F0C7         	call	_TMR5_CallBack	;wreg free
 26657                           
 26658                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 26659  01847C  6A14               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 26660  01847E  6A15               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 26661  018480                     i1l1047:
 26662  018480  0060  F148  F030   	movff	??_TMR5_ISR+3,btemp+11
 26663  018486  0060  F147  FFD8   	movff	??_TMR5_ISR+2,status
 26664  01848C  0011               	retfie		f
 26665  01848E                     __end_of_TMR5_ISR:
 26666                           	opt callstack 0
 26667                           
 26668 ;; *************** function _TMR5_WriteTimer *****************
 26669 ;; Defined at:
 26670 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 26671 ;; Parameters:    Size  Location     Type
 26672 ;;  timerVal        2  [STACK] unsigned short 
 26673 ;; Auto vars:     Size  Location     Type
 26674 ;;		None
 26675 ;; Return value:  Size  Location     Type
 26676 ;;                  1  [STACK] void 
 26677 ;; Registers used:
 26678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 26679 ;; Tracked objects:
 26680 ;;		On entry : 3F/39
 26681 ;;		On exit  : 0/0
 26682 ;;		Unchanged: 0/0
 26683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26688 ;;Total ram usage:        0 bytes
 26689 ;; Hardware stack levels used:    1
 26690 ;; Hardware stack levels required when called:    3
 26691 ;; This function calls:
 26692 ;;		Nothing
 26693 ;; This function is called by:
 26694 ;;		_TMR5_ISR
 26695 ;; This function uses a reentrant model
 26696 ;;
 26697                           
 26698                           	psect	text130
 26699  018830                     __ptext130:
 26700                           	opt callstack 0
 26701  018830                     _TMR5_WriteTimer:
 26702                           	opt callstack 13
 26703                           
 26704                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 26705                           
 26706                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26707                           ;incstack = 0
 26708  018830  A49A               	btfss	154,2,c	;volatile
 26709  018832  D00F               	goto	l9297
 26710                           
 26711                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 26712  018834  909A               	bcf	154,0,c	;volatile
 26713                           
 26714                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 26715                           ;stkvar	_timerVal @ sp[(0)+-2]
 26716  018836  0EFF               	movlw	255
 26717  018838  24E1               	addwf	fsr1l,w,c
 26718  01883A  6ED9               	movwf	fsr2l,c
 26719  01883C  0EFF               	movlw	255
 26720  01883E  20E2               	addwfc	fsr1h,w,c
 26721  018840  6EDA               	movwf	fsr2h,c
 26722  018842  50DF               	movf	indf2,w,c
 26723  018844  6E99               	movwf	153,c	;volatile
 26724                           
 26725                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 26726                           ;stkvar	_timerVal @ sp[(0)+-2]
 26727  018846  0EFE               	movlw	-2
 26728  018848  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26729                           
 26730                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 26731  01884E  809A               	bsf	154,0,c	;volatile
 26732                           
 26733                           ;mcc_generated_files/tmr5.c: 142:  } else {
 26734  018850  D00C               	goto	l1030
 26735  018852                     l9297:
 26736                           
 26737                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 26738                           ;stkvar	_timerVal @ sp[(0)+-2]
 26739  018852  0EFF               	movlw	255
 26740  018854  24E1               	addwf	fsr1l,w,c
 26741  018856  6ED9               	movwf	fsr2l,c
 26742  018858  0EFF               	movlw	255
 26743  01885A  20E2               	addwfc	fsr1h,w,c
 26744  01885C  6EDA               	movwf	fsr2h,c
 26745  01885E  50DF               	movf	indf2,w,c
 26746  018860  6E99               	movwf	153,c	;volatile
 26747                           
 26748                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 26749                           ;stkvar	_timerVal @ sp[(0)+-2]
 26750  018862  0EFE               	movlw	-2
 26751  018864  006F FF8F FF98     	movff	plusw1,16280	;volatile
 26752  01886A                     l1030:
 26753                           
 26754                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 26755  01886A  52E5               	movf	postdec1,f,c
 26756  01886C  52E5               	movf	postdec1,f,c
 26757  01886E  0012               	return		;funcret
 26758  018870                     __end_of_TMR5_WriteTimer:
 26759                           	opt callstack 0
 26760                           
 26761 ;; *************** function _TMR5_CallBack *****************
 26762 ;; Defined at:
 26763 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 26764 ;; Parameters:    Size  Location     Type
 26765 ;;		None
 26766 ;; Auto vars:     Size  Location     Type
 26767 ;;		None
 26768 ;; Return value:  Size  Location     Type
 26769 ;;                  1  [STACK] void 
 26770 ;; Registers used:
 26771 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 26772 ;; Tracked objects:
 26773 ;;		On entry : 3F/2
 26774 ;;		On exit  : 0/0
 26775 ;;		Unchanged: 0/0
 26776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26781 ;;Total ram usage:        0 bytes
 26782 ;; Hardware stack levels used:    1
 26783 ;; Hardware stack levels required when called:    4
 26784 ;; This function calls:
 26785 ;;		Absolute function
 26786 ;;		_TMR5_DefaultInterruptHandler
 26787 ;; This function is called by:
 26788 ;;		_TMR5_ISR
 26789 ;; This function uses a reentrant model
 26790 ;;
 26791                           
 26792                           	psect	text131
 26793  018F3E                     __ptext131:
 26794                           	opt callstack 0
 26795  018F3E                     _TMR5_CallBack:
 26796                           	opt callstack 12
 26797                           
 26798                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 26799                           
 26800                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26801                           ;incstack = 0
 26802  018F3E  0100               	movlb	0	; () banked
 26803  018F40  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26804  018F42  11AD               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26805  018F44  11AE               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26806  018F46  B4D8               	btfsc	status,2,c
 26807  018F48  0012               	return	
 26808                           
 26809                           ; BSR set to: 0
 26810                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 26811  018F4A  D801               	call	u870_28
 26812  018F4C  0012               	return	
 26813  018F4E                     u870_28:
 26814  018F4E  0005               	push	
 26815  018F50  6EFA               	movwf	pclath,c
 26816  018F52  51AC               	movf	_TMR5_InterruptHandler& (0+255),w,b
 26817  018F54  6EFD               	movwf	tosl,c
 26818  018F56  51AD               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 26819  018F58  6EFE               	movwf	tosh,c
 26820  018F5A  51AE               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 26821  018F5C  6EFF               	movwf	tosu,c
 26822  018F5E  50FA               	movf	pclath,w,c
 26823  018F60  0012               	return		;indir
 26824  018F62                     __end_of_TMR5_CallBack:
 26825                           	opt callstack 0
 26826                           
 26827 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 26828 ;; Defined at:
 26829 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 26830 ;; Parameters:    Size  Location     Type
 26831 ;;		None
 26832 ;; Auto vars:     Size  Location     Type
 26833 ;;		None
 26834 ;; Return value:  Size  Location     Type
 26835 ;;                  1  [STACK] void 
 26836 ;; Registers used:
 26837 ;;		wreg, status,2, status,0, btemp+11
 26838 ;; Tracked objects:
 26839 ;;		On entry : 3F/0
 26840 ;;		On exit  : 3F/2
 26841 ;;		Unchanged: 0/0
 26842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26847 ;;Total ram usage:        0 bytes
 26848 ;; Hardware stack levels used:    1
 26849 ;; Hardware stack levels required when called:    3
 26850 ;; This function calls:
 26851 ;;		Nothing
 26852 ;; This function is called by:
 26853 ;;		_TMR5_Initialize
 26854 ;;		_TMR5_CallBack
 26855 ;; This function uses a reentrant model
 26856 ;;
 26857                           
 26858                           	psect	text132
 26859  018E52                     __ptext132:
 26860                           	opt callstack 0
 26861  018E52                     _TMR5_DefaultInterruptHandler:
 26862                           	opt callstack 12
 26863                           
 26864                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 26865                           
 26866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26867                           ;incstack = 0
 26868  018E52  A0BE               	btfss	190,0,c	;volatile
 26869  018E54  D002               	goto	u819_20
 26870  018E56  0E01               	movlw	1
 26871  018E58  D001               	goto	u819_26
 26872  018E5A                     u819_20:
 26873  018E5A  0E00               	movlw	0
 26874  018E5C                     u819_26:
 26875  018E5C  0AFF               	xorlw	255
 26876  018E5E  6E30               	movwf	(btemp+11)^0,c
 26877  018E60  50BE               	movf	190,w,c	;volatile
 26878  018E62  1830               	xorwf	(btemp+11)^0,w,c
 26879  018E64  0BFE               	andlw	-2
 26880  018E66  1830               	xorwf	(btemp+11)^0,w,c
 26881  018E68  6EBE               	movwf	190,c	;volatile
 26882                           
 26883                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 26884  018E6A  0E01               	movlw	1
 26885  018E6C  0102               	movlb	2	; () banked
 26886  018E6E  27B8               	addwf	(_V+184)& (0+255),f,b	;volatile
 26887  018E70  0E00               	movlw	0
 26888  018E72  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 26889  018E74  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 26890  018E76  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 26891                           
 26892                           ; BSR set to: 2
 26893                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26894  018E78  0012               	return		;funcret
 26895  018E7A                     __end_of_TMR5_DefaultInterruptHandler:
 26896                           	opt callstack 0
 26897                           
 26898 ;; *************** function _TMR3_ISR *****************
 26899 ;; Defined at:
 26900 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 26901 ;; Parameters:    Size  Location     Type
 26902 ;;		None
 26903 ;; Auto vars:     Size  Location     Type
 26904 ;;		None
 26905 ;; Return value:  Size  Location     Type
 26906 ;;                  1    wreg      void 
 26907 ;; Registers used:
 26908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl
 26909 ;; Tracked objects:
 26910 ;;		On entry : 0/0
 26911 ;;		On exit  : 0/0
 26912 ;;		Unchanged: 0/0
 26913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26916 ;;      Temps:          0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26917 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26918 ;;Total ram usage:       13 bytes
 26919 ;; Hardware stack levels used:    1
 26920 ;; Hardware stack levels required when called:    6
 26921 ;; This function calls:
 26922 ;;		_TMR3_CallBack
 26923 ;;		_TMR3_WriteTimer
 26924 ;; This function is called by:
 26925 ;;		Interrupt level 1
 26926 ;; This function uses a non-reentrant model
 26927 ;;
 26928                           
 26929                           	psect	text133
 26930  017540                     __ptext133:
 26931                           	opt callstack 0
 26932  017540                     _TMR3_ISR:
 26933                           	opt callstack 11
 26934                           
 26935                           ; BSR set to: 2
 26936                           ;incstack = 0
 26937  017540  006F FF60  F1D1    	movff	status,??_TMR3_ISR
 26938  017546  0060  F094  F1D2   	movff	btemp,??_TMR3_ISR+1
 26939  01754C  0060  F098  F1D3   	movff	btemp+1,??_TMR3_ISR+2
 26940  017552  0060  F09C  F1D4   	movff	btemp+2,??_TMR3_ISR+3
 26941  017558  0060  F0A0  F1D5   	movff	btemp+3,??_TMR3_ISR+4
 26942  01755E  0060  F0A4  F1D6   	movff	btemp+4,??_TMR3_ISR+5
 26943  017564  0060  F0A8  F1D7   	movff	btemp+5,??_TMR3_ISR+6
 26944  01756A  0060  F0AC  F1D8   	movff	btemp+6,??_TMR3_ISR+7
 26945  017570  0060  F0B0  F1D9   	movff	btemp+7,??_TMR3_ISR+8
 26946  017576  0060  F0B4  F1DA   	movff	btemp+8,??_TMR3_ISR+9
 26947  01757C  0060  F0B8  F1DB   	movff	btemp+9,??_TMR3_ISR+10
 26948  017582  0060  F0BC  F1DC   	movff	btemp+10,??_TMR3_ISR+11
 26949  017588  0060  F0C0  F1DD   	movff	btemp+11,??_TMR3_ISR+12
 26950  01758E  EE16  F00B         	lfsr	1,___intlo_sp
 26951                           
 26952                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 26953  017592  0139               	movlb	57	; () banked
 26954  017594  9DA6               	bcf	166,6,b	;volatile
 26955                           
 26956                           ; BSR set to: 57
 26957                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 26958  017596  0060  F04B  FFE6   	movff	_timer3ReloadVal,postinc1
 26959  01759C  0060  F04F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 26960  0175A2  EC38  F0C4         	call	_TMR3_WriteTimer	;wreg free
 26961                           
 26962                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 26963  0175A6  4A10               	infsnz	TMR3_ISR@CountCallBack^0,f,c	;volatile
 26964  0175A8  2A11               	incf	(TMR3_ISR@CountCallBack+1)^0,f,c	;volatile
 26965  0175AA  5011               	movf	(TMR3_ISR@CountCallBack+1)^0,w,c	;volatile
 26966  0175AC  E104               	bnz	i1u1071_20
 26967  0175AE  0E28               	movlw	40
 26968  0175B0  5C10               	subwf	TMR3_ISR@CountCallBack^0,w,c	;volatile
 26969  0175B2  A0D8               	btfss	status,0,c
 26970  0175B4  D004               	goto	i1l1235
 26971  0175B6                     i1u1071_20:
 26972                           
 26973                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 26974  0175B6  ECB1  F0C7         	call	_TMR3_CallBack	;wreg free
 26975                           
 26976                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 26977  0175BA  6A10               	clrf	TMR3_ISR@CountCallBack^0,c	;volatile
 26978  0175BC  6A11               	clrf	(TMR3_ISR@CountCallBack+1)^0,c	;volatile
 26979  0175BE                     i1l1235:
 26980  0175BE  0060  F774  F030   	movff	??_TMR3_ISR+12,btemp+11
 26981  0175C4  0060  F770  F02F   	movff	??_TMR3_ISR+11,btemp+10
 26982  0175CA  0060  F76C  F02E   	movff	??_TMR3_ISR+10,btemp+9
 26983  0175D0  0060  F768  F02D   	movff	??_TMR3_ISR+9,btemp+8
 26984  0175D6  0060  F764  F02C   	movff	??_TMR3_ISR+8,btemp+7
 26985  0175DC  0060  F760  F02B   	movff	??_TMR3_ISR+7,btemp+6
 26986  0175E2  0060  F75C  F02A   	movff	??_TMR3_ISR+6,btemp+5
 26987  0175E8  0060  F758  F029   	movff	??_TMR3_ISR+5,btemp+4
 26988  0175EE  0060  F754  F028   	movff	??_TMR3_ISR+4,btemp+3
 26989  0175F4  0060  F750  F027   	movff	??_TMR3_ISR+3,btemp+2
 26990  0175FA  0060  F74C  F026   	movff	??_TMR3_ISR+2,btemp+1
 26991  017600  0060  F748  F025   	movff	??_TMR3_ISR+1,btemp
 26992  017606  0060  F747  FFD8   	movff	??_TMR3_ISR,status
 26993  01760C  0011               	retfie		f
 26994  01760E                     __end_of_TMR3_ISR:
 26995                           	opt callstack 0
 26996                           
 26997 ;; *************** function _TMR3_WriteTimer *****************
 26998 ;; Defined at:
 26999 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 27000 ;; Parameters:    Size  Location     Type
 27001 ;;  timerVal        2  [STACK] unsigned short 
 27002 ;; Auto vars:     Size  Location     Type
 27003 ;;		None
 27004 ;; Return value:  Size  Location     Type
 27005 ;;                  1  [STACK] void 
 27006 ;; Registers used:
 27007 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 27008 ;; Tracked objects:
 27009 ;;		On entry : 3F/39
 27010 ;;		On exit  : 0/0
 27011 ;;		Unchanged: 0/0
 27012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27017 ;;Total ram usage:        0 bytes
 27018 ;; Hardware stack levels used:    1
 27019 ;; Hardware stack levels required when called:    3
 27020 ;; This function calls:
 27021 ;;		Nothing
 27022 ;; This function is called by:
 27023 ;;		_TMR3_ISR
 27024 ;; This function uses a reentrant model
 27025 ;;
 27026                           
 27027                           	psect	text134
 27028  018870                     __ptext134:
 27029                           	opt callstack 0
 27030  018870                     _TMR3_WriteTimer:
 27031                           	opt callstack 13
 27032                           
 27033                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 27034                           
 27035                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27036                           ;incstack = 0
 27037  018870  A4A6               	btfss	166,2,c	;volatile
 27038  018872  D00F               	goto	l5871
 27039                           
 27040                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 27041  018874  90A6               	bcf	166,0,c	;volatile
 27042                           
 27043                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 27044                           ;stkvar	_timerVal @ sp[(0)+-2]
 27045  018876  0EFF               	movlw	255
 27046  018878  24E1               	addwf	fsr1l,w,c
 27047  01887A  6ED9               	movwf	fsr2l,c
 27048  01887C  0EFF               	movlw	255
 27049  01887E  20E2               	addwfc	fsr1h,w,c
 27050  018880  6EDA               	movwf	fsr2h,c
 27051  018882  50DF               	movf	indf2,w,c
 27052  018884  6EA5               	movwf	165,c	;volatile
 27053                           
 27054                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 27055                           ;stkvar	_timerVal @ sp[(0)+-2]
 27056  018886  0EFE               	movlw	-2
 27057  018888  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 27058                           
 27059                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 27060  01888E  80A6               	bsf	166,0,c	;volatile
 27061                           
 27062                           ;mcc_generated_files/tmr3.c: 141:     }
 27063  018890  D00C               	goto	l1218
 27064  018892                     l5871:
 27065                           
 27066                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 27067                           ;stkvar	_timerVal @ sp[(0)+-2]
 27068  018892  0EFF               	movlw	255
 27069  018894  24E1               	addwf	fsr1l,w,c
 27070  018896  6ED9               	movwf	fsr2l,c
 27071  018898  0EFF               	movlw	255
 27072  01889A  20E2               	addwfc	fsr1h,w,c
 27073  01889C  6EDA               	movwf	fsr2h,c
 27074  01889E  50DF               	movf	indf2,w,c
 27075  0188A0  6EA5               	movwf	165,c	;volatile
 27076                           
 27077                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 27078                           ;stkvar	_timerVal @ sp[(0)+-2]
 27079  0188A2  0EFE               	movlw	-2
 27080  0188A4  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 27081  0188AA                     l1218:
 27082                           
 27083                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 27084  0188AA  52E5               	movf	postdec1,f,c
 27085  0188AC  52E5               	movf	postdec1,f,c
 27086  0188AE  0012               	return		;funcret
 27087  0188B0                     __end_of_TMR3_WriteTimer:
 27088                           	opt callstack 0
 27089                           
 27090 ;; *************** function _TMR3_CallBack *****************
 27091 ;; Defined at:
 27092 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 27093 ;; Parameters:    Size  Location     Type
 27094 ;;		None
 27095 ;; Auto vars:     Size  Location     Type
 27096 ;;		None
 27097 ;; Return value:  Size  Location     Type
 27098 ;;                  1  [STACK] void 
 27099 ;; Registers used:
 27100 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl
 27101 ;; Tracked objects:
 27102 ;;		On entry : 0/39
 27103 ;;		On exit  : 0/0
 27104 ;;		Unchanged: 0/0
 27105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27110 ;;Total ram usage:        0 bytes
 27111 ;; Hardware stack levels used:    1
 27112 ;; Hardware stack levels required when called:    5
 27113 ;; This function calls:
 27114 ;;		Absolute function
 27115 ;;		_TMR3_DefaultInterruptHandler
 27116 ;;		_calc_bsoc
 27117 ;; This function is called by:
 27118 ;;		_TMR3_ISR
 27119 ;; This function uses a reentrant model
 27120 ;;
 27121                           
 27122                           	psect	text135
 27123  018F62                     __ptext135:
 27124                           	opt callstack 0
 27125  018F62                     _TMR3_CallBack:
 27126                           	opt callstack 11
 27127                           
 27128                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 27129                           
 27130                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27131                           ;incstack = 0
 27132  018F62  0100               	movlb	0	; () banked
 27133  018F64  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 27134  018F66  11AA               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 27135  018F68  11AB               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 27136  018F6A  B4D8               	btfsc	status,2,c
 27137  018F6C  0012               	return	
 27138                           
 27139                           ; BSR set to: 0
 27140                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 27141  018F6E  D801               	call	u872_28
 27142  018F70  0012               	return	
 27143  018F72                     u872_28:
 27144  018F72  0005               	push	
 27145  018F74  6EFA               	movwf	pclath,c
 27146  018F76  51A9               	movf	_TMR3_InterruptHandler& (0+255),w,b
 27147  018F78  6EFD               	movwf	tosl,c
 27148  018F7A  51AA               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 27149  018F7C  6EFE               	movwf	tosh,c
 27150  018F7E  51AB               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 27151  018F80  6EFF               	movwf	tosu,c
 27152  018F82  50FA               	movf	pclath,w,c
 27153  018F84  0012               	return		;indir
 27154  018F86                     __end_of_TMR3_CallBack:
 27155                           	opt callstack 0
 27156                           
 27157 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 27158 ;; Defined at:
 27159 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 27160 ;; Parameters:    Size  Location     Type
 27161 ;;		None
 27162 ;; Auto vars:     Size  Location     Type
 27163 ;;		None
 27164 ;; Return value:  Size  Location     Type
 27165 ;;                  1  [STACK] void 
 27166 ;; Registers used:
 27167 ;;		None
 27168 ;; Tracked objects:
 27169 ;;		On entry : 3F/0
 27170 ;;		On exit  : 0/0
 27171 ;;		Unchanged: 0/0
 27172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27177 ;;Total ram usage:        0 bytes
 27178 ;; Hardware stack levels used:    1
 27179 ;; Hardware stack levels required when called:    3
 27180 ;; This function calls:
 27181 ;;		Nothing
 27182 ;; This function is called by:
 27183 ;;		_TMR3_Initialize
 27184 ;;		_TMR3_CallBack
 27185 ;; This function uses a reentrant model
 27186 ;;
 27187                           
 27188                           	psect	text136
 27189  019280                     __ptext136:
 27190                           	opt callstack 0
 27191  019280                     _TMR3_DefaultInterruptHandler:
 27192                           	opt callstack 12
 27193                           
 27194                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27195                           
 27196                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27197                           ;incstack = 0
 27198  019280  0012               	return		;funcret
 27199  019282                     __end_of_TMR3_DefaultInterruptHandler:
 27200                           	opt callstack 0
 27201                           
 27202 ;; *************** function _calc_bsoc *****************
 27203 ;; Defined at:
 27204 ;;		line 7 in file "bsoc.c"
 27205 ;; Parameters:    Size  Location     Type
 27206 ;;		None
 27207 ;; Auto vars:     Size  Location     Type
 27208 ;;		None
 27209 ;; Return value:  Size  Location     Type
 27210 ;;                  1  [STACK] void 
 27211 ;; Registers used:
 27212 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 27213 ;; Tracked objects:
 27214 ;;		On entry : 3F/0
 27215 ;;		On exit  : 3F/1
 27216 ;;		Unchanged: 0/0
 27217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27222 ;;Total ram usage:        0 bytes
 27223 ;; Hardware stack levels used:    1
 27224 ;; Hardware stack levels required when called:    4
 27225 ;; This function calls:
 27226 ;;		___fladd
 27227 ;;		___fldiv
 27228 ;;		___flge
 27229 ;; This function is called by:
 27230 ;;		_init_bsoc
 27231 ;;		_TMR3_CallBack
 27232 ;; This function uses a reentrant model
 27233 ;;
 27234                           
 27235                           	psect	text137
 27236  01746C                     __ptext137:
 27237                           	opt callstack 0
 27238  01746C                     _calc_bsoc:
 27239                           	opt callstack 11
 27240                           
 27241                           ;bsoc.c: 9:  C.dynamic_ah += (C.c_bat/360.0);
 27242                           
 27243                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27244                           ;incstack = 0
 27245  01746C  0E00               	movlw	0
 27246  01746E  6EE6               	movwf	postinc1,c
 27247  017470  0E00               	movlw	0
 27248  017472  6EE6               	movwf	postinc1,c
 27249  017474  0EB4               	movlw	180
 27250  017476  6EE6               	movwf	postinc1,c
 27251  017478  0E43               	movlw	67
 27252  01747A  6EE6               	movwf	postinc1,c
 27253  01747C  0060  F513  FFE6   	movff	_C+68,postinc1
 27254  017482  0060  F517  FFE6   	movff	_C+69,postinc1
 27255  017488  0060  F51B  FFE6   	movff	_C+70,postinc1
 27256  01748E  0060  F51F  FFE6   	movff	_C+71,postinc1
 27257  017494  ECFB  F09A         	call	___fldiv	;wreg free
 27258  017498  0060  F097  FFE6   	movff	btemp,postinc1
 27259  01749E  0060  F09B  FFE6   	movff	btemp+1,postinc1
 27260  0174A4  0060  F09F  FFE6   	movff	btemp+2,postinc1
 27261  0174AA  0060  F0A3  FFE6   	movff	btemp+3,postinc1
 27262  0174B0  0060  F613  FFE6   	movff	_C+132,postinc1
 27263  0174B6  0060  F617  FFE6   	movff	_C+133,postinc1
 27264  0174BC  0060  F61B  FFE6   	movff	_C+134,postinc1
 27265  0174C2  0060  F61F  FFE6   	movff	_C+135,postinc1
 27266  0174C8  EC1D  F097         	call	___fladd	;wreg free
 27267  0174CC  0060  F094  F184   	movff	btemp,_C+132	;volatile
 27268  0174D2  0060  F098  F185   	movff	btemp+1,_C+133	;volatile
 27269  0174D8  0060  F09C  F186   	movff	btemp+2,_C+134	;volatile
 27270  0174DE  0060  F0A0  F187   	movff	btemp+3,_C+135	;volatile
 27271                           
 27272                           ;bsoc.c: 10:  if (C.dynamic_ah>C.bank_ah)
 27273  0174E4  0060  F613  FFE6   	movff	_C+132,postinc1
 27274  0174EA  0060  F617  FFE6   	movff	_C+133,postinc1
 27275  0174F0  0060  F61B  FFE6   	movff	_C+134,postinc1
 27276  0174F6  0060  F61F  FFE6   	movff	_C+135,postinc1
 27277  0174FC  0060  F5F3  FFE6   	movff	_C+124,postinc1
 27278  017502  0060  F5F7  FFE6   	movff	_C+125,postinc1
 27279  017508  0060  F5FB  FFE6   	movff	_C+126,postinc1
 27280  01750E  0060  F5FF  FFE6   	movff	_C+127,postinc1
 27281  017514  EC10  F0B3         	call	___flge	;wreg free
 27282  017518  B025               	btfsc	btemp& (0+255),0,c
 27283  01751A  D008               	goto	l9195
 27284                           
 27285                           ;bsoc.c: 11:   C.dynamic_ah=C.bank_ah;
 27286  01751C  C17C  F184         	movff	_C+124,_C+132	;volatile
 27287  017520  C17D  F185         	movff	_C+125,_C+133	;volatile
 27288  017524  C17E  F186         	movff	_C+126,_C+134	;volatile
 27289  017528  C17F  F187         	movff	_C+127,_C+135	;volatile
 27290  01752C                     l9195:
 27291                           
 27292                           ;bsoc.c: 13:  V.lowint_count++;
 27293  01752C  0E01               	movlw	1
 27294  01752E  0102               	movlb	2	; () banked
 27295  017530  27B0               	addwf	(_V+176)& (0+255),f,b	;volatile
 27296  017532  0E00               	movlw	0
 27297  017534  23B1               	addwfc	(_V+177)& (0+255),f,b	;volatile
 27298  017536  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 27299  017538  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 27300                           
 27301                           ; BSR set to: 2
 27302                           ;bsoc.c: 14:  C.update=0;
 27303  01753A  0101               	movlb	1	; () banked
 27304  01753C  6BA0               	clrf	(_C+160)& (0+255),b	;volatile
 27305                           
 27306                           ; BSR set to: 1
 27307                           ; _calc_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 27308  01753E  0012               	return		;funcret
 27309  017540                     __end_of_calc_bsoc:
 27310                           	opt callstack 0
 27311                           
 27312 ;; *************** function _INT0_ISR *****************
 27313 ;; Defined at:
 27314 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 27315 ;; Parameters:    Size  Location     Type
 27316 ;;		None
 27317 ;; Auto vars:     Size  Location     Type
 27318 ;;		None
 27319 ;; Return value:  Size  Location     Type
 27320 ;;                  1    wreg      void 
 27321 ;; Registers used:
 27322 ;;		wreg, status,2, status,0, pclath, tosl
 27323 ;; Tracked objects:
 27324 ;;		On entry : 0/0
 27325 ;;		On exit  : 0/0
 27326 ;;		Unchanged: 0/0
 27327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27329 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27331 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27332 ;;Total ram usage:        0 bytes
 27333 ;; Hardware stack levels used:    1
 27334 ;; Hardware stack levels required when called:    2
 27335 ;; This function calls:
 27336 ;;		_INT0_CallBack
 27337 ;; This function is called by:
 27338 ;;		Interrupt level 2
 27339 ;; This function uses a non-reentrant model
 27340 ;;
 27341                           
 27342                           	psect	text138
 27343  0191E8                     __ptext138:
 27344                           	opt callstack 0
 27345  0191E8                     _INT0_ISR:
 27346                           	opt callstack 11
 27347                           
 27348                           ; BSR set to: 1
 27349                           ;incstack = 0
 27350  0191E8  EE14  F016         	lfsr	1,___inthi_sp
 27351                           
 27352                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 27353  0191EC  0139               	movlb	57	; () banked
 27354  0191EE  91A1               	bcf	161,0,b	;volatile
 27355                           
 27356                           ; BSR set to: 57
 27357                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 27358  0191F0  ECE6  F0C7         	call	_INT0_CallBack	;wreg free
 27359  0191F4  0011               	retfie		f
 27360  0191F6                     __end_of_INT0_ISR:
 27361                           	opt callstack 0
 27362                           
 27363 ;; *************** function _INT0_CallBack *****************
 27364 ;; Defined at:
 27365 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 27366 ;; Parameters:    Size  Location     Type
 27367 ;;		None
 27368 ;; Auto vars:     Size  Location     Type
 27369 ;;		None
 27370 ;; Return value:  Size  Location     Type
 27371 ;;                  1  [STACK] void 
 27372 ;; Registers used:
 27373 ;;		wreg, status,2, status,0, pclath, tosl
 27374 ;; Tracked objects:
 27375 ;;		On entry : 3F/39
 27376 ;;		On exit  : 0/0
 27377 ;;		Unchanged: 0/0
 27378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27383 ;;Total ram usage:        0 bytes
 27384 ;; Hardware stack levels used:    1
 27385 ;; Hardware stack levels required when called:    1
 27386 ;; This function calls:
 27387 ;;		Absolute function
 27388 ;;		_INT0_DefaultInterruptHandler
 27389 ;; This function is called by:
 27390 ;;		_INT0_ISR
 27391 ;; This function uses a reentrant model
 27392 ;;
 27393                           
 27394                           	psect	text139
 27395  018FCC                     __ptext139:
 27396                           	opt callstack 0
 27397  018FCC                     _INT0_CallBack:
 27398                           	opt callstack 11
 27399                           
 27400                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 27401                           
 27402                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27403                           ;incstack = 0
 27404  018FCC  5007               	movf	_INT0_InterruptHandler^0,w,c
 27405  018FCE  1008               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 27406  018FD0  1009               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 27407  018FD2  B4D8               	btfsc	status,2,c
 27408  018FD4  0012               	return	
 27409                           
 27410                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 27411  018FD6  D801               	call	u399_48
 27412  018FD8  0012               	return	
 27413  018FDA                     u399_48:
 27414  018FDA  0005               	push	
 27415  018FDC  6EFA               	movwf	pclath,c
 27416  018FDE  5007               	movf	_INT0_InterruptHandler^0,w,c
 27417  018FE0  6EFD               	movwf	tosl,c
 27418  018FE2  5008               	movf	(_INT0_InterruptHandler+1)^0,w,c
 27419  018FE4  6EFE               	movwf	tosh,c
 27420  018FE6  5009               	movf	(_INT0_InterruptHandler+2)^0,w,c
 27421  018FE8  6EFF               	movwf	tosu,c
 27422  018FEA  50FA               	movf	pclath,w,c
 27423  018FEC  0012               	return		;indir
 27424  018FEE                     __end_of_INT0_CallBack:
 27425                           	opt callstack 0
 27426                           
 27427 ;; *************** function _INT0_DefaultInterruptHandler *****************
 27428 ;; Defined at:
 27429 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 27430 ;; Parameters:    Size  Location     Type
 27431 ;;		None
 27432 ;; Auto vars:     Size  Location     Type
 27433 ;;		None
 27434 ;; Return value:  Size  Location     Type
 27435 ;;                  1  [STACK] void 
 27436 ;; Registers used:
 27437 ;;		None
 27438 ;; Tracked objects:
 27439 ;;		On entry : 0/39
 27440 ;;		On exit  : 0/0
 27441 ;;		Unchanged: 0/0
 27442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27447 ;;Total ram usage:        0 bytes
 27448 ;; Hardware stack levels used:    1
 27449 ;; This function calls:
 27450 ;;		Nothing
 27451 ;; This function is called by:
 27452 ;;		_EXT_INT_Initialize
 27453 ;;		_INT0_CallBack
 27454 ;; This function uses a reentrant model
 27455 ;;
 27456                           
 27457                           	psect	text140
 27458  019282                     __ptext140:
 27459                           	opt callstack 0
 27460  019282                     _INT0_DefaultInterruptHandler:
 27461                           	opt callstack 11
 27462                           
 27463                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27464                           
 27465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27466                           ;incstack = 0
 27467  019282  0012               	return		;funcret
 27468  019284                     __end_of_INT0_DefaultInterruptHandler:
 27469                           	opt callstack 0
 27470                           
 27471 ;; *************** function _Default_ISR *****************
 27472 ;; Defined at:
 27473 ;;		line 89 in file "mcc_generated_files/interrupt_manager.c"
 27474 ;; Parameters:    Size  Location     Type
 27475 ;;		None
 27476 ;; Auto vars:     Size  Location     Type
 27477 ;;		None
 27478 ;; Return value:  Size  Location     Type
 27479 ;;                  1    wreg      void 
 27480 ;; Registers used:
 27481 ;;		None
 27482 ;; Tracked objects:
 27483 ;;		On entry : 0/0
 27484 ;;		On exit  : 0/0
 27485 ;;		Unchanged: 0/0
 27486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27491 ;;Total ram usage:        0 bytes
 27492 ;; Hardware stack levels used:    1
 27493 ;; This function calls:
 27494 ;;		Nothing
 27495 ;; This function is called by:
 27496 ;;		Interrupt level 2
 27497 ;; This function uses a non-reentrant model
 27498 ;;
 27499                           
 27500                           	psect	text141
 27501  019278                     __ptext141:
 27502                           	opt callstack 0
 27503  019278                     _Default_ISR:
 27504                           	opt callstack 13
 27505                           
 27506                           ;incstack = 0
 27507  019278  EE14  F016         	lfsr	1,___inthi_sp
 27508  01927C  0011               	retfie		f
 27509  01927E                     __end_of_Default_ISR:
 27510                           	opt callstack 0
 27511                           
 27512 ;; *************** function _ADCC_ISR *****************
 27513 ;; Defined at:
 27514 ;;		line 314 in file "mcc_generated_files/adcc.c"
 27515 ;; Parameters:    Size  Location     Type
 27516 ;;		None
 27517 ;; Auto vars:     Size  Location     Type
 27518 ;;		None
 27519 ;; Return value:  Size  Location     Type
 27520 ;;                  1    wreg      void 
 27521 ;; Registers used:
 27522 ;;		wreg, status,2, status,0, pclath, tosl
 27523 ;; Tracked objects:
 27524 ;;		On entry : 0/0
 27525 ;;		On exit  : 0/0
 27526 ;;		Unchanged: 0/0
 27527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27532 ;;Total ram usage:        0 bytes
 27533 ;; Hardware stack levels used:    1
 27534 ;; Hardware stack levels required when called:    1
 27535 ;; This function calls:
 27536 ;;		Absolute function
 27537 ;;		_ADCC_DefaultInterruptHandler
 27538 ;;		_adc_int_handler
 27539 ;; This function is called by:
 27540 ;;		Interrupt level 2
 27541 ;; This function uses a non-reentrant model
 27542 ;;
 27543                           
 27544                           	psect	text142
 27545  018B24                     __ptext142:
 27546                           	opt callstack 0
 27547  018B24                     _ADCC_ISR:
 27548                           	opt callstack 12
 27549                           
 27550                           ;incstack = 0
 27551  018B24  EE14  F016         	lfsr	1,___inthi_sp
 27552                           
 27553                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 27554  018B28  0139               	movlb	57	; () banked
 27555  018B2A  95A1               	bcf	161,2,b	;volatile
 27556                           
 27557                           ; BSR set to: 57
 27558                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 27559  018B2C  0100               	movlb	0	; () banked
 27560  018B2E  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 27561  018B30  11B6               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 27562  018B32  11B7               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 27563  018B34  B4D8               	btfsc	status,2,c
 27564  018B36  0011               	retfie		f
 27565                           
 27566                           ; BSR set to: 0
 27567                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 27568  018B38  D801               	call	i2u894_48
 27569  018B3A  0011               	retfie		f
 27570  018B3C                     i2u894_48:
 27571  018B3C  0005               	push	
 27572  018B3E  6EFA               	movwf	pclath,c
 27573  018B40  51B5               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 27574  018B42  6EFD               	movwf	tosl,c
 27575  018B44  51B6               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 27576  018B46  6EFE               	movwf	tosh,c
 27577  018B48  51B7               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 27578  018B4A  6EFF               	movwf	tosu,c
 27579  018B4C  50FA               	movf	pclath,w,c
 27580  018B4E  0012               	return		;indir
 27581  018B50                     __end_of_ADCC_ISR:
 27582                           	opt callstack 0
 27583                           
 27584 ;; *************** function _adc_int_t_handler *****************
 27585 ;; Defined at:
 27586 ;;		line 128 in file "daq.c"
 27587 ;; Parameters:    Size  Location     Type
 27588 ;;		None
 27589 ;; Auto vars:     Size  Location     Type
 27590 ;;		None
 27591 ;; Return value:  Size  Location     Type
 27592 ;;                  1  [STACK] void 
 27593 ;; Registers used:
 27594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 27595 ;; Tracked objects:
 27596 ;;		On entry : 3F/0
 27597 ;;		On exit  : 1/0
 27598 ;;		Unchanged: 0/0
 27599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27604 ;;Total ram usage:        0 bytes
 27605 ;; Hardware stack levels used:    1
 27606 ;; Hardware stack levels required when called:    1
 27607 ;; This function calls:
 27608 ;;		_ADCC_DischargeSampleCapacitor
 27609 ;;		_ADCC_StartConversion
 27610 ;; This function is called by:
 27611 ;;		_start_adc_scan
 27612 ;;		_ADCC_ThresholdISR
 27613 ;; This function uses a reentrant model
 27614 ;;
 27615                           
 27616                           	psect	text143
 27617  017F72                     __ptext143:
 27618                           	opt callstack 0
 27619  017F72                     _adc_int_t_handler:
 27620                           	opt callstack 11
 27621                           
 27622                           ;daq.c: 133:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 27623                           
 27624                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27625                           ;incstack = 0
 27626  017F72  013E               	movlb	62	; () banked
 27627  017F74  51E6               	movf	230,w,b	;volatile
 27628  017F76  006F FB9C  F025    	movff	16103,btemp	;volatile
 27629  017F7C  6A26               	clrf	(btemp+1)^0,c
 27630  017F7E  0060  F094  F026   	movff	btemp,btemp+1
 27631  017F84  6A25               	clrf	btemp^0,c
 27632  017F86  2625               	addwf	btemp^0,f,c
 27633  017F88  0E00               	movlw	0
 27634  017F8A  2226               	addwfc	(btemp+1)^0,f,c
 27635  017F8C  0100               	movlb	0	; () banked
 27636  017F8E  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
 27637  017F90  0D02               	mullw	2
 27638  017F92  50F3               	movf	243,w,c
 27639  017F94  0FC3               	addlw	low _R
 27640  017F96  6ED9               	movwf	fsr2l,c
 27641  017F98  6ADA               	clrf	fsr2h,c
 27642  017F9A  0060  F097  FFDE   	movff	btemp,postinc2
 27643  017FA0  0060  F09B  FFDD   	movff	btemp+1,postdec2
 27644  017FA6                     l9537:
 27645                           
 27646                           ;daq.c: 135:   if (++R.scan_index > 0XD) {
 27647  017FA6  0100               	movlb	0	; () banked
 27648  017FA8  2BE7               	incf	(_R+36)& (0+255),f,b	;volatile
 27649  017FAA  0E0D               	movlw	13
 27650  017FAC  65E7               	cpfsgt	(_R+36)& (0+255),b	;volatile
 27651  017FAE  D003               	goto	l9543
 27652                           
 27653                           ; BSR set to: 0
 27654                           ;daq.c: 136:    R.done = 1;
 27655  017FB0  0E01               	movlw	1
 27656  017FB2  6FEA               	movwf	(_R+39)& (0+255),b	;volatile
 27657  017FB4  0012               	return	
 27658  017FB6                     l9543:
 27659                           
 27660                           ; BSR set to: 0
 27661                           ;daq.c: 142:  } while (!((R.scan_select >> R.scan_index) &0x1));
 27662  017FB6  0060  F39C  F030   	movff	_R+36,btemp+11	;volatile
 27663  017FBC  EE20  F0E8         	lfsr	2,_R+37	;volatile
 27664  017FC0  006F FF78  F02D    	movff	postinc2,btemp+8
 27665  017FC6  006F FF74  F02E    	movff	postdec2,btemp+9
 27666  017FCC  2A30               	incf	(btemp+11)^0,f,c
 27667  017FCE  D003               	goto	u891_44
 27668  017FD0                     u891_45:
 27669  017FD0  90D8               	bcf	status,0,c
 27670  017FD2  322E               	rrcf	(btemp+9)^0,f,c
 27671  017FD4  322D               	rrcf	(btemp+8)^0,f,c
 27672  017FD6                     u891_44:
 27673  017FD6  2E30               	decfsz	(btemp+11)^0,f,c
 27674  017FD8  D7FB               	goto	u891_45
 27675  017FDA  A02D               	btfss	(btemp+8)^0,0,c
 27676  017FDC  D7E4               	goto	l9537
 27677                           
 27678                           ;daq.c: 143:  ADCC_DischargeSampleCapacitor();
 27679  017FDE  EC19  F0C9         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 27680                           
 27681                           ; BSR set to: 62
 27682                           ;daq.c: 144:  ADCC_StartConversion(R.scan_index & 0xf);
 27683  017FE2  0100               	movlb	0	; () banked
 27684  017FE4  51E7               	movf	(_R+36)& (0+255),w,b	;volatile
 27685  017FE6  0B0F               	andlw	15
 27686  017FE8  6EE6               	movwf	postinc1,c
 27687  017FEA  ECCC  F0C8         	call	_ADCC_StartConversion	;wreg free
 27688                           
 27689                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 27690  017FEE  0012               	return		;funcret
 27691  017FF0                     __end_of_adc_int_t_handler:
 27692                           	opt callstack 0
 27693                           
 27694 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 27695 ;; Defined at:
 27696 ;;		line 339 in file "mcc_generated_files/adcc.c"
 27697 ;; Parameters:    Size  Location     Type
 27698 ;;		None
 27699 ;; Auto vars:     Size  Location     Type
 27700 ;;		None
 27701 ;; Return value:  Size  Location     Type
 27702 ;;                  1  [STACK] void 
 27703 ;; Registers used:
 27704 ;;		None
 27705 ;; Tracked objects:
 27706 ;;		On entry : 3F/0
 27707 ;;		On exit  : 0/0
 27708 ;;		Unchanged: 0/0
 27709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27714 ;;Total ram usage:        0 bytes
 27715 ;; Hardware stack levels used:    1
 27716 ;; This function calls:
 27717 ;;		Nothing
 27718 ;; This function is called by:
 27719 ;;		_ADCC_Initialize
 27720 ;;		_ADCC_ISR
 27721 ;;		_ADCC_ThresholdISR
 27722 ;; This function uses a reentrant model
 27723 ;;
 27724                           
 27725                           	psect	text144
 27726  019284                     __ptext144:
 27727                           	opt callstack 0
 27728  019284                     _ADCC_DefaultInterruptHandler:
 27729                           	opt callstack 12
 27730                           
 27731                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 27732                           
 27733                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27734                           ;incstack = 0
 27735  019284  0012               	return		;funcret
 27736  019286                     __end_of_ADCC_DefaultInterruptHandler:
 27737                           	opt callstack 0
 27738                           
 27739 ;; *************** function _adc_int_handler *****************
 27740 ;; Defined at:
 27741 ;;		line 118 in file "daq.c"
 27742 ;; Parameters:    Size  Location     Type
 27743 ;;		None
 27744 ;; Auto vars:     Size  Location     Type
 27745 ;;		None
 27746 ;; Return value:  Size  Location     Type
 27747 ;;                  1  [STACK] void 
 27748 ;; Registers used:
 27749 ;;		None
 27750 ;; Tracked objects:
 27751 ;;		On entry : 3F/0
 27752 ;;		On exit  : 0/0
 27753 ;;		Unchanged: 0/0
 27754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27759 ;;Total ram usage:        0 bytes
 27760 ;; Hardware stack levels used:    1
 27761 ;; This function calls:
 27762 ;;		Nothing
 27763 ;; This function is called by:
 27764 ;;		_start_adc_scan
 27765 ;;		_ADCC_ISR
 27766 ;; This function uses a reentrant model
 27767 ;;
 27768                           
 27769                           	psect	text145
 27770  019286                     __ptext145:
 27771                           	opt callstack 0
 27772  019286                     _adc_int_handler:
 27773                           	opt callstack 12
 27774                           
 27775                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 27776                           
 27777                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27778                           ;incstack = 0
 27779  019286  0012               	return		;funcret
 27780  019288                     __end_of_adc_int_handler:
 27781                           	opt callstack 0
 27782                           
 27783 ;; *************** function _ADCC_ThresholdISR *****************
 27784 ;; Defined at:
 27785 ;;		line 327 in file "mcc_generated_files/adcc.c"
 27786 ;; Parameters:    Size  Location     Type
 27787 ;;		None
 27788 ;; Auto vars:     Size  Location     Type
 27789 ;;		None
 27790 ;; Return value:  Size  Location     Type
 27791 ;;                  1    wreg      void 
 27792 ;; Registers used:
 27793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 27794 ;; Tracked objects:
 27795 ;;		On entry : 0/0
 27796 ;;		On exit  : 0/0
 27797 ;;		Unchanged: 0/0
 27798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27801 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27802 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27803 ;;Total ram usage:        5 bytes
 27804 ;; Hardware stack levels used:    1
 27805 ;; Hardware stack levels required when called:    2
 27806 ;; This function calls:
 27807 ;;		Absolute function
 27808 ;;		_ADCC_DefaultInterruptHandler
 27809 ;;		_adc_int_t_handler
 27810 ;; This function is called by:
 27811 ;;		Interrupt level 2
 27812 ;; This function uses a non-reentrant model
 27813 ;;
 27814                           
 27815                           	psect	text146
 27816  0180C4                     __ptext146:
 27817                           	opt callstack 0
 27818  0180C4                     _ADCC_ThresholdISR:
 27819                           	opt callstack 11
 27820                           
 27821                           ;incstack = 0
 27822  0180C4  0060  F094  F045   	movff	btemp,??_ADCC_ThresholdISR
 27823  0180CA  0060  F098  F046   	movff	btemp+1,??_ADCC_ThresholdISR+1
 27824  0180D0  0060  F0B4  F047   	movff	btemp+8,??_ADCC_ThresholdISR+2
 27825  0180D6  0060  F0B8  F048   	movff	btemp+9,??_ADCC_ThresholdISR+3
 27826  0180DC  0060  F0C0  F049   	movff	btemp+11,??_ADCC_ThresholdISR+4
 27827  0180E2  EE14  F016         	lfsr	1,___inthi_sp
 27828                           
 27829                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 27830  0180E6  0139               	movlb	57	; () banked
 27831  0180E8  97A1               	bcf	161,3,b	;volatile
 27832                           
 27833                           ; BSR set to: 57
 27834                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 27835  0180EA  0100               	movlb	0	; () banked
 27836  0180EC  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 27837  0180EE  11B3               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 27838  0180F0  11B4               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 27839  0180F2  B4D8               	btfsc	status,2,c
 27840  0180F4  D00C               	goto	i2u896_49
 27841                           
 27842                           ; BSR set to: 0
 27843                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 27844  0180F6  D801               	call	i2u896_48
 27845  0180F8  D00A               	goto	i2u896_49
 27846  0180FA                     i2u896_48:
 27847  0180FA  0005               	push	
 27848  0180FC  6EFA               	movwf	pclath,c
 27849  0180FE  51B2               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 27850  018100  6EFD               	movwf	tosl,c
 27851  018102  51B3               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 27852  018104  6EFE               	movwf	tosh,c
 27853  018106  51B4               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 27854  018108  6EFF               	movwf	tosu,c
 27855  01810A  50FA               	movf	pclath,w,c
 27856  01810C  0012               	return		;indir
 27857  01810E                     i2u896_49:
 27858  01810E  0060  F124  F030   	movff	??_ADCC_ThresholdISR+4,btemp+11
 27859  018114  0060  F120  F02E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 27860  01811A  0060  F11C  F02D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 27861  018120  0060  F118  F026   	movff	??_ADCC_ThresholdISR+1,btemp+1
 27862  018126  0060  F114  F025   	movff	??_ADCC_ThresholdISR,btemp
 27863  01812C  0011               	retfie		f
 27864  01812E                     __end_of_ADCC_ThresholdISR:
 27865                           	opt callstack 0
 27866                           
 27867 ;; *************** function _UART1_tx_vect_isr *****************
 27868 ;; Defined at:
 27869 ;;		line 199 in file "mcc_generated_files/uart1.c"
 27870 ;; Parameters:    Size  Location     Type
 27871 ;;		None
 27872 ;; Auto vars:     Size  Location     Type
 27873 ;;		None
 27874 ;; Return value:  Size  Location     Type
 27875 ;;                  1    wreg      void 
 27876 ;; Registers used:
 27877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 27878 ;; Tracked objects:
 27879 ;;		On entry : 0/0
 27880 ;;		On exit  : 0/0
 27881 ;;		Unchanged: 0/0
 27882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27887 ;;Total ram usage:        0 bytes
 27888 ;; Hardware stack levels used:    1
 27889 ;; Hardware stack levels required when called:    1
 27890 ;; This function calls:
 27891 ;;		Absolute function
 27892 ;;		_UART1_Transmit_ISR
 27893 ;; This function is called by:
 27894 ;;		Interrupt level 2
 27895 ;; This function uses a non-reentrant model
 27896 ;;
 27897                           
 27898                           	psect	text147
 27899  018E7C                     __ptext147:
 27900                           	opt callstack 0
 27901  018E7C                     _UART1_tx_vect_isr:
 27902                           	opt callstack 12
 27903                           
 27904                           ;incstack = 0
 27905  018E7C  EE14  F016         	lfsr	1,___inthi_sp
 27906                           
 27907                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 27908  018E80  0100               	movlb	0	; () banked
 27909  018E82  51B8               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 27910  018E84  11B9               	iorwf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 27911  018E86  11BA               	iorwf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 27912  018E88  B4D8               	btfsc	status,2,c
 27913  018E8A  0011               	retfie		f
 27914                           
 27915                           ; BSR set to: 0
 27916                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 27917  018E8C  D801               	call	i2u898_48
 27918  018E8E  0011               	retfie		f
 27919  018E90                     i2u898_48:
 27920  018E90  0005               	push	
 27921  018E92  6EFA               	movwf	pclath,c
 27922  018E94  51B8               	movf	_UART1_TxInterruptHandler& (0+255),w,b
 27923  018E96  6EFD               	movwf	tosl,c
 27924  018E98  51B9               	movf	(_UART1_TxInterruptHandler+1)& (0+255),w,b
 27925  018E9A  6EFE               	movwf	tosh,c
 27926  018E9C  51BA               	movf	(_UART1_TxInterruptHandler+2)& (0+255),w,b
 27927  018E9E  6EFF               	movwf	tosu,c
 27928  018EA0  50FA               	movf	pclath,w,c
 27929  018EA2  0012               	return		;indir
 27930  018EA4                     __end_of_UART1_tx_vect_isr:
 27931                           	opt callstack 0
 27932                           
 27933 ;; *************** function _UART1_Transmit_ISR *****************
 27934 ;; Defined at:
 27935 ;;		line 213 in file "mcc_generated_files/uart1.c"
 27936 ;; Parameters:    Size  Location     Type
 27937 ;;		None
 27938 ;; Auto vars:     Size  Location     Type
 27939 ;;		None
 27940 ;; Return value:  Size  Location     Type
 27941 ;;                  1  [STACK] void 
 27942 ;; Registers used:
 27943 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 27944 ;; Tracked objects:
 27945 ;;		On entry : 3F/0
 27946 ;;		On exit  : 3B/39
 27947 ;;		Unchanged: 0/0
 27948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27953 ;;Total ram usage:        0 bytes
 27954 ;; Hardware stack levels used:    1
 27955 ;; This function calls:
 27956 ;;		Nothing
 27957 ;; This function is called by:
 27958 ;;		_UART1_Initialize
 27959 ;;		_UART1_tx_vect_isr
 27960 ;; This function uses a reentrant model
 27961 ;;
 27962                           
 27963                           	psect	text148
 27964  018B50                     __ptext148:
 27965                           	opt callstack 0
 27966  018B50                     _UART1_Transmit_ISR:
 27967                           	opt callstack 12
 27968                           
 27969                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 27970                           
 27971                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 27972                           ;incstack = 0
 27973  018B50  0E40               	movlw	64
 27974  018B52  6022               	cpfslt	_uart1TxBufferRemaining^0,c
 27975  018B54  D010               	goto	l583
 27976                           
 27977                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 27978  018B56  0EBC               	movlw	low _uart1TxBuffer
 27979  018B58  2423               	addwf	_uart1TxTail^0,w,c	;volatile
 27980  018B5A  6ED9               	movwf	fsr2l,c
 27981  018B5C  6ADA               	clrf	fsr2h,c
 27982  018B5E  0E02               	movlw	high _uart1TxBuffer
 27983  018B60  22DA               	addwfc	fsr2h,f,c
 27984  018B62  50DF               	movf	indf2,w,c
 27985  018B64  013D               	movlb	61	; () banked
 27986  018B66  6FEA               	movwf	234,b	;volatile
 27987                           
 27988                           ; BSR set to: 61
 27989  018B68  2A23               	incf	_uart1TxTail^0,f,c	;volatile
 27990                           
 27991                           ; BSR set to: 61
 27992                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 27993  018B6A  0E3F               	movlw	63
 27994  018B6C  6423               	cpfsgt	_uart1TxTail^0,c
 27995  018B6E  D001               	goto	l9249
 27996                           
 27997                           ; BSR set to: 61
 27998                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 27999  018B70  6A23               	clrf	_uart1TxTail^0,c	;volatile
 28000  018B72                     l9249:
 28001                           
 28002                           ; BSR set to: 61
 28003                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 28004  018B72  2A22               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 28005                           
 28006                           ;mcc_generated_files/uart1.c: 222:  } else {
 28007  018B74  0012               	return	
 28008  018B76                     l583:
 28009                           
 28010                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 28011  018B76  0139               	movlb	57	; () banked
 28012  018B78  9993               	bcf	147,4,b	;volatile
 28013                           
 28014                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28015  018B7A  0012               	return		;funcret
 28016  018B7C                     __end_of_UART1_Transmit_ISR:
 28017                           	opt callstack 0
 28018                           
 28019 ;; *************** function _UART1_rx_vect_isr *****************
 28020 ;; Defined at:
 28021 ;;		line 206 in file "mcc_generated_files/uart1.c"
 28022 ;; Parameters:    Size  Location     Type
 28023 ;;		None
 28024 ;; Auto vars:     Size  Location     Type
 28025 ;;		None
 28026 ;; Return value:  Size  Location     Type
 28027 ;;                  1    wreg      void 
 28028 ;; Registers used:
 28029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28030 ;; Tracked objects:
 28031 ;;		On entry : 0/0
 28032 ;;		On exit  : 0/0
 28033 ;;		Unchanged: 0/0
 28034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28039 ;;Total ram usage:        0 bytes
 28040 ;; Hardware stack levels used:    1
 28041 ;; Hardware stack levels required when called:    1
 28042 ;; This function calls:
 28043 ;;		Absolute function
 28044 ;;		_UART1_Receive_ISR
 28045 ;; This function is called by:
 28046 ;;		Interrupt level 2
 28047 ;; This function uses a non-reentrant model
 28048 ;;
 28049                           
 28050                           	psect	text149
 28051  018EA4                     __ptext149:
 28052                           	opt callstack 0
 28053  018EA4                     _UART1_rx_vect_isr:
 28054                           	opt callstack 12
 28055                           
 28056                           ;incstack = 0
 28057  018EA4  EE14  F016         	lfsr	1,___inthi_sp
 28058                           
 28059                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 28060  018EA8  0100               	movlb	0	; () banked
 28061  018EAA  51BB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 28062  018EAC  11BC               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 28063  018EAE  11BD               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 28064  018EB0  B4D8               	btfsc	status,2,c
 28065  018EB2  0011               	retfie		f
 28066                           
 28067                           ; BSR set to: 0
 28068                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 28069  018EB4  D801               	call	i2u900_48
 28070  018EB6  0011               	retfie		f
 28071  018EB8                     i2u900_48:
 28072  018EB8  0005               	push	
 28073  018EBA  6EFA               	movwf	pclath,c
 28074  018EBC  51BB               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 28075  018EBE  6EFD               	movwf	tosl,c
 28076  018EC0  51BC               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 28077  018EC2  6EFE               	movwf	tosh,c
 28078  018EC4  51BD               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 28079  018EC6  6EFF               	movwf	tosu,c
 28080  018EC8  50FA               	movf	pclath,w,c
 28081  018ECA  0012               	return		;indir
 28082  018ECC                     __end_of_UART1_rx_vect_isr:
 28083                           	opt callstack 0
 28084                           
 28085 ;; *************** function _UART1_Receive_ISR *****************
 28086 ;; Defined at:
 28087 ;;		line 229 in file "mcc_generated_files/uart1.c"
 28088 ;; Parameters:    Size  Location     Type
 28089 ;;		None
 28090 ;; Auto vars:     Size  Location     Type
 28091 ;;		None
 28092 ;; Return value:  Size  Location     Type
 28093 ;;                  1  [STACK] void 
 28094 ;; Registers used:
 28095 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28096 ;; Tracked objects:
 28097 ;;		On entry : 3F/0
 28098 ;;		On exit  : 0/0
 28099 ;;		Unchanged: 0/0
 28100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28105 ;;Total ram usage:        0 bytes
 28106 ;; Hardware stack levels used:    1
 28107 ;; This function calls:
 28108 ;;		Nothing
 28109 ;; This function is called by:
 28110 ;;		_UART1_Initialize
 28111 ;;		_UART1_rx_vect_isr
 28112 ;; This function uses a reentrant model
 28113 ;;
 28114                           
 28115                           	psect	text150
 28116  019086                     __ptext150:
 28117                           	opt callstack 0
 28118  019086                     _UART1_Receive_ISR:
 28119                           	opt callstack 12
 28120                           
 28121                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 28122                           
 28123                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28124                           ;incstack = 0
 28125  019086  0E00               	movlw	low _uart1RxBuffer
 28126  019088  2421               	addwf	_uart1RxHead^0,w,c	;volatile
 28127  01908A  6ED9               	movwf	fsr2l,c
 28128  01908C  6ADA               	clrf	fsr2h,c
 28129  01908E  0E05               	movlw	high _uart1RxBuffer
 28130  019090  22DA               	addwfc	fsr2h,f,c
 28131  019092  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 28132  019098  2A21               	incf	_uart1RxHead^0,f,c	;volatile
 28133                           
 28134                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 28135  01909A  2821               	incf	_uart1RxHead^0,w,c
 28136  01909C  B4D8               	btfsc	status,2,c
 28137                           
 28138                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 28139  01909E  6A21               	clrf	_uart1RxHead^0,c	;volatile
 28140                           
 28141                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 28142  0190A0  2A1F               	incf	_uart1RxCount^0,f,c	;volatile
 28143                           
 28144                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28145  0190A2  0012               	return		;funcret
 28146  0190A4                     __end_of_UART1_Receive_ISR:
 28147                           	opt callstack 0
 28148                           
 28149 ;; *************** function _UART2_tx_vect_isr *****************
 28150 ;; Defined at:
 28151 ;;		line 195 in file "mcc_generated_files/uart2.c"
 28152 ;; Parameters:    Size  Location     Type
 28153 ;;		None
 28154 ;; Auto vars:     Size  Location     Type
 28155 ;;		None
 28156 ;; Return value:  Size  Location     Type
 28157 ;;                  1    wreg      void 
 28158 ;; Registers used:
 28159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28160 ;; Tracked objects:
 28161 ;;		On entry : 0/0
 28162 ;;		On exit  : 0/0
 28163 ;;		Unchanged: 0/0
 28164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28169 ;;Total ram usage:        0 bytes
 28170 ;; Hardware stack levels used:    1
 28171 ;; Hardware stack levels required when called:    1
 28172 ;; This function calls:
 28173 ;;		Absolute function
 28174 ;;		_UART2_Transmit_ISR
 28175 ;; This function is called by:
 28176 ;;		Interrupt level 2
 28177 ;; This function uses a non-reentrant model
 28178 ;;
 28179                           
 28180                           	psect	text151
 28181  018ECC                     __ptext151:
 28182                           	opt callstack 0
 28183  018ECC                     _UART2_tx_vect_isr:
 28184                           	opt callstack 12
 28185                           
 28186                           ;incstack = 0
 28187  018ECC  EE14  F016         	lfsr	1,___inthi_sp
 28188                           
 28189                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 28190  018ED0  0100               	movlb	0	; () banked
 28191  018ED2  51BE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 28192  018ED4  11BF               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 28193  018ED6  11C0               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 28194  018ED8  B4D8               	btfsc	status,2,c
 28195  018EDA  0011               	retfie		f
 28196                           
 28197                           ; BSR set to: 0
 28198                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 28199  018EDC  D801               	call	i2u902_48
 28200  018EDE  0011               	retfie		f
 28201  018EE0                     i2u902_48:
 28202  018EE0  0005               	push	
 28203  018EE2  6EFA               	movwf	pclath,c
 28204  018EE4  51BE               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 28205  018EE6  6EFD               	movwf	tosl,c
 28206  018EE8  51BF               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 28207  018EEA  6EFE               	movwf	tosh,c
 28208  018EEC  51C0               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 28209  018EEE  6EFF               	movwf	tosu,c
 28210  018EF0  50FA               	movf	pclath,w,c
 28211  018EF2  0012               	return		;indir
 28212  018EF4                     __end_of_UART2_tx_vect_isr:
 28213                           	opt callstack 0
 28214                           
 28215 ;; *************** function _UART2_Transmit_ISR *****************
 28216 ;; Defined at:
 28217 ;;		line 213 in file "mcc_generated_files/uart2.c"
 28218 ;; Parameters:    Size  Location     Type
 28219 ;;		None
 28220 ;; Auto vars:     Size  Location     Type
 28221 ;;		None
 28222 ;; Return value:  Size  Location     Type
 28223 ;;                  1  [STACK] void 
 28224 ;; Registers used:
 28225 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28226 ;; Tracked objects:
 28227 ;;		On entry : 3F/0
 28228 ;;		On exit  : 3B/39
 28229 ;;		Unchanged: 0/0
 28230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28235 ;;Total ram usage:        0 bytes
 28236 ;; Hardware stack levels used:    1
 28237 ;; This function calls:
 28238 ;;		Nothing
 28239 ;; This function is called by:
 28240 ;;		_UART2_Initialize
 28241 ;;		_UART2_tx_vect_isr
 28242 ;; This function uses a reentrant model
 28243 ;;
 28244                           
 28245                           	psect	text152
 28246  018B7C                     __ptext152:
 28247                           	opt callstack 0
 28248  018B7C                     _UART2_Transmit_ISR:
 28249                           	opt callstack 12
 28250                           
 28251                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 28252                           
 28253                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28254                           ;incstack = 0
 28255  018B7C  0E40               	movlw	64
 28256  018B7E  601C               	cpfslt	_uart2TxBufferRemaining^0,c
 28257  018B80  D010               	goto	l703
 28258                           
 28259                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 28260  018B82  0E54               	movlw	low _uart2TxBuffer
 28261  018B84  241D               	addwf	_uart2TxTail^0,w,c	;volatile
 28262  018B86  6ED9               	movwf	fsr2l,c
 28263  018B88  6ADA               	clrf	fsr2h,c
 28264  018B8A  0E03               	movlw	high _uart2TxBuffer
 28265  018B8C  22DA               	addwfc	fsr2h,f,c
 28266  018B8E  50DF               	movf	indf2,w,c
 28267  018B90  013D               	movlb	61	; () banked
 28268  018B92  6FD2               	movwf	210,b	;volatile
 28269                           
 28270                           ; BSR set to: 61
 28271  018B94  2A1D               	incf	_uart2TxTail^0,f,c	;volatile
 28272                           
 28273                           ; BSR set to: 61
 28274                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 28275  018B96  0E3F               	movlw	63
 28276  018B98  641D               	cpfsgt	_uart2TxTail^0,c
 28277  018B9A  D001               	goto	l9271
 28278                           
 28279                           ; BSR set to: 61
 28280                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 28281  018B9C  6A1D               	clrf	_uart2TxTail^0,c	;volatile
 28282  018B9E                     l9271:
 28283                           
 28284                           ; BSR set to: 61
 28285                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 28286  018B9E  2A1C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 28287                           
 28288                           ;mcc_generated_files/uart2.c: 224:     }
 28289  018BA0  0012               	return	
 28290  018BA2                     l703:
 28291                           
 28292                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 28293  018BA2  0139               	movlb	57	; () banked
 28294  018BA4  9796               	bcf	150,3,b	;volatile
 28295                           
 28296                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 28297  018BA6  0012               	return		;funcret
 28298  018BA8                     __end_of_UART2_Transmit_ISR:
 28299                           	opt callstack 0
 28300                           
 28301 ;; *************** function _UART2_rx_vect_isr *****************
 28302 ;; Defined at:
 28303 ;;		line 203 in file "mcc_generated_files/uart2.c"
 28304 ;; Parameters:    Size  Location     Type
 28305 ;;		None
 28306 ;; Auto vars:     Size  Location     Type
 28307 ;;		None
 28308 ;; Return value:  Size  Location     Type
 28309 ;;                  1    wreg      void 
 28310 ;; Registers used:
 28311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 28312 ;; Tracked objects:
 28313 ;;		On entry : 0/0
 28314 ;;		On exit  : 0/0
 28315 ;;		Unchanged: 0/0
 28316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28321 ;;Total ram usage:        0 bytes
 28322 ;; Hardware stack levels used:    1
 28323 ;; Hardware stack levels required when called:    1
 28324 ;; This function calls:
 28325 ;;		Absolute function
 28326 ;;		_UART2_Receive_ISR
 28327 ;; This function is called by:
 28328 ;;		Interrupt level 2
 28329 ;; This function uses a non-reentrant model
 28330 ;;
 28331                           
 28332                           	psect	text153
 28333  018EF4                     __ptext153:
 28334                           	opt callstack 0
 28335  018EF4                     _UART2_rx_vect_isr:
 28336                           	opt callstack 12
 28337                           
 28338                           ;incstack = 0
 28339  018EF4  EE14  F016         	lfsr	1,___inthi_sp
 28340                           
 28341                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 28342  018EF8  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 28343  018EFA  1002               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 28344  018EFC  1003               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 28345  018EFE  B4D8               	btfsc	status,2,c
 28346  018F00  0011               	retfie		f
 28347                           
 28348                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 28349  018F02  D801               	call	i2u904_48
 28350  018F04  0011               	retfie		f
 28351  018F06                     i2u904_48:
 28352  018F06  0005               	push	
 28353  018F08  6EFA               	movwf	pclath,c
 28354  018F0A  5001               	movf	_UART2_RxInterruptHandler^0,w,c
 28355  018F0C  6EFD               	movwf	tosl,c
 28356  018F0E  5002               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 28357  018F10  6EFE               	movwf	tosh,c
 28358  018F12  5003               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 28359  018F14  6EFF               	movwf	tosu,c
 28360  018F16  50FA               	movf	pclath,w,c
 28361  018F18  0012               	return		;indir
 28362  018F1A                     __end_of_UART2_rx_vect_isr:
 28363                           	opt callstack 0
 28364                           
 28365 ;; *************** function _UART2_Receive_ISR *****************
 28366 ;; Defined at:
 28367 ;;		line 233 in file "mcc_generated_files/uart2.c"
 28368 ;; Parameters:    Size  Location     Type
 28369 ;;		None
 28370 ;; Auto vars:     Size  Location     Type
 28371 ;;		None
 28372 ;; Return value:  Size  Location     Type
 28373 ;;                  1  [STACK] void 
 28374 ;; Registers used:
 28375 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28376 ;; Tracked objects:
 28377 ;;		On entry : 0/0
 28378 ;;		On exit  : 0/0
 28379 ;;		Unchanged: 0/0
 28380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28385 ;;Total ram usage:        0 bytes
 28386 ;; Hardware stack levels used:    1
 28387 ;; This function calls:
 28388 ;;		Nothing
 28389 ;; This function is called by:
 28390 ;;		_UART2_Initialize
 28391 ;;		_UART2_rx_vect_isr
 28392 ;; This function uses a reentrant model
 28393 ;;
 28394                           
 28395                           	psect	text154
 28396  0190A4                     __ptext154:
 28397                           	opt callstack 0
 28398  0190A4                     _UART2_Receive_ISR:
 28399                           	opt callstack 12
 28400                           
 28401                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 28402                           
 28403                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28404                           ;incstack = 0
 28405  0190A4  0E00               	movlw	low _uart2RxBuffer
 28406  0190A6  241B               	addwf	_uart2RxHead^0,w,c	;volatile
 28407  0190A8  6ED9               	movwf	fsr2l,c
 28408  0190AA  6ADA               	clrf	fsr2h,c
 28409  0190AC  0E06               	movlw	high _uart2RxBuffer
 28410  0190AE  22DA               	addwfc	fsr2h,f,c
 28411  0190B0  006F F743 FFDF     	movff	15824,indf2	;volatile
 28412  0190B6  2A1B               	incf	_uart2RxHead^0,f,c	;volatile
 28413                           
 28414                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 28415  0190B8  281B               	incf	_uart2RxHead^0,w,c
 28416  0190BA  B4D8               	btfsc	status,2,c
 28417                           
 28418                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 28419  0190BC  6A1B               	clrf	_uart2RxHead^0,c	;volatile
 28420                           
 28421                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 28422  0190BE  2A19               	incf	_uart2RxCount^0,f,c	;volatile
 28423                           
 28424                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28425  0190C0  0012               	return		;funcret
 28426  0190C2                     __end_of_UART2_Receive_ISR:
 28427                           	opt callstack 0
 28428                           
 28429 ;; *************** function _TMR6_ISR *****************
 28430 ;; Defined at:
 28431 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 28432 ;; Parameters:    Size  Location     Type
 28433 ;;		None
 28434 ;; Auto vars:     Size  Location     Type
 28435 ;;		None
 28436 ;; Return value:  Size  Location     Type
 28437 ;;                  1    wreg      void 
 28438 ;; Registers used:
 28439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 28440 ;; Tracked objects:
 28441 ;;		On entry : 0/0
 28442 ;;		On exit  : 0/0
 28443 ;;		Unchanged: 0/0
 28444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28447 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28448 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28449 ;;Total ram usage:        1 bytes
 28450 ;; Hardware stack levels used:    1
 28451 ;; Hardware stack levels required when called:    2
 28452 ;; This function calls:
 28453 ;;		_TMR6_CallBack
 28454 ;; This function is called by:
 28455 ;;		Interrupt level 2
 28456 ;; This function uses a non-reentrant model
 28457 ;;
 28458                           
 28459                           	psect	text155
 28460  0190F8                     __ptext155:
 28461                           	opt callstack 0
 28462  0190F8                     _TMR6_ISR:
 28463                           	opt callstack 11
 28464                           
 28465                           ;incstack = 0
 28466  0190F8  0060  F094  F04A   	movff	btemp,??_TMR6_ISR
 28467  0190FE  EE14  F016         	lfsr	1,___inthi_sp
 28468                           
 28469                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 28470  019102  0139               	movlb	57	; () banked
 28471  019104  91A9               	bcf	169,0,b	;volatile
 28472                           
 28473                           ; BSR set to: 57
 28474                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 28475  019106  ECC3  F0C7         	call	_TMR6_CallBack	;wreg free
 28476  01910A  0060  F128  F025   	movff	??_TMR6_ISR,btemp
 28477  019110  0011               	retfie		f
 28478  019112                     __end_of_TMR6_ISR:
 28479                           	opt callstack 0
 28480                           
 28481 ;; *************** function _TMR6_CallBack *****************
 28482 ;; Defined at:
 28483 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 28484 ;; Parameters:    Size  Location     Type
 28485 ;;		None
 28486 ;; Auto vars:     Size  Location     Type
 28487 ;;		None
 28488 ;; Return value:  Size  Location     Type
 28489 ;;                  1  [STACK] void 
 28490 ;; Registers used:
 28491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 28492 ;; Tracked objects:
 28493 ;;		On entry : 3F/39
 28494 ;;		On exit  : 0/0
 28495 ;;		Unchanged: 0/0
 28496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28501 ;;Total ram usage:        0 bytes
 28502 ;; Hardware stack levels used:    1
 28503 ;; Hardware stack levels required when called:    1
 28504 ;; This function calls:
 28505 ;;		Absolute function
 28506 ;;		_TMR6_DefaultInterruptHandler
 28507 ;; This function is called by:
 28508 ;;		_TMR6_ISR
 28509 ;; This function uses a reentrant model
 28510 ;;
 28511                           
 28512                           	psect	text156
 28513  018F86                     __ptext156:
 28514                           	opt callstack 0
 28515  018F86                     _TMR6_CallBack:
 28516                           	opt callstack 11
 28517                           
 28518                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 28519                           
 28520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28521                           ;incstack = 0
 28522  018F86  0100               	movlb	0	; () banked
 28523  018F88  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 28524  018F8A  11B0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 28525  018F8C  11B1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 28526  018F8E  B4D8               	btfsc	status,2,c
 28527  018F90  0012               	return	
 28528                           
 28529                           ; BSR set to: 0
 28530                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 28531  018F92  D801               	call	u867_48
 28532  018F94  0012               	return	
 28533  018F96                     u867_48:
 28534  018F96  0005               	push	
 28535  018F98  6EFA               	movwf	pclath,c
 28536  018F9A  51AF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 28537  018F9C  6EFD               	movwf	tosl,c
 28538  018F9E  51B0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 28539  018FA0  6EFE               	movwf	tosh,c
 28540  018FA2  51B1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 28541  018FA4  6EFF               	movwf	tosu,c
 28542  018FA6  50FA               	movf	pclath,w,c
 28543  018FA8  0012               	return		;indir
 28544  018FAA                     __end_of_TMR6_CallBack:
 28545                           	opt callstack 0
 28546                           
 28547 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 28548 ;; Defined at:
 28549 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 28550 ;; Parameters:    Size  Location     Type
 28551 ;;		None
 28552 ;; Auto vars:     Size  Location     Type
 28553 ;;  i               1  [STACK] unsigned char 
 28554 ;; Return value:  Size  Location     Type
 28555 ;;                  1  [STACK] void 
 28556 ;; Registers used:
 28557 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 28558 ;; Tracked objects:
 28559 ;;		On entry : 3F/0
 28560 ;;		On exit  : 0/0
 28561 ;;		Unchanged: 0/0
 28562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28567 ;;Total ram usage:        0 bytes
 28568 ;; Hardware stack levels used:    1
 28569 ;; This function calls:
 28570 ;;		Nothing
 28571 ;; This function is called by:
 28572 ;;		_TMR6_Initialize
 28573 ;;		_TMR6_CallBack
 28574 ;; This function uses a reentrant model
 28575 ;;
 28576                           
 28577                           	psect	text157
 28578  018532                     __ptext157:
 28579                           	opt callstack 0
 28580  018532                     _TMR6_DefaultInterruptHandler:
 28581                           	opt callstack 0
 28582                           
 28583                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28584  018532  52E6               	movf	postinc1,f,c
 28585                           
 28586                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 28587                           ;stkvar	_i @ sp[(-1)+0]
 28588                           
 28589                           ;incstack = 0
 28590  018534  0EFF               	movlw	-1
 28591  018536  6AE3               	clrf	plusw1,c
 28592  018538                     l8919:
 28593                           
 28594                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 28595                           ;stkvar	_i @ sp[(-1)+0]
 28596  018538  0EFF               	movlw	-1
 28597  01853A  50E3               	movf	plusw1,w,c
 28598  01853C  0D02               	mullw	2
 28599  01853E  0EB1               	movlw	low _tickCount
 28600  018540  24F3               	addwf	243,w,c
 28601  018542  6ED9               	movwf	fsr2l,c
 28602  018544  0E01               	movlw	high _tickCount
 28603  018546  20F4               	addwfc	prodh,w,c
 28604  018548  6EDA               	movwf	fsr2h,c
 28605  01854A  50DE               	movf	postinc2,w,c
 28606  01854C  10DE               	iorwf	postinc2,w,c
 28607  01854E  B4D8               	btfsc	status,2,c
 28608  018550  D00C               	goto	l8923
 28609                           
 28610                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 28611                           ;stkvar	_i @ sp[(-1)+0]
 28612  018552  0EFF               	movlw	-1
 28613  018554  50E3               	movf	plusw1,w,c
 28614  018556  0D02               	mullw	2
 28615  018558  0EB1               	movlw	low _tickCount
 28616  01855A  24F3               	addwf	243,w,c
 28617  01855C  6ED9               	movwf	fsr2l,c
 28618  01855E  0E01               	movlw	high _tickCount
 28619  018560  20F4               	addwfc	prodh,w,c
 28620  018562  6EDA               	movwf	fsr2h,c
 28621  018564  06DE               	decf	postinc2,f,c
 28622  018566  0E00               	movlw	0
 28623  018568  5ADD               	subwfb	postdec2,f,c
 28624  01856A                     l8923:
 28625                           
 28626                           ;mcc_generated_files/tmr6.c: 207:  }
 28627                           ;stkvar	_i @ sp[(-1)+0]
 28628  01856A  0EFF               	movlw	-1
 28629  01856C  2AE3               	incf	plusw1,f,c
 28630                           
 28631                           ;stkvar	_i @ sp[(-1)+0]
 28632  01856E  0EFF               	movlw	-1
 28633  018570  006F FF8C  F025    	movff	plusw1,btemp
 28634  018576  0E0B               	movlw	11
 28635  018578  6425               	cpfsgt	btemp^0,c
 28636  01857A  D7DE               	goto	l8919
 28637                           
 28638                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 28639  01857C  52E5               	movf	postdec1,f,c
 28640  01857E  0012               	return		;funcret
 28641  018580                     __end_of_TMR6_DefaultInterruptHandler:
 28642                           	opt callstack 0
 28643                           
 28644 ;; *************** function _DMA1_DMASCNT_ISR *****************
 28645 ;; Defined at:
 28646 ;;		line 126 in file "mcc_generated_files/dma1.c"
 28647 ;; Parameters:    Size  Location     Type
 28648 ;;		None
 28649 ;; Auto vars:     Size  Location     Type
 28650 ;;		None
 28651 ;; Return value:  Size  Location     Type
 28652 ;;                  1    wreg      void 
 28653 ;; Registers used:
 28654 ;;		None
 28655 ;; Tracked objects:
 28656 ;;		On entry : 0/0
 28657 ;;		On exit  : 3F/0
 28658 ;;		Unchanged: 0/0
 28659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28664 ;;Total ram usage:        0 bytes
 28665 ;; Hardware stack levels used:    1
 28666 ;; This function calls:
 28667 ;;		Nothing
 28668 ;; This function is called by:
 28669 ;;		Interrupt level 2
 28670 ;; This function uses a non-reentrant model
 28671 ;;
 28672                           
 28673                           	psect	text158
 28674  0191F8                     __ptext158:
 28675                           	opt callstack 0
 28676  0191F8                     _DMA1_DMASCNT_ISR:
 28677                           	opt callstack 13
 28678                           
 28679                           ;incstack = 0
 28680  0191F8  EE14  F016         	lfsr	1,___inthi_sp
 28681                           
 28682                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 28683  0191FC  0139               	movlb	57	; () banked
 28684  0191FE  91A2               	bcf	162,0,b	;volatile
 28685                           
 28686                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 28687  019200  0100               	movlb	0	; () banked
 28688  019202  9789               	bcf	_spi_link& (0+255),3,b	;volatile
 28689                           
 28690                           ; BSR set to: 0
 28691  019204  0011               	retfie		f
 28692  019206                     __end_of_DMA1_DMASCNT_ISR:
 28693                           	opt callstack 0
 28694                           
 28695 ;; *************** function _DMA1_DMADCNT_ISR *****************
 28696 ;; Defined at:
 28697 ;;		line 134 in file "mcc_generated_files/dma1.c"
 28698 ;; Parameters:    Size  Location     Type
 28699 ;;		None
 28700 ;; Auto vars:     Size  Location     Type
 28701 ;;		None
 28702 ;; Return value:  Size  Location     Type
 28703 ;;                  1    wreg      void 
 28704 ;; Registers used:
 28705 ;;		None
 28706 ;; Tracked objects:
 28707 ;;		On entry : 0/0
 28708 ;;		On exit  : 3F/39
 28709 ;;		Unchanged: 0/0
 28710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28715 ;;Total ram usage:        0 bytes
 28716 ;; Hardware stack levels used:    1
 28717 ;; This function calls:
 28718 ;;		Nothing
 28719 ;; This function is called by:
 28720 ;;		Interrupt level 2
 28721 ;; This function uses a non-reentrant model
 28722 ;;
 28723                           
 28724                           	psect	text159
 28725  019210                     __ptext159:
 28726                           	opt callstack 0
 28727  019210                     _DMA1_DMADCNT_ISR:
 28728                           	opt callstack 13
 28729                           
 28730                           ; BSR set to: 0
 28731                           ;incstack = 0
 28732  019210  EE14  F016         	lfsr	1,___inthi_sp
 28733                           
 28734                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 28735  019214  0139               	movlb	57	; () banked
 28736  019216  93A2               	bcf	162,1,b	;volatile
 28737                           
 28738                           ; BSR set to: 57
 28739  019218  0011               	retfie		f
 28740  01921A                     __end_of_DMA1_DMADCNT_ISR:
 28741                           	opt callstack 0
 28742                           
 28743 ;; *************** function _DMA1_DMAA_ISR *****************
 28744 ;; Defined at:
 28745 ;;		line 144 in file "mcc_generated_files/dma1.c"
 28746 ;; Parameters:    Size  Location     Type
 28747 ;;		None
 28748 ;; Auto vars:     Size  Location     Type
 28749 ;;		None
 28750 ;; Return value:  Size  Location     Type
 28751 ;;                  1    wreg      void 
 28752 ;; Registers used:
 28753 ;;		None
 28754 ;; Tracked objects:
 28755 ;;		On entry : 0/0
 28756 ;;		On exit  : 3F/39
 28757 ;;		Unchanged: 0/0
 28758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28763 ;;Total ram usage:        0 bytes
 28764 ;; Hardware stack levels used:    1
 28765 ;; This function calls:
 28766 ;;		Nothing
 28767 ;; This function is called by:
 28768 ;;		Interrupt level 2
 28769 ;; This function uses a non-reentrant model
 28770 ;;
 28771                           
 28772                           	psect	text160
 28773  01921C                     __ptext160:
 28774                           	opt callstack 0
 28775  01921C                     _DMA1_DMAA_ISR:
 28776                           	opt callstack 13
 28777                           
 28778                           ; BSR set to: 57
 28779                           ;incstack = 0
 28780  01921C  EE14  F016         	lfsr	1,___inthi_sp
 28781                           
 28782                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 28783  019220  0139               	movlb	57	; () banked
 28784  019222  97A2               	bcf	162,3,b	;volatile
 28785                           
 28786                           ; BSR set to: 57
 28787  019224  0011               	retfie		f
 28788  019226                     __end_of_DMA1_DMAA_ISR:
 28789                           	opt callstack 0
 28790                           
 28791 ;; *************** function _DMA1_DMAOR_ISR *****************
 28792 ;; Defined at:
 28793 ;;		line 155 in file "mcc_generated_files/dma1.c"
 28794 ;; Parameters:    Size  Location     Type
 28795 ;;		None
 28796 ;; Auto vars:     Size  Location     Type
 28797 ;;		None
 28798 ;; Return value:  Size  Location     Type
 28799 ;;                  1    wreg      void 
 28800 ;; Registers used:
 28801 ;;		None
 28802 ;; Tracked objects:
 28803 ;;		On entry : 0/0
 28804 ;;		On exit  : 3F/39
 28805 ;;		Unchanged: 0/0
 28806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28811 ;;Total ram usage:        0 bytes
 28812 ;; Hardware stack levels used:    1
 28813 ;; This function calls:
 28814 ;;		Nothing
 28815 ;; This function is called by:
 28816 ;;		Interrupt level 2
 28817 ;; This function uses a non-reentrant model
 28818 ;;
 28819                           
 28820                           	psect	text161
 28821  019228                     __ptext161:
 28822                           	opt callstack 0
 28823  019228                     _DMA1_DMAOR_ISR:
 28824                           	opt callstack 13
 28825                           
 28826                           ; BSR set to: 57
 28827                           ;incstack = 0
 28828  019228  EE14  F016         	lfsr	1,___inthi_sp
 28829                           
 28830                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 28831  01922C  0139               	movlb	57	; () banked
 28832  01922E  95A2               	bcf	162,2,b	;volatile
 28833                           
 28834                           ; BSR set to: 57
 28835  019230  0011               	retfie		f
 28836  019232                     __end_of_DMA1_DMAOR_ISR:
 28837                           	opt callstack 0
 28838                           
 28839                           ;
 28840                           ; Interrupt Vector Table @ 0x8
 28841                           ;
 28842                           
 28843                           	psect	ivt0x8
 28844  000008                     __pivt0x8:
 28845                           	opt callstack 0
 28846  000008                     ivt0x8_base:
 28847                           	opt callstack 0
 28848                           
 28849                           ; Vector 0 : SWINT
 28850  000008  649E               	dw	_Default_ISR shr (0+2)
 28851                           
 28852                           ; Vector 1 : HLVD
 28853  00000A  649E               	dw	_Default_ISR shr (0+2)
 28854                           
 28855                           ; Vector 2 : OSF
 28856  00000C  649E               	dw	_Default_ISR shr (0+2)
 28857                           
 28858                           ; Vector 3 : CSW
 28859  00000E  649E               	dw	_Default_ISR shr (0+2)
 28860                           
 28861                           ; Vector 4 : NVM
 28862  000010  649E               	dw	_Default_ISR shr (0+2)
 28863                           
 28864                           ; Vector 5 : SCAN
 28865  000012  649E               	dw	_Default_ISR shr (0+2)
 28866                           
 28867                           ; Vector 6 : CRC
 28868  000014  649E               	dw	_Default_ISR shr (0+2)
 28869                           
 28870                           ; Vector 7 : IOC
 28871  000016  649E               	dw	_Default_ISR shr (0+2)
 28872                           
 28873                           ; Vector 8 : INT0
 28874  000018  647A               	dw	_INT0_ISR shr (0+2)
 28875                           
 28876                           ; Vector 9 : ZCD
 28877  00001A  649E               	dw	_Default_ISR shr (0+2)
 28878                           
 28879                           ; Vector 10 : AD
 28880  00001C  62C9               	dw	_ADCC_ISR shr (0+2)
 28881                           
 28882                           ; Vector 11 : ADT
 28883  00001E  6031               	dw	_ADCC_ThresholdISR shr (0+2)
 28884                           
 28885                           ; Vector 12 : CMP1
 28886  000020  649E               	dw	_Default_ISR shr (0+2)
 28887                           
 28888                           ; Vector 13 : SMT1
 28889  000022  649E               	dw	_Default_ISR shr (0+2)
 28890                           
 28891                           ; Vector 14 : SMT1PRA
 28892  000024  649E               	dw	_Default_ISR shr (0+2)
 28893                           
 28894                           ; Vector 15 : SMT1PRW
 28895  000026  649E               	dw	_Default_ISR shr (0+2)
 28896                           
 28897                           ; Vector 16 : DMA1SCNT
 28898  000028  647E               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 28899                           
 28900                           ; Vector 17 : DMA1DCNT
 28901  00002A  6484               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 28902                           
 28903                           ; Vector 18 : DMA1OR
 28904  00002C  648A               	dw	_DMA1_DMAOR_ISR shr (0+2)
 28905                           
 28906                           ; Vector 19 : DMA1A
 28907  00002E  6487               	dw	_DMA1_DMAA_ISR shr (0+2)
 28908                           
 28909                           ; Vector 20 : SPI1RX
 28910  000030  649E               	dw	_Default_ISR shr (0+2)
 28911                           
 28912                           ; Vector 21 : SPI1TX
 28913  000032  649E               	dw	_Default_ISR shr (0+2)
 28914                           
 28915                           ; Vector 22 : SPI1
 28916  000034  649E               	dw	_Default_ISR shr (0+2)
 28917                           
 28918                           ; Vector 23 : I2C1RX
 28919  000036  649E               	dw	_Default_ISR shr (0+2)
 28920                           
 28921                           ; Vector 24 : I2C1TX
 28922  000038  649E               	dw	_Default_ISR shr (0+2)
 28923                           
 28924                           ; Vector 25 : I2C1
 28925  00003A  649E               	dw	_Default_ISR shr (0+2)
 28926                           
 28927                           ; Vector 26 : I2C1E
 28928  00003C  649E               	dw	_Default_ISR shr (0+2)
 28929                           
 28930                           ; Vector 27 : U1RX
 28931  00003E  63A9               	dw	_UART1_rx_vect_isr shr (0+2)
 28932                           
 28933                           ; Vector 28 : U1TX
 28934  000040  639F               	dw	_UART1_tx_vect_isr shr (0+2)
 28935                           
 28936                           ; Vector 29 : U1E
 28937  000042  649E               	dw	_Default_ISR shr (0+2)
 28938                           
 28939                           ; Vector 30 : U1
 28940  000044  649E               	dw	_Default_ISR shr (0+2)
 28941                           
 28942                           ; Vector 31 : TMR0
 28943  000046  649E               	dw	_Default_ISR shr (0+2)
 28944                           
 28945                           ; Vector 32 : TMR1
 28946  000048  649E               	dw	_Default_ISR shr (0+2)
 28947                           
 28948                           ; Vector 33 : TMR1G
 28949  00004A  649E               	dw	_Default_ISR shr (0+2)
 28950                           
 28951                           ; Vector 34 : TMR2
 28952  00004C  649E               	dw	_Default_ISR shr (0+2)
 28953                           
 28954                           ; Vector 35 : CCP1
 28955  00004E  649E               	dw	_Default_ISR shr (0+2)
 28956                           
 28957                           ; Vector 36 : Undefined
 28958  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 28959                           
 28960                           ; Vector 37 : NCO1
 28961  000052  649E               	dw	_Default_ISR shr (0+2)
 28962                           
 28963                           ; Vector 38 : CWG1
 28964  000054  649E               	dw	_Default_ISR shr (0+2)
 28965                           
 28966                           ; Vector 39 : CLC1
 28967  000056  649E               	dw	_Default_ISR shr (0+2)
 28968                           
 28969                           ; Vector 40 : INT1
 28970  000058  622C               	dw	_INT1_ISR shr (0+2)
 28971                           
 28972                           ; Vector 41 : CMP2
 28973  00005A  649E               	dw	_Default_ISR shr (0+2)
 28974                           
 28975                           ; Vector 42 : DMA2SCNT
 28976  00005C  649E               	dw	_Default_ISR shr (0+2)
 28977                           
 28978                           ; Vector 43 : DMA2DCNT
 28979  00005E  649E               	dw	_Default_ISR shr (0+2)
 28980                           
 28981                           ; Vector 44 : DMA2OR
 28982  000060  649E               	dw	_Default_ISR shr (0+2)
 28983                           
 28984                           ; Vector 45 : DMA2A
 28985  000062  649E               	dw	_Default_ISR shr (0+2)
 28986                           
 28987                           ; Vector 46 : I2C2RX
 28988  000064  649E               	dw	_Default_ISR shr (0+2)
 28989                           
 28990                           ; Vector 47 : I2C2TX
 28991  000066  649E               	dw	_Default_ISR shr (0+2)
 28992                           
 28993                           ; Vector 48 : I2C2
 28994  000068  649E               	dw	_Default_ISR shr (0+2)
 28995                           
 28996                           ; Vector 49 : I2C2E
 28997  00006A  649E               	dw	_Default_ISR shr (0+2)
 28998                           
 28999                           ; Vector 50 : U2RX
 29000  00006C  63BD               	dw	_UART2_rx_vect_isr shr (0+2)
 29001                           
 29002                           ; Vector 51 : U2TX
 29003  00006E  63B3               	dw	_UART2_tx_vect_isr shr (0+2)
 29004                           
 29005                           ; Vector 52 : U2E
 29006  000070  649E               	dw	_Default_ISR shr (0+2)
 29007                           
 29008                           ; Vector 53 : U2
 29009  000072  649E               	dw	_Default_ISR shr (0+2)
 29010                           
 29011                           ; Vector 54 : TMR3
 29012  000074  5D50               	dw	_TMR3_ISR shr (0+2)
 29013                           
 29014                           ; Vector 55 : TMR3G
 29015  000076  649E               	dw	_Default_ISR shr (0+2)
 29016                           
 29017                           ; Vector 56 : TMR4
 29018  000078  649E               	dw	_Default_ISR shr (0+2)
 29019                           
 29020                           ; Vector 57 : CCP2
 29021  00007A  649E               	dw	_Default_ISR shr (0+2)
 29022                           
 29023                           ; Vector 58 : Undefined
 29024  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 29025                           
 29026                           ; Vector 59 : CWG2
 29027  00007E  649E               	dw	_Default_ISR shr (0+2)
 29028                           
 29029                           ; Vector 60 : CLC2
 29030  000080  649E               	dw	_Default_ISR shr (0+2)
 29031                           
 29032                           ; Vector 61 : INT2
 29033  000082  649E               	dw	_Default_ISR shr (0+2)
 29034                           
 29035                           ; Vector 62 : Undefined
 29036  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 29037                           
 29038                           ; Vector 63 : Undefined
 29039  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 29040                           
 29041                           ; Vector 64 : Undefined
 29042  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 29043                           
 29044                           ; Vector 65 : Undefined
 29045  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 29046                           
 29047                           ; Vector 66 : Undefined
 29048  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 29049                           
 29050                           ; Vector 67 : Undefined
 29051  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 29052                           
 29053                           ; Vector 68 : Undefined
 29054  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 29055                           
 29056                           ; Vector 69 : Undefined
 29057  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 29058                           
 29059                           ; Vector 70 : TMR5
 29060  000094  610D               	dw	_TMR5_ISR shr (0+2)
 29061                           
 29062                           ; Vector 71 : TMR5G
 29063  000096  649E               	dw	_Default_ISR shr (0+2)
 29064                           
 29065                           ; Vector 72 : TMR6
 29066  000098  643E               	dw	_TMR6_ISR shr (0+2)
 29067                           
 29068                           ; Vector 73 : CCP3
 29069  00009A  649E               	dw	_Default_ISR shr (0+2)
 29070                           
 29071                           ; Vector 74 : CWG3
 29072  00009C  649E               	dw	_Default_ISR shr (0+2)
 29073                           
 29074                           ; Vector 75 : CLC3
 29075  00009E  649E               	dw	_Default_ISR shr (0+2)
 29076                           
 29077                           ; Vector 76 : Undefined
 29078  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 29079                           
 29080                           ; Vector 77 : Undefined
 29081  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 29082                           
 29083                           ; Vector 78 : Undefined
 29084  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 29085                           
 29086                           ; Vector 79 : Undefined
 29087  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 29088                           
 29089                           ; Vector 80 : CCP4
 29090  0000A8  649E               	dw	_Default_ISR shr (0+2)
 29091                           
 29092                           ; Vector 81 : CLC4
 29093  0000AA  649E               	dw	_Default_ISR shr (0+2)
 29094  0000AC                     ivt0x8_undefint:
 29095                           	opt callstack 0
 29096  0000AC  00FF               	reset	
 29097                           
 29098                           	psect	text162
 29099  000000                     __ptext162:
 29100                           	opt callstack 0
 29101                           
 29102                           	psect	rparam
 29103  0000                     
 29104                           	psect	temp
 29105  000025                     btemp:
 29106                           	opt callstack 0
 29107  000025                     	ds	32
 29108  0000                     wtemp0	set	btemp
 29109  0000                     wtemp1	set	btemp+2
 29110  0000                     wtemp2	set	btemp+4
 29111  0000                     wtemp3	set	btemp+6
 29112  0000                     wtemp4	set	btemp+8
 29113  0000                     wtemp5	set	btemp+10
 29114  0000                     wtemp8	set	btemp+1
 29115  0000                     ttemp0	set	btemp
 29116  0000                     ttemp1	set	btemp+3
 29117  0000                     ttemp2	set	btemp+6
 29118  0000                     ttemp3	set	btemp+9
 29119  0000                     ttemp5	set	btemp+1
 29120  0000                     ttemp6	set	btemp+4
 29121  0000                     ttemp7	set	btemp+8
 29122  0000                     ltemp0	set	btemp
 29123  0000                     ltemp1	set	btemp+4
 29124  0000                     ltemp2	set	btemp+8
 29125  0000                     lltemp0	set	btemp
 29126  0000                     lltemp1	set	btemp+8
 29127  0000                     lltemp2	set	btemp+16
 29128  0000                     lltemp3	set	btemp+24
 29129                           tosu	equ	0x3FFF
 29130                           tosh	equ	0x3FFE
 29131                           tosl	equ	0x3FFD
 29132                           stkptr	equ	0x3FFC
 29133                           pclatu	equ	0x3FFB
 29134                           pclath	equ	0x3FFA
 29135                           pcl	equ	0x3FF9
 29136                           tblptru	equ	0x3FF8
 29137                           tblptrh	equ	0x3FF7
 29138                           tblptrl	equ	0x3FF6
 29139                           tablat	equ	0x3FF5
 29140                           prodh	equ	0x3FF4
 29141                           prodl	equ	0x3FF3
 29142                           indf0	equ	0x3FEF
 29143                           postinc0	equ	0x3FEE
 29144                           postdec0	equ	0x3FED
 29145                           preinc0	equ	0x3FEC
 29146                           plusw0	equ	0x3FEB
 29147                           fsr0h	equ	0x3FEA
 29148                           fsr0l	equ	0x3FE9
 29149                           wreg	equ	0x3FE8
 29150                           indf1	equ	0x3FE7
 29151                           postinc1	equ	0x3FE6
 29152                           postdec1	equ	0x3FE5
 29153                           preinc1	equ	0x3FE4
 29154                           plusw1	equ	0x3FE3
 29155                           fsr1h	equ	0x3FE2
 29156                           fsr1l	equ	0x3FE1
 29157                           bsr	equ	0x3FE0
 29158                           indf2	equ	0x3FDF
 29159                           postinc2	equ	0x3FDE
 29160                           postdec2	equ	0x3FDD
 29161                           preinc2	equ	0x3FDC
 29162                           plusw2	equ	0x3FDB
 29163                           fsr2h	equ	0x3FDA
 29164                           fsr2l	equ	0x3FD9
 29165                           status	equ	0x3FD8


Data Sizes:
    Strings     445
    Constant    144
    Data        419
    BSS         1393
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     14      50
    BANK0           160      0     153
    BANK1           256     13     222
    BANK2           256      0     252
    BANK3           256      0     228
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_45(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_56(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    l	PTR const unsigned char  size(2) Largest target is 3
		 -> ct(STACK[3]), 

    s	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    a	PTR const unsigned char  size(2) Largest target is 290
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> STR_28(CODE[9]), STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), 
		 -> T(CODE[144]), STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_51(CODE[4]), STR_50(CODE[4]), STR_47(CODE[4]), STR_46(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_23(CODE[17]), STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), 
		 -> STR_19(CODE[19]), STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), 
		 -> STR_15(CODE[19]), STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), 
		 -> STR_11(CODE[17]), STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5574_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 290
		 -> D(BIGRAM[290]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_44(CODE[3]), STR_43(CODE[3]), STR_42(CODE[19]), STR_41(CODE[19]), 
		 -> STR_40(CODE[19]), STR_39(CODE[19]), STR_38(CODE[19]), STR_37(CODE[19]), 
		 -> STR_36(CODE[24]), STR_35(CODE[15]), STR_34(CODE[15]), STR_33(CODE[15]), 
		 -> STR_32(CODE[10]), STR_31(CODE[10]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), STR_23(CODE[17]), 
		 -> STR_22(CODE[16]), STR_21(CODE[16]), STR_20(CODE[19]), STR_19(CODE[19]), 
		 -> STR_18(CODE[19]), STR_17(CODE[19]), STR_16(CODE[19]), STR_15(CODE[19]), 
		 -> STR_14(CODE[19]), STR_13(CODE[19]), STR_12(CODE[19]), STR_11(CODE[17]), 
		 -> STR_10(CODE[16]), STR_9(CODE[16]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_28(CODE[9]), STR_27(CODE[12]), 
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), STR_7(CODE[6]), 
		 -> STR_3(CODE[6]), V(BANK2[188]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_28(CODE[9]), 
		 -> STR_27(CODE[12]), D.lcd(BIGRAM[288]), D(BIGRAM[290]), T(CODE[144]), 
		 -> STR_7(CODE[6]), STR_3(CODE[6]), V(BANK2[188]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4306tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_28(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_27(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    strPtr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), V(BANK2[188]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 290
		 -> D.lcd(BIGRAM[288]), D(BIGRAM[290]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1934spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1934spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  309323
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                    _calc_model_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (20) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (20) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   27976
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  166948
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   83221
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    10     12   26923
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   56386
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   56122
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   27945
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   28084
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   26698
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   26569
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   26237
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (17) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (17) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     265
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           13    13      0    3303
                                              0 BANK1     13    13      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      60
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0    3243
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           0     0      0    3243
                            ___fladd
                            ___fldiv
                             ___flge
 ---------------------------------------------------------------------------------
 (17) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (17) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (17) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (19) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (19) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (19) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (20) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (20) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (19) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (19) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (19) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (20) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (20) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       ___fladd
       ___fldiv
       ___flge
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     122      69        3.5%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      D      DE       7       86.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      99       5       95.6%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      E      32       1       79.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     60D      58        0.0%
DATA                 0      0     72F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec  5 03:26:59 2019

                     _SPI1_Exchange8bit 900E                __end_of_set_display_info 9086  
                                     _C 0100                                       _D 06FF  
                                     _H 00F2                                       _P 00A5  
                                     _R 00C3                                       _S 0060  
                                     _T FDB1                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler 8D8A            __end_of_start_switch_handler 900E  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                __end_of_FVR_Initialize 925A                             __CFG_LVP$ON 000000  
                                   l173 917E                                     l703 8BA2  
                                   l583 8B76                                     l837 901C  
                                   _GIE 01FE97                                     _abs 8612  
                                   _pad 6D82                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize 912A                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack 8FCC                      _UART1_Transmit_ISR 8B50  
                         __CFG_BBEN$OFF 000000                           _INT1_CallBack 8FAA  
                          __CFG_ZCD$OFF 000000                                    l1030 886A  
                                  l2000 40FA                                    l1218 88AA  
                                  l2036 123A                                    l2118 5272  
                                  l2080 0B1A                                    l2065 066A  
                                  l1346 1F98                                    l1338 1DE0  
                                  l2139 44E0                                    l1363 25D4  
                       _timer3ReloadVal 0012                                    l3044 614E  
                                  l1444 838A                                    l1356 2036  
                                  l1348 1F9E                                    l1358 20FC  
                                  l2511 6616                                    l1359 220A  
                                  l3072 7EE4                                    l3059 7F68  
                                  l1660 890A                                    l1580 7A46  
                                  l1717 9082                                    l2189 1D78  
                                  l1670 5D88                                    l1902 71AE  
                                  l1808 630E                                    l1584 7CB8  
                                  l2473 76C8                                    l2484 6778  
                                  l2477 66A4                                    l1677 6FA2  
                                  l1669 5C2C                                    l1765 4016  
                  _ADCC_StartConversion 9198                                    l2751 35EC  
                                  l2903 8652                                    l1599 8974  
                                  l2832 2E30                                    l2763 347C  
                                  l7011 68B6                                    l7003 6882  
                                  l1980 6DDE                                    l7101 659E  
                                  l1893 7DDE                                    l2934 5930  
                                  l7031 6CB4                                    l7023 6C8A  
                                  l2872 5F86                                    l7041 6D34  
                                  l7027 6C9C                                    l7107 65AE  
                                  l2796 3B66                                    l8101 2ED0  
                                  l7061 7692                                    l7109 65C4  
                                  l7127 8522                                    l2895 64A4  
                                  l8113 2F4E                                    l8105 2EE6  
                                  l7049 6D68                                    l7065 76C6  
                                  l7057 7650                                    l7073 85E8  
                                  l8211 32F2                                    l8131 3006  
                                  l8107 2F16                                    l7083 6500  
                                  l8125 2FC0                                    l9021 8920  
                                  l6621 8642                                    l6701 4B98  
                                  l8045 897E                                    l2998 6C60  
                                  l8303 35CC                                    l8231 3406  
                                  l8215 32FC                                    l8119 2F80  
                                  l9103 3FE4                                    l9111 3FF6  
                                  l8241 3460                                    l8233 342C  
                                  l8209 32E0                                    l8137 3028  
                                  l8129 2FD6                                    l8401 39A0  
                                  l8321 368C                                    l8251 34B0  
                                  l8219 332E                                    l6571 7B1A  
                                  l8411 39E2                                    l8315 364C  
                                  l7099 6582                                    l6635 6442  
                                  l8075 8C5C                                    l9141 68FA  
                                  l6821 26A6                                    l8181 31F8  
                                  l6573 7B3C                                    l6741 54FC  
                                  l8421 3A2C                                    l8341 376A  
                                  l8325 36A2                                    l6645 649C  
                                  l5871 8892                                    l9143 6900  
                                  l9151 6942                                    l6903 2C24  
                                  l6823 26AC                                    l6815 2666  
                                  l8255 34BC                                    l8183 320A  
                                  l8191 3244                                    l8167 3166  
                                  l8095 2E90                                    l6735 54A8  
                                  l8407 39BC                                    l8335 372A  
                                  l8327 36D2                                    l6639 6446  
                                  l6663 7F58                                    l6719 7ED4  
                                  l8503 5E42                                    l9063 3BA2  
                                  l9145 690E                                    l9137 68E4  
                                  l6913 2C66                                    l6841 277A  
                                  l6833 2734                                    l6825 26DC  
                                  l8281 3548                                    l8265 34E4  
                                  l8249 349E                                    l8177 31D8  
                                  l7641 56E0                                    l8441 3AE2  
                                  l8425 3A32                                    l8353 37EE  
                                  l8345 3780                                    l8505 5E50  
                                  l9073 3CC0                                    l9057 3B72  
                                  l9139 68F4                                    l6923 2CB0  
                                  l6851 27CC                                    l6843 27AA  
                                  l8291 3574                                    l8187 3214  
                                  l7651 5776                                    l7643 5702  
                                  l6747 5542                                    l8435 3AA6  
                                  l8347 37B0                                    l6691 4A92  
                                  l8515 5EB2                                    l8507 5E66  
                                  l9411 7794                                    l9165 69E0  
                                  l9157 6972                                    l9149 6916  
                                  l6941 2D70                                    l6909 2C40  
                                  l8269 34EA                                    l7661 57DE  
                                  l8453 3B3A                                    l6693 4AE2  
                                  l6677 4974                                    l8517 5ED0  
                                  l8509 5E84                                    l9085 3DCC  
                                  l9077 3D9A                                    l9181 7D98  
                                  l9271 8B9E                                    l6927 2CB6  
                                  l6839 2774                                    l8295 358C  
                                  l7663 581C                                    l6759 5614  
                                  l8455 3B4A                                    l8447 3B12  
                                  l8367 3842                                    l8359 3828  
                                  l8527 5F04                                    l8519 5EE6  
                                  l9415 77D2                                    l9249 8B72  
                                  l6937 2D2A                                    l8297 359C  
                                  l9433 517C                                    l7657 57A2  
                                  l8393 396E                                    l8385 3908  
                                  l8377 38D2                                    l8473 66F2  
                                  l6697 4B2A                                    l8537 5F66  
                                  l9097 3F48                                    l9089 3E68  
                                  l9195 752C                                    l6955 2DDE  
                                  l6947 2D9A                                    l9531 8828  
                                  l7667 5884                                    l7659 57BA  
                                  l6795 5ACC                                    l6787 5A20  
                                  l6779 5998                                    l8387 391A  
                                  l8395 3972                                    l8467 6662  
                                  l6957 2DF8                                    l7677 5920  
                                  l8485 6776                                    l8477 6740  
                                  l7693 6018                                    l9437 70BC  
                                  l9543 7FB6                                    l6983 67BC  
                                  l7695 6084                                    l8495 5DD6  
                                  l9537 7FA6                                    l9297 8852  
                                  l6977 67A6                                    l9449 7118  
                                  l8923 856A                                    l7963 8C92  
                                  l9459 7188                                    l6989 67DC  
                                  l8919 8538                                    l8983 61BC  
                                  l8975 6190                                    STR_1 FF5F  
                                  STR_2 FFB1                                    STR_3 FFDF  
                                  STR_4 FF4E                                    l8987 61D4  
                                  STR_5 FF70                                    STR_6 FFB1  
                                  STR_7 FFDF                                    STR_8 FF3D  
                                  STR_9 FF92                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    u5000 8762  
                                  u5010 8764                                    _T2PR 003FAB  
                                  u5100 54F8                                    u5020 7E92  
                                  u5030 7E94                                    u5111 5502  
                                  u5120 553C                                    u5200 5992  
                                  u5050 8AE8                                    u5130 556E  
                                  u5060 8AEA                                    u5220 59E8  
                                  u5150 564C                                    u5230 5A1A  
                                  u5080 54A2                                    u5240 5A4C  
                                  u5170 569E                                    _T6PR 003F93  
                                  u5500 2D84                                    u5260 5B04  
                                  u4700 8ABA                                    _PMD0 0039C0  
                                  u5405 2BDE                                    _PMD1 0039C1  
                                  u4710 8A88                                    _PMD2 0039C2  
                                  _PMD3 0039C3                                    u5440 2CA8  
                                  u5280 5B56                                    u4720 8A8A  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u5370 27BA                                    _PMD6 0039C6  
                                  _PMD7 0039C7                                    u4660 7B6A  
                                  u5620 6CE0                                    u5700 64E0  
                                  u4900 490C                                    u5550 6808  
                                  u5710 64F4                                    u4830 6494  
                                  u4910 4958                                    u5480 2D04  
                                  u5800 84FE                                    u5640 6D54  
                                  u5720 652E                                    u4840 6496  
                                  u5385 294E                                    u5705 64D6  
                                  u4825 6476                                    u4905 4902  
                                  u8130 813C                                    u5490 2D3E  
                                  u7410 318C                                    u5810 851E  
                                  u4770 8626                                    u5570 68A2  
                                  u4690 8AB8                                    u5395 2A16  
                                  u4667 7B5C                                    u7420 31AC  
                                  u4780 63C6                                    u5485 2CF4  
                                  u7421 31A6                                    u5725 6524  
                                  u8230 616E                                    u4950 4A38  
                                  u4870 7F16                                    u4935 4992  
                                  u9200 6B6A                                    u5680 76C2  
                                  u4936 4998                                    u4880 7F18  
                                  u8400 3EAC                                    u4785 63BC  
                                  u4937 49A6                                    u7610 34C2  
                                  u7530 3324                                    u6810 5772  
                                  u5690 85E4                                    u5770 65CC  
                                  u4970 4B10                                    u8090 5EFA  
                                  u8314 3BBC                                    u8155 8170  
                                  u4955 4A2E                                    u8315 3BB6  
                                  u8156 8172                                    u8148 813E  
                                  u7700 3558                                    u7460 323C  
                                  u9220 6BE6                                    u7630 34DC  
                                  u7470 325C                                    u7438 31AE  
                                  u6830 58CA                                    u5790 65F6  
                                  u6910 6110                                    u8334 3BDE  
                                  u7535 3314                                    u7295 879E  
                                  u4975 4B06                                    u8335 3BD8  
                                  u6840 58CC                                    u9400 4378  
                                  u9320 404C                                    u8520 7D84  
                                  u7465 322C                                    u7570 344E  
                                  u9330 404E                                    u8354 3DB4  
                                  u9411 43A8                                    u8355 3DAE  
                                  u9420 43BE                                    u7900 3A24  
                                  u9500 00DA                                    u9421 43BC  
                                  u7670 3538                                    u9430 43D2  
                                  u9350 40BE                                    u8374 3E82  
                                  u8294 3B8C                                    u8550 7DCA  
                                  u8375 3E7C                                    u8295 3B86  
                                  u9440 43D6                                    u9280 745A  
                                  u9370 40D0                                    u9530 0194  
                                  u8394 3EA4                                    u8538 7D86  
                                  u7675 3528                                    u8395 3E9E  
                                  u9460 43EC                                    u7940 3A80  
                                  u7860 399A                                    u9620 050E  
                                  u9540 0196                                    u9390 4120  
                                  u7950 3ABA                                    u9287 744C  
                                  u7960 3AF6                                    u9720 0648  
                                  u8568 7DCC                                    u7945 3A70  
                                  u9650 0562                                    u9570 02A6  
                                  _PLLR 01CEE0                                    u9580 02A8  
                                  u9680 05C6                                    u9950 10B8  
                                  u9790 0A18                                    u9970 116E  
                                  u9890 0EE4                                    u9980 1170  
                                  _WPUA 003A41                                    _WPUB 003A51  
                                  _WPUC 003A61                                    _WPUD 003A71  
                                  _WPUE 003A81                                    _WPUF 003A91  
                      __end_of_ADCC_ISR 8B50                           __CFG_FCMEN$ON 000000  
                                  _dbuf 0394                                    _atoi 56C6  
                                  _ctoa 7DE2                                    _main 1D82  
                                  _dtoa 401C                                    _nanf 825E  
                                  _seed 01C9                                    _prec 000C  
                                  _nout 00C1                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 5188                                    btemp 0025  
                                  _xtoa 449C                  __end_of_check_adc_scan 9252  
                         ___fpclassifyf 6318                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 0016               __end_of_SPI1_Exchange8bit 902C  
             __size_of_clear_hid_pflags 0024                         _TMR3_Initialize 86E4  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr 8EA4  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0045  
                      __end_of_INT0_ISR 91F6                        __end_of_INT1_ISR 88EE  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 7A4E  
         __end_of_OSCILLATOR_Initialize 9184                                   l10003 6B76  
                                 l10015 7BA6                                   l10031 6DE8  
                                 l10025 6DAE                                   l10201 0396  
                                 l10019 7BE4                                   l10035 6E24  
                                 l10051 7E00                                   l10123 4452  
                                 l10211 04D2                                   l10029 6DD6  
                                 l10053 7E2C                                   l10045 73E0  
                                 l10205 0406                                   l10039 6E6E  
                                 l10119 4416                                   l10303 0B12  
                                 l10223 0554                                   l10207 0470  
                                 l11031 1DC2                                   l10305 0B34  
                                 l10137 00AC                                   l11033 1DCA  
                                 l10403 10E2                                   l10331 0CBA  
                                 l10243 05F6                                   l10235 0594  
                                 l10227 057C                                   l10171 022C  
                                 l11123 2332                                   l11107 2028  
                                 l10085 4134                                   l10077 40EA  
                                 l10261 06B8                                   l10245 0602  
                                 l10229 058E                                   l10149 00F0  
                                 l10157 0146                                   l11133 24AE  
                                 l11141 24F8                                   l11037 1DE8  
                                 l10319 0C32                                   l10271 077A  
                                 l10167 01EA                                   l10175 0258  
                                 l10511 45A6                                   l10503 4546  
                                 l11151 253C                                   l11119 22D0  
                                 l11135 24D8                                   l11039 1DFA  
                                 l10089 4152                                   l10281 0926  
                                 l10265 06F0                                   l10185 02FC  
                                 l10193 032A                                   l10169 0216  
                                 l10099 4364                                   l10419 119A  
                                 l10339 0D24                                   l10347 0D90  
                                 l10355 0EA2                                   l10381 0FD6  
                                 l11165 2584                                   l11157 254E  
                                 l11085 1FA2                                   l10383 0FF0  
                                 l10367 0F3A                                   l10295 0A48  
                                 l10463 5314                                   l10455 52A8  
                                 l10439 51F4                                   l10551 480C  
                                 l10527 469C                                   l10535 4722  
                                 l10703 1D04                                   l10615 165C  
                                 l11159 2566                                   l11087 1FD0  
                                 l10393 1092                                   l10473 53CA  
                                 l10625 16F2                                   l11169 25AA  
                                 l10459 52E4                                   l10491 44D0  
                                 l10731 4C5A                                   l11179 25FE  
                                 l11099 2004                                   l10477 5406  
                                 l10469 539E                                   l10645 18E8  
                                 l10637 1830                                   l10573 1326  
                                 l10709 1D24                                   l10575 1360  
                                 l10751 4E30                                   l10743 4D82  
                                 l10815 7AA6                                   l10497 450A  
                                 l10649 191C                                   l10577 1376  
                                 l10737 4D18                                   l10595 14A8  
                                 l10763 7924                                   l10693 1CA6  
                                 l10669 1A7C                                   l10597 14E2  
                                 l10765 7966                                   PRLOCK 0039EF  
                                 l10679 1B2A                                   l10599 14F8  
                                 l10849 6EBA                                   l10699 1D00  
                                 l10983 5D24                                   l10969 5BFC  
                       __end_of___aodiv 56C6                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 35F6  
                                 _ADCLK 003EFF                         __end_of___aomod 5B7A  
                                 _ADPCH 003EF1                         __end_of___fldiv 3B70  
                                 _ADREF 003EFD                         __end_of___awdiv 68D0  
                       __end_of___flneg 8612                                   STR_11 FF81  
                                 STR_12 FEB8                                   STR_20 FE92  
                                 STR_21 FF92                                   STR_13 FEF1  
                                 STR_30 FE6C                                   STR_22 FF92  
                                 STR_14 FEDE                                   STR_23 FF81  
                                 STR_31 FFCC                                   STR_15 FF2A  
                                 STR_32 FFCC                                   STR_24 FFFB  
                                 STR_16 FF04                                   STR_25 FFF8  
                                 STR_33 FFA2                                   STR_17 FF17  
                         __CFG_WDTE$OFF 000000                                   STR_34 FFA2  
                                 STR_50 FFE9                                   STR_18 FECB  
                                 STR_35 FFA2                                   STR_51 FFF1  
                                 STR_27 FFC0                                   STR_19 FEA5  
                                 STR_28 FFD6                                   STR_36 FE41  
                       __end_of___awmod 6D82                                   STR_45 FE6B  
                                 STR_29 FE6C                                   STR_54 FFF5  
                                 STR_46 FFE5                                   STR_38 FE7F  
                                 STR_47 FFED                                   STR_39 FE59  
                                 STR_56 FFF5                                   _ADRPT 003EEC  
                       __end_of___flmul 2E3A                         __end_of___flsub 869E  
                       __end_of___fltol 6620                                   u10110 44B6  
                                 u10050 530A                                   u10210 471E  
                                 u10060 5350                                   u10220 473E  
                                 u10140 459E                                   u10150 45F2  
                                 u10310 13BE                                   u10231 476E  
                                 u10215 4700                                   u10240 4784  
                                 u10160 45F4                                   u10320 13C0  
                                 u10241 4782                                   u10090 542C  
                                 u10250 4798                                   u10330 13E6  
                                 u10067 5342                                   u10260 479C  
                                 u10180 4652                                   u10190 4654  
                                 u10510 1B7E                                   u10430 1746  
                                 u10360 1540                                   u10600 7A86  
                                 u10370 1542                                   u10460 19D6  
                                 u10380 1568                                   u10700 5D76  
                                 u10470 19D8                                   u10570 4EA4  
                                 _U1P1H 003DED                                   _U1P2H 003DEF  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T3CLK 003FA9                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u10690 5D74  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _T3CON 003FA6                                   _U2P2L 003DD6  
                                 _U2P3L 003DD8                                   _T5CLK 003F9D  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00B2  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U1TXB 003DEA  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 004A                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR3H 003FA5  
                                 _TMR5H 003F99                                   _TMR3L 003FA4  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR 9278  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                       _UART1_tx_vect_isr 8E7C  
                         __CFG_WRTB$OFF 000000                        __end_of_TMR3_ISR 760E  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 848E                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 9112                            _DMA1CON1bits 003BFD  
                                 _flags 000E                __size_of_calc_model_data 02DA  
                                 _fputc 6B46              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha 876E                                   _fputs 7B96  
                       __end_of_isdigit 8AF4                      __CFG_MCLRE$EXTMCLR 000000  
                    ?_UART1_tx_vect_isr 0045                                   _srand 89FC  
                                 _width 000A                                   _putch 90DE  
                       __end_of_islower 8A94                         __end_of_isspace 8532  
              _INT1_SetInterruptHandler 8DB2                         __end_of_isupper 8AC4  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0025                                   ltemp1 0029  
                                 ltemp2 002D                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0025                                   ttemp1 0028  
                                 ttemp2 002B                                   ttemp3 002E  
                                 ttemp5 0026                                   ttemp6 0029  
                                 ttemp7 002D                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler 8D3A             _UART1_SetRxInterruptHandler 8D12  
                                 wtemp0 0025                                   wtemp1 0027  
                                 wtemp2 0029                                   wtemp3 002B  
                                 wtemp4 002D                                   wtemp5 002F  
                                 wtemp8 0026                         __end_of_sprintf 70B0  
                       __end_of_tolower 7F72                         __end_of_strncmp 6158  
                       __end_of_toupper 7EEE                     ??_UART1_tx_vect_isr 004A  
             __size_of_DMA1_DMADCNT_ISR 000A               __end_of_UART1_rx_vect_isr 8ECC  
              __size_of_SPI1_Initialize 0016                         _TMR5_Initialize 869E  
                 __end_of_ringBufS_init 8C4A                         __initialization 71B2  
                     _UART2_rx_vect_isr 8EF4                            __end_of_atoi 593A  
                          __end_of_ctoa 7E6A                            __end_of_main 2610  
                          __end_of_dtoa 449C                            __end_of_nanf 82C0  
                          __end_of_stoa 5446                            __end_of_xtoa 4856  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0045  
               __end_of_TMR2_Initialize 9142                __size_of_DMA2_Initialize 005A  
            __end_of_check_enter_button 8830                _TMR5_SetInterruptHandler 8D62  
                         __activetblptr 000003               __size_of_DMA1_DMASCNT_ISR 000E  
                 _TMR3_InterruptHandler 00A9    __size_of_UART1_SetTxInterruptHandler 0028  
                   ??_UART2_rx_vect_isr 004A               __end_of_UART1_tx_vect_isr 8EA4  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 8BA8  
                       _PWM8_Initialize 9158                        _UART1_Initialize 81FA  
                     _UART2_tx_vect_isr 8ECC                      _UART2_Transmit_ISR 8B7C  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 8196  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 876E  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0045                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _T3GATE 003FA8                                  _U1BRGH 003DF6  
                                _U1FIFO 003DF7                                  _T3GCON 003FA7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1047 8480  
                  _start_switch_handler 8FEE                                  i1l1235 75BE  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
               __end_of_TMR3_Initialize 872A                          __CFG_WDTCCS$SC 000000  
                                _FVRCON 003EC1                        _mode_lamp_bright 91DA  
                                _SCANPR 0039F7                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  _IVTADU 00389F  
          __size_of_eaDogM_WriteCommand 000E                                  _OSCFRQ 0039DF  
                                u399_48 8FDA                                  u850_20 69FC  
                                u841_28 68EA                                  u850_26 69FE  
                                u819_20 8E5A                                  u819_26 8E5C  
                                u844_20 690A                                  u844_21 6904  
                                u870_28 8F4E                                  u848_24 69D6  
                                u848_25 69D2                                  u872_28 8F72  
                                u891_44 7FD6                                  u859_28 8FB8  
                                u891_45 7FD0                    __size_of_hid_display 0102  
                                u867_48 8F96                        __end_of___xxtofl 5F90  
 __end_of_ADCC_DischargeSampleCapacitor 923A  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 9232                __end_of_send_lcd_cmd_dma 84E0  
                       _TMR3_WriteTimer 8870                     ??_UART2_tx_vect_isr 004A  
             __end_of_UART2_rx_vect_isr 8F1A              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize 9206                        _UART2_Initialize 8322  
                                _WaitMs 895C                         _conv_raw_result 3B70  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 6620                                  ___fleq 760E  
                     _ADCC_ThresholdISR 80C4                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush 7C2E                                  _efgtoa 0000  
                                _floorf 4856                      ?_ADCC_ThresholdISR 0045  
                                _memset 4BC2                    __size_of_help_button 0038  
                                clear_0 7220                                  clear_1 7234  
                                clear_2 7248                                  clear_3 725A  
                                clear_4 7266                                  clear_5 7272  
                                clear_6 727E                                  clear_7 728A  
                                clear_8 7296                                  _printf 82C0  
                    _eaDogM_WriteString 7A4E                                  _strcpy 7398  
                             ?_ADCC_ISR 0045                                  _strlen 7AF4  
                    __size_of_TimerDone 0028                         _ADCC_Initialize 805A  
                        _PMD_Initialize 9184               __end_of_UART2_tx_vect_isr 8EF4  
                                lltemp0 0025                                  lltemp1 002D  
                                lltemp2 0035                                  lltemp3 003D  
                   ??_ADCC_ThresholdISR 0045                  __end_of_start_adc_scan 81FA  
                          __mediumconst FDB0                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 83DA  
                      __end_of_vfprintf 79A4                              _StartTimer 87B0  
         __size_of_INTERRUPT_Initialize 0068                 __end_of_TMR5_Initialize 86E4  
                     _SYSTEM_Initialize 8580                              __accesstop 0060  
               __end_of__initialization 72A8                               ?_INT0_ISR 0045  
                             ?_INT1_ISR 0045                    __end_of_display_help 924A  
                  __end_of_display_info 9242               __end_of_CLKREF_Initialize 9210  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer 8830                   _set_temp_display_help 91BC  
                      _clear_hid_pflags 8F1A                   __end_of_TMR3_CallBack 8F86  
             __end_of_ADCC_ThresholdISR 812E                      __size_of_calc_bsoc 00D4  
                __end_of_ringBufS_flush 7CC0                          __pcstackCOMRAM 0045  
                            ___inthi_sp 1016                              ___intlo_sp 180B  
                          __pidataBANK0 8926                            __pidataBANK1 7846  
                          __pidataBANK2 76D2                               ?_TMR3_ISR 0045  
                             ?_TMR5_ISR 0045                               ?_TMR6_ISR 0045  
                        ivt0x8_undefint 00AC                           __end_of_fputc 6C6A  
                         __end_of_fputs 7C2E                           __end_of_srand 8A30  
                 __end_of_TMR5_CallBack 8F62                           __end_of_putch 90F8  
               __end_of_PWM8_Initialize 916E                 __end_of_TMR6_Initialize 8BD2  
                     _adc_int_t_handler 7F72                  __end_of_PMD_Initialize 9198  
                            ??_ADCC_ISR 0045                   __end_of_TMR6_CallBack 8FAA  
           __size_of_EXT_INT_Initialize 0034              __size_of_UART1_tx_vect_isr 0028  
                         _DMA1_DMAA_ISR 921C                   TMR3_ISR@CountCallBack 0010  
                        _clear_adc_scan 925A                      __size_of_hid_input 0090  
                __size_of_mode_lamp_dim 0018                _UART2_RxInterruptHandler 0001  
             __end_of_SYSTEM_Initialize 85CA                         __CFG_PR1WAY$OFF 000000  
                       __CFG_IVT1WAY$ON 000000                 __end_of_TMR3_WriteTimer 88B0  
                            __pbssBANK0 0060                              __pbssBANK1 01B1  
                            __pbssBANK2 02BC                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              _check_help 5B7A  
               __end_of_conv_raw_result 401C                   _INT0_InterruptHandler 0007  
                            ??_INT0_ISR 0045                              ??_INT1_ISR 004B  
                     __end_of_TimerDone 8C9A                        _DMA1_DMADCNT_ISR 9210  
                    __size_of_init_bsoc 0012              __size_of_UART2_rx_vect_isr 0026  
                               IVTBASEH 003FD6                                 IVTBASEL 003FD5  
                               IVTBASEU 003FD7                      __size_of_lp_filter 01C0  
                 __end_of_wait_lcd_done 90DE        __end_of_TMR3_SetInterruptHandler 8DB2  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 8D62  
                            ??_TMR3_ISR 01D1                 __end_of_ADCC_Initialize 80C4  
                            ??_TMR5_ISR 004F               __end_of_adc_int_t_handler 7FF0  
                            ??_TMR6_ISR 004A                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler 8E2A  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler 8E02  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
                               _ADSTPTH 003EE5                                 _ADSTPTL 003EE4  
                     _UART1_Receive_ISR 9086                                 _CLKRCLK 003CE6  
                               _CLKRCON 003CE5                  __end_of_clear_adc_scan 9260  
                        ?_DMA1_DMAA_ISR 0045                        _DMA1_DMASCNT_ISR 91F8  
                               _U1ERRIE 003DFA                      __size_of_set_vterm 001E  
                               _U1ERRIR 003DF9                                 _U2ERRIE 003DE2  
                               _U2ERRIR 003DE1                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0045              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0B3E  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 7540                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch 8C4A                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer 8870                 __size_of_switch_handler 0148  
                    __size_of_stop_bsoc 0006       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                 __size_of_DMA1_DMAOR_ISR 000A  
                               __Hparam 0000              __size_of_ADCC_ThresholdISR 006A  
                         _mode_lamp_dim 9112                                 __Lparam 0000  
              __end_of_UART1_Initialize 825E                       __end_of_hid_input 7DE2  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 5446  
                               ___fladd 2E3A                                 ___aomod 593A  
                               ___fldiv 35F6                                 ___awdiv 6782  
                               ___flneg 85CA                                 ___awmod 6C6A  
                               ___flmul 2610                                 ___flsub 8658  
                               ___fltol 64AE               __end_of_UART1_Receive_ISR 90A4  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 7398                                 __pcinit 71B2  
              __end_of_mode_lamp_bright 91E8                         __size_of_memset 02EC  
              __size_of_adc_int_handler 0002                     _eaDogM_WriteCommand 91CC  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 1D82                                 __ptext1 89C8  
                               __ptext2 8FEE                                 __ptext3 8196  
                               __ptext4 9198                                 __ptext5 9232  
                               __ptext6 89FC                                 __ptext7 72AE  
                               __ptext8 8BD2                                 __ptext9 8BFA  
                     _UART2_Receive_ISR 90A4                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize 916E  
                               us518999 56B0                            __size_of_abs 0046  
                               us529999 5B68                            __size_of_pad 0114  
                     __end_of_init_bsoc 91BC                                 _isalpha 872A  
                               _isdigit 8AC4                                 us931999 4036  
                             _T3CONbits 003FA6                                 _mode_sw 0018  
                     __end_of_lp_filter 6318                                 _islower 8A64  
                               _isspace 84E0                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 8380  
                               _isupper 8A94              __size_of_SYSTEM_Initialize 004A  
                               _sprintf 6FA6                                 _tolower 7EEE  
                 __size_of_display_help 0008                                 _utctime 009D  
                 __size_of_display_info 0008                                 _strncmp 5F90  
                               _toupper 7E6A                    end_of_initialization 72A8  
             __size_of_convert_adc_data 00B8                      _check_enter_button 87F0  
                             i1u1071_20 75B6     __end_of_UART1_SetTxInterruptHandler 8D12  
           _UART1_SetTxInterruptHandler 8CEA     __end_of_UART2_SetRxInterruptHandler 8CEA  
           _UART2_SetRxInterruptHandler 8CC2                       __end_of_set_vterm 9068  
                     __end_of_vfpfcnvrt 1D82                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd 926C               __end_of_UART2_Receive_ISR 90C2  
                        wdtdelay@dcount 00A1                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 004B                   _INT1_InterruptHandler 0004  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc 9272  
              _TMR3_SetInterruptHandler 8D8A                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler 8D3A                            _display_help 9242  
                 _TMR5_InterruptHandler 00AC                            _display_info 923A  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags 8F3E  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler 8E52  
           _ADCC_SetADIInterruptHandler 8E2A                              _update_lcd 6E96  
                       _calc_model_data 4EAE                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc 89C8  
                       _DMA1_Initialize 7FF0                              _start_bsoc 9272  
                       _SPI1_Initialize 9142                   __end_of_get_vterm_ptr 8B22  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs 8992            __end_of_INTERRUPT_Initialize 8196  
                            _vterm_dump 6A18                          __end_of___flge 6782  
                        __end_of___fleq 76D2    __end_of_INT0_DefaultInterruptHandler 9284  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler 9282  
            __size_of_UART1_Receive_ISR 001E                         _DMA2_Initialize 83DA  
                        __end_of_efgtoa 1244                       __size_of_TMR3_ISR 00CE  
                     __size_of_TMR5_ISR 005A                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 4BC2  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 0095  
                        __end_of_memset 4EAE                          __end_of_printf 8322  
              __end_of_DMA1_DMADCNT_ISR 921A             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack 8FEE                          __end_of_strcpy 746C  
                        __end_of_strlen 7B96                     start_initialization 71B2  
  __end_of_TMR5_DefaultInterruptHandler 8E7A   __size_of_TMR5_DefaultInterruptHandler 0028  
          _TMR5_DefaultInterruptHandler 8E52         __size_of_PIN_MANAGER_Initialize 0092  
                           __end_of_abs 8658                   __end_of_INT1_CallBack 8FCC  
             __size_of_set_display_info 001E                             __end_of_pad 6E96  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd 8C22  
                        _switch_handler 68D0           __size_of_ADCC_StartConversion 0012  
                            ivt0x8_base 0008                           _uart1RxBuffer 0500  
                 __end_of___fpclassifyf 64AE                           _uart2RxBuffer 0600  
                         _uart1TxBuffer 02BC                __end_of_DMA1_DMASCNT_ISR 9206  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR 9228  
                   __end_of_hid_display 71B2                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone 8C72                           _ringBufS_init 8C22  
                           __pdataBANK0 00C3                             __pdataBANK1 0100  
                           __pdataBANK2 0200              __size_of_UART2_Receive_ISR 001E  
                   __size_of_get_switch 0028              __end_of_EXT_INT_Initialize 8A64  
               __end_of_calc_model_data 5188                     __end_of_help_button 8926  
       __end_of_eaDogM_WriteStringAtPos 89C8                             __pbssBIGRAM 06FF  
               __end_of_DMA1_Initialize 805A                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 8E02                           __pcstackBANK1 01D1  
              __size_of_TMR2_Initialize 0018                  __size_of_TMR3_CallBack 0024  
                __end_of_switch_handler 6A18                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 9158                _UART1_RxInterruptHandler 00BB  
              _UART2_TxInterruptHandler 00BE                               __end_of_T FE41  
                      _convert_adc_data 778E                               _calc_bsoc 746C  
             __size_of_ringBufS_put_dma 00AA                            _init_display 72AE  
                __end_of_DMA1_DMAOR_ISR 9232                  __size_of_TMR5_CallBack 0024  
                 _TMR6_InterruptHandler 00AF                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize 8434                  _PIN_MANAGER_Initialize 7CC0  
              __size_of_TMR3_Initialize 0046                    __end_of_wait_lcd_set 9266  
                         __pmediumconst FDB0                               __ptext100 8CEA  
                             __ptext101 8D12                               __ptext110 9158  
                             __ptext102 8BA8                               __ptext111 9184  
                             __ptext103 8D3A                               __ptext120 7FF0  
                             __ptext112 7CC0                               __ptext104 869E  
                             __ptext121 9206                               __ptext113 916E  
                             __ptext105 8D62                               __ptext130 8830  
                             __ptext122 805A                               __ptext114 812E  
                             __ptext106 86E4                               __ptext131 8F3E  
                             __ptext123 8E02                               __ptext115 9252  
                             __ptext107 8D8A                               __ptext140 9282  
                             __ptext132 8E52                               __ptext124 8E2A  
                             __ptext116 8A30                               __ptext108 912A  
                             __ptext141 9278                               __ptext133 7540  
                             __ptext125 88B0                               __ptext117 8DB2  
                             __ptext109 9142                               __ptext150 9086  
                             __ptext142 8B24                               __ptext134 8870  
                             __ptext126 8FAA                               __ptext118 8DDA  
                             __ptext151 8ECC                               __ptext143 7F72  
                             __ptext135 8F62                               __ptext127 927E  
                             __ptext119 83DA                               __ptext160 921C  
                             __ptext152 8B7C                               __ptext144 9284  
                             __ptext136 9280                               __ptext128 68D0  
                             __ptext161 9228                               __ptext153 8EF4  
                             __ptext145 9286                               __ptext137 746C  
                             __ptext129 8434                               __ptext162 0000  
                             __ptext154 90A4                               __ptext146 80C4  
                             __ptext138 91E8                               __ptext155 90F8  
                             __ptext147 8E7C                               __ptext139 8FCC  
                             __ptext156 8F86                               __ptext148 8B50  
                             __ptext157 8532                               __ptext149 8EA4  
                             __ptext158 91F8                               __ptext159 9210  
                             _hid_input 7D52                      __end_of_StartTimer 87F0  
                     __size_of_wdtdelay 005A                       __size_of_vfprintf 00AC  
                              _ADCC_ISR 8B24                  __CFG_BBSIZE$BBSIZE_512 000000  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
               __size_of_get_raw_result 001E                               _init_bsoc 91AA  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 6158                             _hid_display 70B0  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize 812E                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0045  
                              _INT0_ISR 91E8                                _INT1_ISR 88B0  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 01B1  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack 8F62  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              i2u900_48 8EB8                                i2u902_48 8EE0  
                              _PIR8bits 0039A8                                i2u904_48 8F06  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0046  
                              i2u894_48 8B3C                                i2u896_48 80FA  
                              i2u896_49 810E                                i2u898_48 8E90  
                             _set_vterm 904A                     __size_of_update_lcd 0110  
                           _help_button 88EE                                _TMR3_ISR 7540  
            __end_of_UART1_Transmit_ISR 8B7C                                _TMR5_ISR 8434  
                              _TMR6_ISR 90F8                               _port_data 01A1  
                   __size_of_static_soc 0034                               _vfpfcnvrt 1244  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0006  
                         _TMR5_CallBack 8F3E                              _ADCON0bits 003EF8  
                    __end_of_check_help 5D8C                               _start_lcd 9266  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 8F86                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc 926C  
                      _set_display_info 9068                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 71C6                               copy_data1 71E8  
                             copy_data2 720A                _INT0_SetInterruptHandler 8DDA  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 0022  
   __end_of_UART2_SetTxInterruptHandler 8CC2             _UART2_SetTxInterruptHandler 8C9A  
                          _uart1RxCount 001F                            _uart2RxCount 0019  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done 90C2                            _send_lcd_cmd 8BFA  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler 9286  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                      __end_of_get_switch 8C72  
                 __end_of_DMA1_DMAA_ISR 9226                      ___fpclassifyf@F463 0099  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 5D8C                       ?_DMA1_DMADCNT_ISR 0045  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand 91DA                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 004B                                __ptext10 900E  
                              __ptext11 8C22                                __ptext20 902C  
                              __ptext12 91AA                                __ptext21 5D8C  
                              __ptext13 70B0                                __ptext30 8992  
                              __ptext22 8F1A                                __ptext14 7D52  
                              __ptext31 848E                                __ptext23 925A  
                              __ptext15 8C4A                                __ptext40 78F8  
                              __ptext32 90C2                                __ptext24 5B7A  
                              __ptext16 91CC                                __ptext41 1244  
                              __ptext33 8380                                __ptext25 6A18  
                              __ptext17 778E                                __ptext50 8A94  
                              __ptext42 449C                                __ptext34 7A4E  
                              __ptext26 6FA6                                __ptext18 3B70  
                              __ptext51 7398                                __ptext43 7E6A  
                              __ptext35 9260                                __ptext27 8AF4  
                              __ptext19 825E                                __ptext60 6782  
                              __ptext52 4856                                __ptext44 8A64  
                              __ptext36 9266                                __ptext28 895C  
                              __ptext61 401C                                __ptext53 6318  
                              __ptext45 872A                                __ptext37 7C2E  
                              __ptext29 6E96                                __ptext70 90DE  
                              __ptext62 8612                                __ptext54 64AE  
                              __ptext46 5F90                                __ptext38 4BC2  
                              __ptext71 79A4                                __ptext63 593A  
                              __ptext55 85CA                                __ptext47 5188  
                              __ptext39 82C0                                __ptext80 876E  
                              __ptext72 56C6                                __ptext64 5446  
                              __ptext56 6620                                __ptext48 0000  
                              __ptext81 88EE                                __ptext73 84E0  
                              __ptext65 7DE2                                __ptext57 760E  
                              __ptext49 7EEE                                __ptext90 9272  
                              __ptext82 8C72                                __ptext74 8AC4  
                              __ptext66 6D82                                __ptext58 35F6  
                              __ptext91 6158                                __ptext83 87B0  
                              __ptext75 904A                                __ptext67 7AF4  
                              __ptext59 6C6A                                __ptext92 8658  
                              __ptext84 923A                                __ptext76 91BC  
                              __ptext68 7B96                                __ptext93 2E3A  
                              __ptext85 9242                                __ptext77 9068  
                              __ptext69 6B46                                __ptext94 2610  
                              __ptext86 87F0                                __ptext78 9112  
                              __ptext95 8580                                __ptext87 924A  
                              __ptext79 91DA                                __ptext96 8322  
                              __ptext88 4EAE                                __ptext97 8C9A  
                              __ptext89 926C                                __ptext98 8CC2  
                              __ptext99 81FA                        __size_of_isupper 0030  
                              us1000999 519A                                us1013999 451C  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 01C8                        __size_of_toupper 0084  
                      _ringBufS_put_dma 79A4                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 088E  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0045                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00B5  
                             stoa@F1166 00EB                      ??_DMA1_DMASCNT_ISR 004B  
          __end_of_ADCC_StartConversion 91AA                                _spi_link 0089  
                              _wdtdelay 8380              __end_of_UART2_Transmit_ISR 8BA8  
                              _vfprintf 78F8                __end_of_convert_adc_data 7846  
            __end_of_PWM8_LoadDutyValue 87B0    __end_of_TMR3_DefaultInterruptHandler 9282  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler 9280  
  __end_of_INT1_DefaultInterruptHandler 9280   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler 927E                           ??_Default_ISR 0045  
                           _uart1RxHead 0021                  __size_of_get_vterm_ptr 002E  
                           _uart1TxHead 0024                             _uart2RxHead 001B  
                           _uart1RxTail 0020                          _get_raw_result 902C  
                           _uart2TxHead 001E                             _uart1TxTail 0023  
                           _uart2RxTail 001A                             _uart2TxTail 001D  
                          _wait_lcd_set 9260                      _EXT_INT_Initialize 8A30  
  __end_of_TMR6_DefaultInterruptHandler 8580   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler 8532    __end_of_ADCC_DefaultInterruptHandler 9286  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 9284  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 8BD2          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 91CC                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 7AF4                   __end_of_mode_lamp_dim 912A  
               __end_of_adc_int_handler 9288                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0022                      __end_of_update_lcd 6FA6  
                _uart2TxBufferRemaining 001C                      __end_of_static_soc 89FC  
                    __end_of_start_bsoc 9278                          _FVR_Initialize 9252  
                __end_of_get_raw_result 904A                        _send_lcd_cmd_dma 848E  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0014  
      __end_of_INT1_SetInterruptHandler 8DDA               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 004B                _UART1_TxInterruptHandler 00B8  
             __end_of_send_lcd_cmd_long 8BFA                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR 927E          __end_of_PIN_MANAGER_Initialize 7D52  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 6B46  
               _eaDogM_WriteStringAtPos 8992                           _get_vterm_ptr 8AF4  
                        _check_adc_scan 924A               __size_of_UART2_Initialize 005E  
