

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Mar  7 00:32:40 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,inline
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,inline
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	text57,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	text68,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=4,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=4,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=4,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=4,class=CODE,delta=1
   101                           	psect	text84,global,reloc=4,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=4,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=4,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=4,class=CODE,delta=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1
   109                           	psect	text92,global,reloc=4,class=CODE,delta=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1
   111                           	psect	text94,global,reloc=4,class=CODE,delta=1
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1
   113                           	psect	text96,global,reloc=2,class=CODE,delta=1
   114                           	psect	text97,global,reloc=4,class=CODE,delta=1
   115                           	psect	text98,global,reloc=4,class=CODE,delta=1
   116                           	psect	text99,global,reloc=4,class=CODE,delta=1
   117                           	psect	text100,global,reloc=4,class=CODE,delta=1
   118                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   119                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   120                           	psect	text101,global,reloc=4,class=CODE,delta=1
   121                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
   122                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   123  0000                     
   124                           ; Version 2.05
   125                           ; Generated 20/12/2018 GMT
   126                           ; 
   127                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   128                           ; All rights reserved.
   129                           ; 
   130                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   131                           ; 
   132                           ; Redistribution and use in source and binary forms, with or without modification, are
   133                           ; permitted provided that the following conditions are met:
   134                           ; 
   135                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   136                           ;        conditions and the following disclaimer.
   137                           ; 
   138                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   139                           ;        of conditions and the following disclaimer in the documentation and/or other
   140                           ;        materials provided with the distribution.
   141                           ; 
   142                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   143                           ;        software without specific prior written permission.
   144                           ; 
   145                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   146                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   147                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   148                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   149                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   150                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   151                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   152                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   153                           ; 
   154                           ; 
   155                           ; Code-generator required, PIC18F57K42 Definitions
   156                           ; 
   157                           ; SFR Addresses
   158  0000                     
   159 ;;_sum	offset	0
   160 ;;_j	offset	2
   161 ;;_mode	offset	3
   162 ;;_rxData	offset	0
   163 ;;_t_link	offset=-1 (param)
   164 ;;_f	offset	0
   165 ;;_ap	offset	5
   166 ;;_s	offset=-2 (param)
   167 ;;_fmt	offset=-3 (param)
   168 ;;_checksum	offset	0
   169 ;;_k	offset	2
   170 ;;_i	offset	3
   171 ;;_byte_block	offset=-1 (param)
   172 ;;_length	offset=-2 (param)
   173 ;;_fake	offset=-3 (param)
   174 ;;_i	offset	0
   175 ;;_sum	offset	2
   176 ;;_byte_block	offset=-1 (param)
   177 ;;_byte_count	offset=-3 (param)
   178 ;;_bufData	offset=-1 (param)
   179 ;;_rxData	offset	0
   180 ;;_r_link	offset=-1 (param)
   181 ;;_byte_block	offset=-1 (param)
   182 ;;_clear	offset=-2 (param)
   183 ;;_txData	offset=-1 (param)
   184 ;;_readValue	offset	0
   185 ;;_timer	offset=-1 (param)
   186 ;;_timer	offset=-1 (param)
   187 ;;_count	offset=-3 (param)
   188 ;;_cmd	offset=-1 (param)
   189 ;;_cmd	offset=-1 (param)
   190 ;;_delay	offset=-4 (param)
   191 ;;_data	offset=-1 (param)
   192 ;;__this	offset=-2 (param)
   193 ;;_strPtr	offset=-1 (param)
   194 ;;__this	offset=-2 (param)
   195 ;;_clearBuffer	offset=-3 (param)
   196 ;;_s	offset	0
   197 ;;_k	offset	2
   198 ;;_dest	offset=-2 (param)
   199 ;;_c	offset=-4 (param)
   200 ;;_n	offset=-6 (param)
   201 ;;_ap	offset	0
   202 ;;_fmt	offset=-2 (param)
   203 ;;_cfmt	offset	0
   204 ;;_fp	offset=-2 (param)
   205 ;;_fmt	offset=-3 (param)
   206 ;;_ap	offset=-5 (param)
   207 ;;_vfpfcnvrt$3424	offset	0
   208 ;;_llu	offset	2
   209 ;;_ll	offset	10
   210 ;;_done	offset	18
   211 ;;_cp	offset	20
   212 ;;_c	offset	22
   213 ;;_fp	offset=-2 (param)
   214 ;;_fmt	offset=-4 (param)
   215 ;;_ap	offset=-6 (param)
   216 ;;_xtoa$3410	offset	0
   217 ;;_xtoa$3409	offset	2
   218 ;;_n	offset	4
   219 ;;_c	offset	12
   220 ;;_i	offset	14
   221 ;;_w	offset	16
   222 ;;_p	offset	18
   223 ;;_fp	offset=-2 (param)
   224 ;;_d	offset=-10 (param)
   225 ;;_x	offset=-11 (param)
   226 ;;_toupper$3998	offset	0
   227 ;;_c	offset=-2 (param)
   228 ;;_c	offset=-2 (param)
   229 ;;_c	offset=-2 (param)
   230 ;;_c	offset=-2 (param)
   231 ;;_nuls	offset	0
   232 ;;_l	offset	7
   233 ;;_p	offset	9
   234 ;;_cp	offset	11
   235 ;;_w	offset	13
   236 ;;_i	offset	15
   237 ;;_fp	offset=-2 (param)
   238 ;;_s	offset=-4 (param)
   239 ;;_dtoa$3388	offset	0
   240 ;;_n	offset	2
   241 ;;_i	offset	10
   242 ;;_s	offset	12
   243 ;;_w	offset	14
   244 ;;_p	offset	16
   245 ;;_fp	offset=-2 (param)
   246 ;;_d	offset=-10 (param)
   247 ;;_w	offset	0
   248 ;;_i	offset	2
   249 ;;_fp	offset=-2 (param)
   250 ;;_buf	offset=-4 (param)
   251 ;;_p	offset=-6 (param)
   252 ;;_a	offset	0
   253 ;;_s	offset=-2 (param)
   254 ;;_i	offset	0
   255 ;;_c	offset	2
   256 ;;_s	offset=-2 (param)
   257 ;;_fp	offset=-4 (param)
   258 ;;_c	offset=-2 (param)
   259 ;;_fp	offset=-4 (param)
   260 ;;_c	offset=-1 (param)
   261 ;;__this	offset=-2 (param)
   262 ;;_c	offset=-3 (param)
   263 ;;_a	offset=-2 (param)
   264 ;;_sign	offset	0
   265 ;;_counter	offset	1
   266 ;;_dividend	offset=-8 (param)
   267 ;;_divisor	offset=-16 (param)
   268 ;;_quotient	offset	0
   269 ;;_sign	offset	8
   270 ;;_counter	offset	9
   271 ;;_dividend	offset=-8 (param)
   272 ;;_divisor	offset=-16 (param)
   273 ;;_atoi$3885	offset	0
   274 ;;_atoi$3883	offset	2
   275 ;;_atoi$3884	offset	4
   276 ;;_n	offset	5
   277 ;;_neg	offset	7
   278 ;;_s	offset=-1 (param)
   279 ;;_isspace$3910	offset	0
   280 ;;_c	offset=-2 (param)
   281 ;;_c	offset=-2 (param)
   282 ;;_InterruptHandler	offset=-3 (param)
   283 ;;_InterruptHandler	offset=-3 (param)
   284 ;;_InterruptHandler	offset=-3 (param)
   285 ;;_InterruptHandler	offset=-3 (param)
   286 ;;_InterruptHandler	offset=-3 (param)
   287 ;;_state	offset	0
   288 ;;_InterruptHandler	offset=-3 (param)
   289 ;;_InterruptHandler	offset=-3 (param)
   290 ;;_InterruptHandler	offset=-3 (param)
   291 ;;_InterruptHandler	offset=-3 (param)
   292 ;;_i	offset	0
   293                           
   294                           	psect	idataCOMRAM
   295  005916                     __pidataCOMRAM:
   296                           	opt callstack 0
   297                           
   298                           ;initializer for stoa@F1139
   299  005916  28                 	db	40
   300  005917  6E                 	db	110
   301  005918  75                 	db	117
   302  005919  6C                 	db	108
   303  00591A  6C                 	db	108
   304  00591B  29                 	db	41
   305  00591C  00                 	db	0
   306                           
   307                           	psect	idataBANK0
   308  0055BE                     __pidataBANK0:
   309                           	opt callstack 0
   310                           
   311                           ;initializer for _H10
   312  0055BE  0000               	dw	0
   313  0055C0  9F75               	dw	40821
   314  0055C2  000C               	dw	12
   315  0055C4  01                 	db	1
   316  0055C5  80                 	db	128
   317  0055C6  01                 	db	1
   318  0055C7  81                 	db	129
   319  0055C8  00                 	db	0
   320  0055C9  00                 	db	0
   321  0055CA  0A                 	db	10
   322  0055CB  0000               	dw	0
   323  0055CD  00                 	db	0
   324  0055CE  00                 	db	0
   325  0055CF  00                 	db	0
   326  0055D0  00                 	db	0
   327  0055D1  00                 	db	0
   328  0055D2  00                 	db	0
   329  0055D3  00                 	db	0
   330  0055D4  00                 	db	0
   331  0055D5  00                 	db	0
   332  0055D6  00                 	db	0
   333  0055D7  0A                 	db	10
   334  0055D8  0000               	dw	0
   335  0055DA  0001               	dw	1
   336  0055DC  0000               	dw	0
   337  0055DE  01                 	db	1
   338  0055DF  80                 	db	128
   339  0055E0  00                 	db	0
   340  0055E1  01                 	db	1
   341  0055E2  00                 	db	0
   342  0055E3  00                 	db	0
   343  0055E4  0A                 	db	10
   344  0000                     _IVTADL	set	14493
   345  0000                     _IVTADH	set	14494
   346  0000                     _IVTADU	set	14495
   347  0000                     _SCANPR	set	14839
   348  0000                     _DMA2PR	set	14836
   349  0000                     _DMA1PR	set	14835
   350  0000                     _MAINPR	set	14834
   351  0000                     _ISRPR	set	14833
   352  0000                     _PIE2bits	set	14738
   353  0000                     _PIR2bits	set	14754
   354  0000                     _PIE9bits	set	14745
   355  0000                     _PIR9bits	set	14761
   356  0000                     _PIE6bits	set	14742
   357  0000                     _PIE3bits	set	14739
   358  0000                     _PMD7	set	14791
   359  0000                     _PMD6	set	14790
   360  0000                     _PMD5	set	14789
   361  0000                     _PMD4	set	14788
   362  0000                     _PMD3	set	14787
   363  0000                     _PMD2	set	14786
   364  0000                     _PMD1	set	14785
   365  0000                     _PMD0	set	14784
   366  0000                     _OSCTUNE	set	14814
   367  0000                     _OSCFRQ	set	14815
   368  0000                     _OSCEN	set	14813
   369  0000                     _OSCCON3	set	14811
   370  0000                     _OSCCON1	set	14809
   371  0000                     _IPR9bits	set	14729
   372  0000                     _IPR7bits	set	14727
   373  0000                     _IPR5bits	set	14725
   374  0000                     _IPR1bits	set	14721
   375  0000                     _IPR3bits	set	14723
   376  0000                     _IPR6bits	set	14726
   377  0000                     _IPR2bits	set	14722
   378  0000                     _PIE7bits	set	14743
   379  0000                     _PIE5bits	set	14741
   380  0000                     _PIE1bits	set	14737
   381  0000                     _PIR7bits	set	14759
   382  0000                     _PIR5bits	set	14757
   383  0000                     _PIR1bits	set	14753
   384  0000                     _PLLR	set	118496
   385  0000                     _SPI1SDIPPS	set	15071
   386  0000                     _RC6PPS	set	14870
   387  0000                     _RC5PPS	set	14869
   388  0000                     _RA6PPS	set	14854
   389  0000                     _RA5PPS	set	14853
   390  0000                     _RA4PPS	set	14852
   391  0000                     _SPI1SCKPPS	set	15070
   392  0000                     _U1RXPPS	set	15077
   393  0000                     _INT1PPS	set	15041
   394  0000                     _INT2PPS	set	15042
   395  0000                     _INT0PPS	set	15040
   396  0000                     _RC3PPS	set	14867
   397  0000                     _RB6PPS	set	14862
   398  0000                     _U2RXPPS	set	15080
   399  0000                     _SLRCONF	set	14995
   400  0000                     _SLRCONE	set	14979
   401  0000                     _SLRCOND	set	14963
   402  0000                     _SLRCONC	set	14947
   403  0000                     _SLRCONB	set	14931
   404  0000                     _SLRCONA	set	14915
   405  0000                     _ODCOND	set	14962
   406  0000                     _ODCONC	set	14946
   407  0000                     _ODCONB	set	14930
   408  0000                     _ODCONA	set	14914
   409  0000                     _ODCONF	set	14994
   410  0000                     _ODCONE	set	14978
   411  0000                     _WPUC	set	14945
   412  0000                     _WPUA	set	14913
   413  0000                     _WPUB	set	14929
   414  0000                     _WPUE	set	14977
   415  0000                     _WPUF	set	14993
   416  0000                     _WPUD	set	14961
   417  0000                     _ANSELA	set	14912
   418  0000                     _ANSELF	set	14992
   419  0000                     _ANSELE	set	14976
   420  0000                     _ANSELB	set	14928
   421  0000                     _ANSELC	set	14944
   422  0000                     _ANSELD	set	14960
   423  0000                     _DMA1SSA	set	15353
   424  0000                     _DMA1DSZ	set	15342
   425  0000                     _DMA1SSZ	set	15351
   426  0000                     _DMA1DSA	set	15344
   427  0000                     _DMA1CON0bits	set	15356
   428  0000                     _DMA1CON1bits	set	15357
   429  0000                     _DMA1CON0	set	15356
   430  0000                     _DMA1AIRQ	set	15358
   431  0000                     _DMA1SIRQ	set	15359
   432  0000                     _DMA1CON1	set	15357
   433  0000                     _CLC1CON	set	15476
   434  0000                     _CLC1GLS3	set	15485
   435  0000                     _CLC1GLS2	set	15484
   436  0000                     _CLC1GLS1	set	15483
   437  0000                     _CLC1GLS0	set	15482
   438  0000                     _CLC1SEL3	set	15481
   439  0000                     _CLC1SEL2	set	15480
   440  0000                     _CLC1SEL1	set	15479
   441  0000                     _CLC1SEL0	set	15478
   442  0000                     _CLC1POL	set	15477
   443  0000                     _CLKRCON	set	15589
   444  0000                     _CLKRCLK	set	15590
   445  0000                     _MD1CARL	set	15613
   446  0000                     _MD1CARH	set	15614
   447  0000                     _MD1SRC	set	15612
   448  0000                     _MD1CON1bits	set	15611
   449  0000                     _MD1CON0bits	set	15610
   450  0000                     _SPI1INTFbits	set	15642
   451  0000                     _SPI1RXB	set	15632
   452  0000                     _SPI1TXB	set	15633
   453  0000                     _SPI1TCNTL	set	15634
   454  0000                     _SPI1CON0	set	15636
   455  0000                     _SPI1CLK	set	15644
   456  0000                     _SPI1BAUD	set	15641
   457  0000                     _SPI1CON2	set	15638
   458  0000                     _SPI1CON1	set	15637
   459  0000                     _U2RXB	set	15824
   460  0000                     _U2TXB	set	15826
   461  0000                     _U2ERRIE	set	15842
   462  0000                     _U2ERRIR	set	15841
   463  0000                     _U2UIR	set	15840
   464  0000                     _U2FIFO	set	15839
   465  0000                     _U2BRGH	set	15838
   466  0000                     _U2BRGL	set	15837
   467  0000                     _U2CON2	set	15836
   468  0000                     _U2CON1	set	15835
   469  0000                     _U2CON0	set	15834
   470  0000                     _U2P3L	set	15832
   471  0000                     _U2P2L	set	15830
   472  0000                     _U2P1L	set	15828
   473  0000                     _U1RXB	set	15848
   474  0000                     _U1TXB	set	15850
   475  0000                     _U1ERRIE	set	15866
   476  0000                     _U1ERRIR	set	15865
   477  0000                     _U1UIR	set	15864
   478  0000                     _U1FIFO	set	15863
   479  0000                     _U1BRGH	set	15862
   480  0000                     _U1BRGL	set	15861
   481  0000                     _U1CON2	set	15860
   482  0000                     _U1CON1	set	15859
   483  0000                     _U1CON0	set	15858
   484  0000                     _U1P3H	set	15857
   485  0000                     _U1P3L	set	15856
   486  0000                     _U1P2H	set	15855
   487  0000                     _U1P2L	set	15854
   488  0000                     _U1P1H	set	15853
   489  0000                     _U1P1L	set	15852
   490  0000                     _ADCON0	set	16120
   491  0000                     _ADCLK	set	16127
   492  0000                     _ADACT	set	16126
   493  0000                     _ADREF	set	16125
   494  0000                     _ADSTAT	set	16124
   495  0000                     _ADCON3	set	16123
   496  0000                     _ADCON2	set	16122
   497  0000                     _ADCON1	set	16121
   498  0000                     _ADPREH	set	16119
   499  0000                     _ADPREL	set	16118
   500  0000                     _ADCAP	set	16117
   501  0000                     _ADACQH	set	16116
   502  0000                     _ADACQL	set	16115
   503  0000                     _ADPCH	set	16113
   504  0000                     _ADRPT	set	16108
   505  0000                     _ADACCU	set	16106
   506  0000                     _ADSTPTH	set	16101
   507  0000                     _ADSTPTL	set	16100
   508  0000                     _ADUTHH	set	16097
   509  0000                     _ADUTHL	set	16096
   510  0000                     _ADLTHH	set	16095
   511  0000                     _ADLTHL	set	16094
   512  0000                     _NCO1CONbits	set	16190
   513  0000                     _NCO1INCL	set	16187
   514  0000                     _NCO1INCH	set	16188
   515  0000                     _NCO1INCU	set	16189
   516  0000                     _NCO1ACCL	set	16184
   517  0000                     _NCO1ACCH	set	16185
   518  0000                     _NCO1ACCU	set	16186
   519  0000                     _NCO1CLK	set	16191
   520  0000                     _NCO1CON	set	16190
   521  0000                     _LATCbits	set	16316
   522  0000                     _LATEbits	set	16318
   523  0000                     _T6CON	set	16276
   524  0000                     _T6TMR	set	16274
   525  0000                     _T6PR	set	16275
   526  0000                     _T6RST	set	16279
   527  0000                     _T6HLT	set	16277
   528  0000                     _T6CLKCON	set	16278
   529  0000                     _TRISD	set	16325
   530  0000                     _TRISC	set	16324
   531  0000                     _TRISB	set	16323
   532  0000                     _TRISA	set	16322
   533  0000                     _TRISF	set	16327
   534  0000                     _TRISE	set	16326
   535  0000                     _LATC	set	16316
   536  0000                     _LATB	set	16315
   537  0000                     _LATF	set	16319
   538  0000                     _LATA	set	16314
   539  0000                     _LATD	set	16317
   540  0000                     _LATE	set	16318
   541  0000                     _IVTLOCKbits	set	16340
   542  0000                     _IVTLOCK	set	16340
   543  0000                     _INTCON0bits	set	16338
   544  0000                     _GIE	set	130711
   545                           
   546                           	psect	smallconst
   547  002000                     __psmallconst:
   548                           	opt callstack 0
   549  002000  00                 	db	0
   550  002001                     STR_1:
   551                           
   552                           ; BSR set to: 57
   553  002001  4D                 	db	77	;'M'
   554  002002  20                 	db	32
   555  002003  25                 	db	37
   556  002004  64                 	db	100	;'d'
   557  002005  2C                 	db	44
   558  002006  20                 	db	32
   559  002007  48                 	db	72	;'H'
   560  002008  20                 	db	32
   561  002009  25                 	db	37
   562  00200A  30                 	db	48	;'0'
   563  00200B  32                 	db	50	;'2'
   564  00200C  78                 	db	120	;'x'
   565  00200D  25                 	db	37
   566  00200E  30                 	db	48	;'0'
   567  00200F  32                 	db	50	;'2'
   568  002010  78                 	db	120	;'x'
   569  002011  25                 	db	37
   570  002012  30                 	db	48	;'0'
   571  002013  32                 	db	50	;'2'
   572  002014  78                 	db	120	;'x'
   573  002015  25                 	db	37
   574  002016  30                 	db	48	;'0'
   575  002017  32                 	db	50	;'2'
   576  002018  78                 	db	120	;'x'
   577  002019  25                 	db	37
   578  00201A  30                 	db	48	;'0'
   579  00201B  32                 	db	50	;'2'
   580  00201C  78                 	db	120	;'x'
   581  00201D  25                 	db	37
   582  00201E  30                 	db	48	;'0'
   583  00201F  32                 	db	50	;'2'
   584  002020  78                 	db	120	;'x'
   585  002021  25                 	db	37
   586  002022  30                 	db	48	;'0'
   587  002023  32                 	db	50	;'2'
   588  002024  78                 	db	120	;'x'
   589  002025  25                 	db	37
   590  002026  30                 	db	48	;'0'
   591  002027  32                 	db	50	;'2'
   592  002028  78                 	db	120	;'x'
   593  002029  25                 	db	37
   594  00202A  30                 	db	48	;'0'
   595  00202B  32                 	db	50	;'2'
   596  00202C  78                 	db	120	;'x'
   597  00202D  25                 	db	37
   598  00202E  30                 	db	48	;'0'
   599  00202F  32                 	db	50	;'2'
   600  002030  78                 	db	120	;'x'
   601  002031  2C                 	db	44
   602  002032  20                 	db	32
   603  002033  43                 	db	67	;'C'
   604  002034  20                 	db	32
   605  002035  30                 	db	48	;'0'
   606  002036  78                 	db	120	;'x'
   607  002037  25                 	db	37
   608  002038  30                 	db	48	;'0'
   609  002039  34                 	db	52	;'4'
   610  00203A  78                 	db	120	;'x'
   611  00203B  20                 	db	32
   612  00203C  23                 	db	35
   613  00203D  00                 	db	0
   614  00203E                     STR_5:
   615                           
   616                           ; BSR set to: 57
   617  00203E  20                 	db	32
   618  00203F  45                 	db	69	;'E'
   619  002040  52                 	db	82	;'R'
   620  002041  52                 	db	82	;'R'
   621  002042  20                 	db	32
   622  002043  52                 	db	82	;'R'
   623  002044  25                 	db	37
   624  002045  64                 	db	100	;'d'
   625  002046  20                 	db	32
   626  002047  54                 	db	84	;'T'
   627  002048  25                 	db	37
   628  002049  64                 	db	100	;'d'
   629  00204A  20                 	db	32
   630  00204B  45                 	db	69	;'E'
   631  00204C  25                 	db	37
   632  00204D  64                 	db	100	;'d'
   633  00204E  20                 	db	32
   634  00204F  23                 	db	35
   635  002050  00                 	db	0
   636  002051                     STR_3:
   637                           
   638                           ; BSR set to: 57
   639  002051  20                 	db	32
   640  002052  53                 	db	83	;'S'
   641  002053  25                 	db	37
   642  002054  64                 	db	100	;'d'
   643  002055  46                 	db	70	;'F'
   644  002056  25                 	db	37
   645  002057  64                 	db	100	;'d'
   646  002058  20                 	db	32
   647  002059  23                 	db	35
   648  00205A  00                 	db	0
   649  00205B                     STR_4:
   650                           
   651                           ; BSR set to: 57
   652  00205B  20                 	db	32
   653  00205C  4F                 	db	79	;'O'
   654  00205D  4B                 	db	75	;'K'
   655  00205E  20                 	db	32
   656  00205F  23                 	db	35
   657  002060  00                 	db	0
   658  002061                     STR_6:
   659                           
   660                           ; BSR set to: 57
   661  002061  25                 	db	37
   662  002062  73                 	db	115	;'s'
   663  002063  00                 	db	0
   664  0000                     
   665                           ; #config settings
   666  002064  00                 	db	0	; dummy byte at the end
   667  0000                     
   668                           	psect	cinit
   669  004BB2                     __pcinit:
   670                           	opt callstack 0
   671  004BB2                     start_initialization:
   672                           	opt callstack 0
   673  004BB2                     __initialization:
   674                           	opt callstack 0
   675                           
   676                           ; Initialize objects allocated to BANK0 (39 bytes)
   677                           ; load TBLPTR registers with __pidataBANK0
   678  004BB2  0EBE               	movlw	low __pidataBANK0
   679  004BB4  6EF6               	movwf	tblptrl,c
   680  004BB6  0E55               	movlw	high __pidataBANK0
   681  004BB8  6EF7               	movwf	tblptrh,c
   682  004BBA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   683  004BBC  6EF8               	movwf	tblptru,c
   684  004BBE  EE00  F0D4         	lfsr	0,__pdataBANK0
   685  004BC2  EE20 F027          	lfsr	2,39
   686  004BC6                     copy_data0:
   687  004BC6  0009               	tblrd		*+
   688  004BC8  006F FFD7 FFEE     	movff	tablat,postinc0
   689  004BCE  50DD               	movf	postdec2,w,c
   690  004BD0  50D9               	movf	fsr2l,w,c
   691  004BD2  E1F9               	bnz	copy_data0
   692                           
   693                           ; Initialize objects allocated to COMRAM (7 bytes)
   694                           ; load TBLPTR registers with __pidataCOMRAM
   695  004BD4  0E16               	movlw	low __pidataCOMRAM
   696  004BD6  6EF6               	movwf	tblptrl,c
   697  004BD8  0E59               	movlw	high __pidataCOMRAM
   698  004BDA  6EF7               	movwf	tblptrh,c
   699  004BDC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   700  004BDE  6EF8               	movwf	tblptru,c
   701  004BE0  EE00  F057         	lfsr	0,__pdataCOMRAM
   702  004BE4  EE20 F007          	lfsr	2,7
   703  004BE8                     copy_data1:
   704  004BE8  0009               	tblrd		*+
   705  004BEA  006F FFD7 FFEE     	movff	tablat,postinc0
   706  004BF0  50DD               	movf	postdec2,w,c
   707  004BF2  50D9               	movf	fsr2l,w,c
   708  004BF4  E1F9               	bnz	copy_data1
   709                           
   710                           ; Clear objects allocated to BANK2 (198 bytes)
   711  004BF6  EE00  F200         	lfsr	0,__pbssBANK2
   712  004BFA  0EC6               	movlw	198
   713  004BFC                     clear_0:
   714  004BFC  6AEE               	clrf	postinc0,c
   715  004BFE  06E8               	decf	wreg,f,c
   716  004C00  E1FD               	bnz	clear_0
   717                           
   718                           ; Clear objects allocated to BANK1 (224 bytes)
   719  004C02  EE00  F100         	lfsr	0,__pbssBANK1
   720  004C06  0EE0               	movlw	224
   721  004C08                     clear_1:
   722  004C08  6AEE               	clrf	postinc0,c
   723  004C0A  06E8               	decf	wreg,f,c
   724  004C0C  E1FD               	bnz	clear_1
   725                           
   726                           ; Clear objects allocated to BANK0 (116 bytes)
   727  004C0E  EE00  F060         	lfsr	0,__pbssBANK0
   728  004C12  0E74               	movlw	116
   729  004C14                     clear_2:
   730  004C14  6AEE               	clrf	postinc0,c
   731  004C16  06E8               	decf	wreg,f,c
   732  004C18  E1FD               	bnz	clear_2
   733                           
   734                           ; Clear objects allocated to COMRAM (54 bytes)
   735  004C1A  EE00  F001         	lfsr	0,__pbssCOMRAM
   736  004C1E  0E36               	movlw	54
   737  004C20                     clear_3:
   738  004C20  6AEE               	clrf	postinc0,c
   739  004C22  06E8               	decf	wreg,f,c
   740  004C24  E1FD               	bnz	clear_3
   741                           
   742                           ;
   743                           ; Setup IVTBASE
   744                           ;
   745  004C26  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   746  004C28  6ED5               	movwf	213,c
   747  004C2A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   748  004C2C  6ED6               	movwf	214,c
   749  004C2E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   750  004C30  6ED7               	movwf	215,c
   751  004C32                     end_of_initialization:
   752                           	opt callstack 0
   753  004C32                     __end_of__initialization:
   754                           	opt callstack 0
   755  004C32  0100               	movlb	0
   756  004C34  EF73  F017         	goto	_main	;jump to C main() function
   757                           
   758                           	psect	bssCOMRAM
   759  000001                     __pbssCOMRAM:
   760                           	opt callstack 0
   761  000001                     wdtdelay@dcount:
   762                           	opt callstack 0
   763  000001                     	ds	4
   764  000005                     _TMR6_InterruptHandler:
   765                           	opt callstack 0
   766  000005                     	ds	3
   767  000008                     _ADCC_ADI_InterruptHandler:
   768                           	opt callstack 0
   769  000008                     	ds	3
   770  00000B                     _UART1_TxInterruptHandler:
   771                           	opt callstack 0
   772  00000B                     	ds	3
   773  00000E                     _UART1_RxInterruptHandler:
   774                           	opt callstack 0
   775  00000E                     	ds	3
   776  000011                     _UART2_TxInterruptHandler:
   777                           	opt callstack 0
   778  000011                     	ds	3
   779  000014                     _UART2_RxInterruptHandler:
   780                           	opt callstack 0
   781  000014                     	ds	3
   782  000017                     _INT2_InterruptHandler:
   783                           	opt callstack 0
   784  000017                     	ds	3
   785  00001A                     _INT1_InterruptHandler:
   786                           	opt callstack 0
   787  00001A                     	ds	3
   788  00001D                     _INT0_InterruptHandler:
   789                           	opt callstack 0
   790  00001D                     	ds	3
   791  000020                     _nout:
   792                           	opt callstack 0
   793  000020                     	ds	2
   794  000022                     _width:
   795                           	opt callstack 0
   796  000022                     	ds	2
   797  000024                     _prec:
   798                           	opt callstack 0
   799  000024                     	ds	2
   800  000026                     _flags:
   801                           	opt callstack 0
   802  000026                     	ds	2
   803  000028                     run_checksum@sum:
   804                           	opt callstack 0
   805  000028                     	ds	2
   806  00002A                     r_protocol@rxData_l:
   807                           	opt callstack 0
   808  00002A                     	ds	1
   809  00002B                     _uart2RxCount:
   810                           	opt callstack 0
   811  00002B                     	ds	1
   812  00002C                     _uart2RxTail:
   813                           	opt callstack 0
   814  00002C                     	ds	1
   815  00002D                     _uart2RxHead:
   816                           	opt callstack 0
   817  00002D                     	ds	1
   818  00002E                     _uart2TxBufferRemaining:
   819                           	opt callstack 0
   820  00002E                     	ds	1
   821  00002F                     _uart2TxTail:
   822                           	opt callstack 0
   823  00002F                     	ds	1
   824  000030                     _uart2TxHead:
   825                           	opt callstack 0
   826  000030                     	ds	1
   827  000031                     _uart1RxCount:
   828                           	opt callstack 0
   829  000031                     	ds	1
   830  000032                     _uart1RxTail:
   831                           	opt callstack 0
   832  000032                     	ds	1
   833  000033                     _uart1RxHead:
   834                           	opt callstack 0
   835  000033                     	ds	1
   836  000034                     _uart1TxBufferRemaining:
   837                           	opt callstack 0
   838  000034                     	ds	1
   839  000035                     _uart1TxTail:
   840                           	opt callstack 0
   841  000035                     	ds	1
   842  000036                     _uart1TxHead:
   843                           	opt callstack 0
   844  000036                     	ds	1
   845                           
   846                           	psect	dataCOMRAM
   847  000057                     __pdataCOMRAM:
   848                           	opt callstack 0
   849  000057                     stoa@F1139:
   850                           	opt callstack 0
   851  000057                     	ds	7
   852                           
   853                           	psect	bssBANK0
   854  000060                     __pbssBANK0:
   855                           	opt callstack 0
   856  000060                     _r_block:
   857                           	opt callstack 0
   858  000060                     	ds	13
   859  00006D                     _spi_link:
   860                           	opt callstack 0
   861  00006D                     	ds	12
   862  000079                     _tickCount:
   863                           	opt callstack 0
   864  000079                     	ds	12
   865  000085                     _V:
   866                           	opt callstack 0
   867  000085                     	ds	79
   868                           
   869                           	psect	dataBANK0
   870  0000D4                     __pdataBANK0:
   871                           	opt callstack 0
   872  0000D4                     _H10:
   873                           	opt callstack 0
   874  0000D4                     	ds	39
   875                           
   876                           	psect	bssBANK1
   877  000100                     __pbssBANK1:
   878                           	opt callstack 0
   879  000100                     _uart2TxBuffer:
   880                           	opt callstack 0
   881  000100                     	ds	64
   882  000140                     _uart1RxBuffer:
   883                           	opt callstack 0
   884  000140                     	ds	64
   885  000180                     _uart1TxBuffer:
   886                           	opt callstack 0
   887  000180                     	ds	64
   888  0001C0                     _dbuf:
   889                           	opt callstack 0
   890  0001C0                     	ds	32
   891                           
   892                           	psect	bssBANK2
   893  000200                     __pbssBANK2:
   894                           	opt callstack 0
   895  000200                     _uart2RxBuffer:
   896                           	opt callstack 0
   897  000200                     	ds	64
   898  000240                     _ring_buf2:
   899                           	opt callstack 0
   900  000240                     	ds	67
   901  000283                     _ring_buf1:
   902                           	opt callstack 0
   903  000283                     	ds	67
   904                           
   905                           	psect	cstackBANK0
   906  000000                     __pcstackBANK0:
   907                           	opt callstack 0
   908  000000                     
   909                           ; 1 bytes @ 0x0
   910                           
   911                           	psect	cstackCOMRAM
   912  00005E                     __pcstackCOMRAM:
   913                           	opt callstack 0
   914  00005E                     ??_TMR6_ISR:
   915  00005E                     
   916                           ; 1 bytes @ 0x0
   917  00005E                     	ds	2
   918                           
   919 ;;
   920 ;;Main: autosize = 4, tempsize = 0, incstack = 0, save=0
   921 ;;
   922 ;; *************** function _main *****************
   923 ;; Defined at:
   924 ;;		line 157 in file "main.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;  k               3    0        PTR unsigned char 
   929 ;;  sum             2  [STACK] unsigned short 
   930 ;;  j               1  [STACK] unsigned char 
   931 ;;  mode            1  [STACK] enum E16877
   932 ;;  i               1    0        unsigned char 
   933 ;; Return value:  Size  Location     Type
   934 ;;                  1  [STACK] void 
   935 ;; Registers used:
   936 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
   937 ;; Tracked objects:
   938 ;;		On entry : 0/0
   939 ;;		On exit  : 3F/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   946 ;;Total ram usage:        0 bytes
   947 ;; Hardware stack levels required when called:   13
   948 ;; This function calls:
   949 ;;		_SYSTEM_Initialize
   950 ;;		_UART1_Write
   951 ;;		_block_checksum
   952 ;;		_eaDogM_WriteString
   953 ;;		_init_display
   954 ;;		_r_protocol
   955 ;;		_secs_send
   956 ;;		_sprintf
   957 ;;		_t_protocol
   958 ;;		_wait_lcd_check
   959 ;;		_wait_lcd_done
   960 ;; This function is called by:
   961 ;;		Startup code after reset
   962 ;; This function uses a reentrant model
   963 ;;
   964                           
   965                           	psect	text0
   966  002EE6                     __ptext0:
   967                           	opt callstack 0
   968  002EE6                     _main:
   969                           	opt callstack 0
   970                           
   971                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
   972  002EE6  52E6               	movf	postinc1,f,c
   973  002EE8  52E6               	movf	postinc1,f,c
   974  002EEA  52E6               	movf	postinc1,f,c
   975  002EEC  52E6               	movf	postinc1,f,c
   976                           
   977                           ;main.c: 159:  uint8_t i, j = 0, *k;
   978                           ;stkvar	_j @ sp[(-4)+2]
   979                           
   980                           ;incstack = 0
   981  002EEE  0EFE               	movlw	-2
   982  002EF0  6AE3               	clrf	plusw1,c
   983                           
   984                           ;main.c: 160:  uint16_t sum;;main.c: 161:  UI_STATES mode = UI_STATE_HOST;
   985                           ;stkvar	_mode @ sp[(-4)+3]
   986  002EF2  0EFF               	movlw	-1
   987  002EF4  6AE3               	clrf	plusw1,c
   988  002EF6  2AE3               	incf	plusw1,f,c
   989                           
   990                           ;main.c: 164:  SYSTEM_Initialize();
   991  002EF8  ECEC  F028         	call	_SYSTEM_Initialize	;wreg free
   992                           
   993                           ; BSR set to: 60
   994                           ;main.c: 167:  (INTCON0bits.GIEH = 1);
   995  002EFC  8ED2               	bsf	16338,7,c	;volatile
   996                           
   997                           ; BSR set to: 60
   998                           ;main.c: 170:  (INTCON0bits.GIEL = 1);
   999  002EFE  8CD2               	bsf	16338,6,c	;volatile
  1000  002F00                     l6504:
  1001                           
  1002                           ;main.c: 172:  V.ui_state = UI_STATE_INIT;
  1003  002F00  0100               	movlb	0	; () banked
  1004  002F02  6B86               	clrf	(_V+1)& (0+255),b	;volatile
  1005  002F04  D175               	goto	l1127
  1006  002F06                     l6506:
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;main.c: 177:    init_display();
  1010  002F06  ECCD  F022         	call	_init_display	;wreg free
  1011                           
  1012                           ; BSR set to: 61
  1013                           ;main.c: 178:    sum = block_checksum((uint8_t*) & H10[j].block.block, sizeof(block10));
  1014  002F0A  0E0A               	movlw	10
  1015  002F0C  6EE6               	movwf	postinc1,c
  1016  002F0E  0E00               	movlw	0
  1017  002F10  6EE6               	movwf	postinc1,c
  1018                           
  1019                           ;stkvar	_j @ sp[(-6)+2]
  1020  002F12  0EFC               	movlw	-4
  1021  002F14  50E3               	movf	plusw1,w,c
  1022  002F16  0D0D               	mullw	13
  1023  002F18  50F3               	movf	prodl,w,c
  1024  002F1A  0FD6               	addlw	low (_H10+2)
  1025  002F1C  6EE6               	movwf	postinc1,c
  1026  002F1E  ECA6  F023         	call	_block_checksum	;wreg free
  1027                           
  1028                           ;stkvar	_sum @ sp[(-4)+0]
  1029  002F22  0EFC               	movlw	-4
  1030  002F24  0060  F0DF  FFE3   	movff	btemp,plusw1
  1031  002F2A  0EFD               	movlw	-3
  1032  002F2C  0060  F0E3  FFE3   	movff	btemp+1,plusw1
  1033                           
  1034                           ;main.c: 179:    H10[j].checksum = sum;
  1035                           ;stkvar	_sum @ sp[(-4)+0]
  1036  002F32  50E1               	movf	fsr1l,w,c
  1037  002F34  0FFC               	addlw	-4
  1038  002F36  6ED9               	movwf	fsr2l,c
  1039  002F38  50E2               	movf	fsr1h,w,c
  1040  002F3A  6EDA               	movwf	fsr2h,c
  1041  002F3C  0EFF               	movlw	255
  1042  002F3E  22DA               	addwfc	fsr2h,f,c
  1043                           
  1044                           ;stkvar	_j @ sp[(-4)+2]
  1045  002F40  0EFE               	movlw	-2
  1046  002F42  50E3               	movf	plusw1,w,c
  1047  002F44  0D0D               	mullw	13
  1048  002F46  50F3               	movf	prodl,w,c
  1049  002F48  0FD4               	addlw	low _H10
  1050  002F4A  6EE9               	movwf	fsr0l,c
  1051  002F4C  6AEA               	clrf	fsr0h,c
  1052  002F4E  006F FF7B FFEE     	movff	postinc2,postinc0
  1053  002F54  006F FF77 FFED     	movff	postdec2,postdec0
  1054                           
  1055                           ;main.c: 180:    sprintf(V.buf, "M %d, H %02x%02x%02x%02x%02x%02x%02x%02x%02x%02x, C 0x%
      +                          04x #",
  1056                           ;stkvar	_sum @ sp[(-4)+0]
  1057  002F5A  0EFC               	movlw	-4
  1058  002F5C  006F FF8F FFE6     	movff	plusw1,postinc1
  1059  002F62  006F FF8F FFE6     	movff	plusw1,postinc1
  1060                           
  1061                           ;stkvar	_j @ sp[(-6)+2]
  1062  002F68  0EFC               	movlw	-4
  1063  002F6A  50E3               	movf	plusw1,w,c
  1064  002F6C  0D0D               	mullw	13
  1065  002F6E  50F3               	movf	prodl,w,c
  1066  002F70  0FD6               	addlw	low (_H10+2)
  1067  002F72  6ED9               	movwf	fsr2l,c
  1068  002F74  6ADA               	clrf	fsr2h,c
  1069  002F76  50DF               	movf	indf2,w,c
  1070  002F78  6EE6               	movwf	postinc1,c
  1071  002F7A  0E00               	movlw	0
  1072  002F7C  6EE6               	movwf	postinc1,c
  1073                           
  1074                           ;stkvar	_j @ sp[(-8)+2]
  1075  002F7E  0EFA               	movlw	-6
  1076  002F80  50E3               	movf	plusw1,w,c
  1077  002F82  0D0D               	mullw	13
  1078  002F84  50F3               	movf	prodl,w,c
  1079  002F86  0FD7               	addlw	low (_H10+3)
  1080  002F88  6ED9               	movwf	fsr2l,c
  1081  002F8A  6ADA               	clrf	fsr2h,c
  1082  002F8C  50DF               	movf	indf2,w,c
  1083  002F8E  6EE6               	movwf	postinc1,c
  1084  002F90  0E00               	movlw	0
  1085  002F92  6EE6               	movwf	postinc1,c
  1086                           
  1087                           ;stkvar	_j @ sp[(-10)+2]
  1088  002F94  0EF8               	movlw	-8
  1089  002F96  50E3               	movf	plusw1,w,c
  1090  002F98  0D0D               	mullw	13
  1091  002F9A  50F3               	movf	prodl,w,c
  1092  002F9C  0FD8               	addlw	low (_H10+4)
  1093  002F9E  6ED9               	movwf	fsr2l,c
  1094  002FA0  6ADA               	clrf	fsr2h,c
  1095  002FA2  50DF               	movf	indf2,w,c
  1096  002FA4  6EE6               	movwf	postinc1,c
  1097  002FA6  0E00               	movlw	0
  1098  002FA8  6EE6               	movwf	postinc1,c
  1099                           
  1100                           ;stkvar	_j @ sp[(-12)+2]
  1101  002FAA  0EF6               	movlw	-10
  1102  002FAC  50E3               	movf	plusw1,w,c
  1103  002FAE  0D0D               	mullw	13
  1104  002FB0  50F3               	movf	prodl,w,c
  1105  002FB2  0FD9               	addlw	low (_H10+5)
  1106  002FB4  6ED9               	movwf	fsr2l,c
  1107  002FB6  6ADA               	clrf	fsr2h,c
  1108  002FB8  50DF               	movf	indf2,w,c
  1109  002FBA  6EE6               	movwf	postinc1,c
  1110  002FBC  0E00               	movlw	0
  1111  002FBE  6EE6               	movwf	postinc1,c
  1112                           
  1113                           ;stkvar	_j @ sp[(-14)+2]
  1114  002FC0  0EF4               	movlw	-12
  1115  002FC2  50E3               	movf	plusw1,w,c
  1116  002FC4  0D0D               	mullw	13
  1117  002FC6  50F3               	movf	prodl,w,c
  1118  002FC8  0FDA               	addlw	low (_H10+6)
  1119  002FCA  6ED9               	movwf	fsr2l,c
  1120  002FCC  6ADA               	clrf	fsr2h,c
  1121  002FCE  50DF               	movf	indf2,w,c
  1122  002FD0  6EE6               	movwf	postinc1,c
  1123  002FD2  0E00               	movlw	0
  1124  002FD4  6EE6               	movwf	postinc1,c
  1125                           
  1126                           ;stkvar	_j @ sp[(-16)+2]
  1127  002FD6  0EF2               	movlw	-14
  1128  002FD8  50E3               	movf	plusw1,w,c
  1129  002FDA  0D0D               	mullw	13
  1130  002FDC  50F3               	movf	prodl,w,c
  1131  002FDE  0FDB               	addlw	low (_H10+7)
  1132  002FE0  6ED9               	movwf	fsr2l,c
  1133  002FE2  6ADA               	clrf	fsr2h,c
  1134  002FE4  50DF               	movf	indf2,w,c
  1135  002FE6  6EE6               	movwf	postinc1,c
  1136  002FE8  0E00               	movlw	0
  1137  002FEA  6EE6               	movwf	postinc1,c
  1138                           
  1139                           ;stkvar	_j @ sp[(-18)+2]
  1140  002FEC  0EF0               	movlw	-16
  1141  002FEE  50E3               	movf	plusw1,w,c
  1142  002FF0  0D0D               	mullw	13
  1143  002FF2  50F3               	movf	prodl,w,c
  1144  002FF4  0FDC               	addlw	low (_H10+8)
  1145  002FF6  6ED9               	movwf	fsr2l,c
  1146  002FF8  6ADA               	clrf	fsr2h,c
  1147  002FFA  50DF               	movf	indf2,w,c
  1148  002FFC  6EE6               	movwf	postinc1,c
  1149  002FFE  0E00               	movlw	0
  1150  003000  6EE6               	movwf	postinc1,c
  1151                           
  1152                           ;stkvar	_j @ sp[(-20)+2]
  1153  003002  0EEE               	movlw	-18
  1154  003004  50E3               	movf	plusw1,w,c
  1155  003006  0D0D               	mullw	13
  1156  003008  50F3               	movf	prodl,w,c
  1157  00300A  0FDD               	addlw	low (_H10+9)
  1158  00300C  6ED9               	movwf	fsr2l,c
  1159  00300E  6ADA               	clrf	fsr2h,c
  1160  003010  50DF               	movf	indf2,w,c
  1161  003012  6EE6               	movwf	postinc1,c
  1162  003014  0E00               	movlw	0
  1163  003016  6EE6               	movwf	postinc1,c
  1164                           
  1165                           ;stkvar	_j @ sp[(-22)+2]
  1166  003018  0EEC               	movlw	-20
  1167  00301A  50E3               	movf	plusw1,w,c
  1168  00301C  0D0D               	mullw	13
  1169  00301E  50F3               	movf	prodl,w,c
  1170  003020  0FDE               	addlw	low (_H10+10)
  1171  003022  6ED9               	movwf	fsr2l,c
  1172  003024  6ADA               	clrf	fsr2h,c
  1173  003026  50DF               	movf	indf2,w,c
  1174  003028  6EE6               	movwf	postinc1,c
  1175  00302A  0E00               	movlw	0
  1176  00302C  6EE6               	movwf	postinc1,c
  1177                           
  1178                           ;stkvar	_j @ sp[(-24)+2]
  1179  00302E  0EEA               	movlw	-22
  1180  003030  50E3               	movf	plusw1,w,c
  1181  003032  0D0D               	mullw	13
  1182  003034  50F3               	movf	prodl,w,c
  1183  003036  0FDF               	addlw	low (_H10+11)
  1184  003038  6ED9               	movwf	fsr2l,c
  1185  00303A  6ADA               	clrf	fsr2h,c
  1186  00303C  50DF               	movf	indf2,w,c
  1187  00303E  6EE6               	movwf	postinc1,c
  1188  003040  0E00               	movlw	0
  1189  003042  6EE6               	movwf	postinc1,c
  1190                           
  1191                           ;stkvar	_mode @ sp[(-26)+3]
  1192  003044  0EE9               	movlw	-23
  1193  003046  50E3               	movf	plusw1,w,c
  1194  003048  6EE6               	movwf	postinc1,c
  1195  00304A  0E00               	movlw	0
  1196  00304C  6EE6               	movwf	postinc1,c
  1197  00304E  0E01               	movlw	STR_1& (0+255)
  1198  003050  6EE6               	movwf	postinc1,c
  1199  003052  0E85               	movlw	_V& (0+255)
  1200  003054  0F04               	addlw	4
  1201  003056  6EE6               	movwf	postinc1,c
  1202  003058  0E1A               	movlw	26
  1203  00305A  6EE6               	movwf	postinc1,c
  1204  00305C  EC42  F023         	call	_sprintf	;wreg free
  1205                           
  1206                           ;main.c: 193:    eaDogM_WriteString(V.buf);
  1207  003060  0E85               	movlw	_V& (0+255)
  1208  003062  0F04               	addlw	4
  1209  003064  6EE6               	movwf	postinc1,c
  1210  003066  EC02  F024         	call	_eaDogM_WriteString	;wreg free
  1211                           
  1212                           ; BSR set to: 0
  1213                           ;main.c: 194:    wait_lcd_done();
  1214  00306A  ECEC  F02B         	call	_wait_lcd_done	;wreg free
  1215                           
  1216                           ;main.c: 195:    V.ui_state = mode;
  1217                           ;stkvar	_mode @ sp[(-4)+3]
  1218  00306E  0EFF               	movlw	-1
  1219  003070  006F FF8C  F086    	movff	plusw1,_V+1	;volatile
  1220                           
  1221                           ;main.c: 196:    V.s_state = SEQ_STATE_INIT;
  1222  003076  0100               	movlb	0	; () banked
  1223  003078  6B85               	clrf	_V& (0+255),b	;volatile
  1224                           
  1225                           ; BSR set to: 0
  1226                           ;main.c: 198:    secs_send((uint8_t*) & H10[j], sizeof(header10), 0);
  1227  00307A  0E00               	movlw	0
  1228  00307C  6EE6               	movwf	postinc1,c
  1229  00307E  0E0D               	movlw	13
  1230  003080  6EE6               	movwf	postinc1,c
  1231                           
  1232                           ;stkvar	_j @ sp[(-6)+2]
  1233  003082  0EFC               	movlw	-4
  1234  003084  50E3               	movf	plusw1,w,c
  1235  003086  0D0D               	mullw	13
  1236  003088  50F3               	movf	prodl,w,c
  1237  00308A  0FD4               	addlw	low _H10
  1238  00308C  6EE6               	movwf	postinc1,c
  1239  00308E  EC5E  F020         	call	_secs_send	;wreg free
  1240                           
  1241                           ;main.c: 199:    sprintf(V.buf, " C 0x%04x #", sum);
  1242                           ;stkvar	_sum @ sp[(-4)+0]
  1243  003092  0EFC               	movlw	-4
  1244  003094  006F FF8F FFE6     	movff	plusw1,postinc1
  1245  00309A  006F FF8F FFE6     	movff	plusw1,postinc1
  1246  0030A0  0E32               	movlw	(STR_1+49)& (0+255)
  1247  0030A2  6EE6               	movwf	postinc1,c
  1248  0030A4  0E85               	movlw	_V& (0+255)
  1249  0030A6  0F04               	addlw	4
  1250  0030A8  6EE6               	movwf	postinc1,c
  1251  0030AA  0E04               	movlw	4
  1252  0030AC  6EE6               	movwf	postinc1,c
  1253  0030AE  EC42  F023         	call	_sprintf	;wreg free
  1254                           
  1255                           ;main.c: 200:    eaDogM_WriteString(V.buf);
  1256  0030B2  0E85               	movlw	_V& (0+255)
  1257  0030B4  0F04               	addlw	4
  1258  0030B6  6EE6               	movwf	postinc1,c
  1259  0030B8  EC02  F024         	call	_eaDogM_WriteString	;wreg free
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;main.c: 201:    wait_lcd_done();
  1263  0030BC  ECEC  F02B         	call	_wait_lcd_done	;wreg free
  1264                           
  1265                           ;main.c: 203:    break;
  1266  0030C0  D097               	goto	l1127
  1267  0030C2                     l1132:
  1268                           
  1269                           ; BSR set to: 0
  1270                           ;main.c: 207:     V.r_l_state = LINK_STATE_IDLE;
  1271  0030C2  6B87               	clrf	(_V+2)& (0+255),b	;volatile
  1272                           
  1273                           ;main.c: 208:     V.t_l_state = LINK_STATE_IDLE;
  1274  0030C4  6B88               	clrf	(_V+3)& (0+255),b	;volatile
  1275                           
  1276                           ; BSR set to: 0
  1277                           ;main.c: 209:     V.s_state = SEQ_STATE_RX;
  1278  0030C6  0E01               	movlw	1
  1279  0030C8  D03B               	goto	L2
  1280  0030CA                     l6532:
  1281                           
  1282                           ; BSR set to: 0
  1283                           ;main.c: 215:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  1284  0030CA  0E85               	movlw	_V& (0+255)
  1285  0030CC  0F02               	addlw	2
  1286  0030CE  6EE6               	movwf	postinc1,c
  1287  0030D0  EC30  F01E         	call	_r_protocol	;wreg free
  1288  0030D4  0E04               	movlw	4
  1289  0030D6  1837               	xorwf	btemp,w,c
  1290  0030D8  A4D8               	btfss	status,2,c
  1291  0030DA  D01C               	goto	l6540
  1292                           
  1293                           ;main.c: 216:      sprintf(V.buf, " S%dF%d #", V.stream, V.function);
  1294  0030DC  0100               	movlb	0	; () banked
  1295  0030DE  51CE               	movf	(_V+73)& (0+255),w,b	;volatile
  1296  0030E0  6EE6               	movwf	postinc1,c
  1297  0030E2  0E00               	movlw	0
  1298  0030E4  6EE6               	movwf	postinc1,c
  1299  0030E6  51CD               	movf	(_V+72)& (0+255),w,b	;volatile
  1300  0030E8  6EE6               	movwf	postinc1,c
  1301  0030EA  0E00               	movlw	0
  1302  0030EC  6EE6               	movwf	postinc1,c
  1303  0030EE  0E51               	movlw	STR_3& (0+255)
  1304  0030F0  6EE6               	movwf	postinc1,c
  1305  0030F2  0E85               	movlw	_V& (0+255)
  1306  0030F4  0F04               	addlw	4
  1307  0030F6  6EE6               	movwf	postinc1,c
  1308  0030F8  0E06               	movlw	6
  1309  0030FA  6EE6               	movwf	postinc1,c
  1310  0030FC  EC42  F023         	call	_sprintf	;wreg free
  1311                           
  1312                           ;main.c: 217:      eaDogM_WriteString(V.buf);
  1313  003100  0E85               	movlw	_V& (0+255)
  1314  003102  0F04               	addlw	4
  1315  003104  6EE6               	movwf	postinc1,c
  1316  003106  EC02  F024         	call	_eaDogM_WriteString	;wreg free
  1317                           
  1318                           ; BSR set to: 0
  1319                           ;main.c: 218:      wait_lcd_done();
  1320  00310A  ECEC  F02B         	call	_wait_lcd_done	;wreg free
  1321                           
  1322                           ;main.c: 219:      V.s_state = SEQ_STATE_TX;
  1323  00310E  0E02               	movlw	2
  1324  003110  0100               	movlb	0	; () banked
  1325  003112  6F85               	movwf	_V& (0+255),b	;volatile
  1326  003114                     l6540:
  1327                           
  1328                           ;main.c: 221:     if (V.r_l_state == LINK_STATE_ERROR)
  1329  003114  0E06               	movlw	6
  1330  003116  0100               	movlb	0	; () banked
  1331  003118  1987               	xorwf	(_V+2)& (0+255),w,b	;volatile
  1332  00311A  D00F               	goto	L23
  1333  00311C                     l6544:
  1334                           
  1335                           ; BSR set to: 0
  1336                           ;main.c: 228:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  1337  00311C  0E85               	movlw	_V& (0+255)
  1338  00311E  0F03               	addlw	3
  1339  003120  6EE6               	movwf	postinc1,c
  1340  003122  EC10  F021         	call	_t_protocol	;wreg free
  1341  003126  0E04               	movlw	4
  1342  003128  1837               	xorwf	btemp,w,c
  1343  00312A  A4D8               	btfss	status,2,c
  1344  00312C  D003               	goto	l6548
  1345                           
  1346                           ;main.c: 229:      V.s_state = SEQ_STATE_TRIGGER;
  1347  00312E  0E03               	movlw	3
  1348  003130  0100               	movlb	0	; () banked
  1349  003132  6F85               	movwf	_V& (0+255),b	;volatile
  1350  003134                     l6548:
  1351                           
  1352                           ;main.c: 231:     if (V.t_l_state == LINK_STATE_ERROR)
  1353  003134  0E06               	movlw	6
  1354  003136  0100               	movlb	0	; () banked
  1355  003138  1988               	xorwf	(_V+3)& (0+255),w,b	;volatile
  1356  00313A                     L23:
  1357  00313A  A4D8               	btfss	status,2,c
  1358  00313C  D059               	goto	l1127
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;main.c: 232:      V.s_state = SEQ_STATE_ERROR;
  1362  00313E  0E05               	movlw	5
  1363  003140                     L2:
  1364  003140  6F85               	movwf	_V& (0+255),b	;volatile
  1365  003142  D056               	goto	l1127
  1366  003144                     l1141:
  1367                           
  1368                           ; BSR set to: 0
  1369  003144  82BE               	bsf	16318,1,c	;volatile
  1370                           
  1371                           ; BSR set to: 0
  1372                           ;main.c: 236:     sprintf(V.buf, " OK #");
  1373  003146  0E5B               	movlw	STR_4& (0+255)
  1374  003148  6EE6               	movwf	postinc1,c
  1375  00314A  0E85               	movlw	_V& (0+255)
  1376  00314C  0F04               	addlw	4
  1377  00314E  6EE6               	movwf	postinc1,c
  1378  003150  0E02               	movlw	2
  1379  003152  6EE6               	movwf	postinc1,c
  1380  003154  EC42  F023         	call	_sprintf	;wreg free
  1381                           
  1382                           ;main.c: 237:     eaDogM_WriteString(V.buf);
  1383  003158  0E85               	movlw	_V& (0+255)
  1384  00315A  0F04               	addlw	4
  1385  00315C  6EE6               	movwf	postinc1,c
  1386  00315E  EC02  F024         	call	_eaDogM_WriteString	;wreg free
  1387                           
  1388                           ; BSR set to: 0
  1389                           ;main.c: 238:     if (wait_lcd_check())
  1390  003162  EC43  F02C         	call	_wait_lcd_check	;wreg free
  1391  003166  5037               	movf	btemp,w,c
  1392  003168  B4D8               	btfsc	status,2,c
  1393  00316A  D003               	goto	l6558
  1394                           
  1395                           ;main.c: 239:      V.s_state = SEQ_STATE_DONE;
  1396  00316C  0E04               	movlw	4
  1397  00316E  0100               	movlb	0	; () banked
  1398  003170  6F85               	movwf	_V& (0+255),b	;volatile
  1399  003172                     l6558:
  1400  003172  92BE               	bcf	16318,1,c	;volatile
  1401  003174  D03D               	goto	l1127
  1402  003176                     l6560:
  1403                           
  1404                           ; BSR set to: 0
  1405                           ;main.c: 247:     UART1_Write(0x15);
  1406  003176  0E15               	movlw	21
  1407  003178  6EE6               	movwf	postinc1,c
  1408  00317A  ECAE  F028         	call	_UART1_Write	;wreg free
  1409                           
  1410                           ; BSR set to: 57
  1411                           ;main.c: 248:     sprintf(V.buf, " ERR R%d T%d E%d #", V.r_l_state, V.t_l_state, V.error
      +                          );
  1412  00317E  0100               	movlb	0	; () banked
  1413  003180  51CF               	movf	(_V+74)& (0+255),w,b	;volatile
  1414  003182  6EE6               	movwf	postinc1,c
  1415  003184  0E00               	movlw	0
  1416  003186  6EE6               	movwf	postinc1,c
  1417  003188  5188               	movf	(_V+3)& (0+255),w,b	;volatile
  1418  00318A  6EE6               	movwf	postinc1,c
  1419  00318C  0E00               	movlw	0
  1420  00318E  6EE6               	movwf	postinc1,c
  1421  003190  5187               	movf	(_V+2)& (0+255),w,b	;volatile
  1422  003192  6EE6               	movwf	postinc1,c
  1423  003194  0E00               	movlw	0
  1424  003196  6EE6               	movwf	postinc1,c
  1425  003198  0E3E               	movlw	STR_5& (0+255)
  1426  00319A  6EE6               	movwf	postinc1,c
  1427  00319C  0E85               	movlw	_V& (0+255)
  1428  00319E  0F04               	addlw	4
  1429  0031A0  6EE6               	movwf	postinc1,c
  1430  0031A2  0E08               	movlw	8
  1431  0031A4  6EE6               	movwf	postinc1,c
  1432  0031A6  EC42  F023         	call	_sprintf	;wreg free
  1433                           
  1434                           ;main.c: 249:     eaDogM_WriteString(V.buf);
  1435  0031AA  0E85               	movlw	_V& (0+255)
  1436  0031AC  0F04               	addlw	4
  1437  0031AE  6EE6               	movwf	postinc1,c
  1438  0031B0  EC02  F024         	call	_eaDogM_WriteString	;wreg free
  1439                           
  1440                           ; BSR set to: 0
  1441                           ;main.c: 250:     wait_lcd_done();
  1442  0031B4  ECEC  F02B         	call	_wait_lcd_done	;wreg free
  1443                           
  1444                           ;main.c: 251:     V.s_state = SEQ_STATE_INIT;
  1445  0031B8  0100               	movlb	0	; () banked
  1446  0031BA  6B85               	clrf	_V& (0+255),b	;volatile
  1447                           
  1448                           ;main.c: 252:     break;
  1449  0031BC  D019               	goto	l1127
  1450  0031BE                     l6572:
  1451                           
  1452                           ; BSR set to: 0
  1453  0031BE  5185               	movf	_V& (0+255),w,b	;volatile
  1454  0031C0  6E41               	movwf	btemp+10,c
  1455  0031C2  6A42               	clrf	btemp+11,c
  1456                           
  1457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1458                           ; Switch size 1, requested type "simple"
  1459                           ; Number of cases is 1, Range of values is 0 to 0
  1460                           ; switch strategies available:
  1461                           ; Name         Instructions Cycles
  1462                           ; simple_byte            4     3 (average)
  1463                           ;	Chosen strategy is simple_byte
  1464  0031C4  5042               	movf	btemp+11,w,c
  1465  0031C6  0A00               	xorlw	0	; case 0
  1466  0031C8  A4D8               	btfss	status,2,c
  1467  0031CA  D7D5               	goto	l6560
  1468                           
  1469                           ; BSR set to: 0
  1470                           ; Switch size 1, requested type "simple"
  1471                           ; Number of cases is 6, Range of values is 0 to 5
  1472                           ; switch strategies available:
  1473                           ; Name         Instructions Cycles
  1474                           ; simple_byte           19    10 (average)
  1475                           ;	Chosen strategy is simple_byte
  1476  0031CC  5041               	movf	btemp+10,w,c
  1477  0031CE  0A00               	xorlw	0	; case 0
  1478  0031D0  B4D8               	btfsc	status,2,c
  1479  0031D2  D777               	goto	l1132
  1480  0031D4  0A01               	xorlw	1	; case 1
  1481  0031D6  B4D8               	btfsc	status,2,c
  1482  0031D8  D778               	goto	l6532
  1483  0031DA  0A03               	xorlw	3	; case 2
  1484  0031DC  B4D8               	btfsc	status,2,c
  1485  0031DE  D79E               	goto	l6544
  1486  0031E0  0A01               	xorlw	1	; case 3
  1487  0031E2  B4D8               	btfsc	status,2,c
  1488  0031E4  D7AF               	goto	l1141
  1489  0031E6  0A07               	xorlw	7	; case 4
  1490  0031E8  B4D8               	btfsc	status,2,c
  1491  0031EA  D7E7               	goto	L3
  1492  0031EC  0A01               	xorlw	1	; case 5
  1493  0031EE  D7C3               	goto	l6560
  1494  0031F0                     l1127:
  1495                           
  1496                           ; BSR set to: 0
  1497  0031F0  0100               	movlb	0	; () banked
  1498  0031F2  5186               	movf	(_V+1)& (0+255),w,b	;volatile
  1499  0031F4  6E41               	movwf	btemp+10,c
  1500  0031F6  6A42               	clrf	btemp+11,c
  1501                           
  1502                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1503                           ; Switch size 1, requested type "simple"
  1504                           ; Number of cases is 1, Range of values is 0 to 0
  1505                           ; switch strategies available:
  1506                           ; Name         Instructions Cycles
  1507                           ; simple_byte            4     3 (average)
  1508                           ;	Chosen strategy is simple_byte
  1509  0031F8  5042               	movf	btemp+11,w,c
  1510  0031FA  0A00               	xorlw	0	; case 0
  1511  0031FC  A4D8               	btfss	status,2,c
  1512  0031FE  D680               	goto	l6504
  1513                           
  1514                           ; BSR set to: 0
  1515                           ; Switch size 1, requested type "simple"
  1516                           ; Number of cases is 3, Range of values is 0 to 5
  1517                           ; switch strategies available:
  1518                           ; Name         Instructions Cycles
  1519                           ; simple_byte           10     6 (average)
  1520                           ;	Chosen strategy is simple_byte
  1521  003200  5041               	movf	btemp+10,w,c
  1522  003202  0A00               	xorlw	0	; case 0
  1523  003204  B4D8               	btfsc	status,2,c
  1524  003206  D67F               	goto	l6506
  1525  003208  0A01               	xorlw	1	; case 1
  1526  00320A  B4D8               	btfsc	status,2,c
  1527  00320C  D7D8               	goto	l6572
  1528  00320E  0A04               	xorlw	4	; case 5
  1529  003210  D677               	goto	l6504
  1530  003212                     __end_of_main:
  1531                           	opt callstack 0
  1532                           
  1533 ;; *************** function _wait_lcd_done *****************
  1534 ;; Defined at:
  1535 ;;		line 124 in file "eadog.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;		None
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;		None
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1  [STACK] void 
  1542 ;; Registers used:
  1543 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  1544 ;; Tracked objects:
  1545 ;;		On entry : 3F/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1553 ;;Total ram usage:        0 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    4
  1556 ;; This function calls:
  1557 ;;		_wdtdelay
  1558 ;; This function is called by:
  1559 ;;		_main
  1560 ;; This function uses a reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text1
  1564  0057D8                     __ptext1:
  1565                           	opt callstack 0
  1566  0057D8                     _wait_lcd_done:
  1567                           	opt callstack 26
  1568                           
  1569                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  1570                           
  1571                           ; BSR set to: 0
  1572                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1573                           ;incstack = 0
  1574  0057D8  0100               	movlb	0	; () banked
  1575  0057DA  B76D               	btfsc	_spi_link& (0+255),3,b	;volatile
  1576  0057DC  D7FD               	goto	_wait_lcd_done
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;eadog.c: 127:  wdtdelay(50);
  1580  0057DE  0E32               	movlw	50
  1581  0057E0  6EE6               	movwf	postinc1,c
  1582  0057E2  0E00               	movlw	0
  1583  0057E4  6EE6               	movwf	postinc1,c
  1584  0057E6  0E00               	movlw	0
  1585  0057E8  6EE6               	movwf	postinc1,c
  1586  0057EA  0E00               	movlw	0
  1587  0057EC  6EE6               	movwf	postinc1,c
  1588  0057EE  ECC9  F027         	call	_wdtdelay	;wreg free
  1589                           
  1590                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  1591  0057F2  0012               	return		;funcret
  1592  0057F4                     __end_of_wait_lcd_done:
  1593                           	opt callstack 0
  1594                           
  1595 ;; *************** function _wait_lcd_check *****************
  1596 ;; Defined at:
  1597 ;;		line 119 in file "eadog.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1  [STACK] _Bool 
  1604 ;; Registers used:
  1605 ;;		btemp
  1606 ;; Tracked objects:
  1607 ;;		On entry : 3F/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1615 ;;Total ram usage:        0 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:    3
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_main
  1622 ;; This function uses a reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text2
  1626  005886                     __ptext2:
  1627                           	opt callstack 0
  1628  005886                     _wait_lcd_check:
  1629                           	opt callstack 27
  1630                           
  1631                           ;eadog.c: 121:  return spi_link.LCD_DATA;
  1632                           
  1633                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1634                           ;incstack = 0
  1635  005886  0100               	movlb	0	; () banked
  1636  005888  A76D               	btfss	_spi_link& (0+255),3,b	;volatile
  1637  00588A  D003               	goto	u3650
  1638  00588C  6A37               	clrf	btemp,c
  1639  00588E  2A37               	incf	btemp,f,c
  1640  005890  0012               	return	
  1641  005892                     u3650:
  1642  005892  6A37               	clrf	btemp,c
  1643                           
  1644                           ; _wait_lcd_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  1645  005894  0012               	return		;funcret
  1646  005896                     __end_of_wait_lcd_check:
  1647                           	opt callstack 0
  1648                           
  1649 ;; *************** function _t_protocol *****************
  1650 ;; Defined at:
  1651 ;;		line 116 in file "gemsecs.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  t_link          1  [STACK] PTR enum E16164
  1654 ;;		 -> V(79), 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  rxData          1  [STACK] unsigned char 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1  [STACK] enum E16885
  1659 ;; Registers used:
  1660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1670 ;;Total ram usage:        0 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; Hardware stack levels required when called:    4
  1673 ;; This function calls:
  1674 ;;		_StartTimer
  1675 ;;		_TimerDone
  1676 ;;		_UART1_Read
  1677 ;;		_UART1_Write
  1678 ;;		_UART1_is_rx_ready
  1679 ;; This function is called by:
  1680 ;;		_main
  1681 ;; This function uses a reentrant model
  1682 ;;
  1683                           
  1684                           	psect	text3
  1685  004220                     __ptext3:
  1686                           	opt callstack 0
  1687  004220                     _t_protocol:
  1688                           	opt callstack 0
  1689                           
  1690                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1691  004220  52E6               	movf	postinc1,f,c
  1692                           
  1693                           ;gemsecs.c: 116: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 117: {;gemsecs.
      +                          c: 118:  uint8_t rxData;;gemsecs.c: 121:  switch (*t_link) {
  1694                           
  1695                           ;incstack = 0
  1696  004222  D081               	goto	l5658
  1697  004224                     l1404:
  1698                           
  1699                           ;gemsecs.c: 123:   V.error = LINK_ERROR_NONE;
  1700  004224  0100               	movlb	0	; () banked
  1701  004226  6BCF               	clrf	(_V+74)& (0+255),b	;volatile
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;gemsecs.c: 125:   UART1_Write(0x05);
  1705  004228  0E05               	movlw	5
  1706  00422A  6EE6               	movwf	postinc1,c
  1707  00422C  ECAE  F028         	call	_UART1_Write	;wreg free
  1708                           
  1709                           ; BSR set to: 57
  1710                           ;gemsecs.c: 126:   StartTimer(TMR_T2, 2000);
  1711  004230  0ED0               	movlw	208
  1712  004232  6EE6               	movwf	postinc1,c
  1713  004234  0E07               	movlw	7
  1714  004236  6EE6               	movwf	postinc1,c
  1715  004238  0E02               	movlw	2
  1716  00423A  6EE6               	movwf	postinc1,c
  1717  00423C  EC0B  F029         	call	_StartTimer	;wreg free
  1718                           
  1719                           ;gemsecs.c: 127:   *t_link = LINK_STATE_ENQ;
  1720                           ;stkvar	_t_link @ sp[(-1)+-1]
  1721  004240  0EFE               	movlw	-2
  1722  004242  50E3               	movf	plusw1,w,c
  1723  004244  6ED9               	movwf	fsr2l,c
  1724  004246  6ADA               	clrf	fsr2h,c
  1725  004248  0E01               	movlw	1
  1726  00424A  D06B               	goto	L9
  1727  00424C                     l5616:
  1728                           
  1729                           ;gemsecs.c: 130:   if (TimerDone(TMR_T2)) {
  1730  00424C  0E02               	movlw	2
  1731  00424E  6EE6               	movwf	postinc1,c
  1732  004250  EC57  F02B         	call	_TimerDone	;wreg free
  1733  004254  5037               	movf	btemp,w,c
  1734  004256  B4D8               	btfsc	status,2,c
  1735  004258  D009               	goto	l5622
  1736                           
  1737                           ;gemsecs.c: 131:    V.error = LINK_ERROR_T2;
  1738  00425A  0E02               	movlw	2
  1739  00425C  0100               	movlb	0	; () banked
  1740  00425E  6FCF               	movwf	(_V+74)& (0+255),b	;volatile
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;gemsecs.c: 132:    *t_link = LINK_STATE_NAK;
  1744                           ;stkvar	_t_link @ sp[(-1)+-1]
  1745  004260  0EFE               	movlw	-2
  1746  004262  50E3               	movf	plusw1,w,c
  1747  004264  6ED9               	movwf	fsr2l,c
  1748  004266  6ADA               	clrf	fsr2h,c
  1749  004268  0E05               	movlw	5
  1750  00426A  D05B               	goto	L9
  1751  00426C                     l5622:
  1752                           
  1753                           ;gemsecs.c: 134:    if (UART1_is_rx_ready()) {
  1754  00426C  EC87  F02C         	call	_UART1_is_rx_ready	;wreg free
  1755  004270  5037               	movf	btemp,w,c
  1756  004272  B4D8               	btfsc	status,2,c
  1757  004274  D079               	goto	l5660
  1758                           
  1759                           ;gemsecs.c: 135:     rxData = UART1_Read();
  1760  004276  ECCD  F028         	call	_UART1_Read	;wreg free
  1761                           
  1762                           ;stkvar	_rxData @ sp[(-1)+0]
  1763  00427A  0EFF               	movlw	-1
  1764  00427C  0060  F0DF  FFE3   	movff	btemp,plusw1
  1765                           
  1766                           ; BSR set to: 57
  1767                           ;gemsecs.c: 136:     if (rxData == 0x04) {
  1768                           ;stkvar	_rxData @ sp[(-1)+0]
  1769  004282  0EFF               	movlw	-1
  1770  004284  006F FF8C  F037    	movff	plusw1,btemp
  1771  00428A  0E04               	movlw	4
  1772  00428C  1837               	xorwf	btemp,w,c
  1773  00428E  A4D8               	btfss	status,2,c
  1774  004290  D06B               	goto	l5660
  1775                           
  1776                           ; BSR set to: 57
  1777                           ;gemsecs.c: 137:      StartTimer(TMR_T3, 5000);
  1778  004292  0E88               	movlw	136
  1779  004294  6EE6               	movwf	postinc1,c
  1780  004296  0E13               	movlw	19
  1781  004298  6EE6               	movwf	postinc1,c
  1782  00429A  0E03               	movlw	3
  1783  00429C  6EE6               	movwf	postinc1,c
  1784  00429E  EC0B  F029         	call	_StartTimer	;wreg free
  1785                           
  1786                           ;gemsecs.c: 138:      *t_link = LINK_STATE_EOT;
  1787                           ;stkvar	_t_link @ sp[(-1)+-1]
  1788  0042A2  0EFE               	movlw	-2
  1789  0042A4  50E3               	movf	plusw1,w,c
  1790  0042A6  6ED9               	movwf	fsr2l,c
  1791  0042A8  6ADA               	clrf	fsr2h,c
  1792  0042AA  0E02               	movlw	2
  1793  0042AC  D03A               	goto	L9
  1794  0042AE                     l5632:
  1795                           
  1796                           ;gemsecs.c: 145:   *t_link = LINK_STATE_ACK;
  1797                           ;stkvar	_t_link @ sp[(-1)+-1]
  1798  0042AE  0EFE               	movlw	-2
  1799  0042B0  50E3               	movf	plusw1,w,c
  1800  0042B2  6ED9               	movwf	fsr2l,c
  1801  0042B4  6ADA               	clrf	fsr2h,c
  1802  0042B6  0E03               	movlw	3
  1803  0042B8  D034               	goto	L9
  1804  0042BA                     l5634:
  1805                           
  1806                           ;gemsecs.c: 148:   if (TimerDone(TMR_T3)) {
  1807  0042BA  0E03               	movlw	3
  1808  0042BC  6EE6               	movwf	postinc1,c
  1809  0042BE  EC57  F02B         	call	_TimerDone	;wreg free
  1810  0042C2  5037               	movf	btemp,w,c
  1811  0042C4  B4D8               	btfsc	status,2,c
  1812  0042C6  D002               	goto	l5640
  1813                           
  1814                           ;gemsecs.c: 149:    V.error = LINK_ERROR_T3;
  1815  0042C8  0E03               	movlw	3
  1816  0042CA  D7C8               	goto	L8
  1817  0042CC                     l5640:
  1818                           
  1819                           ;gemsecs.c: 152:    if (UART1_is_rx_ready()) {
  1820  0042CC  EC87  F02C         	call	_UART1_is_rx_ready	;wreg free
  1821  0042D0  5037               	movf	btemp,w,c
  1822  0042D2  B4D8               	btfsc	status,2,c
  1823  0042D4  D049               	goto	l5660
  1824                           
  1825                           ;gemsecs.c: 153:     rxData = UART1_Read();
  1826  0042D6  ECCD  F028         	call	_UART1_Read	;wreg free
  1827                           
  1828                           ;stkvar	_rxData @ sp[(-1)+0]
  1829  0042DA  0EFF               	movlw	-1
  1830  0042DC  0060  F0DF  FFE3   	movff	btemp,plusw1
  1831                           
  1832                           ; BSR set to: 57
  1833                           ;gemsecs.c: 154:     if (rxData == 0x06) {
  1834                           ;stkvar	_rxData @ sp[(-1)+0]
  1835  0042E2  0EFF               	movlw	-1
  1836  0042E4  006F FF8C  F037    	movff	plusw1,btemp
  1837  0042EA  0E06               	movlw	6
  1838  0042EC  1837               	xorwf	btemp,w,c
  1839  0042EE  A4D8               	btfss	status,2,c
  1840  0042F0  D03B               	goto	l5660
  1841                           
  1842                           ; BSR set to: 57
  1843                           ;gemsecs.c: 155:      *t_link = LINK_STATE_DONE;
  1844                           ;stkvar	_t_link @ sp[(-1)+-1]
  1845  0042F2  0EFE               	movlw	-2
  1846  0042F4  50E3               	movf	plusw1,w,c
  1847  0042F6  6ED9               	movwf	fsr2l,c
  1848  0042F8  6ADA               	clrf	fsr2h,c
  1849  0042FA  0E04               	movlw	4
  1850  0042FC  D012               	goto	L9
  1851  0042FE                     l5648:
  1852                           
  1853                           ;gemsecs.c: 161:   *t_link = LINK_STATE_ERROR;
  1854                           ;stkvar	_t_link @ sp[(-1)+-1]
  1855  0042FE  0EFE               	movlw	-2
  1856  004300  50E3               	movf	plusw1,w,c
  1857  004302  6ED9               	movwf	fsr2l,c
  1858  004304  6ADA               	clrf	fsr2h,c
  1859  004306  0E06               	movlw	6
  1860  004308  6EDF               	movwf	indf2,c
  1861                           
  1862                           ;gemsecs.c: 162:   while ((uart1RxCount)) {
  1863  00430A  D002               	goto	l5652
  1864  00430C                     l5650:
  1865                           
  1866                           ;gemsecs.c: 163:    UART1_Read();
  1867  00430C  ECCD  F028         	call	_UART1_Read	;wreg free
  1868  004310                     l5652:
  1869                           
  1870                           ;gemsecs.c: 162:   while ((uart1RxCount)) {
  1871  004310  5031               	movf	_uart1RxCount,w,c	;volatile
  1872  004312  B4D8               	btfsc	status,2,c
  1873  004314  D029               	goto	l5660
  1874  004316  D7FA               	goto	l5650
  1875  004318                     l5654:
  1876                           
  1877                           ;gemsecs.c: 171:   *t_link = LINK_STATE_IDLE;
  1878                           ;stkvar	_t_link @ sp[(-1)+-1]
  1879  004318  0EFE               	movlw	-2
  1880  00431A  50E3               	movf	plusw1,w,c
  1881  00431C  6ED9               	movwf	fsr2l,c
  1882  00431E  6ADA               	clrf	fsr2h,c
  1883  004320  0E00               	movlw	0
  1884  004322                     L9:
  1885  004322  6EDF               	movwf	indf2,c
  1886                           
  1887                           ;gemsecs.c: 172:   break;
  1888  004324  D021               	goto	l5660
  1889  004326                     l5658:
  1890                           
  1891                           ;stkvar	_t_link @ sp[(-1)+-1]
  1892  004326  0EFE               	movlw	-2
  1893  004328  50E3               	movf	plusw1,w,c
  1894  00432A  6ED9               	movwf	fsr2l,c
  1895  00432C  6ADA               	clrf	fsr2h,c
  1896  00432E  50DF               	movf	indf2,w,c
  1897  004330  6E41               	movwf	btemp+10,c
  1898  004332  6A42               	clrf	btemp+11,c
  1899                           
  1900                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1901                           ; Switch size 1, requested type "simple"
  1902                           ; Number of cases is 1, Range of values is 0 to 0
  1903                           ; switch strategies available:
  1904                           ; Name         Instructions Cycles
  1905                           ; simple_byte            4     3 (average)
  1906                           ;	Chosen strategy is simple_byte
  1907  004334  5042               	movf	btemp+11,w,c
  1908  004336  0A00               	xorlw	0	; case 0
  1909  004338  A4D8               	btfss	status,2,c
  1910  00433A  D7EE               	goto	l5654
  1911                           
  1912                           ; Switch size 1, requested type "simple"
  1913                           ; Number of cases is 7, Range of values is 0 to 6
  1914                           ; switch strategies available:
  1915                           ; Name         Instructions Cycles
  1916                           ; simple_byte           22    12 (average)
  1917                           ;	Chosen strategy is simple_byte
  1918  00433C  5041               	movf	btemp+10,w,c
  1919  00433E  0A00               	xorlw	0	; case 0
  1920  004340  B4D8               	btfsc	status,2,c
  1921  004342  D770               	goto	l1404
  1922  004344  0A01               	xorlw	1	; case 1
  1923  004346  B4D8               	btfsc	status,2,c
  1924  004348  D781               	goto	l5616
  1925  00434A  0A03               	xorlw	3	; case 2
  1926  00434C  B4D8               	btfsc	status,2,c
  1927  00434E  D7AF               	goto	l5632
  1928  004350  0A01               	xorlw	1	; case 3
  1929  004352  B4D8               	btfsc	status,2,c
  1930  004354  D7B2               	goto	l5634
  1931  004356  0A07               	xorlw	7	; case 4
  1932  004358  B4D8               	btfsc	status,2,c
  1933  00435A  D006               	goto	l5660
  1934  00435C  0A01               	xorlw	1	; case 5
  1935  00435E  B4D8               	btfsc	status,2,c
  1936  004360  D7CE               	goto	l5648
  1937  004362  0A03               	xorlw	3	; case 6
  1938  004364  A4D8               	btfss	status,2,c
  1939  004366  D7D8               	goto	l5654
  1940  004368                     l5660:
  1941                           
  1942                           ;gemsecs.c: 175:  return *t_link;
  1943                           ;stkvar	_t_link @ sp[(-1)+-1]
  1944  004368  0EFE               	movlw	-2
  1945  00436A  50E3               	movf	plusw1,w,c
  1946  00436C  6ED9               	movwf	fsr2l,c
  1947  00436E  6ADA               	clrf	fsr2h,c
  1948  004370  50DF               	movf	indf2,w,c
  1949  004372  6E37               	movwf	btemp,c
  1950                           
  1951                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  1952  004374  52E5               	movf	postdec1,f,c
  1953  004376  52E5               	movf	postdec1,f,c
  1954  004378  0012               	return		;funcret
  1955  00437A                     __end_of_t_protocol:
  1956                           	opt callstack 0
  1957                           
  1958 ;; *************** function _sprintf *****************
  1959 ;; Defined at:
  1960 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  s               1  [STACK] PTR unsigned char 
  1963 ;;		 -> V(79), 
  1964 ;;  fmt             1  [STACK] PTR const unsigned char 
  1965 ;;		 -> STR_5(19), STR_4(6), STR_3(10), STR_2(12), 
  1966 ;;		 -> STR_1(61), 
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  f               5  [STACK] struct _IO_FILE
  1969 ;;  ap              2  [STACK] PTR void [1]
  1970 ;;		 -> ?_printf(2), ?_sprintf(2), 
  1971 ;;  ret             2    0        int 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  2  [STACK] int 
  1974 ;; Registers used:
  1975 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/3D
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1985 ;;Total ram usage:        0 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:   11
  1988 ;; This function calls:
  1989 ;;		_vfprintf
  1990 ;; This function is called by:
  1991 ;;		_main
  1992 ;; This function uses a reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text4
  1996  004684                     __ptext4:
  1997                           	opt callstack 0
  1998  004684                     _sprintf:
  1999                           	opt callstack 0
  2000                           
  2001                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 26, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  2002  004684  0E07               	movlw	7
  2003  004686  26E1               	addwf	fsr1l,f,c
  2004  004688  0E00               	movlw	0
  2005  00468A  22E2               	addwfc	fsr1h,f,c
  2006                           
  2007                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  2008                           
  2009                           ;incstack = 0
  2010  00468C  0EF6               	movlw	246
  2011  00468E  24E1               	addwf	fsr1l,w,c
  2012  004690  6E41               	movwf	btemp+10,c
  2013  004692  0EFF               	movlw	255
  2014  004694  20E2               	addwfc	fsr1h,w,c
  2015  004696  6E42               	movwf	btemp+11,c
  2016                           
  2017                           ;stkvar	_ap @ sp[(-7)+5]
  2018  004698  0EFF               	movlw	-1
  2019  00469A  0060  F10B  FFE3   	movff	btemp+11,plusw1
  2020  0046A0  0EFE               	movlw	-2
  2021  0046A2  0060  F107  FFE3   	movff	btemp+10,plusw1
  2022                           
  2023                           ;stkvar	_s @ sp[(-7)+-2]
  2024  0046A8  0EF7               	movlw	-9
  2025  0046AA  006F FF8C  F042    	movff	plusw1,btemp+11
  2026                           
  2027                           ;stkvar	_f @ sp[(-7)+0]
  2028  0046B0  0EF9               	movlw	-7
  2029  0046B2  0060  F10B  FFE3   	movff	btemp+11,plusw1
  2030                           
  2031                           ;stkvar	_f @ sp[(-7)+0]
  2032  0046B8  0EFA               	movlw	250
  2033  0046BA  24E1               	addwf	fsr1l,w,c
  2034  0046BC  6ED9               	movwf	fsr2l,c
  2035  0046BE  0EFF               	movlw	255
  2036  0046C0  20E2               	addwfc	fsr1h,w,c
  2037  0046C2  6EDA               	movwf	fsr2h,c
  2038  0046C4  0E00               	movlw	0
  2039  0046C6  6EDE               	movwf	postinc2,c
  2040  0046C8  0E00               	movlw	0
  2041  0046CA  6EDD               	movwf	postdec2,c
  2042                           
  2043                           ;stkvar	_f @ sp[(-7)+0]
  2044  0046CC  0EFC               	movlw	252
  2045  0046CE  24E1               	addwf	fsr1l,w,c
  2046  0046D0  6ED9               	movwf	fsr2l,c
  2047  0046D2  0EFF               	movlw	255
  2048  0046D4  20E2               	addwfc	fsr1h,w,c
  2049  0046D6  6EDA               	movwf	fsr2h,c
  2050  0046D8  0E00               	movlw	0
  2051  0046DA  6EDE               	movwf	postinc2,c
  2052  0046DC  0E00               	movlw	0
  2053  0046DE  6EDD               	movwf	postdec2,c
  2054                           
  2055                           ;stkvar	_ap @ sp[(-7)+5]
  2056  0046E0  0EFE               	movlw	254
  2057  0046E2  24E1               	addwf	fsr1l,w,c
  2058  0046E4  6E37               	movwf	btemp,c
  2059  0046E6  0EFF               	movlw	255
  2060  0046E8  20E2               	addwfc	fsr1h,w,c
  2061  0046EA  6E38               	movwf	btemp+1,c
  2062  0046EC  0060  F0DF  FFE6   	movff	btemp,postinc1
  2063  0046F2  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  2064                           
  2065                           ;stkvar	_fmt @ sp[(-9)+-3]
  2066  0046F8  0EF4               	movlw	-12
  2067  0046FA  50E3               	movf	plusw1,w,c
  2068  0046FC  6EE6               	movwf	postinc1,c
  2069                           
  2070                           ;stkvar	_f @ sp[(-10)+0]
  2071  0046FE  0EF6               	movlw	246
  2072  004700  24E1               	addwf	fsr1l,w,c
  2073  004702  6E37               	movwf	btemp,c
  2074  004704  0EFF               	movlw	255
  2075  004706  20E2               	addwfc	fsr1h,w,c
  2076  004708  6E38               	movwf	btemp+1,c
  2077  00470A  0060  F0DF  FFE6   	movff	btemp,postinc1
  2078  004710  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  2079  004716  EC46  F025         	call	_vfprintf	;wreg free
  2080                           
  2081                           ;stkvar	_f @ sp[(-7)+0]
  2082  00471A  0EFA               	movlw	250
  2083  00471C  24E1               	addwf	fsr1l,w,c
  2084  00471E  6ED9               	movwf	fsr2l,c
  2085  004720  0EFF               	movlw	255
  2086  004722  20E2               	addwfc	fsr1h,w,c
  2087  004724  6EDA               	movwf	fsr2h,c
  2088  004726  50DF               	movf	indf2,w,c
  2089  004728  6E42               	movwf	btemp+11,c
  2090                           
  2091                           ;stkvar	_s @ sp[(-7)+-2]
  2092  00472A  0EF7               	movlw	-9
  2093  00472C  50E3               	movf	plusw1,w,c
  2094  00472E  2442               	addwf	btemp+11,w,c
  2095  004730  6ED9               	movwf	fsr2l,c
  2096  004732  6ADA               	clrf	fsr2h,c
  2097  004734  0E00               	movlw	0
  2098  004736  6EDF               	movwf	indf2,c
  2099                           
  2100                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 26, args
      +                          ize = 2, vargsize = 0
  2101  004738  0EF9               	movlw	249
  2102  00473A  26E1               	addwf	fsr1l,f,c
  2103  00473C  0EFF               	movlw	255
  2104  00473E  22E2               	addwfc	fsr1h,f,c
  2105  004740  52E5               	movf	postdec1,f,c
  2106  004742  50E7               	movf	indf1,w,c
  2107  004744  5EE1               	subwf	fsr1l,f,c
  2108  004746  0E00               	movlw	0
  2109  004748  5AE2               	subwfb	fsr1h,f,c
  2110  00474A  0012               	return		;funcret
  2111  00474C                     __end_of_sprintf:
  2112                           	opt callstack 0
  2113                           
  2114 ;; *************** function _secs_send *****************
  2115 ;; Defined at:
  2116 ;;		line 179 in file "gemsecs.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  byte_block      1  [STACK] PTR unsigned char 
  2119 ;;		 -> H10(39), 
  2120 ;;  length          1  [STACK] unsigned char 
  2121 ;;  fake            1  [STACK] _Bool 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  checksum        2  [STACK] unsigned short 
  2124 ;;  k               1  [STACK] PTR unsigned char 
  2125 ;;		 -> H10(39), 
  2126 ;;  i               1  [STACK] unsigned char 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  1  [STACK] _Bool 
  2129 ;; Registers used:
  2130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  2131 ;; Tracked objects:
  2132 ;;		On entry : 3F/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2140 ;;Total ram usage:        0 bytes
  2141 ;; Hardware stack levels used:    1
  2142 ;; Hardware stack levels required when called:    4
  2143 ;; This function calls:
  2144 ;;		_UART1_Write
  2145 ;;		_UART1_is_tx_ready
  2146 ;;		_UART1_put_buffer
  2147 ;;		_block_checksum
  2148 ;; This function is called by:
  2149 ;;		_main
  2150 ;; This function uses a reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text5
  2154  0040BC                     __ptext5:
  2155                           	opt callstack 0
  2156  0040BC                     _secs_send:
  2157                           	opt callstack 0
  2158                           
  2159                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2160  0040BC  52E6               	movf	postinc1,f,c
  2161  0040BE  52E6               	movf	postinc1,f,c
  2162  0040C0  52E6               	movf	postinc1,f,c
  2163  0040C2  52E6               	movf	postinc1,f,c
  2164                           
  2165                           ;gemsecs.c: 179: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake);gemsec
      +                          s.c: 180: {;gemsecs.c: 181:  uint8_t i, *k;;gemsecs.c: 182:  uint16_t checksum;;gemsecs.
      +                          c: 184:  k = (void*) byte_block;
  2166                           ;stkvar	_byte_block @ sp[(-4)+-1]
  2167                           
  2168                           ;incstack = 0
  2169  0040C4  0EFB               	movlw	-5
  2170  0040C6  006F FF8C  F042    	movff	plusw1,btemp+11
  2171                           
  2172                           ;stkvar	_k @ sp[(-4)+2]
  2173  0040CC  0EFE               	movlw	-2
  2174  0040CE  0060  F10B  FFE3   	movff	btemp+11,plusw1
  2175                           
  2176                           ;gemsecs.c: 186:  V.error = LINK_ERROR_NONE;
  2177  0040D4  0100               	movlb	0	; () banked
  2178  0040D6  6BCF               	clrf	(_V+74)& (0+255),b	;volatile
  2179                           
  2180                           ; BSR set to: 0
  2181                           ;gemsecs.c: 187:  if ((length - 3) != k[length - 1]) {
  2182                           ;stkvar	_length @ sp[(-4)+-2]
  2183  0040D8  0EFA               	movlw	-6
  2184  0040DA  006F FF8C  F042    	movff	plusw1,btemp+11
  2185                           
  2186                           ;stkvar	_k @ sp[(-4)+2]
  2187  0040E0  0EFE               	movlw	-2
  2188  0040E2  50E3               	movf	plusw1,w,c
  2189  0040E4  2442               	addwf	btemp+11,w,c
  2190  0040E6  6ED9               	movwf	fsr2l,c
  2191  0040E8  6ADA               	clrf	fsr2h,c
  2192  0040EA  0EFF               	movlw	255
  2193  0040EC  26D9               	addwf	fsr2l,f,c
  2194  0040EE  50DF               	movf	indf2,w,c
  2195  0040F0  6E41               	movwf	btemp+10,c
  2196  0040F2  6A42               	clrf	btemp+11,c
  2197  0040F4  0EFD               	movlw	253
  2198  0040F6  6E3F               	movwf	btemp+8,c
  2199  0040F8  0EFF               	movlw	255
  2200  0040FA  6E40               	movwf	btemp+9,c
  2201                           
  2202                           ;stkvar	_length @ sp[(-4)+-2]
  2203  0040FC  0EFA               	movlw	-6
  2204  0040FE  50E3               	movf	plusw1,w,c
  2205  004100  6E3D               	movwf	btemp+6,c
  2206  004102  6A3E               	clrf	btemp+7,c
  2207  004104  503F               	movf	btemp+8,w,c
  2208  004106  263D               	addwf	btemp+6,f,c
  2209  004108  5040               	movf	btemp+9,w,c
  2210  00410A  223E               	addwfc	btemp+7,f,c
  2211  00410C  5041               	movf	btemp+10,w,c
  2212  00410E  183D               	xorwf	btemp+6,w,c
  2213  004110  E104               	bnz	u3420
  2214  004112  5042               	movf	btemp+11,w,c
  2215  004114  183E               	xorwf	btemp+7,w,c
  2216  004116  B4D8               	btfsc	status,2,c
  2217  004118  D003               	goto	l5488
  2218  00411A                     u3420:
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;gemsecs.c: 188:   V.error = LINK_ERROR_SEND;
  2222  00411A  0E07               	movlw	7
  2223  00411C  6FCF               	movwf	(_V+74)& (0+255),b	;volatile
  2224  00411E  D07B               	goto	l1428
  2225  004120                     l5488:
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;gemsecs.c: 192:  checksum = block_checksum(&k[length - 2], length - 3);
  2229  004120  0EFD               	movlw	253
  2230  004122  6E41               	movwf	btemp+10,c
  2231  004124  0EFF               	movlw	255
  2232  004126  6E42               	movwf	btemp+11,c
  2233                           
  2234                           ;stkvar	_length @ sp[(-4)+-2]
  2235  004128  0EFA               	movlw	-6
  2236  00412A  50E3               	movf	plusw1,w,c
  2237  00412C  6E3F               	movwf	btemp+8,c
  2238  00412E  6A40               	clrf	btemp+9,c
  2239  004130  5041               	movf	btemp+10,w,c
  2240  004132  263F               	addwf	btemp+8,f,c
  2241  004134  5042               	movf	btemp+11,w,c
  2242  004136  2240               	addwfc	btemp+9,f,c
  2243  004138  0060  F0FF  FFE6   	movff	btemp+8,postinc1
  2244  00413E  0060  F103  FFE6   	movff	btemp+9,postinc1
  2245                           
  2246                           ;stkvar	_length @ sp[(-6)+-2]
  2247  004144  0EF8               	movlw	-8
  2248  004146  006F FF8C  F042    	movff	plusw1,btemp+11
  2249                           
  2250                           ;stkvar	_k @ sp[(-6)+2]
  2251  00414C  0EFC               	movlw	-4
  2252  00414E  50E3               	movf	plusw1,w,c
  2253  004150  2442               	addwf	btemp+11,w,c
  2254  004152  0FFE               	addlw	254
  2255  004154  6EE6               	movwf	postinc1,c
  2256  004156  ECA6  F023         	call	_block_checksum	;wreg free
  2257                           
  2258                           ;stkvar	_checksum @ sp[(-4)+0]
  2259  00415A  0EFC               	movlw	-4
  2260  00415C  0060  F0DF  FFE3   	movff	btemp,plusw1
  2261  004162  0EFD               	movlw	-3
  2262  004164  0060  F0E3  FFE3   	movff	btemp+1,plusw1
  2263                           
  2264                           ;gemsecs.c: 193:  k[0] = checksum & 0xff;
  2265                           ;stkvar	_checksum @ sp[(-4)+0]
  2266                           ;stkvar	_k @ sp[(-4)+2]
  2267  00416A  0EFE               	movlw	-2
  2268  00416C  50E3               	movf	plusw1,w,c
  2269  00416E  6ED9               	movwf	fsr2l,c
  2270  004170  6ADA               	clrf	fsr2h,c
  2271  004172  0EFC               	movlw	-4
  2272  004174  006F FF8F FFDF     	movff	plusw1,indf2
  2273                           
  2274                           ;gemsecs.c: 194:  k[1] = (checksum >> 8)&0xff;
  2275                           ;stkvar	_checksum @ sp[(-4)+0]
  2276  00417A  0EFD               	movlw	253
  2277  00417C  24E1               	addwf	fsr1l,w,c
  2278  00417E  6ED9               	movwf	fsr2l,c
  2279  004180  0EFF               	movlw	255
  2280  004182  20E2               	addwfc	fsr1h,w,c
  2281  004184  6EDA               	movwf	fsr2h,c
  2282                           
  2283                           ;stkvar	_k @ sp[(-4)+2]
  2284  004186  0EFE               	movlw	-2
  2285  004188  50E3               	movf	plusw1,w,c
  2286  00418A  6EE9               	movwf	fsr0l,c
  2287  00418C  6AEA               	clrf	fsr0h,c
  2288  00418E  0E01               	movlw	1
  2289  004190  26E9               	addwf	fsr0l,f,c
  2290  004192  006F FF7F FFEF     	movff	indf2,indf0
  2291                           
  2292                           ;gemsecs.c: 195:  V.t_checksum = checksum;
  2293                           ;stkvar	_checksum @ sp[(-4)+0]
  2294  004198  0EFC               	movlw	-4
  2295  00419A  006F FF8C  F0D2    	movff	plusw1,_V+77	;volatile
  2296  0041A0  0EFD               	movlw	-3
  2297  0041A2  006F FF8C  F0D3    	movff	plusw1,_V+78	;volatile
  2298  0041A8                     l5496:
  2299  0041A8  EC83  F02C         	call	_UART1_is_tx_ready	;wreg free
  2300  0041AC  0E3A               	movlw	58
  2301  0041AE  6437               	cpfsgt	btemp,c
  2302  0041B0  D7FB               	goto	l5496
  2303                           
  2304                           ;gemsecs.c: 198:  for (i = length; i > 0; i--) {
  2305                           ;stkvar	_length @ sp[(-4)+-2]
  2306                           ;stkvar	_i @ sp[(-4)+3]
  2307  0041B2  0EFA               	movlw	-6
  2308  0041B4  006F FF8C  F037    	movff	plusw1,btemp
  2309  0041BA  0EFF               	movlw	-1
  2310  0041BC  0060  F0DF  FFE3   	movff	btemp,plusw1
  2311  0041C2                     l5500:
  2312                           
  2313                           ;stkvar	_i @ sp[(-4)+3]
  2314  0041C2  0EFF               	movlw	-1
  2315  0041C4  50E3               	movf	plusw1,w,c
  2316  0041C6  B4D8               	btfsc	status,2,c
  2317  0041C8  D026               	goto	l1428
  2318                           
  2319                           ;gemsecs.c: 199:   if (fake) {
  2320                           ;stkvar	_fake @ sp[(-4)+-3]
  2321  0041CA  0EF9               	movlw	-7
  2322  0041CC  50E3               	movf	plusw1,w,c
  2323  0041CE  B4D8               	btfsc	status,2,c
  2324  0041D0  D010               	goto	l5508
  2325                           
  2326                           ;gemsecs.c: 200:    UART1_put_buffer(k[i - 1]);
  2327                           ;stkvar	_i @ sp[(-4)+3]
  2328  0041D2  0EFF               	movlw	-1
  2329  0041D4  006F FF8C  F042    	movff	plusw1,btemp+11
  2330                           
  2331                           ;stkvar	_k @ sp[(-4)+2]
  2332  0041DA  0EFE               	movlw	-2
  2333  0041DC  50E3               	movf	plusw1,w,c
  2334  0041DE  2442               	addwf	btemp+11,w,c
  2335  0041E0  6ED9               	movwf	fsr2l,c
  2336  0041E2  6ADA               	clrf	fsr2h,c
  2337  0041E4  0EFF               	movlw	255
  2338  0041E6  26D9               	addwf	fsr2l,f,c
  2339  0041E8  50DF               	movf	indf2,w,c
  2340  0041EA  6EE6               	movwf	postinc1,c
  2341  0041EC  EC9D  F029         	call	_UART1_put_buffer	;wreg free
  2342                           
  2343                           ;gemsecs.c: 201:   } else {
  2344  0041F0  D00F               	goto	l5510
  2345  0041F2                     l5508:
  2346                           
  2347                           ;gemsecs.c: 202:    UART1_Write(k[i - 1]);
  2348                           ;stkvar	_i @ sp[(-4)+3]
  2349  0041F2  0EFF               	movlw	-1
  2350  0041F4  006F FF8C  F042    	movff	plusw1,btemp+11
  2351                           
  2352                           ;stkvar	_k @ sp[(-4)+2]
  2353  0041FA  0EFE               	movlw	-2
  2354  0041FC  50E3               	movf	plusw1,w,c
  2355  0041FE  2442               	addwf	btemp+11,w,c
  2356  004200  6ED9               	movwf	fsr2l,c
  2357  004202  6ADA               	clrf	fsr2h,c
  2358  004204  0EFF               	movlw	255
  2359  004206  26D9               	addwf	fsr2l,f,c
  2360  004208  50DF               	movf	indf2,w,c
  2361  00420A  6EE6               	movwf	postinc1,c
  2362  00420C  ECAE  F028         	call	_UART1_Write	;wreg free
  2363  004210                     l5510:
  2364                           
  2365                           ; BSR set to: 57
  2366                           ;gemsecs.c: 204:  }
  2367                           ;stkvar	_i @ sp[(-4)+3]
  2368  004210  0EFF               	movlw	-1
  2369  004212  06E3               	decf	plusw1,f,c
  2370  004214  D7D6               	goto	l5500
  2371  004216                     l1428:
  2372                           
  2373                           ; _secs_send: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, arg
      +                          size = 3, vargsize = 0
  2374  004216  0EF9               	movlw	249
  2375  004218  26E1               	addwf	fsr1l,f,c
  2376  00421A  0EFF               	movlw	255
  2377  00421C  22E2               	addwfc	fsr1h,f,c
  2378  00421E  0012               	return		;funcret
  2379  004220                     __end_of_secs_send:
  2380                           	opt callstack 0
  2381                           
  2382 ;; *************** function _block_checksum *****************
  2383 ;; Defined at:
  2384 ;;		line 10 in file "gemsecs.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;  byte_block      1  [STACK] PTR unsigned char 
  2387 ;;		 -> H10.block(10), H10(39), 
  2388 ;;  byte_count      2  [STACK] unsigned short 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  i               2  [STACK] unsigned short 
  2391 ;;  sum             2  [STACK] unsigned short 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  2  [STACK] unsigned short 
  2394 ;; Registers used:
  2395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  2396 ;; Tracked objects:
  2397 ;;		On entry : 2/3D
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2405 ;;Total ram usage:        0 bytes
  2406 ;; Hardware stack levels used:    1
  2407 ;; Hardware stack levels required when called:    3
  2408 ;; This function calls:
  2409 ;;		Nothing
  2410 ;; This function is called by:
  2411 ;;		_main
  2412 ;;		_secs_send
  2413 ;; This function uses a reentrant model
  2414 ;;
  2415                           
  2416                           	psect	text6
  2417  00474C                     __ptext6:
  2418                           	opt callstack 0
  2419  00474C                     _block_checksum:
  2420                           	opt callstack 0
  2421                           
  2422                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2423  00474C  52E6               	movf	postinc1,f,c
  2424  00474E  52E6               	movf	postinc1,f,c
  2425  004750  52E6               	movf	postinc1,f,c
  2426  004752  52E6               	movf	postinc1,f,c
  2427                           
  2428                           ;gemsecs.c: 10: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 11: {;gemsecs.c: 12:  uint16_t sum = 0, i;
  2429                           ;stkvar	_sum @ sp[(-4)+2]
  2430                           
  2431                           ;incstack = 0
  2432  004754  0EFE               	movlw	-2
  2433  004756  6AE3               	clrf	plusw1,c
  2434  004758  0EFF               	movlw	-1
  2435  00475A  6AE3               	clrf	plusw1,c
  2436                           
  2437                           ;gemsecs.c: 14:  for (i = 0; i < byte_count; i++) {
  2438                           ;stkvar	_i @ sp[(-4)+0]
  2439  00475C  0EFC               	movlw	-4
  2440  00475E  6AE3               	clrf	plusw1,c
  2441  004760  0EFD               	movlw	-3
  2442  004762  6AE3               	clrf	plusw1,c
  2443  004764  D02C               	goto	l5240
  2444  004766                     l5236:
  2445                           
  2446                           ;gemsecs.c: 15:   sum += byte_block[i];
  2447                           ;stkvar	_i @ sp[(-4)+0]
  2448  004766  0EFC               	movlw	-4
  2449  004768  006F FF8C  F042    	movff	plusw1,btemp+11
  2450                           
  2451                           ;stkvar	_byte_block @ sp[(-4)+-1]
  2452  00476E  0EFB               	movlw	-5
  2453  004770  50E3               	movf	plusw1,w,c
  2454  004772  2442               	addwf	btemp+11,w,c
  2455  004774  6ED9               	movwf	fsr2l,c
  2456  004776  6ADA               	clrf	fsr2h,c
  2457  004778  50DF               	movf	indf2,w,c
  2458  00477A  6E42               	movwf	btemp+11,c
  2459                           
  2460                           ;stkvar	_sum @ sp[(-4)+2]
  2461  00477C  0EFE               	movlw	-2
  2462  00477E  50E3               	movf	plusw1,w,c
  2463  004780  2442               	addwf	btemp+11,w,c
  2464  004782  6E37               	movwf	btemp,c
  2465  004784  0EFE               	movlw	-2
  2466  004786  0060  F0DF  FFE3   	movff	btemp,plusw1
  2467  00478C  6A37               	clrf	btemp,c
  2468  00478E  0EFF               	movlw	-1
  2469  004790  50E3               	movf	plusw1,w,c
  2470  004792  2237               	addwfc	btemp,f,c
  2471  004794  0EFF               	movlw	-1
  2472  004796  0060  F0DF  FFE3   	movff	btemp,plusw1
  2473                           
  2474                           ;gemsecs.c: 16:  }
  2475                           ;stkvar	_i @ sp[(-4)+0]
  2476  00479C  0EFC               	movlw	-4
  2477  00479E  50E3               	movf	plusw1,w,c
  2478  0047A0  0F01               	addlw	1
  2479  0047A2  6E37               	movwf	btemp,c
  2480  0047A4  0EFC               	movlw	-4
  2481  0047A6  0060  F0DF  FFE3   	movff	btemp,plusw1
  2482  0047AC  6A37               	clrf	btemp,c
  2483  0047AE  0EFD               	movlw	-3
  2484  0047B0  50E3               	movf	plusw1,w,c
  2485  0047B2  2037               	addwfc	btemp,w,c
  2486  0047B4  6E37               	movwf	btemp,c
  2487  0047B6  0EFD               	movlw	-3
  2488  0047B8  0060  F0DF  FFE3   	movff	btemp,plusw1
  2489  0047BE                     l5240:
  2490                           
  2491                           ;stkvar	_byte_count @ sp[(-4)+-3]
  2492  0047BE  0EF9               	movlw	-7
  2493  0047C0  006F FF8C  F041    	movff	plusw1,btemp+10
  2494  0047C6  0EFA               	movlw	-6
  2495  0047C8  006F FF8C  F042    	movff	plusw1,btemp+11
  2496                           
  2497                           ;stkvar	_i @ sp[(-4)+0]
  2498  0047CE  0EFC               	movlw	-4
  2499  0047D0  006F FF8C  F03F    	movff	plusw1,btemp+8
  2500  0047D6  0EFD               	movlw	-3
  2501  0047D8  006F FF8C  F040    	movff	plusw1,btemp+9
  2502  0047DE  5041               	movf	btemp+10,w,c
  2503  0047E0  5C3F               	subwf	btemp+8,w,c
  2504  0047E2  5042               	movf	btemp+11,w,c
  2505  0047E4  5840               	subwfb	btemp+9,w,c
  2506  0047E6  A0D8               	btfss	status,0,c
  2507  0047E8  D7BE               	goto	l5236
  2508                           
  2509                           ;gemsecs.c: 17:  return sum;
  2510                           ;stkvar	_sum @ sp[(-4)+2]
  2511  0047EA  0EFE               	movlw	-2
  2512  0047EC  006F FF8C  F037    	movff	plusw1,btemp
  2513  0047F2  0EFF               	movlw	-1
  2514  0047F4  006F FF8C  F038    	movff	plusw1,btemp+1
  2515                           
  2516                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  2517  0047FA  0EF9               	movlw	249
  2518  0047FC  26E1               	addwf	fsr1l,f,c
  2519  0047FE  0EFF               	movlw	255
  2520  004800  22E2               	addwfc	fsr1h,f,c
  2521  004802  0012               	return		;funcret
  2522  004804                     __end_of_block_checksum:
  2523                           	opt callstack 0
  2524                           
  2525 ;; *************** function _UART1_put_buffer *****************
  2526 ;; Defined at:
  2527 ;;		line 180 in file "mcc_generated_files/uart1.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  bufData         1  [STACK] unsigned char 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;		None
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1  [STACK] void 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 3F/39
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2545 ;;Total ram usage:        0 bytes
  2546 ;; Hardware stack levels used:    1
  2547 ;; Hardware stack levels required when called:    3
  2548 ;; This function calls:
  2549 ;;		Nothing
  2550 ;; This function is called by:
  2551 ;;		_secs_send
  2552 ;; This function uses a reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text7
  2556  00533A                     __ptext7:
  2557                           	opt callstack 0
  2558  00533A                     _UART1_put_buffer:
  2559                           	opt callstack 26
  2560                           
  2561                           ;mcc_generated_files/uart1.c: 180: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 181: {;mcc_generated_files/uart1.c: 182:  PIE3bits.U1RXIE = 0;
  2562                           
  2563                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2564                           ;incstack = 0
  2565  00533A  0139               	movlb	57	; () banked
  2566  00533C  9793               	bcf	147,3,b	;volatile
  2567                           
  2568                           ; BSR set to: 57
  2569                           ;mcc_generated_files/uart1.c: 183:  uart1RxBuffer[uart1RxHead++] = bufData;
  2570                           ;stkvar	_bufData @ sp[(0)+-1]
  2571  00533E  0E40               	movlw	low _uart1RxBuffer
  2572  005340  2433               	addwf	_uart1RxHead,w,c	;volatile
  2573  005342  6ED9               	movwf	fsr2l,c
  2574  005344  6ADA               	clrf	fsr2h,c
  2575  005346  0E01               	movlw	high _uart1RxBuffer
  2576  005348  22DA               	addwfc	fsr2h,f,c
  2577  00534A  0EFF               	movlw	-1
  2578  00534C  006F FF8F FFDF     	movff	plusw1,indf2
  2579                           
  2580                           ; BSR set to: 57
  2581  005352  2A33               	incf	_uart1RxHead,f,c	;volatile
  2582                           
  2583                           ; BSR set to: 57
  2584                           ;mcc_generated_files/uart1.c: 184:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  2585  005354  0E3F               	movlw	63
  2586  005356  6433               	cpfsgt	_uart1RxHead,c
  2587  005358  D001               	goto	l5196
  2588                           
  2589                           ; BSR set to: 57
  2590                           ;mcc_generated_files/uart1.c: 185:   uart1RxHead = 0;
  2591  00535A  6A33               	clrf	_uart1RxHead,c	;volatile
  2592  00535C                     l5196:
  2593                           
  2594                           ; BSR set to: 57
  2595                           ;mcc_generated_files/uart1.c: 188:  uart1RxCount++;
  2596  00535C  2A31               	incf	_uart1RxCount,f,c	;volatile
  2597                           
  2598                           ; BSR set to: 57
  2599                           ;mcc_generated_files/uart1.c: 189:  PIE3bits.U1RXIE = 1;
  2600  00535E  8793               	bsf	147,3,b	;volatile
  2601                           
  2602                           ; BSR set to: 57
  2603                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  2604  005360  52E5               	movf	postdec1,f,c
  2605  005362  0012               	return		;funcret
  2606  005364                     __end_of_UART1_put_buffer:
  2607                           	opt callstack 0
  2608                           
  2609 ;; *************** function _UART1_is_tx_ready *****************
  2610 ;; Defined at:
  2611 ;;		line 151 in file "mcc_generated_files/uart1.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;		None
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;		None
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  1  [STACK] unsigned char 
  2618 ;; Registers used:
  2619 ;;		btemp
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2629 ;;Total ram usage:        0 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; Hardware stack levels required when called:    3
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_secs_send
  2636 ;; This function uses a reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text8
  2640  005906                     __ptext8:
  2641                           	opt callstack 0
  2642  005906                     _UART1_is_tx_ready:
  2643                           	opt callstack 26
  2644                           
  2645                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  2646                           
  2647                           ; BSR set to: 57
  2648                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2649                           ;incstack = 0
  2650  005906  0060  F0D0  F037   	movff	_uart1TxBufferRemaining,btemp	;volatile
  2651                           
  2652                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  2653  00590C  0012               	return		;funcret
  2654  00590E                     __end_of_UART1_is_tx_ready:
  2655                           	opt callstack 0
  2656                           
  2657 ;; *************** function _r_protocol *****************
  2658 ;; Defined at:
  2659 ;;		line 34 in file "gemsecs.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;  r_link          1  [STACK] PTR enum E16164
  2662 ;;		 -> V(79), 
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  rxData          1  [STACK] unsigned char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  1  [STACK] enum E16885
  2667 ;; Registers used:
  2668 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2678 ;;Total ram usage:        0 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    4
  2681 ;; This function calls:
  2682 ;;		_StartTimer
  2683 ;;		_TimerDone
  2684 ;;		_UART1_Read
  2685 ;;		_UART1_Write
  2686 ;;		_UART1_is_rx_ready
  2687 ;;		_run_checksum
  2688 ;; This function is called by:
  2689 ;;		_main
  2690 ;; This function uses a reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text9
  2694  003C60                     __ptext9:
  2695                           	opt callstack 0
  2696  003C60                     _r_protocol:
  2697                           	opt callstack 0
  2698                           
  2699                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2700  003C60  52E6               	movf	postinc1,f,c
  2701                           
  2702                           ;gemsecs.c: 34: LINK_STATES r_protocol(LINK_STATES *r_link);gemsecs.c: 35: {;gemsecs.c: 
      +                          36:  uint8_t rxData;;gemsecs.c: 37:  static uint8_t rxData_l = 0;;gemsecs.c: 39:  switch
      +                           (*r_link) {
  2703                           
  2704                           ;incstack = 0
  2705  003C62  D0EB               	goto	l5596
  2706  003C64                     l5516:
  2707                           
  2708                           ;gemsecs.c: 41:   if (UART1_is_rx_ready()) {
  2709  003C64  EC87  F02C         	call	_UART1_is_rx_ready	;wreg free
  2710  003C68  5037               	movf	btemp,w,c
  2711  003C6A  B4D8               	btfsc	status,2,c
  2712  003C6C  D107               	goto	l5598
  2713                           
  2714                           ;gemsecs.c: 42:    rxData = UART1_Read();
  2715  003C6E  ECCD  F028         	call	_UART1_Read	;wreg free
  2716                           
  2717                           ;stkvar	_rxData @ sp[(-1)+0]
  2718  003C72  0EFF               	movlw	-1
  2719  003C74  0060  F0DF  FFE3   	movff	btemp,plusw1
  2720                           
  2721                           ; BSR set to: 57
  2722                           ;gemsecs.c: 43:    if (rxData == 0x05) {
  2723                           ;stkvar	_rxData @ sp[(-1)+0]
  2724  003C7A  0EFF               	movlw	-1
  2725  003C7C  006F FF8C  F037    	movff	plusw1,btemp
  2726  003C82  0E05               	movlw	5
  2727  003C84  1837               	xorwf	btemp,w,c
  2728  003C86  A4D8               	btfss	status,2,c
  2729  003C88  D0F9               	goto	l5598
  2730                           
  2731                           ; BSR set to: 57
  2732                           ;gemsecs.c: 44:     V.error = LINK_ERROR_NONE;
  2733  003C8A  0100               	movlb	0	; () banked
  2734  003C8C  6BCF               	clrf	(_V+74)& (0+255),b	;volatile
  2735                           
  2736                           ; BSR set to: 0
  2737                           ;gemsecs.c: 45:     *r_link = LINK_STATE_ENQ;
  2738                           ;stkvar	_r_link @ sp[(-1)+-1]
  2739  003C8E  0EFE               	movlw	-2
  2740  003C90  50E3               	movf	plusw1,w,c
  2741  003C92  6ED9               	movwf	fsr2l,c
  2742  003C94  6ADA               	clrf	fsr2h,c
  2743  003C96  0E01               	movlw	1
  2744  003C98  D0CE               	goto	L15
  2745  003C9A                     l1378:
  2746                           
  2747                           ;gemsecs.c: 50:   rxData_l = 0;
  2748  003C9A  6A2A               	clrf	r_protocol@rxData_l,c
  2749                           
  2750                           ;gemsecs.c: 51:   UART1_Write(0x04);
  2751  003C9C  0E04               	movlw	4
  2752  003C9E  6EE6               	movwf	postinc1,c
  2753  003CA0  ECAE  F028         	call	_UART1_Write	;wreg free
  2754                           
  2755                           ; BSR set to: 57
  2756                           ;gemsecs.c: 52:   StartTimer(TMR_T2, 2000);
  2757  003CA4  0ED0               	movlw	208
  2758  003CA6  6EE6               	movwf	postinc1,c
  2759  003CA8  0E07               	movlw	7
  2760  003CAA  6EE6               	movwf	postinc1,c
  2761  003CAC  0E02               	movlw	2
  2762  003CAE  6EE6               	movwf	postinc1,c
  2763  003CB0  EC0B  F029         	call	_StartTimer	;wreg free
  2764                           
  2765                           ;gemsecs.c: 53:   *r_link = LINK_STATE_EOT;
  2766                           ;stkvar	_r_link @ sp[(-1)+-1]
  2767  003CB4  0EFE               	movlw	-2
  2768  003CB6  50E3               	movf	plusw1,w,c
  2769  003CB8  6ED9               	movwf	fsr2l,c
  2770  003CBA  6ADA               	clrf	fsr2h,c
  2771  003CBC  0E02               	movlw	2
  2772  003CBE  D0BB               	goto	L15
  2773  003CC0                     l5532:
  2774                           
  2775                           ;gemsecs.c: 56:   if (TimerDone(TMR_T2)) {
  2776  003CC0  0E02               	movlw	2
  2777  003CC2  6EE6               	movwf	postinc1,c
  2778  003CC4  EC57  F02B         	call	_TimerDone	;wreg free
  2779  003CC8  5037               	movf	btemp,w,c
  2780  003CCA  B4D8               	btfsc	status,2,c
  2781  003CCC  D009               	goto	l5538
  2782                           
  2783                           ;gemsecs.c: 57:    V.error = LINK_ERROR_T2;
  2784  003CCE  0E02               	movlw	2
  2785  003CD0  0100               	movlb	0	; () banked
  2786  003CD2  6FCF               	movwf	(_V+74)& (0+255),b	;volatile
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;gemsecs.c: 58:    *r_link = LINK_STATE_NAK;
  2790                           ;stkvar	_r_link @ sp[(-1)+-1]
  2791  003CD4  0EFE               	movlw	-2
  2792  003CD6  50E3               	movf	plusw1,w,c
  2793  003CD8  6ED9               	movwf	fsr2l,c
  2794  003CDA  6ADA               	clrf	fsr2h,c
  2795  003CDC  0E05               	movlw	5
  2796  003CDE  D0AB               	goto	L15
  2797  003CE0                     l5538:
  2798                           
  2799                           ;gemsecs.c: 60:    if (UART1_is_rx_ready()) {
  2800  003CE0  EC87  F02C         	call	_UART1_is_rx_ready	;wreg free
  2801  003CE4  5037               	movf	btemp,w,c
  2802  003CE6  B4D8               	btfsc	status,2,c
  2803  003CE8  D0C9               	goto	l5598
  2804                           
  2805                           ;gemsecs.c: 61:     rxData = UART1_Read();
  2806  003CEA  ECCD  F028         	call	_UART1_Read	;wreg free
  2807                           
  2808                           ;stkvar	_rxData @ sp[(-1)+0]
  2809  003CEE  0EFF               	movlw	-1
  2810  003CF0  0060  F0DF  FFE3   	movff	btemp,plusw1
  2811                           
  2812                           ; BSR set to: 57
  2813                           ;gemsecs.c: 62:     if (rxData_l == 0) {
  2814  003CF6  502A               	movf	r_protocol@rxData_l,w,c
  2815  003CF8  A4D8               	btfss	status,2,c
  2816  003CFA  D00C               	goto	l5550
  2817                           
  2818                           ; BSR set to: 57
  2819                           ;gemsecs.c: 63:      r_block.length = rxData;
  2820                           ;stkvar	_rxData @ sp[(-1)+0]
  2821  003CFC  0EFF               	movlw	-1
  2822  003CFE  006F FF8C  F06C    	movff	plusw1,_r_block+12
  2823                           
  2824                           ; BSR set to: 57
  2825                           ;gemsecs.c: 64:      run_checksum(0, 1);
  2826  003D04  0E01               	movlw	1
  2827  003D06  6EE6               	movwf	postinc1,c
  2828  003D08  0E00               	movlw	0
  2829  003D0A  6EE6               	movwf	postinc1,c
  2830  003D0C  ECC7  F029         	call	_run_checksum	;wreg free
  2831                           
  2832                           ;gemsecs.c: 65:      rxData_l++;
  2833  003D10  2A2A               	incf	r_protocol@rxData_l,f,c
  2834                           
  2835                           ;gemsecs.c: 66:     } else {
  2836  003D12  D0B4               	goto	l5598
  2837  003D14                     l5550:
  2838                           
  2839                           ; BSR set to: 57
  2840                           ;gemsecs.c: 70:      if (rxData_l <= 10)
  2841  003D14  0E0B               	movlw	11
  2842  003D16  602A               	cpfslt	r_protocol@rxData_l,c
  2843  003D18  D00A               	goto	l5554
  2844                           
  2845                           ; BSR set to: 57
  2846                           ;gemsecs.c: 71:       H10[1].block.b[r_block.length - rxData_l] = rxData;
  2847                           ;stkvar	_rxData @ sp[(-1)+0]
  2848  003D1A  502A               	movf	r_protocol@rxData_l,w,c
  2849  003D1C  08E3               	sublw	low (_H10+15)
  2850  003D1E  0100               	movlb	0	; () banked
  2851  003D20  256C               	addwf	(_r_block+12)& (0+255),w,b
  2852  003D22  6ED9               	movwf	fsr2l,c
  2853  003D24  6ADA               	clrf	fsr2h,c
  2854  003D26  0EFF               	movlw	-1
  2855  003D28  006F FF8F FFDF     	movff	plusw1,indf2
  2856  003D2E                     l5554:
  2857                           
  2858                           ;gemsecs.c: 72:      if (rxData_l <= r_block.length)
  2859  003D2E  502A               	movf	r_protocol@rxData_l,w,c
  2860  003D30  0100               	movlb	0	; () banked
  2861  003D32  5D6C               	subwf	(_r_block+12)& (0+255),w,b
  2862  003D34  A0D8               	btfss	status,0,c
  2863  003D36  D00D               	goto	l5558
  2864                           
  2865                           ; BSR set to: 0
  2866                           ;gemsecs.c: 73:       V.r_checksum = run_checksum(rxData, 0);
  2867  003D38  0E00               	movlw	0
  2868  003D3A  6EE6               	movwf	postinc1,c
  2869                           
  2870                           ;stkvar	_rxData @ sp[(-2)+0]
  2871  003D3C  0EFE               	movlw	-2
  2872  003D3E  50E3               	movf	plusw1,w,c
  2873  003D40  6EE6               	movwf	postinc1,c
  2874  003D42  ECC7  F029         	call	_run_checksum	;wreg free
  2875  003D46  0060  F0DC  F0D0   	movff	btemp,_V+75	;volatile
  2876  003D4C  0060  F0E0  F0D1   	movff	btemp+1,_V+76	;volatile
  2877  003D52                     l5558:
  2878                           
  2879                           ;gemsecs.c: 75:      if (rxData_l == r_block.length + 1)
  2880  003D52  502A               	movf	r_protocol@rxData_l,w,c
  2881  003D54  6E41               	movwf	btemp+10,c
  2882  003D56  6A42               	clrf	btemp+11,c
  2883  003D58  0100               	movlb	0	; () banked
  2884  003D5A  516C               	movf	(_r_block+12)& (0+255),w,b
  2885  003D5C  6E3F               	movwf	btemp+8,c
  2886  003D5E  6A40               	clrf	btemp+9,c
  2887  003D60  0E01               	movlw	1
  2888  003D62  263F               	addwf	btemp+8,f,c
  2889  003D64  0E00               	movlw	0
  2890  003D66  2240               	addwfc	btemp+9,f,c
  2891  003D68  5041               	movf	btemp+10,w,c
  2892  003D6A  183F               	xorwf	btemp+8,w,c
  2893  003D6C  E108               	bnz	l5562
  2894  003D6E  5042               	movf	btemp+11,w,c
  2895  003D70  1840               	xorwf	btemp+9,w,c
  2896  003D72  A4D8               	btfss	status,2,c
  2897  003D74  D004               	goto	l5562
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;gemsecs.c: 76:       H10[1].checksum = (uint16_t) rxData << 8;
  2901                           ;stkvar	_rxData @ sp[(-1)+0]
  2902  003D76  0EFF               	movlw	-1
  2903  003D78  50E3               	movf	plusw1,w,c
  2904  003D7A  6FE2               	movwf	(_H10+14)& (0+255),b
  2905  003D7C  6BE1               	clrf	(_H10+13)& (0+255),b
  2906  003D7E                     l5562:
  2907                           
  2908                           ; BSR set to: 0
  2909                           ;gemsecs.c: 77:      if (rxData_l == r_block.length + 2)
  2910  003D7E  502A               	movf	r_protocol@rxData_l,w,c
  2911  003D80  6E41               	movwf	btemp+10,c
  2912  003D82  6A42               	clrf	btemp+11,c
  2913  003D84  516C               	movf	(_r_block+12)& (0+255),w,b
  2914  003D86  6E3F               	movwf	btemp+8,c
  2915  003D88  6A40               	clrf	btemp+9,c
  2916  003D8A  0E02               	movlw	2
  2917  003D8C  263F               	addwf	btemp+8,f,c
  2918  003D8E  0E00               	movlw	0
  2919  003D90  2240               	addwfc	btemp+9,f,c
  2920  003D92  5041               	movf	btemp+10,w,c
  2921  003D94  183F               	xorwf	btemp+8,w,c
  2922  003D96  E109               	bnz	l5566
  2923  003D98  5042               	movf	btemp+11,w,c
  2924  003D9A  1840               	xorwf	btemp+9,w,c
  2925  003D9C  A4D8               	btfss	status,2,c
  2926  003D9E  D005               	goto	l5566
  2927                           
  2928                           ; BSR set to: 0
  2929                           ;gemsecs.c: 78:       H10[1].checksum += rxData;
  2930                           ;stkvar	_rxData @ sp[(-1)+0]
  2931  003DA0  0EFF               	movlw	-1
  2932  003DA2  50E3               	movf	plusw1,w,c
  2933  003DA4  27E1               	addwf	(_H10+13)& (0+255),f,b
  2934  003DA6  0E00               	movlw	0
  2935  003DA8  23E2               	addwfc	(_H10+14)& (0+255),f,b
  2936  003DAA                     l5566:
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;gemsecs.c: 80:      rxData_l++;
  2940  003DAA  2A2A               	incf	r_protocol@rxData_l,f,c
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;gemsecs.c: 81:      if (rxData_l > (r_block.length + 2)) {
  2944  003DAC  502A               	movf	r_protocol@rxData_l,w,c
  2945  003DAE  6E41               	movwf	btemp+10,c
  2946  003DB0  6A42               	clrf	btemp+11,c
  2947  003DB2  516C               	movf	(_r_block+12)& (0+255),w,b
  2948  003DB4  6E3F               	movwf	btemp+8,c
  2949  003DB6  6A40               	clrf	btemp+9,c
  2950  003DB8  0E02               	movlw	2
  2951  003DBA  263F               	addwf	btemp+8,f,c
  2952  003DBC  0E00               	movlw	0
  2953  003DBE  2240               	addwfc	btemp+9,f,c
  2954  003DC0  5041               	movf	btemp+10,w,c
  2955  003DC2  5C3F               	subwf	btemp+8,w,c
  2956  003DC4  5040               	movf	btemp+9,w,c
  2957  003DC6  0A80               	xorlw	128
  2958  003DC8  6E37               	movwf	btemp,c
  2959  003DCA  5042               	movf	btemp+11,w,c
  2960  003DCC  0A80               	xorlw	128
  2961  003DCE  5837               	subwfb	btemp,w,c
  2962  003DD0  B0D8               	btfsc	status,0,c
  2963  003DD2  D054               	goto	l5598
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;gemsecs.c: 82:       if (V.r_checksum == H10[1].checksum) {
  2967  003DD4  51E1               	movf	(_H10+13)& (0+255),w,b
  2968  003DD6  19D0               	xorwf	(_V+75)& (0+255),w,b	;volatile
  2969  003DD8  E10A               	bnz	l5574
  2970  003DDA  51E2               	movf	(_H10+14)& (0+255),w,b
  2971  003DDC  19D1               	xorwf	(_V+76)& (0+255),w,b	;volatile
  2972  003DDE  A4D8               	btfss	status,2,c
  2973  003DE0  D006               	goto	l5574
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;gemsecs.c: 83:        *r_link = LINK_STATE_ACK;
  2977                           ;stkvar	_r_link @ sp[(-1)+-1]
  2978  003DE2  0EFE               	movlw	-2
  2979  003DE4  50E3               	movf	plusw1,w,c
  2980  003DE6  6ED9               	movwf	fsr2l,c
  2981  003DE8  6ADA               	clrf	fsr2h,c
  2982  003DEA  0E03               	movlw	3
  2983  003DEC  D024               	goto	L15
  2984  003DEE                     l5574:
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;gemsecs.c: 85:        V.error = LINK_ERROR_CHECKSUM;
  2988  003DEE  0E05               	movlw	5
  2989  003DF0  D770               	goto	L14
  2990  003DF2                     l5578:
  2991                           
  2992                           ;gemsecs.c: 94:   V.stream = H10[1].block.block.stream;
  2993  003DF2  0100               	movlb	0	; () banked
  2994  003DF4  51EA               	movf	(_H10+22)& (0+255),w,b
  2995  003DF6  0B7F               	andlw	127
  2996  003DF8  6FCD               	movwf	(_V+72)& (0+255),b	;volatile
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;gemsecs.c: 95:   V.function = H10[1].block.block.function;
  3000  003DFA  C0E9  F0CE         	movff	_H10+21,_V+73	;volatile
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;gemsecs.c: 96:   UART1_Write(0x06);
  3004  003DFE  0E06               	movlw	6
  3005  003E00  6EE6               	movwf	postinc1,c
  3006  003E02  ECAE  F028         	call	_UART1_Write	;wreg free
  3007                           
  3008                           ; BSR set to: 57
  3009                           ;gemsecs.c: 97:   *r_link = LINK_STATE_DONE;
  3010                           ;stkvar	_r_link @ sp[(-1)+-1]
  3011  003E06  0EFE               	movlw	-2
  3012  003E08  50E3               	movf	plusw1,w,c
  3013  003E0A  6ED9               	movwf	fsr2l,c
  3014  003E0C  6ADA               	clrf	fsr2h,c
  3015  003E0E  0E04               	movlw	4
  3016  003E10  D012               	goto	L15
  3017  003E12                     l5586:
  3018                           
  3019                           ;gemsecs.c: 100:   *r_link = LINK_STATE_ERROR;
  3020                           ;stkvar	_r_link @ sp[(-1)+-1]
  3021  003E12  0EFE               	movlw	-2
  3022  003E14  50E3               	movf	plusw1,w,c
  3023  003E16  6ED9               	movwf	fsr2l,c
  3024  003E18  6ADA               	clrf	fsr2h,c
  3025  003E1A  0E06               	movlw	6
  3026  003E1C  6EDF               	movwf	indf2,c
  3027                           
  3028                           ;gemsecs.c: 101:   while ((uart1RxCount)) {
  3029  003E1E  D002               	goto	l5590
  3030  003E20                     l5588:
  3031                           
  3032                           ;gemsecs.c: 102:    UART1_Read();
  3033  003E20  ECCD  F028         	call	_UART1_Read	;wreg free
  3034  003E24                     l5590:
  3035                           
  3036                           ;gemsecs.c: 101:   while ((uart1RxCount)) {
  3037  003E24  5031               	movf	_uart1RxCount,w,c	;volatile
  3038  003E26  B4D8               	btfsc	status,2,c
  3039  003E28  D029               	goto	l5598
  3040  003E2A  D7FA               	goto	l5588
  3041  003E2C                     l5592:
  3042                           
  3043                           ;gemsecs.c: 109:   *r_link = LINK_STATE_IDLE;
  3044                           ;stkvar	_r_link @ sp[(-1)+-1]
  3045  003E2C  0EFE               	movlw	-2
  3046  003E2E  50E3               	movf	plusw1,w,c
  3047  003E30  6ED9               	movwf	fsr2l,c
  3048  003E32  6ADA               	clrf	fsr2h,c
  3049  003E34  0E00               	movlw	0
  3050  003E36                     L15:
  3051  003E36  6EDF               	movwf	indf2,c
  3052                           
  3053                           ;gemsecs.c: 110:   break;
  3054  003E38  D021               	goto	l5598
  3055  003E3A                     l5596:
  3056                           
  3057                           ;stkvar	_r_link @ sp[(-1)+-1]
  3058  003E3A  0EFE               	movlw	-2
  3059  003E3C  50E3               	movf	plusw1,w,c
  3060  003E3E  6ED9               	movwf	fsr2l,c
  3061  003E40  6ADA               	clrf	fsr2h,c
  3062  003E42  50DF               	movf	indf2,w,c
  3063  003E44  6E41               	movwf	btemp+10,c
  3064  003E46  6A42               	clrf	btemp+11,c
  3065                           
  3066                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3067                           ; Switch size 1, requested type "simple"
  3068                           ; Number of cases is 1, Range of values is 0 to 0
  3069                           ; switch strategies available:
  3070                           ; Name         Instructions Cycles
  3071                           ; simple_byte            4     3 (average)
  3072                           ;	Chosen strategy is simple_byte
  3073  003E48  5042               	movf	btemp+11,w,c
  3074  003E4A  0A00               	xorlw	0	; case 0
  3075  003E4C  A4D8               	btfss	status,2,c
  3076  003E4E  D7EE               	goto	l5592
  3077                           
  3078                           ; Switch size 1, requested type "simple"
  3079                           ; Number of cases is 7, Range of values is 0 to 6
  3080                           ; switch strategies available:
  3081                           ; Name         Instructions Cycles
  3082                           ; simple_byte           22    12 (average)
  3083                           ;	Chosen strategy is simple_byte
  3084  003E50  5041               	movf	btemp+10,w,c
  3085  003E52  0A00               	xorlw	0	; case 0
  3086  003E54  B4D8               	btfsc	status,2,c
  3087  003E56  D706               	goto	l5516
  3088  003E58  0A01               	xorlw	1	; case 1
  3089  003E5A  B4D8               	btfsc	status,2,c
  3090  003E5C  D71E               	goto	l1378
  3091  003E5E  0A03               	xorlw	3	; case 2
  3092  003E60  B4D8               	btfsc	status,2,c
  3093  003E62  D72E               	goto	l5532
  3094  003E64  0A01               	xorlw	1	; case 3
  3095  003E66  B4D8               	btfsc	status,2,c
  3096  003E68  D7C4               	goto	l5578
  3097  003E6A  0A07               	xorlw	7	; case 4
  3098  003E6C  B4D8               	btfsc	status,2,c
  3099  003E6E  D7DE               	goto	l5592
  3100  003E70  0A01               	xorlw	1	; case 5
  3101  003E72  B4D8               	btfsc	status,2,c
  3102  003E74  D7CE               	goto	l5586
  3103  003E76  0A03               	xorlw	3	; case 6
  3104  003E78  A4D8               	btfss	status,2,c
  3105  003E7A  D7D8               	goto	l5592
  3106  003E7C                     l5598:
  3107                           
  3108                           ;gemsecs.c: 113:  return *r_link;
  3109                           ;stkvar	_r_link @ sp[(-1)+-1]
  3110  003E7C  0EFE               	movlw	-2
  3111  003E7E  50E3               	movf	plusw1,w,c
  3112  003E80  6ED9               	movwf	fsr2l,c
  3113  003E82  6ADA               	clrf	fsr2h,c
  3114  003E84  50DF               	movf	indf2,w,c
  3115  003E86  6E37               	movwf	btemp,c
  3116                           
  3117                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3118  003E88  52E5               	movf	postdec1,f,c
  3119  003E8A  52E5               	movf	postdec1,f,c
  3120  003E8C  0012               	return		;funcret
  3121  003E8E                     __end_of_r_protocol:
  3122                           	opt callstack 0
  3123                           
  3124 ;; *************** function _run_checksum *****************
  3125 ;; Defined at:
  3126 ;;		line 23 in file "gemsecs.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  byte_block      1  [STACK] unsigned char 
  3129 ;;  clear           1  [STACK] _Bool 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;		None
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  2  [STACK] unsigned short 
  3134 ;; Registers used:
  3135 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  3136 ;; Tracked objects:
  3137 ;;		On entry : 6/39
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3142 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3144 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3145 ;;Total ram usage:        0 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:    3
  3148 ;; This function calls:
  3149 ;;		Nothing
  3150 ;; This function is called by:
  3151 ;;		_r_protocol
  3152 ;; This function uses a reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text10
  3156  00538E                     __ptext10:
  3157                           	opt callstack 0
  3158  00538E                     _run_checksum:
  3159                           	opt callstack 26
  3160                           
  3161                           ;gemsecs.c: 23: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 24: {;
      +                          gemsecs.c: 25:  static uint16_t sum = 0;;gemsecs.c: 27:  if (clear)
  3162                           ;stkvar	_clear @ sp[(0)+-2]
  3163                           
  3164                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3165                           ;incstack = 0
  3166  00538E  0EFE               	movlw	-2
  3167  005390  50E3               	movf	plusw1,w,c
  3168  005392  B4D8               	btfsc	status,2,c
  3169  005394  D002               	goto	l5280
  3170                           
  3171                           ;gemsecs.c: 28:   sum = 0;
  3172  005396  6A28               	clrf	run_checksum@sum,c
  3173  005398  6A29               	clrf	run_checksum@sum+1,c
  3174  00539A                     l5280:
  3175                           
  3176                           ;gemsecs.c: 30:  sum += byte_block;
  3177                           ;stkvar	_byte_block @ sp[(0)+-1]
  3178  00539A  0EFF               	movlw	-1
  3179  00539C  50E3               	movf	plusw1,w,c
  3180  00539E  2628               	addwf	run_checksum@sum,f,c
  3181  0053A0  0E00               	movlw	0
  3182  0053A2  2229               	addwfc	run_checksum@sum+1,f,c
  3183                           
  3184                           ;gemsecs.c: 31:  return sum;
  3185  0053A4  0060  F0A0  F037   	movff	run_checksum@sum,btemp
  3186  0053AA  0060  F0A4  F038   	movff	run_checksum@sum+1,btemp+1
  3187                           
  3188                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  3189  0053B0  52E5               	movf	postdec1,f,c
  3190  0053B2  52E5               	movf	postdec1,f,c
  3191  0053B4  0012               	return		;funcret
  3192  0053B6                     __end_of_run_checksum:
  3193                           	opt callstack 0
  3194                           
  3195 ;; *************** function _UART1_is_rx_ready *****************
  3196 ;; Defined at:
  3197 ;;		line 146 in file "mcc_generated_files/uart1.c"
  3198 ;; Parameters:    Size  Location     Type
  3199 ;;		None
  3200 ;; Auto vars:     Size  Location     Type
  3201 ;;		None
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1  [STACK] unsigned char 
  3204 ;; Registers used:
  3205 ;;		btemp
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3215 ;;Total ram usage:        0 bytes
  3216 ;; Hardware stack levels used:    1
  3217 ;; Hardware stack levels required when called:    3
  3218 ;; This function calls:
  3219 ;;		Nothing
  3220 ;; This function is called by:
  3221 ;;		_r_protocol
  3222 ;;		_t_protocol
  3223 ;; This function uses a reentrant model
  3224 ;;
  3225                           
  3226                           	psect	text11
  3227  00590E                     __ptext11:
  3228                           	opt callstack 0
  3229  00590E                     _UART1_is_rx_ready:
  3230                           	opt callstack 26
  3231                           
  3232                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  3233                           
  3234                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3235                           ;incstack = 0
  3236  00590E  0060  F0C4  F037   	movff	_uart1RxCount,btemp	;volatile
  3237                           
  3238                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  3239  005914  0012               	return		;funcret
  3240  005916                     __end_of_UART1_is_rx_ready:
  3241                           	opt callstack 0
  3242                           
  3243 ;; *************** function _UART1_Write *****************
  3244 ;; Defined at:
  3245 ;;		line 192 in file "mcc_generated_files/uart1.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;  txData          1  [STACK] unsigned char 
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;		None
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1  [STACK] void 
  3252 ;; Registers used:
  3253 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 3F/39
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3263 ;;Total ram usage:        0 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    3
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_main
  3270 ;;		_r_protocol
  3271 ;;		_t_protocol
  3272 ;;		_secs_send
  3273 ;; This function uses a reentrant model
  3274 ;;
  3275                           
  3276                           	psect	text12
  3277  00515C                     __ptext12:
  3278                           	opt callstack 0
  3279  00515C                     _UART1_Write:
  3280                           	opt callstack 26
  3281                           
  3282                           ;mcc_generated_files/uart1.c: 194:  while (0 == uart1TxBufferRemaining) {
  3283                           
  3284                           ;mcc_generated_files/uart1.c: 192: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 193: {;mcc_generated_files/uart1.c: 194:  while (0 == uart1TxBufferRemaining) {
  3285                           
  3286                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3287                           ;incstack = 0
  3288  00515C  5034               	movf	_uart1TxBufferRemaining,w,c	;volatile
  3289  00515E  B4D8               	btfsc	status,2,c
  3290  005160  D7FD               	goto	_UART1_Write
  3291                           
  3292                           ;mcc_generated_files/uart1.c: 197:  if (0 == PIE3bits.U1TXIE) {
  3293  005162  0139               	movlb	57	; () banked
  3294  005164  B993               	btfsc	147,4,b	;volatile
  3295  005166  D005               	goto	l579
  3296                           
  3297                           ; BSR set to: 57
  3298                           ;mcc_generated_files/uart1.c: 198:   U1TXB = txData;
  3299                           ;stkvar	_txData @ sp[(0)+-1]
  3300  005168  0EFF               	movlw	-1
  3301  00516A  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  3302                           
  3303                           ;mcc_generated_files/uart1.c: 199:  } else {
  3304  005170  D011               	goto	l5216
  3305  005172                     l579:
  3306                           
  3307                           ; BSR set to: 57
  3308                           ;mcc_generated_files/uart1.c: 200:   PIE3bits.U1TXIE = 0;
  3309  005172  9993               	bcf	147,4,b	;volatile
  3310                           
  3311                           ; BSR set to: 57
  3312                           ;mcc_generated_files/uart1.c: 201:   uart1TxBuffer[uart1TxHead++] = txData;
  3313                           ;stkvar	_txData @ sp[(0)+-1]
  3314  005174  0E80               	movlw	low _uart1TxBuffer
  3315  005176  2436               	addwf	_uart1TxHead,w,c	;volatile
  3316  005178  6ED9               	movwf	fsr2l,c
  3317  00517A  6ADA               	clrf	fsr2h,c
  3318  00517C  0E01               	movlw	high _uart1TxBuffer
  3319  00517E  22DA               	addwfc	fsr2h,f,c
  3320  005180  0EFF               	movlw	-1
  3321  005182  006F FF8F FFDF     	movff	plusw1,indf2
  3322                           
  3323                           ; BSR set to: 57
  3324  005188  2A36               	incf	_uart1TxHead,f,c	;volatile
  3325                           
  3326                           ; BSR set to: 57
  3327                           ;mcc_generated_files/uart1.c: 202:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  3328  00518A  0E3F               	movlw	63
  3329  00518C  6436               	cpfsgt	_uart1TxHead,c
  3330  00518E  D001               	goto	l5214
  3331                           
  3332                           ; BSR set to: 57
  3333                           ;mcc_generated_files/uart1.c: 203:    uart1TxHead = 0;
  3334  005190  6A36               	clrf	_uart1TxHead,c	;volatile
  3335  005192                     l5214:
  3336                           
  3337                           ; BSR set to: 57
  3338                           ;mcc_generated_files/uart1.c: 205:   uart1TxBufferRemaining--;
  3339  005192  0634               	decf	_uart1TxBufferRemaining,f,c	;volatile
  3340  005194                     l5216:
  3341                           
  3342                           ; BSR set to: 57
  3343                           ;mcc_generated_files/uart1.c: 207:  PIE3bits.U1TXIE = 1;
  3344  005194  8993               	bsf	147,4,b	;volatile
  3345                           
  3346                           ; BSR set to: 57
  3347                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  3348  005196  52E5               	movf	postdec1,f,c
  3349  005198  0012               	return		;funcret
  3350  00519A                     __end_of_UART1_Write:
  3351                           	opt callstack 0
  3352                           
  3353 ;; *************** function _UART1_Read *****************
  3354 ;; Defined at:
  3355 ;;		line 161 in file "mcc_generated_files/uart1.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;		None
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;  readValue       1  [STACK] unsigned char 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1  [STACK] unsigned char 
  3362 ;; Registers used:
  3363 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 3F/39
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3373 ;;Total ram usage:        0 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; Hardware stack levels required when called:    3
  3376 ;; This function calls:
  3377 ;;		Nothing
  3378 ;; This function is called by:
  3379 ;;		_r_protocol
  3380 ;;		_t_protocol
  3381 ;; This function uses a reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text13
  3385  00519A                     __ptext13:
  3386                           	opt callstack 0
  3387  00519A                     _UART1_Read:
  3388                           	opt callstack 0
  3389                           
  3390                           ; BSR set to: 57
  3391                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3392  00519A  52E6               	movf	postinc1,f,c
  3393  00519C                     
  3394                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  3395                           
  3396                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  3397  00519C  5031               	movf	_uart1RxCount,w,c	;volatile
  3398  00519E  B4D8               	btfsc	status,2,c
  3399  0051A0  D7FD               	goto	l5166
  3400                           
  3401                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  3402  0051A2  0E40               	movlw	low _uart1RxBuffer
  3403  0051A4  2432               	addwf	_uart1RxTail,w,c	;volatile
  3404  0051A6  6ED9               	movwf	fsr2l,c
  3405  0051A8  6ADA               	clrf	fsr2h,c
  3406  0051AA  0E01               	movlw	high _uart1RxBuffer
  3407  0051AC  22DA               	addwfc	fsr2h,f,c
  3408  0051AE  50DF               	movf	indf2,w,c
  3409  0051B0  6E42               	movwf	btemp+11,c
  3410                           
  3411                           ;stkvar	_readValue @ sp[(-1)+0]
  3412  0051B2  0EFF               	movlw	-1
  3413  0051B4  0060  F10B  FFE3   	movff	btemp+11,plusw1
  3414  0051BA  2A32               	incf	_uart1RxTail,f,c	;volatile
  3415                           
  3416                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  3417  0051BC  0E3F               	movlw	63
  3418  0051BE  6432               	cpfsgt	_uart1RxTail,c
  3419  0051C0  D001               	goto	l568
  3420                           
  3421                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  3422  0051C2  6A32               	clrf	_uart1RxTail,c	;volatile
  3423  0051C4                     l568:
  3424                           
  3425                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  3426  0051C4  0139               	movlb	57	; () banked
  3427  0051C6  9793               	bcf	147,3,b	;volatile
  3428                           
  3429                           ; BSR set to: 57
  3430                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  3431  0051C8  0631               	decf	_uart1RxCount,f,c	;volatile
  3432                           
  3433                           ; BSR set to: 57
  3434                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  3435  0051CA  8793               	bsf	147,3,b	;volatile
  3436                           
  3437                           ; BSR set to: 57
  3438                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  3439                           ;stkvar	_readValue @ sp[(-1)+0]
  3440  0051CC  0EFF               	movlw	-1
  3441  0051CE  006F FF8C  F037    	movff	plusw1,btemp
  3442                           
  3443                           ; BSR set to: 57
  3444                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  3445  0051D4  52E5               	movf	postdec1,f,c
  3446  0051D6  0012               	return		;funcret
  3447  0051D8                     __end_of_UART1_Read:
  3448                           	opt callstack 0
  3449                           
  3450 ;; *************** function _TimerDone *****************
  3451 ;; Defined at:
  3452 ;;		line 20 in file "timers.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  timer           1  [STACK] unsigned char 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;		None
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  1  [STACK] _Bool 
  3459 ;; Registers used:
  3460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3469 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3470 ;;Total ram usage:        0 bytes
  3471 ;; Hardware stack levels used:    1
  3472 ;; Hardware stack levels required when called:    3
  3473 ;; This function calls:
  3474 ;;		Nothing
  3475 ;; This function is called by:
  3476 ;;		_r_protocol
  3477 ;;		_t_protocol
  3478 ;; This function uses a reentrant model
  3479 ;;
  3480                           
  3481                           	psect	text14
  3482  0056AE                     __ptext14:
  3483                           	opt callstack 0
  3484  0056AE                     _TimerDone:
  3485                           	opt callstack 26
  3486                           
  3487                           ;timers.c: 20: __attribute__((inline)) _Bool TimerDone(uint8_t timer);timers.c: 21: {;ti
      +                          mers.c: 22:  if (tickCount[timer] == 0) {
  3488                           ;stkvar	_timer @ sp[(0)+-1]
  3489                           
  3490                           ; BSR set to: 57
  3491                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3492                           ;incstack = 0
  3493  0056AE  0EFF               	movlw	-1
  3494  0056B0  50E3               	movf	plusw1,w,c
  3495  0056B2  0D02               	mullw	2
  3496  0056B4  50F3               	movf	prodl,w,c
  3497  0056B6  0F79               	addlw	low _tickCount
  3498  0056B8  6ED9               	movwf	fsr2l,c
  3499  0056BA  6ADA               	clrf	fsr2h,c
  3500  0056BC  50DE               	movf	postinc2,w,c
  3501  0056BE  10DE               	iorwf	postinc2,w,c
  3502  0056C0  A4D8               	btfss	status,2,c
  3503  0056C2  D002               	goto	l5294
  3504                           
  3505                           ;timers.c: 23:   return 1;
  3506  0056C4  0E01               	movlw	1
  3507  0056C6  D001               	goto	L16
  3508  0056C8                     l5294:
  3509                           
  3510                           ;timers.c: 25:  return 0;
  3511  0056C8  0E00               	movlw	0
  3512  0056CA                     L16:
  3513  0056CA  6E37               	movwf	btemp,c
  3514                           
  3515                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  3516  0056CC  52E5               	movf	postdec1,f,c
  3517  0056CE  0012               	return		;funcret
  3518  0056D0                     __end_of_TimerDone:
  3519                           	opt callstack 0
  3520                           
  3521 ;; *************** function _StartTimer *****************
  3522 ;; Defined at:
  3523 ;;		line 12 in file "timers.c"
  3524 ;; Parameters:    Size  Location     Type
  3525 ;;  timer           1  [STACK] unsigned char 
  3526 ;;  count           2  [STACK] unsigned short 
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;		None
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1  [STACK] void 
  3531 ;; Registers used:
  3532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3533 ;; Tracked objects:
  3534 ;;		On entry : 3F/39
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3542 ;;Total ram usage:        0 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:    3
  3545 ;; This function calls:
  3546 ;;		Nothing
  3547 ;; This function is called by:
  3548 ;;		_r_protocol
  3549 ;;		_t_protocol
  3550 ;; This function uses a reentrant model
  3551 ;;
  3552                           
  3553                           	psect	text15
  3554  005216                     __ptext15:
  3555                           	opt callstack 0
  3556  005216                     _StartTimer:
  3557                           	opt callstack 26
  3558                           
  3559                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  3560                           ;stkvar	_count @ sp[(0)+-3]
  3561                           
  3562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3563                           ;incstack = 0
  3564  005216  0EFD               	movlw	-3
  3565  005218  006F FF8C  F041    	movff	plusw1,btemp+10
  3566  00521E  0EFE               	movlw	-2
  3567  005220  006F FF8C  F042    	movff	plusw1,btemp+11
  3568  005226  90D8               	bcf	status,0,c
  3569  005228  3441               	rlcf	btemp+10,w,c
  3570  00522A  6E3F               	movwf	btemp+8,c
  3571  00522C  3442               	rlcf	btemp+11,w,c
  3572  00522E  6E40               	movwf	btemp+9,c
  3573                           
  3574                           ;stkvar	_timer @ sp[(0)+-1]
  3575  005230  0EFF               	movlw	-1
  3576  005232  50E3               	movf	plusw1,w,c
  3577  005234  0D02               	mullw	2
  3578  005236  50F3               	movf	prodl,w,c
  3579  005238  0F79               	addlw	low _tickCount
  3580  00523A  6ED9               	movwf	fsr2l,c
  3581  00523C  6ADA               	clrf	fsr2h,c
  3582  00523E  0060  F0FF  FFDE   	movff	btemp+8,postinc2
  3583  005244  0060  F103  FFDD   	movff	btemp+9,postdec2
  3584                           
  3585                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  3586  00524A  52E5               	movf	postdec1,f,c
  3587  00524C  52E5               	movf	postdec1,f,c
  3588  00524E  52E5               	movf	postdec1,f,c
  3589  005250  0012               	return		;funcret
  3590  005252                     __end_of_StartTimer:
  3591                           	opt callstack 0
  3592                           
  3593 ;; *************** function _init_display *****************
  3594 ;; Defined at:
  3595 ;;		line 35 in file "eadog.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;		None
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;		None
  3600 ;; Return value:  Size  Location     Type
  3601 ;;                  1  [STACK] void 
  3602 ;; Registers used:
  3603 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3604 ;; Tracked objects:
  3605 ;;		On entry : 0/0
  3606 ;;		On exit  : 3F/3D
  3607 ;;		Unchanged: 0/0
  3608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3613 ;;Total ram usage:        0 bytes
  3614 ;; Hardware stack levels used:    1
  3615 ;; Hardware stack levels required when called:    5
  3616 ;; This function calls:
  3617 ;;		_ringBufS_init
  3618 ;;		_send_lcd_cmd
  3619 ;;		_send_lcd_cmd_long
  3620 ;;		_wdtdelay
  3621 ;; This function is called by:
  3622 ;;		_main
  3623 ;; This function uses a reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text16
  3627  00459A                     __ptext16:
  3628                           	opt callstack 0
  3629  00459A                     _init_display:
  3630                           	opt callstack 25
  3631                           
  3632                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  3633                           
  3634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3635                           ;incstack = 0
  3636  00459A  0E83               	movlw	low _ring_buf1
  3637  00459C  0100               	movlb	0	; () banked
  3638  00459E  6F73               	movwf	(_spi_link+6)& (0+255),b	;volatile
  3639  0045A0  0E02               	movlw	high _ring_buf1
  3640  0045A2  6F74               	movwf	(_spi_link+7)& (0+255),b	;volatile
  3641                           
  3642                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  3643  0045A4  0E40               	movlw	low _ring_buf2
  3644  0045A6  6F71               	movwf	(_spi_link+4)& (0+255),b	;volatile
  3645  0045A8  0E02               	movlw	high _ring_buf2
  3646  0045AA  6F72               	movwf	(_spi_link+5)& (0+255),b	;volatile
  3647                           
  3648                           ; BSR set to: 0
  3649                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  3650  0045AC  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  3651  0045B2  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  3652  0045B8  EC03  F02A         	call	_ringBufS_init	;wreg free
  3653                           
  3654                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  3655  0045BC  0060  F1C7  FFE6   	movff	_spi_link+4,postinc1
  3656  0045C2  0060  F1CB  FFE6   	movff	_spi_link+5,postinc1
  3657  0045C8  EC03  F02A         	call	_ringBufS_init	;wreg free
  3658                           
  3659                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  3660  0045CC  80BE               	bsf	16318,0,c	;volatile
  3661  0045CE  84BC               	bsf	16316,2,c	;volatile
  3662                           
  3663                           ;eadog.c: 44:  wdtdelay(350000);
  3664  0045D0  0E30               	movlw	48
  3665  0045D2  6EE6               	movwf	postinc1,c
  3666  0045D4  0E57               	movlw	87
  3667  0045D6  6EE6               	movwf	postinc1,c
  3668  0045D8  0E05               	movlw	5
  3669  0045DA  6EE6               	movwf	postinc1,c
  3670  0045DC  0E00               	movlw	0
  3671  0045DE  6EE6               	movwf	postinc1,c
  3672  0045E0  ECC9  F027         	call	_wdtdelay	;wreg free
  3673                           
  3674                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  3675  0045E4  0E39               	movlw	57
  3676  0045E6  6EE6               	movwf	postinc1,c
  3677  0045E8  ECEF  F029         	call	_send_lcd_cmd	;wreg free
  3678                           
  3679                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  3680  0045EC  0E1D               	movlw	29
  3681  0045EE  6EE6               	movwf	postinc1,c
  3682  0045F0  ECEF  F029         	call	_send_lcd_cmd	;wreg free
  3683                           
  3684                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  3685  0045F4  0E50               	movlw	80
  3686  0045F6  6EE6               	movwf	postinc1,c
  3687  0045F8  ECEF  F029         	call	_send_lcd_cmd	;wreg free
  3688                           
  3689                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  3690  0045FC  0E6C               	movlw	108
  3691  0045FE  6EE6               	movwf	postinc1,c
  3692  004600  ECEF  F029         	call	_send_lcd_cmd	;wreg free
  3693                           
  3694                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  3695  004604  0E76               	movlw	118
  3696  004606  6EE6               	movwf	postinc1,c
  3697  004608  ECEF  F029         	call	_send_lcd_cmd	;wreg free
  3698                           
  3699                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  3700  00460C  0E38               	movlw	56
  3701  00460E  6EE6               	movwf	postinc1,c
  3702  004610  ECDB  F029         	call	_send_lcd_cmd_long	;wreg free
  3703                           
  3704                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  3705  004614  0E0F               	movlw	15
  3706  004616  6EE6               	movwf	postinc1,c
  3707  004618  ECEF  F029         	call	_send_lcd_cmd	;wreg free
  3708                           
  3709                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  3710  00461C  0E01               	movlw	1
  3711  00461E  6EE6               	movwf	postinc1,c
  3712  004620  ECDB  F029         	call	_send_lcd_cmd_long	;wreg free
  3713                           
  3714                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  3715  004624  0E02               	movlw	2
  3716  004626  6EE6               	movwf	postinc1,c
  3717  004628  ECEF  F029         	call	_send_lcd_cmd	;wreg free
  3718                           
  3719                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  3720  00462C  0E06               	movlw	6
  3721  00462E  6EE6               	movwf	postinc1,c
  3722  004630  ECEF  F029         	call	_send_lcd_cmd	;wreg free
  3723                           
  3724                           ;eadog.c: 55:  wdtdelay(30);
  3725  004634  0E1E               	movlw	30
  3726  004636  6EE6               	movwf	postinc1,c
  3727  004638  0E00               	movlw	0
  3728  00463A  6EE6               	movwf	postinc1,c
  3729  00463C  0E00               	movlw	0
  3730  00463E  6EE6               	movwf	postinc1,c
  3731  004640  0E00               	movlw	0
  3732  004642  6EE6               	movwf	postinc1,c
  3733  004644  ECC9  F027         	call	_wdtdelay	;wreg free
  3734                           
  3735                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  3736  004648  0E02               	movlw	2
  3737  00464A  013D               	movlb	61	; () banked
  3738  00464C  6F16               	movwf	22,b	;volatile
  3739                           
  3740                           ; BSR set to: 61
  3741                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  3742  00464E  0E40               	movlw	64
  3743  004650  6F15               	movwf	21,b	;volatile
  3744                           
  3745                           ; BSR set to: 61
  3746                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  3747  004652  0E83               	movlw	131
  3748  004654  6F14               	movwf	20,b	;volatile
  3749                           
  3750                           ; BSR set to: 61
  3751                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  3752  004656  931A               	bcf	26,1,b	;volatile
  3753                           
  3754                           ; BSR set to: 61
  3755                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  3756  004658  0E3F               	movlw	-193
  3757  00465A  013B               	movlb	59	; () banked
  3758  00465C  17FD               	andwf	253,f,b	;volatile
  3759                           
  3760                           ; BSR set to: 59
  3761                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  3762  00465E  9BFD               	bcf	253,5,b	;volatile
  3763                           
  3764                           ; BSR set to: 59
  3765                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  3766  004660  51FD               	movf	253,w,b	;volatile
  3767  004662  0BF9               	andlw	-7
  3768  004664  0902               	iorlw	2
  3769  004666  6FFD               	movwf	253,b	;volatile
  3770                           
  3771                           ; BSR set to: 59
  3772                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  3773  004668  0EE7               	movlw	-25
  3774  00466A  17FD               	andwf	253,f,b	;volatile
  3775                           
  3776                           ; BSR set to: 59
  3777                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  3778  00466C  81FD               	bsf	253,0,b	;volatile
  3779                           
  3780                           ; BSR set to: 59
  3781                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  3782  00466E  0E83               	movlw	low _ring_buf1
  3783  004670  6FF9               	movwf	249,b	;volatile
  3784  004672  0E02               	movlw	high _ring_buf1
  3785  004674  6FFA               	movwf	250,b	;volatile
  3786  004676  0E00               	movlw	low (_ring_buf1 shr (0+16))
  3787  004678  6FFB               	movwf	251,b	;volatile
  3788                           
  3789                           ; BSR set to: 59
  3790                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  3791  00467A  9BFC               	bcf	252,5,b	;volatile
  3792                           
  3793                           ; BSR set to: 59
  3794                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  3795  00467C  013D               	movlb	61	; () banked
  3796  00467E  831A               	bsf	26,1,b	;volatile
  3797                           
  3798                           ; BSR set to: 61
  3799                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  3800  004680  90BE               	bcf	16318,0,c	;volatile
  3801                           
  3802                           ; BSR set to: 61
  3803                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  3804  004682  0012               	return		;funcret
  3805  004684                     __end_of_init_display:
  3806                           	opt callstack 0
  3807                           
  3808 ;; *************** function _send_lcd_cmd_long *****************
  3809 ;; Defined at:
  3810 ;;		line 97 in file "eadog.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;  cmd             1  [STACK] unsigned char 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;		None
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1  [STACK] void 
  3817 ;; Registers used:
  3818 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3828 ;;Total ram usage:        0 bytes
  3829 ;; Hardware stack levels used:    1
  3830 ;; Hardware stack levels required when called:    4
  3831 ;; This function calls:
  3832 ;;		_SPI1_Exchange8bit
  3833 ;;		_wdtdelay
  3834 ;; This function is called by:
  3835 ;;		_init_display
  3836 ;; This function uses a reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text17
  3840  0053B6                     __ptext17:
  3841                           	opt callstack 0
  3842  0053B6                     _send_lcd_cmd_long:
  3843                           	opt callstack 25
  3844                           
  3845                           ; BSR set to: 61
  3846                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3847                           ;incstack = 0
  3848                           ;eadog.c: 97: void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do { LATC
      +                          bits.LATC1 = 0; } while(0);
  3849  0053B6  92BC               	bcf	16316,1,c	;volatile
  3850                           
  3851                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  3852  0053B8  94BC               	bcf	16316,2,c	;volatile
  3853                           
  3854                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  3855                           ;stkvar	_cmd @ sp[(0)+-1]
  3856  0053BA  0EFF               	movlw	-1
  3857  0053BC  50E3               	movf	plusw1,w,c
  3858  0053BE  6EE6               	movwf	postinc1,c
  3859  0053C0  ECDD  F02B         	call	_SPI1_Exchange8bit	;wreg free
  3860                           
  3861                           ; BSR set to: 57
  3862                           ;eadog.c: 102:  wdtdelay(800);
  3863  0053C4  0E20               	movlw	32
  3864  0053C6  6EE6               	movwf	postinc1,c
  3865  0053C8  0E03               	movlw	3
  3866  0053CA  6EE6               	movwf	postinc1,c
  3867  0053CC  0E00               	movlw	0
  3868  0053CE  6EE6               	movwf	postinc1,c
  3869  0053D0  0E00               	movlw	0
  3870  0053D2  6EE6               	movwf	postinc1,c
  3871  0053D4  ECC9  F027         	call	_wdtdelay	;wreg free
  3872  0053D8  82BC               	bsf	16316,1,c	;volatile
  3873                           
  3874                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3875  0053DA  52E5               	movf	postdec1,f,c
  3876  0053DC  0012               	return		;funcret
  3877  0053DE                     __end_of_send_lcd_cmd_long:
  3878                           	opt callstack 0
  3879                           
  3880 ;; *************** function _send_lcd_cmd *****************
  3881 ;; Defined at:
  3882 ;;		line 85 in file "eadog.c"
  3883 ;; Parameters:    Size  Location     Type
  3884 ;;  cmd             1  [STACK] unsigned char 
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;		None
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  1  [STACK] void 
  3889 ;; Registers used:
  3890 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3900 ;;Total ram usage:        0 bytes
  3901 ;; Hardware stack levels used:    1
  3902 ;; Hardware stack levels required when called:    4
  3903 ;; This function calls:
  3904 ;;		_SPI1_Exchange8bit
  3905 ;;		_wdtdelay
  3906 ;; This function is called by:
  3907 ;;		_init_display
  3908 ;; This function uses a reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text18
  3912  0053DE                     __ptext18:
  3913                           	opt callstack 0
  3914  0053DE                     _send_lcd_cmd:
  3915                           	opt callstack 25
  3916                           
  3917                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3918                           ;incstack = 0
  3919                           ;eadog.c: 85: void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LATCbits.
      +                          LATC1 = 0; } while(0);
  3920  0053DE  92BC               	bcf	16316,1,c	;volatile
  3921                           
  3922                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  3923  0053E0  94BC               	bcf	16316,2,c	;volatile
  3924                           
  3925                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  3926                           ;stkvar	_cmd @ sp[(0)+-1]
  3927  0053E2  0EFF               	movlw	-1
  3928  0053E4  50E3               	movf	plusw1,w,c
  3929  0053E6  6EE6               	movwf	postinc1,c
  3930  0053E8  ECDD  F02B         	call	_SPI1_Exchange8bit	;wreg free
  3931                           
  3932                           ; BSR set to: 57
  3933                           ;eadog.c: 90:  wdtdelay(30);
  3934  0053EC  0E1E               	movlw	30
  3935  0053EE  6EE6               	movwf	postinc1,c
  3936  0053F0  0E00               	movlw	0
  3937  0053F2  6EE6               	movwf	postinc1,c
  3938  0053F4  0E00               	movlw	0
  3939  0053F6  6EE6               	movwf	postinc1,c
  3940  0053F8  0E00               	movlw	0
  3941  0053FA  6EE6               	movwf	postinc1,c
  3942  0053FC  ECC9  F027         	call	_wdtdelay	;wreg free
  3943  005400  82BC               	bsf	16316,1,c	;volatile
  3944                           
  3945                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3946  005402  52E5               	movf	postdec1,f,c
  3947  005404  0012               	return		;funcret
  3948  005406                     __end_of_send_lcd_cmd:
  3949                           	opt callstack 0
  3950                           
  3951 ;; *************** function _wdtdelay *****************
  3952 ;; Defined at:
  3953 ;;		line 21 in file "eadog.c"
  3954 ;; Parameters:    Size  Location     Type
  3955 ;;  delay           4  [STACK] unsigned long 
  3956 ;; Auto vars:     Size  Location     Type
  3957 ;;		None
  3958 ;; Return value:  Size  Location     Type
  3959 ;;                  1  [STACK] void 
  3960 ;; Registers used:
  3961 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3971 ;;Total ram usage:        0 bytes
  3972 ;; Hardware stack levels used:    1
  3973 ;; Hardware stack levels required when called:    3
  3974 ;; This function calls:
  3975 ;;		Nothing
  3976 ;; This function is called by:
  3977 ;;		_init_display
  3978 ;;		_send_lcd_cmd
  3979 ;;		_send_lcd_cmd_long
  3980 ;;		_wait_lcd_done
  3981 ;; This function uses a reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text19
  3985  004F92                     __ptext19:
  3986                           	opt callstack 0
  3987  004F92                     _wdtdelay:
  3988                           	opt callstack 26
  3989                           
  3990                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  3991                           
  3992                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3993                           ;incstack = 0
  3994  004F92  6A01               	clrf	wdtdelay@dcount,c
  3995  004F94  6A02               	clrf	wdtdelay@dcount+1,c
  3996  004F96  6A03               	clrf	wdtdelay@dcount+2,c
  3997  004F98  6A04               	clrf	wdtdelay@dcount+3,c
  3998  004F9A  D008               	goto	l4790
  3999  004F9C                     l1205:
  4000                           
  4001                           ;eadog.c: 26:   __nop();
  4002  004F9C  F000               	nop	
  4003  004F9E  0004               	clrwdt		;# 
  4004                           
  4005                           ;eadog.c: 28:  };
  4006  004FA0  0E01               	movlw	1
  4007  004FA2  2601               	addwf	wdtdelay@dcount,f,c
  4008  004FA4  0E00               	movlw	0
  4009  004FA6  2202               	addwfc	wdtdelay@dcount+1,f,c
  4010  004FA8  2203               	addwfc	wdtdelay@dcount+2,f,c
  4011  004FAA  2204               	addwfc	wdtdelay@dcount+3,f,c
  4012  004FAC                     l4790:
  4013                           
  4014                           ;stkvar	_delay @ sp[(0)+-4]
  4015  004FAC  0EFC               	movlw	-4
  4016  004FAE  006F FF8C  F037    	movff	plusw1,btemp
  4017  004FB4  5001               	movf	wdtdelay@dcount,w,c
  4018  004FB6  5C37               	subwf	btemp,w,c
  4019  004FB8  0EFD               	movlw	-3
  4020  004FBA  006F FF8C  F037    	movff	plusw1,btemp
  4021  004FC0  5002               	movf	wdtdelay@dcount+1,w,c
  4022  004FC2  5837               	subwfb	btemp,w,c
  4023  004FC4  0EFE               	movlw	-2
  4024  004FC6  006F FF8C  F037    	movff	plusw1,btemp
  4025  004FCC  5003               	movf	wdtdelay@dcount+2,w,c
  4026  004FCE  5837               	subwfb	btemp,w,c
  4027  004FD0  0EFF               	movlw	-1
  4028  004FD2  006F FF8C  F037    	movff	plusw1,btemp
  4029  004FD8  5004               	movf	wdtdelay@dcount+3,w,c
  4030  004FDA  5837               	subwfb	btemp,w,c
  4031  004FDC  B0D8               	btfsc	status,0,c
  4032  004FDE  D7DE               	goto	l1205
  4033                           
  4034                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  4035  004FE0  52E5               	movf	postdec1,f,c
  4036  004FE2  52E5               	movf	postdec1,f,c
  4037  004FE4  52E5               	movf	postdec1,f,c
  4038  004FE6  52E5               	movf	postdec1,f,c
  4039  004FE8  0012               	return		;funcret
  4040  004FEA                     __end_of_wdtdelay:
  4041                           	opt callstack 0
  4042                           
  4043 ;; *************** function _SPI1_Exchange8bit *****************
  4044 ;; Defined at:
  4045 ;;		line 79 in file "mcc_generated_files/spi1.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;  data            1  [STACK] unsigned char 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;		None
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  1  [STACK] unsigned char 
  4052 ;; Registers used:
  4053 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 3F/39
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4063 ;;Total ram usage:        0 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:    3
  4066 ;; This function calls:
  4067 ;;		Nothing
  4068 ;; This function is called by:
  4069 ;;		_send_lcd_cmd
  4070 ;;		_send_lcd_cmd_long
  4071 ;; This function uses a reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text20
  4075  0057BA                     __ptext20:
  4076                           	opt callstack 0
  4077  0057BA                     _SPI1_Exchange8bit:
  4078                           	opt callstack 25
  4079                           
  4080                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  4081                           
  4082                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4083                           ;incstack = 0
  4084  0057BA  0E01               	movlw	1
  4085  0057BC  013D               	movlb	61	; () banked
  4086  0057BE  6F12               	movwf	18,b	;volatile
  4087                           
  4088                           ; BSR set to: 61
  4089                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  4090                           ;stkvar	_data @ sp[(0)+-1]
  4091  0057C0  0EFF               	movlw	-1
  4092  0057C2  006F FF8F FD11     	movff	plusw1,15633	;volatile
  4093  0057C8                     l845:
  4094                           
  4095                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  4096  0057C8  0139               	movlb	57	; () banked
  4097  0057CA  A9A2               	btfss	162,4,b	;volatile
  4098  0057CC  D7FD               	goto	l845
  4099                           
  4100                           ; BSR set to: 57
  4101                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  4102  0057CE  006F F440  F037    	movff	15632,btemp	;volatile
  4103                           
  4104                           ; BSR set to: 57
  4105                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  4106  0057D4  52E5               	movf	postdec1,f,c
  4107  0057D6  0012               	return		;funcret
  4108  0057D8                     __end_of_SPI1_Exchange8bit:
  4109                           	opt callstack 0
  4110                           
  4111 ;; *************** function _ringBufS_init *****************
  4112 ;; Defined at:
  4113 ;;		line 22 in file "ringbufs.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  _this           2  [STACK] PTR volatile struct ring
  4116 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;		None
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  1  [STACK] void 
  4121 ;; Registers used:
  4122 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4128 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4131 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4132 ;;Total ram usage:        0 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; Hardware stack levels required when called:    4
  4135 ;; This function calls:
  4136 ;;		_memset
  4137 ;; This function is called by:
  4138 ;;		_init_display
  4139 ;; This function uses a reentrant model
  4140 ;;
  4141                           
  4142                           	psect	text21
  4143  005406                     __ptext21:
  4144                           	opt callstack 0
  4145  005406                     _ringBufS_init:
  4146                           	opt callstack 25
  4147                           
  4148                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  4149                           
  4150                           ; BSR set to: 57
  4151                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4152                           ;incstack = 0
  4153  005406  0E43               	movlw	67
  4154  005408  6EE6               	movwf	postinc1,c
  4155  00540A  0E00               	movlw	0
  4156  00540C  6EE6               	movwf	postinc1,c
  4157  00540E  0E00               	movlw	0
  4158  005410  6EE6               	movwf	postinc1,c
  4159  005412  0E00               	movlw	0
  4160  005414  6EE6               	movwf	postinc1,c
  4161                           
  4162                           ;stkvar	__this @ sp[(-4)+-2]
  4163  005416  0EFA               	movlw	-6
  4164  005418  006F FF8F FFE6     	movff	plusw1,postinc1
  4165  00541E  006F FF8F FFE6     	movff	plusw1,postinc1
  4166  005424  EC09  F019         	call	_memset	;wreg free
  4167                           
  4168                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  4169  005428  52E5               	movf	postdec1,f,c
  4170  00542A  52E5               	movf	postdec1,f,c
  4171  00542C  0012               	return		;funcret
  4172  00542E                     __end_of_ringBufS_init:
  4173                           	opt callstack 0
  4174                           
  4175 ;; *************** function _eaDogM_WriteString *****************
  4176 ;; Defined at:
  4177 ;;		line 167 in file "eadog.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  strPtr          1  [STACK] PTR unsigned char 
  4180 ;;		 -> V(79), 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;		None
  4183 ;; Return value:  Size  Location     Type
  4184 ;;                  1  [STACK] void 
  4185 ;; Registers used:
  4186 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  4187 ;; Tracked objects:
  4188 ;;		On entry : 0/3D
  4189 ;;		On exit  : 3F/0
  4190 ;;		Unchanged: 0/0
  4191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4196 ;;Total ram usage:        0 bytes
  4197 ;; Hardware stack levels used:    1
  4198 ;; Hardware stack levels required when called:   12
  4199 ;; This function calls:
  4200 ;;		_printf
  4201 ;;		_ringBufS_flush
  4202 ;;		_start_lcd
  4203 ;;		_strlen
  4204 ;;		_wait_lcd_set
  4205 ;; This function is called by:
  4206 ;;		_main
  4207 ;; This function uses a reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text22
  4211  004804                     __ptext22:
  4212                           	opt callstack 0
  4213  004804                     _eaDogM_WriteString:
  4214                           	opt callstack 18
  4215                           
  4216                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  wait
      +                          _lcd_set();
  4217                           
  4218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4219                           ;incstack = 0
  4220  004804  EC8F  F02C         	call	_wait_lcd_set	;wreg free
  4221                           
  4222                           ; BSR set to: 0
  4223                           ;eadog.c: 171:  ringBufS_flush(spi_link.tx1a, 0);
  4224  004808  0E00               	movlw	0
  4225  00480A  6EE6               	movwf	postinc1,c
  4226  00480C  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  4227  004812  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  4228  004818  EC90  F025         	call	_ringBufS_flush	;wreg free
  4229  00481C  94BC               	bcf	16316,2,c	;volatile
  4230                           
  4231                           ;eadog.c: 173:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  4232                           ;stkvar	_strPtr @ sp[(0)+-1]
  4233  00481E  0EFF               	movlw	-1
  4234  004820  006F FF8C  F042    	movff	plusw1,btemp+11
  4235  004826  0060  F10B  FFE6   	movff	btemp+11,postinc1
  4236  00482C  0E00               	movlw	0
  4237  00482E  6EE6               	movwf	postinc1,c
  4238  004830  EC5E  F026         	call	_strlen	;wreg free
  4239  004834  5038               	movf	btemp+1,w,c
  4240  004836  E104               	bnz	u4540
  4241  004838  0E41               	movlw	65
  4242  00483A  5C37               	subwf	btemp,w,c
  4243  00483C  A0D8               	btfss	status,0,c
  4244  00483E  D008               	goto	l6472
  4245  004840                     u4540:
  4246                           
  4247                           ;stkvar	_strPtr @ sp[(0)+-1]
  4248  004840  0EFF               	movlw	-1
  4249  004842  50E3               	movf	plusw1,w,c
  4250  004844  6ED9               	movwf	fsr2l,c
  4251  004846  6ADA               	clrf	fsr2h,c
  4252  004848  0E40               	movlw	64
  4253  00484A  26D9               	addwf	fsr2l,f,c
  4254  00484C  0E00               	movlw	0
  4255  00484E  6EDF               	movwf	indf2,c
  4256  004850                     l6472:
  4257                           
  4258                           ;eadog.c: 174:  DMA1CON0bits.EN = 0;
  4259  004850  013B               	movlb	59	; () banked
  4260  004852  9FFC               	bcf	252,7,b	;volatile
  4261                           
  4262                           ; BSR set to: 59
  4263                           ;eadog.c: 175:  DMA1SSZ = strlen(strPtr);
  4264                           ;stkvar	_strPtr @ sp[(0)+-1]
  4265  004854  0EFF               	movlw	-1
  4266  004856  006F FF8C  F042    	movff	plusw1,btemp+11
  4267  00485C  0060  F10B  FFE6   	movff	btemp+11,postinc1
  4268  004862  0E00               	movlw	0
  4269  004864  6EE6               	movwf	postinc1,c
  4270  004866  EC5E  F026         	call	_strlen	;wreg free
  4271  00486A  0060  F0DF  FBF7   	movff	btemp,15351	;volatile
  4272  004870  0060  F0E3  FBF8   	movff	btemp+1,15352	;volatile
  4273                           
  4274                           ;eadog.c: 176:  DMA1CON0bits.EN = 1;
  4275  004876  013B               	movlb	59	; () banked
  4276  004878  8FFC               	bsf	252,7,b	;volatile
  4277                           
  4278                           ; BSR set to: 59
  4279                           ;eadog.c: 177:  printf("%s", strPtr);
  4280                           ;stkvar	_strPtr @ sp[(0)+-1]
  4281  00487A  0EFF               	movlw	-1
  4282  00487C  006F FF8C  F042    	movff	plusw1,btemp+11
  4283  004882  0060  F10B  FFE6   	movff	btemp+11,postinc1
  4284  004888  0E00               	movlw	0
  4285  00488A  6EE6               	movwf	postinc1,c
  4286  00488C  0E61               	movlw	STR_6& (0+255)
  4287  00488E  6EE6               	movwf	postinc1,c
  4288  004890  0E03               	movlw	3
  4289  004892  6EE6               	movwf	postinc1,c
  4290  004894  EC3A  F027         	call	_printf	;wreg free
  4291  004898  94BE               	bcf	16318,2,c	;volatile
  4292                           
  4293                           ;eadog.c: 179:  start_lcd();
  4294  00489A  EC92  F02C         	call	_start_lcd	;wreg free
  4295                           
  4296                           ; BSR set to: 59
  4297                           ;eadog.c: 180:  ++V.ticks;
  4298  00489E  0E01               	movlw	1
  4299  0048A0  0100               	movlb	0	; () banked
  4300  0048A2  27C9               	addwf	(_V+68)& (0+255),f,b	;volatile
  4301  0048A4  0E00               	movlw	0
  4302  0048A6  23CA               	addwfc	(_V+69)& (0+255),f,b	;volatile
  4303  0048A8  23CB               	addwfc	(_V+70)& (0+255),f,b	;volatile
  4304  0048AA  23CC               	addwfc	(_V+71)& (0+255),f,b	;volatile
  4305                           
  4306                           ; BSR set to: 0
  4307                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  4308  0048AC  52E5               	movf	postdec1,f,c
  4309  0048AE  0012               	return		;funcret
  4310  0048B0                     __end_of_eaDogM_WriteString:
  4311                           	opt callstack 0
  4312                           
  4313 ;; *************** function _wait_lcd_set *****************
  4314 ;; Defined at:
  4315 ;;		line 114 in file "eadog.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;		None
  4318 ;; Auto vars:     Size  Location     Type
  4319 ;;		None
  4320 ;; Return value:  Size  Location     Type
  4321 ;;                  1  [STACK] void 
  4322 ;; Registers used:
  4323 ;;		None
  4324 ;; Tracked objects:
  4325 ;;		On entry : 0/3D
  4326 ;;		On exit  : 3F/0
  4327 ;;		Unchanged: 0/0
  4328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4333 ;;Total ram usage:        0 bytes
  4334 ;; Hardware stack levels used:    1
  4335 ;; Hardware stack levels required when called:    3
  4336 ;; This function calls:
  4337 ;;		Nothing
  4338 ;; This function is called by:
  4339 ;;		_eaDogM_WriteString
  4340 ;; This function uses a reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text23
  4344  00591E                     __ptext23:
  4345                           	opt callstack 0
  4346  00591E                     _wait_lcd_set:
  4347                           	opt callstack 26
  4348                           
  4349                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  4350                           
  4351                           ; BSR set to: 0
  4352                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4353                           ;incstack = 0
  4354  00591E  0100               	movlb	0	; () banked
  4355  005920  876D               	bsf	_spi_link& (0+255),3,b	;volatile
  4356                           
  4357                           ; BSR set to: 0
  4358                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  4359  005922  0012               	return		;funcret
  4360  005924                     __end_of_wait_lcd_set:
  4361                           	opt callstack 0
  4362                           
  4363 ;; *************** function _start_lcd *****************
  4364 ;; Defined at:
  4365 ;;		line 109 in file "eadog.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1  [STACK] void 
  4372 ;; Registers used:
  4373 ;;		None
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/3B
  4376 ;;		On exit  : 3F/3B
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4380 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4382 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4383 ;;Total ram usage:        0 bytes
  4384 ;; Hardware stack levels used:    1
  4385 ;; Hardware stack levels required when called:    3
  4386 ;; This function calls:
  4387 ;;		Nothing
  4388 ;; This function is called by:
  4389 ;;		_eaDogM_WriteString
  4390 ;; This function uses a reentrant model
  4391 ;;
  4392                           
  4393                           	psect	text24
  4394  005924                     __ptext24:
  4395                           	opt callstack 0
  4396  005924                     _start_lcd:
  4397                           	opt callstack 26
  4398                           
  4399                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  4400                           
  4401                           ; BSR set to: 0
  4402                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4403                           ;incstack = 0
  4404  005924  013B               	movlb	59	; () banked
  4405  005926  8DFC               	bsf	252,6,b	;volatile
  4406                           
  4407                           ; BSR set to: 59
  4408                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  4409  005928  0012               	return		;funcret
  4410  00592A                     __end_of_start_lcd:
  4411                           	opt callstack 0
  4412                           
  4413 ;; *************** function _ringBufS_flush *****************
  4414 ;; Defined at:
  4415 ;;		line 76 in file "ringbufs.c"
  4416 ;; Parameters:    Size  Location     Type
  4417 ;;  _this           2  [STACK] PTR struct ringBufS_t
  4418 ;;		 -> ring_buf1(67), 
  4419 ;;  clearBuffer     1  [STACK] const char 
  4420 ;; Auto vars:     Size  Location     Type
  4421 ;;		None
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  1  [STACK] void 
  4424 ;; Registers used:
  4425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4426 ;; Tracked objects:
  4427 ;;		On entry : 3F/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4434 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4435 ;;Total ram usage:        0 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    4
  4438 ;; This function calls:
  4439 ;;		_memset
  4440 ;; This function is called by:
  4441 ;;		_eaDogM_WriteString
  4442 ;; This function uses a reentrant model
  4443 ;;
  4444                           
  4445                           	psect	text25
  4446  004B20                     __ptext25:
  4447                           	opt callstack 0
  4448  004B20                     _ringBufS_flush:
  4449                           	opt callstack 25
  4450                           
  4451                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  4452                           ;stkvar	__this @ sp[(0)+-2]
  4453                           
  4454                           ; BSR set to: 59
  4455                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4456                           ;incstack = 0
  4457  004B20  0EFE               	movlw	-2
  4458  004B22  006F FF8C  F041    	movff	plusw1,btemp+10
  4459  004B28  0EFF               	movlw	-1
  4460  004B2A  006F FF8C  F042    	movff	plusw1,btemp+11
  4461  004B30  0E42               	movlw	66
  4462  004B32  2441               	addwf	btemp+10,w,c
  4463  004B34  6ED9               	movwf	fsr2l,c
  4464  004B36  0E00               	movlw	0
  4465  004B38  2042               	addwfc	btemp+11,w,c
  4466  004B3A  6EDA               	movwf	fsr2h,c
  4467  004B3C  0E00               	movlw	0
  4468  004B3E  6EDF               	movwf	indf2,c
  4469                           
  4470                           ;ringbufs.c: 79:  _this->head = 0;
  4471                           ;stkvar	__this @ sp[(0)+-2]
  4472  004B40  0EFE               	movlw	-2
  4473  004B42  006F FF8C  F041    	movff	plusw1,btemp+10
  4474  004B48  0EFF               	movlw	-1
  4475  004B4A  006F FF8C  F042    	movff	plusw1,btemp+11
  4476  004B50  0E40               	movlw	64
  4477  004B52  2441               	addwf	btemp+10,w,c
  4478  004B54  6ED9               	movwf	fsr2l,c
  4479  004B56  0E00               	movlw	0
  4480  004B58  2042               	addwfc	btemp+11,w,c
  4481  004B5A  6EDA               	movwf	fsr2h,c
  4482  004B5C  0E00               	movlw	0
  4483  004B5E  6EDF               	movwf	indf2,c
  4484                           
  4485                           ;ringbufs.c: 80:  _this->tail = 0;
  4486                           ;stkvar	__this @ sp[(0)+-2]
  4487  004B60  0EFE               	movlw	-2
  4488  004B62  006F FF8C  F041    	movff	plusw1,btemp+10
  4489  004B68  0EFF               	movlw	-1
  4490  004B6A  006F FF8C  F042    	movff	plusw1,btemp+11
  4491  004B70  0E41               	movlw	65
  4492  004B72  2441               	addwf	btemp+10,w,c
  4493  004B74  6ED9               	movwf	fsr2l,c
  4494  004B76  0E00               	movlw	0
  4495  004B78  2042               	addwfc	btemp+11,w,c
  4496  004B7A  6EDA               	movwf	fsr2h,c
  4497  004B7C  0E00               	movlw	0
  4498  004B7E  6EDF               	movwf	indf2,c
  4499                           
  4500                           ;ringbufs.c: 81:  if (clearBuffer) {
  4501                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  4502  004B80  0EFD               	movlw	-3
  4503  004B82  50E3               	movf	plusw1,w,c
  4504  004B84  B4D8               	btfsc	status,2,c
  4505  004B86  D011               	goto	l1326
  4506                           
  4507                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  4508  004B88  0E40               	movlw	64
  4509  004B8A  6EE6               	movwf	postinc1,c
  4510  004B8C  0E00               	movlw	0
  4511  004B8E  6EE6               	movwf	postinc1,c
  4512  004B90  0E00               	movlw	0
  4513  004B92  6EE6               	movwf	postinc1,c
  4514  004B94  0E00               	movlw	0
  4515  004B96  6EE6               	movwf	postinc1,c
  4516                           
  4517                           ;stkvar	__this @ sp[(-4)+-2]
  4518  004B98  0EFA               	movlw	-6
  4519  004B9A  006F FF8F FFE6     	movff	plusw1,postinc1
  4520  004BA0  006F FF8F FFE6     	movff	plusw1,postinc1
  4521  004BA6  EC09  F019         	call	_memset	;wreg free
  4522  004BAA                     l1326:
  4523                           
  4524                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  4525  004BAA  52E5               	movf	postdec1,f,c
  4526  004BAC  52E5               	movf	postdec1,f,c
  4527  004BAE  52E5               	movf	postdec1,f,c
  4528  004BB0  0012               	return		;funcret
  4529  004BB2                     __end_of_ringBufS_flush:
  4530                           	opt callstack 0
  4531                           
  4532 ;; *************** function _memset *****************
  4533 ;; Defined at:
  4534 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;  dest            2  [STACK] PTR void 
  4537 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4538 ;;  c               2  [STACK] int 
  4539 ;;  n               2  [STACK] unsigned int 
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  s               2  [STACK] PTR unsigned char 
  4542 ;;		 -> ring_buf2(67), ring_buf1(67), 
  4543 ;;  k               2  [STACK] unsigned int 
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  2  [STACK] PTR void 
  4546 ;; Registers used:
  4547 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4557 ;;Total ram usage:        0 bytes
  4558 ;; Hardware stack levels used:    1
  4559 ;; Hardware stack levels required when called:    3
  4560 ;; This function calls:
  4561 ;;		Nothing
  4562 ;; This function is called by:
  4563 ;;		_ringBufS_init
  4564 ;;		_ringBufS_flush
  4565 ;; This function uses a reentrant model
  4566 ;;
  4567                           
  4568                           	psect	text26
  4569  003212                     __ptext26:
  4570                           	opt callstack 0
  4571  003212                     _memset:
  4572                           	opt callstack 0
  4573                           
  4574                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4575  003212  52E6               	movf	postinc1,f,c
  4576  003214  52E6               	movf	postinc1,f,c
  4577  003216  52E6               	movf	postinc1,f,c
  4578  003218  52E6               	movf	postinc1,f,c
  4579                           
  4580                           ;stkvar	_dest @ sp[(-4)+-2]
  4581                           
  4582                           ;incstack = 0
  4583  00321A  0EFA               	movlw	-6
  4584  00321C  006F FF8C  F041    	movff	plusw1,btemp+10
  4585  003222  0EFB               	movlw	-5
  4586  003224  006F FF8C  F042    	movff	plusw1,btemp+11
  4587                           
  4588                           ;stkvar	_s @ sp[(-4)+0]
  4589  00322A  0EFD               	movlw	-3
  4590  00322C  0060  F10B  FFE3   	movff	btemp+11,plusw1
  4591  003232  0EFC               	movlw	-4
  4592  003234  0060  F107  FFE3   	movff	btemp+10,plusw1
  4593                           
  4594                           ;stkvar	_n @ sp[(-4)+-6]
  4595  00323A  0EF6               	movlw	-10
  4596  00323C  006F FF8C  F037    	movff	plusw1,btemp
  4597  003242  0EF7               	movlw	-9
  4598  003244  50E3               	movf	plusw1,w,c
  4599  003246  1037               	iorwf	btemp,w,c
  4600  003248  B4D8               	btfsc	status,2,c
  4601  00324A  D154               	goto	u4510
  4602                           
  4603                           ;stkvar	_c @ sp[(-4)+-4]
  4604                           ;stkvar	_s @ sp[(-4)+0]
  4605  00324C  0EFC               	movlw	-4
  4606  00324E  006F FF8F FFD9     	movff	plusw1,fsr2l
  4607  003254  0EFD               	movlw	-3
  4608  003256  006F FF8F FFDA     	movff	plusw1,fsr2h
  4609  00325C  0EF8               	movlw	-8
  4610  00325E  006F FF8F FFDF     	movff	plusw1,indf2
  4611                           
  4612                           ;stkvar	_c @ sp[(-4)+-4]
  4613                           ;stkvar	_n @ sp[(-4)+-6]
  4614                           ;stkvar	_s @ sp[(-4)+0]
  4615  003264  0EFC               	movlw	-4
  4616  003266  006F FF8C  F041    	movff	plusw1,btemp+10
  4617  00326C  0EFD               	movlw	-3
  4618  00326E  006F FF8C  F042    	movff	plusw1,btemp+11
  4619  003274  0EF6               	movlw	-10
  4620  003276  50E3               	movf	plusw1,w,c
  4621  003278  2641               	addwf	btemp+10,f,c
  4622  00327A  0EF7               	movlw	-9
  4623  00327C  50E3               	movf	plusw1,w,c
  4624  00327E  2242               	addwfc	btemp+11,f,c
  4625  003280  0EFF               	movlw	255
  4626  003282  2441               	addwf	btemp+10,w,c
  4627  003284  6ED9               	movwf	fsr2l,c
  4628  003286  0EFF               	movlw	255
  4629  003288  2042               	addwfc	btemp+11,w,c
  4630  00328A  6EDA               	movwf	fsr2h,c
  4631  00328C  0EF8               	movlw	-8
  4632  00328E  006F FF8F FFDF     	movff	plusw1,indf2
  4633                           
  4634                           ;stkvar	_n @ sp[(-4)+-6]
  4635  003294  0EF7               	movlw	-9
  4636  003296  50E3               	movf	plusw1,w,c
  4637  003298  E108               	bnz	l6334
  4638  00329A  0EF6               	movlw	-10
  4639  00329C  006F FF8C  F037    	movff	plusw1,btemp
  4640  0032A2  0E03               	movlw	3
  4641  0032A4  5E37               	subwf	btemp,f,c
  4642  0032A6  A0D8               	btfss	status,0,c
  4643  0032A8  D125               	goto	u4510
  4644  0032AA                     l6334:
  4645                           
  4646                           ;stkvar	_c @ sp[(-4)+-4]
  4647                           ;stkvar	_s @ sp[(-4)+0]
  4648  0032AA  0EFC               	movlw	-4
  4649  0032AC  006F FF8C  F041    	movff	plusw1,btemp+10
  4650  0032B2  0EFD               	movlw	-3
  4651  0032B4  006F FF8C  F042    	movff	plusw1,btemp+11
  4652  0032BA  0E01               	movlw	1
  4653  0032BC  2441               	addwf	btemp+10,w,c
  4654  0032BE  6ED9               	movwf	fsr2l,c
  4655  0032C0  0E00               	movlw	0
  4656  0032C2  2042               	addwfc	btemp+11,w,c
  4657  0032C4  6EDA               	movwf	fsr2h,c
  4658  0032C6  0EF8               	movlw	-8
  4659  0032C8  006F FF8F FFDF     	movff	plusw1,indf2
  4660                           
  4661                           ;stkvar	_c @ sp[(-4)+-4]
  4662                           ;stkvar	_s @ sp[(-4)+0]
  4663  0032CE  0EFC               	movlw	-4
  4664  0032D0  006F FF8C  F041    	movff	plusw1,btemp+10
  4665  0032D6  0EFD               	movlw	-3
  4666  0032D8  006F FF8C  F042    	movff	plusw1,btemp+11
  4667  0032DE  0E02               	movlw	2
  4668  0032E0  2441               	addwf	btemp+10,w,c
  4669  0032E2  6ED9               	movwf	fsr2l,c
  4670  0032E4  0E00               	movlw	0
  4671  0032E6  2042               	addwfc	btemp+11,w,c
  4672  0032E8  6EDA               	movwf	fsr2h,c
  4673  0032EA  0EF8               	movlw	-8
  4674  0032EC  006F FF8F FFDF     	movff	plusw1,indf2
  4675                           
  4676                           ;stkvar	_c @ sp[(-4)+-4]
  4677                           ;stkvar	_n @ sp[(-4)+-6]
  4678                           ;stkvar	_s @ sp[(-4)+0]
  4679  0032F2  0EFC               	movlw	-4
  4680  0032F4  006F FF8C  F041    	movff	plusw1,btemp+10
  4681  0032FA  0EFD               	movlw	-3
  4682  0032FC  006F FF8C  F042    	movff	plusw1,btemp+11
  4683  003302  0EF6               	movlw	-10
  4684  003304  50E3               	movf	plusw1,w,c
  4685  003306  2641               	addwf	btemp+10,f,c
  4686  003308  0EF7               	movlw	-9
  4687  00330A  50E3               	movf	plusw1,w,c
  4688  00330C  2242               	addwfc	btemp+11,f,c
  4689  00330E  0EFE               	movlw	254
  4690  003310  2441               	addwf	btemp+10,w,c
  4691  003312  6ED9               	movwf	fsr2l,c
  4692  003314  0EFF               	movlw	255
  4693  003316  2042               	addwfc	btemp+11,w,c
  4694  003318  6EDA               	movwf	fsr2h,c
  4695  00331A  0EF8               	movlw	-8
  4696  00331C  006F FF8F FFDF     	movff	plusw1,indf2
  4697                           
  4698                           ;stkvar	_c @ sp[(-4)+-4]
  4699                           ;stkvar	_n @ sp[(-4)+-6]
  4700                           ;stkvar	_s @ sp[(-4)+0]
  4701  003322  0EFC               	movlw	-4
  4702  003324  006F FF8C  F041    	movff	plusw1,btemp+10
  4703  00332A  0EFD               	movlw	-3
  4704  00332C  006F FF8C  F042    	movff	plusw1,btemp+11
  4705  003332  0EF6               	movlw	-10
  4706  003334  50E3               	movf	plusw1,w,c
  4707  003336  2641               	addwf	btemp+10,f,c
  4708  003338  0EF7               	movlw	-9
  4709  00333A  50E3               	movf	plusw1,w,c
  4710  00333C  2242               	addwfc	btemp+11,f,c
  4711  00333E  0EFD               	movlw	253
  4712  003340  2441               	addwf	btemp+10,w,c
  4713  003342  6ED9               	movwf	fsr2l,c
  4714  003344  0EFF               	movlw	255
  4715  003346  2042               	addwfc	btemp+11,w,c
  4716  003348  6EDA               	movwf	fsr2h,c
  4717  00334A  0EF8               	movlw	-8
  4718  00334C  006F FF8F FFDF     	movff	plusw1,indf2
  4719                           
  4720                           ;stkvar	_n @ sp[(-4)+-6]
  4721  003352  0EF7               	movlw	-9
  4722  003354  50E3               	movf	plusw1,w,c
  4723  003356  E108               	bnz	l6340
  4724  003358  0EF6               	movlw	-10
  4725  00335A  006F FF8C  F037    	movff	plusw1,btemp
  4726  003360  0E07               	movlw	7
  4727  003362  5E37               	subwf	btemp,f,c
  4728  003364  A0D8               	btfss	status,0,c
  4729  003366  D0C6               	goto	u4510
  4730  003368                     l6340:
  4731                           
  4732                           ;stkvar	_c @ sp[(-4)+-4]
  4733                           ;stkvar	_s @ sp[(-4)+0]
  4734  003368  0EFC               	movlw	-4
  4735  00336A  006F FF8C  F041    	movff	plusw1,btemp+10
  4736  003370  0EFD               	movlw	-3
  4737  003372  006F FF8C  F042    	movff	plusw1,btemp+11
  4738  003378  0E03               	movlw	3
  4739  00337A  2441               	addwf	btemp+10,w,c
  4740  00337C  6ED9               	movwf	fsr2l,c
  4741  00337E  0E00               	movlw	0
  4742  003380  2042               	addwfc	btemp+11,w,c
  4743  003382  6EDA               	movwf	fsr2h,c
  4744  003384  0EF8               	movlw	-8
  4745  003386  006F FF8F FFDF     	movff	plusw1,indf2
  4746                           
  4747                           ;stkvar	_c @ sp[(-4)+-4]
  4748                           ;stkvar	_n @ sp[(-4)+-6]
  4749                           ;stkvar	_s @ sp[(-4)+0]
  4750  00338C  0EFC               	movlw	-4
  4751  00338E  006F FF8C  F041    	movff	plusw1,btemp+10
  4752  003394  0EFD               	movlw	-3
  4753  003396  006F FF8C  F042    	movff	plusw1,btemp+11
  4754  00339C  0EF6               	movlw	-10
  4755  00339E  50E3               	movf	plusw1,w,c
  4756  0033A0  2641               	addwf	btemp+10,f,c
  4757  0033A2  0EF7               	movlw	-9
  4758  0033A4  50E3               	movf	plusw1,w,c
  4759  0033A6  2242               	addwfc	btemp+11,f,c
  4760  0033A8  0EFC               	movlw	252
  4761  0033AA  2441               	addwf	btemp+10,w,c
  4762  0033AC  6ED9               	movwf	fsr2l,c
  4763  0033AE  0EFF               	movlw	255
  4764  0033B0  2042               	addwfc	btemp+11,w,c
  4765  0033B2  6EDA               	movwf	fsr2h,c
  4766  0033B4  0EF8               	movlw	-8
  4767  0033B6  006F FF8F FFDF     	movff	plusw1,indf2
  4768                           
  4769                           ;stkvar	_n @ sp[(-4)+-6]
  4770  0033BC  0EF7               	movlw	-9
  4771  0033BE  50E3               	movf	plusw1,w,c
  4772  0033C0  E108               	bnz	l6346
  4773  0033C2  0EF6               	movlw	-10
  4774  0033C4  006F FF8C  F037    	movff	plusw1,btemp
  4775  0033CA  0E09               	movlw	9
  4776  0033CC  5E37               	subwf	btemp,f,c
  4777  0033CE  A0D8               	btfss	status,0,c
  4778  0033D0  D091               	goto	u4510
  4779  0033D2                     l6346:
  4780                           
  4781                           ;stkvar	_s @ sp[(-4)+0]
  4782  0033D2  0EFC               	movlw	-4
  4783  0033D4  006F FF8C  F041    	movff	plusw1,btemp+10
  4784  0033DA  1E41               	comf	btemp+10,f,c
  4785  0033DC  0EFD               	movlw	-3
  4786  0033DE  006F FF8C  F042    	movff	plusw1,btemp+11
  4787  0033E4  1E42               	comf	btemp+11,f,c
  4788  0033E6  2A41               	incf	btemp+10,f,c
  4789  0033E8  B4D8               	btfsc	status,2,c
  4790  0033EA  2A42               	incf	btemp+11,f,c
  4791  0033EC  0E03               	movlw	3
  4792  0033EE  1641               	andwf	btemp+10,f,c
  4793  0033F0  0E00               	movlw	0
  4794  0033F2  1642               	andwf	btemp+11,f,c
  4795                           
  4796                           ;stkvar	_k @ sp[(-4)+2]
  4797  0033F4  0EFE               	movlw	-2
  4798  0033F6  0060  F107  FFE3   	movff	btemp+10,plusw1
  4799  0033FC  0EFF               	movlw	-1
  4800  0033FE  0060  F10B  FFE3   	movff	btemp+11,plusw1
  4801                           
  4802                           ;stkvar	_k @ sp[(-4)+2]
  4803                           ;stkvar	_s @ sp[(-4)+0]
  4804  003404  0EFC               	movlw	-4
  4805  003406  50E3               	movf	plusw1,w,c
  4806  003408  6E37               	movwf	btemp,c
  4807  00340A  0EFE               	movlw	-2
  4808  00340C  50E3               	movf	plusw1,w,c
  4809  00340E  2637               	addwf	btemp,f,c
  4810  003410  0EFC               	movlw	-4
  4811  003412  0060  F0DF  FFE3   	movff	btemp,plusw1
  4812  003418  0EFD               	movlw	-3
  4813  00341A  50E3               	movf	plusw1,w,c
  4814  00341C  6E37               	movwf	btemp,c
  4815  00341E  0EFF               	movlw	-1
  4816  003420  50E3               	movf	plusw1,w,c
  4817  003422  2237               	addwfc	btemp,f,c
  4818  003424  0EFD               	movlw	-3
  4819  003426  0060  F0DF  FFE3   	movff	btemp,plusw1
  4820                           
  4821                           ;stkvar	_k @ sp[(-4)+2]
  4822                           ;stkvar	_n @ sp[(-4)+-6]
  4823  00342C  0EF6               	movlw	-10
  4824  00342E  50E3               	movf	plusw1,w,c
  4825  003430  6E37               	movwf	btemp,c
  4826  003432  0EFE               	movlw	-2
  4827  003434  50E3               	movf	plusw1,w,c
  4828  003436  5E37               	subwf	btemp,f,c
  4829  003438  0EF6               	movlw	-10
  4830  00343A  0060  F0DF  FFE3   	movff	btemp,plusw1
  4831  003440  0EF7               	movlw	-9
  4832  003442  50E3               	movf	plusw1,w,c
  4833  003444  6E37               	movwf	btemp,c
  4834  003446  0EFF               	movlw	-1
  4835  003448  50E3               	movf	plusw1,w,c
  4836  00344A  5A37               	subwfb	btemp,f,c
  4837  00344C  0EF7               	movlw	-9
  4838  00344E  0060  F0DF  FFE3   	movff	btemp,plusw1
  4839  003454  0EFC               	movlw	252
  4840  003456  6E41               	movwf	btemp+10,c
  4841  003458  0EFF               	movlw	255
  4842  00345A  6E42               	movwf	btemp+11,c
  4843                           
  4844                           ;stkvar	_n @ sp[(-4)+-6]
  4845  00345C  0EF6               	movlw	-10
  4846  00345E  006F FF8C  F037    	movff	plusw1,btemp
  4847  003464  5041               	movf	btemp+10,w,c
  4848  003466  1637               	andwf	btemp,f,c
  4849  003468  0EF6               	movlw	-10
  4850  00346A  0060  F0DF  FFE3   	movff	btemp,plusw1
  4851  003470  0EF7               	movlw	-9
  4852  003472  006F FF8C  F037    	movff	plusw1,btemp
  4853  003478  5042               	movf	btemp+11,w,c
  4854  00347A  1637               	andwf	btemp,f,c
  4855  00347C  0EF7               	movlw	-9
  4856  00347E  D02E               	goto	L17
  4857  003480                     l6354:
  4858                           
  4859                           ;stkvar	_c @ sp[(-4)+-4]
  4860                           ;stkvar	_s @ sp[(-4)+0]
  4861  003480  0EFC               	movlw	-4
  4862  003482  006F FF8F FFD9     	movff	plusw1,fsr2l
  4863  003488  0EFD               	movlw	-3
  4864  00348A  006F FF8F FFDA     	movff	plusw1,fsr2h
  4865  003490  0EF8               	movlw	-8
  4866  003492  006F FF8F FFDF     	movff	plusw1,indf2
  4867                           
  4868                           ;stkvar	_n @ sp[(-4)+-6]
  4869  003498  0EF6               	movlw	-10
  4870  00349A  006F FF8C  F037    	movff	plusw1,btemp
  4871  0034A0  0E01               	movlw	1
  4872  0034A2  5E37               	subwf	btemp,f,c
  4873  0034A4  0EF6               	movlw	-10
  4874  0034A6  0060  F0DF  FFE3   	movff	btemp,plusw1
  4875  0034AC  0EF7               	movlw	-9
  4876  0034AE  006F FF8C  F037    	movff	plusw1,btemp
  4877  0034B4  0E00               	movlw	0
  4878  0034B6  5A37               	subwfb	btemp,f,c
  4879  0034B8  0EF7               	movlw	-9
  4880  0034BA  0060  F0DF  FFE3   	movff	btemp,plusw1
  4881                           
  4882                           ;stkvar	_s @ sp[(-4)+0]
  4883  0034C0  0EFC               	movlw	-4
  4884  0034C2  50E3               	movf	plusw1,w,c
  4885  0034C4  0F01               	addlw	1
  4886  0034C6  6E37               	movwf	btemp,c
  4887  0034C8  0EFC               	movlw	-4
  4888  0034CA  0060  F0DF  FFE3   	movff	btemp,plusw1
  4889  0034D0  6A37               	clrf	btemp,c
  4890  0034D2  0EFD               	movlw	-3
  4891  0034D4  50E3               	movf	plusw1,w,c
  4892  0034D6  2037               	addwfc	btemp,w,c
  4893  0034D8  6E37               	movwf	btemp,c
  4894  0034DA  0EFD               	movlw	-3
  4895  0034DC                     L17:
  4896  0034DC  0060  F0DF  FFE3   	movff	btemp,plusw1
  4897                           
  4898                           ;stkvar	_n @ sp[(-4)+-6]
  4899  0034E2  0EF6               	movlw	-10
  4900  0034E4  006F FF8C  F037    	movff	plusw1,btemp
  4901  0034EA  0EF7               	movlw	-9
  4902  0034EC  50E3               	movf	plusw1,w,c
  4903  0034EE  1037               	iorwf	btemp,w,c
  4904  0034F0  A4D8               	btfss	status,2,c
  4905  0034F2  D7C6               	goto	l6354
  4906  0034F4                     u4510:
  4907                           
  4908                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  4909  0034F4  0EF6               	movlw	246
  4910  0034F6  26E1               	addwf	fsr1l,f,c
  4911  0034F8  0EFF               	movlw	255
  4912  0034FA  22E2               	addwfc	fsr1h,f,c
  4913  0034FC  0012               	return		;funcret
  4914  0034FE                     __end_of_memset:
  4915                           	opt callstack 0
  4916                           
  4917 ;; *************** function _printf *****************
  4918 ;; Defined at:
  4919 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;  fmt             1  [STACK] PTR const unsigned char 
  4922 ;;		 -> STR_7(3), STR_6(3), 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  ap              2  [STACK] PTR void [1]
  4925 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4926 ;;  ret             2    0        int 
  4927 ;; Return value:  Size  Location     Type
  4928 ;;                  2  [STACK] int 
  4929 ;; Registers used:
  4930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  4931 ;; Tracked objects:
  4932 ;;		On entry : 3F/3B
  4933 ;;		On exit  : 0/0
  4934 ;;		Unchanged: 0/0
  4935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4940 ;;Total ram usage:        0 bytes
  4941 ;; Hardware stack levels used:    1
  4942 ;; Hardware stack levels required when called:   11
  4943 ;; This function calls:
  4944 ;;		_vfprintf
  4945 ;; This function is called by:
  4946 ;;		_eaDogM_WriteString
  4947 ;; This function uses a reentrant model
  4948 ;;
  4949                           
  4950                           	psect	text27
  4951  004E74                     __ptext27:
  4952                           	opt callstack 0
  4953  004E74                     _printf:
  4954                           	opt callstack 0
  4955                           
  4956                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4957  004E74  52E6               	movf	postinc1,f,c
  4958  004E76  52E6               	movf	postinc1,f,c
  4959                           
  4960                           ;stkvar	?_printf @ sp[(-2)+-3]
  4961                           
  4962                           ;incstack = 0
  4963  004E78  0EFB               	movlw	251
  4964  004E7A  24E1               	addwf	fsr1l,w,c
  4965  004E7C  6E41               	movwf	btemp+10,c
  4966  004E7E  0EFF               	movlw	255
  4967  004E80  20E2               	addwfc	fsr1h,w,c
  4968  004E82  6E42               	movwf	btemp+11,c
  4969  004E84  0E01               	movlw	1
  4970  004E86  2641               	addwf	btemp+10,f,c
  4971  004E88  0E00               	movlw	0
  4972  004E8A  2242               	addwfc	btemp+11,f,c
  4973                           
  4974                           ;stkvar	_ap @ sp[(-2)+0]
  4975  004E8C  0EFF               	movlw	-1
  4976  004E8E  0060  F10B  FFE3   	movff	btemp+11,plusw1
  4977  004E94  0EFE               	movlw	-2
  4978  004E96  0060  F107  FFE3   	movff	btemp+10,plusw1
  4979                           
  4980                           ;stkvar	_ap @ sp[(-2)+0]
  4981  004E9C  0EFE               	movlw	254
  4982  004E9E  24E1               	addwf	fsr1l,w,c
  4983  004EA0  6E37               	movwf	btemp,c
  4984  004EA2  0EFF               	movlw	255
  4985  004EA4  20E2               	addwfc	fsr1h,w,c
  4986  004EA6  6E38               	movwf	btemp+1,c
  4987  004EA8  0060  F0DF  FFE6   	movff	btemp,postinc1
  4988  004EAE  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  4989                           
  4990                           ;stkvar	_fmt @ sp[(-4)+-2]
  4991  004EB4  0EFA               	movlw	-6
  4992  004EB6  50E3               	movf	plusw1,w,c
  4993  004EB8  6EE6               	movwf	postinc1,c
  4994  004EBA  0E00               	movlw	0
  4995  004EBC  6EE6               	movwf	postinc1,c
  4996  004EBE  0E00               	movlw	0
  4997  004EC0  6EE6               	movwf	postinc1,c
  4998  004EC2  EC46  F025         	call	_vfprintf	;wreg free
  4999                           
  5000                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  5001  004EC6  52E5               	movf	postdec1,f,c
  5002  004EC8  52E5               	movf	postdec1,f,c
  5003  004ECA  52E5               	movf	postdec1,f,c
  5004  004ECC  50E7               	movf	indf1,w,c
  5005  004ECE  5EE1               	subwf	fsr1l,f,c
  5006  004ED0  0E00               	movlw	0
  5007  004ED2  5AE2               	subwfb	fsr1h,f,c
  5008  004ED4  0012               	return		;funcret
  5009  004ED6                     __end_of_printf:
  5010                           	opt callstack 0
  5011                           
  5012 ;; *************** function _vfprintf *****************
  5013 ;; Defined at:
  5014 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;  fp              2  [STACK] PTR struct _IO_FILE
  5017 ;;		 -> f(5), NULL(0), 
  5018 ;;  fmt             1  [STACK] PTR const unsigned char 
  5019 ;;		 -> STR_7(3), STR_6(3), STR_5(19), STR_4(6), 
  5020 ;;		 -> STR_3(10), STR_2(12), STR_1(61), 
  5021 ;;  ap              2  [STACK] PTR PTR void 
  5022 ;;		 -> ap(2), ap(2), 
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;  cfmt            1  [STACK] PTR unsigned char 
  5025 ;;		 -> STR_7(3), STR_6(3), STR_5(19), STR_4(6), 
  5026 ;;		 -> STR_3(10), STR_2(12), STR_1(61), 
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  2  [STACK] int 
  5029 ;; Registers used:
  5030 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/3D
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5040 ;;Total ram usage:        0 bytes
  5041 ;; Hardware stack levels used:    1
  5042 ;; Hardware stack levels required when called:   10
  5043 ;; This function calls:
  5044 ;;		_vfpfcnvrt
  5045 ;; This function is called by:
  5046 ;;		_sprintf
  5047 ;;		_printf
  5048 ;; This function uses a reentrant model
  5049 ;;
  5050                           
  5051                           	psect	text28
  5052  004A8C                     __ptext28:
  5053                           	opt callstack 0
  5054  004A8C                     _vfprintf:
  5055                           	opt callstack 0
  5056                           
  5057                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5058  004A8C  52E6               	movf	postinc1,f,c
  5059                           
  5060                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  5061                           ;stkvar	_fmt @ sp[(-1)+-3]
  5062                           
  5063                           ;incstack = 0
  5064  004A8E  0EFC               	movlw	-4
  5065  004A90  006F FF8C  F042    	movff	plusw1,btemp+11
  5066                           
  5067                           ;stkvar	_cfmt @ sp[(-1)+0]
  5068  004A96  0EFF               	movlw	-1
  5069  004A98  0060  F10B  FFE3   	movff	btemp+11,plusw1
  5070                           
  5071                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  5072  004A9E  6A20               	clrf	_nout,c
  5073  004AA0  6A21               	clrf	_nout+1,c
  5074                           
  5075                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  5076  004AA2  D020               	goto	l6368
  5077  004AA4                     l6366:
  5078                           
  5079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  5080                           ;stkvar	_ap @ sp[(-1)+-5]
  5081  004AA4  0EFA               	movlw	-6
  5082  004AA6  006F FF8F FFE6     	movff	plusw1,postinc1
  5083  004AAC  006F FF8F FFE6     	movff	plusw1,postinc1
  5084                           
  5085                           ;stkvar	_cfmt @ sp[(-3)+0]
  5086  004AB2  0EFD               	movlw	253
  5087  004AB4  24E1               	addwf	fsr1l,w,c
  5088  004AB6  6E37               	movwf	btemp,c
  5089  004AB8  0EFF               	movlw	255
  5090  004ABA  20E2               	addwfc	fsr1h,w,c
  5091  004ABC  6E38               	movwf	btemp+1,c
  5092  004ABE  0060  F0DF  FFE6   	movff	btemp,postinc1
  5093  004AC4  0060  F0E3  FFE6   	movff	btemp+1,postinc1
  5094                           
  5095                           ;stkvar	_fp @ sp[(-5)+-2]
  5096  004ACA  0EF9               	movlw	-7
  5097  004ACC  006F FF8F FFE6     	movff	plusw1,postinc1
  5098  004AD2  006F FF8F FFE6     	movff	plusw1,postinc1
  5099  004AD8  EC33  F010         	call	_vfpfcnvrt	;wreg free
  5100  004ADC  5037               	movf	btemp,w,c
  5101  004ADE  2620               	addwf	_nout,f,c
  5102  004AE0  5038               	movf	btemp+1,w,c
  5103  004AE2  2221               	addwfc	_nout+1,f,c
  5104  004AE4                     l6368:
  5105                           
  5106                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  5107                           ;stkvar	_cfmt @ sp[(-1)+0]
  5108  004AE4  50E1               	movf	fsr1l,w,c
  5109  004AE6  0FFF               	addlw	-1
  5110  004AE8  6ED9               	movwf	fsr2l,c
  5111  004AEA  50E2               	movf	fsr1h,w,c
  5112  004AEC  6EDA               	movwf	fsr2h,c
  5113  004AEE  0EFF               	movlw	255
  5114  004AF0  22DA               	addwfc	fsr2h,f,c
  5115  004AF2  006F FF7F FFF6     	movff	indf2,tblptrl
  5116  004AF8                     	if	1	;There is more than 1 active tblptr byte
  5117  004AF8  0E20               	movlw	high __smallconst
  5118  004AFA  6EF7               	movwf	tblptrh,c
  5119  004AFC                     	endif
  5120  004AFC                     	if	0	;tblptru may be non-zero
  5121  004AFC                     	endif
  5122  004AFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5123  004AFC  0E00               	movlw	low (__smallconst shr (0+16))
  5124  004AFE  6EF8               	movwf	tblptru,c
  5125  004B00                     	endif
  5126  004B00  0008               	tblrd		*
  5127  004B02  50F5               	movf	tablat,w,c
  5128  004B04  0900               	iorlw	0
  5129  004B06  A4D8               	btfss	status,2,c
  5130  004B08  D7CD               	goto	l6366
  5131                           
  5132                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  5133  004B0A  0060  F080  F037   	movff	_nout,btemp
  5134  004B10  0060  F084  F038   	movff	_nout+1,btemp+1
  5135                           
  5136                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  5137  004B16  0EFA               	movlw	250
  5138  004B18  26E1               	addwf	fsr1l,f,c
  5139  004B1A  0EFF               	movlw	255
  5140  004B1C  22E2               	addwfc	fsr1h,f,c
  5141  004B1E  0012               	return		;funcret
  5142  004B20                     __end_of_vfprintf:
  5143                           	opt callstack 0
  5144                           
  5145 ;; *************** function _vfpfcnvrt *****************
  5146 ;; Defined at:
  5147 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5148 ;; Parameters:    Size  Location     Type
  5149 ;;  fp              2  [STACK] PTR struct _IO_FILE
  5150 ;;		 -> f(5), NULL(0), 
  5151 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  5152 ;;		 -> cfmt(1), 
  5153 ;;  ap              2  [STACK] PTR PTR void 
  5154 ;;		 -> ap(2), ap(2), 
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;  llu             8  [STACK] unsigned long long 
  5157 ;;  ll              8  [STACK] long long 
  5158 ;;  f               4    0        long long 
  5159 ;;  vp              3    0        PTR void 
  5160 ;;  ct              3    0        unsigned char [3]
  5161 ;;  done            2  [STACK] int 
  5162 ;;  cp              2  [STACK] PTR unsigned char 
  5163 ;;		 -> ?_printf(2), ?_sprintf(2), V(79), 
  5164 ;;  i               2    0        int 
  5165 ;;  c               1  [STACK] unsigned char 
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  2  [STACK] int 
  5168 ;; Registers used:
  5169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/3D
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5179 ;;Total ram usage:        0 bytes
  5180 ;; Hardware stack levels used:    1
  5181 ;; Hardware stack levels required when called:    9
  5182 ;; This function calls:
  5183 ;;		_atoi
  5184 ;;		_dtoa
  5185 ;;		_fputc
  5186 ;;		_isdigit
  5187 ;;		_stoa
  5188 ;;		_xtoa
  5189 ;; This function is called by:
  5190 ;;		_vfprintf
  5191 ;; This function uses a reentrant model
  5192 ;;
  5193                           
  5194                           	psect	text29
  5195  002066                     __ptext29:
  5196                           	opt callstack 0
  5197  002066                     _vfpfcnvrt:
  5198                           	opt callstack 0
  5199                           
  5200                           ; autosize = 23, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5201  002066  0E17               	movlw	23
  5202  002068  26E1               	addwf	fsr1l,f,c
  5203  00206A  0E00               	movlw	0
  5204  00206C  22E2               	addwfc	fsr1h,f,c
  5205                           
  5206                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  5207                           ;stkvar	_fmt @ sp[(-23)+-4]
  5208                           
  5209                           ;incstack = 0
  5210  00206E  0EE5               	movlw	-27
  5211  002070  006F FF8F FFD9     	movff	plusw1,fsr2l
  5212  002076  0EE6               	movlw	-26
  5213  002078  006F FF8F FFDA     	movff	plusw1,fsr2h
  5214  00207E  006F FF7F FFF6     	movff	indf2,tblptrl
  5215  002084                     	if	1	;There is more than 1 active tblptr byte
  5216  002084  0E20               	movlw	high __smallconst
  5217  002086  6EF7               	movwf	tblptrh,c
  5218  002088                     	endif
  5219  002088                     	if	0	;tblptru may be non-zero
  5220  002088                     	endif
  5221  002088                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5222  002088  0E00               	movlw	low (__smallconst shr (0+16))
  5223  00208A  6EF8               	movwf	tblptru,c
  5224  00208C                     	endif
  5225  00208C  0008               	tblrd		*
  5226  00208E  50F5               	movf	tablat,w,c
  5227  002090  0A25               	xorlw	37
  5228  002092  A4D8               	btfss	status,2,c
  5229  002094  D2DF               	goto	l6308
  5230                           
  5231                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  5232                           ;stkvar	_fmt @ sp[(-23)+-4]
  5233  002096  0EE5               	movlw	-27
  5234  002098  006F FF8F FFD9     	movff	plusw1,fsr2l
  5235  00209E  0EE6               	movlw	-26
  5236  0020A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  5237  0020A6  2ADF               	incf	indf2,f,c
  5238                           
  5239                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  5240  0020A8  6A22               	clrf	_width,c
  5241  0020AA  6A23               	clrf	_width+1,c
  5242  0020AC  6A26               	clrf	_flags,c
  5243  0020AE  6A27               	clrf	_flags+1,c
  5244                           
  5245                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  5246  0020B0  6824               	setf	_prec,c
  5247  0020B2  6825               	setf	_prec+1,c
  5248                           
  5249                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 688:         done = 0;
  5250                           ;stkvar	_done @ sp[(-23)+18]
  5251  0020B4  0EFB               	movlw	-5
  5252  0020B6  6AE3               	clrf	plusw1,c
  5253  0020B8  0EFC               	movlw	-4
  5254  0020BA  6AE3               	clrf	plusw1,c
  5255                           
  5256                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  5257  0020BC  D048               	goto	l6232
  5258  0020BE                     l6206:
  5259                           
  5260                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 692:                     flag
      +                          s |= (1 << 0);
  5261  0020BE  8026               	bsf	_flags,0,c
  5262  0020C0                     l6208:
  5263                           
  5264                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 693:                     ++*f
      +                          mt;
  5265                           ;stkvar	_fmt @ sp[(-23)+-4]
  5266  0020C0  0EE5               	movlw	-27
  5267  0020C2  006F FF8F FFD9     	movff	plusw1,fsr2l
  5268  0020C8  0EE6               	movlw	-26
  5269  0020CA  006F FF8F FFDA     	movff	plusw1,fsr2h
  5270  0020D0  2ADF               	incf	indf2,f,c
  5271                           
  5272                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 694:                     brea
      +                          k;
  5273  0020D2  D03D               	goto	l6232
  5274  0020D4                     l6210:
  5275                           
  5276                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 696:                     flag
      +                          s |= (1 << 1);
  5277  0020D4  8226               	bsf	_flags,1,c
  5278  0020D6  D7F4               	goto	l6208
  5279  0020D8                     l6214:
  5280                           
  5281                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 700:                     flag
      +                          s |= (1 << 2);
  5282  0020D8  8426               	bsf	_flags,2,c
  5283  0020DA  D7F2               	goto	l6208
  5284  0020DC                     l6218:
  5285                           
  5286                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 704:                     flag
      +                          s |= (1 << 3);
  5287  0020DC  8626               	bsf	_flags,3,c
  5288  0020DE  D7F0               	goto	l6208
  5289  0020E0                     l6222:
  5290                           
  5291                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 708:                     flag
      +                          s |= (1 << 4);
  5292  0020E0  8826               	bsf	_flags,4,c
  5293  0020E2  D7EE               	goto	l6208
  5294  0020E4                     l6226:
  5295                           
  5296                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 712:                     done
      +                           = 1;
  5297  0020E4  0E01               	movlw	1
  5298  0020E6  6E41               	movwf	btemp+10,c
  5299  0020E8  0E00               	movlw	0
  5300  0020EA  6E42               	movwf	btemp+11,c
  5301                           
  5302                           ;stkvar	_done @ sp[(-23)+18]
  5303  0020EC  0EFB               	movlw	-5
  5304  0020EE  0060  F107  FFE3   	movff	btemp+10,plusw1
  5305  0020F4  0EFC               	movlw	-4
  5306  0020F6  0060  F10B  FFE3   	movff	btemp+11,plusw1
  5307                           
  5308                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 713:                     brea
      +                          k;
  5309  0020FC  D028               	goto	l6232
  5310  0020FE                     l6230:
  5311                           
  5312                           ;stkvar	_fmt @ sp[(-23)+-4]
  5313  0020FE  0EE5               	movlw	-27
  5314  002100  006F FF8F FFD9     	movff	plusw1,fsr2l
  5315  002106  0EE6               	movlw	-26
  5316  002108  006F FF8F FFDA     	movff	plusw1,fsr2h
  5317  00210E  006F FF7F FFF6     	movff	indf2,tblptrl
  5318  002114                     	if	1	;There is more than 1 active tblptr byte
  5319  002114  0E20               	movlw	high __smallconst
  5320  002116  6EF7               	movwf	tblptrh,c
  5321  002118                     	endif
  5322  002118                     	if	0	;tblptru may be non-zero
  5323  002118                     	endif
  5324  002118                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5325  002118  0E00               	movlw	low (__smallconst shr (0+16))
  5326  00211A  6EF8               	movwf	tblptru,c
  5327  00211C                     	endif
  5328  00211C  0008               	tblrd		*
  5329  00211E  50F5               	movf	tablat,w,c
  5330  002120  6E41               	movwf	btemp+10,c
  5331  002122  6A42               	clrf	btemp+11,c
  5332                           
  5333                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5334                           ; Switch size 1, requested type "simple"
  5335                           ; Number of cases is 1, Range of values is 0 to 0
  5336                           ; switch strategies available:
  5337                           ; Name         Instructions Cycles
  5338                           ; simple_byte            4     3 (average)
  5339                           ;	Chosen strategy is simple_byte
  5340  002124  5042               	movf	btemp+11,w,c
  5341  002126  0A00               	xorlw	0	; case 0
  5342  002128  A4D8               	btfss	status,2,c
  5343  00212A  D7DC               	goto	l6226
  5344                           
  5345                           ; Switch size 1, requested type "simple"
  5346                           ; Number of cases is 5, Range of values is 32 to 48
  5347                           ; switch strategies available:
  5348                           ; Name         Instructions Cycles
  5349                           ; simple_byte           16     9 (average)
  5350                           ;	Chosen strategy is simple_byte
  5351  00212C  5041               	movf	btemp+10,w,c
  5352  00212E  0A20               	xorlw	32	; case 32
  5353  002130  B4D8               	btfsc	status,2,c
  5354  002132  D7D4               	goto	l6218
  5355  002134  0A03               	xorlw	3	; case 35
  5356  002136  B4D8               	btfsc	status,2,c
  5357  002138  D7D3               	goto	l6222
  5358  00213A  0A08               	xorlw	8	; case 43
  5359  00213C  B4D8               	btfsc	status,2,c
  5360  00213E  D7CC               	goto	l6214
  5361  002140  0A06               	xorlw	6	; case 45
  5362  002142  B4D8               	btfsc	status,2,c
  5363  002144  D7BC               	goto	l6206
  5364  002146  0A1D               	xorlw	29	; case 48
  5365  002148  B4D8               	btfsc	status,2,c
  5366  00214A  D7C4               	goto	l6210
  5367  00214C  D7CB               	goto	l6226
  5368  00214E                     l6232:
  5369                           
  5370                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 689:         while (!done) {
  5371                           ;stkvar	_done @ sp[(-23)+18]
  5372  00214E  0EFB               	movlw	-5
  5373  002150  006F FF8C  F037    	movff	plusw1,btemp
  5374  002156  0EFC               	movlw	-4
  5375  002158  50E3               	movf	plusw1,w,c
  5376  00215A  1037               	iorwf	btemp,w,c
  5377  00215C  B4D8               	btfsc	status,2,c
  5378  00215E  D7CF               	goto	l6230
  5379                           
  5380                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 716:         if (flags & (1 <
      +                          < 0)) {
  5381  002160  B026               	btfsc	_flags,0,c
  5382                           
  5383                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 717:             flags &= ~(1
      +                           << 1);
  5384  002162  9226               	bcf	_flags,1,c
  5385                           
  5386                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  5387                           ;stkvar	_fmt @ sp[(-23)+-4]
  5388  002164  0EE5               	movlw	-27
  5389  002166  006F FF8F FFD9     	movff	plusw1,fsr2l
  5390  00216C  0EE6               	movlw	-26
  5391  00216E  006F FF8F FFDA     	movff	plusw1,fsr2h
  5392  002174  006F FF7F FFF6     	movff	indf2,tblptrl
  5393  00217A                     	if	1	;There is more than 1 active tblptr byte
  5394  00217A  0E20               	movlw	high __smallconst
  5395  00217C  6EF7               	movwf	tblptrh,c
  5396  00217E                     	endif
  5397  00217E                     	if	0	;tblptru may be non-zero
  5398  00217E                     	endif
  5399  00217E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5400  00217E  0E00               	movlw	low (__smallconst shr (0+16))
  5401  002180  6EF8               	movwf	tblptru,c
  5402  002182                     	endif
  5403  002182  0008               	tblrd		*
  5404  002184  50F5               	movf	tablat,w,c
  5405  002186  0A2A               	xorlw	42
  5406  002188  A4D8               	btfss	status,2,c
  5407  00218A  D02F               	goto	l6246
  5408                           
  5409                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  5410                           ;stkvar	_fmt @ sp[(-23)+-4]
  5411  00218C  0EE5               	movlw	-27
  5412  00218E  006F FF8F FFD9     	movff	plusw1,fsr2l
  5413  002194  0EE6               	movlw	-26
  5414  002196  006F FF8F FFDA     	movff	plusw1,fsr2h
  5415  00219C  2ADF               	incf	indf2,f,c
  5416                           
  5417                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  5418                           ;stkvar	_ap @ sp[(-23)+-6]
  5419  00219E  0EE3               	movlw	-29
  5420  0021A0  006F FF8F FFD9     	movff	plusw1,fsr2l
  5421  0021A6  0EE4               	movlw	-28
  5422  0021A8  006F FF8F FFDA     	movff	plusw1,fsr2h
  5423  0021AE  0E02               	movlw	2
  5424  0021B0  5EDE               	subwf	postinc2,f,c
  5425  0021B2  0E00               	movlw	0
  5426  0021B4  5ADD               	subwfb	postdec2,f,c
  5427  0021B6  006F FF78  F041    	movff	postinc2,btemp+10
  5428  0021BC  006F FF74  F042    	movff	postdec2,btemp+11
  5429  0021C2  0060  F107  FFD9   	movff	btemp+10,fsr2l
  5430  0021C8  0060  F10B  FFDA   	movff	btemp+11,fsr2h
  5431  0021CE  006F FF78  F022    	movff	postinc2,_width
  5432  0021D4  006F FF74  F023    	movff	postdec2,_width+1
  5433                           
  5434                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  5435  0021DA  AE23               	btfss	_width+1,7,c
  5436  0021DC  D059               	goto	u4400
  5437                           
  5438                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  5439  0021DE  8026               	bsf	_flags,0,c
  5440                           
  5441                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  5442  0021E0  6C22               	negf	_width,c
  5443  0021E2  1E23               	comf	_width+1,f,c
  5444  0021E4  B0D8               	btfsc	status,0,c
  5445  0021E6  2A23               	incf	_width+1,f,c
  5446  0021E8  D053               	goto	u4400
  5447  0021EA                     l6246:
  5448                           
  5449                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  5450                           ;stkvar	_fmt @ sp[(-23)+-4]
  5451  0021EA  0EE5               	movlw	-27
  5452  0021EC  006F FF8F FFD9     	movff	plusw1,fsr2l
  5453  0021F2  0EE6               	movlw	-26
  5454  0021F4  006F FF8F FFDA     	movff	plusw1,fsr2h
  5455  0021FA  50DF               	movf	indf2,w,c
  5456  0021FC  6EE6               	movwf	postinc1,c
  5457  0021FE  EC47  F01F         	call	_atoi	;wreg free
  5458  002202  0060  F0DC  F022   	movff	btemp,_width
  5459  002208  0060  F0E0  F023   	movff	btemp+1,_width+1
  5460                           
  5461                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5462  00220E  D009               	goto	l6250
  5463  002210                     l6248:
  5464                           
  5465                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  5466                           ;stkvar	_fmt @ sp[(-23)+-4]
  5467  002210  0EE5               	movlw	-27
  5468  002212  006F FF8F FFD9     	movff	plusw1,fsr2l
  5469  002218  0EE6               	movlw	-26
  5470  00221A  006F FF8F FFDA     	movff	plusw1,fsr2h
  5471  002220  2ADF               	incf	indf2,f,c
  5472  002222                     l6250:
  5473  002222  0ED0               	movlw	208
  5474  002224  6E41               	movwf	btemp+10,c
  5475  002226  0EFF               	movlw	255
  5476  002228  6E42               	movwf	btemp+11,c
  5477                           
  5478                           ;stkvar	_fmt @ sp[(-23)+-4]
  5479  00222A  0EE5               	movlw	-27
  5480  00222C  006F FF8F FFD9     	movff	plusw1,fsr2l
  5481  002232  0EE6               	movlw	-26
  5482  002234  006F FF8F FFDA     	movff	plusw1,fsr2h
  5483  00223A  006F FF7F FFF6     	movff	indf2,tblptrl
  5484  002240                     	if	1	;There is more than 1 active tblptr byte
  5485  002240  0E20               	movlw	high __smallconst
  5486  002242  6EF7               	movwf	tblptrh,c
  5487  002244                     	endif
  5488  002244                     	if	0	;tblptru may be non-zero
  5489  002244                     	endif
  5490  002244                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5491  002244  0E00               	movlw	low (__smallconst shr (0+16))
  5492  002246  6EF8               	movwf	tblptru,c
  5493  002248                     	endif
  5494  002248  0008               	tblrd		*
  5495  00224A  50F5               	movf	tablat,w,c
  5496  00224C  6E3F               	movwf	btemp+8,c
  5497  00224E  6A40               	clrf	btemp+9,c
  5498  002250  5041               	movf	btemp+10,w,c
  5499  002252  263F               	addwf	btemp+8,f,c
  5500  002254  5042               	movf	btemp+11,w,c
  5501  002256  2240               	addwfc	btemp+9,f,c
  5502  002258  5040               	movf	btemp+9,w,c
  5503  00225A  E106               	bnz	u4380
  5504  00225C  0E0A               	movlw	10
  5505  00225E  5C3F               	subwf	btemp+8,w,c
  5506  002260  B0D8               	btfsc	status,0,c
  5507  002262  D002               	goto	u4380
  5508  002264  0E01               	movlw	1
  5509  002266  D001               	goto	u4390
  5510  002268                     u4380:
  5511  002268  0E00               	movlw	0
  5512  00226A                     u4390:
  5513  00226A  6E41               	movwf	btemp+10,c
  5514  00226C  6A42               	clrf	btemp+11,c
  5515                           
  5516                           ;stkvar	_vfpfcnvrt$3424 @ sp[(-23)+0]
  5517  00226E  0EE9               	movlw	-23
  5518  002270  0060  F107  FFE3   	movff	btemp+10,plusw1
  5519  002276  0EEA               	movlw	-22
  5520  002278  0060  F10B  FFE3   	movff	btemp+11,plusw1
  5521                           
  5522                           ;stkvar	_vfpfcnvrt$3424 @ sp[(-23)+0]
  5523  00227E  0EE9               	movlw	-23
  5524  002280  006F FF8C  F037    	movff	plusw1,btemp
  5525  002286  0EEA               	movlw	-22
  5526  002288  50E3               	movf	plusw1,w,c
  5527  00228A  1037               	iorwf	btemp,w,c
  5528  00228C  A4D8               	btfss	status,2,c
  5529  00228E  D7C0               	goto	l6248
  5530  002290                     u4400:
  5531                           
  5532                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  5533                           ;stkvar	_fmt @ sp[(-23)+-4]
  5534  002290  0EE5               	movlw	-27
  5535  002292  006F FF8F FFD9     	movff	plusw1,fsr2l
  5536  002298  0EE6               	movlw	-26
  5537  00229A  006F FF8F FFDA     	movff	plusw1,fsr2h
  5538  0022A0  006F FF7F FFF6     	movff	indf2,tblptrl
  5539  0022A6                     	if	1	;There is more than 1 active tblptr byte
  5540  0022A6  0E20               	movlw	high __smallconst
  5541  0022A8  6EF7               	movwf	tblptrh,c
  5542  0022AA                     	endif
  5543  0022AA                     	if	0	;tblptru may be non-zero
  5544  0022AA                     	endif
  5545  0022AA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5546  0022AA  0E00               	movlw	low (__smallconst shr (0+16))
  5547  0022AC  6EF8               	movwf	tblptru,c
  5548  0022AE                     	endif
  5549  0022AE  0008               	tblrd		*
  5550  0022B0  50F5               	movf	tablat,w,c
  5551  0022B2  0A64               	xorlw	100
  5552  0022B4  B4D8               	btfsc	status,2,c
  5553  0022B6  D014               	goto	u4420
  5554                           
  5555                           ;stkvar	_fmt @ sp[(-23)+-4]
  5556  0022B8  0EE5               	movlw	-27
  5557  0022BA  006F FF8F FFD9     	movff	plusw1,fsr2l
  5558  0022C0  0EE6               	movlw	-26
  5559  0022C2  006F FF8F FFDA     	movff	plusw1,fsr2h
  5560  0022C8  006F FF7F FFF6     	movff	indf2,tblptrl
  5561  0022CE                     	if	1	;There is more than 1 active tblptr byte
  5562  0022CE  0E20               	movlw	high __smallconst
  5563  0022D0  6EF7               	movwf	tblptrh,c
  5564  0022D2                     	endif
  5565  0022D2                     	if	0	;tblptru may be non-zero
  5566  0022D2                     	endif
  5567  0022D2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5568  0022D2  0E00               	movlw	low (__smallconst shr (0+16))
  5569  0022D4  6EF8               	movwf	tblptru,c
  5570  0022D6                     	endif
  5571  0022D6  0008               	tblrd		*
  5572  0022D8  50F5               	movf	tablat,w,c
  5573  0022DA  0A69               	xorlw	105
  5574  0022DC  A4D8               	btfss	status,2,c
  5575  0022DE  D073               	goto	l6268
  5576  0022E0                     u4420:
  5577                           
  5578                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  5579                           ;stkvar	_fmt @ sp[(-23)+-4]
  5580  0022E0  0EE5               	movlw	-27
  5581  0022E2  006F FF8F FFD9     	movff	plusw1,fsr2l
  5582  0022E8  0EE6               	movlw	-26
  5583  0022EA  006F FF8F FFDA     	movff	plusw1,fsr2h
  5584  0022F0  2ADF               	incf	indf2,f,c
  5585                           
  5586                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  5587                           ;stkvar	_ap @ sp[(-23)+-6]
  5588  0022F2  0EE3               	movlw	-29
  5589  0022F4  006F FF8F FFD9     	movff	plusw1,fsr2l
  5590  0022FA  0EE4               	movlw	-28
  5591  0022FC  006F FF8F FFDA     	movff	plusw1,fsr2h
  5592  002302  0E02               	movlw	2
  5593  002304  5EDE               	subwf	postinc2,f,c
  5594  002306  0E00               	movlw	0
  5595  002308  5ADD               	subwfb	postdec2,f,c
  5596  00230A  006F FF78  F041    	movff	postinc2,btemp+10
  5597  002310  006F FF74  F042    	movff	postdec2,btemp+11
  5598  002316  0060  F107  FFD9   	movff	btemp+10,fsr2l
  5599  00231C  0060  F10B  FFDA   	movff	btemp+11,fsr2h
  5600  002322  006F FF78  F041    	movff	postinc2,btemp+10
  5601  002328  006F FF74  F042    	movff	postdec2,btemp+11
  5602                           
  5603                           ;stkvar	_ll @ sp[(-23)+10]
  5604  00232E  0EF3               	movlw	-13
  5605  002330  0060  F107  FFE3   	movff	btemp+10,plusw1
  5606  002336  0EF4               	movlw	-12
  5607  002338  0060  F10B  FFE3   	movff	btemp+11,plusw1
  5608  00233E  6A37               	clrf	btemp,c
  5609  002340  BEE3               	btfsc	plusw1,7,c
  5610  002342  6837               	setf	btemp,c
  5611  002344  0EF5               	movlw	-11
  5612  002346  0060  F0DF  FFE3   	movff	btemp,plusw1
  5613  00234C  0EF6               	movlw	-10
  5614  00234E  0060  F0DF  FFE3   	movff	btemp,plusw1
  5615  002354  0EF7               	movlw	-9
  5616  002356  0060  F0DF  FFE3   	movff	btemp,plusw1
  5617  00235C  0EF8               	movlw	-8
  5618  00235E  0060  F0DF  FFE3   	movff	btemp,plusw1
  5619  002364  0EF9               	movlw	-7
  5620  002366  0060  F0DF  FFE3   	movff	btemp,plusw1
  5621  00236C  0EFA               	movlw	-6
  5622  00236E  0060  F0DF  FFE3   	movff	btemp,plusw1
  5623                           
  5624                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  5625                           ;stkvar	_ll @ sp[(-23)+10]
  5626  002374  50E1               	movf	fsr1l,w,c
  5627  002376  0FF3               	addlw	-13
  5628  002378  6ED9               	movwf	fsr2l,c
  5629  00237A  50E2               	movf	fsr1h,w,c
  5630  00237C  6EDA               	movwf	fsr2h,c
  5631  00237E  0EFF               	movlw	255
  5632  002380  22DA               	addwfc	fsr2h,f,c
  5633  002382  006F FF7B FFE6     	movff	postinc2,postinc1
  5634  002388  006F FF7B FFE6     	movff	postinc2,postinc1
  5635  00238E  006F FF7B FFE6     	movff	postinc2,postinc1
  5636  002394  006F FF7B FFE6     	movff	postinc2,postinc1
  5637  00239A  006F FF7B FFE6     	movff	postinc2,postinc1
  5638  0023A0  006F FF7B FFE6     	movff	postinc2,postinc1
  5639  0023A6  006F FF7B FFE6     	movff	postinc2,postinc1
  5640  0023AC  006F FF7B FFE6     	movff	postinc2,postinc1
  5641                           
  5642                           ;stkvar	_fp @ sp[(-31)+-2]
  5643  0023B2  0EDF               	movlw	-33
  5644  0023B4  006F FF8F FFE6     	movff	plusw1,postinc1
  5645  0023BA  006F FF8F FFE6     	movff	plusw1,postinc1
  5646  0023C0  EC56  F013         	call	_dtoa	;wreg free
  5647  0023C4  D16E               	goto	l1600
  5648  0023C6                     l6268:
  5649                           
  5650                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  5651                           ;stkvar	_fmt @ sp[(-23)+-4]
  5652  0023C6  0EE5               	movlw	-27
  5653  0023C8  006F FF8F FFD9     	movff	plusw1,fsr2l
  5654  0023CE  0EE6               	movlw	-26
  5655  0023D0  006F FF8F FFDA     	movff	plusw1,fsr2h
  5656  0023D6  006F FF7F FFF6     	movff	indf2,tblptrl
  5657  0023DC                     	if	1	;There is more than 1 active tblptr byte
  5658  0023DC  0E20               	movlw	high __smallconst
  5659  0023DE  6EF7               	movwf	tblptrh,c
  5660  0023E0                     	endif
  5661  0023E0                     	if	0	;tblptru may be non-zero
  5662  0023E0                     	endif
  5663  0023E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5664  0023E0  0E00               	movlw	low (__smallconst shr (0+16))
  5665  0023E2  6EF8               	movwf	tblptru,c
  5666  0023E4                     	endif
  5667  0023E4  0008               	tblrd		*
  5668  0023E6  50F5               	movf	tablat,w,c
  5669  0023E8  0A73               	xorlw	115
  5670  0023EA  A4D8               	btfss	status,2,c
  5671  0023EC  D040               	goto	l6278
  5672                           
  5673                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  5674                           ;stkvar	_fmt @ sp[(-23)+-4]
  5675  0023EE  0EE5               	movlw	-27
  5676  0023F0  006F FF8F FFD9     	movff	plusw1,fsr2l
  5677  0023F6  0EE6               	movlw	-26
  5678  0023F8  006F FF8F FFDA     	movff	plusw1,fsr2h
  5679  0023FE  2ADF               	incf	indf2,f,c
  5680                           
  5681                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  5682                           ;stkvar	_ap @ sp[(-23)+-6]
  5683  002400  0EE3               	movlw	-29
  5684  002402  006F FF8F FFD9     	movff	plusw1,fsr2l
  5685  002408  0EE4               	movlw	-28
  5686  00240A  006F FF8F FFDA     	movff	plusw1,fsr2h
  5687  002410  0E02               	movlw	2
  5688  002412  5EDE               	subwf	postinc2,f,c
  5689  002414  0E00               	movlw	0
  5690  002416  5ADD               	subwfb	postdec2,f,c
  5691  002418  006F FF78  F041    	movff	postinc2,btemp+10
  5692  00241E  006F FF74  F042    	movff	postdec2,btemp+11
  5693  002424  0060  F107  FFD9   	movff	btemp+10,fsr2l
  5694  00242A  0060  F10B  FFDA   	movff	btemp+11,fsr2h
  5695  002430  006F FF78  F041    	movff	postinc2,btemp+10
  5696  002436  006F FF74  F042    	movff	postdec2,btemp+11
  5697                           
  5698                           ;stkvar	_cp @ sp[(-23)+20]
  5699  00243C  0EFE               	movlw	-2
  5700  00243E  0060  F10B  FFE3   	movff	btemp+11,plusw1
  5701  002444  0EFD               	movlw	-3
  5702  002446  0060  F107  FFE3   	movff	btemp+10,plusw1
  5703                           
  5704                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  5705                           ;stkvar	_cp @ sp[(-23)+20]
  5706  00244C  0EFD               	movlw	-3
  5707  00244E  006F FF8F FFE6     	movff	plusw1,postinc1
  5708  002454  006F FF8F FFE6     	movff	plusw1,postinc1
  5709                           
  5710                           ;stkvar	_fp @ sp[(-25)+-2]
  5711  00245A  0EE5               	movlw	-27
  5712  00245C  006F FF8F FFE6     	movff	plusw1,postinc1
  5713  002462  006F FF8F FFE6     	movff	plusw1,postinc1
  5714  002468  EC7F  F01A         	call	_stoa	;wreg free
  5715  00246C  D11A               	goto	l1600
  5716  00246E                     l6278:
  5717                           
  5718                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  5719                           ;stkvar	_fmt @ sp[(-23)+-4]
  5720  00246E  0EE5               	movlw	-27
  5721  002470  006F FF8F FFD9     	movff	plusw1,fsr2l
  5722  002476  0EE6               	movlw	-26
  5723  002478  006F FF8F FFDA     	movff	plusw1,fsr2h
  5724  00247E  006F FF7F FFF6     	movff	indf2,tblptrl
  5725  002484                     	if	1	;There is more than 1 active tblptr byte
  5726  002484  0E20               	movlw	high __smallconst
  5727  002486  6EF7               	movwf	tblptrh,c
  5728  002488                     	endif
  5729  002488                     	if	0	;tblptru may be non-zero
  5730  002488                     	endif
  5731  002488                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5732  002488  0E00               	movlw	low (__smallconst shr (0+16))
  5733  00248A  6EF8               	movwf	tblptru,c
  5734  00248C                     	endif
  5735  00248C  0008               	tblrd		*
  5736  00248E  50F5               	movf	tablat,w,c
  5737  002490  0A78               	xorlw	120
  5738  002492  B4D8               	btfsc	status,2,c
  5739  002494  D014               	goto	u4450
  5740                           
  5741                           ;stkvar	_fmt @ sp[(-23)+-4]
  5742  002496  0EE5               	movlw	-27
  5743  002498  006F FF8F FFD9     	movff	plusw1,fsr2l
  5744  00249E  0EE6               	movlw	-26
  5745  0024A0  006F FF8F FFDA     	movff	plusw1,fsr2h
  5746  0024A6  006F FF7F FFF6     	movff	indf2,tblptrl
  5747  0024AC                     	if	1	;There is more than 1 active tblptr byte
  5748  0024AC  0E20               	movlw	high __smallconst
  5749  0024AE  6EF7               	movwf	tblptrh,c
  5750  0024B0                     	endif
  5751  0024B0                     	if	0	;tblptru may be non-zero
  5752  0024B0                     	endif
  5753  0024B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5754  0024B0  0E00               	movlw	low (__smallconst shr (0+16))
  5755  0024B2  6EF8               	movwf	tblptru,c
  5756  0024B4                     	endif
  5757  0024B4  0008               	tblrd		*
  5758  0024B6  50F5               	movf	tablat,w,c
  5759  0024B8  0A58               	xorlw	88
  5760  0024BA  A4D8               	btfss	status,2,c
  5761  0024BC  D091               	goto	l6292
  5762  0024BE                     u4450:
  5763                           
  5764                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  5765                           ;stkvar	_fmt @ sp[(-23)+-4]
  5766  0024BE  0EE5               	movlw	-27
  5767  0024C0  006F FF8F FFD9     	movff	plusw1,fsr2l
  5768  0024C6  0EE6               	movlw	-26
  5769  0024C8  006F FF8F FFDA     	movff	plusw1,fsr2h
  5770  0024CE  006F FF7F FFF6     	movff	indf2,tblptrl
  5771  0024D4                     	if	1	;There is more than 1 active tblptr byte
  5772  0024D4  0E20               	movlw	high __smallconst
  5773  0024D6  6EF7               	movwf	tblptrh,c
  5774  0024D8                     	endif
  5775  0024D8                     	if	0	;tblptru may be non-zero
  5776  0024D8                     	endif
  5777  0024D8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5778  0024D8  0E00               	movlw	low (__smallconst shr (0+16))
  5779  0024DA  6EF8               	movwf	tblptru,c
  5780  0024DC                     	endif
  5781                           
  5782                           ;stkvar	_c @ sp[(-23)+22]
  5783  0024DC  0008               	tblrd		*
  5784  0024DE  0EFF               	movlw	-1
  5785  0024E0  006F FFD7 FFE3     	movff	tablat,plusw1
  5786                           
  5787                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  5788                           ;stkvar	_fmt @ sp[(-23)+-4]
  5789  0024E6  0EE5               	movlw	-27
  5790  0024E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  5791  0024EE  0EE6               	movlw	-26
  5792  0024F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  5793  0024F6  2ADF               	incf	indf2,f,c
  5794                           
  5795                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  5796                           ;stkvar	_ap @ sp[(-23)+-6]
  5797  0024F8  0EE3               	movlw	-29
  5798  0024FA  006F FF8F FFD9     	movff	plusw1,fsr2l
  5799  002500  0EE4               	movlw	-28
  5800  002502  006F FF8F FFDA     	movff	plusw1,fsr2h
  5801  002508  0E02               	movlw	2
  5802  00250A  5EDE               	subwf	postinc2,f,c
  5803  00250C  0E00               	movlw	0
  5804  00250E  5ADD               	subwfb	postdec2,f,c
  5805  002510  006F FF78  F041    	movff	postinc2,btemp+10
  5806  002516  006F FF74  F042    	movff	postdec2,btemp+11
  5807  00251C  0060  F107  FFD9   	movff	btemp+10,fsr2l
  5808  002522  0060  F10B  FFDA   	movff	btemp+11,fsr2h
  5809  002528  006F FF78  F041    	movff	postinc2,btemp+10
  5810  00252E  006F FF74  F042    	movff	postdec2,btemp+11
  5811  002534  5041               	movf	btemp+10,w,c
  5812  002536  6E47               	movwf	btemp+16,c
  5813  002538  5042               	movf	btemp+11,w,c
  5814  00253A  6E48               	movwf	btemp+17,c
  5815  00253C  6A49               	clrf	btemp+18,c
  5816  00253E  6A4A               	clrf	btemp+19,c
  5817  002540  6A4B               	clrf	btemp+20,c
  5818  002542  6A4C               	clrf	btemp+21,c
  5819  002544  6A4D               	clrf	btemp+22,c
  5820  002546  6A4E               	clrf	btemp+23,c
  5821                           
  5822                           ;stkvar	_llu @ sp[(-23)+2]
  5823  002548  0EEB               	movlw	-21
  5824  00254A  0060  F11F  FFE3   	movff	btemp+16,plusw1
  5825  002550  0EEC               	movlw	-20
  5826  002552  0060  F123  FFE3   	movff	btemp+17,plusw1
  5827  002558  0EED               	movlw	-19
  5828  00255A  0060  F127  FFE3   	movff	btemp+18,plusw1
  5829  002560  0EEE               	movlw	-18
  5830  002562  0060  F12B  FFE3   	movff	btemp+19,plusw1
  5831  002568  0EEF               	movlw	-17
  5832  00256A  0060  F12F  FFE3   	movff	btemp+20,plusw1
  5833  002570  0EF0               	movlw	-16
  5834  002572  0060  F133  FFE3   	movff	btemp+21,plusw1
  5835  002578  0EF1               	movlw	-15
  5836  00257A  0060  F137  FFE3   	movff	btemp+22,plusw1
  5837  002580  0EF2               	movlw	-14
  5838  002582  0060  F13B  FFE3   	movff	btemp+23,plusw1
  5839                           
  5840                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  5841                           ;stkvar	_c @ sp[(-23)+22]
  5842  002588  0EFF               	movlw	-1
  5843  00258A  50E3               	movf	plusw1,w,c
  5844  00258C  6EE6               	movwf	postinc1,c
  5845                           
  5846                           ;stkvar	_llu @ sp[(-24)+2]
  5847  00258E  50E1               	movf	fsr1l,w,c
  5848  002590  0FEA               	addlw	-22
  5849  002592  6ED9               	movwf	fsr2l,c
  5850  002594  50E2               	movf	fsr1h,w,c
  5851  002596  6EDA               	movwf	fsr2h,c
  5852  002598  0EFF               	movlw	255
  5853  00259A  22DA               	addwfc	fsr2h,f,c
  5854  00259C  006F FF7B FFE6     	movff	postinc2,postinc1
  5855  0025A2  006F FF7B FFE6     	movff	postinc2,postinc1
  5856  0025A8  006F FF7B FFE6     	movff	postinc2,postinc1
  5857  0025AE  006F FF7B FFE6     	movff	postinc2,postinc1
  5858  0025B4  006F FF7B FFE6     	movff	postinc2,postinc1
  5859  0025BA  006F FF7B FFE6     	movff	postinc2,postinc1
  5860  0025C0  006F FF7B FFE6     	movff	postinc2,postinc1
  5861  0025C6  006F FF7B FFE6     	movff	postinc2,postinc1
  5862                           
  5863                           ;stkvar	_fp @ sp[(-32)+-2]
  5864  0025CC  0EDE               	movlw	-34
  5865  0025CE  006F FF8F FFE6     	movff	plusw1,postinc1
  5866  0025D4  006F FF8F FFE6     	movff	plusw1,postinc1
  5867  0025DA  EC96  F015         	call	_xtoa	;wreg free
  5868  0025DE  D061               	goto	l1600
  5869  0025E0                     l6292:
  5870                           
  5871                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  5872                           ;stkvar	_fmt @ sp[(-23)+-4]
  5873  0025E0  0EE5               	movlw	-27
  5874  0025E2  006F FF8F FFD9     	movff	plusw1,fsr2l
  5875  0025E8  0EE6               	movlw	-26
  5876  0025EA  006F FF8F FFDA     	movff	plusw1,fsr2h
  5877  0025F0  006F FF7F FFF6     	movff	indf2,tblptrl
  5878  0025F6                     	if	1	;There is more than 1 active tblptr byte
  5879  0025F6  0E20               	movlw	high __smallconst
  5880  0025F8  6EF7               	movwf	tblptrh,c
  5881  0025FA                     	endif
  5882  0025FA                     	if	0	;tblptru may be non-zero
  5883  0025FA                     	endif
  5884  0025FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5885  0025FA  0E00               	movlw	low (__smallconst shr (0+16))
  5886  0025FC  6EF8               	movwf	tblptru,c
  5887  0025FE                     	endif
  5888  0025FE  0008               	tblrd		*
  5889  002600  50F5               	movf	tablat,w,c
  5890  002602  0A25               	xorlw	37
  5891  002604  A4D8               	btfss	status,2,c
  5892  002606  D018               	goto	l6302
  5893                           
  5894                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  5895                           ;stkvar	_fmt @ sp[(-23)+-4]
  5896  002608  0EE5               	movlw	-27
  5897  00260A  006F FF8F FFD9     	movff	plusw1,fsr2l
  5898  002610  0EE6               	movlw	-26
  5899  002612  006F FF8F FFDA     	movff	plusw1,fsr2h
  5900  002618  2ADF               	incf	indf2,f,c
  5901                           
  5902                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  5903                           ;stkvar	_fp @ sp[(-23)+-2]
  5904  00261A  0EE7               	movlw	-25
  5905  00261C  006F FF8F FFE6     	movff	plusw1,postinc1
  5906  002622  006F FF8F FFE6     	movff	plusw1,postinc1
  5907  002628  0E25               	movlw	37
  5908  00262A  6EE6               	movwf	postinc1,c
  5909  00262C  0E00               	movlw	0
  5910  00262E  6EE6               	movwf	postinc1,c
  5911  002630  EC47  F022         	call	_fputc	;wreg free
  5912  002634                     l6298:
  5913                           
  5914                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  5915  002634  0E01               	movlw	1
  5916  002636  D00A               	goto	L18
  5917  002638                     l6302:
  5918                           
  5919                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  5920                           ;stkvar	_fmt @ sp[(-23)+-4]
  5921  002638  0EE5               	movlw	-27
  5922  00263A  006F FF8F FFD9     	movff	plusw1,fsr2l
  5923  002640  0EE6               	movlw	-26
  5924  002642  006F FF8F FFDA     	movff	plusw1,fsr2h
  5925  002648  2ADF               	incf	indf2,f,c
  5926                           
  5927                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  5928  00264A  0E00               	movlw	0
  5929  00264C                     L18:
  5930  00264C  6E37               	movwf	btemp,c
  5931  00264E  0E00               	movlw	0
  5932  002650  6E38               	movwf	btemp+1,c
  5933  002652  D027               	goto	l1600
  5934  002654                     l6308:
  5935                           
  5936                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  5937                           ;stkvar	_fp @ sp[(-23)+-2]
  5938  002654  0EE7               	movlw	-25
  5939  002656  006F FF8F FFE6     	movff	plusw1,postinc1
  5940  00265C  006F FF8F FFE6     	movff	plusw1,postinc1
  5941                           
  5942                           ;stkvar	_fmt @ sp[(-25)+-4]
  5943  002662  0EE3               	movlw	-29
  5944  002664  006F FF8F FFD9     	movff	plusw1,fsr2l
  5945  00266A  0EE4               	movlw	-28
  5946  00266C  006F FF8F FFDA     	movff	plusw1,fsr2h
  5947  002672  006F FF7F FFF6     	movff	indf2,tblptrl
  5948  002678                     	if	1	;There is more than 1 active tblptr byte
  5949  002678  0E20               	movlw	high __smallconst
  5950  00267A  6EF7               	movwf	tblptrh,c
  5951  00267C                     	endif
  5952  00267C                     	if	0	;tblptru may be non-zero
  5953  00267C                     	endif
  5954  00267C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5955  00267C  0E00               	movlw	low (__smallconst shr (0+16))
  5956  00267E  6EF8               	movwf	tblptru,c
  5957  002680                     	endif
  5958  002680  0008               	tblrd		*
  5959  002682  50F5               	movf	tablat,w,c
  5960  002684  6EE6               	movwf	postinc1,c
  5961  002686  0E00               	movlw	0
  5962  002688  6EE6               	movwf	postinc1,c
  5963  00268A  EC47  F022         	call	_fputc	;wreg free
  5964                           
  5965                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  5966                           ;stkvar	_fmt @ sp[(-23)+-4]
  5967  00268E  0EE5               	movlw	-27
  5968  002690  006F FF8F FFD9     	movff	plusw1,fsr2l
  5969  002696  0EE6               	movlw	-26
  5970  002698  006F FF8F FFDA     	movff	plusw1,fsr2h
  5971  00269E  2ADF               	incf	indf2,f,c
  5972  0026A0  D7C9               	goto	l6298
  5973  0026A2                     l1600:
  5974                           
  5975                           ; _vfpfcnvrt: autosize = 23, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  5976  0026A2  0EE3               	movlw	227
  5977  0026A4  26E1               	addwf	fsr1l,f,c
  5978  0026A6  0EFF               	movlw	255
  5979  0026A8  22E2               	addwfc	fsr1h,f,c
  5980  0026AA  0012               	return		;funcret
  5981  0026AC                     __end_of_vfpfcnvrt:
  5982                           	opt callstack 0
  5983                           
  5984 ;; *************** function _xtoa *****************
  5985 ;; Defined at:
  5986 ;;		line 623 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  fp              2  [STACK] PTR struct _IO_FILE
  5989 ;;		 -> f(5), NULL(0), 
  5990 ;;  d               8  [STACK] unsigned long long 
  5991 ;;  x               1  [STACK] unsigned char 
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  n               8  [STACK] unsigned long long 
  5994 ;;  c               2  [STACK] int 
  5995 ;;  i               2  [STACK] int 
  5996 ;;  w               2  [STACK] int 
  5997 ;;  p               2  [STACK] int 
  5998 ;; Return value:  Size  Location     Type
  5999 ;;                  2  [STACK] int 
  6000 ;; Registers used:
  6001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
  6002 ;; Tracked objects:
  6003 ;;		On entry : 0/3D
  6004 ;;		On exit  : 0/0
  6005 ;;		Unchanged: 0/0
  6006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6011 ;;Total ram usage:        0 bytes
  6012 ;; Hardware stack levels used:    1
  6013 ;; Hardware stack levels required when called:    8
  6014 ;; This function calls:
  6015 ;;		_isalpha
  6016 ;;		_isupper
  6017 ;;		_pad
  6018 ;;		_toupper
  6019 ;; This function is called by:
  6020 ;;		_vfpfcnvrt
  6021 ;; This function uses a reentrant model
  6022 ;;
  6023                           
  6024                           	psect	text30
  6025  002B2C                     __ptext30:
  6026                           	opt callstack 0
  6027  002B2C                     _xtoa:
  6028                           	opt callstack 0
  6029                           
  6030                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  6031  002B2C  0E14               	movlw	20
  6032  002B2E  26E1               	addwf	fsr1l,f,c
  6033  002B30  0E00               	movlw	0
  6034  002B32  22E2               	addwfc	fsr1h,f,c
  6035                           
  6036                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  6037                           
  6038                           ;incstack = 0
  6039  002B34  AE25               	btfss	_prec+1,7,c
  6040                           
  6041                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  6042  002B36  9226               	bcf	_flags,1,c
  6043                           
  6044                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  6045  002B38  BE25               	btfsc	_prec+1,7,c
  6046  002B3A  D005               	goto	u4160
  6047  002B3C  5025               	movf	_prec+1,w,c
  6048  002B3E  E110               	bnz	l6132
  6049  002B40  0424               	decf	_prec,w,c
  6050  002B42  B0D8               	btfsc	status,0,c
  6051  002B44  D00D               	goto	l6132
  6052  002B46                     u4160:
  6053  002B46  0E01               	movlw	1
  6054  002B48  6E41               	movwf	btemp+10,c
  6055  002B4A  0E00               	movlw	0
  6056  002B4C  6E42               	movwf	btemp+11,c
  6057                           
  6058                           ;stkvar	_p @ sp[(-20)+18]
  6059  002B4E  0EFE               	movlw	-2
  6060  002B50  0060  F107  FFE3   	movff	btemp+10,plusw1
  6061  002B56  0EFF               	movlw	-1
  6062  002B58  0060  F10B  FFE3   	movff	btemp+11,plusw1
  6063  002B5E  D008               	goto	l1548
  6064  002B60                     l6132:
  6065                           
  6066                           ;stkvar	_p @ sp[(-20)+18]
  6067  002B60  0EFE               	movlw	-2
  6068  002B62  0060  F093  FFE3   	movff	_prec,plusw1
  6069  002B68  0EFF               	movlw	-1
  6070  002B6A  0060  F097  FFE3   	movff	_prec+1,plusw1
  6071  002B70                     l1548:
  6072                           
  6073                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 633:     w = width;
  6074                           ;stkvar	_w @ sp[(-20)+16]
  6075  002B70  0EFC               	movlw	-4
  6076  002B72  0060  F08B  FFE3   	movff	_width,plusw1
  6077  002B78  0EFD               	movlw	-3
  6078  002B7A  0060  F08F  FFE3   	movff	_width+1,plusw1
  6079                           
  6080                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  6081  002B80  A826               	btfss	_flags,4,c
  6082  002B82  D00B               	goto	l6138
  6083                           
  6084                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  6085                           ;stkvar	_w @ sp[(-20)+16]
  6086  002B84  50E1               	movf	fsr1l,w,c
  6087  002B86  0FFC               	addlw	-4
  6088  002B88  6ED9               	movwf	fsr2l,c
  6089  002B8A  50E2               	movf	fsr1h,w,c
  6090  002B8C  6EDA               	movwf	fsr2h,c
  6091  002B8E  0EFF               	movlw	255
  6092  002B90  22DA               	addwfc	fsr2h,f,c
  6093  002B92  0EFE               	movlw	254
  6094  002B94  26DE               	addwf	postinc2,f,c
  6095  002B96  0EFF               	movlw	255
  6096  002B98  22DD               	addwfc	postdec2,f,c
  6097  002B9A                     l6138:
  6098                           
  6099                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 639:     n = d;
  6100                           ;stkvar	_d @ sp[(-20)+-10]
  6101  002B9A  0EE2               	movlw	226
  6102  002B9C  24E1               	addwf	fsr1l,w,c
  6103  002B9E  6ED9               	movwf	fsr2l,c
  6104  002BA0  0EFF               	movlw	255
  6105  002BA2  20E2               	addwfc	fsr1h,w,c
  6106  002BA4  6EDA               	movwf	fsr2h,c
  6107                           
  6108                           ;stkvar	_n @ sp[(-20)+4]
  6109  002BA6  0E08               	movlw	8
  6110  002BA8  6E37               	movwf	btemp,c
  6111  002BAA  0EF0               	movlw	-16
  6112  002BAC                     us418999:
  6113  002BAC  006F FF7B FFE3     	movff	postinc2,plusw1
  6114  002BB2  28E8               	incf	wreg,w,c
  6115  002BB4  2E37               	decfsz	btemp,f,c
  6116  002BB6  D7FA               	bra	us418999
  6117                           
  6118                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  6119  002BB8  0E1F               	movlw	31
  6120  002BBA  6E41               	movwf	btemp+10,c
  6121  002BBC  0E00               	movlw	0
  6122  002BBE  6E42               	movwf	btemp+11,c
  6123                           
  6124                           ;stkvar	_i @ sp[(-20)+14]
  6125  002BC0  0EFA               	movlw	-6
  6126  002BC2  0060  F107  FFE3   	movff	btemp+10,plusw1
  6127  002BC8  0EFB               	movlw	-5
  6128  002BCA  0060  F10B  FFE3   	movff	btemp+11,plusw1
  6129                           
  6130                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  6131  002BD0  0101               	movlb	1	; () banked
  6132  002BD2  6BDF               	clrf	(_dbuf+31)& (0+255),b
  6133                           
  6134                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6135  002BD4  D0EE               	goto	l6176
  6136  002BD6                     l6144:
  6137                           
  6138                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 643:         --i;
  6139                           ;stkvar	_i @ sp[(-20)+14]
  6140  002BD6  50E1               	movf	fsr1l,w,c
  6141  002BD8  0FFA               	addlw	-6
  6142  002BDA  6ED9               	movwf	fsr2l,c
  6143  002BDC  50E2               	movf	fsr1h,w,c
  6144  002BDE  6EDA               	movwf	fsr2h,c
  6145  002BE0  0EFF               	movlw	255
  6146  002BE2  22DA               	addwfc	fsr2h,f,c
  6147  002BE4  06DE               	decf	postinc2,f,c
  6148  002BE6  0E00               	movlw	0
  6149  002BE8  5ADD               	subwfb	postdec2,f,c
  6150                           
  6151                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  6152                           ;stkvar	_n @ sp[(-20)+4]
  6153  002BEA  0EF0               	movlw	-16
  6154  002BEC  006F FF8C  F041    	movff	plusw1,btemp+10
  6155  002BF2  0EF1               	movlw	-15
  6156  002BF4  006F FF8C  F042    	movff	plusw1,btemp+11
  6157  002BFA  0E0F               	movlw	15
  6158  002BFC  1641               	andwf	btemp+10,f,c
  6159  002BFE  0E00               	movlw	0
  6160  002C00  1642               	andwf	btemp+11,f,c
  6161                           
  6162                           ;stkvar	_c @ sp[(-20)+12]
  6163  002C02  0EF8               	movlw	-8
  6164  002C04  0060  F107  FFE3   	movff	btemp+10,plusw1
  6165  002C0A  0EF9               	movlw	-7
  6166  002C0C  0060  F10B  FFE3   	movff	btemp+11,plusw1
  6167                           
  6168                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  6169                           ;stkvar	_c @ sp[(-20)+12]
  6170  002C12  0EF9               	movlw	-7
  6171  002C14  BEE3               	btfsc	plusw1,7,c
  6172  002C16  D00F               	goto	l6152
  6173  002C18  0EF9               	movlw	-7
  6174  002C1A  50E3               	movf	plusw1,w,c
  6175  002C1C  E108               	bnz	u4190
  6176  002C1E  0EF8               	movlw	-8
  6177  002C20  006F FF8C  F037    	movff	plusw1,btemp
  6178  002C26  0E0A               	movlw	10
  6179  002C28  5E37               	subwf	btemp,f,c
  6180  002C2A  A0D8               	btfss	status,0,c
  6181  002C2C  D004               	goto	l6152
  6182  002C2E                     u4190:
  6183                           
  6184                           ;stkvar	_c @ sp[(-20)+12]
  6185  002C2E  0EF8               	movlw	-8
  6186  002C30  50E3               	movf	plusw1,w,c
  6187  002C32  0F57               	addlw	87
  6188  002C34  D003               	goto	L19
  6189  002C36                     l6152:
  6190                           
  6191                           ;stkvar	_c @ sp[(-20)+12]
  6192  002C36  0EF8               	movlw	-8
  6193  002C38  50E3               	movf	plusw1,w,c
  6194  002C3A  0F30               	addlw	48
  6195  002C3C                     L19:
  6196  002C3C  6E41               	movwf	btemp+10,c
  6197  002C3E  0EF9               	movlw	-7
  6198  002C40  006F FF8C  F042    	movff	plusw1,btemp+11
  6199  002C46  0E00               	movlw	0
  6200  002C48  2242               	addwfc	btemp+11,f,c
  6201                           
  6202                           ;stkvar	_c @ sp[(-20)+12]
  6203  002C4A  0EF8               	movlw	-8
  6204  002C4C  0060  F107  FFE3   	movff	btemp+10,plusw1
  6205  002C52  0EF9               	movlw	-7
  6206  002C54  0060  F10B  FFE3   	movff	btemp+11,plusw1
  6207  002C5A  0EBF               	movlw	191
  6208  002C5C  6E41               	movwf	btemp+10,c
  6209  002C5E  0EFF               	movlw	255
  6210  002C60  6E42               	movwf	btemp+11,c
  6211                           
  6212                           ;stkvar	_x @ sp[(-20)+-11]
  6213  002C62  0EE1               	movlw	-31
  6214  002C64  50E3               	movf	plusw1,w,c
  6215  002C66  6E3F               	movwf	btemp+8,c
  6216  002C68  6A40               	clrf	btemp+9,c
  6217  002C6A  5041               	movf	btemp+10,w,c
  6218  002C6C  263F               	addwf	btemp+8,f,c
  6219  002C6E  5042               	movf	btemp+11,w,c
  6220  002C70  2240               	addwfc	btemp+9,f,c
  6221  002C72  5040               	movf	btemp+9,w,c
  6222  002C74  E106               	bnz	u4200
  6223  002C76  0E1A               	movlw	26
  6224  002C78  5C3F               	subwf	btemp+8,w,c
  6225  002C7A  B0D8               	btfsc	status,0,c
  6226  002C7C  D002               	goto	u4200
  6227  002C7E  0E01               	movlw	1
  6228  002C80  D001               	goto	u4210
  6229  002C82                     u4200:
  6230  002C82  0E00               	movlw	0
  6231  002C84                     u4210:
  6232  002C84  6E41               	movwf	btemp+10,c
  6233  002C86  6A42               	clrf	btemp+11,c
  6234                           
  6235                           ;stkvar	_xtoa$3409 @ sp[(-20)+2]
  6236  002C88  0EEE               	movlw	-18
  6237  002C8A  0060  F107  FFE3   	movff	btemp+10,plusw1
  6238  002C90  0EEF               	movlw	-17
  6239  002C92  0060  F10B  FFE3   	movff	btemp+11,plusw1
  6240                           
  6241                           ;stkvar	_xtoa$3409 @ sp[(-20)+2]
  6242  002C98  0EEE               	movlw	-18
  6243  002C9A  006F FF8C  F037    	movff	plusw1,btemp
  6244  002CA0  0EEF               	movlw	-17
  6245  002CA2  50E3               	movf	plusw1,w,c
  6246  002CA4  1037               	iorwf	btemp,w,c
  6247  002CA6  B4D8               	btfsc	status,2,c
  6248  002CA8  D041               	goto	l6168
  6249  002CAA  0E9F               	movlw	159
  6250  002CAC  6E41               	movwf	btemp+10,c
  6251  002CAE  0EFF               	movlw	255
  6252  002CB0  6E42               	movwf	btemp+11,c
  6253                           
  6254                           ;stkvar	_c @ sp[(-20)+12]
  6255  002CB2  0EF8               	movlw	-8
  6256  002CB4  006F FF8C  F03F    	movff	plusw1,btemp+8
  6257  002CBA  0EF9               	movlw	-7
  6258  002CBC  006F FF8C  F040    	movff	plusw1,btemp+9
  6259  002CC2  0E20               	movlw	32
  6260  002CC4  123F               	iorwf	btemp+8,f,c
  6261  002CC6  0E00               	movlw	0
  6262  002CC8  1240               	iorwf	btemp+9,f,c
  6263  002CCA  5041               	movf	btemp+10,w,c
  6264  002CCC  263F               	addwf	btemp+8,f,c
  6265  002CCE  5042               	movf	btemp+11,w,c
  6266  002CD0  2240               	addwfc	btemp+9,f,c
  6267  002CD2  5040               	movf	btemp+9,w,c
  6268  002CD4  E106               	bnz	u4230
  6269  002CD6  0E1A               	movlw	26
  6270  002CD8  5C3F               	subwf	btemp+8,w,c
  6271  002CDA  B0D8               	btfsc	status,0,c
  6272  002CDC  D002               	goto	u4230
  6273  002CDE  0E01               	movlw	1
  6274  002CE0  D001               	goto	u4240
  6275  002CE2                     u4230:
  6276  002CE2  0E00               	movlw	0
  6277  002CE4                     u4240:
  6278  002CE4  6E41               	movwf	btemp+10,c
  6279  002CE6  6A42               	clrf	btemp+11,c
  6280                           
  6281                           ;stkvar	_xtoa$3410 @ sp[(-20)+0]
  6282  002CE8  0EEC               	movlw	-20
  6283  002CEA  0060  F107  FFE3   	movff	btemp+10,plusw1
  6284  002CF0  0EED               	movlw	-19
  6285  002CF2  0060  F10B  FFE3   	movff	btemp+11,plusw1
  6286                           
  6287                           ;stkvar	_xtoa$3410 @ sp[(-20)+0]
  6288  002CF8  0EEC               	movlw	-20
  6289  002CFA  006F FF8C  F037    	movff	plusw1,btemp
  6290  002D00  0EED               	movlw	-19
  6291  002D02  50E3               	movf	plusw1,w,c
  6292  002D04  1037               	iorwf	btemp,w,c
  6293  002D06  B4D8               	btfsc	status,2,c
  6294  002D08  D011               	goto	l6168
  6295                           
  6296                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  6297                           ;stkvar	_c @ sp[(-20)+12]
  6298  002D0A  0EF8               	movlw	-8
  6299  002D0C  006F FF8F FFE6     	movff	plusw1,postinc1
  6300  002D12  006F FF8F FFE6     	movff	plusw1,postinc1
  6301  002D18  EC1C  F026         	call	_toupper	;wreg free
  6302                           
  6303                           ;stkvar	_c @ sp[(-20)+12]
  6304  002D1C  0EF8               	movlw	-8
  6305  002D1E  0060  F0DF  FFE3   	movff	btemp,plusw1
  6306  002D24  0EF9               	movlw	-7
  6307  002D26  0060  F0E3  FFE3   	movff	btemp+1,plusw1
  6308  002D2C                     l6168:
  6309                           
  6310                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  6311                           ;stkvar	_c @ sp[(-20)+12]
  6312                           ;stkvar	_i @ sp[(-20)+14]
  6313  002D2C  0EFA               	movlw	-6
  6314  002D2E  006F FF8C  F041    	movff	plusw1,btemp+10
  6315  002D34  0EFB               	movlw	-5
  6316  002D36  006F FF8C  F042    	movff	plusw1,btemp+11
  6317  002D3C  0EC0               	movlw	low _dbuf
  6318  002D3E  2441               	addwf	btemp+10,w,c
  6319  002D40  6ED9               	movwf	fsr2l,c
  6320  002D42  0E01               	movlw	high _dbuf
  6321  002D44  2042               	addwfc	btemp+11,w,c
  6322  002D46  6EDA               	movwf	fsr2h,c
  6323  002D48  0EF8               	movlw	-8
  6324  002D4A  006F FF8F FFDF     	movff	plusw1,indf2
  6325                           
  6326                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 650:         --p;
  6327                           ;stkvar	_p @ sp[(-20)+18]
  6328  002D50  50E1               	movf	fsr1l,w,c
  6329  002D52  0FFE               	addlw	-2
  6330  002D54  6ED9               	movwf	fsr2l,c
  6331  002D56  50E2               	movf	fsr1h,w,c
  6332  002D58  6EDA               	movwf	fsr2h,c
  6333  002D5A  0EFF               	movlw	255
  6334  002D5C  22DA               	addwfc	fsr2h,f,c
  6335  002D5E  06DE               	decf	postinc2,f,c
  6336  002D60  0E00               	movlw	0
  6337  002D62  5ADD               	subwfb	postdec2,f,c
  6338                           
  6339                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 651:         --w;
  6340                           ;stkvar	_w @ sp[(-20)+16]
  6341  002D64  50E1               	movf	fsr1l,w,c
  6342  002D66  0FFC               	addlw	-4
  6343  002D68  6ED9               	movwf	fsr2l,c
  6344  002D6A  50E2               	movf	fsr1h,w,c
  6345  002D6C  6EDA               	movwf	fsr2h,c
  6346  002D6E  0EFF               	movlw	255
  6347  002D70  22DA               	addwfc	fsr2h,f,c
  6348  002D72  06DE               	decf	postinc2,f,c
  6349  002D74  0E00               	movlw	0
  6350  002D76  5ADD               	subwfb	postdec2,f,c
  6351                           
  6352                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  6353  002D78  0E04               	movlw	4
  6354  002D7A  6E42               	movwf	btemp+11,c
  6355                           
  6356                           ;stkvar	_n @ sp[(-20)+4]
  6357  002D7C  50E1               	movf	fsr1l,w,c
  6358  002D7E  0FF0               	addlw	-16
  6359  002D80  6ED9               	movwf	fsr2l,c
  6360  002D82  50E2               	movf	fsr1h,w,c
  6361  002D84  6EDA               	movwf	fsr2h,c
  6362  002D86  0EFF               	movlw	255
  6363  002D88  22DA               	addwfc	fsr2h,f,c
  6364  002D8A  2842               	incf	btemp+11,w,c
  6365  002D8C  52DE               	movf	postinc2,f,c
  6366  002D8E  D00F               	goto	u4260
  6367  002D90                     u4265:
  6368  002D90  52DE               	movf	postinc2,f,c
  6369  002D92  52DE               	movf	postinc2,f,c
  6370  002D94  52DE               	movf	postinc2,f,c
  6371  002D96  52DE               	movf	postinc2,f,c
  6372  002D98  52DE               	movf	postinc2,f,c
  6373  002D9A  52DE               	movf	postinc2,f,c
  6374  002D9C  90D8               	bcf	status,0,c
  6375  002D9E  32DD               	rrcf	postdec2,f,c
  6376  002DA0  32DD               	rrcf	postdec2,f,c
  6377  002DA2  32DD               	rrcf	postdec2,f,c
  6378  002DA4  32DD               	rrcf	postdec2,f,c
  6379  002DA6  32DD               	rrcf	postdec2,f,c
  6380  002DA8  32DD               	rrcf	postdec2,f,c
  6381  002DAA  32DD               	rrcf	postdec2,f,c
  6382  002DAC  32DE               	rrcf	postinc2,f,c
  6383  002DAE                     u4260:
  6384  002DAE  2EE8               	decfsz	wreg,f,c
  6385  002DB0  D7EF               	goto	u4265
  6386  002DB2                     l6176:
  6387                           
  6388                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  6389                           ;stkvar	_i @ sp[(-20)+14]
  6390  002DB2  0EFB               	movlw	-5
  6391  002DB4  BEE3               	btfsc	plusw1,7,c
  6392  002DB6  D03A               	goto	u4310
  6393  002DB8  0EFB               	movlw	-5
  6394  002DBA  50E3               	movf	plusw1,w,c
  6395  002DBC  E108               	bnz	u4270
  6396  002DBE  0EFA               	movlw	-6
  6397  002DC0  006F FF8C  F037    	movff	plusw1,btemp
  6398  002DC6  0E02               	movlw	2
  6399  002DC8  5E37               	subwf	btemp,f,c
  6400  002DCA  A0D8               	btfss	status,0,c
  6401  002DCC  D02F               	goto	u4310
  6402  002DCE                     u4270:
  6403                           
  6404                           ;stkvar	_n @ sp[(-20)+4]
  6405  002DCE  0EF0               	movlw	-16
  6406  002DD0  50E3               	movf	plusw1,w,c
  6407  002DD2  E115               	bnz	u4281
  6408  002DD4  0EF1               	movlw	-15
  6409  002DD6  50E3               	movf	plusw1,w,c
  6410  002DD8  E112               	bnz	u4281
  6411  002DDA  0EF2               	movlw	-14
  6412  002DDC  50E3               	movf	plusw1,w,c
  6413  002DDE  E10F               	bnz	u4281
  6414  002DE0  0EF3               	movlw	-13
  6415  002DE2  50E3               	movf	plusw1,w,c
  6416  002DE4  E10C               	bnz	u4281
  6417  002DE6  0EF4               	movlw	-12
  6418  002DE8  50E3               	movf	plusw1,w,c
  6419  002DEA  E109               	bnz	u4281
  6420  002DEC  0EF5               	movlw	-11
  6421  002DEE  50E3               	movf	plusw1,w,c
  6422  002DF0  E106               	bnz	u4281
  6423  002DF2  0EF6               	movlw	-10
  6424  002DF4  50E3               	movf	plusw1,w,c
  6425  002DF6  E103               	bnz	u4281
  6426  002DF8  0EF7               	movlw	-9
  6427  002DFA  50E3               	movf	plusw1,w,c
  6428  002DFC  A4D8               	btfss	status,2,c
  6429  002DFE                     u4281:
  6430  002DFE  D6EB               	goto	l6144
  6431                           
  6432                           ;stkvar	_p @ sp[(-20)+18]
  6433  002E00  0EFF               	movlw	-1
  6434  002E02  BEE3               	btfsc	plusw1,7,c
  6435  002E04  D007               	goto	u4290
  6436  002E06  0EFF               	movlw	-1
  6437  002E08  50E3               	movf	plusw1,w,c
  6438  002E0A  E103               	bnz	u4291
  6439  002E0C  0EFE               	movlw	-2
  6440  002E0E  04E3               	decf	plusw1,w,c
  6441  002E10  B0D8               	btfsc	status,0,c
  6442  002E12                     u4291:
  6443  002E12  D6E1               	goto	l6144
  6444  002E14                     u4290:
  6445                           
  6446                           ;stkvar	_w @ sp[(-20)+16]
  6447  002E14  0EFD               	movlw	-3
  6448  002E16  BEE3               	btfsc	plusw1,7,c
  6449  002E18  D009               	goto	u4310
  6450  002E1A  0EFD               	movlw	-3
  6451  002E1C  50E3               	movf	plusw1,w,c
  6452  002E1E  E104               	bnz	u4300
  6453  002E20  0EFC               	movlw	-4
  6454  002E22  04E3               	decf	plusw1,w,c
  6455  002E24  A0D8               	btfss	status,0,c
  6456  002E26  D002               	goto	u4310
  6457  002E28                     u4300:
  6458  002E28  B226               	btfsc	_flags,1,c
  6459  002E2A  D6D5               	goto	l6144
  6460  002E2C                     u4310:
  6461                           
  6462                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  6463  002E2C  A826               	btfss	_flags,4,c
  6464  002E2E  D036               	goto	l6192
  6465                           
  6466                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 657:         --i;
  6467                           ;stkvar	_i @ sp[(-20)+14]
  6468  002E30  50E1               	movf	fsr1l,w,c
  6469  002E32  0FFA               	addlw	-6
  6470  002E34  6ED9               	movwf	fsr2l,c
  6471  002E36  50E2               	movf	fsr1h,w,c
  6472  002E38  6EDA               	movwf	fsr2h,c
  6473  002E3A  0EFF               	movlw	255
  6474  002E3C  22DA               	addwfc	fsr2h,f,c
  6475  002E3E  06DE               	decf	postinc2,f,c
  6476  002E40  0E00               	movlw	0
  6477  002E42  5ADD               	subwfb	postdec2,f,c
  6478                           
  6479                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  6480                           ;stkvar	_x @ sp[(-20)+-11]
  6481                           ;stkvar	_i @ sp[(-20)+14]
  6482  002E44  0EFA               	movlw	-6
  6483  002E46  006F FF8C  F041    	movff	plusw1,btemp+10
  6484  002E4C  0EFB               	movlw	-5
  6485  002E4E  006F FF8C  F042    	movff	plusw1,btemp+11
  6486  002E54  0EC0               	movlw	low _dbuf
  6487  002E56  2441               	addwf	btemp+10,w,c
  6488  002E58  6ED9               	movwf	fsr2l,c
  6489  002E5A  0E01               	movlw	high _dbuf
  6490  002E5C  2042               	addwfc	btemp+11,w,c
  6491  002E5E  6EDA               	movwf	fsr2h,c
  6492  002E60  0EE1               	movlw	-31
  6493  002E62  006F FF8F FFDF     	movff	plusw1,indf2
  6494                           
  6495                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 659:         --i;
  6496                           ;stkvar	_i @ sp[(-20)+14]
  6497  002E68  50E1               	movf	fsr1l,w,c
  6498  002E6A  0FFA               	addlw	-6
  6499  002E6C  6ED9               	movwf	fsr2l,c
  6500  002E6E  50E2               	movf	fsr1h,w,c
  6501  002E70  6EDA               	movwf	fsr2h,c
  6502  002E72  0EFF               	movlw	255
  6503  002E74  22DA               	addwfc	fsr2h,f,c
  6504  002E76  06DE               	decf	postinc2,f,c
  6505  002E78  0E00               	movlw	0
  6506  002E7A  5ADD               	subwfb	postdec2,f,c
  6507                           
  6508                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  6509                           ;stkvar	_i @ sp[(-20)+14]
  6510  002E7C  0EFA               	movlw	-6
  6511  002E7E  006F FF8C  F041    	movff	plusw1,btemp+10
  6512  002E84  0EFB               	movlw	-5
  6513  002E86  006F FF8C  F042    	movff	plusw1,btemp+11
  6514  002E8C  0EC0               	movlw	low _dbuf
  6515  002E8E  2441               	addwf	btemp+10,w,c
  6516  002E90  6ED9               	movwf	fsr2l,c
  6517  002E92  0E01               	movlw	high _dbuf
  6518  002E94  2042               	addwfc	btemp+11,w,c
  6519  002E96  6EDA               	movwf	fsr2h,c
  6520  002E98  0E30               	movlw	48
  6521  002E9A  6EDF               	movwf	indf2,c
  6522  002E9C                     l6192:
  6523                           
  6524                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  6525                           ;stkvar	_w @ sp[(-20)+16]
  6526  002E9C  0EFC               	movlw	-4
  6527  002E9E  006F FF8F FFE6     	movff	plusw1,postinc1
  6528  002EA4  006F FF8F FFE6     	movff	plusw1,postinc1
  6529                           
  6530                           ;stkvar	_i @ sp[(-22)+14]
  6531  002EAA  0EC0               	movlw	low _dbuf
  6532  002EAC  6E41               	movwf	btemp+10,c
  6533  002EAE  0E01               	movlw	high _dbuf
  6534  002EB0  6E42               	movwf	btemp+11,c
  6535  002EB2  0EF8               	movlw	-8
  6536  002EB4  50E3               	movf	plusw1,w,c
  6537  002EB6  2641               	addwf	btemp+10,f,c
  6538  002EB8  0EF9               	movlw	-7
  6539  002EBA  50E3               	movf	plusw1,w,c
  6540  002EBC  2242               	addwfc	btemp+11,f,c
  6541  002EBE  0060  F107  FFE6   	movff	btemp+10,postinc1
  6542  002EC4  0060  F10B  FFE6   	movff	btemp+11,postinc1
  6543                           
  6544                           ;stkvar	_fp @ sp[(-24)+-2]
  6545  002ECA  0EE6               	movlw	-26
  6546  002ECC  006F FF8F FFE6     	movff	plusw1,postinc1
  6547  002ED2  006F FF8F FFE6     	movff	plusw1,postinc1
  6548  002ED8  ECBD  F021         	call	_pad	;wreg free
  6549                           
  6550                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  6551  002EDC  0EE1               	movlw	225
  6552  002EDE  26E1               	addwf	fsr1l,f,c
  6553  002EE0  0EFF               	movlw	255
  6554  002EE2  22E2               	addwfc	fsr1h,f,c
  6555  002EE4  0012               	return		;funcret
  6556  002EE6                     __end_of_xtoa:
  6557                           	opt callstack 0
  6558                           
  6559 ;; *************** function _toupper *****************
  6560 ;; Defined at:
  6561 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/toupper.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  c               2  [STACK] int 
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;		None
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  2  [STACK] int 
  6568 ;; Registers used:
  6569 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/1
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6579 ;;Total ram usage:        0 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:    4
  6582 ;; This function calls:
  6583 ;;		_islower
  6584 ;; This function is called by:
  6585 ;;		_xtoa
  6586 ;; This function uses a reentrant model
  6587 ;;
  6588                           
  6589                           	psect	text31
  6590  004C38                     __ptext31:
  6591                           	opt callstack 0
  6592  004C38                     _toupper:
  6593                           	opt callstack 0
  6594                           
  6595                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6596  004C38  52E6               	movf	postinc1,f,c
  6597  004C3A  52E6               	movf	postinc1,f,c
  6598                           
  6599                           ;stkvar	_c @ sp[(-2)+-2]
  6600                           
  6601                           ;incstack = 0
  6602  004C3C  0EFC               	movlw	-4
  6603  004C3E  50E3               	movf	plusw1,w,c
  6604  004C40  0F9F               	addlw	159
  6605  004C42  6E41               	movwf	btemp+10,c
  6606  004C44  0EFD               	movlw	-3
  6607  004C46  006F FF8C  F042    	movff	plusw1,btemp+11
  6608  004C4C  0EFF               	movlw	255
  6609  004C4E  2242               	addwfc	btemp+11,f,c
  6610  004C50  5042               	movf	btemp+11,w,c
  6611  004C52  E106               	bnz	u2120
  6612  004C54  0E1A               	movlw	26
  6613  004C56  5C41               	subwf	btemp+10,w,c
  6614  004C58  B0D8               	btfsc	status,0,c
  6615  004C5A  D002               	goto	u2120
  6616  004C5C  0E01               	movlw	1
  6617  004C5E  D001               	goto	u2130
  6618  004C60                     u2120:
  6619  004C60  0E00               	movlw	0
  6620  004C62                     u2130:
  6621  004C62  6E41               	movwf	btemp+10,c
  6622  004C64  6A42               	clrf	btemp+11,c
  6623                           
  6624                           ;stkvar	_toupper$3998 @ sp[(-2)+0]
  6625  004C66  0EFE               	movlw	-2
  6626  004C68  0060  F107  FFE3   	movff	btemp+10,plusw1
  6627  004C6E  0EFF               	movlw	-1
  6628  004C70  0060  F10B  FFE3   	movff	btemp+11,plusw1
  6629                           
  6630                           ;stkvar	_toupper$3998 @ sp[(-2)+0]
  6631  004C76  0EFE               	movlw	-2
  6632  004C78  006F FF8C  F037    	movff	plusw1,btemp
  6633  004C7E  0EFF               	movlw	-1
  6634  004C80  50E3               	movf	plusw1,w,c
  6635  004C82  1037               	iorwf	btemp,w,c
  6636  004C84  B4D8               	btfsc	status,2,c
  6637  004C86  D00D               	goto	l4302
  6638                           
  6639                           ;stkvar	_c @ sp[(-2)+-2]
  6640  004C88  0EFC               	movlw	-4
  6641  004C8A  006F FF8C  F037    	movff	plusw1,btemp
  6642  004C90  0EFD               	movlw	-3
  6643  004C92  006F FF8C  F038    	movff	plusw1,btemp+1
  6644  004C98  0E5F               	movlw	95
  6645  004C9A  1637               	andwf	btemp,f,c
  6646  004C9C  0E00               	movlw	0
  6647  004C9E  1638               	andwf	btemp+1,f,c
  6648  004CA0  D008               	goto	l2409
  6649  004CA2                     l4302:
  6650                           
  6651                           ;stkvar	_c @ sp[(-2)+-2]
  6652  004CA2  0EFC               	movlw	-4
  6653  004CA4  006F FF8C  F037    	movff	plusw1,btemp
  6654  004CAA  0EFD               	movlw	-3
  6655  004CAC  006F FF8C  F038    	movff	plusw1,btemp+1
  6656  004CB2                     l2409:
  6657                           
  6658                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  6659  004CB2  52E5               	movf	postdec1,f,c
  6660  004CB4  52E5               	movf	postdec1,f,c
  6661  004CB6  52E5               	movf	postdec1,f,c
  6662  004CB8  52E5               	movf	postdec1,f,c
  6663  004CBA  0012               	return		;funcret
  6664  004CBC                     __end_of_toupper:
  6665                           	opt callstack 0
  6666                           
  6667 ;; *************** function _islower *****************
  6668 ;; Defined at:
  6669 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/islower.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;  c               2  [STACK] int 
  6672 ;; Auto vars:     Size  Location     Type
  6673 ;;		None
  6674 ;; Return value:  Size  Location     Type
  6675 ;;                  2  [STACK] int 
  6676 ;; Registers used:
  6677 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6687 ;;Total ram usage:        0 bytes
  6688 ;; Hardware stack levels used:    1
  6689 ;; Hardware stack levels required when called:    3
  6690 ;; This function calls:
  6691 ;;		Nothing
  6692 ;; This function is called by:
  6693 ;;		_toupper
  6694 ;; This function uses a reentrant model
  6695 ;;
  6696                           
  6697                           	psect	text32
  6698  005252                     __ptext32:
  6699                           	opt callstack 0
  6700  005252                     _islower:
  6701                           	opt callstack 22
  6702                           
  6703                           ;stkvar	_c @ sp[(0)+-2]
  6704                           
  6705                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6706                           ;incstack = 0
  6707  005252  0EFE               	movlw	-2
  6708  005254  50E3               	movf	plusw1,w,c
  6709  005256  0F9F               	addlw	159
  6710  005258  6E41               	movwf	btemp+10,c
  6711  00525A  0EFF               	movlw	-1
  6712  00525C  006F FF8C  F042    	movff	plusw1,btemp+11
  6713  005262  0EFF               	movlw	255
  6714  005264  2242               	addwfc	btemp+11,f,c
  6715  005266  5042               	movf	btemp+11,w,c
  6716  005268  E106               	bnz	u2010
  6717  00526A  0E1A               	movlw	26
  6718  00526C  5C41               	subwf	btemp+10,w,c
  6719  00526E  B0D8               	btfsc	status,0,c
  6720  005270  D002               	goto	u2010
  6721  005272  0E01               	movlw	1
  6722  005274  D001               	goto	u2020
  6723  005276                     u2010:
  6724  005276  0E00               	movlw	0
  6725  005278                     u2020:
  6726  005278  6E37               	movwf	btemp,c
  6727  00527A  6A38               	clrf	btemp+1,c
  6728                           
  6729                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  6730  00527C  52E5               	movf	postdec1,f,c
  6731  00527E  52E5               	movf	postdec1,f,c
  6732  005280  0012               	return		;funcret
  6733  005282                     __end_of_islower:
  6734                           	opt callstack 0
  6735                           
  6736 ;; *************** function _isupper *****************
  6737 ;; Defined at:
  6738 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isupper.c"
  6739 ;; Parameters:    Size  Location     Type
  6740 ;;  c               2  [STACK] int 
  6741 ;; Auto vars:     Size  Location     Type
  6742 ;;		None
  6743 ;; Return value:  Size  Location     Type
  6744 ;;                  2  [STACK] int 
  6745 ;; Registers used:
  6746 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  6747 ;; Tracked objects:
  6748 ;;		On entry : 0/0
  6749 ;;		On exit  : 0/0
  6750 ;;		Unchanged: 0/0
  6751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6756 ;;Total ram usage:        0 bytes
  6757 ;; Hardware stack levels used:    1
  6758 ;; Hardware stack levels required when called:    3
  6759 ;; This function calls:
  6760 ;;		Nothing
  6761 ;; This function is called by:
  6762 ;;		_xtoa
  6763 ;; This function uses a reentrant model
  6764 ;;
  6765                           
  6766                           	psect	text33
  6767  005282                     __ptext33:
  6768                           	opt callstack 0
  6769  005282                     _isupper:
  6770                           	opt callstack 23
  6771                           
  6772                           ;stkvar	_c @ sp[(0)+-2]
  6773                           
  6774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6775                           ;incstack = 0
  6776  005282  0EFE               	movlw	-2
  6777  005284  50E3               	movf	plusw1,w,c
  6778  005286  0FBF               	addlw	191
  6779  005288  6E41               	movwf	btemp+10,c
  6780  00528A  0EFF               	movlw	-1
  6781  00528C  006F FF8C  F042    	movff	plusw1,btemp+11
  6782  005292  0EFF               	movlw	255
  6783  005294  2242               	addwfc	btemp+11,f,c
  6784  005296  5042               	movf	btemp+11,w,c
  6785  005298  E106               	bnz	u2080
  6786  00529A  0E1A               	movlw	26
  6787  00529C  5C41               	subwf	btemp+10,w,c
  6788  00529E  B0D8               	btfsc	status,0,c
  6789  0052A0  D002               	goto	u2080
  6790  0052A2  0E01               	movlw	1
  6791  0052A4  D001               	goto	u2090
  6792  0052A6                     u2080:
  6793  0052A6  0E00               	movlw	0
  6794  0052A8                     u2090:
  6795  0052A8  6E37               	movwf	btemp,c
  6796  0052AA  6A38               	clrf	btemp+1,c
  6797                           
  6798                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  6799  0052AC  52E5               	movf	postdec1,f,c
  6800  0052AE  52E5               	movf	postdec1,f,c
  6801  0052B0  0012               	return		;funcret
  6802  0052B2                     __end_of_isupper:
  6803                           	opt callstack 0
  6804                           
  6805 ;; *************** function _isalpha *****************
  6806 ;; Defined at:
  6807 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isalpha.c"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;  c               2  [STACK] int 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;		None
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  2  [STACK] int 
  6814 ;; Registers used:
  6815 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6825 ;;Total ram usage:        0 bytes
  6826 ;; Hardware stack levels used:    1
  6827 ;; Hardware stack levels required when called:    3
  6828 ;; This function calls:
  6829 ;;		Nothing
  6830 ;; This function is called by:
  6831 ;;		_xtoa
  6832 ;; This function uses a reentrant model
  6833 ;;
  6834                           
  6835                           	psect	text34
  6836  005118                     __ptext34:
  6837                           	opt callstack 0
  6838  005118                     _isalpha:
  6839                           	opt callstack 23
  6840                           
  6841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6842                           ;incstack = 0
  6843  005118  0E9F               	movlw	159
  6844  00511A  6E41               	movwf	btemp+10,c
  6845  00511C  0EFF               	movlw	255
  6846  00511E  6E42               	movwf	btemp+11,c
  6847                           
  6848                           ;stkvar	_c @ sp[(0)+-2]
  6849  005120  0EFE               	movlw	-2
  6850  005122  006F FF8C  F03F    	movff	plusw1,btemp+8
  6851  005128  0EFF               	movlw	-1
  6852  00512A  006F FF8C  F040    	movff	plusw1,btemp+9
  6853  005130  0E20               	movlw	32
  6854  005132  123F               	iorwf	btemp+8,f,c
  6855  005134  0E00               	movlw	0
  6856  005136  1240               	iorwf	btemp+9,f,c
  6857  005138  5041               	movf	btemp+10,w,c
  6858  00513A  263F               	addwf	btemp+8,f,c
  6859  00513C  5042               	movf	btemp+11,w,c
  6860  00513E  2240               	addwfc	btemp+9,f,c
  6861  005140  5040               	movf	btemp+9,w,c
  6862  005142  E106               	bnz	u2100
  6863  005144  0E1A               	movlw	26
  6864  005146  5C3F               	subwf	btemp+8,w,c
  6865  005148  B0D8               	btfsc	status,0,c
  6866  00514A  D002               	goto	u2100
  6867  00514C  0E01               	movlw	1
  6868  00514E  D001               	goto	u2110
  6869  005150                     u2100:
  6870  005150  0E00               	movlw	0
  6871  005152                     u2110:
  6872  005152  6E37               	movwf	btemp,c
  6873  005154  6A38               	clrf	btemp+1,c
  6874                           
  6875                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  6876  005156  52E5               	movf	postdec1,f,c
  6877  005158  52E5               	movf	postdec1,f,c
  6878  00515A  0012               	return		;funcret
  6879  00515C                     __end_of_isalpha:
  6880                           	opt callstack 0
  6881                           
  6882 ;; *************** function _stoa *****************
  6883 ;; Defined at:
  6884 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  6885 ;; Parameters:    Size  Location     Type
  6886 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6887 ;;		 -> f(5), NULL(0), 
  6888 ;;  s               2  [STACK] PTR unsigned char 
  6889 ;;		 -> ?_printf(2), ?_sprintf(2), V(79), 
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;  nuls            7  [STACK] unsigned char [7]
  6892 ;;  l               2  [STACK] int 
  6893 ;;  p               2  [STACK] int 
  6894 ;;  cp              2  [STACK] PTR unsigned char 
  6895 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), V(79), 
  6896 ;;  w               2  [STACK] int 
  6897 ;;  i               2  [STACK] int 
  6898 ;; Return value:  Size  Location     Type
  6899 ;;                  2  [STACK] int 
  6900 ;; Registers used:
  6901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
  6902 ;; Tracked objects:
  6903 ;;		On entry : 0/3D
  6904 ;;		On exit  : 0/0
  6905 ;;		Unchanged: 0/0
  6906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6910 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6911 ;;Total ram usage:        0 bytes
  6912 ;; Hardware stack levels used:    1
  6913 ;; Hardware stack levels required when called:    6
  6914 ;; This function calls:
  6915 ;;		_fputc
  6916 ;;		_strlen
  6917 ;; This function is called by:
  6918 ;;		_vfpfcnvrt
  6919 ;; This function uses a reentrant model
  6920 ;;
  6921                           
  6922                           	psect	text35
  6923  0034FE                     __ptext35:
  6924                           	opt callstack 0
  6925  0034FE                     _stoa:
  6926                           	opt callstack 0
  6927                           
  6928                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6929  0034FE  0E11               	movlw	17
  6930  003500  26E1               	addwf	fsr1l,f,c
  6931  003502  0E00               	movlw	0
  6932  003504  22E2               	addwfc	fsr1h,f,c
  6933                           
  6934                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
  6935                           
  6936                           ;incstack = 0
  6937  003506  EE20  F057         	lfsr	2,stoa@F1139
  6938                           
  6939                           ;stkvar	_nuls @ sp[(-17)+0]
  6940  00350A  0E07               	movlw	7
  6941  00350C  6E37               	movwf	btemp,c
  6942  00350E  0EEF               	movlw	-17
  6943  003510                     us406999:
  6944  003510  006F FF7B FFE3     	movff	postinc2,plusw1
  6945  003516  28E8               	incf	wreg,w,c
  6946  003518  2E37               	decfsz	btemp,f,c
  6947  00351A  D7FA               	bra	us406999
  6948                           
  6949                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
  6950                           ;stkvar	_s @ sp[(-17)+-4]
  6951  00351C  0EEB               	movlw	-21
  6952  00351E  006F FF8C  F041    	movff	plusw1,btemp+10
  6953  003524  0EEC               	movlw	-20
  6954  003526  006F FF8C  F042    	movff	plusw1,btemp+11
  6955                           
  6956                           ;stkvar	_cp @ sp[(-17)+11]
  6957  00352C  0EFB               	movlw	-5
  6958  00352E  0060  F10B  FFE3   	movff	btemp+11,plusw1
  6959  003534  0EFA               	movlw	-6
  6960  003536  0060  F107  FFE3   	movff	btemp+10,plusw1
  6961                           
  6962                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
  6963                           ;stkvar	_cp @ sp[(-17)+11]
  6964  00353C  0EFA               	movlw	-6
  6965  00353E  006F FF8C  F037    	movff	plusw1,btemp
  6966  003544  0EFB               	movlw	-5
  6967  003546  50E3               	movf	plusw1,w,c
  6968  003548  1037               	iorwf	btemp,w,c
  6969  00354A  A4D8               	btfss	status,2,c
  6970  00354C  D00E               	goto	l6080
  6971                           
  6972                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
  6973                           ;stkvar	_nuls @ sp[(-17)+0]
  6974  00354E  0EEF               	movlw	239
  6975  003550  24E1               	addwf	fsr1l,w,c
  6976  003552  6E41               	movwf	btemp+10,c
  6977  003554  0EFF               	movlw	255
  6978  003556  20E2               	addwfc	fsr1h,w,c
  6979  003558  6E42               	movwf	btemp+11,c
  6980                           
  6981                           ;stkvar	_cp @ sp[(-17)+11]
  6982  00355A  0EFB               	movlw	-5
  6983  00355C  0060  F10B  FFE3   	movff	btemp+11,plusw1
  6984  003562  0EFA               	movlw	-6
  6985  003564  0060  F107  FFE3   	movff	btemp+10,plusw1
  6986  00356A                     l6080:
  6987                           
  6988                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
  6989                           ;stkvar	_cp @ sp[(-17)+11]
  6990  00356A  0EFA               	movlw	-6
  6991  00356C  006F FF8F FFE6     	movff	plusw1,postinc1
  6992  003572  006F FF8F FFE6     	movff	plusw1,postinc1
  6993  003578  EC5E  F026         	call	_strlen	;wreg free
  6994                           
  6995                           ;stkvar	_l @ sp[(-17)+7]
  6996  00357C  0EF6               	movlw	-10
  6997  00357E  0060  F0DF  FFE3   	movff	btemp,plusw1
  6998  003584  0EF7               	movlw	-9
  6999  003586  0060  F0E3  FFE3   	movff	btemp+1,plusw1
  7000                           
  7001                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
  7002                           ;stkvar	_p @ sp[(-17)+9]
  7003  00358C  0EF8               	movlw	-8
  7004  00358E  0060  F093  FFE3   	movff	_prec,plusw1
  7005  003594  0EF9               	movlw	-7
  7006  003596  0060  F097  FFE3   	movff	_prec+1,plusw1
  7007                           
  7008                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
  7009                           ;stkvar	_p @ sp[(-17)+9]
  7010  00359C  0EF9               	movlw	-7
  7011  00359E  BEE3               	btfsc	plusw1,7,c
  7012  0035A0  D023               	goto	l1527
  7013                           
  7014                           ;stkvar	_l @ sp[(-17)+7]
  7015                           ;stkvar	_p @ sp[(-17)+9]
  7016  0035A2  50E1               	movf	fsr1l,w,c
  7017  0035A4  0FF8               	addlw	-8
  7018  0035A6  6ED9               	movwf	fsr2l,c
  7019  0035A8  50E2               	movf	fsr1h,w,c
  7020  0035AA  6EDA               	movwf	fsr2h,c
  7021  0035AC  0EFF               	movlw	255
  7022  0035AE  22DA               	addwfc	fsr2h,f,c
  7023  0035B0  0EF6               	movlw	-10
  7024  0035B2  50E3               	movf	plusw1,w,c
  7025  0035B4  5CDE               	subwf	postinc2,w,c
  7026  0035B6  50DE               	movf	postinc2,w,c
  7027  0035B8  0A80               	xorlw	128
  7028  0035BA  6E37               	movwf	btemp,c
  7029  0035BC  0EF7               	movlw	-9
  7030  0035BE  50E3               	movf	plusw1,w,c
  7031  0035C0  0A80               	xorlw	128
  7032  0035C2  5837               	subwfb	btemp,w,c
  7033  0035C4  B0D8               	btfsc	status,0,c
  7034  0035C6  D010               	goto	l1527
  7035                           
  7036                           ;stkvar	_p @ sp[(-17)+9]
  7037                           ;stkvar	_l @ sp[(-17)+7]
  7038  0035C8  0EF8               	movlw	-8
  7039  0035CA  006F FF8C  F037    	movff	plusw1,btemp
  7040  0035D0  0EF6               	movlw	-10
  7041  0035D2  0060  F0DF  FFE3   	movff	btemp,plusw1
  7042  0035D8  0EF9               	movlw	-7
  7043  0035DA  006F FF8C  F037    	movff	plusw1,btemp
  7044  0035E0  0EF7               	movlw	-9
  7045  0035E2  0060  F0DF  FFE3   	movff	btemp,plusw1
  7046  0035E8                     l1527:
  7047                           
  7048                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
  7049                           ;stkvar	_l @ sp[(-17)+7]
  7050                           ;stkvar	_p @ sp[(-17)+9]
  7051  0035E8  0EF6               	movlw	-10
  7052  0035EA  006F FF8C  F037    	movff	plusw1,btemp
  7053  0035F0  0EF8               	movlw	-8
  7054  0035F2  0060  F0DF  FFE3   	movff	btemp,plusw1
  7055  0035F8  0EF7               	movlw	-9
  7056  0035FA  006F FF8C  F037    	movff	plusw1,btemp
  7057  003600  0EF9               	movlw	-7
  7058  003602  0060  F0DF  FFE3   	movff	btemp,plusw1
  7059                           
  7060                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
  7061                           ;stkvar	_w @ sp[(-17)+13]
  7062  003608  0EFC               	movlw	-4
  7063  00360A  0060  F08B  FFE3   	movff	_width,plusw1
  7064  003610  0EFD               	movlw	-3
  7065  003612  0060  F08F  FFE3   	movff	_width+1,plusw1
  7066                           
  7067                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
  7068  003618  A026               	btfss	_flags,0,c
  7069  00361A  D01F               	goto	l6100
  7070  00361C  D031               	goto	u4110
  7071  00361E                     l6096:
  7072                           
  7073                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
  7074                           ;stkvar	_fp @ sp[(-17)+-2]
  7075  00361E  0EED               	movlw	-19
  7076  003620  006F FF8F FFE6     	movff	plusw1,postinc1
  7077  003626  006F FF8F FFE6     	movff	plusw1,postinc1
  7078  00362C  0E20               	movlw	32
  7079  00362E  6EE6               	movwf	postinc1,c
  7080  003630  0E00               	movlw	0
  7081  003632  6EE6               	movwf	postinc1,c
  7082  003634  EC47  F022         	call	_fputc	;wreg free
  7083                           
  7084                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
  7085                           ;stkvar	_l @ sp[(-17)+7]
  7086  003638  0EF6               	movlw	-10
  7087  00363A  50E3               	movf	plusw1,w,c
  7088  00363C  0F01               	addlw	1
  7089  00363E  6E37               	movwf	btemp,c
  7090  003640  0EF6               	movlw	-10
  7091  003642  0060  F0DF  FFE3   	movff	btemp,plusw1
  7092  003648  6A37               	clrf	btemp,c
  7093  00364A  0EF7               	movlw	-9
  7094  00364C  50E3               	movf	plusw1,w,c
  7095  00364E  2037               	addwfc	btemp,w,c
  7096  003650  6E37               	movwf	btemp,c
  7097  003652  0EF7               	movlw	-9
  7098  003654  0060  F0DF  FFE3   	movff	btemp,plusw1
  7099  00365A                     l6100:
  7100                           
  7101                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
  7102                           ;stkvar	_w @ sp[(-17)+13]
  7103                           ;stkvar	_l @ sp[(-17)+7]
  7104  00365A  50E1               	movf	fsr1l,w,c
  7105  00365C  0FF6               	addlw	-10
  7106  00365E  6ED9               	movwf	fsr2l,c
  7107  003660  50E2               	movf	fsr1h,w,c
  7108  003662  6EDA               	movwf	fsr2h,c
  7109  003664  0EFF               	movlw	255
  7110  003666  22DA               	addwfc	fsr2h,f,c
  7111  003668  0EFC               	movlw	-4
  7112  00366A  50E3               	movf	plusw1,w,c
  7113  00366C  5CDE               	subwf	postinc2,w,c
  7114  00366E  50DE               	movf	postinc2,w,c
  7115  003670  0A80               	xorlw	128
  7116  003672  6E37               	movwf	btemp,c
  7117  003674  0EFD               	movlw	-3
  7118  003676  50E3               	movf	plusw1,w,c
  7119  003678  0A80               	xorlw	128
  7120  00367A  5837               	subwfb	btemp,w,c
  7121  00367C  A0D8               	btfss	status,0,c
  7122  00367E  D7CF               	goto	l6096
  7123  003680                     u4110:
  7124                           
  7125                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
  7126                           ;stkvar	_i @ sp[(-17)+15]
  7127  003680  0EFE               	movlw	-2
  7128  003682  6AE3               	clrf	plusw1,c
  7129  003684  0EFF               	movlw	-1
  7130  003686  6AE3               	clrf	plusw1,c
  7131                           
  7132                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7133  003688  D037               	goto	l6110
  7134  00368A                     l6104:
  7135                           
  7136                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
  7137                           ;stkvar	_fp @ sp[(-17)+-2]
  7138  00368A  0EED               	movlw	-19
  7139  00368C  006F FF8F FFE6     	movff	plusw1,postinc1
  7140  003692  006F FF8F FFE6     	movff	plusw1,postinc1
  7141                           
  7142                           ;stkvar	_cp @ sp[(-19)+11]
  7143  003698  0EF8               	movlw	-8
  7144  00369A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7145  0036A0  0EF9               	movlw	-7
  7146  0036A2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7147  0036A8  50DF               	movf	indf2,w,c
  7148  0036AA  6EE6               	movwf	postinc1,c
  7149  0036AC  0E00               	movlw	0
  7150  0036AE  6EE6               	movwf	postinc1,c
  7151  0036B0  EC47  F022         	call	_fputc	;wreg free
  7152                           
  7153                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
  7154                           ;stkvar	_cp @ sp[(-17)+11]
  7155  0036B4  0EFA               	movlw	-6
  7156  0036B6  50E3               	movf	plusw1,w,c
  7157  0036B8  0F01               	addlw	1
  7158  0036BA  6E37               	movwf	btemp,c
  7159  0036BC  0EFA               	movlw	-6
  7160  0036BE  0060  F0DF  FFE3   	movff	btemp,plusw1
  7161  0036C4  6A37               	clrf	btemp,c
  7162  0036C6  0EFB               	movlw	-5
  7163  0036C8  50E3               	movf	plusw1,w,c
  7164  0036CA  2037               	addwfc	btemp,w,c
  7165  0036CC  6E37               	movwf	btemp,c
  7166  0036CE  0EFB               	movlw	-5
  7167  0036D0  0060  F0DF  FFE3   	movff	btemp,plusw1
  7168                           
  7169                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
  7170                           ;stkvar	_i @ sp[(-17)+15]
  7171  0036D6  0EFE               	movlw	-2
  7172  0036D8  50E3               	movf	plusw1,w,c
  7173  0036DA  0F01               	addlw	1
  7174  0036DC  6E37               	movwf	btemp,c
  7175  0036DE  0EFE               	movlw	-2
  7176  0036E0  0060  F0DF  FFE3   	movff	btemp,plusw1
  7177  0036E6  6A37               	clrf	btemp,c
  7178  0036E8  0EFF               	movlw	-1
  7179  0036EA  50E3               	movf	plusw1,w,c
  7180  0036EC  2037               	addwfc	btemp,w,c
  7181  0036EE  6E37               	movwf	btemp,c
  7182  0036F0  0EFF               	movlw	-1
  7183  0036F2  0060  F0DF  FFE3   	movff	btemp,plusw1
  7184  0036F8                     l6110:
  7185                           
  7186                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
  7187                           ;stkvar	_p @ sp[(-17)+9]
  7188                           ;stkvar	_i @ sp[(-17)+15]
  7189  0036F8  50E1               	movf	fsr1l,w,c
  7190  0036FA  0FFE               	addlw	-2
  7191  0036FC  6ED9               	movwf	fsr2l,c
  7192  0036FE  50E2               	movf	fsr1h,w,c
  7193  003700  6EDA               	movwf	fsr2h,c
  7194  003702  0EFF               	movlw	255
  7195  003704  22DA               	addwfc	fsr2h,f,c
  7196  003706  0EF8               	movlw	-8
  7197  003708  50E3               	movf	plusw1,w,c
  7198  00370A  5CDE               	subwf	postinc2,w,c
  7199  00370C  50DE               	movf	postinc2,w,c
  7200  00370E  0A80               	xorlw	128
  7201  003710  6E37               	movwf	btemp,c
  7202  003712  0EF9               	movlw	-7
  7203  003714  50E3               	movf	plusw1,w,c
  7204  003716  0A80               	xorlw	128
  7205  003718  5837               	subwfb	btemp,w,c
  7206  00371A  A0D8               	btfss	status,0,c
  7207  00371C  D7B6               	goto	l6104
  7208                           
  7209                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
  7210  00371E  B026               	btfsc	_flags,0,c
  7211  003720  D01F               	goto	l6118
  7212  003722  D031               	goto	u4140
  7213  003724                     l6114:
  7214                           
  7215                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
  7216                           ;stkvar	_fp @ sp[(-17)+-2]
  7217  003724  0EED               	movlw	-19
  7218  003726  006F FF8F FFE6     	movff	plusw1,postinc1
  7219  00372C  006F FF8F FFE6     	movff	plusw1,postinc1
  7220  003732  0E20               	movlw	32
  7221  003734  6EE6               	movwf	postinc1,c
  7222  003736  0E00               	movlw	0
  7223  003738  6EE6               	movwf	postinc1,c
  7224  00373A  EC47  F022         	call	_fputc	;wreg free
  7225                           
  7226                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
  7227                           ;stkvar	_l @ sp[(-17)+7]
  7228  00373E  0EF6               	movlw	-10
  7229  003740  50E3               	movf	plusw1,w,c
  7230  003742  0F01               	addlw	1
  7231  003744  6E37               	movwf	btemp,c
  7232  003746  0EF6               	movlw	-10
  7233  003748  0060  F0DF  FFE3   	movff	btemp,plusw1
  7234  00374E  6A37               	clrf	btemp,c
  7235  003750  0EF7               	movlw	-9
  7236  003752  50E3               	movf	plusw1,w,c
  7237  003754  2037               	addwfc	btemp,w,c
  7238  003756  6E37               	movwf	btemp,c
  7239  003758  0EF7               	movlw	-9
  7240  00375A  0060  F0DF  FFE3   	movff	btemp,plusw1
  7241  003760                     l6118:
  7242                           
  7243                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
  7244                           ;stkvar	_w @ sp[(-17)+13]
  7245                           ;stkvar	_l @ sp[(-17)+7]
  7246  003760  50E1               	movf	fsr1l,w,c
  7247  003762  0FF6               	addlw	-10
  7248  003764  6ED9               	movwf	fsr2l,c
  7249  003766  50E2               	movf	fsr1h,w,c
  7250  003768  6EDA               	movwf	fsr2h,c
  7251  00376A  0EFF               	movlw	255
  7252  00376C  22DA               	addwfc	fsr2h,f,c
  7253  00376E  0EFC               	movlw	-4
  7254  003770  50E3               	movf	plusw1,w,c
  7255  003772  5CDE               	subwf	postinc2,w,c
  7256  003774  50DE               	movf	postinc2,w,c
  7257  003776  0A80               	xorlw	128
  7258  003778  6E37               	movwf	btemp,c
  7259  00377A  0EFD               	movlw	-3
  7260  00377C  50E3               	movf	plusw1,w,c
  7261  00377E  0A80               	xorlw	128
  7262  003780  5837               	subwfb	btemp,w,c
  7263  003782  A0D8               	btfss	status,0,c
  7264  003784  D7CF               	goto	l6114
  7265  003786                     u4140:
  7266                           
  7267                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
  7268                           ;stkvar	_l @ sp[(-17)+7]
  7269  003786  0EF6               	movlw	-10
  7270  003788  006F FF8C  F037    	movff	plusw1,btemp
  7271  00378E  0EF7               	movlw	-9
  7272  003790  006F FF8C  F038    	movff	plusw1,btemp+1
  7273                           
  7274                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  7275  003796  0EEB               	movlw	235
  7276  003798  26E1               	addwf	fsr1l,f,c
  7277  00379A  0EFF               	movlw	255
  7278  00379C  22E2               	addwfc	fsr1h,f,c
  7279  00379E  0012               	return		;funcret
  7280  0037A0                     __end_of_stoa:
  7281                           	opt callstack 0
  7282                           
  7283 ;; *************** function _dtoa *****************
  7284 ;; Defined at:
  7285 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7286 ;; Parameters:    Size  Location     Type
  7287 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7288 ;;		 -> f(5), NULL(0), 
  7289 ;;  d               8  [STACK] long long 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  n               8  [STACK] long long 
  7292 ;;  i               2  [STACK] int 
  7293 ;;  s               2  [STACK] int 
  7294 ;;  w               2  [STACK] int 
  7295 ;;  p               2  [STACK] int 
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  2  [STACK] int 
  7298 ;; Registers used:
  7299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, prodl
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/3D
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7309 ;;Total ram usage:        0 bytes
  7310 ;; Hardware stack levels used:    1
  7311 ;; Hardware stack levels required when called:    8
  7312 ;; This function calls:
  7313 ;;		___aodiv
  7314 ;;		___aomod
  7315 ;;		_abs
  7316 ;;		_pad
  7317 ;; This function is called by:
  7318 ;;		_vfpfcnvrt
  7319 ;; This function uses a reentrant model
  7320 ;;
  7321                           
  7322                           	psect	text36
  7323  0026AC                     __ptext36:
  7324                           	opt callstack 0
  7325  0026AC                     _dtoa:
  7326                           	opt callstack 0
  7327                           
  7328                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  7329  0026AC  0E12               	movlw	18
  7330  0026AE  26E1               	addwf	fsr1l,f,c
  7331  0026B0  0E00               	movlw	0
  7332  0026B2  22E2               	addwfc	fsr1h,f,c
  7333                           
  7334                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
  7335                           ;stkvar	_d @ sp[(-18)+-10]
  7336                           
  7337                           ;incstack = 0
  7338  0026B4  0EE4               	movlw	228
  7339  0026B6  24E1               	addwf	fsr1l,w,c
  7340  0026B8  6ED9               	movwf	fsr2l,c
  7341  0026BA  0EFF               	movlw	255
  7342  0026BC  20E2               	addwfc	fsr1h,w,c
  7343  0026BE  6EDA               	movwf	fsr2h,c
  7344                           
  7345                           ;stkvar	_n @ sp[(-18)+2]
  7346  0026C0  0E08               	movlw	8
  7347  0026C2  6E37               	movwf	btemp,c
  7348  0026C4  0EF0               	movlw	-16
  7349  0026C6                     us389999:
  7350  0026C6  006F FF7B FFE3     	movff	postinc2,plusw1
  7351  0026CC  28E8               	incf	wreg,w,c
  7352  0026CE  2E37               	decfsz	btemp,f,c
  7353  0026D0  D7FA               	bra	us389999
  7354                           
  7355                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
  7356                           ;stkvar	_n @ sp[(-18)+2]
  7357  0026D2  0EF7               	movlw	-9
  7358  0026D4  AEE3               	btfss	plusw1,7,c
  7359  0026D6  D002               	goto	u3900
  7360  0026D8  0E01               	movlw	1
  7361  0026DA  D001               	goto	u3910
  7362  0026DC                     u3900:
  7363  0026DC  0E00               	movlw	0
  7364  0026DE                     u3910:
  7365  0026DE  6E41               	movwf	btemp+10,c
  7366  0026E0  6A42               	clrf	btemp+11,c
  7367                           
  7368                           ;stkvar	_s @ sp[(-18)+12]
  7369  0026E2  0EFA               	movlw	-6
  7370  0026E4  0060  F107  FFE3   	movff	btemp+10,plusw1
  7371  0026EA  0EFB               	movlw	-5
  7372  0026EC  0060  F10B  FFE3   	movff	btemp+11,plusw1
  7373                           
  7374                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
  7375                           ;stkvar	_s @ sp[(-18)+12]
  7376  0026F2  0EFA               	movlw	-6
  7377  0026F4  006F FF8C  F037    	movff	plusw1,btemp
  7378  0026FA  0EFB               	movlw	-5
  7379  0026FC  50E3               	movf	plusw1,w,c
  7380  0026FE  1037               	iorwf	btemp,w,c
  7381  002700  B4D8               	btfsc	status,2,c
  7382  002702  D025               	goto	u3930
  7383                           
  7384                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
  7385                           ;stkvar	_n @ sp[(-18)+2]
  7386                           ;stkvar	_n @ sp[(-18)+2]
  7387  002704  0EF0               	movlw	-16
  7388  002706  6CE3               	negf	plusw1,c
  7389  002708  0EF1               	movlw	-15
  7390  00270A  1EE3               	comf	plusw1,f,c
  7391  00270C  0EF2               	movlw	-14
  7392  00270E  1EE3               	comf	plusw1,f,c
  7393  002710  0EF3               	movlw	-13
  7394  002712  1EE3               	comf	plusw1,f,c
  7395  002714  0EF4               	movlw	-12
  7396  002716  1EE3               	comf	plusw1,f,c
  7397  002718  0EF5               	movlw	-11
  7398  00271A  1EE3               	comf	plusw1,f,c
  7399  00271C  0EF6               	movlw	-10
  7400  00271E  1EE3               	comf	plusw1,f,c
  7401  002720  0EF7               	movlw	-9
  7402  002722  1EE3               	comf	plusw1,f,c
  7403  002724  E314               	bnc	u3930
  7404  002726  0EF1               	movlw	-15
  7405  002728  2AE3               	incf	plusw1,f,c
  7406  00272A  E311               	bnc	u3930
  7407  00272C  0EF2               	movlw	-14
  7408  00272E  2AE3               	incf	plusw1,f,c
  7409  002730  E30E               	bnc	u3930
  7410  002732  0EF3               	movlw	-13
  7411  002734  2AE3               	incf	plusw1,f,c
  7412  002736  E30B               	bnc	u3930
  7413  002738  0EF4               	movlw	-12
  7414  00273A  2AE3               	incf	plusw1,f,c
  7415  00273C  E308               	bnc	u3930
  7416  00273E  0EF5               	movlw	-11
  7417  002740  2AE3               	incf	plusw1,f,c
  7418  002742  E305               	bnc	u3930
  7419  002744  0EF6               	movlw	-10
  7420  002746  2AE3               	incf	plusw1,f,c
  7421  002748  E302               	bnc	u3930
  7422  00274A  0EF7               	movlw	-9
  7423  00274C  2AE3               	incf	plusw1,f,c
  7424  00274E                     u3930:
  7425                           
  7426                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
  7427  00274E  AE25               	btfss	_prec+1,7,c
  7428                           
  7429                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
  7430  002750  9226               	bcf	_flags,1,c
  7431                           
  7432                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
  7433  002752  BE25               	btfsc	_prec+1,7,c
  7434  002754  D005               	goto	u3950
  7435  002756  5025               	movf	_prec+1,w,c
  7436  002758  E110               	bnz	l6022
  7437  00275A  0424               	decf	_prec,w,c
  7438  00275C  B0D8               	btfsc	status,0,c
  7439  00275E  D00D               	goto	l6022
  7440  002760                     u3950:
  7441  002760  0E01               	movlw	1
  7442  002762  6E41               	movwf	btemp+10,c
  7443  002764  0E00               	movlw	0
  7444  002766  6E42               	movwf	btemp+11,c
  7445                           
  7446                           ;stkvar	_p @ sp[(-18)+16]
  7447  002768  0EFE               	movlw	-2
  7448  00276A  0060  F107  FFE3   	movff	btemp+10,plusw1
  7449  002770  0EFF               	movlw	-1
  7450  002772  0060  F10B  FFE3   	movff	btemp+11,plusw1
  7451  002778  D008               	goto	l1500
  7452  00277A                     l6022:
  7453                           
  7454                           ;stkvar	_p @ sp[(-18)+16]
  7455  00277A  0EFE               	movlw	-2
  7456  00277C  0060  F093  FFE3   	movff	_prec,plusw1
  7457  002782  0EFF               	movlw	-1
  7458  002784  0060  F097  FFE3   	movff	_prec+1,plusw1
  7459  00278A                     l1500:
  7460                           
  7461                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
  7462                           ;stkvar	_w @ sp[(-18)+14]
  7463  00278A  0EFC               	movlw	-4
  7464  00278C  0060  F08B  FFE3   	movff	_width,plusw1
  7465  002792  0EFD               	movlw	-3
  7466  002794  0060  F08F  FFE3   	movff	_width+1,plusw1
  7467                           
  7468                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
  7469                           ;stkvar	_s @ sp[(-18)+12]
  7470  00279A  0EFA               	movlw	-6
  7471  00279C  006F FF8C  F037    	movff	plusw1,btemp
  7472  0027A2  0EFB               	movlw	-5
  7473  0027A4  50E3               	movf	plusw1,w,c
  7474  0027A6  1037               	iorwf	btemp,w,c
  7475  0027A8  A4D8               	btfss	status,2,c
  7476  0027AA  D002               	goto	u3970
  7477  0027AC  A426               	btfss	_flags,2,c
  7478  0027AE  D00A               	goto	l6030
  7479  0027B0                     u3970:
  7480                           
  7481                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
  7482                           ;stkvar	_w @ sp[(-18)+14]
  7483  0027B0  50E1               	movf	fsr1l,w,c
  7484  0027B2  0FFC               	addlw	-4
  7485  0027B4  6ED9               	movwf	fsr2l,c
  7486  0027B6  50E2               	movf	fsr1h,w,c
  7487  0027B8  6EDA               	movwf	fsr2h,c
  7488  0027BA  0EFF               	movlw	255
  7489  0027BC  22DA               	addwfc	fsr2h,f,c
  7490  0027BE  06DE               	decf	postinc2,f,c
  7491  0027C0  0E00               	movlw	0
  7492  0027C2  5ADD               	subwfb	postdec2,f,c
  7493  0027C4                     l6030:
  7494                           
  7495                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
  7496  0027C4  0E1F               	movlw	31
  7497  0027C6  6E41               	movwf	btemp+10,c
  7498  0027C8  0E00               	movlw	0
  7499  0027CA  6E42               	movwf	btemp+11,c
  7500                           
  7501                           ;stkvar	_i @ sp[(-18)+10]
  7502  0027CC  0EF8               	movlw	-8
  7503  0027CE  0060  F107  FFE3   	movff	btemp+10,plusw1
  7504  0027D4  0EF9               	movlw	-7
  7505  0027D6  0060  F10B  FFE3   	movff	btemp+11,plusw1
  7506                           
  7507                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
  7508  0027DC  0101               	movlb	1	; () banked
  7509  0027DE  6BDF               	clrf	(_dbuf+31)& (0+255),b
  7510                           
  7511                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7512  0027E0  D109               	goto	l6044
  7513  0027E2                     l6034:
  7514                           
  7515                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
  7516                           ;stkvar	_i @ sp[(-18)+10]
  7517  0027E2  50E1               	movf	fsr1l,w,c
  7518  0027E4  0FF8               	addlw	-8
  7519  0027E6  6ED9               	movwf	fsr2l,c
  7520  0027E8  50E2               	movf	fsr1h,w,c
  7521  0027EA  6EDA               	movwf	fsr2h,c
  7522  0027EC  0EFF               	movlw	255
  7523  0027EE  22DA               	addwfc	fsr2h,f,c
  7524  0027F0  06DE               	decf	postinc2,f,c
  7525  0027F2  0E00               	movlw	0
  7526  0027F4  5ADD               	subwfb	postdec2,f,c
  7527                           
  7528                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
  7529  0027F6  0E0A               	movlw	10
  7530  0027F8  6EE6               	movwf	postinc1,c
  7531  0027FA  0E00               	movlw	0
  7532  0027FC  6EE6               	movwf	postinc1,c
  7533  0027FE  0E00               	movlw	0
  7534  002800  6EE6               	movwf	postinc1,c
  7535  002802  0E00               	movlw	0
  7536  002804  6EE6               	movwf	postinc1,c
  7537  002806  0E00               	movlw	0
  7538  002808  6EE6               	movwf	postinc1,c
  7539  00280A  0E00               	movlw	0
  7540  00280C  6EE6               	movwf	postinc1,c
  7541  00280E  0E00               	movlw	0
  7542  002810  6EE6               	movwf	postinc1,c
  7543  002812  0E00               	movlw	0
  7544  002814  6EE6               	movwf	postinc1,c
  7545                           
  7546                           ;stkvar	_n @ sp[(-26)+2]
  7547  002816  50E1               	movf	fsr1l,w,c
  7548  002818  0FE8               	addlw	-24
  7549  00281A  6ED9               	movwf	fsr2l,c
  7550  00281C  50E2               	movf	fsr1h,w,c
  7551  00281E  6EDA               	movwf	fsr2h,c
  7552  002820  0EFF               	movlw	255
  7553  002822  22DA               	addwfc	fsr2h,f,c
  7554  002824  006F FF7B FFE6     	movff	postinc2,postinc1
  7555  00282A  006F FF7B FFE6     	movff	postinc2,postinc1
  7556  002830  006F FF7B FFE6     	movff	postinc2,postinc1
  7557  002836  006F FF7B FFE6     	movff	postinc2,postinc1
  7558  00283C  006F FF7B FFE6     	movff	postinc2,postinc1
  7559  002842  006F FF7B FFE6     	movff	postinc2,postinc1
  7560  002848  006F FF7B FFE6     	movff	postinc2,postinc1
  7561  00284E  006F FF7B FFE6     	movff	postinc2,postinc1
  7562  002854  EC10  F01D         	call	___aomod	;wreg free
  7563  002858  52E5               	movf	postdec1,f,c
  7564  00285A  006F FF9C  F04E    	movff	indf1,btemp+23
  7565  002860  52E5               	movf	postdec1,f,c
  7566  002862  006F FF9C  F04D    	movff	indf1,btemp+22
  7567  002868  52E5               	movf	postdec1,f,c
  7568  00286A  006F FF9C  F04C    	movff	indf1,btemp+21
  7569  002870  52E5               	movf	postdec1,f,c
  7570  002872  006F FF9C  F04B    	movff	indf1,btemp+20
  7571  002878  52E5               	movf	postdec1,f,c
  7572  00287A  006F FF9C  F04A    	movff	indf1,btemp+19
  7573  002880  52E5               	movf	postdec1,f,c
  7574  002882  006F FF9C  F049    	movff	indf1,btemp+18
  7575  002888  52E5               	movf	postdec1,f,c
  7576  00288A  006F FF9C  F048    	movff	indf1,btemp+17
  7577  002890  52E5               	movf	postdec1,f,c
  7578  002892  006F FF9C  F047    	movff	indf1,btemp+16
  7579  002898  0EF8               	movlw	248
  7580  00289A  26E1               	addwf	fsr1l,f,c
  7581  00289C  0EFF               	movlw	255
  7582  00289E  22E2               	addwfc	fsr1h,f,c
  7583  0028A0  0060  F11C  F041   	movff	btemp+16,btemp+10
  7584  0028A6  0060  F120  F042   	movff	btemp+17,btemp+11
  7585  0028AC  0060  F107  FFE6   	movff	btemp+10,postinc1
  7586  0028B2  0060  F10B  FFE6   	movff	btemp+11,postinc1
  7587  0028B8  EC69  F028         	call	_abs	;wreg free
  7588  0028BC  0E30               	movlw	48
  7589  0028BE  2637               	addwf	btemp,f,c
  7590                           
  7591                           ;stkvar	_i @ sp[(-18)+10]
  7592  0028C0  0EF8               	movlw	-8
  7593  0028C2  006F FF8C  F041    	movff	plusw1,btemp+10
  7594  0028C8  0EF9               	movlw	-7
  7595  0028CA  006F FF8C  F042    	movff	plusw1,btemp+11
  7596  0028D0  0EC0               	movlw	low _dbuf
  7597  0028D2  2441               	addwf	btemp+10,w,c
  7598  0028D4  6ED9               	movwf	fsr2l,c
  7599  0028D6  0E01               	movlw	high _dbuf
  7600  0028D8  2042               	addwfc	btemp+11,w,c
  7601  0028DA  6EDA               	movwf	fsr2h,c
  7602  0028DC  0060  F0DF  FFDF   	movff	btemp,indf2
  7603                           
  7604                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
  7605                           ;stkvar	_p @ sp[(-18)+16]
  7606  0028E2  50E1               	movf	fsr1l,w,c
  7607  0028E4  0FFE               	addlw	-2
  7608  0028E6  6ED9               	movwf	fsr2l,c
  7609  0028E8  50E2               	movf	fsr1h,w,c
  7610  0028EA  6EDA               	movwf	fsr2h,c
  7611  0028EC  0EFF               	movlw	255
  7612  0028EE  22DA               	addwfc	fsr2h,f,c
  7613  0028F0  06DE               	decf	postinc2,f,c
  7614  0028F2  0E00               	movlw	0
  7615  0028F4  5ADD               	subwfb	postdec2,f,c
  7616                           
  7617                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
  7618                           ;stkvar	_w @ sp[(-18)+14]
  7619  0028F6  50E1               	movf	fsr1l,w,c
  7620  0028F8  0FFC               	addlw	-4
  7621  0028FA  6ED9               	movwf	fsr2l,c
  7622  0028FC  50E2               	movf	fsr1h,w,c
  7623  0028FE  6EDA               	movwf	fsr2h,c
  7624  002900  0EFF               	movlw	255
  7625  002902  22DA               	addwfc	fsr2h,f,c
  7626  002904  06DE               	decf	postinc2,f,c
  7627  002906  0E00               	movlw	0
  7628  002908  5ADD               	subwfb	postdec2,f,c
  7629                           
  7630                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
  7631  00290A  0E0A               	movlw	10
  7632  00290C  6EE6               	movwf	postinc1,c
  7633  00290E  0E00               	movlw	0
  7634  002910  6EE6               	movwf	postinc1,c
  7635  002912  0E00               	movlw	0
  7636  002914  6EE6               	movwf	postinc1,c
  7637  002916  0E00               	movlw	0
  7638  002918  6EE6               	movwf	postinc1,c
  7639  00291A  0E00               	movlw	0
  7640  00291C  6EE6               	movwf	postinc1,c
  7641  00291E  0E00               	movlw	0
  7642  002920  6EE6               	movwf	postinc1,c
  7643  002922  0E00               	movlw	0
  7644  002924  6EE6               	movwf	postinc1,c
  7645  002926  0E00               	movlw	0
  7646  002928  6EE6               	movwf	postinc1,c
  7647                           
  7648                           ;stkvar	_n @ sp[(-26)+2]
  7649  00292A  50E1               	movf	fsr1l,w,c
  7650  00292C  0FE8               	addlw	-24
  7651  00292E  6ED9               	movwf	fsr2l,c
  7652  002930  50E2               	movf	fsr1h,w,c
  7653  002932  6EDA               	movwf	fsr2h,c
  7654  002934  0EFF               	movlw	255
  7655  002936  22DA               	addwfc	fsr2h,f,c
  7656  002938  006F FF7B FFE6     	movff	postinc2,postinc1
  7657  00293E  006F FF7B FFE6     	movff	postinc2,postinc1
  7658  002944  006F FF7B FFE6     	movff	postinc2,postinc1
  7659  00294A  006F FF7B FFE6     	movff	postinc2,postinc1
  7660  002950  006F FF7B FFE6     	movff	postinc2,postinc1
  7661  002956  006F FF7B FFE6     	movff	postinc2,postinc1
  7662  00295C  006F FF7B FFE6     	movff	postinc2,postinc1
  7663  002962  006F FF7B FFE6     	movff	postinc2,postinc1
  7664  002968  ECD0  F01B         	call	___aodiv	;wreg free
  7665  00296C  52E5               	movf	postdec1,f,c
  7666  00296E  006F FF9C  F04E    	movff	indf1,btemp+23
  7667  002974  52E5               	movf	postdec1,f,c
  7668  002976  006F FF9C  F04D    	movff	indf1,btemp+22
  7669  00297C  52E5               	movf	postdec1,f,c
  7670  00297E  006F FF9C  F04C    	movff	indf1,btemp+21
  7671  002984  52E5               	movf	postdec1,f,c
  7672  002986  006F FF9C  F04B    	movff	indf1,btemp+20
  7673  00298C  52E5               	movf	postdec1,f,c
  7674  00298E  006F FF9C  F04A    	movff	indf1,btemp+19
  7675  002994  52E5               	movf	postdec1,f,c
  7676  002996  006F FF9C  F049    	movff	indf1,btemp+18
  7677  00299C  52E5               	movf	postdec1,f,c
  7678  00299E  006F FF9C  F048    	movff	indf1,btemp+17
  7679  0029A4  52E5               	movf	postdec1,f,c
  7680  0029A6  006F FF9C  F047    	movff	indf1,btemp+16
  7681  0029AC  0EF8               	movlw	248
  7682  0029AE  26E1               	addwf	fsr1l,f,c
  7683  0029B0  0EFF               	movlw	255
  7684  0029B2  22E2               	addwfc	fsr1h,f,c
  7685                           
  7686                           ;stkvar	_n @ sp[(-18)+2]
  7687  0029B4  0EF0               	movlw	-16
  7688  0029B6  0060  F11F  FFE3   	movff	btemp+16,plusw1
  7689  0029BC  0EF1               	movlw	-15
  7690  0029BE  0060  F123  FFE3   	movff	btemp+17,plusw1
  7691  0029C4  0EF2               	movlw	-14
  7692  0029C6  0060  F127  FFE3   	movff	btemp+18,plusw1
  7693  0029CC  0EF3               	movlw	-13
  7694  0029CE  0060  F12B  FFE3   	movff	btemp+19,plusw1
  7695  0029D4  0EF4               	movlw	-12
  7696  0029D6  0060  F12F  FFE3   	movff	btemp+20,plusw1
  7697  0029DC  0EF5               	movlw	-11
  7698  0029DE  0060  F133  FFE3   	movff	btemp+21,plusw1
  7699  0029E4  0EF6               	movlw	-10
  7700  0029E6  0060  F137  FFE3   	movff	btemp+22,plusw1
  7701  0029EC  0EF7               	movlw	-9
  7702  0029EE  0060  F13B  FFE3   	movff	btemp+23,plusw1
  7703  0029F4                     l6044:
  7704                           
  7705                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7706                           ;stkvar	_i @ sp[(-18)+10]
  7707  0029F4  0EF9               	movlw	-7
  7708  0029F6  BEE3               	btfsc	plusw1,7,c
  7709  0029F8  D036               	goto	u4020
  7710  0029FA  0EF9               	movlw	-7
  7711  0029FC  50E3               	movf	plusw1,w,c
  7712  0029FE  E104               	bnz	u3980
  7713  002A00  0EF8               	movlw	-8
  7714  002A02  04E3               	decf	plusw1,w,c
  7715  002A04  A0D8               	btfss	status,0,c
  7716  002A06  D02F               	goto	u4020
  7717  002A08                     u3980:
  7718                           
  7719                           ;stkvar	_n @ sp[(-18)+2]
  7720  002A08  0EF0               	movlw	-16
  7721  002A0A  50E3               	movf	plusw1,w,c
  7722  002A0C  E115               	bnz	u3991
  7723  002A0E  0EF1               	movlw	-15
  7724  002A10  50E3               	movf	plusw1,w,c
  7725  002A12  E112               	bnz	u3991
  7726  002A14  0EF2               	movlw	-14
  7727  002A16  50E3               	movf	plusw1,w,c
  7728  002A18  E10F               	bnz	u3991
  7729  002A1A  0EF3               	movlw	-13
  7730  002A1C  50E3               	movf	plusw1,w,c
  7731  002A1E  E10C               	bnz	u3991
  7732  002A20  0EF4               	movlw	-12
  7733  002A22  50E3               	movf	plusw1,w,c
  7734  002A24  E109               	bnz	u3991
  7735  002A26  0EF5               	movlw	-11
  7736  002A28  50E3               	movf	plusw1,w,c
  7737  002A2A  E106               	bnz	u3991
  7738  002A2C  0EF6               	movlw	-10
  7739  002A2E  50E3               	movf	plusw1,w,c
  7740  002A30  E103               	bnz	u3991
  7741  002A32  0EF7               	movlw	-9
  7742  002A34  50E3               	movf	plusw1,w,c
  7743  002A36  A4D8               	btfss	status,2,c
  7744  002A38                     u3991:
  7745  002A38  D6D4               	goto	l6034
  7746                           
  7747                           ;stkvar	_p @ sp[(-18)+16]
  7748  002A3A  0EFF               	movlw	-1
  7749  002A3C  BEE3               	btfsc	plusw1,7,c
  7750  002A3E  D007               	goto	u4000
  7751  002A40  0EFF               	movlw	-1
  7752  002A42  50E3               	movf	plusw1,w,c
  7753  002A44  E103               	bnz	u4001
  7754  002A46  0EFE               	movlw	-2
  7755  002A48  04E3               	decf	plusw1,w,c
  7756  002A4A  B0D8               	btfsc	status,0,c
  7757  002A4C                     u4001:
  7758  002A4C  D6CA               	goto	l6034
  7759  002A4E                     u4000:
  7760                           
  7761                           ;stkvar	_w @ sp[(-18)+14]
  7762  002A4E  0EFD               	movlw	-3
  7763  002A50  BEE3               	btfsc	plusw1,7,c
  7764  002A52  D009               	goto	u4020
  7765  002A54  0EFD               	movlw	-3
  7766  002A56  50E3               	movf	plusw1,w,c
  7767  002A58  E104               	bnz	u4010
  7768  002A5A  0EFC               	movlw	-4
  7769  002A5C  04E3               	decf	plusw1,w,c
  7770  002A5E  A0D8               	btfss	status,0,c
  7771  002A60  D002               	goto	u4020
  7772  002A62                     u4010:
  7773  002A62  B226               	btfsc	_flags,1,c
  7774  002A64  D6BE               	goto	l6034
  7775  002A66                     u4020:
  7776                           
  7777                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
  7778                           ;stkvar	_s @ sp[(-18)+12]
  7779  002A66  0EFA               	movlw	-6
  7780  002A68  006F FF8C  F037    	movff	plusw1,btemp
  7781  002A6E  0EFB               	movlw	-5
  7782  002A70  50E3               	movf	plusw1,w,c
  7783  002A72  1037               	iorwf	btemp,w,c
  7784  002A74  A4D8               	btfss	status,2,c
  7785  002A76  D002               	goto	u4040
  7786  002A78  A426               	btfss	_flags,2,c
  7787  002A7A  D033               	goto	l6068
  7788  002A7C                     u4040:
  7789                           
  7790                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
  7791                           ;stkvar	_i @ sp[(-18)+10]
  7792  002A7C  50E1               	movf	fsr1l,w,c
  7793  002A7E  0FF8               	addlw	-8
  7794  002A80  6ED9               	movwf	fsr2l,c
  7795  002A82  50E2               	movf	fsr1h,w,c
  7796  002A84  6EDA               	movwf	fsr2h,c
  7797  002A86  0EFF               	movlw	255
  7798  002A88  22DA               	addwfc	fsr2h,f,c
  7799  002A8A  06DE               	decf	postinc2,f,c
  7800  002A8C  0E00               	movlw	0
  7801  002A8E  5ADD               	subwfb	postdec2,f,c
  7802                           
  7803                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
  7804                           ;stkvar	_s @ sp[(-18)+12]
  7805  002A90  0EFA               	movlw	-6
  7806  002A92  006F FF8C  F037    	movff	plusw1,btemp
  7807  002A98  0EFB               	movlw	-5
  7808  002A9A  50E3               	movf	plusw1,w,c
  7809  002A9C  1037               	iorwf	btemp,w,c
  7810  002A9E  A4D8               	btfss	status,2,c
  7811  002AA0  D002               	goto	l6064
  7812  002AA2  0E2B               	movlw	43
  7813  002AA4  D001               	goto	L20
  7814  002AA6                     l6064:
  7815  002AA6  0E2D               	movlw	45
  7816  002AA8                     L20:
  7817  002AA8  6E41               	movwf	btemp+10,c
  7818  002AAA  0E00               	movlw	0
  7819  002AAC  6E42               	movwf	btemp+11,c
  7820                           
  7821                           ;stkvar	_dtoa$3388 @ sp[(-18)+0]
  7822  002AAE  0EEE               	movlw	-18
  7823  002AB0  0060  F107  FFE3   	movff	btemp+10,plusw1
  7824  002AB6  0EEF               	movlw	-17
  7825  002AB8  0060  F10B  FFE3   	movff	btemp+11,plusw1
  7826                           
  7827                           ;stkvar	_dtoa$3388 @ sp[(-18)+0]
  7828                           ;stkvar	_i @ sp[(-18)+10]
  7829  002ABE  0EF8               	movlw	-8
  7830  002AC0  006F FF8C  F041    	movff	plusw1,btemp+10
  7831  002AC6  0EF9               	movlw	-7
  7832  002AC8  006F FF8C  F042    	movff	plusw1,btemp+11
  7833  002ACE  0EC0               	movlw	low _dbuf
  7834  002AD0  2441               	addwf	btemp+10,w,c
  7835  002AD2  6ED9               	movwf	fsr2l,c
  7836  002AD4  0E01               	movlw	high _dbuf
  7837  002AD6  2042               	addwfc	btemp+11,w,c
  7838  002AD8  6EDA               	movwf	fsr2h,c
  7839  002ADA  0EEE               	movlw	-18
  7840  002ADC  006F FF8F FFDF     	movff	plusw1,indf2
  7841  002AE2                     l6068:
  7842                           
  7843                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
  7844                           ;stkvar	_w @ sp[(-18)+14]
  7845  002AE2  0EFC               	movlw	-4
  7846  002AE4  006F FF8F FFE6     	movff	plusw1,postinc1
  7847  002AEA  006F FF8F FFE6     	movff	plusw1,postinc1
  7848                           
  7849                           ;stkvar	_i @ sp[(-20)+10]
  7850  002AF0  0EC0               	movlw	low _dbuf
  7851  002AF2  6E41               	movwf	btemp+10,c
  7852  002AF4  0E01               	movlw	high _dbuf
  7853  002AF6  6E42               	movwf	btemp+11,c
  7854  002AF8  0EF6               	movlw	-10
  7855  002AFA  50E3               	movf	plusw1,w,c
  7856  002AFC  2641               	addwf	btemp+10,f,c
  7857  002AFE  0EF7               	movlw	-9
  7858  002B00  50E3               	movf	plusw1,w,c
  7859  002B02  2242               	addwfc	btemp+11,f,c
  7860  002B04  0060  F107  FFE6   	movff	btemp+10,postinc1
  7861  002B0A  0060  F10B  FFE6   	movff	btemp+11,postinc1
  7862                           
  7863                           ;stkvar	_fp @ sp[(-22)+-2]
  7864  002B10  0EE8               	movlw	-24
  7865  002B12  006F FF8F FFE6     	movff	plusw1,postinc1
  7866  002B18  006F FF8F FFE6     	movff	plusw1,postinc1
  7867  002B1E  ECBD  F021         	call	_pad	;wreg free
  7868                           
  7869                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  7870  002B22  0EE4               	movlw	228
  7871  002B24  26E1               	addwf	fsr1l,f,c
  7872  002B26  0EFF               	movlw	255
  7873  002B28  22E2               	addwfc	fsr1h,f,c
  7874  002B2A  0012               	return		;funcret
  7875  002B2C                     __end_of_dtoa:
  7876                           	opt callstack 0
  7877                           
  7878 ;; *************** function _pad *****************
  7879 ;; Defined at:
  7880 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;  fp              2  [STACK] PTR struct _IO_FILE
  7883 ;;		 -> f(5), NULL(0), 
  7884 ;;  buf             2  [STACK] PTR unsigned char 
  7885 ;;		 -> dbuf(32), 
  7886 ;;  p               2  [STACK] int 
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;  w               2  [STACK] int 
  7889 ;;  i               2  [STACK] int 
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  2  [STACK] int 
  7892 ;; Registers used:
  7893 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, prodl
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/1
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7903 ;;Total ram usage:        0 bytes
  7904 ;; Hardware stack levels used:    1
  7905 ;; Hardware stack levels required when called:    7
  7906 ;; This function calls:
  7907 ;;		_fputc
  7908 ;;		_fputs
  7909 ;;		_strlen
  7910 ;; This function is called by:
  7911 ;;		_dtoa
  7912 ;;		_xtoa
  7913 ;; This function uses a reentrant model
  7914 ;;
  7915                           
  7916                           	psect	text37
  7917  00437A                     __ptext37:
  7918                           	opt callstack 0
  7919  00437A                     _pad:
  7920                           	opt callstack 0
  7921                           
  7922                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7923  00437A  52E6               	movf	postinc1,f,c
  7924  00437C  52E6               	movf	postinc1,f,c
  7925  00437E  52E6               	movf	postinc1,f,c
  7926  004380  52E6               	movf	postinc1,f,c
  7927                           
  7928                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  7929                           
  7930                           ;incstack = 0
  7931  004382  A026               	btfss	_flags,0,c
  7932  004384  D010               	goto	l5988
  7933                           
  7934                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  7935                           ;stkvar	_fp @ sp[(-4)+-2]
  7936  004386  0EFA               	movlw	-6
  7937  004388  006F FF8F FFE6     	movff	plusw1,postinc1
  7938  00438E  006F FF8F FFE6     	movff	plusw1,postinc1
  7939                           
  7940                           ;stkvar	_buf @ sp[(-6)+-4]
  7941  004394  0EF6               	movlw	-10
  7942  004396  006F FF8F FFE6     	movff	plusw1,postinc1
  7943  00439C  006F FF8F FFE6     	movff	plusw1,postinc1
  7944  0043A2  ECFA  F024         	call	_fputs	;wreg free
  7945  0043A6                     l5988:
  7946                           
  7947                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  7948                           ;stkvar	_p @ sp[(-4)+-6]
  7949  0043A6  0EF7               	movlw	-9
  7950  0043A8  BEE3               	btfsc	plusw1,7,c
  7951  0043AA  D011               	goto	l5992
  7952                           
  7953                           ;stkvar	_p @ sp[(-4)+-6]
  7954                           ;stkvar	_w @ sp[(-4)+0]
  7955  0043AC  0EF6               	movlw	-10
  7956  0043AE  006F FF8C  F037    	movff	plusw1,btemp
  7957  0043B4  0EFC               	movlw	-4
  7958  0043B6  0060  F0DF  FFE3   	movff	btemp,plusw1
  7959  0043BC  0EF7               	movlw	-9
  7960  0043BE  006F FF8C  F037    	movff	plusw1,btemp
  7961  0043C4  0EFD               	movlw	-3
  7962  0043C6  0060  F0DF  FFE3   	movff	btemp,plusw1
  7963  0043CC  D004               	goto	l1487
  7964  0043CE                     l5992:
  7965                           
  7966                           ;stkvar	_w @ sp[(-4)+0]
  7967  0043CE  0EFC               	movlw	-4
  7968  0043D0  6AE3               	clrf	plusw1,c
  7969  0043D2  0EFD               	movlw	-3
  7970  0043D4  6AE3               	clrf	plusw1,c
  7971  0043D6                     l1487:
  7972                           
  7973                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  7974                           ;stkvar	_i @ sp[(-4)+2]
  7975  0043D6  0EFE               	movlw	-2
  7976  0043D8  6AE3               	clrf	plusw1,c
  7977  0043DA  0EFF               	movlw	-1
  7978  0043DC  6AE3               	clrf	plusw1,c
  7979                           
  7980                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7981  0043DE  D01E               	goto	l5998
  7982  0043E0                     l5994:
  7983                           
  7984                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  7985                           ;stkvar	_fp @ sp[(-4)+-2]
  7986  0043E0  0EFA               	movlw	-6
  7987  0043E2  006F FF8F FFE6     	movff	plusw1,postinc1
  7988  0043E8  006F FF8F FFE6     	movff	plusw1,postinc1
  7989  0043EE  0E20               	movlw	32
  7990  0043F0  6EE6               	movwf	postinc1,c
  7991  0043F2  0E00               	movlw	0
  7992  0043F4  6EE6               	movwf	postinc1,c
  7993  0043F6  EC47  F022         	call	_fputc	;wreg free
  7994                           
  7995                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
  7996                           ;stkvar	_i @ sp[(-4)+2]
  7997  0043FA  0EFE               	movlw	-2
  7998  0043FC  50E3               	movf	plusw1,w,c
  7999  0043FE  0F01               	addlw	1
  8000  004400  6E37               	movwf	btemp,c
  8001  004402  0EFE               	movlw	-2
  8002  004404  0060  F0DF  FFE3   	movff	btemp,plusw1
  8003  00440A  6A37               	clrf	btemp,c
  8004  00440C  0EFF               	movlw	-1
  8005  00440E  50E3               	movf	plusw1,w,c
  8006  004410  2037               	addwfc	btemp,w,c
  8007  004412  6E37               	movwf	btemp,c
  8008  004414  0EFF               	movlw	-1
  8009  004416  0060  F0DF  FFE3   	movff	btemp,plusw1
  8010  00441C                     l5998:
  8011                           
  8012                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  8013                           ;stkvar	_w @ sp[(-4)+0]
  8014                           ;stkvar	_i @ sp[(-4)+2]
  8015  00441C  50E1               	movf	fsr1l,w,c
  8016  00441E  0FFE               	addlw	-2
  8017  004420  6ED9               	movwf	fsr2l,c
  8018  004422  50E2               	movf	fsr1h,w,c
  8019  004424  6EDA               	movwf	fsr2h,c
  8020  004426  0EFF               	movlw	255
  8021  004428  22DA               	addwfc	fsr2h,f,c
  8022  00442A  0EFC               	movlw	-4
  8023  00442C  50E3               	movf	plusw1,w,c
  8024  00442E  5CDE               	subwf	postinc2,w,c
  8025  004430  50DE               	movf	postinc2,w,c
  8026  004432  0A80               	xorlw	128
  8027  004434  6E37               	movwf	btemp,c
  8028  004436  0EFD               	movlw	-3
  8029  004438  50E3               	movf	plusw1,w,c
  8030  00443A  0A80               	xorlw	128
  8031  00443C  5837               	subwfb	btemp,w,c
  8032  00443E  A0D8               	btfss	status,0,c
  8033  004440  D7CF               	goto	l5994
  8034                           
  8035                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  8036  004442  B026               	btfsc	_flags,0,c
  8037  004444  D010               	goto	l6002
  8038                           
  8039                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  8040                           ;stkvar	_fp @ sp[(-4)+-2]
  8041  004446  0EFA               	movlw	-6
  8042  004448  006F FF8F FFE6     	movff	plusw1,postinc1
  8043  00444E  006F FF8F FFE6     	movff	plusw1,postinc1
  8044                           
  8045                           ;stkvar	_buf @ sp[(-6)+-4]
  8046  004454  0EF6               	movlw	-10
  8047  004456  006F FF8F FFE6     	movff	plusw1,postinc1
  8048  00445C  006F FF8F FFE6     	movff	plusw1,postinc1
  8049  004462  ECFA  F024         	call	_fputs	;wreg free
  8050  004466                     l6002:
  8051                           
  8052                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  8053                           ;stkvar	_w @ sp[(-4)+0]
  8054                           ;stkvar	_buf @ sp[(-4)+-4]
  8055  004466  0EF8               	movlw	-8
  8056  004468  006F FF8F FFE6     	movff	plusw1,postinc1
  8057  00446E  006F FF8F FFE6     	movff	plusw1,postinc1
  8058  004474  EC5E  F026         	call	_strlen	;wreg free
  8059  004478  0EFC               	movlw	-4
  8060  00447A  50E3               	movf	plusw1,w,c
  8061  00447C  2637               	addwf	btemp,f,c
  8062  00447E  0EFD               	movlw	-3
  8063  004480  50E3               	movf	plusw1,w,c
  8064  004482  2238               	addwfc	btemp+1,f,c
  8065                           
  8066                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
  8067  004484  0EF6               	movlw	246
  8068  004486  26E1               	addwf	fsr1l,f,c
  8069  004488  0EFF               	movlw	255
  8070  00448A  22E2               	addwfc	fsr1h,f,c
  8071  00448C  0012               	return		;funcret
  8072  00448E                     __end_of_pad:
  8073                           	opt callstack 0
  8074                           
  8075 ;; *************** function _strlen *****************
  8076 ;; Defined at:
  8077 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;  s               2  [STACK] PTR const unsigned char 
  8080 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  8081 ;;		 -> V(79), 
  8082 ;; Auto vars:     Size  Location     Type
  8083 ;;  a               2  [STACK] PTR const unsigned char 
  8084 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
  8085 ;;		 -> V(79), 
  8086 ;; Return value:  Size  Location     Type
  8087 ;;                  2  [STACK] unsigned int 
  8088 ;; Registers used:
  8089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  8090 ;; Tracked objects:
  8091 ;;		On entry : 0/0
  8092 ;;		On exit  : 0/0
  8093 ;;		Unchanged: 0/0
  8094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8099 ;;Total ram usage:        0 bytes
  8100 ;; Hardware stack levels used:    1
  8101 ;; Hardware stack levels required when called:    3
  8102 ;; This function calls:
  8103 ;;		Nothing
  8104 ;; This function is called by:
  8105 ;;		_eaDogM_WriteString
  8106 ;;		_pad
  8107 ;;		_stoa
  8108 ;; This function uses a reentrant model
  8109 ;;
  8110                           
  8111                           	psect	text38
  8112  004CBC                     __ptext38:
  8113                           	opt callstack 0
  8114  004CBC                     _strlen:
  8115                           	opt callstack 0
  8116                           
  8117                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8118  004CBC  52E6               	movf	postinc1,f,c
  8119  004CBE  52E6               	movf	postinc1,f,c
  8120                           
  8121                           ;stkvar	_s @ sp[(-2)+-2]
  8122                           
  8123                           ;incstack = 0
  8124  004CC0  0EFC               	movlw	-4
  8125  004CC2  006F FF8C  F041    	movff	plusw1,btemp+10
  8126  004CC8  0EFD               	movlw	-3
  8127  004CCA  006F FF8C  F042    	movff	plusw1,btemp+11
  8128                           
  8129                           ;stkvar	_a @ sp[(-2)+0]
  8130  004CD0  0EFF               	movlw	-1
  8131  004CD2  0060  F10B  FFE3   	movff	btemp+11,plusw1
  8132  004CD8  0EFE               	movlw	-2
  8133  004CDA  0060  F107  FFE3   	movff	btemp+10,plusw1
  8134  004CE0  D011               	goto	l4236
  8135  004CE2                     l4234:
  8136                           
  8137                           ;stkvar	_s @ sp[(-2)+-2]
  8138  004CE2  0EFC               	movlw	-4
  8139  004CE4  50E3               	movf	plusw1,w,c
  8140  004CE6  0F01               	addlw	1
  8141  004CE8  6E37               	movwf	btemp,c
  8142  004CEA  0EFC               	movlw	-4
  8143  004CEC  0060  F0DF  FFE3   	movff	btemp,plusw1
  8144  004CF2  6A37               	clrf	btemp,c
  8145  004CF4  0EFD               	movlw	-3
  8146  004CF6  50E3               	movf	plusw1,w,c
  8147  004CF8  2037               	addwfc	btemp,w,c
  8148  004CFA  6E37               	movwf	btemp,c
  8149  004CFC  0EFD               	movlw	-3
  8150  004CFE  0060  F0DF  FFE3   	movff	btemp,plusw1
  8151  004D04                     l4236:
  8152                           
  8153                           ;stkvar	_s @ sp[(-2)+-2]
  8154  004D04  0EFC               	movlw	-4
  8155  004D06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8156  004D0C  0EFD               	movlw	-3
  8157  004D0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8158  004D14  50DF               	movf	indf2,w,c
  8159  004D16  A4D8               	btfss	status,2,c
  8160  004D18  D7E4               	goto	l4234
  8161                           
  8162                           ;stkvar	_a @ sp[(-2)+0]
  8163                           ;stkvar	_s @ sp[(-2)+-2]
  8164  004D1A  0EFC               	movlw	-4
  8165  004D1C  006F FF8C  F037    	movff	plusw1,btemp
  8166  004D22  0EFD               	movlw	-3
  8167  004D24  006F FF8C  F038    	movff	plusw1,btemp+1
  8168  004D2A  0EFE               	movlw	-2
  8169  004D2C  50E3               	movf	plusw1,w,c
  8170  004D2E  5E37               	subwf	btemp,f,c
  8171  004D30  0EFF               	movlw	-1
  8172  004D32  50E3               	movf	plusw1,w,c
  8173  004D34  5A38               	subwfb	btemp+1,f,c
  8174                           
  8175                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  8176  004D36  52E5               	movf	postdec1,f,c
  8177  004D38  52E5               	movf	postdec1,f,c
  8178  004D3A  52E5               	movf	postdec1,f,c
  8179  004D3C  52E5               	movf	postdec1,f,c
  8180  004D3E  0012               	return		;funcret
  8181  004D40                     __end_of_strlen:
  8182                           	opt callstack 0
  8183                           
  8184 ;; *************** function _fputs *****************
  8185 ;; Defined at:
  8186 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
  8187 ;; Parameters:    Size  Location     Type
  8188 ;;  s               2  [STACK] PTR const unsigned char 
  8189 ;;		 -> dbuf(32), 
  8190 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8191 ;;		 -> f(5), NULL(0), 
  8192 ;; Auto vars:     Size  Location     Type
  8193 ;;  i               2  [STACK] int 
  8194 ;;  c               1  [STACK] unsigned char 
  8195 ;; Return value:  Size  Location     Type
  8196 ;;                  2  [STACK] int 
  8197 ;; Registers used:
  8198 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  8199 ;; Tracked objects:
  8200 ;;		On entry : 0/1
  8201 ;;		On exit  : 0/0
  8202 ;;		Unchanged: 0/0
  8203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8208 ;;Total ram usage:        0 bytes
  8209 ;; Hardware stack levels used:    1
  8210 ;; Hardware stack levels required when called:    6
  8211 ;; This function calls:
  8212 ;;		_fputc
  8213 ;; This function is called by:
  8214 ;;		_pad
  8215 ;; This function uses a reentrant model
  8216 ;;
  8217                           
  8218                           	psect	text39
  8219  0049F4                     __ptext39:
  8220                           	opt callstack 0
  8221  0049F4                     _fputs:
  8222                           	opt callstack 0
  8223                           
  8224                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8225  0049F4  52E6               	movf	postinc1,f,c
  8226  0049F6  52E6               	movf	postinc1,f,c
  8227  0049F8  52E6               	movf	postinc1,f,c
  8228                           
  8229                           ;stkvar	_i @ sp[(-3)+0]
  8230                           
  8231                           ;incstack = 0
  8232  0049FA  0EFD               	movlw	-3
  8233  0049FC  6AE3               	clrf	plusw1,c
  8234  0049FE  0EFE               	movlw	-2
  8235  004A00  6AE3               	clrf	plusw1,c
  8236  004A02  D01F               	goto	l5982
  8237  004A04                     l5978:
  8238                           
  8239                           ;stkvar	_fp @ sp[(-3)+-4]
  8240  004A04  0EF9               	movlw	-7
  8241  004A06  006F FF8F FFE6     	movff	plusw1,postinc1
  8242  004A0C  006F FF8F FFE6     	movff	plusw1,postinc1
  8243                           
  8244                           ;stkvar	_c @ sp[(-5)+2]
  8245  004A12  0EFD               	movlw	-3
  8246  004A14  50E3               	movf	plusw1,w,c
  8247  004A16  6EE6               	movwf	postinc1,c
  8248  004A18  0E00               	movlw	0
  8249  004A1A  6EE6               	movwf	postinc1,c
  8250  004A1C  EC47  F022         	call	_fputc	;wreg free
  8251                           
  8252                           ;stkvar	_i @ sp[(-3)+0]
  8253  004A20  0EFD               	movlw	-3
  8254  004A22  50E3               	movf	plusw1,w,c
  8255  004A24  0F01               	addlw	1
  8256  004A26  6E37               	movwf	btemp,c
  8257  004A28  0EFD               	movlw	-3
  8258  004A2A  0060  F0DF  FFE3   	movff	btemp,plusw1
  8259  004A30  6A37               	clrf	btemp,c
  8260  004A32  0EFE               	movlw	-2
  8261  004A34  50E3               	movf	plusw1,w,c
  8262  004A36  2037               	addwfc	btemp,w,c
  8263  004A38  6E37               	movwf	btemp,c
  8264  004A3A  0EFE               	movlw	-2
  8265  004A3C  0060  F0DF  FFE3   	movff	btemp,plusw1
  8266  004A42                     l5982:
  8267                           
  8268                           ;stkvar	_i @ sp[(-3)+0]
  8269  004A42  0EFD               	movlw	-3
  8270  004A44  006F FF8C  F041    	movff	plusw1,btemp+10
  8271  004A4A  0EFE               	movlw	-2
  8272  004A4C  006F FF8C  F042    	movff	plusw1,btemp+11
  8273                           
  8274                           ;stkvar	_s @ sp[(-3)+-2]
  8275  004A52  0EFB               	movlw	-5
  8276  004A54  006F FF8C  F03F    	movff	plusw1,btemp+8
  8277  004A5A  0EFC               	movlw	-4
  8278  004A5C  006F FF8C  F040    	movff	plusw1,btemp+9
  8279  004A62  5041               	movf	btemp+10,w,c
  8280  004A64  243F               	addwf	btemp+8,w,c
  8281  004A66  6ED9               	movwf	fsr2l,c
  8282  004A68  5042               	movf	btemp+11,w,c
  8283  004A6A  2040               	addwfc	btemp+9,w,c
  8284  004A6C  6EDA               	movwf	fsr2h,c
  8285  004A6E  50DF               	movf	indf2,w,c
  8286  004A70  6E42               	movwf	btemp+11,c
  8287                           
  8288                           ;stkvar	_c @ sp[(-3)+2]
  8289  004A72  0EFF               	movlw	-1
  8290  004A74  0060  F10B  FFE3   	movff	btemp+11,plusw1
  8291  004A7A  0EFF               	movlw	-1
  8292  004A7C  50E3               	movf	plusw1,w,c
  8293  004A7E  A4D8               	btfss	status,2,c
  8294  004A80  D7C1               	goto	l5978
  8295                           
  8296                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  8297  004A82  0EF9               	movlw	249
  8298  004A84  26E1               	addwf	fsr1l,f,c
  8299  004A86  0EFF               	movlw	255
  8300  004A88  22E2               	addwfc	fsr1h,f,c
  8301  004A8A  0012               	return		;funcret
  8302  004A8C                     __end_of_fputs:
  8303                           	opt callstack 0
  8304                           
  8305 ;; *************** function _fputc *****************
  8306 ;; Defined at:
  8307 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
  8308 ;; Parameters:    Size  Location     Type
  8309 ;;  c               2  [STACK] int 
  8310 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8311 ;;		 -> f(5), NULL(0), 
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;		None
  8314 ;; Return value:  Size  Location     Type
  8315 ;;                  2  [STACK] int 
  8316 ;; Registers used:
  8317 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
  8318 ;; Tracked objects:
  8319 ;;		On entry : 0/3D
  8320 ;;		On exit  : 0/0
  8321 ;;		Unchanged: 0/0
  8322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8327 ;;Total ram usage:        0 bytes
  8328 ;; Hardware stack levels used:    1
  8329 ;; Hardware stack levels required when called:    5
  8330 ;; This function calls:
  8331 ;;		_putch
  8332 ;; This function is called by:
  8333 ;;		_pad
  8334 ;;		_stoa
  8335 ;;		_vfpfcnvrt
  8336 ;;		_fputs
  8337 ;; This function uses a reentrant model
  8338 ;;
  8339                           
  8340                           	psect	text40
  8341  00448E                     __ptext40:
  8342                           	opt callstack 0
  8343  00448E                     _fputc:
  8344                           	opt callstack 19
  8345                           
  8346                           ;stkvar	_fp @ sp[(0)+-4]
  8347                           
  8348                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8349                           ;incstack = 0
  8350  00448E  0EFC               	movlw	-4
  8351  004490  006F FF8C  F037    	movff	plusw1,btemp
  8352  004496  0EFD               	movlw	-3
  8353  004498  50E3               	movf	plusw1,w,c
  8354  00449A  1037               	iorwf	btemp,w,c
  8355  00449C  B4D8               	btfsc	status,2,c
  8356  00449E  D009               	goto	u3810
  8357                           
  8358                           ;stkvar	_fp @ sp[(0)+-4]
  8359  0044A0  0EFC               	movlw	-4
  8360  0044A2  006F FF8C  F037    	movff	plusw1,btemp
  8361  0044A8  0EFD               	movlw	-3
  8362  0044AA  50E3               	movf	plusw1,w,c
  8363  0044AC  1037               	iorwf	btemp,w,c
  8364  0044AE  A4D8               	btfss	status,2,c
  8365  0044B0  D006               	goto	l5968
  8366  0044B2                     u3810:
  8367                           
  8368                           ;stkvar	_c @ sp[(0)+-2]
  8369  0044B2  0EFE               	movlw	-2
  8370  0044B4  50E3               	movf	plusw1,w,c
  8371  0044B6  6EE6               	movwf	postinc1,c
  8372  0044B8  EC16  F02C         	call	_putch	;wreg free
  8373  0044BC  D069               	goto	l2371
  8374  0044BE                     l5968:
  8375                           
  8376                           ;stkvar	_fp @ sp[(0)+-4]
  8377  0044BE  0EFC               	movlw	-4
  8378  0044C0  006F FF8C  F041    	movff	plusw1,btemp+10
  8379  0044C6  0EFD               	movlw	-3
  8380  0044C8  006F FF8C  F042    	movff	plusw1,btemp+11
  8381  0044CE  0E03               	movlw	3
  8382  0044D0  2441               	addwf	btemp+10,w,c
  8383  0044D2  6ED9               	movwf	fsr2l,c
  8384  0044D4  0E00               	movlw	0
  8385  0044D6  2042               	addwfc	btemp+11,w,c
  8386  0044D8  6EDA               	movwf	fsr2h,c
  8387  0044DA  50DE               	movf	postinc2,w,c
  8388  0044DC  10DE               	iorwf	postinc2,w,c
  8389  0044DE  B4D8               	btfsc	status,2,c
  8390  0044E0  D026               	goto	u3830
  8391                           
  8392                           ;stkvar	_fp @ sp[(0)+-4]
  8393  0044E2  0EFC               	movlw	-4
  8394  0044E4  006F FF8C  F041    	movff	plusw1,btemp+10
  8395  0044EA  0EFD               	movlw	-3
  8396  0044EC  006F FF8C  F042    	movff	plusw1,btemp+11
  8397  0044F2  0E03               	movlw	3
  8398  0044F4  2441               	addwf	btemp+10,w,c
  8399  0044F6  6ED9               	movwf	fsr2l,c
  8400  0044F8  0E00               	movlw	0
  8401  0044FA  2042               	addwfc	btemp+11,w,c
  8402  0044FC  6EDA               	movwf	fsr2h,c
  8403                           
  8404                           ;stkvar	_fp @ sp[(0)+-4]
  8405  0044FE  0EFC               	movlw	-4
  8406  004500  006F FF8C  F041    	movff	plusw1,btemp+10
  8407  004506  0EFD               	movlw	-3
  8408  004508  006F FF8C  F042    	movff	plusw1,btemp+11
  8409  00450E  0E01               	movlw	1
  8410  004510  2441               	addwf	btemp+10,w,c
  8411  004512  6EE9               	movwf	fsr0l,c
  8412  004514  0E00               	movlw	0
  8413  004516  2042               	addwfc	btemp+11,w,c
  8414  004518  6EEA               	movwf	fsr0h,c
  8415  00451A  50DE               	movf	postinc2,w,c
  8416  00451C  5CEE               	subwf	postinc0,w,c
  8417  00451E  50EE               	movf	postinc0,w,c
  8418  004520  0A80               	xorlw	128
  8419  004522  6E37               	movwf	btemp,c
  8420  004524  50DE               	movf	postinc2,w,c
  8421  004526  0A80               	xorlw	128
  8422  004528  5837               	subwfb	btemp,w,c
  8423  00452A  B0D8               	btfsc	status,0,c
  8424  00452C  D031               	goto	l2371
  8425  00452E                     u3830:
  8426                           
  8427                           ;stkvar	_c @ sp[(0)+-2]
  8428                           ;stkvar	_fp @ sp[(0)+-4]
  8429  00452E  0EFC               	movlw	-4
  8430  004530  006F FF8C  F041    	movff	plusw1,btemp+10
  8431  004536  0EFD               	movlw	-3
  8432  004538  006F FF8C  F042    	movff	plusw1,btemp+11
  8433  00453E  0E01               	movlw	1
  8434  004540  2441               	addwf	btemp+10,w,c
  8435  004542  6ED9               	movwf	fsr2l,c
  8436  004544  0E00               	movlw	0
  8437  004546  2042               	addwfc	btemp+11,w,c
  8438  004548  6EDA               	movwf	fsr2h,c
  8439  00454A  50DF               	movf	indf2,w,c
  8440  00454C  6E42               	movwf	btemp+11,c
  8441                           
  8442                           ;stkvar	_fp @ sp[(0)+-4]
  8443  00454E  0EFC               	movlw	-4
  8444  004550  006F FF8F FFD9     	movff	plusw1,fsr2l
  8445  004556  0EFD               	movlw	-3
  8446  004558  006F FF8F FFDA     	movff	plusw1,fsr2h
  8447  00455E  50DF               	movf	indf2,w,c
  8448  004560  2442               	addwf	btemp+11,w,c
  8449  004562  6ED9               	movwf	fsr2l,c
  8450  004564  6ADA               	clrf	fsr2h,c
  8451  004566  0EFE               	movlw	-2
  8452  004568  006F FF8F FFDF     	movff	plusw1,indf2
  8453                           
  8454                           ;stkvar	_fp @ sp[(0)+-4]
  8455  00456E  0EFC               	movlw	-4
  8456  004570  006F FF8C  F041    	movff	plusw1,btemp+10
  8457  004576  0EFD               	movlw	-3
  8458  004578  006F FF8C  F042    	movff	plusw1,btemp+11
  8459  00457E  0E01               	movlw	1
  8460  004580  2441               	addwf	btemp+10,w,c
  8461  004582  6ED9               	movwf	fsr2l,c
  8462  004584  0E00               	movlw	0
  8463  004586  2042               	addwfc	btemp+11,w,c
  8464  004588  6EDA               	movwf	fsr2h,c
  8465  00458A  2ADE               	incf	postinc2,f,c
  8466  00458C  0E00               	movlw	0
  8467  00458E  22DD               	addwfc	postdec2,f,c
  8468  004590                     l2371:
  8469                           
  8470                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
  8471  004590  52E5               	movf	postdec1,f,c
  8472  004592  52E5               	movf	postdec1,f,c
  8473  004594  52E5               	movf	postdec1,f,c
  8474  004596  52E5               	movf	postdec1,f,c
  8475  004598  0012               	return		;funcret
  8476  00459A                     __end_of_fputc:
  8477                           	opt callstack 0
  8478                           
  8479 ;; *************** function _putch *****************
  8480 ;; Defined at:
  8481 ;;		line 138 in file "eadog.c"
  8482 ;; Parameters:    Size  Location     Type
  8483 ;;  c               1  [STACK] unsigned char 
  8484 ;; Auto vars:     Size  Location     Type
  8485 ;;		None
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  1  [STACK] void 
  8488 ;; Registers used:
  8489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/3D
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8499 ;;Total ram usage:        0 bytes
  8500 ;; Hardware stack levels used:    1
  8501 ;; Hardware stack levels required when called:    4
  8502 ;; This function calls:
  8503 ;;		_ringBufS_put_dma
  8504 ;; This function is called by:
  8505 ;;		_fputc
  8506 ;; This function uses a reentrant model
  8507 ;;
  8508                           
  8509                           	psect	text41
  8510  00582C                     __ptext41:
  8511                           	opt callstack 0
  8512  00582C                     _putch:
  8513                           	opt callstack 19
  8514                           
  8515                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
  8516                           ;stkvar	_c @ sp[(0)+-1]
  8517                           
  8518                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8519                           ;incstack = 0
  8520  00582C  0EFF               	movlw	-1
  8521  00582E  50E3               	movf	plusw1,w,c
  8522  005830  6EE6               	movwf	postinc1,c
  8523  005832  0060  F1CF  FFE6   	movff	_spi_link+6,postinc1
  8524  005838  0060  F1D3  FFE6   	movff	_spi_link+7,postinc1
  8525  00583E  EC58  F024         	call	_ringBufS_put_dma	;wreg free
  8526                           
  8527                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
  8528  005842  52E5               	movf	postdec1,f,c
  8529  005844  0012               	return		;funcret
  8530  005846                     __end_of_putch:
  8531                           	opt callstack 0
  8532                           
  8533 ;; *************** function _ringBufS_put_dma *****************
  8534 ;; Defined at:
  8535 ;;		line 67 in file "ringbufs.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;  _this           2  [STACK] PTR struct ringBufS_t
  8538 ;;		 -> ring_buf1(67), 
  8539 ;;  c               1  [STACK] const unsigned char 
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;		None
  8542 ;; Return value:  Size  Location     Type
  8543 ;;                  1  [STACK] void 
  8544 ;; Registers used:
  8545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
  8546 ;; Tracked objects:
  8547 ;;		On entry : 0/3D
  8548 ;;		On exit  : 0/0
  8549 ;;		Unchanged: 0/0
  8550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8555 ;;Total ram usage:        0 bytes
  8556 ;; Hardware stack levels used:    1
  8557 ;; Hardware stack levels required when called:    3
  8558 ;; This function calls:
  8559 ;;		Nothing
  8560 ;; This function is called by:
  8561 ;;		_putch
  8562 ;; This function uses a reentrant model
  8563 ;;
  8564                           
  8565                           	psect	text42
  8566  0048B0                     __ptext42:
  8567                           	opt callstack 0
  8568  0048B0                     _ringBufS_put_dma:
  8569                           	opt callstack 19
  8570                           
  8571                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
  8572                           ;stkvar	__this @ sp[(0)+-2]
  8573                           
  8574                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8575                           ;incstack = 0
  8576  0048B0  0EFE               	movlw	-2
  8577  0048B2  006F FF8C  F041    	movff	plusw1,btemp+10
  8578  0048B8  0EFF               	movlw	-1
  8579  0048BA  006F FF8C  F042    	movff	plusw1,btemp+11
  8580  0048C0  0E42               	movlw	66
  8581  0048C2  2441               	addwf	btemp+10,w,c
  8582  0048C4  6ED9               	movwf	fsr2l,c
  8583  0048C6  0E00               	movlw	0
  8584  0048C8  2042               	addwfc	btemp+11,w,c
  8585  0048CA  6EDA               	movwf	fsr2h,c
  8586  0048CC  0E40               	movlw	64
  8587  0048CE  60DF               	cpfslt	indf2,c
  8588  0048D0  D040               	goto	l1322
  8589                           
  8590                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
  8591                           ;stkvar	_c @ sp[(0)+-3]
  8592                           ;stkvar	__this @ sp[(0)+-2]
  8593  0048D2  0EFE               	movlw	-2
  8594  0048D4  006F FF8C  F041    	movff	plusw1,btemp+10
  8595  0048DA  0EFF               	movlw	-1
  8596  0048DC  006F FF8C  F042    	movff	plusw1,btemp+11
  8597  0048E2  0E40               	movlw	64
  8598  0048E4  2441               	addwf	btemp+10,w,c
  8599  0048E6  6ED9               	movwf	fsr2l,c
  8600  0048E8  0E00               	movlw	0
  8601  0048EA  2042               	addwfc	btemp+11,w,c
  8602  0048EC  6EDA               	movwf	fsr2h,c
  8603  0048EE  50DF               	movf	indf2,w,c
  8604  0048F0  6E42               	movwf	btemp+11,c
  8605                           
  8606                           ;stkvar	__this @ sp[(0)+-2]
  8607  0048F2  0EFE               	movlw	-2
  8608  0048F4  006F FF8C  F03F    	movff	plusw1,btemp+8
  8609  0048FA  0EFF               	movlw	-1
  8610  0048FC  006F FF8C  F040    	movff	plusw1,btemp+9
  8611  004902  5042               	movf	btemp+11,w,c
  8612  004904  243F               	addwf	btemp+8,w,c
  8613  004906  6ED9               	movwf	fsr2l,c
  8614  004908  0E00               	movlw	0
  8615  00490A  2040               	addwfc	btemp+9,w,c
  8616  00490C  6EDA               	movwf	fsr2h,c
  8617  00490E  0EFD               	movlw	-3
  8618  004910  006F FF8F FFDF     	movff	plusw1,indf2
  8619                           
  8620                           ;ringbufs.c: 71:   ++_this->head;
  8621                           ;stkvar	__this @ sp[(0)+-2]
  8622  004916  0EFE               	movlw	-2
  8623  004918  006F FF8C  F041    	movff	plusw1,btemp+10
  8624  00491E  0EFF               	movlw	-1
  8625  004920  006F FF8C  F042    	movff	plusw1,btemp+11
  8626  004926  0E40               	movlw	64
  8627  004928  2441               	addwf	btemp+10,w,c
  8628  00492A  6ED9               	movwf	fsr2l,c
  8629  00492C  0E00               	movlw	0
  8630  00492E  2042               	addwfc	btemp+11,w,c
  8631  004930  6EDA               	movwf	fsr2h,c
  8632  004932  2ADF               	incf	indf2,f,c
  8633                           
  8634                           ;ringbufs.c: 72:   ++_this->count;
  8635                           ;stkvar	__this @ sp[(0)+-2]
  8636  004934  0EFE               	movlw	-2
  8637  004936  006F FF8C  F041    	movff	plusw1,btemp+10
  8638  00493C  0EFF               	movlw	-1
  8639  00493E  006F FF8C  F042    	movff	plusw1,btemp+11
  8640  004944  0E42               	movlw	66
  8641  004946  2441               	addwf	btemp+10,w,c
  8642  004948  6ED9               	movwf	fsr2l,c
  8643  00494A  0E00               	movlw	0
  8644  00494C  2042               	addwfc	btemp+11,w,c
  8645  00494E  6EDA               	movwf	fsr2h,c
  8646  004950  2ADF               	incf	indf2,f,c
  8647  004952                     l1322:
  8648                           
  8649                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
  8650  004952  52E5               	movf	postdec1,f,c
  8651  004954  52E5               	movf	postdec1,f,c
  8652  004956  52E5               	movf	postdec1,f,c
  8653  004958  0012               	return		;funcret
  8654  00495A                     __end_of_ringBufS_put_dma:
  8655                           	opt callstack 0
  8656                           
  8657 ;; *************** function _abs *****************
  8658 ;; Defined at:
  8659 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
  8660 ;; Parameters:    Size  Location     Type
  8661 ;;  a               2  [STACK] int 
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;		None
  8664 ;; Return value:  Size  Location     Type
  8665 ;;                  2  [STACK] int 
  8666 ;; Registers used:
  8667 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  8668 ;; Tracked objects:
  8669 ;;		On entry : 0/1
  8670 ;;		On exit  : 0/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8677 ;;Total ram usage:        0 bytes
  8678 ;; Hardware stack levels used:    1
  8679 ;; Hardware stack levels required when called:    3
  8680 ;; This function calls:
  8681 ;;		Nothing
  8682 ;; This function is called by:
  8683 ;;		_dtoa
  8684 ;; This function uses a reentrant model
  8685 ;;
  8686                           
  8687                           	psect	text43
  8688  0050D2                     __ptext43:
  8689                           	opt callstack 0
  8690  0050D2                     _abs:
  8691                           	opt callstack 23
  8692                           
  8693                           ;stkvar	_a @ sp[(0)+-2]
  8694                           
  8695                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8696                           ;incstack = 0
  8697  0050D2  0EFF               	movlw	-1
  8698  0050D4  BEE3               	btfsc	plusw1,7,c
  8699  0050D6  D007               	goto	u2070
  8700  0050D8  0EFF               	movlw	-1
  8701  0050DA  50E3               	movf	plusw1,w,c
  8702  0050DC  E112               	bnz	l4280
  8703  0050DE  0EFE               	movlw	-2
  8704  0050E0  04E3               	decf	plusw1,w,c
  8705  0050E2  B0D8               	btfsc	status,0,c
  8706  0050E4  D00E               	goto	l4280
  8707  0050E6                     u2070:
  8708                           
  8709                           ;stkvar	_a @ sp[(0)+-2]
  8710  0050E6  0EFE               	movlw	-2
  8711  0050E8  006F FF8C  F037    	movff	plusw1,btemp
  8712  0050EE  1E37               	comf	btemp,f,c
  8713  0050F0  0EFF               	movlw	-1
  8714  0050F2  006F FF8C  F038    	movff	plusw1,btemp+1
  8715  0050F8  1E38               	comf	btemp+1,f,c
  8716  0050FA  2A37               	incf	btemp,f,c
  8717  0050FC  B4D8               	btfsc	status,2,c
  8718  0050FE  2A38               	incf	btemp+1,f,c
  8719  005100  D008               	goto	l2292
  8720  005102                     l4280:
  8721                           
  8722                           ;stkvar	_a @ sp[(0)+-2]
  8723  005102  0EFE               	movlw	-2
  8724  005104  006F FF8C  F037    	movff	plusw1,btemp
  8725  00510A  0EFF               	movlw	-1
  8726  00510C  006F FF8C  F038    	movff	plusw1,btemp+1
  8727  005112                     l2292:
  8728                           
  8729                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
  8730  005112  52E5               	movf	postdec1,f,c
  8731  005114  52E5               	movf	postdec1,f,c
  8732  005116  0012               	return		;funcret
  8733  005118                     __end_of_abs:
  8734                           	opt callstack 0
  8735                           
  8736 ;; *************** function ___aomod *****************
  8737 ;; Defined at:
  8738 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
  8739 ;; Parameters:    Size  Location     Type
  8740 ;;  dividend        8  [STACK] long long 
  8741 ;;  divisor         8  [STACK] long long 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;  sign            1  [STACK] unsigned char 
  8744 ;;  counter         1  [STACK] unsigned char 
  8745 ;; Return value:  Size  Location     Type
  8746 ;;                  8  [STACK] long long 
  8747 ;; Registers used:
  8748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  8749 ;; Tracked objects:
  8750 ;;		On entry : 0/1
  8751 ;;		On exit  : 0/0
  8752 ;;		Unchanged: 0/0
  8753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8758 ;;Total ram usage:        0 bytes
  8759 ;; Hardware stack levels used:    1
  8760 ;; Hardware stack levels required when called:    3
  8761 ;; This function calls:
  8762 ;;		Nothing
  8763 ;; This function is called by:
  8764 ;;		_dtoa
  8765 ;; This function uses a reentrant model
  8766 ;;
  8767                           
  8768                           	psect	text44
  8769  003A20                     __ptext44:
  8770                           	opt callstack 0
  8771  003A20                     ___aomod:
  8772                           	opt callstack 0
  8773                           
  8774                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  8775  003A20  52E6               	movf	postinc1,f,c
  8776  003A22  52E6               	movf	postinc1,f,c
  8777                           
  8778                           ;stkvar	_sign @ sp[(-2)+0]
  8779                           
  8780                           ;incstack = 0
  8781  003A24  0EFE               	movlw	-2
  8782  003A26  6AE3               	clrf	plusw1,c
  8783                           
  8784                           ;stkvar	_dividend @ sp[(-2)+-8]
  8785  003A28  0EFD               	movlw	-3
  8786  003A2A  AEE3               	btfss	plusw1,7,c
  8787  003A2C  D028               	goto	l4362
  8788                           
  8789                           ;stkvar	_dividend @ sp[(-2)+-8]
  8790                           ;stkvar	_dividend @ sp[(-2)+-8]
  8791  003A2E  0EF6               	movlw	-10
  8792  003A30  6CE3               	negf	plusw1,c
  8793  003A32  0EF7               	movlw	-9
  8794  003A34  1EE3               	comf	plusw1,f,c
  8795  003A36  0EF8               	movlw	-8
  8796  003A38  1EE3               	comf	plusw1,f,c
  8797  003A3A  0EF9               	movlw	-7
  8798  003A3C  1EE3               	comf	plusw1,f,c
  8799  003A3E  0EFA               	movlw	-6
  8800  003A40  1EE3               	comf	plusw1,f,c
  8801  003A42  0EFB               	movlw	-5
  8802  003A44  1EE3               	comf	plusw1,f,c
  8803  003A46  0EFC               	movlw	-4
  8804  003A48  1EE3               	comf	plusw1,f,c
  8805  003A4A  0EFD               	movlw	-3
  8806  003A4C  1EE3               	comf	plusw1,f,c
  8807  003A4E  E314               	bnc	u2300
  8808  003A50  0EF7               	movlw	-9
  8809  003A52  2AE3               	incf	plusw1,f,c
  8810  003A54  E311               	bnc	u2300
  8811  003A56  0EF8               	movlw	-8
  8812  003A58  2AE3               	incf	plusw1,f,c
  8813  003A5A  E30E               	bnc	u2300
  8814  003A5C  0EF9               	movlw	-7
  8815  003A5E  2AE3               	incf	plusw1,f,c
  8816  003A60  E30B               	bnc	u2300
  8817  003A62  0EFA               	movlw	-6
  8818  003A64  2AE3               	incf	plusw1,f,c
  8819  003A66  E308               	bnc	u2300
  8820  003A68  0EFB               	movlw	-5
  8821  003A6A  2AE3               	incf	plusw1,f,c
  8822  003A6C  E305               	bnc	u2300
  8823  003A6E  0EFC               	movlw	-4
  8824  003A70  2AE3               	incf	plusw1,f,c
  8825  003A72  E302               	bnc	u2300
  8826  003A74  0EFD               	movlw	-3
  8827  003A76  2AE3               	incf	plusw1,f,c
  8828  003A78                     u2300:
  8829                           
  8830                           ;stkvar	_sign @ sp[(-2)+0]
  8831  003A78  0EFE               	movlw	-2
  8832  003A7A  6AE3               	clrf	plusw1,c
  8833  003A7C  2AE3               	incf	plusw1,f,c
  8834  003A7E                     l4362:
  8835                           
  8836                           ;stkvar	_divisor @ sp[(-2)+-16]
  8837  003A7E  0EF5               	movlw	-11
  8838  003A80  AEE3               	btfss	plusw1,7,c
  8839  003A82  D025               	goto	u2320
  8840                           
  8841                           ;stkvar	_divisor @ sp[(-2)+-16]
  8842                           ;stkvar	_divisor @ sp[(-2)+-16]
  8843  003A84  0EEE               	movlw	-18
  8844  003A86  6CE3               	negf	plusw1,c
  8845  003A88  0EEF               	movlw	-17
  8846  003A8A  1EE3               	comf	plusw1,f,c
  8847  003A8C  0EF0               	movlw	-16
  8848  003A8E  1EE3               	comf	plusw1,f,c
  8849  003A90  0EF1               	movlw	-15
  8850  003A92  1EE3               	comf	plusw1,f,c
  8851  003A94  0EF2               	movlw	-14
  8852  003A96  1EE3               	comf	plusw1,f,c
  8853  003A98  0EF3               	movlw	-13
  8854  003A9A  1EE3               	comf	plusw1,f,c
  8855  003A9C  0EF4               	movlw	-12
  8856  003A9E  1EE3               	comf	plusw1,f,c
  8857  003AA0  0EF5               	movlw	-11
  8858  003AA2  1EE3               	comf	plusw1,f,c
  8859  003AA4  E314               	bnc	u2320
  8860  003AA6  0EEF               	movlw	-17
  8861  003AA8  2AE3               	incf	plusw1,f,c
  8862  003AAA  E311               	bnc	u2320
  8863  003AAC  0EF0               	movlw	-16
  8864  003AAE  2AE3               	incf	plusw1,f,c
  8865  003AB0  E30E               	bnc	u2320
  8866  003AB2  0EF1               	movlw	-15
  8867  003AB4  2AE3               	incf	plusw1,f,c
  8868  003AB6  E30B               	bnc	u2320
  8869  003AB8  0EF2               	movlw	-14
  8870  003ABA  2AE3               	incf	plusw1,f,c
  8871  003ABC  E308               	bnc	u2320
  8872  003ABE  0EF3               	movlw	-13
  8873  003AC0  2AE3               	incf	plusw1,f,c
  8874  003AC2  E305               	bnc	u2320
  8875  003AC4  0EF4               	movlw	-12
  8876  003AC6  2AE3               	incf	plusw1,f,c
  8877  003AC8  E302               	bnc	u2320
  8878  003ACA  0EF5               	movlw	-11
  8879  003ACC  2AE3               	incf	plusw1,f,c
  8880  003ACE                     u2320:
  8881                           
  8882                           ;stkvar	_divisor @ sp[(-2)+-16]
  8883  003ACE  0EEE               	movlw	-18
  8884  003AD0  50E3               	movf	plusw1,w,c
  8885  003AD2  E116               	bnz	u2330
  8886  003AD4  0EEF               	movlw	-17
  8887  003AD6  50E3               	movf	plusw1,w,c
  8888  003AD8  E113               	bnz	u2330
  8889  003ADA  0EF0               	movlw	-16
  8890  003ADC  50E3               	movf	plusw1,w,c
  8891  003ADE  E110               	bnz	u2330
  8892  003AE0  0EF1               	movlw	-15
  8893  003AE2  50E3               	movf	plusw1,w,c
  8894  003AE4  E10D               	bnz	u2330
  8895  003AE6  0EF2               	movlw	-14
  8896  003AE8  50E3               	movf	plusw1,w,c
  8897  003AEA  E10A               	bnz	u2330
  8898  003AEC  0EF3               	movlw	-13
  8899  003AEE  50E3               	movf	plusw1,w,c
  8900  003AF0  E107               	bnz	u2330
  8901  003AF2  0EF4               	movlw	-12
  8902  003AF4  50E3               	movf	plusw1,w,c
  8903  003AF6  E104               	bnz	u2330
  8904  003AF8  0EF5               	movlw	-11
  8905  003AFA  50E3               	movf	plusw1,w,c
  8906  003AFC  B4D8               	btfsc	status,2,c
  8907  003AFE  D075               	goto	u2360
  8908  003B00                     u2330:
  8909                           
  8910                           ;stkvar	_counter @ sp[(-2)+1]
  8911  003B00  0EFF               	movlw	-1
  8912  003B02  6AE3               	clrf	plusw1,c
  8913  003B04  D012               	goto	L21
  8914  003B06                     l4370:
  8915                           
  8916                           ;stkvar	_divisor @ sp[(-2)+-16]
  8917  003B06  90D8               	bcf	status,0,c
  8918  003B08  0EEE               	movlw	-18
  8919  003B0A  36E3               	rlcf	plusw1,f,c
  8920  003B0C  0EEF               	movlw	-17
  8921  003B0E  36E3               	rlcf	plusw1,f,c
  8922  003B10  0EF0               	movlw	-16
  8923  003B12  36E3               	rlcf	plusw1,f,c
  8924  003B14  0EF1               	movlw	-15
  8925  003B16  36E3               	rlcf	plusw1,f,c
  8926  003B18  0EF2               	movlw	-14
  8927  003B1A  36E3               	rlcf	plusw1,f,c
  8928  003B1C  0EF3               	movlw	-13
  8929  003B1E  36E3               	rlcf	plusw1,f,c
  8930  003B20  0EF4               	movlw	-12
  8931  003B22  36E3               	rlcf	plusw1,f,c
  8932  003B24  0EF5               	movlw	-11
  8933  003B26  36E3               	rlcf	plusw1,f,c
  8934                           
  8935                           ;stkvar	_counter @ sp[(-2)+1]
  8936  003B28  0EFF               	movlw	-1
  8937  003B2A                     L21:
  8938  003B2A  2AE3               	incf	plusw1,f,c
  8939                           
  8940                           ;stkvar	_divisor @ sp[(-2)+-16]
  8941  003B2C  0EF5               	movlw	-11
  8942  003B2E  AEE3               	btfss	plusw1,7,c
  8943  003B30  D7EA               	goto	l4370
  8944  003B32                     u2340:
  8945                           
  8946                           ;stkvar	_divisor @ sp[(-2)+-16]
  8947                           ;stkvar	_dividend @ sp[(-2)+-8]
  8948  003B32  50E1               	movf	fsr1l,w,c
  8949  003B34  0FF6               	addlw	-10
  8950  003B36  6ED9               	movwf	fsr2l,c
  8951  003B38  50E2               	movf	fsr1h,w,c
  8952  003B3A  6EDA               	movwf	fsr2h,c
  8953  003B3C  0EFF               	movlw	255
  8954  003B3E  22DA               	addwfc	fsr2h,f,c
  8955  003B40  0EEE               	movlw	-18
  8956  003B42  50E3               	movf	plusw1,w,c
  8957  003B44  5CDE               	subwf	postinc2,w,c
  8958  003B46  0EEF               	movlw	-17
  8959  003B48  50E3               	movf	plusw1,w,c
  8960  003B4A  58DE               	subwfb	postinc2,w,c
  8961  003B4C  0EF0               	movlw	-16
  8962  003B4E  50E3               	movf	plusw1,w,c
  8963  003B50  58DE               	subwfb	postinc2,w,c
  8964  003B52  0EF1               	movlw	-15
  8965  003B54  50E3               	movf	plusw1,w,c
  8966  003B56  58DE               	subwfb	postinc2,w,c
  8967  003B58  0EF2               	movlw	-14
  8968  003B5A  50E3               	movf	plusw1,w,c
  8969  003B5C  58DE               	subwfb	postinc2,w,c
  8970  003B5E  0EF3               	movlw	-13
  8971  003B60  50E3               	movf	plusw1,w,c
  8972  003B62  58DE               	subwfb	postinc2,w,c
  8973  003B64  0EF4               	movlw	-12
  8974  003B66  50E3               	movf	plusw1,w,c
  8975  003B68  58DE               	subwfb	postinc2,w,c
  8976  003B6A  0EF5               	movlw	-11
  8977  003B6C  50E3               	movf	plusw1,w,c
  8978  003B6E  58DE               	subwfb	postinc2,w,c
  8979  003B70  A0D8               	btfss	status,0,c
  8980  003B72  D01F               	goto	l4378
  8981                           
  8982                           ;stkvar	_divisor @ sp[(-2)+-16]
  8983                           ;stkvar	_dividend @ sp[(-2)+-8]
  8984  003B74  50E1               	movf	fsr1l,w,c
  8985  003B76  0FF6               	addlw	-10
  8986  003B78  6ED9               	movwf	fsr2l,c
  8987  003B7A  50E2               	movf	fsr1h,w,c
  8988  003B7C  6EDA               	movwf	fsr2h,c
  8989  003B7E  0EFF               	movlw	255
  8990  003B80  22DA               	addwfc	fsr2h,f,c
  8991  003B82  0EEE               	movlw	-18
  8992  003B84  50E3               	movf	plusw1,w,c
  8993  003B86  5EDE               	subwf	postinc2,f,c
  8994  003B88  0EEF               	movlw	-17
  8995  003B8A  50E3               	movf	plusw1,w,c
  8996  003B8C  5ADE               	subwfb	postinc2,f,c
  8997  003B8E  0EF0               	movlw	-16
  8998  003B90  50E3               	movf	plusw1,w,c
  8999  003B92  5ADE               	subwfb	postinc2,f,c
  9000  003B94  0EF1               	movlw	-15
  9001  003B96  50E3               	movf	plusw1,w,c
  9002  003B98  5ADE               	subwfb	postinc2,f,c
  9003  003B9A  0EF2               	movlw	-14
  9004  003B9C  50E3               	movf	plusw1,w,c
  9005  003B9E  5ADE               	subwfb	postinc2,f,c
  9006  003BA0  0EF3               	movlw	-13
  9007  003BA2  50E3               	movf	plusw1,w,c
  9008  003BA4  5ADE               	subwfb	postinc2,f,c
  9009  003BA6  0EF4               	movlw	-12
  9010  003BA8  50E3               	movf	plusw1,w,c
  9011  003BAA  5ADE               	subwfb	postinc2,f,c
  9012  003BAC  0EF5               	movlw	-11
  9013  003BAE  50E3               	movf	plusw1,w,c
  9014  003BB0  5ADE               	subwfb	postinc2,f,c
  9015  003BB2                     l4378:
  9016                           
  9017                           ;stkvar	_divisor @ sp[(-2)+-16]
  9018  003BB2  90D8               	bcf	status,0,c
  9019  003BB4  0EF5               	movlw	-11
  9020  003BB6  32E3               	rrcf	plusw1,f,c
  9021  003BB8  0EF4               	movlw	-12
  9022  003BBA  32E3               	rrcf	plusw1,f,c
  9023  003BBC  0EF3               	movlw	-13
  9024  003BBE  32E3               	rrcf	plusw1,f,c
  9025  003BC0  0EF2               	movlw	-14
  9026  003BC2  32E3               	rrcf	plusw1,f,c
  9027  003BC4  0EF1               	movlw	-15
  9028  003BC6  32E3               	rrcf	plusw1,f,c
  9029  003BC8  0EF0               	movlw	-16
  9030  003BCA  32E3               	rrcf	plusw1,f,c
  9031  003BCC  0EEF               	movlw	-17
  9032  003BCE  32E3               	rrcf	plusw1,f,c
  9033  003BD0  0EEE               	movlw	-18
  9034  003BD2  32E3               	rrcf	plusw1,f,c
  9035                           
  9036                           ;stkvar	_counter @ sp[(-2)+1]
  9037  003BD4  0EFF               	movlw	-1
  9038  003BD6  50E3               	movf	plusw1,w,c
  9039  003BD8  6E37               	movwf	btemp,c
  9040  003BDA  0E01               	movlw	1
  9041  003BDC  5E37               	subwf	btemp,f,c
  9042  003BDE  0EFF               	movlw	-1
  9043  003BE0  0060  F0DF  FFE3   	movff	btemp,plusw1
  9044  003BE6  A4D8               	btfss	status,2,c
  9045  003BE8  D7A4               	goto	u2340
  9046  003BEA                     u2360:
  9047                           
  9048                           ;stkvar	_sign @ sp[(-2)+0]
  9049  003BEA  0EFE               	movlw	-2
  9050  003BEC  50E3               	movf	plusw1,w,c
  9051  003BEE  B4D8               	btfsc	status,2,c
  9052  003BF0  D025               	goto	u2380
  9053                           
  9054                           ;stkvar	_dividend @ sp[(-2)+-8]
  9055                           ;stkvar	_dividend @ sp[(-2)+-8]
  9056  003BF2  0EF6               	movlw	-10
  9057  003BF4  6CE3               	negf	plusw1,c
  9058  003BF6  0EF7               	movlw	-9
  9059  003BF8  1EE3               	comf	plusw1,f,c
  9060  003BFA  0EF8               	movlw	-8
  9061  003BFC  1EE3               	comf	plusw1,f,c
  9062  003BFE  0EF9               	movlw	-7
  9063  003C00  1EE3               	comf	plusw1,f,c
  9064  003C02  0EFA               	movlw	-6
  9065  003C04  1EE3               	comf	plusw1,f,c
  9066  003C06  0EFB               	movlw	-5
  9067  003C08  1EE3               	comf	plusw1,f,c
  9068  003C0A  0EFC               	movlw	-4
  9069  003C0C  1EE3               	comf	plusw1,f,c
  9070  003C0E  0EFD               	movlw	-3
  9071  003C10  1EE3               	comf	plusw1,f,c
  9072  003C12  E314               	bnc	u2380
  9073  003C14  0EF7               	movlw	-9
  9074  003C16  2AE3               	incf	plusw1,f,c
  9075  003C18  E311               	bnc	u2380
  9076  003C1A  0EF8               	movlw	-8
  9077  003C1C  2AE3               	incf	plusw1,f,c
  9078  003C1E  E30E               	bnc	u2380
  9079  003C20  0EF9               	movlw	-7
  9080  003C22  2AE3               	incf	plusw1,f,c
  9081  003C24  E30B               	bnc	u2380
  9082  003C26  0EFA               	movlw	-6
  9083  003C28  2AE3               	incf	plusw1,f,c
  9084  003C2A  E308               	bnc	u2380
  9085  003C2C  0EFB               	movlw	-5
  9086  003C2E  2AE3               	incf	plusw1,f,c
  9087  003C30  E305               	bnc	u2380
  9088  003C32  0EFC               	movlw	-4
  9089  003C34  2AE3               	incf	plusw1,f,c
  9090  003C36  E302               	bnc	u2380
  9091  003C38  0EFD               	movlw	-3
  9092  003C3A  2AE3               	incf	plusw1,f,c
  9093  003C3C                     u2380:
  9094                           
  9095                           ;stkvar	_dividend @ sp[(-2)+-8]
  9096  003C3C  0EF6               	movlw	246
  9097  003C3E  24E1               	addwf	fsr1l,w,c
  9098  003C40  6ED9               	movwf	fsr2l,c
  9099  003C42  0EFF               	movlw	255
  9100  003C44  20E2               	addwfc	fsr1h,w,c
  9101  003C46  6EDA               	movwf	fsr2h,c
  9102                           
  9103                           ;stkvar	?___aomod @ sp[(-2)+-8]
  9104  003C48  0E08               	movlw	8
  9105  003C4A  6E37               	movwf	btemp,c
  9106  003C4C  0EF6               	movlw	-10
  9107  003C4E                     us239999:
  9108  003C4E  006F FF7B FFE3     	movff	postinc2,plusw1
  9109  003C54  28E8               	incf	wreg,w,c
  9110  003C56  2E37               	decfsz	btemp,f,c
  9111  003C58  D7FA               	bra	us239999
  9112                           
  9113                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
  9114  003C5A  52E5               	movf	postdec1,f,c
  9115  003C5C  52E5               	movf	postdec1,f,c
  9116  003C5E  0012               	return		;funcret
  9117  003C60                     __end_of___aomod:
  9118                           	opt callstack 0
  9119                           
  9120 ;; *************** function ___aodiv *****************
  9121 ;; Defined at:
  9122 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
  9123 ;; Parameters:    Size  Location     Type
  9124 ;;  dividend        8  [STACK] long long 
  9125 ;;  divisor         8  [STACK] long long 
  9126 ;; Auto vars:     Size  Location     Type
  9127 ;;  quotient        8  [STACK] long long 
  9128 ;;  sign            1  [STACK] unsigned char 
  9129 ;;  counter         1  [STACK] unsigned char 
  9130 ;; Return value:  Size  Location     Type
  9131 ;;                  8  [STACK] long long 
  9132 ;; Registers used:
  9133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9134 ;; Tracked objects:
  9135 ;;		On entry : 0/1
  9136 ;;		On exit  : 0/0
  9137 ;;		Unchanged: 0/0
  9138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9143 ;;Total ram usage:        0 bytes
  9144 ;; Hardware stack levels used:    1
  9145 ;; Hardware stack levels required when called:    3
  9146 ;; This function calls:
  9147 ;;		Nothing
  9148 ;; This function is called by:
  9149 ;;		_dtoa
  9150 ;; This function uses a reentrant model
  9151 ;;
  9152                           
  9153                           	psect	text45
  9154  0037A0                     __ptext45:
  9155                           	opt callstack 0
  9156  0037A0                     ___aodiv:
  9157                           	opt callstack 0
  9158                           
  9159                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
  9160  0037A0  0E0A               	movlw	10
  9161  0037A2  26E1               	addwf	fsr1l,f,c
  9162  0037A4  0E00               	movlw	0
  9163  0037A6  22E2               	addwfc	fsr1h,f,c
  9164                           
  9165                           ;stkvar	_sign @ sp[(-10)+8]
  9166                           
  9167                           ;incstack = 0
  9168  0037A8  0EFE               	movlw	-2
  9169  0037AA  6AE3               	clrf	plusw1,c
  9170                           
  9171                           ;stkvar	_divisor @ sp[(-10)+-16]
  9172  0037AC  0EED               	movlw	-19
  9173  0037AE  AEE3               	btfss	plusw1,7,c
  9174  0037B0  D028               	goto	l4318
  9175                           
  9176                           ;stkvar	_divisor @ sp[(-10)+-16]
  9177                           ;stkvar	_divisor @ sp[(-10)+-16]
  9178  0037B2  0EE6               	movlw	-26
  9179  0037B4  6CE3               	negf	plusw1,c
  9180  0037B6  0EE7               	movlw	-25
  9181  0037B8  1EE3               	comf	plusw1,f,c
  9182  0037BA  0EE8               	movlw	-24
  9183  0037BC  1EE3               	comf	plusw1,f,c
  9184  0037BE  0EE9               	movlw	-23
  9185  0037C0  1EE3               	comf	plusw1,f,c
  9186  0037C2  0EEA               	movlw	-22
  9187  0037C4  1EE3               	comf	plusw1,f,c
  9188  0037C6  0EEB               	movlw	-21
  9189  0037C8  1EE3               	comf	plusw1,f,c
  9190  0037CA  0EEC               	movlw	-20
  9191  0037CC  1EE3               	comf	plusw1,f,c
  9192  0037CE  0EED               	movlw	-19
  9193  0037D0  1EE3               	comf	plusw1,f,c
  9194  0037D2  E314               	bnc	u2180
  9195  0037D4  0EE7               	movlw	-25
  9196  0037D6  2AE3               	incf	plusw1,f,c
  9197  0037D8  E311               	bnc	u2180
  9198  0037DA  0EE8               	movlw	-24
  9199  0037DC  2AE3               	incf	plusw1,f,c
  9200  0037DE  E30E               	bnc	u2180
  9201  0037E0  0EE9               	movlw	-23
  9202  0037E2  2AE3               	incf	plusw1,f,c
  9203  0037E4  E30B               	bnc	u2180
  9204  0037E6  0EEA               	movlw	-22
  9205  0037E8  2AE3               	incf	plusw1,f,c
  9206  0037EA  E308               	bnc	u2180
  9207  0037EC  0EEB               	movlw	-21
  9208  0037EE  2AE3               	incf	plusw1,f,c
  9209  0037F0  E305               	bnc	u2180
  9210  0037F2  0EEC               	movlw	-20
  9211  0037F4  2AE3               	incf	plusw1,f,c
  9212  0037F6  E302               	bnc	u2180
  9213  0037F8  0EED               	movlw	-19
  9214  0037FA  2AE3               	incf	plusw1,f,c
  9215  0037FC                     u2180:
  9216                           
  9217                           ;stkvar	_sign @ sp[(-10)+8]
  9218  0037FC  0EFE               	movlw	-2
  9219  0037FE  6AE3               	clrf	plusw1,c
  9220  003800  2AE3               	incf	plusw1,f,c
  9221  003802                     l4318:
  9222                           
  9223                           ;stkvar	_dividend @ sp[(-10)+-8]
  9224  003802  0EF5               	movlw	-11
  9225  003804  AEE3               	btfss	plusw1,7,c
  9226  003806  D027               	goto	l4324
  9227                           
  9228                           ;stkvar	_dividend @ sp[(-10)+-8]
  9229                           ;stkvar	_dividend @ sp[(-10)+-8]
  9230  003808  0EEE               	movlw	-18
  9231  00380A  6CE3               	negf	plusw1,c
  9232  00380C  0EEF               	movlw	-17
  9233  00380E  1EE3               	comf	plusw1,f,c
  9234  003810  0EF0               	movlw	-16
  9235  003812  1EE3               	comf	plusw1,f,c
  9236  003814  0EF1               	movlw	-15
  9237  003816  1EE3               	comf	plusw1,f,c
  9238  003818  0EF2               	movlw	-14
  9239  00381A  1EE3               	comf	plusw1,f,c
  9240  00381C  0EF3               	movlw	-13
  9241  00381E  1EE3               	comf	plusw1,f,c
  9242  003820  0EF4               	movlw	-12
  9243  003822  1EE3               	comf	plusw1,f,c
  9244  003824  0EF5               	movlw	-11
  9245  003826  1EE3               	comf	plusw1,f,c
  9246  003828  E314               	bnc	u2200
  9247  00382A  0EEF               	movlw	-17
  9248  00382C  2AE3               	incf	plusw1,f,c
  9249  00382E  E311               	bnc	u2200
  9250  003830  0EF0               	movlw	-16
  9251  003832  2AE3               	incf	plusw1,f,c
  9252  003834  E30E               	bnc	u2200
  9253  003836  0EF1               	movlw	-15
  9254  003838  2AE3               	incf	plusw1,f,c
  9255  00383A  E30B               	bnc	u2200
  9256  00383C  0EF2               	movlw	-14
  9257  00383E  2AE3               	incf	plusw1,f,c
  9258  003840  E308               	bnc	u2200
  9259  003842  0EF3               	movlw	-13
  9260  003844  2AE3               	incf	plusw1,f,c
  9261  003846  E305               	bnc	u2200
  9262  003848  0EF4               	movlw	-12
  9263  00384A  2AE3               	incf	plusw1,f,c
  9264  00384C  E302               	bnc	u2200
  9265  00384E  0EF5               	movlw	-11
  9266  003850  2AE3               	incf	plusw1,f,c
  9267  003852                     u2200:
  9268                           
  9269                           ;stkvar	_sign @ sp[(-10)+8]
  9270  003852  0EFE               	movlw	-2
  9271  003854  70E3               	btg	plusw1,0,c
  9272  003856                     l4324:
  9273                           
  9274                           ;stkvar	_quotient @ sp[(-10)+0]
  9275  003856  0E07               	movlw	7
  9276  003858  6E37               	movwf	btemp,c
  9277  00385A  0EF6               	movlw	-10
  9278  00385C                     u2211:
  9279  00385C  6AE3               	clrf	plusw1,c
  9280  00385E  2AE8               	incf	wreg,f,c
  9281  003860  0637               	decf	btemp,f,c
  9282  003862  E2FC               	bc	u2211
  9283                           
  9284                           ;stkvar	_divisor @ sp[(-10)+-16]
  9285  003864  0EE6               	movlw	-26
  9286  003866  50E3               	movf	plusw1,w,c
  9287  003868  E116               	bnz	u2220
  9288  00386A  0EE7               	movlw	-25
  9289  00386C  50E3               	movf	plusw1,w,c
  9290  00386E  E113               	bnz	u2220
  9291  003870  0EE8               	movlw	-24
  9292  003872  50E3               	movf	plusw1,w,c
  9293  003874  E110               	bnz	u2220
  9294  003876  0EE9               	movlw	-23
  9295  003878  50E3               	movf	plusw1,w,c
  9296  00387A  E10D               	bnz	u2220
  9297  00387C  0EEA               	movlw	-22
  9298  00387E  50E3               	movf	plusw1,w,c
  9299  003880  E10A               	bnz	u2220
  9300  003882  0EEB               	movlw	-21
  9301  003884  50E3               	movf	plusw1,w,c
  9302  003886  E107               	bnz	u2220
  9303  003888  0EEC               	movlw	-20
  9304  00388A  50E3               	movf	plusw1,w,c
  9305  00388C  E104               	bnz	u2220
  9306  00388E  0EED               	movlw	-19
  9307  003890  50E3               	movf	plusw1,w,c
  9308  003892  B4D8               	btfsc	status,2,c
  9309  003894  D088               	goto	u2250
  9310  003896                     u2220:
  9311                           
  9312                           ;stkvar	_counter @ sp[(-10)+9]
  9313  003896  0EFF               	movlw	-1
  9314  003898  6AE3               	clrf	plusw1,c
  9315  00389A  D012               	goto	L22
  9316  00389C                     l4330:
  9317                           
  9318                           ;stkvar	_divisor @ sp[(-10)+-16]
  9319  00389C  90D8               	bcf	status,0,c
  9320  00389E  0EE6               	movlw	-26
  9321  0038A0  36E3               	rlcf	plusw1,f,c
  9322  0038A2  0EE7               	movlw	-25
  9323  0038A4  36E3               	rlcf	plusw1,f,c
  9324  0038A6  0EE8               	movlw	-24
  9325  0038A8  36E3               	rlcf	plusw1,f,c
  9326  0038AA  0EE9               	movlw	-23
  9327  0038AC  36E3               	rlcf	plusw1,f,c
  9328  0038AE  0EEA               	movlw	-22
  9329  0038B0  36E3               	rlcf	plusw1,f,c
  9330  0038B2  0EEB               	movlw	-21
  9331  0038B4  36E3               	rlcf	plusw1,f,c
  9332  0038B6  0EEC               	movlw	-20
  9333  0038B8  36E3               	rlcf	plusw1,f,c
  9334  0038BA  0EED               	movlw	-19
  9335  0038BC  36E3               	rlcf	plusw1,f,c
  9336                           
  9337                           ;stkvar	_counter @ sp[(-10)+9]
  9338  0038BE  0EFF               	movlw	-1
  9339  0038C0                     L22:
  9340  0038C0  2AE3               	incf	plusw1,f,c
  9341                           
  9342                           ;stkvar	_divisor @ sp[(-10)+-16]
  9343  0038C2  0EED               	movlw	-19
  9344  0038C4  AEE3               	btfss	plusw1,7,c
  9345  0038C6  D7EA               	goto	l4330
  9346  0038C8                     u2230:
  9347                           
  9348                           ;stkvar	_quotient @ sp[(-10)+0]
  9349  0038C8  90D8               	bcf	status,0,c
  9350  0038CA  0EF6               	movlw	-10
  9351  0038CC  36E3               	rlcf	plusw1,f,c
  9352  0038CE  0EF7               	movlw	-9
  9353  0038D0  36E3               	rlcf	plusw1,f,c
  9354  0038D2  0EF8               	movlw	-8
  9355  0038D4  36E3               	rlcf	plusw1,f,c
  9356  0038D6  0EF9               	movlw	-7
  9357  0038D8  36E3               	rlcf	plusw1,f,c
  9358  0038DA  0EFA               	movlw	-6
  9359  0038DC  36E3               	rlcf	plusw1,f,c
  9360  0038DE  0EFB               	movlw	-5
  9361  0038E0  36E3               	rlcf	plusw1,f,c
  9362  0038E2  0EFC               	movlw	-4
  9363  0038E4  36E3               	rlcf	plusw1,f,c
  9364  0038E6  0EFD               	movlw	-3
  9365  0038E8  36E3               	rlcf	plusw1,f,c
  9366                           
  9367                           ;stkvar	_divisor @ sp[(-10)+-16]
  9368                           ;stkvar	_dividend @ sp[(-10)+-8]
  9369  0038EA  50E1               	movf	fsr1l,w,c
  9370  0038EC  0FEE               	addlw	-18
  9371  0038EE  6ED9               	movwf	fsr2l,c
  9372  0038F0  50E2               	movf	fsr1h,w,c
  9373  0038F2  6EDA               	movwf	fsr2h,c
  9374  0038F4  0EFF               	movlw	255
  9375  0038F6  22DA               	addwfc	fsr2h,f,c
  9376  0038F8  0EE6               	movlw	-26
  9377  0038FA  50E3               	movf	plusw1,w,c
  9378  0038FC  5CDE               	subwf	postinc2,w,c
  9379  0038FE  0EE7               	movlw	-25
  9380  003900  50E3               	movf	plusw1,w,c
  9381  003902  58DE               	subwfb	postinc2,w,c
  9382  003904  0EE8               	movlw	-24
  9383  003906  50E3               	movf	plusw1,w,c
  9384  003908  58DE               	subwfb	postinc2,w,c
  9385  00390A  0EE9               	movlw	-23
  9386  00390C  50E3               	movf	plusw1,w,c
  9387  00390E  58DE               	subwfb	postinc2,w,c
  9388  003910  0EEA               	movlw	-22
  9389  003912  50E3               	movf	plusw1,w,c
  9390  003914  58DE               	subwfb	postinc2,w,c
  9391  003916  0EEB               	movlw	-21
  9392  003918  50E3               	movf	plusw1,w,c
  9393  00391A  58DE               	subwfb	postinc2,w,c
  9394  00391C  0EEC               	movlw	-20
  9395  00391E  50E3               	movf	plusw1,w,c
  9396  003920  58DE               	subwfb	postinc2,w,c
  9397  003922  0EED               	movlw	-19
  9398  003924  50E3               	movf	plusw1,w,c
  9399  003926  58DE               	subwfb	postinc2,w,c
  9400  003928  A0D8               	btfss	status,0,c
  9401  00392A  D021               	goto	l4342
  9402                           
  9403                           ;stkvar	_divisor @ sp[(-10)+-16]
  9404                           ;stkvar	_dividend @ sp[(-10)+-8]
  9405  00392C  50E1               	movf	fsr1l,w,c
  9406  00392E  0FEE               	addlw	-18
  9407  003930  6ED9               	movwf	fsr2l,c
  9408  003932  50E2               	movf	fsr1h,w,c
  9409  003934  6EDA               	movwf	fsr2h,c
  9410  003936  0EFF               	movlw	255
  9411  003938  22DA               	addwfc	fsr2h,f,c
  9412  00393A  0EE6               	movlw	-26
  9413  00393C  50E3               	movf	plusw1,w,c
  9414  00393E  5EDE               	subwf	postinc2,f,c
  9415  003940  0EE7               	movlw	-25
  9416  003942  50E3               	movf	plusw1,w,c
  9417  003944  5ADE               	subwfb	postinc2,f,c
  9418  003946  0EE8               	movlw	-24
  9419  003948  50E3               	movf	plusw1,w,c
  9420  00394A  5ADE               	subwfb	postinc2,f,c
  9421  00394C  0EE9               	movlw	-23
  9422  00394E  50E3               	movf	plusw1,w,c
  9423  003950  5ADE               	subwfb	postinc2,f,c
  9424  003952  0EEA               	movlw	-22
  9425  003954  50E3               	movf	plusw1,w,c
  9426  003956  5ADE               	subwfb	postinc2,f,c
  9427  003958  0EEB               	movlw	-21
  9428  00395A  50E3               	movf	plusw1,w,c
  9429  00395C  5ADE               	subwfb	postinc2,f,c
  9430  00395E  0EEC               	movlw	-20
  9431  003960  50E3               	movf	plusw1,w,c
  9432  003962  5ADE               	subwfb	postinc2,f,c
  9433  003964  0EED               	movlw	-19
  9434  003966  50E3               	movf	plusw1,w,c
  9435  003968  5ADE               	subwfb	postinc2,f,c
  9436                           
  9437                           ;stkvar	_quotient @ sp[(-10)+0]
  9438  00396A  0EF6               	movlw	-10
  9439  00396C  80E3               	bsf	plusw1,0,c
  9440  00396E                     l4342:
  9441                           
  9442                           ;stkvar	_divisor @ sp[(-10)+-16]
  9443  00396E  90D8               	bcf	status,0,c
  9444  003970  0EED               	movlw	-19
  9445  003972  32E3               	rrcf	plusw1,f,c
  9446  003974  0EEC               	movlw	-20
  9447  003976  32E3               	rrcf	plusw1,f,c
  9448  003978  0EEB               	movlw	-21
  9449  00397A  32E3               	rrcf	plusw1,f,c
  9450  00397C  0EEA               	movlw	-22
  9451  00397E  32E3               	rrcf	plusw1,f,c
  9452  003980  0EE9               	movlw	-23
  9453  003982  32E3               	rrcf	plusw1,f,c
  9454  003984  0EE8               	movlw	-24
  9455  003986  32E3               	rrcf	plusw1,f,c
  9456  003988  0EE7               	movlw	-25
  9457  00398A  32E3               	rrcf	plusw1,f,c
  9458  00398C  0EE6               	movlw	-26
  9459  00398E  32E3               	rrcf	plusw1,f,c
  9460                           
  9461                           ;stkvar	_counter @ sp[(-10)+9]
  9462  003990  0EFF               	movlw	-1
  9463  003992  50E3               	movf	plusw1,w,c
  9464  003994  6E37               	movwf	btemp,c
  9465  003996  0E01               	movlw	1
  9466  003998  5E37               	subwf	btemp,f,c
  9467  00399A  0EFF               	movlw	-1
  9468  00399C  0060  F0DF  FFE3   	movff	btemp,plusw1
  9469  0039A2  A4D8               	btfss	status,2,c
  9470  0039A4  D791               	goto	u2230
  9471  0039A6                     u2250:
  9472                           
  9473                           ;stkvar	_sign @ sp[(-10)+8]
  9474  0039A6  0EFE               	movlw	-2
  9475  0039A8  50E3               	movf	plusw1,w,c
  9476  0039AA  B4D8               	btfsc	status,2,c
  9477  0039AC  D025               	goto	u2270
  9478                           
  9479                           ;stkvar	_quotient @ sp[(-10)+0]
  9480                           ;stkvar	_quotient @ sp[(-10)+0]
  9481  0039AE  0EF6               	movlw	-10
  9482  0039B0  6CE3               	negf	plusw1,c
  9483  0039B2  0EF7               	movlw	-9
  9484  0039B4  1EE3               	comf	plusw1,f,c
  9485  0039B6  0EF8               	movlw	-8
  9486  0039B8  1EE3               	comf	plusw1,f,c
  9487  0039BA  0EF9               	movlw	-7
  9488  0039BC  1EE3               	comf	plusw1,f,c
  9489  0039BE  0EFA               	movlw	-6
  9490  0039C0  1EE3               	comf	plusw1,f,c
  9491  0039C2  0EFB               	movlw	-5
  9492  0039C4  1EE3               	comf	plusw1,f,c
  9493  0039C6  0EFC               	movlw	-4
  9494  0039C8  1EE3               	comf	plusw1,f,c
  9495  0039CA  0EFD               	movlw	-3
  9496  0039CC  1EE3               	comf	plusw1,f,c
  9497  0039CE  E314               	bnc	u2270
  9498  0039D0  0EF7               	movlw	-9
  9499  0039D2  2AE3               	incf	plusw1,f,c
  9500  0039D4  E311               	bnc	u2270
  9501  0039D6  0EF8               	movlw	-8
  9502  0039D8  2AE3               	incf	plusw1,f,c
  9503  0039DA  E30E               	bnc	u2270
  9504  0039DC  0EF9               	movlw	-7
  9505  0039DE  2AE3               	incf	plusw1,f,c
  9506  0039E0  E30B               	bnc	u2270
  9507  0039E2  0EFA               	movlw	-6
  9508  0039E4  2AE3               	incf	plusw1,f,c
  9509  0039E6  E308               	bnc	u2270
  9510  0039E8  0EFB               	movlw	-5
  9511  0039EA  2AE3               	incf	plusw1,f,c
  9512  0039EC  E305               	bnc	u2270
  9513  0039EE  0EFC               	movlw	-4
  9514  0039F0  2AE3               	incf	plusw1,f,c
  9515  0039F2  E302               	bnc	u2270
  9516  0039F4  0EFD               	movlw	-3
  9517  0039F6  2AE3               	incf	plusw1,f,c
  9518  0039F8                     u2270:
  9519                           
  9520                           ;stkvar	_quotient @ sp[(-10)+0]
  9521  0039F8  0EF6               	movlw	246
  9522  0039FA  24E1               	addwf	fsr1l,w,c
  9523  0039FC  6ED9               	movwf	fsr2l,c
  9524  0039FE  0EFF               	movlw	255
  9525  003A00  20E2               	addwfc	fsr1h,w,c
  9526  003A02  6EDA               	movwf	fsr2h,c
  9527                           
  9528                           ;stkvar	?___aodiv @ sp[(-10)+-8]
  9529  003A04  0E08               	movlw	8
  9530  003A06  6E37               	movwf	btemp,c
  9531  003A08  0EEE               	movlw	-18
  9532  003A0A                     us228999:
  9533  003A0A  006F FF7B FFE3     	movff	postinc2,plusw1
  9534  003A10  28E8               	incf	wreg,w,c
  9535  003A12  2E37               	decfsz	btemp,f,c
  9536  003A14  D7FA               	bra	us228999
  9537                           
  9538                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
  9539  003A16  0EF6               	movlw	246
  9540  003A18  26E1               	addwf	fsr1l,f,c
  9541  003A1A  0EFF               	movlw	255
  9542  003A1C  22E2               	addwfc	fsr1h,f,c
  9543  003A1E  0012               	return		;funcret
  9544  003A20                     __end_of___aodiv:
  9545                           	opt callstack 0
  9546                           
  9547 ;; *************** function _atoi *****************
  9548 ;; Defined at:
  9549 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
  9550 ;; Parameters:    Size  Location     Type
  9551 ;;  s               1  [STACK] PTR const unsigned char 
  9552 ;;		 -> STR_7(3), STR_6(3), STR_5(19), STR_4(6), 
  9553 ;;		 -> STR_3(10), STR_2(12), STR_1(61), 
  9554 ;; Auto vars:     Size  Location     Type
  9555 ;;  n               2  [STACK] int 
  9556 ;;  neg             2  [STACK] int 
  9557 ;; Return value:  Size  Location     Type
  9558 ;;                  2  [STACK] int 
  9559 ;; Registers used:
  9560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
  9561 ;; Tracked objects:
  9562 ;;		On entry : 0/3D
  9563 ;;		On exit  : 0/0
  9564 ;;		Unchanged: 0/0
  9565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9570 ;;Total ram usage:        0 bytes
  9571 ;; Hardware stack levels used:    1
  9572 ;; Hardware stack levels required when called:    4
  9573 ;; This function calls:
  9574 ;;		_isdigit
  9575 ;;		_isspace
  9576 ;; This function is called by:
  9577 ;;		_vfpfcnvrt
  9578 ;; This function uses a reentrant model
  9579 ;;
  9580                           
  9581                           	psect	text46
  9582  003E8E                     __ptext46:
  9583                           	opt callstack 0
  9584  003E8E                     _atoi:
  9585                           	opt callstack 0
  9586                           
  9587                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9588  003E8E  0E09               	movlw	9
  9589  003E90  26E1               	addwf	fsr1l,f,c
  9590  003E92  0E00               	movlw	0
  9591  003E94  22E2               	addwfc	fsr1h,f,c
  9592                           
  9593                           ;stkvar	_n @ sp[(-9)+5]
  9594                           
  9595                           ;incstack = 0
  9596  003E96  0EFC               	movlw	-4
  9597  003E98  6AE3               	clrf	plusw1,c
  9598  003E9A  0EFD               	movlw	-3
  9599  003E9C  6AE3               	clrf	plusw1,c
  9600                           
  9601                           ;stkvar	_neg @ sp[(-9)+7]
  9602  003E9E  0EFE               	movlw	-2
  9603  003EA0  6AE3               	clrf	plusw1,c
  9604  003EA2  0EFF               	movlw	-1
  9605  003EA4  6AE3               	clrf	plusw1,c
  9606  003EA6  D002               	goto	l2299
  9607  003EA8                     l4594:
  9608                           
  9609                           ;stkvar	_s @ sp[(-9)+-1]
  9610  003EA8  0EF6               	movlw	-10
  9611  003EAA  2AE3               	incf	plusw1,f,c
  9612  003EAC                     l2299:
  9613                           
  9614                           ;stkvar	_atoi$3884 @ sp[(-9)+4]
  9615  003EAC  0EFB               	movlw	-5
  9616  003EAE  6AE3               	clrf	plusw1,c
  9617  003EB0  2AE3               	incf	plusw1,f,c
  9618                           
  9619                           ;stkvar	_s @ sp[(-9)+-1]
  9620  003EB2  50E1               	movf	fsr1l,w,c
  9621  003EB4  0FF6               	addlw	-10
  9622  003EB6  6ED9               	movwf	fsr2l,c
  9623  003EB8  50E2               	movf	fsr1h,w,c
  9624  003EBA  6EDA               	movwf	fsr2h,c
  9625  003EBC  0EFF               	movlw	255
  9626  003EBE  22DA               	addwfc	fsr2h,f,c
  9627  003EC0  006F FF7F FFF6     	movff	indf2,tblptrl
  9628  003EC6                     	if	1	;There is more than 1 active tblptr byte
  9629  003EC6  0E20               	movlw	high __smallconst
  9630  003EC8  6EF7               	movwf	tblptrh,c
  9631  003ECA                     	endif
  9632  003ECA                     	if	0	;tblptru may be non-zero
  9633  003ECA                     	endif
  9634  003ECA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9635  003ECA  0E00               	movlw	low (__smallconst shr (0+16))
  9636  003ECC  6EF8               	movwf	tblptru,c
  9637  003ECE                     	endif
  9638  003ECE  0008               	tblrd		*
  9639  003ED0  50F5               	movf	tablat,w,c
  9640  003ED2  0A20               	xorlw	32
  9641  003ED4  B4D8               	btfsc	status,2,c
  9642  003ED6  D022               	goto	l4602
  9643  003ED8  0EF7               	movlw	247
  9644  003EDA  6E41               	movwf	btemp+10,c
  9645  003EDC  0EFF               	movlw	255
  9646  003EDE  6E42               	movwf	btemp+11,c
  9647                           
  9648                           ;stkvar	_s @ sp[(-9)+-1]
  9649  003EE0  50E1               	movf	fsr1l,w,c
  9650  003EE2  0FF6               	addlw	-10
  9651  003EE4  6ED9               	movwf	fsr2l,c
  9652  003EE6  50E2               	movf	fsr1h,w,c
  9653  003EE8  6EDA               	movwf	fsr2h,c
  9654  003EEA  0EFF               	movlw	255
  9655  003EEC  22DA               	addwfc	fsr2h,f,c
  9656  003EEE  006F FF7F FFF6     	movff	indf2,tblptrl
  9657  003EF4                     	if	1	;There is more than 1 active tblptr byte
  9658  003EF4  0E20               	movlw	high __smallconst
  9659  003EF6  6EF7               	movwf	tblptrh,c
  9660  003EF8                     	endif
  9661  003EF8                     	if	0	;tblptru may be non-zero
  9662  003EF8                     	endif
  9663  003EF8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9664  003EF8  0E00               	movlw	low (__smallconst shr (0+16))
  9665  003EFA  6EF8               	movwf	tblptru,c
  9666  003EFC                     	endif
  9667  003EFC  0008               	tblrd		*
  9668  003EFE  50F5               	movf	tablat,w,c
  9669  003F00  6E3F               	movwf	btemp+8,c
  9670  003F02  6A40               	clrf	btemp+9,c
  9671  003F04  5041               	movf	btemp+10,w,c
  9672  003F06  263F               	addwf	btemp+8,f,c
  9673  003F08  5042               	movf	btemp+11,w,c
  9674  003F0A  2240               	addwfc	btemp+9,f,c
  9675  003F0C  5040               	movf	btemp+9,w,c
  9676  003F0E  E104               	bnz	u2870
  9677  003F10  0E05               	movlw	5
  9678  003F12  5C3F               	subwf	btemp+8,w,c
  9679  003F14  A0D8               	btfss	status,0,c
  9680  003F16  D002               	goto	l4602
  9681  003F18                     u2870:
  9682                           
  9683                           ;stkvar	_atoi$3884 @ sp[(-9)+4]
  9684  003F18  0EFB               	movlw	-5
  9685  003F1A  6AE3               	clrf	plusw1,c
  9686  003F1C                     l4602:
  9687                           
  9688                           ;stkvar	_atoi$3884 @ sp[(-9)+4]
  9689  003F1C  0EFB               	movlw	-5
  9690  003F1E  50E3               	movf	plusw1,w,c
  9691  003F20  6E41               	movwf	btemp+10,c
  9692  003F22  6A42               	clrf	btemp+11,c
  9693                           
  9694                           ;stkvar	_atoi$3883 @ sp[(-9)+2]
  9695  003F24  0EF9               	movlw	-7
  9696  003F26  0060  F107  FFE3   	movff	btemp+10,plusw1
  9697  003F2C  0EFA               	movlw	-6
  9698  003F2E  0060  F10B  FFE3   	movff	btemp+11,plusw1
  9699                           
  9700                           ;stkvar	_atoi$3883 @ sp[(-9)+2]
  9701  003F34  0EF9               	movlw	-7
  9702  003F36  006F FF8C  F037    	movff	plusw1,btemp
  9703  003F3C  0EFA               	movlw	-6
  9704  003F3E  50E3               	movf	plusw1,w,c
  9705  003F40  1037               	iorwf	btemp,w,c
  9706  003F42  B4D8               	btfsc	status,2,c
  9707  003F44  D010               	goto	l4612
  9708  003F46  D7B0               	goto	l4594
  9709  003F48                     l4608:
  9710  003F48  0E01               	movlw	1
  9711  003F4A  6E41               	movwf	btemp+10,c
  9712  003F4C  0E00               	movlw	0
  9713  003F4E  6E42               	movwf	btemp+11,c
  9714                           
  9715                           ;stkvar	_neg @ sp[(-9)+7]
  9716  003F50  0EFE               	movlw	-2
  9717  003F52  0060  F107  FFE3   	movff	btemp+10,plusw1
  9718  003F58  0EFF               	movlw	-1
  9719  003F5A  0060  F10B  FFE3   	movff	btemp+11,plusw1
  9720  003F60                     l4610:
  9721                           
  9722                           ;stkvar	_s @ sp[(-9)+-1]
  9723  003F60  0EF6               	movlw	-10
  9724  003F62  2AE3               	incf	plusw1,f,c
  9725  003F64  D051               	goto	l4618
  9726  003F66                     l4612:
  9727                           
  9728                           ;stkvar	_s @ sp[(-9)+-1]
  9729  003F66  50E1               	movf	fsr1l,w,c
  9730  003F68  0FF6               	addlw	-10
  9731  003F6A  6ED9               	movwf	fsr2l,c
  9732  003F6C  50E2               	movf	fsr1h,w,c
  9733  003F6E  6EDA               	movwf	fsr2h,c
  9734  003F70  0EFF               	movlw	255
  9735  003F72  22DA               	addwfc	fsr2h,f,c
  9736  003F74  006F FF7F FFF6     	movff	indf2,tblptrl
  9737  003F7A                     	if	1	;There is more than 1 active tblptr byte
  9738  003F7A  0E20               	movlw	high __smallconst
  9739  003F7C  6EF7               	movwf	tblptrh,c
  9740  003F7E                     	endif
  9741  003F7E                     	if	0	;tblptru may be non-zero
  9742  003F7E                     	endif
  9743  003F7E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9744  003F7E  0E00               	movlw	low (__smallconst shr (0+16))
  9745  003F80  6EF8               	movwf	tblptru,c
  9746  003F82                     	endif
  9747  003F82  0008               	tblrd		*
  9748  003F84  50F5               	movf	tablat,w,c
  9749  003F86  6E41               	movwf	btemp+10,c
  9750  003F88  6A42               	clrf	btemp+11,c
  9751                           
  9752                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9753                           ; Switch size 1, requested type "simple"
  9754                           ; Number of cases is 1, Range of values is 0 to 0
  9755                           ; switch strategies available:
  9756                           ; Name         Instructions Cycles
  9757                           ; simple_byte            4     3 (average)
  9758                           ;	Chosen strategy is simple_byte
  9759  003F8A  5042               	movf	btemp+11,w,c
  9760  003F8C  0A00               	xorlw	0	; case 0
  9761  003F8E  A4D8               	btfss	status,2,c
  9762  003F90  D03B               	goto	l4618
  9763                           
  9764                           ; Switch size 1, requested type "simple"
  9765                           ; Number of cases is 2, Range of values is 43 to 45
  9766                           ; switch strategies available:
  9767                           ; Name         Instructions Cycles
  9768                           ; simple_byte            7     4 (average)
  9769                           ;	Chosen strategy is simple_byte
  9770  003F92  5041               	movf	btemp+10,w,c
  9771  003F94  0A2B               	xorlw	43	; case 43
  9772  003F96  B4D8               	btfsc	status,2,c
  9773  003F98  D7E3               	goto	l4610
  9774  003F9A  0A06               	xorlw	6	; case 45
  9775  003F9C  B4D8               	btfsc	status,2,c
  9776  003F9E  D7D4               	goto	l4608
  9777  003FA0  D033               	goto	l4618
  9778  003FA2                     l4614:
  9779                           
  9780                           ;stkvar	_n @ sp[(-9)+5]
  9781  003FA2  0EFC               	movlw	-4
  9782  003FA4  006F FF8C  F041    	movff	plusw1,btemp+10
  9783  003FAA  0EFD               	movlw	-3
  9784  003FAC  006F FF8C  F042    	movff	plusw1,btemp+11
  9785  003FB2  0E0A               	movlw	10
  9786  003FB4  0241               	mulwf	btemp+10,c
  9787  003FB6  006F FFCC  F03F    	movff	prodl,btemp+8
  9788  003FBC  006F FFD0  F040    	movff	prodh,btemp+9
  9789  003FC2  0242               	mulwf	btemp+11,c
  9790  003FC4  50F3               	movf	prodl,w,c
  9791  003FC6  2640               	addwf	btemp+9,f,c
  9792                           
  9793                           ;stkvar	_s @ sp[(-9)+-1]
  9794  003FC8  50E1               	movf	fsr1l,w,c
  9795  003FCA  0FF6               	addlw	-10
  9796  003FCC  6ED9               	movwf	fsr2l,c
  9797  003FCE  50E2               	movf	fsr1h,w,c
  9798  003FD0  6EDA               	movwf	fsr2h,c
  9799  003FD2  0EFF               	movlw	255
  9800  003FD4  22DA               	addwfc	fsr2h,f,c
  9801  003FD6  006F FF7F FFF6     	movff	indf2,tblptrl
  9802  003FDC                     	if	1	;There is more than 1 active tblptr byte
  9803  003FDC  0E20               	movlw	high __smallconst
  9804  003FDE  6EF7               	movwf	tblptrh,c
  9805  003FE0                     	endif
  9806  003FE0                     	if	0	;tblptru may be non-zero
  9807  003FE0                     	endif
  9808  003FE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9809  003FE0  0E00               	movlw	low (__smallconst shr (0+16))
  9810  003FE2  6EF8               	movwf	tblptru,c
  9811  003FE4                     	endif
  9812  003FE4  0008               	tblrd		*
  9813  003FE6  50F5               	movf	tablat,w,c
  9814  003FE8  5E3F               	subwf	btemp+8,f,c
  9815  003FEA  0E00               	movlw	0
  9816  003FEC  5A40               	subwfb	btemp+9,f,c
  9817  003FEE  0E30               	movlw	48
  9818  003FF0  263F               	addwf	btemp+8,f,c
  9819  003FF2  0E00               	movlw	0
  9820  003FF4  2240               	addwfc	btemp+9,f,c
  9821                           
  9822                           ;stkvar	_n @ sp[(-9)+5]
  9823  003FF6  0EFC               	movlw	-4
  9824  003FF8  0060  F0FF  FFE3   	movff	btemp+8,plusw1
  9825  003FFE  0EFD               	movlw	-3
  9826  004000  0060  F103  FFE3   	movff	btemp+9,plusw1
  9827  004006  D7AC               	goto	l4610
  9828  004008                     l4618:
  9829  004008  0ED0               	movlw	208
  9830  00400A  6E41               	movwf	btemp+10,c
  9831  00400C  0EFF               	movlw	255
  9832  00400E  6E42               	movwf	btemp+11,c
  9833                           
  9834                           ;stkvar	_s @ sp[(-9)+-1]
  9835  004010  50E1               	movf	fsr1l,w,c
  9836  004012  0FF6               	addlw	-10
  9837  004014  6ED9               	movwf	fsr2l,c
  9838  004016  50E2               	movf	fsr1h,w,c
  9839  004018  6EDA               	movwf	fsr2h,c
  9840  00401A  0EFF               	movlw	255
  9841  00401C  22DA               	addwfc	fsr2h,f,c
  9842  00401E  006F FF7F FFF6     	movff	indf2,tblptrl
  9843  004024                     	if	1	;There is more than 1 active tblptr byte
  9844  004024  0E20               	movlw	high __smallconst
  9845  004026  6EF7               	movwf	tblptrh,c
  9846  004028                     	endif
  9847  004028                     	if	0	;tblptru may be non-zero
  9848  004028                     	endif
  9849  004028                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9850  004028  0E00               	movlw	low (__smallconst shr (0+16))
  9851  00402A  6EF8               	movwf	tblptru,c
  9852  00402C                     	endif
  9853  00402C  0008               	tblrd		*
  9854  00402E  50F5               	movf	tablat,w,c
  9855  004030  6E3F               	movwf	btemp+8,c
  9856  004032  6A40               	clrf	btemp+9,c
  9857  004034  5041               	movf	btemp+10,w,c
  9858  004036  263F               	addwf	btemp+8,f,c
  9859  004038  5042               	movf	btemp+11,w,c
  9860  00403A  2240               	addwfc	btemp+9,f,c
  9861  00403C  5040               	movf	btemp+9,w,c
  9862  00403E  E106               	bnz	u2890
  9863  004040  0E0A               	movlw	10
  9864  004042  5C3F               	subwf	btemp+8,w,c
  9865  004044  B0D8               	btfsc	status,0,c
  9866  004046  D002               	goto	u2890
  9867  004048  0E01               	movlw	1
  9868  00404A  D001               	goto	u2900
  9869  00404C                     u2890:
  9870  00404C  0E00               	movlw	0
  9871  00404E                     u2900:
  9872  00404E  6E41               	movwf	btemp+10,c
  9873  004050  6A42               	clrf	btemp+11,c
  9874                           
  9875                           ;stkvar	_atoi$3885 @ sp[(-9)+0]
  9876  004052  0EF7               	movlw	-9
  9877  004054  0060  F107  FFE3   	movff	btemp+10,plusw1
  9878  00405A  0EF8               	movlw	-8
  9879  00405C  0060  F10B  FFE3   	movff	btemp+11,plusw1
  9880                           
  9881                           ;stkvar	_atoi$3885 @ sp[(-9)+0]
  9882  004062  0EF7               	movlw	-9
  9883  004064  006F FF8C  F037    	movff	plusw1,btemp
  9884  00406A  0EF8               	movlw	-8
  9885  00406C  50E3               	movf	plusw1,w,c
  9886  00406E  1037               	iorwf	btemp,w,c
  9887  004070  A4D8               	btfss	status,2,c
  9888  004072  D797               	goto	l4614
  9889                           
  9890                           ;stkvar	_neg @ sp[(-9)+7]
  9891  004074  0EFE               	movlw	-2
  9892  004076  006F FF8C  F037    	movff	plusw1,btemp
  9893  00407C  0EFF               	movlw	-1
  9894  00407E  50E3               	movf	plusw1,w,c
  9895  004080  1037               	iorwf	btemp,w,c
  9896  004082  A4D8               	btfss	status,2,c
  9897  004084  D00E               	goto	l4628
  9898                           
  9899                           ;stkvar	_n @ sp[(-9)+5]
  9900  004086  0EFC               	movlw	-4
  9901  004088  006F FF8C  F037    	movff	plusw1,btemp
  9902  00408E  1E37               	comf	btemp,f,c
  9903  004090  0EFD               	movlw	-3
  9904  004092  006F FF8C  F038    	movff	plusw1,btemp+1
  9905  004098  1E38               	comf	btemp+1,f,c
  9906  00409A  2A37               	incf	btemp,f,c
  9907  00409C  B4D8               	btfsc	status,2,c
  9908  00409E  2A38               	incf	btemp+1,f,c
  9909  0040A0  D008               	goto	l2323
  9910  0040A2                     l4628:
  9911                           
  9912                           ;stkvar	_n @ sp[(-9)+5]
  9913  0040A2  0EFC               	movlw	-4
  9914  0040A4  006F FF8C  F037    	movff	plusw1,btemp
  9915  0040AA  0EFD               	movlw	-3
  9916  0040AC  006F FF8C  F038    	movff	plusw1,btemp+1
  9917  0040B2                     l2323:
  9918                           
  9919                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
  9920  0040B2  0EF6               	movlw	246
  9921  0040B4  26E1               	addwf	fsr1l,f,c
  9922  0040B6  0EFF               	movlw	255
  9923  0040B8  22E2               	addwfc	fsr1h,f,c
  9924  0040BA  0012               	return		;funcret
  9925  0040BC                     __end_of_atoi:
  9926                           	opt callstack 0
  9927                           
  9928 ;; *************** function _isspace *****************
  9929 ;; Defined at:
  9930 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
  9931 ;; Parameters:    Size  Location     Type
  9932 ;;  c               2  [STACK] int 
  9933 ;; Auto vars:     Size  Location     Type
  9934 ;;		None
  9935 ;; Return value:  Size  Location     Type
  9936 ;;                  2  [STACK] int 
  9937 ;; Registers used:
  9938 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9939 ;; Tracked objects:
  9940 ;;		On entry : 0/0
  9941 ;;		On exit  : 0/0
  9942 ;;		Unchanged: 0/0
  9943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9948 ;;Total ram usage:        0 bytes
  9949 ;; Hardware stack levels used:    1
  9950 ;; Hardware stack levels required when called:    3
  9951 ;; This function calls:
  9952 ;;		Nothing
  9953 ;; This function is called by:
  9954 ;;		_atoi
  9955 ;; This function uses a reentrant model
  9956 ;;
  9957                           
  9958                           	psect	text47
  9959  004FEA                     __ptext47:
  9960                           	opt callstack 0
  9961  004FEA                     _isspace:
  9962                           	opt callstack 0
  9963                           
  9964                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9965  004FEA  52E6               	movf	postinc1,f,c
  9966                           
  9967                           ;stkvar	_isspace$3910 @ sp[(-1)+0]
  9968                           
  9969                           ;incstack = 0
  9970  004FEC  0EFF               	movlw	-1
  9971  004FEE  6AE3               	clrf	plusw1,c
  9972  004FF0  2AE3               	incf	plusw1,f,c
  9973                           
  9974                           ;stkvar	_c @ sp[(-1)+-2]
  9975  004FF2  0EFD               	movlw	-3
  9976  004FF4  006F FF8C  F037    	movff	plusw1,btemp
  9977  004FFA  0E20               	movlw	32
  9978  004FFC  1837               	xorwf	btemp,w,c
  9979  004FFE  E104               	bnz	u2400
  9980  005000  0EFE               	movlw	-2
  9981  005002  50E3               	movf	plusw1,w,c
  9982  005004  B4D8               	btfsc	status,2,c
  9983  005006  D012               	goto	l4398
  9984  005008                     u2400:
  9985                           
  9986                           ;stkvar	_c @ sp[(-1)+-2]
  9987  005008  0EFD               	movlw	-3
  9988  00500A  50E3               	movf	plusw1,w,c
  9989  00500C  0FF7               	addlw	247
  9990  00500E  6E41               	movwf	btemp+10,c
  9991  005010  0EFE               	movlw	-2
  9992  005012  006F FF8C  F042    	movff	plusw1,btemp+11
  9993  005018  0EFF               	movlw	255
  9994  00501A  2242               	addwfc	btemp+11,f,c
  9995  00501C  5042               	movf	btemp+11,w,c
  9996  00501E  E104               	bnz	u2410
  9997  005020  0E05               	movlw	5
  9998  005022  5C41               	subwf	btemp+10,w,c
  9999  005024  A0D8               	btfss	status,0,c
 10000  005026  D002               	goto	l4398
 10001  005028                     u2410:
 10002                           
 10003                           ;stkvar	_isspace$3910 @ sp[(-1)+0]
 10004  005028  0EFF               	movlw	-1
 10005  00502A  6AE3               	clrf	plusw1,c
 10006  00502C                     l4398:
 10007                           
 10008                           ;stkvar	_isspace$3910 @ sp[(-1)+0]
 10009  00502C  0EFF               	movlw	-1
 10010  00502E  50E3               	movf	plusw1,w,c
 10011  005030  6E37               	movwf	btemp,c
 10012  005032  6A38               	clrf	btemp+1,c
 10013                           
 10014                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10015  005034  52E5               	movf	postdec1,f,c
 10016  005036  52E5               	movf	postdec1,f,c
 10017  005038  52E5               	movf	postdec1,f,c
 10018  00503A  0012               	return		;funcret
 10019  00503C                     __end_of_isspace:
 10020                           	opt callstack 0
 10021                           
 10022 ;; *************** function _isdigit *****************
 10023 ;; Defined at:
 10024 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
 10025 ;; Parameters:    Size  Location     Type
 10026 ;;  c               2  [STACK] int 
 10027 ;; Auto vars:     Size  Location     Type
 10028 ;;		None
 10029 ;; Return value:  Size  Location     Type
 10030 ;;                  2  [STACK] int 
 10031 ;; Registers used:
 10032 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 10033 ;; Tracked objects:
 10034 ;;		On entry : 0/0
 10035 ;;		On exit  : 0/0
 10036 ;;		Unchanged: 0/0
 10037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10039 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10041 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10042 ;;Total ram usage:        0 bytes
 10043 ;; Hardware stack levels used:    1
 10044 ;; Hardware stack levels required when called:    3
 10045 ;; This function calls:
 10046 ;;		Nothing
 10047 ;; This function is called by:
 10048 ;;		_vfpfcnvrt
 10049 ;;		_atoi
 10050 ;; This function uses a reentrant model
 10051 ;;
 10052                           
 10053                           	psect	text48
 10054  0052B2                     __ptext48:
 10055                           	opt callstack 0
 10056  0052B2                     _isdigit:
 10057                           	opt callstack 24
 10058                           
 10059                           ;stkvar	_c @ sp[(0)+-2]
 10060                           
 10061                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10062                           ;incstack = 0
 10063  0052B2  0EFE               	movlw	-2
 10064  0052B4  50E3               	movf	plusw1,w,c
 10065  0052B6  0FD0               	addlw	208
 10066  0052B8  6E41               	movwf	btemp+10,c
 10067  0052BA  0EFF               	movlw	-1
 10068  0052BC  006F FF8C  F042    	movff	plusw1,btemp+11
 10069  0052C2  0EFF               	movlw	255
 10070  0052C4  2242               	addwfc	btemp+11,f,c
 10071  0052C6  5042               	movf	btemp+11,w,c
 10072  0052C8  E106               	bnz	u2150
 10073  0052CA  0E0A               	movlw	10
 10074  0052CC  5C41               	subwf	btemp+10,w,c
 10075  0052CE  B0D8               	btfsc	status,0,c
 10076  0052D0  D002               	goto	u2150
 10077  0052D2  0E01               	movlw	1
 10078  0052D4  D001               	goto	u2160
 10079  0052D6                     u2150:
 10080  0052D6  0E00               	movlw	0
 10081  0052D8                     u2160:
 10082  0052D8  6E37               	movwf	btemp,c
 10083  0052DA  6A38               	clrf	btemp+1,c
 10084                           
 10085                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 10086  0052DC  52E5               	movf	postdec1,f,c
 10087  0052DE  52E5               	movf	postdec1,f,c
 10088  0052E0  0012               	return		;funcret
 10089  0052E2                     __end_of_isdigit:
 10090                           	opt callstack 0
 10091                           
 10092 ;; *************** function _SYSTEM_Initialize *****************
 10093 ;; Defined at:
 10094 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10095 ;; Parameters:    Size  Location     Type
 10096 ;;		None
 10097 ;; Auto vars:     Size  Location     Type
 10098 ;;		None
 10099 ;; Return value:  Size  Location     Type
 10100 ;;                  1  [STACK] void 
 10101 ;; Registers used:
 10102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, btemp+11
 10103 ;; Tracked objects:
 10104 ;;		On entry : 0/0
 10105 ;;		On exit  : 3F/3C
 10106 ;;		Unchanged: 0/0
 10107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10112 ;;Total ram usage:        0 bytes
 10113 ;; Hardware stack levels used:    1
 10114 ;; Hardware stack levels required when called:    5
 10115 ;; This function calls:
 10116 ;;		_ADCC_Initialize
 10117 ;;		_CLC1_Initialize
 10118 ;;		_CLKREF_Initialize
 10119 ;;		_DMA1_Initialize
 10120 ;;		_DSM_Initialize
 10121 ;;		_EXT_INT_Initialize
 10122 ;;		_INTERRUPT_Initialize
 10123 ;;		_NCO1_Initialize
 10124 ;;		_OSCILLATOR_Initialize
 10125 ;;		_PIN_MANAGER_Initialize
 10126 ;;		_PMD_Initialize
 10127 ;;		_SPI1_Initialize
 10128 ;;		_TMR6_Initialize
 10129 ;;		_UART1_Initialize
 10130 ;;		_UART2_Initialize
 10131 ;; This function is called by:
 10132 ;;		_main
 10133 ;; This function uses a reentrant model
 10134 ;;
 10135                           
 10136                           	psect	text49
 10137  0051D8                     __ptext49:
 10138                           	opt callstack 0
 10139  0051D8                     _SYSTEM_Initialize:
 10140                           	opt callstack 25
 10141                           
 10142                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 10143                           
 10144                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10145                           ;incstack = 0
 10146  0051D8  EC08  F027         	call	_INTERRUPT_Initialize	;wreg free
 10147                           
 10148                           ; BSR set to: 57
 10149                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 10150  0051DC  EC39  F02C         	call	_PMD_Initialize	;wreg free
 10151                           
 10152                           ; BSR set to: 57
 10153                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10154  0051E0  ECAD  F024         	call	_PIN_MANAGER_Initialize	;wreg free
 10155                           
 10156                           ; BSR set to: 58
 10157                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10158  0051E4  EC2E  F02C         	call	_OSCILLATOR_Initialize	;wreg free
 10159                           
 10160                           ; BSR set to: 57
 10161                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 10162  0051E8  EC44  F028         	call	_ADCC_Initialize	;wreg free
 10163                           
 10164                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 10165  0051EC  ECFA  F02B         	call	_NCO1_Initialize	;wreg free
 10166                           
 10167                           ; BSR set to: 63
 10168                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 10169  0051F0  EC1E  F028         	call	_EXT_INT_Initialize	;wreg free
 10170                           
 10171                           ; BSR set to: 57
 10172                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 10173  0051F4  EC67  F02A         	call	_TMR6_Initialize	;wreg free
 10174                           
 10175                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 10176  0051F8  EC68  F02B         	call	_CLC1_Initialize	;wreg free
 10177                           
 10178                           ; BSR set to: 60
 10179                           ;mcc_generated_files/mcc.c: 61:     DSM_Initialize();
 10180  0051FC  EC08  F02C         	call	_DSM_Initialize	;wreg free
 10181                           
 10182                           ; BSR set to: 60
 10183                           ;mcc_generated_files/mcc.c: 62:     UART1_Initialize();
 10184  005200  ECD5  F026         	call	_UART1_Initialize	;wreg free
 10185                           
 10186                           ; BSR set to: 57
 10187                           ;mcc_generated_files/mcc.c: 63:     UART2_Initialize();
 10188  005204  EC6B  F027         	call	_UART2_Initialize	;wreg free
 10189                           
 10190                           ; BSR set to: 57
 10191                           ;mcc_generated_files/mcc.c: 64:     SPI1_Initialize();
 10192  005208  EC23  F02C         	call	_SPI1_Initialize	;wreg free
 10193                           
 10194                           ; BSR set to: 61
 10195                           ;mcc_generated_files/mcc.c: 65:     DMA1_Initialize();
 10196  00520C  ECA0  F026         	call	_DMA1_Initialize	;wreg free
 10197                           
 10198                           ; BSR set to: 59
 10199                           ;mcc_generated_files/mcc.c: 66:     CLKREF_Initialize();
 10200  005210  EC72  F02C         	call	_CLKREF_Initialize	;wreg free
 10201                           
 10202                           ; BSR set to: 60
 10203                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 10204  005214  0012               	return		;funcret
 10205  005216                     __end_of_SYSTEM_Initialize:
 10206                           	opt callstack 0
 10207                           
 10208 ;; *************** function _UART2_Initialize *****************
 10209 ;; Defined at:
 10210 ;;		line 78 in file "mcc_generated_files/uart2.c"
 10211 ;; Parameters:    Size  Location     Type
 10212 ;;		None
 10213 ;; Auto vars:     Size  Location     Type
 10214 ;;		None
 10215 ;; Return value:  Size  Location     Type
 10216 ;;                  1  [STACK] void 
 10217 ;; Registers used:
 10218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10219 ;; Tracked objects:
 10220 ;;		On entry : 3F/39
 10221 ;;		On exit  : 3F/39
 10222 ;;		Unchanged: 0/0
 10223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10228 ;;Total ram usage:        0 bytes
 10229 ;; Hardware stack levels used:    1
 10230 ;; Hardware stack levels required when called:    4
 10231 ;; This function calls:
 10232 ;;		_UART2_SetRxInterruptHandler
 10233 ;;		_UART2_SetTxInterruptHandler
 10234 ;; This function is called by:
 10235 ;;		_SYSTEM_Initialize
 10236 ;; This function uses a reentrant model
 10237 ;;
 10238                           
 10239                           	psect	text50
 10240  004ED6                     __ptext50:
 10241                           	opt callstack 0
 10242  004ED6                     _UART2_Initialize:
 10243                           	opt callstack 25
 10244                           
 10245                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 10246                           
 10247                           ; BSR set to: 60
 10248                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10249                           ;incstack = 0
 10250  004ED6  0139               	movlb	57	; () banked
 10251  004ED8  9596               	bcf	150,2,b	;volatile
 10252                           
 10253                           ; BSR set to: 57
 10254                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 10255  004EDA  0E9A               	movlw	low _UART2_Receive_ISR
 10256  004EDC  6EE6               	movwf	postinc1,c
 10257  004EDE  0E57               	movlw	high _UART2_Receive_ISR
 10258  004EE0  6EE6               	movwf	postinc1,c
 10259  004EE2  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 10260  004EE4  6EE6               	movwf	postinc1,c
 10261  004EE6  EC2B  F02A         	call	_UART2_SetRxInterruptHandler	;wreg free
 10262                           
 10263                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 10264  004EEA  0139               	movlb	57	; () banked
 10265  004EEC  9796               	bcf	150,3,b	;volatile
 10266                           
 10267                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 10268  004EEE  0E0E               	movlw	low _UART2_Transmit_ISR
 10269  004EF0  6EE6               	movwf	postinc1,c
 10270  004EF2  0E53               	movlw	high _UART2_Transmit_ISR
 10271  004EF4  6EE6               	movwf	postinc1,c
 10272  004EF6  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 10273  004EF8  6EE6               	movwf	postinc1,c
 10274  004EFA  EC17  F02A         	call	_UART2_SetTxInterruptHandler	;wreg free
 10275                           
 10276                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 10277  004EFE  013D               	movlb	61	; () banked
 10278  004F00  6BD4               	clrf	212,b	;volatile
 10279                           
 10280                           ; BSR set to: 61
 10281                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 10282  004F02  6BD6               	clrf	214,b	;volatile
 10283                           
 10284                           ; BSR set to: 61
 10285                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 10286  004F04  6BD8               	clrf	216,b	;volatile
 10287                           
 10288                           ; BSR set to: 61
 10289                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 10290  004F06  0EB0               	movlw	176
 10291  004F08  6FDA               	movwf	218,b	;volatile
 10292                           
 10293                           ; BSR set to: 61
 10294                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 10295  004F0A  0E80               	movlw	128
 10296  004F0C  6FDB               	movwf	219,b	;volatile
 10297                           
 10298                           ; BSR set to: 61
 10299                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 10300  004F0E  6BDC               	clrf	220,b	;volatile
 10301                           
 10302                           ; BSR set to: 61
 10303                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 10304  004F10  0E82               	movlw	130
 10305  004F12  6FDD               	movwf	221,b	;volatile
 10306                           
 10307                           ; BSR set to: 61
 10308                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 10309  004F14  0E06               	movlw	6
 10310  004F16  6FDE               	movwf	222,b	;volatile
 10311                           
 10312                           ; BSR set to: 61
 10313                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 10314  004F18  6BDF               	clrf	223,b	;volatile
 10315                           
 10316                           ; BSR set to: 61
 10317                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 10318  004F1A  6BE0               	clrf	224,b	;volatile
 10319                           
 10320                           ; BSR set to: 61
 10321                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 10322  004F1C  6BE1               	clrf	225,b	;volatile
 10323                           
 10324                           ; BSR set to: 61
 10325                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 10326  004F1E  6BE2               	clrf	226,b	;volatile
 10327                           
 10328                           ; BSR set to: 61
 10329                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 10330  004F20  6A30               	clrf	_uart2TxHead,c	;volatile
 10331                           
 10332                           ; BSR set to: 61
 10333                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 10334  004F22  6A2F               	clrf	_uart2TxTail,c	;volatile
 10335                           
 10336                           ; BSR set to: 61
 10337                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 10338  004F24  0E40               	movlw	64
 10339  004F26  6E2E               	movwf	_uart2TxBufferRemaining,c	;volatile
 10340                           
 10341                           ; BSR set to: 61
 10342                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 10343  004F28  6A2D               	clrf	_uart2RxHead,c	;volatile
 10344                           
 10345                           ; BSR set to: 61
 10346                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 10347  004F2A  6A2C               	clrf	_uart2RxTail,c	;volatile
 10348                           
 10349                           ; BSR set to: 61
 10350                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 10351  004F2C  6A2B               	clrf	_uart2RxCount,c	;volatile
 10352                           
 10353                           ; BSR set to: 61
 10354                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 10355  004F2E  0139               	movlb	57	; () banked
 10356  004F30  8596               	bsf	150,2,b	;volatile
 10357                           
 10358                           ; BSR set to: 57
 10359                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10360  004F32  0012               	return		;funcret
 10361  004F34                     __end_of_UART2_Initialize:
 10362                           	opt callstack 0
 10363                           
 10364 ;; *************** function _UART2_SetTxInterruptHandler *****************
 10365 ;; Defined at:
 10366 ;;		line 252 in file "mcc_generated_files/uart2.c"
 10367 ;; Parameters:    Size  Location     Type
 10368 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10369 ;;		 -> UART2_Transmit_ISR(1), 
 10370 ;; Auto vars:     Size  Location     Type
 10371 ;;		None
 10372 ;; Return value:  Size  Location     Type
 10373 ;;                  1  [STACK] void 
 10374 ;; Registers used:
 10375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10376 ;; Tracked objects:
 10377 ;;		On entry : 3F/39
 10378 ;;		On exit  : 0/0
 10379 ;;		Unchanged: 0/0
 10380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10385 ;;Total ram usage:        0 bytes
 10386 ;; Hardware stack levels used:    1
 10387 ;; Hardware stack levels required when called:    3
 10388 ;; This function calls:
 10389 ;;		Nothing
 10390 ;; This function is called by:
 10391 ;;		_UART2_Initialize
 10392 ;; This function uses a reentrant model
 10393 ;;
 10394                           
 10395                           	psect	text51
 10396  00542E                     __ptext51:
 10397                           	opt callstack 0
 10398  00542E                     _UART2_SetTxInterruptHandler:
 10399                           	opt callstack 25
 10400                           
 10401                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 10402                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10403                           
 10404                           ; BSR set to: 57
 10405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10406                           ;incstack = 0
 10407  00542E  50E1               	movf	fsr1l,w,c
 10408  005430  0FFD               	addlw	-3
 10409  005432  6ED9               	movwf	fsr2l,c
 10410  005434  50E2               	movf	fsr1h,w,c
 10411  005436  6EDA               	movwf	fsr2h,c
 10412  005438  0EFF               	movlw	255
 10413  00543A  22DA               	addwfc	fsr2h,f,c
 10414  00543C  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler
 10415  005442  006F FF78  F012    	movff	postinc2,_UART2_TxInterruptHandler+1
 10416  005448  006F FF74  F013    	movff	postdec2,_UART2_TxInterruptHandler+2
 10417                           
 10418                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10419  00544E  52E5               	movf	postdec1,f,c
 10420  005450  52E5               	movf	postdec1,f,c
 10421  005452  52E5               	movf	postdec1,f,c
 10422  005454  0012               	return		;funcret
 10423  005456                     __end_of_UART2_SetTxInterruptHandler:
 10424                           	opt callstack 0
 10425                           
 10426 ;; *************** function _UART2_SetRxInterruptHandler *****************
 10427 ;; Defined at:
 10428 ;;		line 248 in file "mcc_generated_files/uart2.c"
 10429 ;; Parameters:    Size  Location     Type
 10430 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10431 ;;		 -> UART2_Receive_ISR(1), 
 10432 ;; Auto vars:     Size  Location     Type
 10433 ;;		None
 10434 ;; Return value:  Size  Location     Type
 10435 ;;                  1  [STACK] void 
 10436 ;; Registers used:
 10437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10438 ;; Tracked objects:
 10439 ;;		On entry : 3F/39
 10440 ;;		On exit  : 0/0
 10441 ;;		Unchanged: 0/0
 10442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10447 ;;Total ram usage:        0 bytes
 10448 ;; Hardware stack levels used:    1
 10449 ;; Hardware stack levels required when called:    3
 10450 ;; This function calls:
 10451 ;;		Nothing
 10452 ;; This function is called by:
 10453 ;;		_UART2_Initialize
 10454 ;; This function uses a reentrant model
 10455 ;;
 10456                           
 10457                           	psect	text52
 10458  005456                     __ptext52:
 10459                           	opt callstack 0
 10460  005456                     _UART2_SetRxInterruptHandler:
 10461                           	opt callstack 25
 10462                           
 10463                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 10464                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10465                           
 10466                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10467                           ;incstack = 0
 10468  005456  50E1               	movf	fsr1l,w,c
 10469  005458  0FFD               	addlw	-3
 10470  00545A  6ED9               	movwf	fsr2l,c
 10471  00545C  50E2               	movf	fsr1h,w,c
 10472  00545E  6EDA               	movwf	fsr2h,c
 10473  005460  0EFF               	movlw	255
 10474  005462  22DA               	addwfc	fsr2h,f,c
 10475  005464  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler
 10476  00546A  006F FF78  F015    	movff	postinc2,_UART2_RxInterruptHandler+1
 10477  005470  006F FF74  F016    	movff	postdec2,_UART2_RxInterruptHandler+2
 10478                           
 10479                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10480  005476  52E5               	movf	postdec1,f,c
 10481  005478  52E5               	movf	postdec1,f,c
 10482  00547A  52E5               	movf	postdec1,f,c
 10483  00547C  0012               	return		;funcret
 10484  00547E                     __end_of_UART2_SetRxInterruptHandler:
 10485                           	opt callstack 0
 10486                           
 10487 ;; *************** function _UART1_Initialize *****************
 10488 ;; Defined at:
 10489 ;;		line 78 in file "mcc_generated_files/uart1.c"
 10490 ;; Parameters:    Size  Location     Type
 10491 ;;		None
 10492 ;; Auto vars:     Size  Location     Type
 10493 ;;		None
 10494 ;; Return value:  Size  Location     Type
 10495 ;;                  1  [STACK] void 
 10496 ;; Registers used:
 10497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10498 ;; Tracked objects:
 10499 ;;		On entry : 3F/3C
 10500 ;;		On exit  : 3F/39
 10501 ;;		Unchanged: 0/0
 10502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10507 ;;Total ram usage:        0 bytes
 10508 ;; Hardware stack levels used:    1
 10509 ;; Hardware stack levels required when called:    4
 10510 ;; This function calls:
 10511 ;;		_UART1_SetRxInterruptHandler
 10512 ;;		_UART1_SetTxInterruptHandler
 10513 ;; This function is called by:
 10514 ;;		_SYSTEM_Initialize
 10515 ;; This function uses a reentrant model
 10516 ;;
 10517                           
 10518                           	psect	text53
 10519  004DAA                     __ptext53:
 10520                           	opt callstack 0
 10521  004DAA                     _UART1_Initialize:
 10522                           	opt callstack 25
 10523                           
 10524                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 10525                           
 10526                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10527                           ;incstack = 0
 10528  004DAA  0139               	movlb	57	; () banked
 10529  004DAC  9793               	bcf	147,3,b	;volatile
 10530                           
 10531                           ; BSR set to: 57
 10532                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 10533  004DAE  0E7A               	movlw	low _UART1_Receive_ISR
 10534  004DB0  6EE6               	movwf	postinc1,c
 10535  004DB2  0E57               	movlw	high _UART1_Receive_ISR
 10536  004DB4  6EE6               	movwf	postinc1,c
 10537  004DB6  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 10538  004DB8  6EE6               	movwf	postinc1,c
 10539  004DBA  EC53  F02A         	call	_UART1_SetRxInterruptHandler	;wreg free
 10540                           
 10541                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 10542  004DBE  0139               	movlb	57	; () banked
 10543  004DC0  9993               	bcf	147,4,b	;volatile
 10544                           
 10545                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 10546  004DC2  0EE2               	movlw	low _UART1_Transmit_ISR
 10547  004DC4  6EE6               	movwf	postinc1,c
 10548  004DC6  0E52               	movlw	high _UART1_Transmit_ISR
 10549  004DC8  6EE6               	movwf	postinc1,c
 10550  004DCA  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 10551  004DCC  6EE6               	movwf	postinc1,c
 10552  004DCE  EC3F  F02A         	call	_UART1_SetTxInterruptHandler	;wreg free
 10553                           
 10554                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 10555  004DD2  013D               	movlb	61	; () banked
 10556  004DD4  6BEC               	clrf	236,b	;volatile
 10557                           
 10558                           ; BSR set to: 61
 10559                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 10560  004DD6  6BED               	clrf	237,b	;volatile
 10561                           
 10562                           ; BSR set to: 61
 10563                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 10564  004DD8  6BEE               	clrf	238,b	;volatile
 10565                           
 10566                           ; BSR set to: 61
 10567                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 10568  004DDA  6BEF               	clrf	239,b	;volatile
 10569                           
 10570                           ; BSR set to: 61
 10571                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 10572  004DDC  6BF0               	clrf	240,b	;volatile
 10573                           
 10574                           ; BSR set to: 61
 10575                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 10576  004DDE  6BF1               	clrf	241,b	;volatile
 10577                           
 10578                           ; BSR set to: 61
 10579                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 10580  004DE0  0EB0               	movlw	176
 10581  004DE2  6FF2               	movwf	242,b	;volatile
 10582                           
 10583                           ; BSR set to: 61
 10584                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 10585  004DE4  0E80               	movlw	128
 10586  004DE6  6FF3               	movwf	243,b	;volatile
 10587                           
 10588                           ; BSR set to: 61
 10589                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x30;
 10590  004DE8  0E30               	movlw	48
 10591  004DEA  6FF4               	movwf	244,b	;volatile
 10592                           
 10593                           ; BSR set to: 61
 10594                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 10595  004DEC  0E82               	movlw	130
 10596  004DEE  6FF5               	movwf	245,b	;volatile
 10597                           
 10598                           ; BSR set to: 61
 10599                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 10600  004DF0  0E06               	movlw	6
 10601  004DF2  6FF6               	movwf	246,b	;volatile
 10602                           
 10603                           ; BSR set to: 61
 10604                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 10605  004DF4  6BF7               	clrf	247,b	;volatile
 10606                           
 10607                           ; BSR set to: 61
 10608                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 10609  004DF6  6BF8               	clrf	248,b	;volatile
 10610                           
 10611                           ; BSR set to: 61
 10612                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 10613  004DF8  6BF9               	clrf	249,b	;volatile
 10614                           
 10615                           ; BSR set to: 61
 10616                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 10617  004DFA  6BFA               	clrf	250,b	;volatile
 10618                           
 10619                           ; BSR set to: 61
 10620                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 10621  004DFC  6A36               	clrf	_uart1TxHead,c	;volatile
 10622                           
 10623                           ; BSR set to: 61
 10624                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 10625  004DFE  6A35               	clrf	_uart1TxTail,c	;volatile
 10626                           
 10627                           ; BSR set to: 61
 10628                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 10629  004E00  0E40               	movlw	64
 10630  004E02  6E34               	movwf	_uart1TxBufferRemaining,c	;volatile
 10631                           
 10632                           ; BSR set to: 61
 10633                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 10634  004E04  6A33               	clrf	_uart1RxHead,c	;volatile
 10635                           
 10636                           ; BSR set to: 61
 10637                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 10638  004E06  6A32               	clrf	_uart1RxTail,c	;volatile
 10639                           
 10640                           ; BSR set to: 61
 10641                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 10642  004E08  6A31               	clrf	_uart1RxCount,c	;volatile
 10643                           
 10644                           ; BSR set to: 61
 10645                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 10646  004E0A  0139               	movlb	57	; () banked
 10647  004E0C  8793               	bsf	147,3,b	;volatile
 10648                           
 10649                           ; BSR set to: 57
 10650                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 10651  004E0E  0012               	return		;funcret
 10652  004E10                     __end_of_UART1_Initialize:
 10653                           	opt callstack 0
 10654                           
 10655 ;; *************** function _UART1_SetTxInterruptHandler *****************
 10656 ;; Defined at:
 10657 ;;		line 257 in file "mcc_generated_files/uart1.c"
 10658 ;; Parameters:    Size  Location     Type
 10659 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10660 ;;		 -> UART1_Transmit_ISR(1), 
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;		None
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  1  [STACK] void 
 10665 ;; Registers used:
 10666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10667 ;; Tracked objects:
 10668 ;;		On entry : 3F/39
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10676 ;;Total ram usage:        0 bytes
 10677 ;; Hardware stack levels used:    1
 10678 ;; Hardware stack levels required when called:    3
 10679 ;; This function calls:
 10680 ;;		Nothing
 10681 ;; This function is called by:
 10682 ;;		_UART1_Initialize
 10683 ;; This function uses a reentrant model
 10684 ;;
 10685                           
 10686                           	psect	text54
 10687  00547E                     __ptext54:
 10688                           	opt callstack 0
 10689  00547E                     _UART1_SetTxInterruptHandler:
 10690                           	opt callstack 25
 10691                           
 10692                           ;mcc_generated_files/uart1.c: 257: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 258: {;mcc_generated_files/uart1.c: 259:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 10693                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10694                           
 10695                           ; BSR set to: 57
 10696                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10697                           ;incstack = 0
 10698  00547E  50E1               	movf	fsr1l,w,c
 10699  005480  0FFD               	addlw	-3
 10700  005482  6ED9               	movwf	fsr2l,c
 10701  005484  50E2               	movf	fsr1h,w,c
 10702  005486  6EDA               	movwf	fsr2h,c
 10703  005488  0EFF               	movlw	255
 10704  00548A  22DA               	addwfc	fsr2h,f,c
 10705  00548C  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler
 10706  005492  006F FF78  F00C    	movff	postinc2,_UART1_TxInterruptHandler+1
 10707  005498  006F FF74  F00D    	movff	postdec2,_UART1_TxInterruptHandler+2
 10708                           
 10709                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10710  00549E  52E5               	movf	postdec1,f,c
 10711  0054A0  52E5               	movf	postdec1,f,c
 10712  0054A2  52E5               	movf	postdec1,f,c
 10713  0054A4  0012               	return		;funcret
 10714  0054A6                     __end_of_UART1_SetTxInterruptHandler:
 10715                           	opt callstack 0
 10716                           
 10717 ;; *************** function _UART1_SetRxInterruptHandler *****************
 10718 ;; Defined at:
 10719 ;;		line 252 in file "mcc_generated_files/uart1.c"
 10720 ;; Parameters:    Size  Location     Type
 10721 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10722 ;;		 -> UART1_Receive_ISR(1), 
 10723 ;; Auto vars:     Size  Location     Type
 10724 ;;		None
 10725 ;; Return value:  Size  Location     Type
 10726 ;;                  1  [STACK] void 
 10727 ;; Registers used:
 10728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10729 ;; Tracked objects:
 10730 ;;		On entry : 3F/39
 10731 ;;		On exit  : 0/0
 10732 ;;		Unchanged: 0/0
 10733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10738 ;;Total ram usage:        0 bytes
 10739 ;; Hardware stack levels used:    1
 10740 ;; Hardware stack levels required when called:    3
 10741 ;; This function calls:
 10742 ;;		Nothing
 10743 ;; This function is called by:
 10744 ;;		_UART1_Initialize
 10745 ;; This function uses a reentrant model
 10746 ;;
 10747                           
 10748                           	psect	text55
 10749  0054A6                     __ptext55:
 10750                           	opt callstack 0
 10751  0054A6                     _UART1_SetRxInterruptHandler:
 10752                           	opt callstack 25
 10753                           
 10754                           ;mcc_generated_files/uart1.c: 252: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 253: {;mcc_generated_files/uart1.c: 254:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 10755                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10756                           
 10757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10758                           ;incstack = 0
 10759  0054A6  50E1               	movf	fsr1l,w,c
 10760  0054A8  0FFD               	addlw	-3
 10761  0054AA  6ED9               	movwf	fsr2l,c
 10762  0054AC  50E2               	movf	fsr1h,w,c
 10763  0054AE  6EDA               	movwf	fsr2h,c
 10764  0054B0  0EFF               	movlw	255
 10765  0054B2  22DA               	addwfc	fsr2h,f,c
 10766  0054B4  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler
 10767  0054BA  006F FF78  F00F    	movff	postinc2,_UART1_RxInterruptHandler+1
 10768  0054C0  006F FF74  F010    	movff	postdec2,_UART1_RxInterruptHandler+2
 10769                           
 10770                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 10771  0054C6  52E5               	movf	postdec1,f,c
 10772  0054C8  52E5               	movf	postdec1,f,c
 10773  0054CA  52E5               	movf	postdec1,f,c
 10774  0054CC  0012               	return		;funcret
 10775  0054CE                     __end_of_UART1_SetRxInterruptHandler:
 10776                           	opt callstack 0
 10777                           
 10778 ;; *************** function _TMR6_Initialize *****************
 10779 ;; Defined at:
 10780 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 10781 ;; Parameters:    Size  Location     Type
 10782 ;;		None
 10783 ;; Auto vars:     Size  Location     Type
 10784 ;;		None
 10785 ;; Return value:  Size  Location     Type
 10786 ;;                  1  [STACK] void 
 10787 ;; Registers used:
 10788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 10789 ;; Tracked objects:
 10790 ;;		On entry : 3F/39
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10798 ;;Total ram usage:        0 bytes
 10799 ;; Hardware stack levels used:    1
 10800 ;; Hardware stack levels required when called:    4
 10801 ;; This function calls:
 10802 ;;		_TMR6_SetInterruptHandler
 10803 ;; This function is called by:
 10804 ;;		_SYSTEM_Initialize
 10805 ;; This function uses a reentrant model
 10806 ;;
 10807                           
 10808                           	psect	text56
 10809  0054CE                     __ptext56:
 10810                           	opt callstack 0
 10811  0054CE                     _TMR6_Initialize:
 10812                           	opt callstack 25
 10813                           
 10814                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 10815                           
 10816                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10817                           ;incstack = 0
 10818  0054CE  0E01               	movlw	1
 10819  0054D0  6E96               	movwf	16278,c	;volatile
 10820                           
 10821                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 10822  0054D2  6A95               	clrf	16277,c	;volatile
 10823                           
 10824                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 10825  0054D4  6A97               	clrf	16279,c	;volatile
 10826                           
 10827                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 10828  0054D6  0E03               	movlw	3
 10829  0054D8  6E93               	movwf	16275,c	;volatile
 10830                           
 10831                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 10832  0054DA  6A92               	clrf	16274,c	;volatile
 10833                           
 10834                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 10835  0054DC  0139               	movlb	57	; () banked
 10836  0054DE  91A9               	bcf	169,0,b	;volatile
 10837                           
 10838                           ; BSR set to: 57
 10839                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 10840  0054E0  8199               	bsf	153,0,b	;volatile
 10841                           
 10842                           ; BSR set to: 57
 10843                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 10844  0054E2  0E34               	movlw	low _TMR6_DefaultInterruptHandler
 10845  0054E4  6EE6               	movwf	postinc1,c
 10846  0054E6  0E4F               	movlw	high _TMR6_DefaultInterruptHandler
 10847  0054E8  6EE6               	movwf	postinc1,c
 10848  0054EA  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 10849  0054EC  6EE6               	movwf	postinc1,c
 10850  0054EE  EC7B  F02A         	call	_TMR6_SetInterruptHandler	;wreg free
 10851                           
 10852                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 10853  0054F2  6894               	setf	16276,c	;volatile
 10854                           
 10855                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 10856  0054F4  0012               	return		;funcret
 10857  0054F6                     __end_of_TMR6_Initialize:
 10858                           	opt callstack 0
 10859                           
 10860 ;; *************** function _TMR6_SetInterruptHandler *****************
 10861 ;; Defined at:
 10862 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 10863 ;; Parameters:    Size  Location     Type
 10864 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 10865 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 10866 ;; Auto vars:     Size  Location     Type
 10867 ;;		None
 10868 ;; Return value:  Size  Location     Type
 10869 ;;                  1  [STACK] void 
 10870 ;; Registers used:
 10871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 10872 ;; Tracked objects:
 10873 ;;		On entry : 3F/39
 10874 ;;		On exit  : 0/0
 10875 ;;		Unchanged: 0/0
 10876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10881 ;;Total ram usage:        0 bytes
 10882 ;; Hardware stack levels used:    1
 10883 ;; Hardware stack levels required when called:    3
 10884 ;; This function calls:
 10885 ;;		Nothing
 10886 ;; This function is called by:
 10887 ;;		_TMR6_Initialize
 10888 ;; This function uses a reentrant model
 10889 ;;
 10890                           
 10891                           	psect	text57
 10892  0054F6                     __ptext57:
 10893                           	opt callstack 0
 10894  0054F6                     _TMR6_SetInterruptHandler:
 10895                           	opt callstack 25
 10896                           
 10897                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 10898                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 10899                           
 10900                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10901                           ;incstack = 0
 10902  0054F6  50E1               	movf	fsr1l,w,c
 10903  0054F8  0FFD               	addlw	-3
 10904  0054FA  6ED9               	movwf	fsr2l,c
 10905  0054FC  50E2               	movf	fsr1h,w,c
 10906  0054FE  6EDA               	movwf	fsr2h,c
 10907  005500  0EFF               	movlw	255
 10908  005502  22DA               	addwfc	fsr2h,f,c
 10909  005504  006F FF78  F005    	movff	postinc2,_TMR6_InterruptHandler
 10910  00550A  006F FF78  F006    	movff	postinc2,_TMR6_InterruptHandler+1
 10911  005510  006F FF74  F007    	movff	postdec2,_TMR6_InterruptHandler+2
 10912                           
 10913                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 10914  005516  52E5               	movf	postdec1,f,c
 10915  005518  52E5               	movf	postdec1,f,c
 10916  00551A  52E5               	movf	postdec1,f,c
 10917  00551C  0012               	return		;funcret
 10918  00551E                     __end_of_TMR6_SetInterruptHandler:
 10919                           	opt callstack 0
 10920                           
 10921 ;; *************** function _SPI1_Initialize *****************
 10922 ;; Defined at:
 10923 ;;		line 64 in file "mcc_generated_files/spi1.c"
 10924 ;; Parameters:    Size  Location     Type
 10925 ;;		None
 10926 ;; Auto vars:     Size  Location     Type
 10927 ;;		None
 10928 ;; Return value:  Size  Location     Type
 10929 ;;                  1  [STACK] void 
 10930 ;; Registers used:
 10931 ;;		wreg, status,2
 10932 ;; Tracked objects:
 10933 ;;		On entry : 3F/39
 10934 ;;		On exit  : 3F/3D
 10935 ;;		Unchanged: 0/0
 10936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10941 ;;Total ram usage:        0 bytes
 10942 ;; Hardware stack levels used:    1
 10943 ;; Hardware stack levels required when called:    3
 10944 ;; This function calls:
 10945 ;;		Nothing
 10946 ;; This function is called by:
 10947 ;;		_SYSTEM_Initialize
 10948 ;; This function uses a reentrant model
 10949 ;;
 10950                           
 10951                           	psect	text58
 10952  005846                     __ptext58:
 10953                           	opt callstack 0
 10954  005846                     _SPI1_Initialize:
 10955                           	opt callstack 26
 10956                           
 10957                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 10958                           
 10959                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10960                           ;incstack = 0
 10961  005846  0E40               	movlw	64
 10962  005848  013D               	movlb	61	; () banked
 10963  00584A  6F15               	movwf	21,b	;volatile
 10964                           
 10965                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 10966  00584C  0E03               	movlw	3
 10967  00584E  6F16               	movwf	22,b	;volatile
 10968                           
 10969                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 10970  005850  0E4F               	movlw	79
 10971  005852  6F19               	movwf	25,b	;volatile
 10972                           
 10973                           ; BSR set to: 61
 10974                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 10975  005854  6B1C               	clrf	28,b	;volatile
 10976                           
 10977                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 10978  005856  0E83               	movlw	131
 10979  005858  6F14               	movwf	20,b	;volatile
 10980                           
 10981                           ; BSR set to: 61
 10982                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 10983  00585A  0012               	return		;funcret
 10984  00585C                     __end_of_SPI1_Initialize:
 10985                           	opt callstack 0
 10986                           
 10987 ;; *************** function _PMD_Initialize *****************
 10988 ;; Defined at:
 10989 ;;		line 87 in file "mcc_generated_files/mcc.c"
 10990 ;; Parameters:    Size  Location     Type
 10991 ;;		None
 10992 ;; Auto vars:     Size  Location     Type
 10993 ;;		None
 10994 ;; Return value:  Size  Location     Type
 10995 ;;                  1  [STACK] void 
 10996 ;; Registers used:
 10997 ;;		None
 10998 ;; Tracked objects:
 10999 ;;		On entry : 3F/39
 11000 ;;		On exit  : 3F/39
 11001 ;;		Unchanged: 0/0
 11002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11007 ;;Total ram usage:        0 bytes
 11008 ;; Hardware stack levels used:    1
 11009 ;; Hardware stack levels required when called:    3
 11010 ;; This function calls:
 11011 ;;		Nothing
 11012 ;; This function is called by:
 11013 ;;		_SYSTEM_Initialize
 11014 ;; This function uses a reentrant model
 11015 ;;
 11016                           
 11017                           	psect	text59
 11018  005872                     __ptext59:
 11019                           	opt callstack 0
 11020  005872                     _PMD_Initialize:
 11021                           	opt callstack 26
 11022                           
 11023                           ;mcc_generated_files/mcc.c: 90:     PMD0 = 0x00;
 11024                           
 11025                           ; BSR set to: 61
 11026                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11027                           ;incstack = 0
 11028  005872  0139               	movlb	57	; () banked
 11029  005874  6BC0               	clrf	192,b	;volatile
 11030                           
 11031                           ;mcc_generated_files/mcc.c: 92:     PMD1 = 0x00;
 11032  005876  6BC1               	clrf	193,b	;volatile
 11033                           
 11034                           ;mcc_generated_files/mcc.c: 94:     PMD2 = 0x00;
 11035  005878  6BC2               	clrf	194,b	;volatile
 11036                           
 11037                           ;mcc_generated_files/mcc.c: 96:     PMD3 = 0x00;
 11038  00587A  6BC3               	clrf	195,b	;volatile
 11039                           
 11040                           ;mcc_generated_files/mcc.c: 98:     PMD4 = 0x00;
 11041  00587C  6BC4               	clrf	196,b	;volatile
 11042                           
 11043                           ;mcc_generated_files/mcc.c: 100:     PMD5 = 0x00;
 11044  00587E  6BC5               	clrf	197,b	;volatile
 11045                           
 11046                           ;mcc_generated_files/mcc.c: 102:     PMD6 = 0x00;
 11047  005880  6BC6               	clrf	198,b	;volatile
 11048                           
 11049                           ;mcc_generated_files/mcc.c: 104:     PMD7 = 0x00;
 11050  005882  6BC7               	clrf	199,b	;volatile
 11051                           
 11052                           ; BSR set to: 57
 11053                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11054  005884  0012               	return		;funcret
 11055  005886                     __end_of_PMD_Initialize:
 11056                           	opt callstack 0
 11057                           
 11058 ;; *************** function _PIN_MANAGER_Initialize *****************
 11059 ;; Defined at:
 11060 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11061 ;; Parameters:    Size  Location     Type
 11062 ;;		None
 11063 ;; Auto vars:     Size  Location     Type
 11064 ;;		None
 11065 ;; Return value:  Size  Location     Type
 11066 ;;                  1  [STACK] void 
 11067 ;; Registers used:
 11068 ;;		wreg, status,2
 11069 ;; Tracked objects:
 11070 ;;		On entry : 3F/39
 11071 ;;		On exit  : 3F/3A
 11072 ;;		Unchanged: 0/0
 11073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11078 ;;Total ram usage:        0 bytes
 11079 ;; Hardware stack levels used:    1
 11080 ;; Hardware stack levels required when called:    3
 11081 ;; This function calls:
 11082 ;;		Nothing
 11083 ;; This function is called by:
 11084 ;;		_SYSTEM_Initialize
 11085 ;; This function uses a reentrant model
 11086 ;;
 11087                           
 11088                           	psect	text60
 11089  00495A                     __ptext60:
 11090                           	opt callstack 0
 11091  00495A                     _PIN_MANAGER_Initialize:
 11092                           	opt callstack 26
 11093                           
 11094                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 11095                           
 11096                           ; BSR set to: 57
 11097                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11098                           ;incstack = 0
 11099  00495A  0E07               	movlw	7
 11100  00495C  6EBE               	movwf	16318,c	;volatile
 11101                           
 11102                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 11103  00495E  6ABD               	clrf	16317,c	;volatile
 11104                           
 11105                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 11106  004960  6ABA               	clrf	16314,c	;volatile
 11107                           
 11108                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 11109  004962  6ABF               	clrf	16319,c	;volatile
 11110                           
 11111                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 11112  004964  6ABB               	clrf	16315,c	;volatile
 11113                           
 11114                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 11115  004966  0E06               	movlw	6
 11116  004968  6EBC               	movwf	16316,c	;volatile
 11117                           
 11118                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 11119  00496A  6AC6               	clrf	16326,c	;volatile
 11120                           
 11121                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 11122  00496C  68C7               	setf	16327,c	;volatile
 11123                           
 11124                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 11125  00496E  0E8F               	movlw	143
 11126  004970  6EC2               	movwf	16322,c	;volatile
 11127                           
 11128                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 11129  004972  0EBF               	movlw	191
 11130  004974  6EC3               	movwf	16323,c	;volatile
 11131                           
 11132                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 11133  004976  0E91               	movlw	145
 11134  004978  6EC4               	movwf	16324,c	;volatile
 11135                           
 11136                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0xFF;
 11137  00497A  68C5               	setf	16325,c	;volatile
 11138                           
 11139                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0xFF;
 11140  00497C  013A               	movlb	58	; () banked
 11141  00497E  6970               	setf	112,b	;volatile
 11142                           
 11143                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 11144  004980  0E01               	movlw	1
 11145  004982  6F60               	movwf	96,b	;volatile
 11146                           
 11147                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 11148  004984  0E38               	movlw	56
 11149  004986  6F50               	movwf	80,b	;volatile
 11150                           
 11151                           ; BSR set to: 58
 11152                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 11153  004988  6B80               	clrf	128,b	;volatile
 11154                           
 11155                           ; BSR set to: 58
 11156                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 11157  00498A  6990               	setf	144,b	;volatile
 11158                           
 11159                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 11160  00498C  0E8F               	movlw	143
 11161  00498E  6F40               	movwf	64,b	;volatile
 11162                           
 11163                           ; BSR set to: 58
 11164                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x00;
 11165  004990  6B71               	clrf	113,b	;volatile
 11166                           
 11167                           ; BSR set to: 58
 11168                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 11169  004992  6B91               	clrf	145,b	;volatile
 11170                           
 11171                           ; BSR set to: 58
 11172                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 11173  004994  6B81               	clrf	129,b	;volatile
 11174                           
 11175                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 11176  004996  0E87               	movlw	135
 11177  004998  6F51               	movwf	81,b	;volatile
 11178                           
 11179                           ; BSR set to: 58
 11180                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 11181  00499A  6B41               	clrf	65,b	;volatile
 11182                           
 11183                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 11184  00499C  0E90               	movlw	144
 11185  00499E  6F61               	movwf	97,b	;volatile
 11186                           
 11187                           ; BSR set to: 58
 11188                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 11189  0049A0  6B82               	clrf	130,b	;volatile
 11190                           
 11191                           ; BSR set to: 58
 11192                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 11193  0049A2  6B92               	clrf	146,b	;volatile
 11194                           
 11195                           ; BSR set to: 58
 11196                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 11197  0049A4  6B42               	clrf	66,b	;volatile
 11198                           
 11199                           ; BSR set to: 58
 11200                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 11201  0049A6  6B52               	clrf	82,b	;volatile
 11202                           
 11203                           ; BSR set to: 58
 11204                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 11205  0049A8  6B62               	clrf	98,b	;volatile
 11206                           
 11207                           ; BSR set to: 58
 11208                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 11209  0049AA  6B72               	clrf	114,b	;volatile
 11210                           
 11211                           ; BSR set to: 58
 11212                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 11213  0049AC  6943               	setf	67,b	;volatile
 11214                           
 11215                           ; BSR set to: 58
 11216                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 11217  0049AE  6953               	setf	83,b	;volatile
 11218                           
 11219                           ; BSR set to: 58
 11220                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 11221  0049B0  6963               	setf	99,b	;volatile
 11222                           
 11223                           ; BSR set to: 58
 11224                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 11225  0049B2  6973               	setf	115,b	;volatile
 11226                           
 11227                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 11228  0049B4  0E07               	movlw	7
 11229  0049B6  6F83               	movwf	131,b	;volatile
 11230                           
 11231                           ; BSR set to: 58
 11232                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 11233  0049B8  6993               	setf	147,b	;volatile
 11234                           
 11235                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 11236  0049BA  0E0F               	movlw	15
 11237  0049BC  6FE8               	movwf	232,b	;volatile
 11238                           
 11239                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 11240  0049BE  0E16               	movlw	22
 11241  0049C0  6F0E               	movwf	14,b	;volatile
 11242                           
 11243                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 11244  0049C2  0E1E               	movlw	30
 11245  0049C4  6F13               	movwf	19,b	;volatile
 11246                           
 11247                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 11248  0049C6  0E08               	movlw	8
 11249  0049C8  6FC0               	movwf	192,b	;volatile
 11250                           
 11251                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 11252  0049CA  0E0A               	movlw	10
 11253  0049CC  6FC2               	movwf	194,b	;volatile
 11254                           
 11255                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 11256  0049CE  0E09               	movlw	9
 11257  0049D0  6FC1               	movwf	193,b	;volatile
 11258                           
 11259                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 11260  0049D2  0E17               	movlw	23
 11261  0049D4  6FE5               	movwf	229,b	;volatile
 11262                           
 11263                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 11264  0049D6  0E13               	movlw	19
 11265  0049D8  6FDE               	movwf	222,b	;volatile
 11266                           
 11267                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 11268  0049DA  0E01               	movlw	1
 11269  0049DC  6F04               	movwf	4,b	;volatile
 11270                           
 11271                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 11272  0049DE  0E26               	movlw	38
 11273  0049E0  6F05               	movwf	5,b	;volatile
 11274                           
 11275                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 11276  0049E2  0E28               	movlw	40
 11277  0049E4  6F06               	movwf	6,b	;volatile
 11278                           
 11279                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 11280  0049E6  0E1F               	movlw	31
 11281  0049E8  6F15               	movwf	21,b	;volatile
 11282                           
 11283                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 11284  0049EA  0E13               	movlw	19
 11285  0049EC  6F16               	movwf	22,b	;volatile
 11286                           
 11287                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 11288  0049EE  0E14               	movlw	20
 11289  0049F0  6FDF               	movwf	223,b	;volatile
 11290                           
 11291                           ; BSR set to: 58
 11292                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 11293  0049F2  0012               	return		;funcret
 11294  0049F4                     __end_of_PIN_MANAGER_Initialize:
 11295                           	opt callstack 0
 11296                           
 11297 ;; *************** function _OSCILLATOR_Initialize *****************
 11298 ;; Defined at:
 11299 ;;		line 69 in file "mcc_generated_files/mcc.c"
 11300 ;; Parameters:    Size  Location     Type
 11301 ;;		None
 11302 ;; Auto vars:     Size  Location     Type
 11303 ;;		None
 11304 ;; Return value:  Size  Location     Type
 11305 ;;                  1  [STACK] void 
 11306 ;; Registers used:
 11307 ;;		wreg, status,2
 11308 ;; Tracked objects:
 11309 ;;		On entry : 3F/3A
 11310 ;;		On exit  : 3F/39
 11311 ;;		Unchanged: 0/0
 11312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11317 ;;Total ram usage:        0 bytes
 11318 ;; Hardware stack levels used:    1
 11319 ;; Hardware stack levels required when called:    3
 11320 ;; This function calls:
 11321 ;;		Nothing
 11322 ;; This function is called by:
 11323 ;;		_SYSTEM_Initialize
 11324 ;; This function uses a reentrant model
 11325 ;;
 11326                           
 11327                           	psect	text61
 11328  00585C                     __ptext61:
 11329                           	opt callstack 0
 11330  00585C                     _OSCILLATOR_Initialize:
 11331                           	opt callstack 26
 11332                           
 11333                           ;mcc_generated_files/mcc.c: 72:     OSCCON1 = 0x20;
 11334                           
 11335                           ; BSR set to: 58
 11336                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11337                           ;incstack = 0
 11338  00585C  0E20               	movlw	32
 11339  00585E  0139               	movlb	57	; () banked
 11340  005860  6FD9               	movwf	217,b	;volatile
 11341                           
 11342                           ; BSR set to: 57
 11343                           ;mcc_generated_files/mcc.c: 74:     OSCCON3 = 0x00;
 11344  005862  6BDB               	clrf	219,b	;volatile
 11345                           
 11346                           ; BSR set to: 57
 11347                           ;mcc_generated_files/mcc.c: 76:     OSCEN = 0x00;
 11348  005864  6BDD               	clrf	221,b	;volatile
 11349                           
 11350                           ;mcc_generated_files/mcc.c: 78:     OSCFRQ = 0x02;
 11351  005866  0E02               	movlw	2
 11352  005868  6FDF               	movwf	223,b	;volatile
 11353                           
 11354                           ; BSR set to: 57
 11355                           ;mcc_generated_files/mcc.c: 80:     OSCTUNE = 0x00;
 11356  00586A  6BDE               	clrf	222,b	;volatile
 11357  00586C                     l190:
 11358                           
 11359                           ; BSR set to: 57
 11360                           ;mcc_generated_files/mcc.c: 82:     while(PLLR == 0)
 11361  00586C  B1DC               	btfsc	220,0,b	;volatile
 11362  00586E  0012               	return	
 11363  005870  D7FD               	goto	l190
 11364  005872                     __end_of_OSCILLATOR_Initialize:
 11365                           	opt callstack 0
 11366                           
 11367 ;; *************** function _NCO1_Initialize *****************
 11368 ;; Defined at:
 11369 ;;		line 58 in file "mcc_generated_files/nco1.c"
 11370 ;; Parameters:    Size  Location     Type
 11371 ;;		None
 11372 ;; Auto vars:     Size  Location     Type
 11373 ;;		None
 11374 ;; Return value:  Size  Location     Type
 11375 ;;                  1  [STACK] void 
 11376 ;; Registers used:
 11377 ;;		wreg, status,2
 11378 ;; Tracked objects:
 11379 ;;		On entry : 0/39
 11380 ;;		On exit  : 3F/3F
 11381 ;;		Unchanged: 0/0
 11382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11387 ;;Total ram usage:        0 bytes
 11388 ;; Hardware stack levels used:    1
 11389 ;; Hardware stack levels required when called:    3
 11390 ;; This function calls:
 11391 ;;		Nothing
 11392 ;; This function is called by:
 11393 ;;		_SYSTEM_Initialize
 11394 ;; This function uses a reentrant model
 11395 ;;
 11396                           
 11397                           	psect	text62
 11398  0057F4                     __ptext62:
 11399                           	opt callstack 0
 11400  0057F4                     _NCO1_Initialize:
 11401                           	opt callstack 26
 11402                           
 11403                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 11404                           
 11405                           ; BSR set to: 57
 11406                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11407                           ;incstack = 0
 11408  0057F4  013F               	movlb	63	; () banked
 11409  0057F6  6B3E               	clrf	62,b	;volatile
 11410                           
 11411                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 11412  0057F8  6B3F               	clrf	63,b	;volatile
 11413                           
 11414                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 11415  0057FA  6B3A               	clrf	58,b	;volatile
 11416                           
 11417                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 11418  0057FC  6B39               	clrf	57,b	;volatile
 11419                           
 11420                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 11421  0057FE  6B38               	clrf	56,b	;volatile
 11422                           
 11423                           ; BSR set to: 63
 11424                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 11425  005800  0E06               	movlw	6
 11426  005802  6F3D               	movwf	61,b	;volatile
 11427                           
 11428                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 11429  005804  0EC7               	movlw	199
 11430  005806  6F3C               	movwf	60,b	;volatile
 11431                           
 11432                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 11433  005808  0EAE               	movlw	174
 11434  00580A  6F3B               	movwf	59,b	;volatile
 11435                           
 11436                           ; BSR set to: 63
 11437                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 11438  00580C  8F3E               	bsf	62,7,b	;volatile
 11439                           
 11440                           ; BSR set to: 63
 11441                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 11442  00580E  0012               	return		;funcret
 11443  005810                     __end_of_NCO1_Initialize:
 11444                           	opt callstack 0
 11445                           
 11446 ;; *************** function _INTERRUPT_Initialize *****************
 11447 ;; Defined at:
 11448 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 11449 ;; Parameters:    Size  Location     Type
 11450 ;;		None
 11451 ;; Auto vars:     Size  Location     Type
 11452 ;;  state           1  [STACK] _Bool 
 11453 ;; Return value:  Size  Location     Type
 11454 ;;                  1  [STACK] void 
 11455 ;; Registers used:
 11456 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 11457 ;; Tracked objects:
 11458 ;;		On entry : 0/0
 11459 ;;		On exit  : 3F/39
 11460 ;;		Unchanged: 0/0
 11461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11466 ;;Total ram usage:        0 bytes
 11467 ;; Hardware stack levels used:    1
 11468 ;; Hardware stack levels required when called:    3
 11469 ;; This function calls:
 11470 ;;		Nothing
 11471 ;; This function is called by:
 11472 ;;		_SYSTEM_Initialize
 11473 ;; This function uses a reentrant model
 11474 ;;
 11475                           
 11476                           	psect	text63
 11477  004E10                     __ptext63:
 11478                           	opt callstack 0
 11479  004E10                     _INTERRUPT_Initialize:
 11480                           	opt callstack 0
 11481                           
 11482                           ; BSR set to: 63
 11483                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11484  004E10  52E6               	movf	postinc1,f,c
 11485                           
 11486                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 11487                           
 11488                           ;incstack = 0
 11489  004E12  8AD2               	bsf	16338,5,c	;volatile
 11490                           
 11491                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 11492  004E14  AED2               	btfss	16338,7,c	;volatile
 11493  004E16  D003               	goto	u3150
 11494  004E18  6A42               	clrf	btemp+11,c
 11495  004E1A  2A42               	incf	btemp+11,f,c
 11496  004E1C  D001               	goto	u3168
 11497  004E1E                     u3150:
 11498  004E1E  6A42               	clrf	btemp+11,c
 11499  004E20                     u3168:
 11500                           
 11501                           ;stkvar	_state @ sp[(-1)+0]
 11502  004E20  0EFF               	movlw	-1
 11503  004E22  0060  F10B  FFE3   	movff	btemp+11,plusw1
 11504                           
 11505                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 11506  004E28  9ED2               	bcf	16338,7,c	;volatile
 11507                           
 11508                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 11509  004E2A  0E55               	movlw	85
 11510  004E2C  6ED4               	movwf	16340,c	;volatile
 11511                           
 11512                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 11513  004E2E  0EAA               	movlw	170
 11514  004E30  6ED4               	movwf	16340,c	;volatile
 11515                           
 11516                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 11517  004E32  90D4               	bcf	16340,0,c	;volatile
 11518                           
 11519                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 11520  004E34  0138               	movlb	56	; () banked
 11521  004E36  6B9F               	clrf	159,b	;volatile
 11522                           
 11523                           ; BSR set to: 56
 11524                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 11525  004E38  6B9E               	clrf	158,b	;volatile
 11526                           
 11527                           ; BSR set to: 56
 11528                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 11529  004E3A  0E08               	movlw	8
 11530  004E3C  6F9D               	movwf	157,b	;volatile
 11531                           
 11532                           ; BSR set to: 56
 11533                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 11534  004E3E  0E55               	movlw	85
 11535  004E40  6ED4               	movwf	16340,c	;volatile
 11536                           
 11537                           ; BSR set to: 56
 11538                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 11539  004E42  0EAA               	movlw	170
 11540  004E44  6ED4               	movwf	16340,c	;volatile
 11541                           
 11542                           ; BSR set to: 56
 11543                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 11544  004E46  80D4               	bsf	16340,0,c	;volatile
 11545                           
 11546                           ; BSR set to: 56
 11547                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 11548                           ;stkvar	_state @ sp[(-1)+0]
 11549  004E48  0EFF               	movlw	-1
 11550  004E4A  B0E3               	btfsc	plusw1,0,c
 11551  004E4C  D002               	bra	u3175
 11552  004E4E  9ED2               	bcf	16338,7,c	;volatile
 11553  004E50  D001               	bra	u3176
 11554  004E52                     u3175:
 11555  004E52  8ED2               	bsf	16338,7,c	;volatile
 11556  004E54                     u3176:
 11557                           
 11558                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 11559  004E54  0139               	movlb	57	; () banked
 11560  004E56  8782               	bsf	130,3,b	;volatile
 11561                           
 11562                           ; BSR set to: 57
 11563                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 11564  004E58  8382               	bsf	130,1,b	;volatile
 11565                           
 11566                           ; BSR set to: 57
 11567                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 11568  004E5A  8182               	bsf	130,0,b	;volatile
 11569                           
 11570                           ; BSR set to: 57
 11571                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 11572  004E5C  8582               	bsf	130,2,b	;volatile
 11573                           
 11574                           ; BSR set to: 57
 11575                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 11576  004E5E  8786               	bsf	134,3,b	;volatile
 11577                           
 11578                           ; BSR set to: 57
 11579                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 11580  004E60  8586               	bsf	134,2,b	;volatile
 11581                           
 11582                           ; BSR set to: 57
 11583                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 11584  004E62  8983               	bsf	131,4,b	;volatile
 11585                           
 11586                           ; BSR set to: 57
 11587                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 11588  004E64  8783               	bsf	131,3,b	;volatile
 11589                           
 11590                           ; BSR set to: 57
 11591                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 11592  004E66  8181               	bsf	129,0,b	;volatile
 11593                           
 11594                           ; BSR set to: 57
 11595                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 11596  004E68  8185               	bsf	133,0,b	;volatile
 11597                           
 11598                           ; BSR set to: 57
 11599                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 11600  004E6A  8B87               	bsf	135,5,b	;volatile
 11601                           
 11602                           ; BSR set to: 57
 11603                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 11604  004E6C  8189               	bsf	137,0,b	;volatile
 11605                           
 11606                           ; BSR set to: 57
 11607                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 11608  004E6E  8581               	bsf	129,2,b	;volatile
 11609                           
 11610                           ; BSR set to: 57
 11611                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 11612  004E70  52E5               	movf	postdec1,f,c
 11613  004E72  0012               	return		;funcret
 11614  004E74                     __end_of_INTERRUPT_Initialize:
 11615                           	opt callstack 0
 11616                           
 11617 ;; *************** function _EXT_INT_Initialize *****************
 11618 ;; Defined at:
 11619 ;;		line 114 in file "mcc_generated_files/ext_int.c"
 11620 ;; Parameters:    Size  Location     Type
 11621 ;;		None
 11622 ;; Auto vars:     Size  Location     Type
 11623 ;;		None
 11624 ;; Return value:  Size  Location     Type
 11625 ;;                  1  [STACK] void 
 11626 ;; Registers used:
 11627 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11628 ;; Tracked objects:
 11629 ;;		On entry : 3F/3F
 11630 ;;		On exit  : 3F/39
 11631 ;;		Unchanged: 0/0
 11632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11637 ;;Total ram usage:        0 bytes
 11638 ;; Hardware stack levels used:    1
 11639 ;; Hardware stack levels required when called:    4
 11640 ;; This function calls:
 11641 ;;		_INT0_SetInterruptHandler
 11642 ;;		_INT1_SetInterruptHandler
 11643 ;;		_INT2_SetInterruptHandler
 11644 ;; This function is called by:
 11645 ;;		_SYSTEM_Initialize
 11646 ;; This function uses a reentrant model
 11647 ;;
 11648                           
 11649                           	psect	text64
 11650  00503C                     __ptext64:
 11651                           	opt callstack 0
 11652  00503C                     _EXT_INT_Initialize:
 11653                           	opt callstack 25
 11654                           
 11655                           ;mcc_generated_files/ext_int.c: 119:     (PIR1bits.INT0IF = 0);
 11656                           
 11657                           ; BSR set to: 57
 11658                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11659                           ;incstack = 0
 11660  00503C  0139               	movlb	57	; () banked
 11661  00503E  91A1               	bcf	161,0,b	;volatile
 11662                           
 11663                           ;mcc_generated_files/ext_int.c: 120:     (INTCON0bits.INT0EDG = 0);
 11664  005040  90D2               	bcf	16338,0,c	;volatile
 11665                           
 11666                           ; BSR set to: 57
 11667                           ;mcc_generated_files/ext_int.c: 122:     INT0_SetInterruptHandler(INT0_DefaultInterruptH
      +                          andler);
 11668  005042  0E32               	movlw	low _INT0_DefaultInterruptHandler
 11669  005044  6EE6               	movwf	postinc1,c
 11670  005046  0E59               	movlw	high _INT0_DefaultInterruptHandler
 11671  005048  6EE6               	movwf	postinc1,c
 11672  00504A  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 11673  00504C  6EE6               	movwf	postinc1,c
 11674  00504E  ECB7  F02A         	call	_INT0_SetInterruptHandler	;wreg free
 11675                           
 11676                           ;mcc_generated_files/ext_int.c: 123:     (PIE1bits.INT0IE = 1);
 11677  005052  0139               	movlb	57	; () banked
 11678  005054  8191               	bsf	145,0,b	;volatile
 11679                           
 11680                           ; BSR set to: 57
 11681                           ;mcc_generated_files/ext_int.c: 128:     (PIR5bits.INT1IF = 0);
 11682  005056  91A5               	bcf	165,0,b	;volatile
 11683                           
 11684                           ; BSR set to: 57
 11685                           ;mcc_generated_files/ext_int.c: 129:     (INTCON0bits.INT1EDG = 0);
 11686  005058  92D2               	bcf	16338,1,c	;volatile
 11687                           
 11688                           ;mcc_generated_files/ext_int.c: 131:     INT1_SetInterruptHandler(INT1_DefaultInterruptH
      +                          andler);
 11689  00505A  0E34               	movlw	low _INT1_DefaultInterruptHandler
 11690  00505C  6EE6               	movwf	postinc1,c
 11691  00505E  0E59               	movlw	high _INT1_DefaultInterruptHandler
 11692  005060  6EE6               	movwf	postinc1,c
 11693  005062  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 11694  005064  6EE6               	movwf	postinc1,c
 11695  005066  ECA3  F02A         	call	_INT1_SetInterruptHandler	;wreg free
 11696                           
 11697                           ;mcc_generated_files/ext_int.c: 132:     (PIE5bits.INT1IE = 1);
 11698  00506A  0139               	movlb	57	; () banked
 11699  00506C  8195               	bsf	149,0,b	;volatile
 11700                           
 11701                           ; BSR set to: 57
 11702                           ;mcc_generated_files/ext_int.c: 137:     (PIR7bits.INT2IF = 0);
 11703  00506E  9BA7               	bcf	167,5,b	;volatile
 11704                           
 11705                           ; BSR set to: 57
 11706                           ;mcc_generated_files/ext_int.c: 138:     (INTCON0bits.INT2EDG = 0);
 11707  005070  94D2               	bcf	16338,2,c	;volatile
 11708                           
 11709                           ;mcc_generated_files/ext_int.c: 140:     INT2_SetInterruptHandler(INT2_DefaultInterruptH
      +                          andler);
 11710  005072  0E36               	movlw	low _INT2_DefaultInterruptHandler
 11711  005074  6EE6               	movwf	postinc1,c
 11712  005076  0E59               	movlw	high _INT2_DefaultInterruptHandler
 11713  005078  6EE6               	movwf	postinc1,c
 11714  00507A  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 11715  00507C  6EE6               	movwf	postinc1,c
 11716  00507E  EC8F  F02A         	call	_INT2_SetInterruptHandler	;wreg free
 11717                           
 11718                           ;mcc_generated_files/ext_int.c: 141:     (PIE7bits.INT2IE = 1);
 11719  005082  0139               	movlb	57	; () banked
 11720  005084  8B97               	bsf	151,5,b	;volatile
 11721                           
 11722                           ; BSR set to: 57
 11723                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 11724  005086  0012               	return		;funcret
 11725  005088                     __end_of_EXT_INT_Initialize:
 11726                           	opt callstack 0
 11727                           
 11728 ;; *************** function _INT2_SetInterruptHandler *****************
 11729 ;; Defined at:
 11730 ;;		line 105 in file "mcc_generated_files/ext_int.c"
 11731 ;; Parameters:    Size  Location     Type
 11732 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11733 ;;		 -> INT2_DefaultInterruptHandler(1), 
 11734 ;; Auto vars:     Size  Location     Type
 11735 ;;		None
 11736 ;; Return value:  Size  Location     Type
 11737 ;;                  1  [STACK] void 
 11738 ;; Registers used:
 11739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11740 ;; Tracked objects:
 11741 ;;		On entry : 3F/39
 11742 ;;		On exit  : 0/0
 11743 ;;		Unchanged: 0/0
 11744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11749 ;;Total ram usage:        0 bytes
 11750 ;; Hardware stack levels used:    1
 11751 ;; Hardware stack levels required when called:    3
 11752 ;; This function calls:
 11753 ;;		Nothing
 11754 ;; This function is called by:
 11755 ;;		_EXT_INT_Initialize
 11756 ;; This function uses a reentrant model
 11757 ;;
 11758                           
 11759                           	psect	text65
 11760  00551E                     __ptext65:
 11761                           	opt callstack 0
 11762  00551E                     _INT2_SetInterruptHandler:
 11763                           	opt callstack 25
 11764                           
 11765                           ;mcc_generated_files/ext_int.c: 106:     INT2_InterruptHandler = InterruptHandler;
 11766                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11767                           
 11768                           ; BSR set to: 57
 11769                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11770                           ;incstack = 0
 11771  00551E  50E1               	movf	fsr1l,w,c
 11772  005520  0FFD               	addlw	-3
 11773  005522  6ED9               	movwf	fsr2l,c
 11774  005524  50E2               	movf	fsr1h,w,c
 11775  005526  6EDA               	movwf	fsr2h,c
 11776  005528  0EFF               	movlw	255
 11777  00552A  22DA               	addwfc	fsr2h,f,c
 11778  00552C  006F FF78  F017    	movff	postinc2,_INT2_InterruptHandler
 11779  005532  006F FF78  F018    	movff	postinc2,_INT2_InterruptHandler+1
 11780  005538  006F FF74  F019    	movff	postdec2,_INT2_InterruptHandler+2
 11781                           
 11782                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11783  00553E  52E5               	movf	postdec1,f,c
 11784  005540  52E5               	movf	postdec1,f,c
 11785  005542  52E5               	movf	postdec1,f,c
 11786  005544  0012               	return		;funcret
 11787  005546                     __end_of_INT2_SetInterruptHandler:
 11788                           	opt callstack 0
 11789                           
 11790 ;; *************** function _INT1_SetInterruptHandler *****************
 11791 ;; Defined at:
 11792 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 11793 ;; Parameters:    Size  Location     Type
 11794 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11795 ;;		 -> INT1_DefaultInterruptHandler(1), 
 11796 ;; Auto vars:     Size  Location     Type
 11797 ;;		None
 11798 ;; Return value:  Size  Location     Type
 11799 ;;                  1  [STACK] void 
 11800 ;; Registers used:
 11801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11802 ;; Tracked objects:
 11803 ;;		On entry : 3F/39
 11804 ;;		On exit  : 0/0
 11805 ;;		Unchanged: 0/0
 11806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11811 ;;Total ram usage:        0 bytes
 11812 ;; Hardware stack levels used:    1
 11813 ;; Hardware stack levels required when called:    3
 11814 ;; This function calls:
 11815 ;;		Nothing
 11816 ;; This function is called by:
 11817 ;;		_EXT_INT_Initialize
 11818 ;; This function uses a reentrant model
 11819 ;;
 11820                           
 11821                           	psect	text66
 11822  005546                     __ptext66:
 11823                           	opt callstack 0
 11824  005546                     _INT1_SetInterruptHandler:
 11825                           	opt callstack 25
 11826                           
 11827                           ;mcc_generated_files/ext_int.c: 80:     INT1_InterruptHandler = InterruptHandler;
 11828                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11829                           
 11830                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11831                           ;incstack = 0
 11832  005546  50E1               	movf	fsr1l,w,c
 11833  005548  0FFD               	addlw	-3
 11834  00554A  6ED9               	movwf	fsr2l,c
 11835  00554C  50E2               	movf	fsr1h,w,c
 11836  00554E  6EDA               	movwf	fsr2h,c
 11837  005550  0EFF               	movlw	255
 11838  005552  22DA               	addwfc	fsr2h,f,c
 11839  005554  006F FF78  F01A    	movff	postinc2,_INT1_InterruptHandler
 11840  00555A  006F FF78  F01B    	movff	postinc2,_INT1_InterruptHandler+1
 11841  005560  006F FF74  F01C    	movff	postdec2,_INT1_InterruptHandler+2
 11842                           
 11843                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11844  005566  52E5               	movf	postdec1,f,c
 11845  005568  52E5               	movf	postdec1,f,c
 11846  00556A  52E5               	movf	postdec1,f,c
 11847  00556C  0012               	return		;funcret
 11848  00556E                     __end_of_INT1_SetInterruptHandler:
 11849                           	opt callstack 0
 11850                           
 11851 ;; *************** function _INT0_SetInterruptHandler *****************
 11852 ;; Defined at:
 11853 ;;		line 53 in file "mcc_generated_files/ext_int.c"
 11854 ;; Parameters:    Size  Location     Type
 11855 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 11856 ;;		 -> INT0_DefaultInterruptHandler(1), 
 11857 ;; Auto vars:     Size  Location     Type
 11858 ;;		None
 11859 ;; Return value:  Size  Location     Type
 11860 ;;                  1  [STACK] void 
 11861 ;; Registers used:
 11862 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 11863 ;; Tracked objects:
 11864 ;;		On entry : 3F/39
 11865 ;;		On exit  : 0/0
 11866 ;;		Unchanged: 0/0
 11867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11872 ;;Total ram usage:        0 bytes
 11873 ;; Hardware stack levels used:    1
 11874 ;; Hardware stack levels required when called:    3
 11875 ;; This function calls:
 11876 ;;		Nothing
 11877 ;; This function is called by:
 11878 ;;		_EXT_INT_Initialize
 11879 ;; This function uses a reentrant model
 11880 ;;
 11881                           
 11882                           	psect	text67
 11883  00556E                     __ptext67:
 11884                           	opt callstack 0
 11885  00556E                     _INT0_SetInterruptHandler:
 11886                           	opt callstack 25
 11887                           
 11888                           ;mcc_generated_files/ext_int.c: 54:     INT0_InterruptHandler = InterruptHandler;
 11889                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 11890                           
 11891                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11892                           ;incstack = 0
 11893  00556E  50E1               	movf	fsr1l,w,c
 11894  005570  0FFD               	addlw	-3
 11895  005572  6ED9               	movwf	fsr2l,c
 11896  005574  50E2               	movf	fsr1h,w,c
 11897  005576  6EDA               	movwf	fsr2h,c
 11898  005578  0EFF               	movlw	255
 11899  00557A  22DA               	addwfc	fsr2h,f,c
 11900  00557C  006F FF78  F01D    	movff	postinc2,_INT0_InterruptHandler
 11901  005582  006F FF78  F01E    	movff	postinc2,_INT0_InterruptHandler+1
 11902  005588  006F FF74  F01F    	movff	postdec2,_INT0_InterruptHandler+2
 11903                           
 11904                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 11905  00558E  52E5               	movf	postdec1,f,c
 11906  005590  52E5               	movf	postdec1,f,c
 11907  005592  52E5               	movf	postdec1,f,c
 11908  005594  0012               	return		;funcret
 11909  005596                     __end_of_INT0_SetInterruptHandler:
 11910                           	opt callstack 0
 11911                           
 11912 ;; *************** function _DSM_Initialize *****************
 11913 ;; Defined at:
 11914 ;;		line 58 in file "mcc_generated_files/dsm.c"
 11915 ;; Parameters:    Size  Location     Type
 11916 ;;		None
 11917 ;; Auto vars:     Size  Location     Type
 11918 ;;		None
 11919 ;; Return value:  Size  Location     Type
 11920 ;;                  1  [STACK] void 
 11921 ;; Registers used:
 11922 ;;		wreg, status,2
 11923 ;; Tracked objects:
 11924 ;;		On entry : 3F/3C
 11925 ;;		On exit  : 3F/3C
 11926 ;;		Unchanged: 0/0
 11927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11932 ;;Total ram usage:        0 bytes
 11933 ;; Hardware stack levels used:    1
 11934 ;; Hardware stack levels required when called:    3
 11935 ;; This function calls:
 11936 ;;		Nothing
 11937 ;; This function is called by:
 11938 ;;		_SYSTEM_Initialize
 11939 ;; This function uses a reentrant model
 11940 ;;
 11941                           
 11942                           	psect	text68
 11943  005810                     __ptext68:
 11944                           	opt callstack 0
 11945  005810                     _DSM_Initialize:
 11946                           	opt callstack 26
 11947                           
 11948                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 11949                           
 11950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11951                           ;incstack = 0
 11952  005810  013C               	movlb	60	; () banked
 11953  005812  99FA               	bcf	250,4,b	;volatile
 11954                           
 11955                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 11956  005814  81FB               	bsf	251,0,b	;volatile
 11957                           
 11958                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 11959  005816  93FB               	bcf	251,1,b	;volatile
 11960                           
 11961                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 11962  005818  89FB               	bsf	251,4,b	;volatile
 11963                           
 11964                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 11965  00581A  9BFB               	bcf	251,5,b	;volatile
 11966                           
 11967                           ; BSR set to: 60
 11968                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 11969  00581C  0E13               	movlw	19
 11970  00581E  6FFC               	movwf	252,b	;volatile
 11971                           
 11972                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 11973  005820  0E0E               	movlw	14
 11974  005822  6FFE               	movwf	254,b	;volatile
 11975                           
 11976                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 11977  005824  0E04               	movlw	4
 11978  005826  6FFD               	movwf	253,b	;volatile
 11979                           
 11980                           ; BSR set to: 60
 11981                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 11982  005828  8FFA               	bsf	250,7,b	;volatile
 11983                           
 11984                           ; BSR set to: 60
 11985                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 11986  00582A  0012               	return		;funcret
 11987  00582C                     __end_of_DSM_Initialize:
 11988                           	opt callstack 0
 11989                           
 11990 ;; *************** function _DMA1_Initialize *****************
 11991 ;; Defined at:
 11992 ;;		line 86 in file "mcc_generated_files/dma1.c"
 11993 ;; Parameters:    Size  Location     Type
 11994 ;;		None
 11995 ;; Auto vars:     Size  Location     Type
 11996 ;;		None
 11997 ;; Return value:  Size  Location     Type
 11998 ;;                  1  [STACK] void 
 11999 ;; Registers used:
 12000 ;;		wreg, status,2
 12001 ;; Tracked objects:
 12002 ;;		On entry : 3F/3D
 12003 ;;		On exit  : 3F/3B
 12004 ;;		Unchanged: 0/0
 12005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12010 ;;Total ram usage:        0 bytes
 12011 ;; Hardware stack levels used:    1
 12012 ;; Hardware stack levels required when called:    3
 12013 ;; This function calls:
 12014 ;;		Nothing
 12015 ;; This function is called by:
 12016 ;;		_SYSTEM_Initialize
 12017 ;; This function uses a reentrant model
 12018 ;;
 12019                           
 12020                           	psect	text69
 12021  004D40                     __ptext69:
 12022                           	opt callstack 0
 12023  004D40                     _DMA1_Initialize:
 12024                           	opt callstack 26
 12025                           
 12026                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 12027                           
 12028                           ; BSR set to: 60
 12029                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12030                           ;incstack = 0
 12031  004D40  0E00               	movlw	0
 12032  004D42  013B               	movlb	59	; () banked
 12033  004D44  6FF9               	movwf	249,b	;volatile
 12034  004D46  0E10               	movlw	16
 12035  004D48  6FFA               	movwf	250,b	;volatile
 12036  004D4A  0E00               	movlw	0
 12037  004D4C  6FFB               	movwf	251,b	;volatile
 12038                           
 12039                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 12040  004D4E  0E3D               	movlw	61
 12041  004D50  6FF1               	movwf	241,b	;volatile
 12042  004D52  0E11               	movlw	17
 12043  004D54  6FF0               	movwf	240,b	;volatile
 12044                           
 12045                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 12046  004D56  0E03               	movlw	3
 12047  004D58  6FFD               	movwf	253,b	;volatile
 12048                           
 12049                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 12050  004D5A  0E00               	movlw	0
 12051  004D5C  6FF8               	movwf	248,b	;volatile
 12052  004D5E  0E01               	movlw	1
 12053  004D60  6FF7               	movwf	247,b	;volatile
 12054                           
 12055                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 12056  004D62  0E00               	movlw	0
 12057  004D64  6FEF               	movwf	239,b	;volatile
 12058  004D66  0E01               	movlw	1
 12059  004D68  6FEE               	movwf	238,b	;volatile
 12060                           
 12061                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 12062  004D6A  0E15               	movlw	21
 12063  004D6C  6FFF               	movwf	255,b	;volatile
 12064                           
 12065                           ; BSR set to: 59
 12066                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 12067  004D6E  6BFE               	clrf	254,b	;volatile
 12068                           
 12069                           ; BSR set to: 59
 12070                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 12071  004D70  0139               	movlb	57	; () banked
 12072  004D72  93A2               	bcf	162,1,b	;volatile
 12073                           
 12074                           ; BSR set to: 57
 12075                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 12076  004D74  91A2               	bcf	162,0,b	;volatile
 12077                           
 12078                           ; BSR set to: 57
 12079                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 12080  004D76  97A2               	bcf	162,3,b	;volatile
 12081                           
 12082                           ; BSR set to: 57
 12083                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 12084  004D78  95A2               	bcf	162,2,b	;volatile
 12085                           
 12086                           ; BSR set to: 57
 12087                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 12088  004D7A  8392               	bsf	146,1,b	;volatile
 12089                           
 12090                           ; BSR set to: 57
 12091                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 12092  004D7C  8192               	bsf	146,0,b	;volatile
 12093                           
 12094                           ; BSR set to: 57
 12095                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 12096  004D7E  8792               	bsf	146,3,b	;volatile
 12097                           
 12098                           ; BSR set to: 57
 12099                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 12100  004D80  8592               	bsf	146,2,b	;volatile
 12101                           
 12102                           ; BSR set to: 57
 12103                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 12104  004D82  6BF1               	clrf	241,b	;volatile
 12105                           
 12106                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 12107  004D84  0E01               	movlw	1
 12108  004D86  6FF2               	movwf	242,b	;volatile
 12109                           
 12110                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 12111  004D88  0E04               	movlw	4
 12112  004D8A  6FF3               	movwf	243,b	;volatile
 12113                           
 12114                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 12115  004D8C  0E02               	movlw	2
 12116  004D8E  6FF4               	movwf	244,b	;volatile
 12117                           
 12118                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 12119  004D90  0E03               	movlw	3
 12120  004D92  6FF7               	movwf	247,b	;volatile
 12121  004D94  9ED2               	bcf	16338,7,c	;# 
 12122  004D96  0139               	banksel	14831	;# 
 12123  004D98  0E55               	movlw	85	;# 
 12124  004D9A  6FEF               	movwf	14831,b	;# 
 12125  004D9C  0EAA               	movlw	170	;# 
 12126  004D9E  6FEF               	movwf	14831,b	;# 
 12127  004DA0  81EF               	bsf	14831,0,b	;# 
 12128  004DA2  8ED2               	bsf	16338,7,c	;# 
 12129                           
 12130                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 12131  004DA4  013B               	movlb	59	; () banked
 12132  004DA6  6BFC               	clrf	252,b	;volatile
 12133                           
 12134                           ; BSR set to: 59
 12135                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12136  004DA8  0012               	return		;funcret
 12137  004DAA                     __end_of_DMA1_Initialize:
 12138                           	opt callstack 0
 12139                           
 12140 ;; *************** function _CLKREF_Initialize *****************
 12141 ;; Defined at:
 12142 ;;		line 58 in file "mcc_generated_files/clkref.c"
 12143 ;; Parameters:    Size  Location     Type
 12144 ;;		None
 12145 ;; Auto vars:     Size  Location     Type
 12146 ;;		None
 12147 ;; Return value:  Size  Location     Type
 12148 ;;                  1  [STACK] void 
 12149 ;; Registers used:
 12150 ;;		wreg, status,2
 12151 ;; Tracked objects:
 12152 ;;		On entry : 3F/3B
 12153 ;;		On exit  : 3F/3C
 12154 ;;		Unchanged: 0/0
 12155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12160 ;;Total ram usage:        0 bytes
 12161 ;; Hardware stack levels used:    1
 12162 ;; Hardware stack levels required when called:    3
 12163 ;; This function calls:
 12164 ;;		Nothing
 12165 ;; This function is called by:
 12166 ;;		_SYSTEM_Initialize
 12167 ;; This function uses a reentrant model
 12168 ;;
 12169                           
 12170                           	psect	text70
 12171  0058E4                     __ptext70:
 12172                           	opt callstack 0
 12173  0058E4                     _CLKREF_Initialize:
 12174                           	opt callstack 26
 12175                           
 12176                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 12177                           
 12178                           ; BSR set to: 59
 12179                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12180                           ;incstack = 0
 12181  0058E4  013C               	movlb	60	; () banked
 12182  0058E6  6BE6               	clrf	230,b	;volatile
 12183                           
 12184                           ; BSR set to: 60
 12185                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 12186  0058E8  0E94               	movlw	148
 12187  0058EA  6FE5               	movwf	229,b	;volatile
 12188                           
 12189                           ; BSR set to: 60
 12190                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 12191  0058EC  0012               	return		;funcret
 12192  0058EE                     __end_of_CLKREF_Initialize:
 12193                           	opt callstack 0
 12194                           
 12195 ;; *************** function _CLC1_Initialize *****************
 12196 ;; Defined at:
 12197 ;;		line 58 in file "mcc_generated_files/clc1.c"
 12198 ;; Parameters:    Size  Location     Type
 12199 ;;		None
 12200 ;; Auto vars:     Size  Location     Type
 12201 ;;		None
 12202 ;; Return value:  Size  Location     Type
 12203 ;;                  1  [STACK] void 
 12204 ;; Registers used:
 12205 ;;		wreg, status,2
 12206 ;; Tracked objects:
 12207 ;;		On entry : 0/39
 12208 ;;		On exit  : 3F/3C
 12209 ;;		Unchanged: 0/0
 12210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12215 ;;Total ram usage:        0 bytes
 12216 ;; Hardware stack levels used:    1
 12217 ;; Hardware stack levels required when called:    3
 12218 ;; This function calls:
 12219 ;;		Nothing
 12220 ;; This function is called by:
 12221 ;;		_SYSTEM_Initialize
 12222 ;; This function uses a reentrant model
 12223 ;;
 12224                           
 12225                           	psect	text71
 12226  0056D0                     __ptext71:
 12227                           	opt callstack 0
 12228  0056D0                     _CLC1_Initialize:
 12229                           	opt callstack 26
 12230                           
 12231                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 12232                           
 12233                           ; BSR set to: 60
 12234                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12235                           ;incstack = 0
 12236  0056D0  013C               	movlb	60	; () banked
 12237  0056D2  6B75               	clrf	117,b	;volatile
 12238                           
 12239                           ; BSR set to: 60
 12240                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 12241  0056D4  0E04               	movlw	4
 12242  0056D6  6F76               	movwf	118,b	;volatile
 12243                           
 12244                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 12245  0056D8  0E04               	movlw	4
 12246  0056DA  6F77               	movwf	119,b	;volatile
 12247                           
 12248                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 12249  0056DC  0E04               	movlw	4
 12250  0056DE  6F78               	movwf	120,b	;volatile
 12251                           
 12252                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 12253  0056E0  0E04               	movlw	4
 12254  0056E2  6F79               	movwf	121,b	;volatile
 12255                           
 12256                           ; BSR set to: 60
 12257                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 12258  0056E4  6B7A               	clrf	122,b	;volatile
 12259                           
 12260                           ; BSR set to: 60
 12261                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 12262  0056E6  6B7B               	clrf	123,b	;volatile
 12263                           
 12264                           ; BSR set to: 60
 12265                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 12266  0056E8  6B7C               	clrf	124,b	;volatile
 12267                           
 12268                           ; BSR set to: 60
 12269                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 12270  0056EA  6B7D               	clrf	125,b	;volatile
 12271                           
 12272                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 12273  0056EC  0E81               	movlw	129
 12274  0056EE  6F74               	movwf	116,b	;volatile
 12275                           
 12276                           ; BSR set to: 60
 12277                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12278  0056F0  0012               	return		;funcret
 12279  0056F2                     __end_of_CLC1_Initialize:
 12280                           	opt callstack 0
 12281                           
 12282 ;; *************** function _ADCC_Initialize *****************
 12283 ;; Defined at:
 12284 ;;		line 64 in file "mcc_generated_files/adcc.c"
 12285 ;; Parameters:    Size  Location     Type
 12286 ;;		None
 12287 ;; Auto vars:     Size  Location     Type
 12288 ;;		None
 12289 ;; Return value:  Size  Location     Type
 12290 ;;                  1  [STACK] void 
 12291 ;; Registers used:
 12292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 12293 ;; Tracked objects:
 12294 ;;		On entry : 3F/39
 12295 ;;		On exit  : 0/0
 12296 ;;		Unchanged: 0/0
 12297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12302 ;;Total ram usage:        0 bytes
 12303 ;; Hardware stack levels used:    1
 12304 ;; Hardware stack levels required when called:    4
 12305 ;; This function calls:
 12306 ;;		_ADCC_SetADIInterruptHandler
 12307 ;; This function is called by:
 12308 ;;		_SYSTEM_Initialize
 12309 ;; This function uses a reentrant model
 12310 ;;
 12311                           
 12312                           	psect	text72
 12313  005088                     __ptext72:
 12314                           	opt callstack 0
 12315  005088                     _ADCC_Initialize:
 12316                           	opt callstack 25
 12317                           
 12318                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 12319                           
 12320                           ; BSR set to: 60
 12321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12322                           ;incstack = 0
 12323  005088  013E               	movlb	62	; () banked
 12324  00508A  6BDE               	clrf	222,b	;volatile
 12325                           
 12326                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 12327  00508C  6BDF               	clrf	223,b	;volatile
 12328                           
 12329                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 12330  00508E  6BE0               	clrf	224,b	;volatile
 12331                           
 12332                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 12333  005090  6BE1               	clrf	225,b	;volatile
 12334                           
 12335                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 12336  005092  6BE4               	clrf	228,b	;volatile
 12337                           
 12338                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 12339  005094  6BE5               	clrf	229,b	;volatile
 12340                           
 12341                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 12342  005096  6BEA               	clrf	234,b	;volatile
 12343                           
 12344                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 12345  005098  6BEC               	clrf	236,b	;volatile
 12346                           
 12347                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 12348  00509A  6BF1               	clrf	241,b	;volatile
 12349                           
 12350                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 12351  00509C  6BF3               	clrf	243,b	;volatile
 12352                           
 12353                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 12354  00509E  6BF4               	clrf	244,b	;volatile
 12355                           
 12356                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 12357  0050A0  6BF5               	clrf	245,b	;volatile
 12358                           
 12359                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 12360  0050A2  6BF6               	clrf	246,b	;volatile
 12361                           
 12362                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 12363  0050A4  6BF7               	clrf	247,b	;volatile
 12364                           
 12365                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 12366  0050A6  6BF9               	clrf	249,b	;volatile
 12367                           
 12368                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 12369  0050A8  6BFA               	clrf	250,b	;volatile
 12370                           
 12371                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 12372  0050AA  6BFB               	clrf	251,b	;volatile
 12373                           
 12374                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 12375  0050AC  6BFC               	clrf	252,b	;volatile
 12376                           
 12377                           ; BSR set to: 62
 12378                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 12379  0050AE  0E02               	movlw	2
 12380  0050B0  6FFD               	movwf	253,b	;volatile
 12381                           
 12382                           ; BSR set to: 62
 12383                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 12384  0050B2  6BFE               	clrf	254,b	;volatile
 12385                           
 12386                           ; BSR set to: 62
 12387                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 12388  0050B4  6BFF               	clrf	255,b	;volatile
 12389                           
 12390                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 12391  0050B6  0E94               	movlw	148
 12392  0050B8  6FF8               	movwf	248,b	;volatile
 12393                           
 12394                           ; BSR set to: 62
 12395                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 12396  0050BA  0139               	movlb	57	; () banked
 12397  0050BC  95A1               	bcf	161,2,b	;volatile
 12398                           
 12399                           ; BSR set to: 57
 12400                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 12401  0050BE  8591               	bsf	145,2,b	;volatile
 12402                           
 12403                           ; BSR set to: 57
 12404                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 12405  0050C0  0E38               	movlw	low _ADCC_DefaultInterruptHandler
 12406  0050C2  6EE6               	movwf	postinc1,c
 12407  0050C4  0E59               	movlw	high _ADCC_DefaultInterruptHandler
 12408  0050C6  6EE6               	movwf	postinc1,c
 12409  0050C8  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 12410  0050CA  6EE6               	movwf	postinc1,c
 12411  0050CC  ECCB  F02A         	call	_ADCC_SetADIInterruptHandler	;wreg free
 12412                           
 12413                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 12414  0050D0  0012               	return		;funcret
 12415  0050D2                     __end_of_ADCC_Initialize:
 12416                           	opt callstack 0
 12417                           
 12418 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 12419 ;; Defined at:
 12420 ;;		line 316 in file "mcc_generated_files/adcc.c"
 12421 ;; Parameters:    Size  Location     Type
 12422 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 12423 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 12424 ;; Auto vars:     Size  Location     Type
 12425 ;;		None
 12426 ;; Return value:  Size  Location     Type
 12427 ;;                  1  [STACK] void 
 12428 ;; Registers used:
 12429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 12430 ;; Tracked objects:
 12431 ;;		On entry : 3F/39
 12432 ;;		On exit  : 0/0
 12433 ;;		Unchanged: 0/0
 12434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12439 ;;Total ram usage:        0 bytes
 12440 ;; Hardware stack levels used:    1
 12441 ;; Hardware stack levels required when called:    3
 12442 ;; This function calls:
 12443 ;;		Nothing
 12444 ;; This function is called by:
 12445 ;;		_ADCC_Initialize
 12446 ;; This function uses a reentrant model
 12447 ;;
 12448                           
 12449                           	psect	text73
 12450  005596                     __ptext73:
 12451                           	opt callstack 0
 12452  005596                     _ADCC_SetADIInterruptHandler:
 12453                           	opt callstack 25
 12454                           
 12455                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 12456                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 12457                           
 12458                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12459                           ;incstack = 0
 12460  005596  50E1               	movf	fsr1l,w,c
 12461  005598  0FFD               	addlw	-3
 12462  00559A  6ED9               	movwf	fsr2l,c
 12463  00559C  50E2               	movf	fsr1h,w,c
 12464  00559E  6EDA               	movwf	fsr2h,c
 12465  0055A0  0EFF               	movlw	255
 12466  0055A2  22DA               	addwfc	fsr2h,f,c
 12467  0055A4  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler
 12468  0055AA  006F FF78  F009    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 12469  0055B0  006F FF74  F00A    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 12470                           
 12471                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 12472  0055B6  52E5               	movf	postdec1,f,c
 12473  0055B8  52E5               	movf	postdec1,f,c
 12474  0055BA  52E5               	movf	postdec1,f,c
 12475  0055BC  0012               	return		;funcret
 12476  0055BE                     __end_of_ADCC_SetADIInterruptHandler:
 12477                           	opt callstack 0
 12478                           
 12479 ;; *************** function _INT0_ISR *****************
 12480 ;; Defined at:
 12481 ;;		line 35 in file "mcc_generated_files/ext_int.c"
 12482 ;; Parameters:    Size  Location     Type
 12483 ;;		None
 12484 ;; Auto vars:     Size  Location     Type
 12485 ;;		None
 12486 ;; Return value:  Size  Location     Type
 12487 ;;                  1    wreg      void 
 12488 ;; Registers used:
 12489 ;;		wreg, status,2, status,0, pclath, tosl
 12490 ;; Tracked objects:
 12491 ;;		On entry : 0/0
 12492 ;;		On exit  : 0/0
 12493 ;;		Unchanged: 0/0
 12494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12499 ;;Total ram usage:        0 bytes
 12500 ;; Hardware stack levels used:    1
 12501 ;; Hardware stack levels required when called:    2
 12502 ;; This function calls:
 12503 ;;		_INT0_CallBack
 12504 ;; This function is called by:
 12505 ;;		Interrupt level 2
 12506 ;; This function uses a non-reentrant model
 12507 ;;
 12508                           
 12509                           	psect	text74
 12510  005898                     __ptext74:
 12511                           	opt callstack 0
 12512  005898                     _INT0_ISR:
 12513                           	opt callstack 18
 12514                           
 12515                           ;incstack = 0
 12516  005898  EE13  F084         	lfsr	1,___inthi_sp
 12517                           
 12518                           ;mcc_generated_files/ext_int.c: 37:     (PIR1bits.INT0IF = 0);
 12519  00589C  0139               	movlb	57	; () banked
 12520  00589E  91A1               	bcf	161,0,b	;volatile
 12521                           
 12522                           ; BSR set to: 57
 12523                           ;mcc_generated_files/ext_int.c: 40:     INT0_CallBack();
 12524  0058A0  EC79  F02B         	call	_INT0_CallBack	;wreg free
 12525  0058A4  0011               	retfie		f
 12526  0058A6                     __end_of_INT0_ISR:
 12527                           	opt callstack 0
 12528                           
 12529 ;; *************** function _INT0_CallBack *****************
 12530 ;; Defined at:
 12531 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 12532 ;; Parameters:    Size  Location     Type
 12533 ;;		None
 12534 ;; Auto vars:     Size  Location     Type
 12535 ;;		None
 12536 ;; Return value:  Size  Location     Type
 12537 ;;                  1  [STACK] void 
 12538 ;; Registers used:
 12539 ;;		wreg, status,2, status,0, pclath, tosl
 12540 ;; Tracked objects:
 12541 ;;		On entry : 3F/39
 12542 ;;		On exit  : 0/0
 12543 ;;		Unchanged: 0/0
 12544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12549 ;;Total ram usage:        0 bytes
 12550 ;; Hardware stack levels used:    1
 12551 ;; Hardware stack levels required when called:    1
 12552 ;; This function calls:
 12553 ;;		Absolute function
 12554 ;;		_INT0_DefaultInterruptHandler
 12555 ;; This function is called by:
 12556 ;;		_INT0_ISR
 12557 ;; This function uses a reentrant model
 12558 ;;
 12559                           
 12560                           	psect	text75
 12561  0056F2                     __ptext75:
 12562                           	opt callstack 0
 12563  0056F2                     _INT0_CallBack:
 12564                           	opt callstack 18
 12565                           
 12566                           ;mcc_generated_files/ext_int.c: 47:     if(INT0_InterruptHandler)
 12567                           
 12568                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12569                           ;incstack = 0
 12570  0056F2  501D               	movf	_INT0_InterruptHandler,w,c
 12571  0056F4  101E               	iorwf	_INT0_InterruptHandler+1,w,c
 12572  0056F6  101F               	iorwf	_INT0_InterruptHandler+2,w,c
 12573  0056F8  B4D8               	btfsc	status,2,c
 12574  0056FA  0012               	return	
 12575                           
 12576                           ;mcc_generated_files/ext_int.c: 48:     {;mcc_generated_files/ext_int.c: 49:         INT
      +                          0_InterruptHandler();
 12577  0056FC  D801               	call	u140_48
 12578  0056FE  0012               	return	
 12579  005700                     u140_48:
 12580  005700  0005               	push	
 12581  005702  6EFA               	movwf	pclath,c
 12582  005704  501D               	movf	_INT0_InterruptHandler,w,c
 12583  005706  6EFD               	movwf	tosl,c
 12584  005708  501E               	movf	_INT0_InterruptHandler+1,w,c
 12585  00570A  6EFE               	movwf	tosh,c
 12586  00570C  501F               	movf	_INT0_InterruptHandler+2,w,c
 12587  00570E  6EFF               	movwf	tosu,c
 12588  005710  50FA               	movf	pclath,w,c
 12589  005712  0012               	return		;indir
 12590  005714                     __end_of_INT0_CallBack:
 12591                           	opt callstack 0
 12592                           
 12593 ;; *************** function _INT0_DefaultInterruptHandler *****************
 12594 ;; Defined at:
 12595 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 12596 ;; Parameters:    Size  Location     Type
 12597 ;;		None
 12598 ;; Auto vars:     Size  Location     Type
 12599 ;;		None
 12600 ;; Return value:  Size  Location     Type
 12601 ;;                  1  [STACK] void 
 12602 ;; Registers used:
 12603 ;;		None
 12604 ;; Tracked objects:
 12605 ;;		On entry : 0/39
 12606 ;;		On exit  : 0/0
 12607 ;;		Unchanged: 0/0
 12608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12613 ;;Total ram usage:        0 bytes
 12614 ;; Hardware stack levels used:    1
 12615 ;; This function calls:
 12616 ;;		Nothing
 12617 ;; This function is called by:
 12618 ;;		_EXT_INT_Initialize
 12619 ;;		_INT0_CallBack
 12620 ;; This function uses a reentrant model
 12621 ;;
 12622                           
 12623                           	psect	text76
 12624  005932                     __ptext76:
 12625                           	opt callstack 0
 12626  005932                     _INT0_DefaultInterruptHandler:
 12627                           	opt callstack 18
 12628                           
 12629                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 12630                           
 12631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12632                           ;incstack = 0
 12633  005932  0012               	return		;funcret
 12634  005934                     __end_of_INT0_DefaultInterruptHandler:
 12635                           	opt callstack 0
 12636                           
 12637 ;; *************** function _INT1_ISR *****************
 12638 ;; Defined at:
 12639 ;;		line 61 in file "mcc_generated_files/ext_int.c"
 12640 ;; Parameters:    Size  Location     Type
 12641 ;;		None
 12642 ;; Auto vars:     Size  Location     Type
 12643 ;;		None
 12644 ;; Return value:  Size  Location     Type
 12645 ;;                  1    wreg      void 
 12646 ;; Registers used:
 12647 ;;		wreg, status,2, status,0, pclath, tosl
 12648 ;; Tracked objects:
 12649 ;;		On entry : 0/0
 12650 ;;		On exit  : 0/0
 12651 ;;		Unchanged: 0/0
 12652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12657 ;;Total ram usage:        0 bytes
 12658 ;; Hardware stack levels used:    1
 12659 ;; Hardware stack levels required when called:    2
 12660 ;; This function calls:
 12661 ;;		_INT1_CallBack
 12662 ;; This function is called by:
 12663 ;;		Interrupt level 2
 12664 ;; This function uses a non-reentrant model
 12665 ;;
 12666                           
 12667                           	psect	text77
 12668  0058A8                     __ptext77:
 12669                           	opt callstack 0
 12670  0058A8                     _INT1_ISR:
 12671                           	opt callstack 18
 12672                           
 12673                           ;incstack = 0
 12674  0058A8  EE13  F084         	lfsr	1,___inthi_sp
 12675                           
 12676                           ;mcc_generated_files/ext_int.c: 63:     (PIR5bits.INT1IF = 0);
 12677  0058AC  0139               	movlb	57	; () banked
 12678  0058AE  91A5               	bcf	165,0,b	;volatile
 12679                           
 12680                           ; BSR set to: 57
 12681                           ;mcc_generated_files/ext_int.c: 66:     INT1_CallBack();
 12682  0058B0  EC8A  F02B         	call	_INT1_CallBack	;wreg free
 12683  0058B4  0011               	retfie		f
 12684  0058B6                     __end_of_INT1_ISR:
 12685                           	opt callstack 0
 12686                           
 12687 ;; *************** function _INT1_CallBack *****************
 12688 ;; Defined at:
 12689 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 12690 ;; Parameters:    Size  Location     Type
 12691 ;;		None
 12692 ;; Auto vars:     Size  Location     Type
 12693 ;;		None
 12694 ;; Return value:  Size  Location     Type
 12695 ;;                  1  [STACK] void 
 12696 ;; Registers used:
 12697 ;;		wreg, status,2, status,0, pclath, tosl
 12698 ;; Tracked objects:
 12699 ;;		On entry : 3F/39
 12700 ;;		On exit  : 0/0
 12701 ;;		Unchanged: 0/0
 12702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12707 ;;Total ram usage:        0 bytes
 12708 ;; Hardware stack levels used:    1
 12709 ;; Hardware stack levels required when called:    1
 12710 ;; This function calls:
 12711 ;;		Absolute function
 12712 ;;		_INT1_DefaultInterruptHandler
 12713 ;; This function is called by:
 12714 ;;		_INT1_ISR
 12715 ;; This function uses a reentrant model
 12716 ;;
 12717                           
 12718                           	psect	text78
 12719  005714                     __ptext78:
 12720                           	opt callstack 0
 12721  005714                     _INT1_CallBack:
 12722                           	opt callstack 18
 12723                           
 12724                           ;mcc_generated_files/ext_int.c: 73:     if(INT1_InterruptHandler)
 12725                           
 12726                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12727                           ;incstack = 0
 12728  005714  501A               	movf	_INT1_InterruptHandler,w,c
 12729  005716  101B               	iorwf	_INT1_InterruptHandler+1,w,c
 12730  005718  101C               	iorwf	_INT1_InterruptHandler+2,w,c
 12731  00571A  B4D8               	btfsc	status,2,c
 12732  00571C  0012               	return	
 12733                           
 12734                           ;mcc_generated_files/ext_int.c: 74:     {;mcc_generated_files/ext_int.c: 75:         INT
      +                          1_InterruptHandler();
 12735  00571E  D801               	call	u142_48
 12736  005720  0012               	return	
 12737  005722                     u142_48:
 12738  005722  0005               	push	
 12739  005724  6EFA               	movwf	pclath,c
 12740  005726  501A               	movf	_INT1_InterruptHandler,w,c
 12741  005728  6EFD               	movwf	tosl,c
 12742  00572A  501B               	movf	_INT1_InterruptHandler+1,w,c
 12743  00572C  6EFE               	movwf	tosh,c
 12744  00572E  501C               	movf	_INT1_InterruptHandler+2,w,c
 12745  005730  6EFF               	movwf	tosu,c
 12746  005732  50FA               	movf	pclath,w,c
 12747  005734  0012               	return		;indir
 12748  005736                     __end_of_INT1_CallBack:
 12749                           	opt callstack 0
 12750                           
 12751 ;; *************** function _INT1_DefaultInterruptHandler *****************
 12752 ;; Defined at:
 12753 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 12754 ;; Parameters:    Size  Location     Type
 12755 ;;		None
 12756 ;; Auto vars:     Size  Location     Type
 12757 ;;		None
 12758 ;; Return value:  Size  Location     Type
 12759 ;;                  1  [STACK] void 
 12760 ;; Registers used:
 12761 ;;		None
 12762 ;; Tracked objects:
 12763 ;;		On entry : 0/39
 12764 ;;		On exit  : 0/0
 12765 ;;		Unchanged: 0/0
 12766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12771 ;;Total ram usage:        0 bytes
 12772 ;; Hardware stack levels used:    1
 12773 ;; This function calls:
 12774 ;;		Nothing
 12775 ;; This function is called by:
 12776 ;;		_EXT_INT_Initialize
 12777 ;;		_INT1_CallBack
 12778 ;; This function uses a reentrant model
 12779 ;;
 12780                           
 12781                           	psect	text79
 12782  005934                     __ptext79:
 12783                           	opt callstack 0
 12784  005934                     _INT1_DefaultInterruptHandler:
 12785                           	opt callstack 18
 12786                           
 12787                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 12788                           
 12789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12790                           ;incstack = 0
 12791  005934  0012               	return		;funcret
 12792  005936                     __end_of_INT1_DefaultInterruptHandler:
 12793                           	opt callstack 0
 12794                           
 12795 ;; *************** function _INT2_ISR *****************
 12796 ;; Defined at:
 12797 ;;		line 87 in file "mcc_generated_files/ext_int.c"
 12798 ;; Parameters:    Size  Location     Type
 12799 ;;		None
 12800 ;; Auto vars:     Size  Location     Type
 12801 ;;		None
 12802 ;; Return value:  Size  Location     Type
 12803 ;;                  1    wreg      void 
 12804 ;; Registers used:
 12805 ;;		wreg, status,2, status,0, pclath, tosl
 12806 ;; Tracked objects:
 12807 ;;		On entry : 0/0
 12808 ;;		On exit  : 0/0
 12809 ;;		Unchanged: 0/0
 12810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12815 ;;Total ram usage:        0 bytes
 12816 ;; Hardware stack levels used:    1
 12817 ;; Hardware stack levels required when called:    2
 12818 ;; This function calls:
 12819 ;;		_INT2_CallBack
 12820 ;; This function is called by:
 12821 ;;		Interrupt level 2
 12822 ;; This function uses a non-reentrant model
 12823 ;;
 12824                           
 12825                           	psect	text80
 12826  0058B8                     __ptext80:
 12827                           	opt callstack 0
 12828  0058B8                     _INT2_ISR:
 12829                           	opt callstack 18
 12830                           
 12831                           ;incstack = 0
 12832  0058B8  EE13  F084         	lfsr	1,___inthi_sp
 12833                           
 12834                           ;mcc_generated_files/ext_int.c: 89:     (PIR7bits.INT2IF = 0);
 12835  0058BC  0139               	movlb	57	; () banked
 12836  0058BE  9BA7               	bcf	167,5,b	;volatile
 12837                           
 12838                           ; BSR set to: 57
 12839                           ;mcc_generated_files/ext_int.c: 92:     INT2_CallBack();
 12840  0058C0  EC9B  F02B         	call	_INT2_CallBack	;wreg free
 12841  0058C4  0011               	retfie		f
 12842  0058C6                     __end_of_INT2_ISR:
 12843                           	opt callstack 0
 12844                           
 12845 ;; *************** function _INT2_CallBack *****************
 12846 ;; Defined at:
 12847 ;;		line 96 in file "mcc_generated_files/ext_int.c"
 12848 ;; Parameters:    Size  Location     Type
 12849 ;;		None
 12850 ;; Auto vars:     Size  Location     Type
 12851 ;;		None
 12852 ;; Return value:  Size  Location     Type
 12853 ;;                  1  [STACK] void 
 12854 ;; Registers used:
 12855 ;;		wreg, status,2, status,0, pclath, tosl
 12856 ;; Tracked objects:
 12857 ;;		On entry : 3F/39
 12858 ;;		On exit  : 0/0
 12859 ;;		Unchanged: 0/0
 12860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12865 ;;Total ram usage:        0 bytes
 12866 ;; Hardware stack levels used:    1
 12867 ;; Hardware stack levels required when called:    1
 12868 ;; This function calls:
 12869 ;;		Absolute function
 12870 ;;		_INT2_DefaultInterruptHandler
 12871 ;; This function is called by:
 12872 ;;		_INT2_ISR
 12873 ;; This function uses a reentrant model
 12874 ;;
 12875                           
 12876                           	psect	text81
 12877  005736                     __ptext81:
 12878                           	opt callstack 0
 12879  005736                     _INT2_CallBack:
 12880                           	opt callstack 18
 12881                           
 12882                           ;mcc_generated_files/ext_int.c: 99:     if(INT2_InterruptHandler)
 12883                           
 12884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12885                           ;incstack = 0
 12886  005736  5017               	movf	_INT2_InterruptHandler,w,c
 12887  005738  1018               	iorwf	_INT2_InterruptHandler+1,w,c
 12888  00573A  1019               	iorwf	_INT2_InterruptHandler+2,w,c
 12889  00573C  B4D8               	btfsc	status,2,c
 12890  00573E  0012               	return	
 12891                           
 12892                           ;mcc_generated_files/ext_int.c: 100:     {;mcc_generated_files/ext_int.c: 101:         I
      +                          NT2_InterruptHandler();
 12893  005740  D801               	call	u144_48
 12894  005742  0012               	return	
 12895  005744                     u144_48:
 12896  005744  0005               	push	
 12897  005746  6EFA               	movwf	pclath,c
 12898  005748  5017               	movf	_INT2_InterruptHandler,w,c
 12899  00574A  6EFD               	movwf	tosl,c
 12900  00574C  5018               	movf	_INT2_InterruptHandler+1,w,c
 12901  00574E  6EFE               	movwf	tosh,c
 12902  005750  5019               	movf	_INT2_InterruptHandler+2,w,c
 12903  005752  6EFF               	movwf	tosu,c
 12904  005754  50FA               	movf	pclath,w,c
 12905  005756  0012               	return		;indir
 12906  005758                     __end_of_INT2_CallBack:
 12907                           	opt callstack 0
 12908                           
 12909 ;; *************** function _INT2_DefaultInterruptHandler *****************
 12910 ;; Defined at:
 12911 ;;		line 109 in file "mcc_generated_files/ext_int.c"
 12912 ;; Parameters:    Size  Location     Type
 12913 ;;		None
 12914 ;; Auto vars:     Size  Location     Type
 12915 ;;		None
 12916 ;; Return value:  Size  Location     Type
 12917 ;;                  1  [STACK] void 
 12918 ;; Registers used:
 12919 ;;		None
 12920 ;; Tracked objects:
 12921 ;;		On entry : 0/39
 12922 ;;		On exit  : 0/0
 12923 ;;		Unchanged: 0/0
 12924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12929 ;;Total ram usage:        0 bytes
 12930 ;; Hardware stack levels used:    1
 12931 ;; This function calls:
 12932 ;;		Nothing
 12933 ;; This function is called by:
 12934 ;;		_EXT_INT_Initialize
 12935 ;;		_INT2_CallBack
 12936 ;; This function uses a reentrant model
 12937 ;;
 12938                           
 12939                           	psect	text82
 12940  005936                     __ptext82:
 12941                           	opt callstack 0
 12942  005936                     _INT2_DefaultInterruptHandler:
 12943                           	opt callstack 18
 12944                           
 12945                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 12946                           
 12947                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12948                           ;incstack = 0
 12949  005936  0012               	return		;funcret
 12950  005938                     __end_of_INT2_DefaultInterruptHandler:
 12951                           	opt callstack 0
 12952                           
 12953 ;; *************** function _Default_ISR *****************
 12954 ;; Defined at:
 12955 ;;		line 87 in file "mcc_generated_files/interrupt_manager.c"
 12956 ;; Parameters:    Size  Location     Type
 12957 ;;		None
 12958 ;; Auto vars:     Size  Location     Type
 12959 ;;		None
 12960 ;; Return value:  Size  Location     Type
 12961 ;;                  1    wreg      void 
 12962 ;; Registers used:
 12963 ;;		None
 12964 ;; Tracked objects:
 12965 ;;		On entry : 0/0
 12966 ;;		On exit  : 0/0
 12967 ;;		Unchanged: 0/0
 12968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12973 ;;Total ram usage:        0 bytes
 12974 ;; Hardware stack levels used:    1
 12975 ;; This function calls:
 12976 ;;		Nothing
 12977 ;; This function is called by:
 12978 ;;		Interrupt level 2
 12979 ;; This function uses a non-reentrant model
 12980 ;;
 12981                           
 12982                           	psect	text83
 12983  00592C                     __ptext83:
 12984                           	opt callstack 0
 12985  00592C                     _Default_ISR:
 12986                           	opt callstack 20
 12987                           
 12988                           ;incstack = 0
 12989  00592C  EE13  F084         	lfsr	1,___inthi_sp
 12990  005930  0011               	retfie		f
 12991  005932                     __end_of_Default_ISR:
 12992                           	opt callstack 0
 12993                           
 12994 ;; *************** function _ADCC_ISR *****************
 12995 ;; Defined at:
 12996 ;;		line 307 in file "mcc_generated_files/adcc.c"
 12997 ;; Parameters:    Size  Location     Type
 12998 ;;		None
 12999 ;; Auto vars:     Size  Location     Type
 13000 ;;		None
 13001 ;; Return value:  Size  Location     Type
 13002 ;;                  1    wreg      void 
 13003 ;; Registers used:
 13004 ;;		wreg, status,2, status,0, pclath, tosl
 13005 ;; Tracked objects:
 13006 ;;		On entry : 0/0
 13007 ;;		On exit  : 0/0
 13008 ;;		Unchanged: 0/0
 13009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13014 ;;Total ram usage:        0 bytes
 13015 ;; Hardware stack levels used:    1
 13016 ;; Hardware stack levels required when called:    1
 13017 ;; This function calls:
 13018 ;;		Absolute function
 13019 ;;		_ADCC_DefaultInterruptHandler
 13020 ;; This function is called by:
 13021 ;;		Interrupt level 2
 13022 ;; This function uses a non-reentrant model
 13023 ;;
 13024                           
 13025                           	psect	text84
 13026  005364                     __ptext84:
 13027                           	opt callstack 0
 13028  005364                     _ADCC_ISR:
 13029                           	opt callstack 19
 13030                           
 13031                           ;incstack = 0
 13032  005364  EE13  F084         	lfsr	1,___inthi_sp
 13033                           
 13034                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 13035  005368  0139               	movlb	57	; () banked
 13036  00536A  95A1               	bcf	161,2,b	;volatile
 13037                           
 13038                           ; BSR set to: 57
 13039                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 13040  00536C  5008               	movf	_ADCC_ADI_InterruptHandler,w,c
 13041  00536E  1009               	iorwf	_ADCC_ADI_InterruptHandler+1,w,c
 13042  005370  100A               	iorwf	_ADCC_ADI_InterruptHandler+2,w,c
 13043  005372  B4D8               	btfsc	status,2,c
 13044  005374  0011               	retfie		f
 13045                           
 13046                           ; BSR set to: 57
 13047                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 13048  005376  D801               	call	i2u180_48
 13049  005378  0011               	retfie		f
 13050  00537A                     i2u180_48:
 13051  00537A  0005               	push	
 13052  00537C  6EFA               	movwf	pclath,c
 13053  00537E  5008               	movf	_ADCC_ADI_InterruptHandler,w,c
 13054  005380  6EFD               	movwf	tosl,c
 13055  005382  5009               	movf	_ADCC_ADI_InterruptHandler+1,w,c
 13056  005384  6EFE               	movwf	tosh,c
 13057  005386  500A               	movf	_ADCC_ADI_InterruptHandler+2,w,c
 13058  005388  6EFF               	movwf	tosu,c
 13059  00538A  50FA               	movf	pclath,w,c
 13060  00538C  0012               	return		;indir
 13061  00538E                     __end_of_ADCC_ISR:
 13062                           	opt callstack 0
 13063                           
 13064 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 13065 ;; Defined at:
 13066 ;;		line 320 in file "mcc_generated_files/adcc.c"
 13067 ;; Parameters:    Size  Location     Type
 13068 ;;		None
 13069 ;; Auto vars:     Size  Location     Type
 13070 ;;		None
 13071 ;; Return value:  Size  Location     Type
 13072 ;;                  1  [STACK] void 
 13073 ;; Registers used:
 13074 ;;		None
 13075 ;; Tracked objects:
 13076 ;;		On entry : 3F/39
 13077 ;;		On exit  : 0/0
 13078 ;;		Unchanged: 0/0
 13079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13084 ;;Total ram usage:        0 bytes
 13085 ;; Hardware stack levels used:    1
 13086 ;; This function calls:
 13087 ;;		Nothing
 13088 ;; This function is called by:
 13089 ;;		_ADCC_Initialize
 13090 ;;		_ADCC_ISR
 13091 ;; This function uses a reentrant model
 13092 ;;
 13093                           
 13094                           	psect	text85
 13095  005938                     __ptext85:
 13096                           	opt callstack 0
 13097  005938                     _ADCC_DefaultInterruptHandler:
 13098                           	opt callstack 19
 13099                           
 13100                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13101                           
 13102                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13103                           ;incstack = 0
 13104  005938  0012               	return		;funcret
 13105  00593A                     __end_of_ADCC_DefaultInterruptHandler:
 13106                           	opt callstack 0
 13107                           
 13108 ;; *************** function _UART1_tx_vect_isr *****************
 13109 ;; Defined at:
 13110 ;;		line 210 in file "mcc_generated_files/uart1.c"
 13111 ;; Parameters:    Size  Location     Type
 13112 ;;		None
 13113 ;; Auto vars:     Size  Location     Type
 13114 ;;		None
 13115 ;; Return value:  Size  Location     Type
 13116 ;;                  1    wreg      void 
 13117 ;; Registers used:
 13118 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13119 ;; Tracked objects:
 13120 ;;		On entry : 0/0
 13121 ;;		On exit  : 0/0
 13122 ;;		Unchanged: 0/0
 13123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13125 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13126 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13127 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13128 ;;Total ram usage:        0 bytes
 13129 ;; Hardware stack levels used:    1
 13130 ;; Hardware stack levels required when called:    1
 13131 ;; This function calls:
 13132 ;;		Absolute function
 13133 ;;		_UART1_Transmit_ISR
 13134 ;; This function is called by:
 13135 ;;		Interrupt level 2
 13136 ;; This function uses a non-reentrant model
 13137 ;;
 13138                           
 13139                           	psect	text86
 13140  0055E8                     __ptext86:
 13141                           	opt callstack 0
 13142  0055E8                     _UART1_tx_vect_isr:
 13143                           	opt callstack 19
 13144                           
 13145                           ;incstack = 0
 13146  0055E8  EE13  F084         	lfsr	1,___inthi_sp
 13147                           
 13148                           ;mcc_generated_files/uart1.c: 212:  if (UART1_TxInterruptHandler) {
 13149  0055EC  500B               	movf	_UART1_TxInterruptHandler,w,c
 13150  0055EE  100C               	iorwf	_UART1_TxInterruptHandler+1,w,c
 13151  0055F0  100D               	iorwf	_UART1_TxInterruptHandler+2,w,c
 13152  0055F2  B4D8               	btfsc	status,2,c
 13153  0055F4  0011               	retfie		f
 13154                           
 13155                           ;mcc_generated_files/uart1.c: 213:   UART1_TxInterruptHandler();
 13156  0055F6  D801               	call	i2u367_48
 13157  0055F8  0011               	retfie		f
 13158  0055FA                     i2u367_48:
 13159  0055FA  0005               	push	
 13160  0055FC  6EFA               	movwf	pclath,c
 13161  0055FE  500B               	movf	_UART1_TxInterruptHandler,w,c
 13162  005600  6EFD               	movwf	tosl,c
 13163  005602  500C               	movf	_UART1_TxInterruptHandler+1,w,c
 13164  005604  6EFE               	movwf	tosh,c
 13165  005606  500D               	movf	_UART1_TxInterruptHandler+2,w,c
 13166  005608  6EFF               	movwf	tosu,c
 13167  00560A  50FA               	movf	pclath,w,c
 13168  00560C  0012               	return		;indir
 13169  00560E                     __end_of_UART1_tx_vect_isr:
 13170                           	opt callstack 0
 13171                           
 13172 ;; *************** function _UART1_Transmit_ISR *****************
 13173 ;; Defined at:
 13174 ;;		line 224 in file "mcc_generated_files/uart1.c"
 13175 ;; Parameters:    Size  Location     Type
 13176 ;;		None
 13177 ;; Auto vars:     Size  Location     Type
 13178 ;;		None
 13179 ;; Return value:  Size  Location     Type
 13180 ;;                  1  [STACK] void 
 13181 ;; Registers used:
 13182 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13183 ;; Tracked objects:
 13184 ;;		On entry : 0/0
 13185 ;;		On exit  : 3B/39
 13186 ;;		Unchanged: 0/0
 13187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13192 ;;Total ram usage:        0 bytes
 13193 ;; Hardware stack levels used:    1
 13194 ;; This function calls:
 13195 ;;		Nothing
 13196 ;; This function is called by:
 13197 ;;		_UART1_Initialize
 13198 ;;		_UART1_tx_vect_isr
 13199 ;; This function uses a reentrant model
 13200 ;;
 13201                           
 13202                           	psect	text87
 13203  0052E2                     __ptext87:
 13204                           	opt callstack 0
 13205  0052E2                     _UART1_Transmit_ISR:
 13206                           	opt callstack 19
 13207                           
 13208                           ;mcc_generated_files/uart1.c: 227:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 13209                           
 13210                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13211                           ;incstack = 0
 13212  0052E2  0E40               	movlw	64
 13213  0052E4  6034               	cpfslt	_uart1TxBufferRemaining,c
 13214  0052E6  D010               	goto	l597
 13215                           
 13216                           ;mcc_generated_files/uart1.c: 228:   U1TXB = uart1TxBuffer[uart1TxTail++];
 13217  0052E8  0E80               	movlw	low _uart1TxBuffer
 13218  0052EA  2435               	addwf	_uart1TxTail,w,c	;volatile
 13219  0052EC  6ED9               	movwf	fsr2l,c
 13220  0052EE  6ADA               	clrf	fsr2h,c
 13221  0052F0  0E01               	movlw	high _uart1TxBuffer
 13222  0052F2  22DA               	addwfc	fsr2h,f,c
 13223  0052F4  50DF               	movf	indf2,w,c
 13224  0052F6  013D               	movlb	61	; () banked
 13225  0052F8  6FEA               	movwf	234,b	;volatile
 13226                           
 13227                           ; BSR set to: 61
 13228  0052FA  2A35               	incf	_uart1TxTail,f,c	;volatile
 13229                           
 13230                           ; BSR set to: 61
 13231                           ;mcc_generated_files/uart1.c: 229:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 13232  0052FC  0E3F               	movlw	63
 13233  0052FE  6435               	cpfsgt	_uart1TxTail,c
 13234  005300  D001               	goto	l5338
 13235                           
 13236                           ; BSR set to: 61
 13237                           ;mcc_generated_files/uart1.c: 230:    uart1TxTail = 0;
 13238  005302  6A35               	clrf	_uart1TxTail,c	;volatile
 13239  005304                     l5338:
 13240                           
 13241                           ; BSR set to: 61
 13242                           ;mcc_generated_files/uart1.c: 232:   uart1TxBufferRemaining++;
 13243  005304  2A34               	incf	_uart1TxBufferRemaining,f,c	;volatile
 13244                           
 13245                           ;mcc_generated_files/uart1.c: 233:  } else {
 13246  005306  0012               	return	
 13247  005308                     l597:
 13248                           
 13249                           ;mcc_generated_files/uart1.c: 234:   PIE3bits.U1TXIE = 0;
 13250  005308  0139               	movlb	57	; () banked
 13251  00530A  9993               	bcf	147,4,b	;volatile
 13252                           
 13253                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13254  00530C  0012               	return		;funcret
 13255  00530E                     __end_of_UART1_Transmit_ISR:
 13256                           	opt callstack 0
 13257                           
 13258 ;; *************** function _UART1_rx_vect_isr *****************
 13259 ;; Defined at:
 13260 ;;		line 217 in file "mcc_generated_files/uart1.c"
 13261 ;; Parameters:    Size  Location     Type
 13262 ;;		None
 13263 ;; Auto vars:     Size  Location     Type
 13264 ;;		None
 13265 ;; Return value:  Size  Location     Type
 13266 ;;                  1    wreg      void 
 13267 ;; Registers used:
 13268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13269 ;; Tracked objects:
 13270 ;;		On entry : 0/0
 13271 ;;		On exit  : 0/0
 13272 ;;		Unchanged: 0/0
 13273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13278 ;;Total ram usage:        0 bytes
 13279 ;; Hardware stack levels used:    1
 13280 ;; Hardware stack levels required when called:    1
 13281 ;; This function calls:
 13282 ;;		Absolute function
 13283 ;;		_UART1_Receive_ISR
 13284 ;; This function is called by:
 13285 ;;		Interrupt level 2
 13286 ;; This function uses a non-reentrant model
 13287 ;;
 13288                           
 13289                           	psect	text88
 13290  005610                     __ptext88:
 13291                           	opt callstack 0
 13292  005610                     _UART1_rx_vect_isr:
 13293                           	opt callstack 19
 13294                           
 13295                           ;incstack = 0
 13296  005610  EE13  F084         	lfsr	1,___inthi_sp
 13297                           
 13298                           ;mcc_generated_files/uart1.c: 219:  if (UART1_RxInterruptHandler) {
 13299  005614  500E               	movf	_UART1_RxInterruptHandler,w,c
 13300  005616  100F               	iorwf	_UART1_RxInterruptHandler+1,w,c
 13301  005618  1010               	iorwf	_UART1_RxInterruptHandler+2,w,c
 13302  00561A  B4D8               	btfsc	status,2,c
 13303  00561C  0011               	retfie		f
 13304                           
 13305                           ;mcc_generated_files/uart1.c: 220:   UART1_RxInterruptHandler();
 13306  00561E  D801               	call	i2u369_48
 13307  005620  0011               	retfie		f
 13308  005622                     i2u369_48:
 13309  005622  0005               	push	
 13310  005624  6EFA               	movwf	pclath,c
 13311  005626  500E               	movf	_UART1_RxInterruptHandler,w,c
 13312  005628  6EFD               	movwf	tosl,c
 13313  00562A  500F               	movf	_UART1_RxInterruptHandler+1,w,c
 13314  00562C  6EFE               	movwf	tosh,c
 13315  00562E  5010               	movf	_UART1_RxInterruptHandler+2,w,c
 13316  005630  6EFF               	movwf	tosu,c
 13317  005632  50FA               	movf	pclath,w,c
 13318  005634  0012               	return		;indir
 13319  005636                     __end_of_UART1_rx_vect_isr:
 13320                           	opt callstack 0
 13321                           
 13322 ;; *************** function _UART1_Receive_ISR *****************
 13323 ;; Defined at:
 13324 ;;		line 240 in file "mcc_generated_files/uart1.c"
 13325 ;; Parameters:    Size  Location     Type
 13326 ;;		None
 13327 ;; Auto vars:     Size  Location     Type
 13328 ;;		None
 13329 ;; Return value:  Size  Location     Type
 13330 ;;                  1  [STACK] void 
 13331 ;; Registers used:
 13332 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13333 ;; Tracked objects:
 13334 ;;		On entry : 0/0
 13335 ;;		On exit  : 0/0
 13336 ;;		Unchanged: 0/0
 13337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13342 ;;Total ram usage:        0 bytes
 13343 ;; Hardware stack levels used:    1
 13344 ;; This function calls:
 13345 ;;		Nothing
 13346 ;; This function is called by:
 13347 ;;		_UART1_Initialize
 13348 ;;		_UART1_rx_vect_isr
 13349 ;; This function uses a reentrant model
 13350 ;;
 13351                           
 13352                           	psect	text89
 13353  00577A                     __ptext89:
 13354                           	opt callstack 0
 13355  00577A                     _UART1_Receive_ISR:
 13356                           	opt callstack 19
 13357                           
 13358                           ;mcc_generated_files/uart1.c: 243:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 13359                           
 13360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13361                           ;incstack = 0
 13362  00577A  0E40               	movlw	low _uart1RxBuffer
 13363  00577C  2433               	addwf	_uart1RxHead,w,c	;volatile
 13364  00577E  6ED9               	movwf	fsr2l,c
 13365  005780  6ADA               	clrf	fsr2h,c
 13366  005782  0E01               	movlw	high _uart1RxBuffer
 13367  005784  22DA               	addwfc	fsr2h,f,c
 13368  005786  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 13369  00578C  2A33               	incf	_uart1RxHead,f,c	;volatile
 13370                           
 13371                           ;mcc_generated_files/uart1.c: 244:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 13372  00578E  0E3F               	movlw	63
 13373  005790  6433               	cpfsgt	_uart1RxHead,c
 13374  005792  D001               	goto	l5348
 13375                           
 13376                           ;mcc_generated_files/uart1.c: 245:   uart1RxHead = 0;
 13377  005794  6A33               	clrf	_uart1RxHead,c	;volatile
 13378  005796                     l5348:
 13379                           
 13380                           ;mcc_generated_files/uart1.c: 247:  uart1RxCount++;
 13381  005796  2A31               	incf	_uart1RxCount,f,c	;volatile
 13382                           
 13383                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13384  005798  0012               	return		;funcret
 13385  00579A                     __end_of_UART1_Receive_ISR:
 13386                           	opt callstack 0
 13387                           
 13388 ;; *************** function _UART2_tx_vect_isr *****************
 13389 ;; Defined at:
 13390 ;;		line 195 in file "mcc_generated_files/uart2.c"
 13391 ;; Parameters:    Size  Location     Type
 13392 ;;		None
 13393 ;; Auto vars:     Size  Location     Type
 13394 ;;		None
 13395 ;; Return value:  Size  Location     Type
 13396 ;;                  1    wreg      void 
 13397 ;; Registers used:
 13398 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13399 ;; Tracked objects:
 13400 ;;		On entry : 0/0
 13401 ;;		On exit  : 0/0
 13402 ;;		Unchanged: 0/0
 13403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13408 ;;Total ram usage:        0 bytes
 13409 ;; Hardware stack levels used:    1
 13410 ;; Hardware stack levels required when called:    1
 13411 ;; This function calls:
 13412 ;;		Absolute function
 13413 ;;		_UART2_Transmit_ISR
 13414 ;; This function is called by:
 13415 ;;		Interrupt level 2
 13416 ;; This function uses a non-reentrant model
 13417 ;;
 13418                           
 13419                           	psect	text90
 13420  005638                     __ptext90:
 13421                           	opt callstack 0
 13422  005638                     _UART2_tx_vect_isr:
 13423                           	opt callstack 19
 13424                           
 13425                           ;incstack = 0
 13426  005638  EE13  F084         	lfsr	1,___inthi_sp
 13427                           
 13428                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 13429  00563C  5011               	movf	_UART2_TxInterruptHandler,w,c
 13430  00563E  1012               	iorwf	_UART2_TxInterruptHandler+1,w,c
 13431  005640  1013               	iorwf	_UART2_TxInterruptHandler+2,w,c
 13432  005642  B4D8               	btfsc	status,2,c
 13433  005644  0011               	retfie		f
 13434                           
 13435                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 13436  005646  D801               	call	i2u371_48
 13437  005648  0011               	retfie		f
 13438  00564A                     i2u371_48:
 13439  00564A  0005               	push	
 13440  00564C  6EFA               	movwf	pclath,c
 13441  00564E  5011               	movf	_UART2_TxInterruptHandler,w,c
 13442  005650  6EFD               	movwf	tosl,c
 13443  005652  5012               	movf	_UART2_TxInterruptHandler+1,w,c
 13444  005654  6EFE               	movwf	tosh,c
 13445  005656  5013               	movf	_UART2_TxInterruptHandler+2,w,c
 13446  005658  6EFF               	movwf	tosu,c
 13447  00565A  50FA               	movf	pclath,w,c
 13448  00565C  0012               	return		;indir
 13449  00565E                     __end_of_UART2_tx_vect_isr:
 13450                           	opt callstack 0
 13451                           
 13452 ;; *************** function _UART2_Transmit_ISR *****************
 13453 ;; Defined at:
 13454 ;;		line 213 in file "mcc_generated_files/uart2.c"
 13455 ;; Parameters:    Size  Location     Type
 13456 ;;		None
 13457 ;; Auto vars:     Size  Location     Type
 13458 ;;		None
 13459 ;; Return value:  Size  Location     Type
 13460 ;;                  1  [STACK] void 
 13461 ;; Registers used:
 13462 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13463 ;; Tracked objects:
 13464 ;;		On entry : 0/0
 13465 ;;		On exit  : 3B/39
 13466 ;;		Unchanged: 0/0
 13467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13472 ;;Total ram usage:        0 bytes
 13473 ;; Hardware stack levels used:    1
 13474 ;; This function calls:
 13475 ;;		Nothing
 13476 ;; This function is called by:
 13477 ;;		_UART2_Initialize
 13478 ;;		_UART2_tx_vect_isr
 13479 ;; This function uses a reentrant model
 13480 ;;
 13481                           
 13482                           	psect	text91
 13483  00530E                     __ptext91:
 13484                           	opt callstack 0
 13485  00530E                     _UART2_Transmit_ISR:
 13486                           	opt callstack 19
 13487                           
 13488                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 13489                           
 13490                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13491                           ;incstack = 0
 13492  00530E  0E40               	movlw	64
 13493  005310  602E               	cpfslt	_uart2TxBufferRemaining,c
 13494  005312  D010               	goto	l713
 13495                           
 13496                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 13497  005314  0E00               	movlw	low _uart2TxBuffer
 13498  005316  242F               	addwf	_uart2TxTail,w,c	;volatile
 13499  005318  6ED9               	movwf	fsr2l,c
 13500  00531A  6ADA               	clrf	fsr2h,c
 13501  00531C  0E01               	movlw	high _uart2TxBuffer
 13502  00531E  22DA               	addwfc	fsr2h,f,c
 13503  005320  50DF               	movf	indf2,w,c
 13504  005322  013D               	movlb	61	; () banked
 13505  005324  6FD2               	movwf	210,b	;volatile
 13506                           
 13507                           ; BSR set to: 61
 13508  005326  2A2F               	incf	_uart2TxTail,f,c	;volatile
 13509                           
 13510                           ; BSR set to: 61
 13511                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 13512  005328  0E3F               	movlw	63
 13513  00532A  642F               	cpfsgt	_uart2TxTail,c
 13514  00532C  D001               	goto	l5360
 13515                           
 13516                           ; BSR set to: 61
 13517                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 13518  00532E  6A2F               	clrf	_uart2TxTail,c	;volatile
 13519  005330                     l5360:
 13520                           
 13521                           ; BSR set to: 61
 13522                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 13523  005330  2A2E               	incf	_uart2TxBufferRemaining,f,c	;volatile
 13524                           
 13525                           ;mcc_generated_files/uart2.c: 224:     }
 13526  005332  0012               	return	
 13527  005334                     l713:
 13528                           
 13529                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 13530  005334  0139               	movlb	57	; () banked
 13531  005336  9796               	bcf	150,3,b	;volatile
 13532                           
 13533                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 13534  005338  0012               	return		;funcret
 13535  00533A                     __end_of_UART2_Transmit_ISR:
 13536                           	opt callstack 0
 13537                           
 13538 ;; *************** function _UART2_rx_vect_isr *****************
 13539 ;; Defined at:
 13540 ;;		line 203 in file "mcc_generated_files/uart2.c"
 13541 ;; Parameters:    Size  Location     Type
 13542 ;;		None
 13543 ;; Auto vars:     Size  Location     Type
 13544 ;;		None
 13545 ;; Return value:  Size  Location     Type
 13546 ;;                  1    wreg      void 
 13547 ;; Registers used:
 13548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 13549 ;; Tracked objects:
 13550 ;;		On entry : 0/0
 13551 ;;		On exit  : 0/0
 13552 ;;		Unchanged: 0/0
 13553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13558 ;;Total ram usage:        0 bytes
 13559 ;; Hardware stack levels used:    1
 13560 ;; Hardware stack levels required when called:    1
 13561 ;; This function calls:
 13562 ;;		Absolute function
 13563 ;;		_UART2_Receive_ISR
 13564 ;; This function is called by:
 13565 ;;		Interrupt level 2
 13566 ;; This function uses a non-reentrant model
 13567 ;;
 13568                           
 13569                           	psect	text92
 13570  005660                     __ptext92:
 13571                           	opt callstack 0
 13572  005660                     _UART2_rx_vect_isr:
 13573                           	opt callstack 19
 13574                           
 13575                           ;incstack = 0
 13576  005660  EE13  F084         	lfsr	1,___inthi_sp
 13577                           
 13578                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 13579  005664  5014               	movf	_UART2_RxInterruptHandler,w,c
 13580  005666  1015               	iorwf	_UART2_RxInterruptHandler+1,w,c
 13581  005668  1016               	iorwf	_UART2_RxInterruptHandler+2,w,c
 13582  00566A  B4D8               	btfsc	status,2,c
 13583  00566C  0011               	retfie		f
 13584                           
 13585                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 13586  00566E  D801               	call	i2u373_48
 13587  005670  0011               	retfie		f
 13588  005672                     i2u373_48:
 13589  005672  0005               	push	
 13590  005674  6EFA               	movwf	pclath,c
 13591  005676  5014               	movf	_UART2_RxInterruptHandler,w,c
 13592  005678  6EFD               	movwf	tosl,c
 13593  00567A  5015               	movf	_UART2_RxInterruptHandler+1,w,c
 13594  00567C  6EFE               	movwf	tosh,c
 13595  00567E  5016               	movf	_UART2_RxInterruptHandler+2,w,c
 13596  005680  6EFF               	movwf	tosu,c
 13597  005682  50FA               	movf	pclath,w,c
 13598  005684  0012               	return		;indir
 13599  005686                     __end_of_UART2_rx_vect_isr:
 13600                           	opt callstack 0
 13601                           
 13602 ;; *************** function _UART2_Receive_ISR *****************
 13603 ;; Defined at:
 13604 ;;		line 233 in file "mcc_generated_files/uart2.c"
 13605 ;; Parameters:    Size  Location     Type
 13606 ;;		None
 13607 ;; Auto vars:     Size  Location     Type
 13608 ;;		None
 13609 ;; Return value:  Size  Location     Type
 13610 ;;                  1  [STACK] void 
 13611 ;; Registers used:
 13612 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13613 ;; Tracked objects:
 13614 ;;		On entry : 0/0
 13615 ;;		On exit  : 0/0
 13616 ;;		Unchanged: 0/0
 13617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13622 ;;Total ram usage:        0 bytes
 13623 ;; Hardware stack levels used:    1
 13624 ;; This function calls:
 13625 ;;		Nothing
 13626 ;; This function is called by:
 13627 ;;		_UART2_Initialize
 13628 ;;		_UART2_rx_vect_isr
 13629 ;; This function uses a reentrant model
 13630 ;;
 13631                           
 13632                           	psect	text93
 13633  00579A                     __ptext93:
 13634                           	opt callstack 0
 13635  00579A                     _UART2_Receive_ISR:
 13636                           	opt callstack 19
 13637                           
 13638                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 13639                           
 13640                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13641                           ;incstack = 0
 13642  00579A  0E00               	movlw	low _uart2RxBuffer
 13643  00579C  242D               	addwf	_uart2RxHead,w,c	;volatile
 13644  00579E  6ED9               	movwf	fsr2l,c
 13645  0057A0  6ADA               	clrf	fsr2h,c
 13646  0057A2  0E02               	movlw	high _uart2RxBuffer
 13647  0057A4  22DA               	addwfc	fsr2h,f,c
 13648  0057A6  006F F743 FFDF     	movff	15824,indf2	;volatile
 13649  0057AC  2A2D               	incf	_uart2RxHead,f,c	;volatile
 13650                           
 13651                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 13652  0057AE  0E3F               	movlw	63
 13653  0057B0  642D               	cpfsgt	_uart2RxHead,c
 13654  0057B2  D001               	goto	l5370
 13655                           
 13656                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 13657  0057B4  6A2D               	clrf	_uart2RxHead,c	;volatile
 13658  0057B6                     l5370:
 13659                           
 13660                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 13661  0057B6  2A2B               	incf	_uart2RxCount,f,c	;volatile
 13662                           
 13663                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13664  0057B8  0012               	return		;funcret
 13665  0057BA                     __end_of_UART2_Receive_ISR:
 13666                           	opt callstack 0
 13667                           
 13668 ;; *************** function _TMR6_ISR *****************
 13669 ;; Defined at:
 13670 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 13671 ;; Parameters:    Size  Location     Type
 13672 ;;		None
 13673 ;; Auto vars:     Size  Location     Type
 13674 ;;		None
 13675 ;; Return value:  Size  Location     Type
 13676 ;;                  1    wreg      void 
 13677 ;; Registers used:
 13678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+11, tosl, prodl, prodh
 13679 ;; Tracked objects:
 13680 ;;		On entry : 0/0
 13681 ;;		On exit  : 0/0
 13682 ;;		Unchanged: 0/0
 13683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13686 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13687 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13688 ;;Total ram usage:        2 bytes
 13689 ;; Hardware stack levels used:    1
 13690 ;; Hardware stack levels required when called:    2
 13691 ;; This function calls:
 13692 ;;		_TMR6_CallBack
 13693 ;; This function is called by:
 13694 ;;		Interrupt level 2
 13695 ;; This function uses a non-reentrant model
 13696 ;;
 13697                           
 13698                           	psect	text94
 13699  005688                     __ptext94:
 13700                           	opt callstack 0
 13701  005688                     _TMR6_ISR:
 13702                           	opt callstack 18
 13703                           
 13704                           ;incstack = 0
 13705  005688  0060  F0DC  F05E   	movff	btemp,??_TMR6_ISR
 13706  00568E  0060  F108  F05F   	movff	btemp+11,??_TMR6_ISR+1
 13707  005694  EE13  F084         	lfsr	1,___inthi_sp
 13708                           
 13709                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 13710  005698  0139               	movlb	57	; () banked
 13711  00569A  91A9               	bcf	169,0,b	;volatile
 13712                           
 13713                           ; BSR set to: 57
 13714                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 13715  00569C  ECAC  F02B         	call	_TMR6_CallBack	;wreg free
 13716  0056A0  0060  F17C  F042   	movff	??_TMR6_ISR+1,btemp+11
 13717  0056A6  0060  F178  F037   	movff	??_TMR6_ISR,btemp
 13718  0056AC  0011               	retfie		f
 13719  0056AE                     __end_of_TMR6_ISR:
 13720                           	opt callstack 0
 13721                           
 13722 ;; *************** function _TMR6_CallBack *****************
 13723 ;; Defined at:
 13724 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 13725 ;; Parameters:    Size  Location     Type
 13726 ;;		None
 13727 ;; Auto vars:     Size  Location     Type
 13728 ;;		None
 13729 ;; Return value:  Size  Location     Type
 13730 ;;                  1  [STACK] void 
 13731 ;; Registers used:
 13732 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+11, tosl, prodl, prodh
 13733 ;; Tracked objects:
 13734 ;;		On entry : 3F/39
 13735 ;;		On exit  : 0/0
 13736 ;;		Unchanged: 0/0
 13737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13742 ;;Total ram usage:        0 bytes
 13743 ;; Hardware stack levels used:    1
 13744 ;; Hardware stack levels required when called:    1
 13745 ;; This function calls:
 13746 ;;		Absolute function
 13747 ;;		_TMR6_DefaultInterruptHandler
 13748 ;; This function is called by:
 13749 ;;		_TMR6_ISR
 13750 ;; This function uses a reentrant model
 13751 ;;
 13752                           
 13753                           	psect	text95
 13754  005758                     __ptext95:
 13755                           	opt callstack 0
 13756  005758                     _TMR6_CallBack:
 13757                           	opt callstack 18
 13758                           
 13759                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 13760                           
 13761                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13762                           ;incstack = 0
 13763  005758  5005               	movf	_TMR6_InterruptHandler,w,c
 13764  00575A  1006               	iorwf	_TMR6_InterruptHandler+1,w,c
 13765  00575C  1007               	iorwf	_TMR6_InterruptHandler+2,w,c
 13766  00575E  B4D8               	btfsc	status,2,c
 13767  005760  0012               	return	
 13768                           
 13769                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 13770  005762  D801               	call	u339_48
 13771  005764  0012               	return	
 13772  005766                     u339_48:
 13773  005766  0005               	push	
 13774  005768  6EFA               	movwf	pclath,c
 13775  00576A  5005               	movf	_TMR6_InterruptHandler,w,c
 13776  00576C  6EFD               	movwf	tosl,c
 13777  00576E  5006               	movf	_TMR6_InterruptHandler+1,w,c
 13778  005770  6EFE               	movwf	tosh,c
 13779  005772  5007               	movf	_TMR6_InterruptHandler+2,w,c
 13780  005774  6EFF               	movwf	tosu,c
 13781  005776  50FA               	movf	pclath,w,c
 13782  005778  0012               	return		;indir
 13783  00577A                     __end_of_TMR6_CallBack:
 13784                           	opt callstack 0
 13785                           
 13786 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 13787 ;; Defined at:
 13788 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 13789 ;; Parameters:    Size  Location     Type
 13790 ;;		None
 13791 ;; Auto vars:     Size  Location     Type
 13792 ;;  i               1  [STACK] unsigned char 
 13793 ;; Return value:  Size  Location     Type
 13794 ;;                  1  [STACK] void 
 13795 ;; Registers used:
 13796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
 13797 ;; Tracked objects:
 13798 ;;		On entry : 0/39
 13799 ;;		On exit  : 0/0
 13800 ;;		Unchanged: 0/0
 13801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13806 ;;Total ram usage:        0 bytes
 13807 ;; Hardware stack levels used:    1
 13808 ;; This function calls:
 13809 ;;		Nothing
 13810 ;; This function is called by:
 13811 ;;		_TMR6_Initialize
 13812 ;;		_TMR6_CallBack
 13813 ;; This function uses a reentrant model
 13814 ;;
 13815                           
 13816                           	psect	text96
 13817  004F34                     __ptext96:
 13818                           	opt callstack 0
 13819  004F34                     _TMR6_DefaultInterruptHandler:
 13820                           	opt callstack 0
 13821                           
 13822                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13823  004F34  52E6               	movf	postinc1,f,c
 13824                           
 13825                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 201:  LATEbits
      +                          .LATE0 = (uint8_t) ~LATEbits.LATE0;
 13826                           
 13827                           ;incstack = 0
 13828  004F36  A0BE               	btfss	16318,0,c	;volatile
 13829  004F38  D002               	goto	u325_40
 13830  004F3A  0E01               	movlw	1
 13831  004F3C  D001               	goto	u325_46
 13832  004F3E                     u325_40:
 13833  004F3E  0E00               	movlw	0
 13834  004F40                     u325_46:
 13835  004F40  0AFF               	xorlw	255
 13836  004F42  6E42               	movwf	btemp+11,c
 13837  004F44  50BE               	movf	16318,w,c	;volatile
 13838  004F46  1842               	xorwf	btemp+11,w,c
 13839  004F48  0BFE               	andlw	-2
 13840  004F4A  1842               	xorwf	btemp+11,w,c
 13841  004F4C  6EBE               	movwf	16318,c	;volatile
 13842                           
 13843                           ;mcc_generated_files/tmr6.c: 204:  for (i = 0; i < TMR_COUNT; i++) {
 13844                           ;stkvar	_i @ sp[(-1)+0]
 13845  004F4E  0EFF               	movlw	-1
 13846  004F50  6AE3               	clrf	plusw1,c
 13847  004F52                     l5226:
 13848                           
 13849                           ;mcc_generated_files/tmr6.c: 205:   if (tickCount[i] != 0) {
 13850                           ;stkvar	_i @ sp[(-1)+0]
 13851  004F52  0EFF               	movlw	-1
 13852  004F54  50E3               	movf	plusw1,w,c
 13853  004F56  0D02               	mullw	2
 13854  004F58  50F3               	movf	prodl,w,c
 13855  004F5A  0F79               	addlw	low _tickCount
 13856  004F5C  6ED9               	movwf	fsr2l,c
 13857  004F5E  6ADA               	clrf	fsr2h,c
 13858  004F60  50DE               	movf	postinc2,w,c
 13859  004F62  10DE               	iorwf	postinc2,w,c
 13860  004F64  B4D8               	btfsc	status,2,c
 13861  004F66  D00A               	goto	l5230
 13862                           
 13863                           ;mcc_generated_files/tmr6.c: 206:    tickCount[i]--;
 13864                           ;stkvar	_i @ sp[(-1)+0]
 13865  004F68  0EFF               	movlw	-1
 13866  004F6A  50E3               	movf	plusw1,w,c
 13867  004F6C  0D02               	mullw	2
 13868  004F6E  50F3               	movf	prodl,w,c
 13869  004F70  0F79               	addlw	low _tickCount
 13870  004F72  6ED9               	movwf	fsr2l,c
 13871  004F74  6ADA               	clrf	fsr2h,c
 13872  004F76  06DE               	decf	postinc2,f,c
 13873  004F78  0E00               	movlw	0
 13874  004F7A  5ADD               	subwfb	postdec2,f,c
 13875  004F7C                     l5230:
 13876                           
 13877                           ;mcc_generated_files/tmr6.c: 208:  }
 13878                           ;stkvar	_i @ sp[(-1)+0]
 13879  004F7C  0EFF               	movlw	-1
 13880  004F7E  2AE3               	incf	plusw1,f,c
 13881                           
 13882                           ;stkvar	_i @ sp[(-1)+0]
 13883  004F80  0EFF               	movlw	-1
 13884  004F82  006F FF8C  F037    	movff	plusw1,btemp
 13885  004F88  0E05               	movlw	5
 13886  004F8A  6437               	cpfsgt	btemp,c
 13887  004F8C  D7E2               	goto	l5226
 13888                           
 13889                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 13890  004F8E  52E5               	movf	postdec1,f,c
 13891  004F90  0012               	return		;funcret
 13892  004F92                     __end_of_TMR6_DefaultInterruptHandler:
 13893                           	opt callstack 0
 13894                           
 13895 ;; *************** function _DMA1_DMASCNT_ISR *****************
 13896 ;; Defined at:
 13897 ;;		line 126 in file "mcc_generated_files/dma1.c"
 13898 ;; Parameters:    Size  Location     Type
 13899 ;;		None
 13900 ;; Auto vars:     Size  Location     Type
 13901 ;;		None
 13902 ;; Return value:  Size  Location     Type
 13903 ;;                  1    wreg      void 
 13904 ;; Registers used:
 13905 ;;		None
 13906 ;; Tracked objects:
 13907 ;;		On entry : 0/0
 13908 ;;		On exit  : 3F/0
 13909 ;;		Unchanged: 0/0
 13910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13915 ;;Total ram usage:        0 bytes
 13916 ;; Hardware stack levels used:    1
 13917 ;; This function calls:
 13918 ;;		Nothing
 13919 ;; This function is called by:
 13920 ;;		Interrupt level 2
 13921 ;; This function uses a non-reentrant model
 13922 ;;
 13923                           
 13924                           	psect	text97
 13925  0058C8                     __ptext97:
 13926                           	opt callstack 0
 13927  0058C8                     _DMA1_DMASCNT_ISR:
 13928                           	opt callstack 20
 13929                           
 13930                           ;incstack = 0
 13931  0058C8  EE13  F084         	lfsr	1,___inthi_sp
 13932                           
 13933                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 13934  0058CC  0139               	movlb	57	; () banked
 13935  0058CE  91A2               	bcf	162,0,b	;volatile
 13936                           
 13937                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 13938  0058D0  0100               	movlb	0	; () banked
 13939  0058D2  976D               	bcf	_spi_link& (0+255),3,b	;volatile
 13940                           
 13941                           ; BSR set to: 0
 13942  0058D4  0011               	retfie		f
 13943  0058D6                     __end_of_DMA1_DMASCNT_ISR:
 13944                           	opt callstack 0
 13945                           
 13946 ;; *************** function _DMA1_DMADCNT_ISR *****************
 13947 ;; Defined at:
 13948 ;;		line 133 in file "mcc_generated_files/dma1.c"
 13949 ;; Parameters:    Size  Location     Type
 13950 ;;		None
 13951 ;; Auto vars:     Size  Location     Type
 13952 ;;		None
 13953 ;; Return value:  Size  Location     Type
 13954 ;;                  1    wreg      void 
 13955 ;; Registers used:
 13956 ;;		None
 13957 ;; Tracked objects:
 13958 ;;		On entry : 0/0
 13959 ;;		On exit  : 3F/39
 13960 ;;		Unchanged: 0/0
 13961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13966 ;;Total ram usage:        0 bytes
 13967 ;; Hardware stack levels used:    1
 13968 ;; This function calls:
 13969 ;;		Nothing
 13970 ;; This function is called by:
 13971 ;;		Interrupt level 2
 13972 ;; This function uses a non-reentrant model
 13973 ;;
 13974                           
 13975                           	psect	text98
 13976  0058F0                     __ptext98:
 13977                           	opt callstack 0
 13978  0058F0                     _DMA1_DMADCNT_ISR:
 13979                           	opt callstack 20
 13980                           
 13981                           ; BSR set to: 0
 13982                           ;incstack = 0
 13983  0058F0  EE13  F084         	lfsr	1,___inthi_sp
 13984                           
 13985                           ;mcc_generated_files/dma1.c: 135:  PIR2bits.DMA1DCNTIF = 0;
 13986  0058F4  0139               	movlb	57	; () banked
 13987  0058F6  93A2               	bcf	162,1,b	;volatile
 13988                           
 13989                           ; BSR set to: 57
 13990  0058F8  0011               	retfie		f
 13991  0058FA                     __end_of_DMA1_DMADCNT_ISR:
 13992                           	opt callstack 0
 13993                           
 13994 ;; *************** function _DMA1_DMAA_ISR *****************
 13995 ;; Defined at:
 13996 ;;		line 143 in file "mcc_generated_files/dma1.c"
 13997 ;; Parameters:    Size  Location     Type
 13998 ;;		None
 13999 ;; Auto vars:     Size  Location     Type
 14000 ;;		None
 14001 ;; Return value:  Size  Location     Type
 14002 ;;                  1    wreg      void 
 14003 ;; Registers used:
 14004 ;;		None
 14005 ;; Tracked objects:
 14006 ;;		On entry : 0/0
 14007 ;;		On exit  : 3F/39
 14008 ;;		Unchanged: 0/0
 14009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14014 ;;Total ram usage:        0 bytes
 14015 ;; Hardware stack levels used:    1
 14016 ;; This function calls:
 14017 ;;		Nothing
 14018 ;; This function is called by:
 14019 ;;		Interrupt level 2
 14020 ;; This function uses a non-reentrant model
 14021 ;;
 14022                           
 14023                           	psect	text99
 14024  0058FC                     __ptext99:
 14025                           	opt callstack 0
 14026  0058FC                     _DMA1_DMAA_ISR:
 14027                           	opt callstack 20
 14028                           
 14029                           ; BSR set to: 57
 14030                           ;incstack = 0
 14031  0058FC  EE13  F084         	lfsr	1,___inthi_sp
 14032                           
 14033                           ;mcc_generated_files/dma1.c: 146:  PIR2bits.DMA1AIF = 0;
 14034  005900  0139               	movlb	57	; () banked
 14035  005902  97A2               	bcf	162,3,b	;volatile
 14036                           
 14037                           ; BSR set to: 57
 14038  005904  0011               	retfie		f
 14039  005906                     __end_of_DMA1_DMAA_ISR:
 14040                           	opt callstack 0
 14041                           
 14042 ;; *************** function _DMA1_DMAOR_ISR *****************
 14043 ;; Defined at:
 14044 ;;		line 154 in file "mcc_generated_files/dma1.c"
 14045 ;; Parameters:    Size  Location     Type
 14046 ;;		None
 14047 ;; Auto vars:     Size  Location     Type
 14048 ;;		None
 14049 ;; Return value:  Size  Location     Type
 14050 ;;                  1    wreg      void 
 14051 ;; Registers used:
 14052 ;;		None
 14053 ;; Tracked objects:
 14054 ;;		On entry : 0/0
 14055 ;;		On exit  : 3F/39
 14056 ;;		Unchanged: 0/0
 14057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14062 ;;Total ram usage:        0 bytes
 14063 ;; Hardware stack levels used:    1
 14064 ;; This function calls:
 14065 ;;		Nothing
 14066 ;; This function is called by:
 14067 ;;		Interrupt level 2
 14068 ;; This function uses a non-reentrant model
 14069 ;;
 14070                           
 14071                           	psect	text100
 14072  0058D8                     __ptext100:
 14073                           	opt callstack 0
 14074  0058D8                     _DMA1_DMAOR_ISR:
 14075                           	opt callstack 20
 14076                           
 14077                           ; BSR set to: 57
 14078                           ;incstack = 0
 14079  0058D8  EE13  F084         	lfsr	1,___inthi_sp
 14080                           
 14081                           ;mcc_generated_files/dma1.c: 157:  PIR2bits.DMA1ORIF = 0;
 14082  0058DC  0139               	movlb	57	; () banked
 14083  0058DE  95A2               	bcf	162,2,b	;volatile
 14084                           
 14085                           ;mcc_generated_files/dma1.c: 159:  LATEbits.LATE1 = 0;
 14086  0058E0  92BE               	bcf	16318,1,c	;volatile
 14087                           
 14088                           ; BSR set to: 57
 14089  0058E2  0011               	retfie		f
 14090  0058E4                     __end_of_DMA1_DMAOR_ISR:
 14091                           	opt callstack 0
 14092                           
 14093                           ;
 14094                           ; Interrupt Vector Table @ 0x8
 14095                           ;
 14096                           
 14097                           	psect	ivt0x8
 14098  000008                     __pivt0x8:
 14099                           	opt callstack 0
 14100  000008                     ivt0x8_base:
 14101                           	opt callstack 0
 14102                           
 14103                           ; Vector 0 : SWINT
 14104  000008  164B               	dw	_Default_ISR shr (0+2)
 14105                           
 14106                           ; Vector 1 : HLVD
 14107  00000A  164B               	dw	_Default_ISR shr (0+2)
 14108                           
 14109                           ; Vector 2 : OSF
 14110  00000C  164B               	dw	_Default_ISR shr (0+2)
 14111                           
 14112                           ; Vector 3 : CSW
 14113  00000E  164B               	dw	_Default_ISR shr (0+2)
 14114                           
 14115                           ; Vector 4 : NVM
 14116  000010  164B               	dw	_Default_ISR shr (0+2)
 14117                           
 14118                           ; Vector 5 : SCAN
 14119  000012  164B               	dw	_Default_ISR shr (0+2)
 14120                           
 14121                           ; Vector 6 : CRC
 14122  000014  164B               	dw	_Default_ISR shr (0+2)
 14123                           
 14124                           ; Vector 7 : IOC
 14125  000016  164B               	dw	_Default_ISR shr (0+2)
 14126                           
 14127                           ; Vector 8 : INT0
 14128  000018  1626               	dw	_INT0_ISR shr (0+2)
 14129                           
 14130                           ; Vector 9 : ZCD
 14131  00001A  164B               	dw	_Default_ISR shr (0+2)
 14132                           
 14133                           ; Vector 10 : AD
 14134  00001C  14D9               	dw	_ADCC_ISR shr (0+2)
 14135                           
 14136                           ; Vector 11 : ADT
 14137  00001E  164B               	dw	_Default_ISR shr (0+2)
 14138                           
 14139                           ; Vector 12 : CMP1
 14140  000020  164B               	dw	_Default_ISR shr (0+2)
 14141                           
 14142                           ; Vector 13 : SMT1
 14143  000022  164B               	dw	_Default_ISR shr (0+2)
 14144                           
 14145                           ; Vector 14 : SMT1PRA
 14146  000024  164B               	dw	_Default_ISR shr (0+2)
 14147                           
 14148                           ; Vector 15 : SMT1PRW
 14149  000026  164B               	dw	_Default_ISR shr (0+2)
 14150                           
 14151                           ; Vector 16 : DMA1SCNT
 14152  000028  1632               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 14153                           
 14154                           ; Vector 17 : DMA1DCNT
 14155  00002A  163C               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 14156                           
 14157                           ; Vector 18 : DMA1OR
 14158  00002C  1636               	dw	_DMA1_DMAOR_ISR shr (0+2)
 14159                           
 14160                           ; Vector 19 : DMA1A
 14161  00002E  163F               	dw	_DMA1_DMAA_ISR shr (0+2)
 14162                           
 14163                           ; Vector 20 : SPI1RX
 14164  000030  164B               	dw	_Default_ISR shr (0+2)
 14165                           
 14166                           ; Vector 21 : SPI1TX
 14167  000032  164B               	dw	_Default_ISR shr (0+2)
 14168                           
 14169                           ; Vector 22 : SPI1
 14170  000034  164B               	dw	_Default_ISR shr (0+2)
 14171                           
 14172                           ; Vector 23 : I2C1RX
 14173  000036  164B               	dw	_Default_ISR shr (0+2)
 14174                           
 14175                           ; Vector 24 : I2C1TX
 14176  000038  164B               	dw	_Default_ISR shr (0+2)
 14177                           
 14178                           ; Vector 25 : I2C1
 14179  00003A  164B               	dw	_Default_ISR shr (0+2)
 14180                           
 14181                           ; Vector 26 : I2C1E
 14182  00003C  164B               	dw	_Default_ISR shr (0+2)
 14183                           
 14184                           ; Vector 27 : U1RX
 14185  00003E  1584               	dw	_UART1_rx_vect_isr shr (0+2)
 14186                           
 14187                           ; Vector 28 : U1TX
 14188  000040  157A               	dw	_UART1_tx_vect_isr shr (0+2)
 14189                           
 14190                           ; Vector 29 : U1E
 14191  000042  164B               	dw	_Default_ISR shr (0+2)
 14192                           
 14193                           ; Vector 30 : U1
 14194  000044  164B               	dw	_Default_ISR shr (0+2)
 14195                           
 14196                           ; Vector 31 : TMR0
 14197  000046  164B               	dw	_Default_ISR shr (0+2)
 14198                           
 14199                           ; Vector 32 : TMR1
 14200  000048  164B               	dw	_Default_ISR shr (0+2)
 14201                           
 14202                           ; Vector 33 : TMR1G
 14203  00004A  164B               	dw	_Default_ISR shr (0+2)
 14204                           
 14205                           ; Vector 34 : TMR2
 14206  00004C  164B               	dw	_Default_ISR shr (0+2)
 14207                           
 14208                           ; Vector 35 : CCP1
 14209  00004E  164B               	dw	_Default_ISR shr (0+2)
 14210                           
 14211                           ; Vector 36 : Undefined
 14212  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 14213                           
 14214                           ; Vector 37 : NCO1
 14215  000052  164B               	dw	_Default_ISR shr (0+2)
 14216                           
 14217                           ; Vector 38 : CWG1
 14218  000054  164B               	dw	_Default_ISR shr (0+2)
 14219                           
 14220                           ; Vector 39 : CLC1
 14221  000056  164B               	dw	_Default_ISR shr (0+2)
 14222                           
 14223                           ; Vector 40 : INT1
 14224  000058  162A               	dw	_INT1_ISR shr (0+2)
 14225                           
 14226                           ; Vector 41 : CMP2
 14227  00005A  164B               	dw	_Default_ISR shr (0+2)
 14228                           
 14229                           ; Vector 42 : DMA2SCNT
 14230  00005C  164B               	dw	_Default_ISR shr (0+2)
 14231                           
 14232                           ; Vector 43 : DMA2DCNT
 14233  00005E  164B               	dw	_Default_ISR shr (0+2)
 14234                           
 14235                           ; Vector 44 : DMA2OR
 14236  000060  164B               	dw	_Default_ISR shr (0+2)
 14237                           
 14238                           ; Vector 45 : DMA2A
 14239  000062  164B               	dw	_Default_ISR shr (0+2)
 14240                           
 14241                           ; Vector 46 : I2C2RX
 14242  000064  164B               	dw	_Default_ISR shr (0+2)
 14243                           
 14244                           ; Vector 47 : I2C2TX
 14245  000066  164B               	dw	_Default_ISR shr (0+2)
 14246                           
 14247                           ; Vector 48 : I2C2
 14248  000068  164B               	dw	_Default_ISR shr (0+2)
 14249                           
 14250                           ; Vector 49 : I2C2E
 14251  00006A  164B               	dw	_Default_ISR shr (0+2)
 14252                           
 14253                           ; Vector 50 : U2RX
 14254  00006C  1598               	dw	_UART2_rx_vect_isr shr (0+2)
 14255                           
 14256                           ; Vector 51 : U2TX
 14257  00006E  158E               	dw	_UART2_tx_vect_isr shr (0+2)
 14258                           
 14259                           ; Vector 52 : U2E
 14260  000070  164B               	dw	_Default_ISR shr (0+2)
 14261                           
 14262                           ; Vector 53 : U2
 14263  000072  164B               	dw	_Default_ISR shr (0+2)
 14264                           
 14265                           ; Vector 54 : TMR3
 14266  000074  164B               	dw	_Default_ISR shr (0+2)
 14267                           
 14268                           ; Vector 55 : TMR3G
 14269  000076  164B               	dw	_Default_ISR shr (0+2)
 14270                           
 14271                           ; Vector 56 : TMR4
 14272  000078  164B               	dw	_Default_ISR shr (0+2)
 14273                           
 14274                           ; Vector 57 : CCP2
 14275  00007A  164B               	dw	_Default_ISR shr (0+2)
 14276                           
 14277                           ; Vector 58 : Undefined
 14278  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 14279                           
 14280                           ; Vector 59 : CWG2
 14281  00007E  164B               	dw	_Default_ISR shr (0+2)
 14282                           
 14283                           ; Vector 60 : CLC2
 14284  000080  164B               	dw	_Default_ISR shr (0+2)
 14285                           
 14286                           ; Vector 61 : INT2
 14287  000082  162E               	dw	_INT2_ISR shr (0+2)
 14288                           
 14289                           ; Vector 62 : Undefined
 14290  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 14291                           
 14292                           ; Vector 63 : Undefined
 14293  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 14294                           
 14295                           ; Vector 64 : Undefined
 14296  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 14297                           
 14298                           ; Vector 65 : Undefined
 14299  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 14300                           
 14301                           ; Vector 66 : Undefined
 14302  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 14303                           
 14304                           ; Vector 67 : Undefined
 14305  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 14306                           
 14307                           ; Vector 68 : Undefined
 14308  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 14309                           
 14310                           ; Vector 69 : Undefined
 14311  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 14312                           
 14313                           ; Vector 70 : TMR5
 14314  000094  164B               	dw	_Default_ISR shr (0+2)
 14315                           
 14316                           ; Vector 71 : TMR5G
 14317  000096  164B               	dw	_Default_ISR shr (0+2)
 14318                           
 14319                           ; Vector 72 : TMR6
 14320  000098  15A2               	dw	_TMR6_ISR shr (0+2)
 14321                           
 14322                           ; Vector 73 : CCP3
 14323  00009A  164B               	dw	_Default_ISR shr (0+2)
 14324                           
 14325                           ; Vector 74 : CWG3
 14326  00009C  164B               	dw	_Default_ISR shr (0+2)
 14327                           
 14328                           ; Vector 75 : CLC3
 14329  00009E  164B               	dw	_Default_ISR shr (0+2)
 14330                           
 14331                           ; Vector 76 : Undefined
 14332  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 14333                           
 14334                           ; Vector 77 : Undefined
 14335  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 14336                           
 14337                           ; Vector 78 : Undefined
 14338  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 14339                           
 14340                           ; Vector 79 : Undefined
 14341  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 14342                           
 14343                           ; Vector 80 : CCP4
 14344  0000A8  164B               	dw	_Default_ISR shr (0+2)
 14345                           
 14346                           ; Vector 81 : CLC4
 14347  0000AA  164B               	dw	_Default_ISR shr (0+2)
 14348  0000AC                     ivt0x8_undefint:
 14349                           	opt callstack 0
 14350  0000AC  00FF               	reset	
 14351                           
 14352                           	psect	text101
 14353  000000                     __ptext101:
 14354                           	opt callstack 0
 14355                           
 14356                           	psect	param0
 14357  0000                     
 14358                           	psect	temp
 14359  000037                     btemp:
 14360                           	opt callstack 0
 14361  000037                     	ds	32
 14362  0000                     wtemp0	set	btemp
 14363  0000                     wtemp1	set	btemp+2
 14364  0000                     wtemp2	set	btemp+4
 14365  0000                     wtemp3	set	btemp+6
 14366  0000                     wtemp4	set	btemp+8
 14367  0000                     wtemp5	set	btemp+10
 14368  0000                     wtemp8	set	btemp+1
 14369  0000                     ttemp0	set	btemp
 14370  0000                     ttemp1	set	btemp+3
 14371  0000                     ttemp2	set	btemp+6
 14372  0000                     ttemp3	set	btemp+9
 14373  0000                     ttemp5	set	btemp+1
 14374  0000                     ttemp6	set	btemp+4
 14375  0000                     ttemp7	set	btemp+8
 14376  0000                     ltemp0	set	btemp
 14377  0000                     ltemp1	set	btemp+4
 14378  0000                     ltemp2	set	btemp+8
 14379  0000                     lltemp0	set	btemp
 14380  0000                     lltemp1	set	btemp+8
 14381  0000                     lltemp2	set	btemp+16
 14382  0000                     lltemp3	set	btemp+24
 14383                           tosu	equ	0x3FFF
 14384                           tosh	equ	0x3FFE
 14385                           tosl	equ	0x3FFD
 14386                           stkptr	equ	0x3FFC
 14387                           pclatu	equ	0x3FFB
 14388                           pclath	equ	0x3FFA
 14389                           pcl	equ	0x3FF9
 14390                           tblptru	equ	0x3FF8
 14391                           tblptrh	equ	0x3FF7
 14392                           tblptrl	equ	0x3FF6
 14393                           tablat	equ	0x3FF5
 14394                           prodh	equ	0x3FF4
 14395                           prodl	equ	0x3FF3
 14396                           indf0	equ	0x3FEF
 14397                           postinc0	equ	0x3FEE
 14398                           postdec0	equ	0x3FED
 14399                           preinc0	equ	0x3FEC
 14400                           plusw0	equ	0x3FEB
 14401                           fsr0h	equ	0x3FEA
 14402                           fsr0l	equ	0x3FE9
 14403                           wreg	equ	0x3FE8
 14404                           indf1	equ	0x3FE7
 14405                           postinc1	equ	0x3FE6
 14406                           postdec1	equ	0x3FE5
 14407                           preinc1	equ	0x3FE4
 14408                           plusw1	equ	0x3FE3
 14409                           fsr1h	equ	0x3FE2
 14410                           fsr1l	equ	0x3FE1
 14411                           bsr	equ	0x3FE0
 14412                           indf2	equ	0x3FDF
 14413                           postinc2	equ	0x3FDE
 14414                           postdec2	equ	0x3FDD
 14415                           preinc2	equ	0x3FDC
 14416                           plusw2	equ	0x3FDB
 14417                           fsr2h	equ	0x3FDA
 14418                           fsr2l	equ	0x3FD9
 14419                           status	equ	0x3FD8


Data Sizes:
    Strings     99
    Constant    0
    Data        46
    BSS         592
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      2      63
    BANK0           160      0     155
    BANK1           256      0     224
    BANK2           256      0     198
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 79
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> V(BANK0[79]), 

    a	PTR const unsigned char  size(2) Largest target is 79
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> V(BANK0[79]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_7(CODE[3]), STR_6(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_5(CODE[19]), STR_4(CODE[6]), STR_3(CODE[10]), STR_2(CODE[12]), 
		 -> STR_1(CODE[61]), 

    s	PTR unsigned char  size(1) Largest target is 79
		 -> V(BANK0[79]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 79
		 -> V(BANK0[79]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S3930_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 79
		 -> V(BANK0[79]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 79
		 -> V(BANK0[79]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), ring_buf1(BANK2[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), ring_buf1(BANK2[67]), 

    s	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[19]), STR_4(CODE[6]), 
		 -> STR_3(CODE[10]), STR_2(CODE[12]), STR_1(CODE[61]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 61
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[19]), STR_4(CODE[6]), 
		 -> STR_3(CODE[10]), STR_2(CODE[12]), STR_1(CODE[61]), 

    cfmt	PTR unsigned char  size(1) Largest target is 61
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[19]), STR_4(CODE[6]), 
		 -> STR_3(CODE[10]), STR_2(CODE[12]), STR_1(CODE[61]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), V(BANK0[79]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), V(BANK0[79]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), V(BANK0[79]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    byte_block	PTR unsigned char  size(1) Largest target is 39
		 -> H10(BANK0[39]), 

    k	PTR unsigned char  size(1) Largest target is 39
		 -> H10(BANK0[39]), 

    t_link	PTR enum E16164 size(1) Largest target is 79
		 -> V(BANK0[79]), 

    r_link	PTR enum E16164 size(1) Largest target is 79
		 -> V(BANK0[79]), 

    byte_block	PTR unsigned char  size(1) Largest target is 39
		 -> H10.block(BANK0[10]), H10(BANK0[39]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), ring_buf1(BANK2[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), ring_buf1(BANK2[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 79
		 -> V(BANK0[79]), 

    S1989spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK2[67]), 

    S1989spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK2[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0   24620
                  _SYSTEM_Initialize
                        _UART1_Write
                     _block_checksum
                 _eaDogM_WriteString
                       _init_display
                         _r_protocol
                          _secs_send
                            _sprintf
                         _t_protocol
                     _wait_lcd_check
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_check                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1     400
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             35     9     26    9866
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _secs_send                                            7     4      3     625
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (2) _block_checksum                                       7     4      3     114
 ---------------------------------------------------------------------------------
 (2) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1     532
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                       _run_checksum
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteString                                   1     0      1   11027
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (2) _printf                                               7     4      3    9641
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    9542
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           41    35      6    9255
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (6) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (5) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (5) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (9) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     9      1     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     221
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      22
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (12) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (12) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TMR6_ISR                                            2     2      0      90
                                              0 COMRAM     2     2      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (12) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _UART1_Write
   _block_checksum
   _eaDogM_WriteString
     _printf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _ringBufS_flush
       _memset
     _start_lcd
     _strlen
     _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _run_checksum
   _secs_send
     _UART1_Write
     _UART1_is_tx_ready
     _UART1_put_buffer
     _block_checksum
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
   _wait_lcd_check
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C6       9       77.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      E0       7       87.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9B       5       96.9%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      2      3F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     280      58        0.0%
DATA                 0      0     280       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Mar  7 00:32:40 2019

                    _SPI1_Exchange8bit 57BA                                      _V 0085  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
                          __CFG_LVP$ON 000000                                    _H10 00D4  
                                  l190 586C                                    l713 5334  
                                  l568 51C4                                    l579 5172  
                                  l597 5308                                    l845 57C8  
                                  _GIE 01FE97                                    _abs 50D2  
                                  _pad 437A                __size_of_PMD_Initialize 0014  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 56F2                           _run_checksum 538E  
                   _UART1_Transmit_ISR 52E2                          __CFG_BBEN$OFF 000000  
                        _INT1_CallBack 5714                           __CFG_ZCD$OFF 000000  
                                 l1132 30C2                                   l1205 4F9C  
                                 l1141 3144                                   l1127 31F0  
                                 l1322 4952                                   l1500 278A  
                                 l1404 4224                                   l1326 4BAA  
                                 l1600 26A2                                   l2323 40B2  
                                 l1428 4216                                   l1527 35E8  
                                 l2409 4CB2                                   l1378 3C9A  
                                 l2371 4590                                   l2292 5112  
                                 l1548 2B70                                   l4302 4CA2  
                                 l1487 43D6                                   l4330 389C  
                                 l4234 4CE2                                   l6002 4466  
                                 l2299 3EAC                                   l4324 3856  
                                 l4236 4D04                                   l6100 365A  
                                 l5230 4F7C                                   l4342 396E  
                                 l4318 3802                                   l6030 27C4  
                                 l6022 277A                                   l6110 36F8  
                                 l5214 5192                                   l4280 5102  
                                 l6104 368A                                   l5216 5194  
                                 l5240 47BE                                   l5226 4F52  
                                 l4610 3F60                                   l4602 3F1C  
                                 l4370 3B06                                   l4362 3A7E  
                                 l6034 27E2                                   l6114 3724  
                                 l6210 20D4                                   l4612 3F66  
                                 l6044 29F4                                   l6132 2B60  
                                 l5236 4766                                   l5500 41C2  
                                 l4614 3FA2                                   l6118 3760  
                                 l6302 2638                                   l6230 20FE  
                                 l6222 20E0                                   l6214 20D8  
                                 l6206 20BE                                   l5166 519C  
                                 l5510 4210                                   l5360 5330  
                                 l4608 3F48                                   l6064 2AA6  
                                 l6080 356A                                   l6152 2C36  
                                 l6144 2BD6                                   l6208 20C0  
                                 l6232 214E                                   l5280 539A  
                                 l5370 57B6                                   l5338 5304  
                                 l4618 4008                                   l4378 3BB2  
                                 l6138 2B9A                                   l6250 2222  
                                 l6226 20E4                                   l6218 20DC  
                                 l5348 5796                                   l4628 40A2  
                                 l6068 2AE2                                   l6308 2654  
                                 l6340 3368                                   l5532 3CC0  
                                 l5516 3C64                                   l5196 535C  
                                 l5508 41F2                                   l4398 502C  
                                 l6246 21EA                                   l6334 32AA  
                                 l5294 56C8                                   l5550 3D14  
                                 l5622 426C                                   l6096 361E  
                                 l6192 2E9C                                   l6168 2D2C  
                                 l6176 2DB2                                   l6248 2210  
                                 l5640 42CC                                   l5632 42AE  
                                 l5616 424C                                   l6504 2F00  
                                 l4594 3EA8                                   l6354 3480  
                                 l6346 33D2                                   l5562 3D7E  
                                 l5554 3D2E                                   l5538 3CE0  
                                 l5650 430C                                   l5634 42BA  
                                 l6506 2F06                                   l6292 25E0  
                                 l6268 23C6                                   l5652 4310  
                                 l5660 4368                                   l6540 3114  
                                 l6532 30CA                                   l6278 246E  
                                 l6366 4AA4                                   l4790 4FAC  
                                 l5590 3E24                                   l5574 3DEE  
                                 l5566 3DAA                                   l5558 3D52  
                                 l5654 4318                                   l6368 4AE4  
                                 l6472 4850                                   l5592 3E2C  
                                 l5496 41A8                                   l5488 4120  
                                 l5648 42FE                                   l6560 3176  
                                 l6544 311C                                   l6298 2634  
                                 l5586 3E12                                   l5578 3DF2  
                                 l5658 4326                                   l5588 3E20  
                                 l5596 3E3A                                   l6572 31BE  
                                 l6548 3134                                   l5598 3E7C  
                                 l6558 3172                                   l5982 4A42  
                                 l5968 44BE                                   l5992 43CE  
                                 l5978 4A04                                   l5994 43E0  
                                 l5988 43A6                                   l5998 441C  
                                 STR_1 2001                                   STR_2 2032  
                                 STR_3 2051                                   STR_4 205B  
                                 STR_5 203E                                   STR_6 2061  
                                 u2010 5276                                   u2100 5150  
                                 u2020 5278                                   u2110 5152  
                                 u2200 3852                                   u2120 4C60  
                                 u2130 4C62                                   u2211 385C  
                                 u2220 3896                                   u2300 3A78  
                                 _LATA 003FBA                                   u2150 52D6  
                                 u2230 38C8                                   u2070 50E6  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 u2160 52D8                                   u2400 5008  
                                 u2320 3ACE                                   u4000 2A4E  
                                 u2080 52A6                                   _LATD 003FBD  
                                 u4001 2A4C                                   _LATE 003FBE  
                                 u2410 5028                                   u2250 39A6  
                                 u2330 3B00                                   u4010 2A62  
                                 u2090 52A8                                   _LATF 003FBF  
                                 u2180 37FC                                   u2340 3B32  
                                 u4020 2A66                                   u3150 4E1E  
                                 u2270 39F8                                   u4110 3680  
                                 u2360 3BEA                                   u4040 2A7C  
                                 u4200 2C82                                   u4210 2C84  
                                 u2380 3C3C                                   u4140 3786  
                                 u4300 2E28                                   u3420 411A  
                                 u4310 2E2C                                   u4230 2CE2  
                                 u3175 4E52                                   u3176 4E54  
                                 u3168 4E20                                   u4240 2CE4  
                                 u4160 2B46                                   u4400 2290  
                                 u2900 404E                                   u4260 2DAE  
                                 u4420 22E0                                   u4270 2DCE  
                                 u4190 2C2E                                   u4510 34F4  
                                 u4281 2DFE                                   u4265 2D90  
                                 u3810 44B2                                   u4290 2E14  
                                 u4450 24BE                                   u3650 5892  
                                 _T6PR 003F93                                   u4291 2E12  
                                 u3900 26DC                                   u4380 2268  
                                 u4540 4840                                   _PMD0 0039C0  
                                 _PMD1 0039C1                                   u2870 3F18  
                                 u3830 452E                                   u3910 26DE  
                                 u4390 226A                                   _PMD2 0039C2  
                                 _PMD3 0039C3                                   _PMD4 0039C4  
                                 _PMD5 0039C5                                   u2890 404C  
                                 u3930 274E                                   _PMD6 0039C6  
                                 _PMD7 0039C7                                   u3950 2760  
                                 u3970 27B0                                   u3980 2A08  
                                 u3991 2A38                                   _PLLR 01CEE0  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                        _INT2_CallBack 5736                       __end_of_ADCC_ISR 538E  
                        __CFG_FCMEN$ON 000000                                   _dbuf 01C0  
                                 _atoi 3E8E                                   _main 2EE6  
                                 _dtoa 26AC                                   _prec 0024  
                                 _nout 0020                                   fsr0h 003FEA  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 34FE                                   btemp 0037  
                                 _xtoa 2B2C      __size_of_INT2_SetInterruptHandler 0028  
                                 prodh 003FF4                                   prodl 003FF3  
                                 start 00AE              __end_of_SPI1_Exchange8bit 57D8  
                        __CFG_CSWEN$ON 000000                      _UART1_rx_vect_isr 5610  
                         ___param_bank 000000             __size_of_UART1_is_rx_ready 0008  
                   ?_UART1_rx_vect_isr 005E             __size_of_UART1_is_tx_ready 0008  
                     __end_of_INT0_ISR 58A6                       __end_of_INT1_ISR 58B6  
                     __end_of_INT2_ISR 58C6         __size_of_OSCILLATOR_Initialize 0016  
             __end_of_ringBufS_put_dma 495A          __end_of_OSCILLATOR_Initialize 5872  
                                PRLOCK 0039EF                        __end_of___aodiv 3A20  
                                _ADCAP 003EF5                                  _ADACT 003EFE  
                                _ADCLK 003EFF                        __end_of___aomod 3C60  
                                _ADPCH 003EF1                                  _ADREF 003EFD  
                        __CFG_WDTE$OFF 000000                                  _ADRPT 003EEC  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
                                _U1UIR 003DF8                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 005E                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 592C  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 55E8  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 56AE                           _DMA1CON1bits 003BFD  
                   r_protocol@rxData_l 002A                                  _flags 0026  
                                _fputc 448E             __size_of_send_lcd_cmd_long 0028  
                      __end_of_isalpha 515C                                  _fputs 49F4  
                      __end_of_isdigit 52E2                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 005E                                  _width 0022  
                                _putch 582C                        __end_of_islower 5282  
                      __end_of_isspace 503C               _INT1_SetInterruptHandler 5546  
                      __end_of_isupper 52B2                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 0037                                  ltemp1 003B  
                                ltemp2 003F               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  ttemp0 0037  
                                ttemp1 003A                                  ttemp2 003D  
                                ttemp3 0040                                  ttemp5 0038  
                                ttemp6 003B                                  ttemp7 003F  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 54CE  
          _UART1_SetRxInterruptHandler 54A6                                  wtemp0 0037  
                                wtemp1 0039                                  wtemp2 003B  
                                wtemp3 003D                                  wtemp4 003F  
                                wtemp5 0041                                  wtemp8 0038  
                      __end_of_sprintf 474C                        __end_of_toupper 4CBC  
                  ??_UART1_tx_vect_isr 005E              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 5636               __size_of_SPI1_Initialize 0016  
                __end_of_ringBufS_init 542E                        __initialization 4BB2  
                    _UART2_rx_vect_isr 5660                           __end_of_atoi 40BC  
                         __end_of_main 3212                           __end_of_dtoa 2B2C  
                         __end_of_stoa 37A0                           __end_of_xtoa 2EE6  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005E  
                        __activetblptr 000003              __size_of_DMA1_DMASCNT_ISR 000E  
 __size_of_UART1_SetTxInterruptHandler 0028                    ??_UART2_rx_vect_isr 005E  
            __end_of_UART1_tx_vect_isr 560E                                 INTCON0 003FD2  
 __size_of_UART2_SetRxInterruptHandler 0028                         __CFG_MVECEN$ON 000000  
                      _TMR6_Initialize 54CE                       _UART1_Initialize 4DAA  
                    _UART2_tx_vect_isr 5638                     _UART2_Transmit_ISR 530E  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                                 _ADLTHH 003EDF  
                               _ADLTHL 003EDE                                 _ADPREH 003EF7  
                               _ADPREL 003EF6                                 _DMA1PR 0039F3  
                               _DMA2PR 0039F4                                 _ADSTAT 003EFC  
                               _ADUTHH 003EE1                                 _ADUTHL 003EE0  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 005E                                 _MD1SRC 003CFC  
                               _U1CON0 003DF2                                 _U1CON1 003DF3  
                               _U1CON2 003DF4                    __size_of_UART1_Read 003E  
                               _U1BRGH 003DF6                                 _U1FIFO 003DF7  
                               _U2CON0 003DDA                                 _U2CON1 003DDB  
                               _U1BRGL 003DF5                                 _U2CON2 003DDC  
                               _U2BRGH 003DDE                                 _U2FIFO 003DDF  
                               _U2BRGL 003DDD                                 _MAINPR 0039F2  
                               _RA4PPS 003A04                                 _RA5PPS 003A05  
                               _RA6PPS 003A06                                 _RC3PPS 003A13  
                               _RB6PPS 003A0E                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                         __CFG_WDTCCS$SC 000000  
                               u140_48 5700                                 u142_48 5722  
                               u144_48 5744                                 u325_40 4F3E  
                               u325_46 4F40                                 _SCANPR 0039F7  
                               u339_48 5766                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
                               _OSCFRQ 0039DF                    ??_UART2_tx_vect_isr 005E  
            __end_of_UART2_rx_vect_isr 5686             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 58E4                       _UART2_Initialize 4ED6  
 __size_of_ADCC_SetADIInterruptHandler 0028                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 4B20                                 _memset 3212  
                               clear_0 4BFC                                 clear_1 4C08  
                               clear_2 4C14                                 clear_3 4C20  
                               _printf 4E74                     _eaDogM_WriteString 4804  
                            ?_ADCC_ISR 005E                                 _strlen 4CBC  
                   __size_of_TimerDone 0022                        _ADCC_Initialize 5088  
                       _PMD_Initialize 5872   __end_of_INT2_DefaultInterruptHandler 5938  
__size_of_INT2_DefaultInterruptHandler 0002           _INT2_DefaultInterruptHandler 5936  
                         __pdataCOMRAM 0057              __end_of_UART2_tx_vect_isr 565E  
                               lltemp0 0037                                 lltemp1 003F  
                               lltemp2 0047                                 lltemp3 004F  
                         __mediumconst 0000                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 4FEA                       __end_of_vfprintf 4B20  
                           _StartTimer 5216                        _CLC1_Initialize 56D0  
        __size_of_INTERRUPT_Initialize 0064                      _SYSTEM_Initialize 51D8  
                           __accesstop 0060                __end_of__initialization 4C32  
                            ?_INT0_ISR 005E                              ?_INT1_ISR 005E  
                            ?_INT2_ISR 005E              __end_of_CLKREF_Initialize 58EE  
                        ___rparam_used 000000             __size_of_UART1_rx_vect_isr 0026  
               __end_of_ringBufS_flush 4BB2                         __pcstackCOMRAM 005E  
                           ___inthi_sp 0C84                           __pidataBANK0 55BE  
                            ?_TMR6_ISR 005E                         ivt0x8_undefint 00AC  
                        __end_of_fputc 459A                          __end_of_fputs 4A8C  
                        __end_of_putch 5846                __end_of_TMR6_Initialize 54F6  
               __end_of_PMD_Initialize 5886                __size_of_block_checksum 00B8  
                           ??_ADCC_ISR 005E                  __end_of_TMR6_CallBack 577A  
          __size_of_EXT_INT_Initialize 004C             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 58FC       __end_of_INT2_SetInterruptHandler 5546  
             _UART2_RxInterruptHandler 0014              __end_of_SYSTEM_Initialize 5216  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                       _DSM_Initialize 5810                             __pbssBANK0 0060  
                           __pbssBANK1 0100                             __pbssBANK2 0200  
                _INT0_InterruptHandler 001D                             ??_INT0_ISR 005E  
                           ??_INT1_ISR 005E                             ??_INT2_ISR 005E  
                    __end_of_TimerDone 56D0                       _DMA1_DMADCNT_ISR 58F0  
            __size_of_UART1_put_buffer 002A             __size_of_UART2_rx_vect_isr 0026  
                              IVTBASEH 003FD6                                IVTBASEL 003FD5  
                              IVTBASEU 003FD7                  __end_of_wait_lcd_done 57F4  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 551E  
              __end_of_ADCC_Initialize 50D2                             ??_TMR6_ISR 005E  
                   __size_of_secs_send 0164                                _CLC1CON 003C74  
                              _CLC1POL 003C75                                _DMA1DSA 003BF0  
                              _DMA1DSZ 003BEE                                _DMA1SSA 003BF9  
                              _DMA1SSZ 003BF7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                                _MD1CARH 003CFE  
                              _MD1CARL 003CFD                      _UART1_Receive_ISR 577A  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
                              _NCO1CLK 003F3F                         ?_DMA1_DMAA_ISR 005E  
                     _DMA1_DMASCNT_ISR 58C8                                _NCO1CON 003F3E  
                              _U1ERRIE 003DFA                                _U1ERRIR 003DF9  
              __end_of_CLC1_Initialize 56F2                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                              _INT2PPS 003AC2                           ?_Default_ISR 005E  
                 __size_of_UART1_Write 003E             __size_of_UART2_tx_vect_isr 0026  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 0646  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
               __end_of_DSM_Initialize 582C                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
                   __end_of_UART1_Read 51D8      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000C  
                              __Hparam 0000                                __Lparam 0000  
             __end_of_UART1_Initialize 4E10                                ___aodiv 37A0  
                              ___aomod 3A20              __end_of_UART1_Receive_ISR 579A  
                         __psmallconst 2000                __size_of_wait_lcd_check 0010  
                 __end_of_init_display 4684                                __pcinit 4BB2  
                      __size_of_memset 02EC                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 2EE6                                __ptext1 57D8  
                              __ptext2 5886                                __ptext3 4220  
                              __ptext4 4684                                __ptext5 40BC  
                              __ptext6 474C                                __ptext7 533A  
                              __ptext8 5906                                __ptext9 3C60  
                    _UART2_Receive_ISR 579A                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 0084  
                              us228999 3A0A                                us406999 3510  
                              us239999 3C4E                                us418999 2BAC  
                _OSCILLATOR_Initialize 585C                           __size_of_abs 0046  
                              _r_block 0060                           __size_of_pad 0114  
                              us389999 26C6                                _isalpha 5118  
                              _isdigit 52B2                                _islower 5252  
                              _isspace 4FEA                        __CFG_WRTSAF$OFF 000000  
             __end_of_UART2_Initialize 4F34                                _isupper 5282  
           __size_of_SYSTEM_Initialize 003E                                _sprintf 4684  
                              _toupper 4C38                   end_of_initialization 4C32  
                    __end_of_secs_send 4220               _INT2_SetInterruptHandler 551E  
                           _r_protocol 3C60    __end_of_UART1_SetTxInterruptHandler 54A6  
          _UART1_SetTxInterruptHandler 547E    __end_of_UART2_SetRxInterruptHandler 547E  
          _UART2_SetRxInterruptHandler 5456                             _t_protocol 4220  
                    __end_of_vfpfcnvrt 26AC                              _SPI1TCNTL 003D12  
                              postdec0 003FED                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 003C                      __end_of_start_lcd 592A  
            __end_of_UART2_Receive_ISR 57BA                         wdtdelay@dcount 0001  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 0000  
                       _block_checksum 474C                  _INT1_InterruptHandler 001A  
             _TMR6_SetInterruptHandler 54F6   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 002A    __end_of_ADCC_SetADIInterruptHandler 55BE  
          _ADCC_SetADIInterruptHandler 5596                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 4D40  
                      _SPI1_Initialize 5846                       _UART1_put_buffer 533A  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                    __size_of_INT2_ISR 000E           __end_of_INTERRUPT_Initialize 4E74  
               __end_of_block_checksum 4804   __end_of_INT0_DefaultInterruptHandler 5934  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 5932  
           __size_of_UART1_Receive_ISR 0020                          __pidataCOMRAM 5916  
                    __size_of_TMR6_ISR 0026            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 34FE                         __end_of_printf 4ED6  
             __end_of_DMA1_DMADCNT_ISR 58FA                  __end_of_INT0_CallBack 5714  
                       __end_of_strlen 4D40                    start_initialization 4BB2  
      __size_of_PIN_MANAGER_Initialize 009A                            __end_of_abs 5118  
                __end_of_INT1_CallBack 5736                            __end_of_pad 448E  
                 __size_of_Default_ISR 0006                   __end_of_send_lcd_cmd 5406  
                           ivt0x8_base 0008                  __end_of_INT2_CallBack 5758  
                        _uart1RxBuffer 0140                          _uart2RxBuffer 0200  
                        _uart1TxBuffer 0180               __end_of_DMA1_DMASCNT_ISR 58D6  
                        _uart2TxBuffer 0100                         _DMA1_DMAOR_ISR 58D8  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 00AC                              _TimerDone 56AE  
                        _ringBufS_init 5406                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 00D4  
                       _wait_lcd_check 5886             __size_of_UART2_Receive_ISR 0020  
           __end_of_EXT_INT_Initialize 5088                        run_checksum@sum 0028  
              __end_of_DMA1_Initialize 4DAA                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 5596                          __pcstackBANK0 0000  
              __end_of_SPI1_Initialize 585C               _UART1_RxInterruptHandler 000E  
             _UART2_TxInterruptHandler 0011              __size_of_ringBufS_put_dma 00AA  
                         _init_display 459A                 __end_of_DMA1_DMAOR_ISR 58E4  
                _INT2_InterruptHandler 0017                  _TMR6_InterruptHandler 0005  
               __size_of_TMR6_CallBack 0022                 _PIN_MANAGER_Initialize 495A  
                 __end_of_wait_lcd_set 5924                 __end_of_wait_lcd_check 5896  
                            __ptext100 58D8                              __ptext101 0000  
                   __end_of_StartTimer 5252                      __size_of_wdtdelay 0058  
                    __size_of_vfprintf 0094                               _ADCC_ISR 5364  
                  __size_of_r_protocol 022E                 __CFG_BBSIZE$BBSIZE_512 000000  
                          __smallconst 2000                               _CLC1GLS0 003C7A  
                             _CLC1GLS1 003C7B                               _CLC1GLS2 003C7C  
                             _CLC1GLS3 003C7D                               _CLC1SEL0 003C76  
                             _CLC1SEL1 003C77                               _CLC1SEL2 003C78  
                             _CLC1SEL3 003C79                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA1SIRQ 003BFF                            _NCO1CONbits 003F3E  
                  __size_of_t_protocol 015A                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 010C                         __size_of_fputs 0098  
                             _NCO1ACCH 003F39                         __size_of_putch 001A  
                             _NCO1ACCL 003F38                               _NCO1ACCU 003F3A  
                 _INTERRUPT_Initialize 4E10                               _T6CLKCON 003F96  
                             _NCO1INCH 003F3C                               _NCO1INCL 003F3B  
                             _NCO1INCU 003F3D                        ?_DMA1_DMAOR_ISR 005E  
                             _INT0_ISR 5898                               _INT1_ISR 58A8  
                             _INT2_ISR 58B8                               _LATCbits 003FBC  
                             _LATEbits 003FBE      __size_of_INT1_SetInterruptHandler 0028  
                            _secs_send 40BC                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 0079                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR7bits 003987  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                              _ring_buf1 0283  
                            _ring_buf2 0240                               i2u180_48 537A  
                             _PIR1bits 0039A1                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               i2u371_48 564A  
                             i2u373_48 5672                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             i2u367_48 55FA                               _PIR5bits 0039A5  
                             i2u369_48 5622                               _PIR7bits 0039A7  
                             _PIR9bits 0039A9             __end_of_UART1_Transmit_ISR 530E  
                             _TMR6_ISR 5688                              _vfpfcnvrt 2066  
                         _SPI1INTFbits 003D1A                              _start_lcd 5924  
                        _TMR6_CallBack 5758               __end_of_UART1_put_buffer 5364  
                __size_of_send_lcd_cmd 0028                    __end_of_UART1_Write 519A  
             __size_of_TMR6_Initialize 0028                            _INTCON0bits 003FD2  
                            copy_data0 4BC6                              copy_data1 4BE8  
             _INT0_SetInterruptHandler 556E                 _uart1TxBufferRemaining 0034  
  __end_of_UART2_SetTxInterruptHandler 5456            _UART2_SetTxInterruptHandler 542E  
                             __Hparam0 0000                           _uart1RxCount 0031  
                         _uart2RxCount 002B                               __Lparam0 0000  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                   __end_of_run_checksum 53B6  
                   __CFG_BOREN$SBORDIS 000000                          _wait_lcd_done 57D8  
                         _send_lcd_cmd 53DE                       __size_of___aodiv 0280  
                     __size_of___aomod 0240                        _NCO1_Initialize 57F4  
                __end_of_DMA1_DMAA_ISR 5906   __size_of_UART1_SetRxInterruptHandler 0028  
                    ?_DMA1_DMADCNT_ISR 005E               __size_of_ADCC_Initialize 004A  
                     __size_of_isalpha 0044                       __size_of_isdigit 0030  
                             __pivt0x8 0008                       __size_of_islower 0030  
                     __size_of_isspace 0052                     ??_DMA1_DMADCNT_ISR 0000  
                             __ptext10 538E                               __ptext11 590E  
                             __ptext20 57BA                               __ptext12 515C  
                             __ptext21 5406                               __ptext13 519A  
                             __ptext30 2B2C                               __ptext22 4804  
                             __ptext14 56AE                               __ptext31 4C38  
                             __ptext23 591E                               __ptext15 5216  
                             __ptext40 448E                               __ptext32 5252  
                             __ptext24 5924                               __ptext16 459A  
                             __ptext41 582C                               __ptext33 5282  
                             __ptext25 4B20                               __ptext17 53B6  
                             __ptext50 4ED6                               __ptext42 48B0  
                             __ptext34 5118                               __ptext26 3212  
                             __ptext18 53DE                               __ptext51 542E  
                             __ptext43 50D2                               __ptext35 34FE  
                             __ptext27 4E74                               __ptext19 4F92  
                             __ptext60 495A                               __ptext52 5456  
                             __ptext44 3A20                               __ptext36 26AC  
                             __ptext28 4A8C                               __ptext61 585C  
                             __ptext53 4DAA                               __ptext45 37A0  
                             __ptext37 437A                               __ptext29 2066  
                             __ptext70 58E4                               __ptext62 57F4  
                             __ptext54 547E                               __ptext46 3E8E  
                             __ptext38 4CBC                               __ptext71 56D0  
                             __ptext63 4E10                               __ptext55 54A6  
                             __ptext47 4FEA                               __ptext39 49F4  
                             __ptext80 58B8                               __ptext72 5088  
                             __ptext64 503C                               __ptext56 54CE  
                             __ptext48 52B2                               __ptext81 5736  
                             __ptext73 5596                               __ptext65 551E  
                             __ptext57 54F6                               __ptext49 51D8  
                             __ptext90 5638                               __ptext82 5936  
                             __ptext74 5898                               __ptext66 5546  
                             __ptext58 5846                               __ptext91 530E  
                             __ptext83 592C                               __ptext75 56F2  
                             __ptext67 556E                               __ptext59 5872  
                             __ptext92 5660                               __ptext84 5364  
                             __ptext76 5932                               __ptext68 5810  
                             __ptext93 579A                               __ptext85 5938  
                             __ptext77 58A8                               __ptext69 4D40  
                             __ptext94 5688                               __ptext86 55E8  
                             __ptext78 5714                               __ptext95 5758  
                             __ptext87 52E2                               __ptext79 5934  
                             __ptext96 4F34                               __ptext88 5610  
                             __ptext97 58C8                               __ptext89 577A  
                             __ptext98 58F0                               __ptext99 58FC  
                     __size_of_isupper 0030               __size_of_CLC1_Initialize 0022  
                     __size_of_sprintf 00C8                       __size_of_toupper 0084  
                     _ringBufS_put_dma 48B0                          __size_of_atoi 022E  
                        __size_of_main 032C                          __size_of_dtoa 0480  
                __size_of_wait_lcd_set 0006                          __size_of_stoa 02A2  
                        __size_of_xtoa 03BA                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 005E                            _IVTLOCKbits 003FD4  
            _ADCC_ADI_InterruptHandler 0008                              stoa@F1139 0057  
                   ??_DMA1_DMASCNT_ISR 0000                               _spi_link 006D  
                             _wdtdelay 4F92             __end_of_UART2_Transmit_ISR 533A  
                             _vfprintf 4A8C                      _UART1_is_rx_ready 590E  
                          _UART1_Write 515C   __end_of_INT1_DefaultInterruptHandler 5936  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 5934  
                    _UART1_is_tx_ready 5906                          ??_Default_ISR 005E  
                   __end_of_r_protocol 3E8E                            _uart1RxHead 0033  
                          _uart1TxHead 0036                            _uart2RxHead 002D  
                          _uart1RxTail 0032                            _uart2TxHead 0030  
                          _uart1TxTail 0035                            _uart2RxTail 002C  
                          _uart2TxTail 002F                           _wait_lcd_set 591E  
                   _EXT_INT_Initialize 503C   __end_of_TMR6_DefaultInterruptHandler 4F92  
__size_of_TMR6_DefaultInterruptHandler 005E           _TMR6_DefaultInterruptHandler 4F34  
                   __end_of_t_protocol 437A   __end_of_ADCC_DefaultInterruptHandler 593A  
__size_of_ADCC_DefaultInterruptHandler 0002           _ADCC_DefaultInterruptHandler 5938  
                             intlevel2 0000                      _send_lcd_cmd_long 53B6  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 48B0  
              __end_of_NCO1_Initialize 5810                 __size_of_INT0_CallBack 0022  
                           _SPI1SCKPPS 003ADE                             _SPI1SDIPPS 003ADF  
            __end_of_UART1_is_rx_ready 5916                             _UART1_Read 519A  
               __size_of_INT1_CallBack 0022              __end_of_UART1_is_tx_ready 590E  
               __size_of_INT2_CallBack 0022                 _uart2TxBufferRemaining 002E  
     __end_of_INT1_SetInterruptHandler 556E              __size_of_UART1_Initialize 0066  
                     ??_DMA1_DMAOR_ISR 0000               _UART1_TxInterruptHandler 000B  
            __end_of_send_lcd_cmd_long 53DE                    __end_of_Default_ISR 5932  
       __end_of_PIN_MANAGER_Initialize 49F4                  __size_of_run_checksum 0028  
            __size_of_UART2_Initialize 005E  
